digraph graphname {
rankdir="LR";
314 [label="org.joda.time.base.BasePeriod.<clinit>()"]
2920 [label="org.joda.time.DateTimeFieldType.<clinit>()"]
2966 [label="org.joda.time.DateTimeZone.<clinit>()"]
3043 [label="org.joda.time.Duration.<clinit>()"]
3830 [label="org.joda.time.Period.<clinit>()"]
2929 [label="org.joda.time.DateTimeUtils.<clinit>()"]
3903 [label="org.joda.time.PeriodType.<clinit>()"]
3075 [label="org.joda.time.DurationFieldType.<clinit>()"]
3176 [label="org.joda.time.LocalDate.<clinit>()"]
4115 [label="org.joda.time.YearMonthDay.<clinit>()"]
3433 [label="org.joda.time.LocalTime.<clinit>()"]
3967 [label="org.joda.time.TimeOfDay.<clinit>()"]
2904 [label="org.joda.time.DateTimeComparator.<clinit>()"]
2960 [label="org.joda.time.DateTimeZone$LazyInit.<clinit>()"]
3007 [label="org.joda.time.Days.<clinit>()"]
4024 [label="org.joda.time.Weeks.<clinit>()"]
3078 [label="org.joda.time.Hours.<clinit>()"]
3496 [label="org.joda.time.Minutes.<clinit>()"]
3929 [label="org.joda.time.Seconds.<clinit>()"]
3534 [label="org.joda.time.MonthDay.<clinit>()"]
3576 [label="org.joda.time.Months.<clinit>()"]
4020 [label="org.joda.time.UTCDateTimeZone.<clinit>()"]
4059 [label="org.joda.time.YearMonth.<clinit>()"]
4164 [label="org.joda.time.Years.<clinit>()"]
1800 [label="org.joda.time.format.DateTimeFormat.<clinit>()"]
2112 [label="org.joda.time.format.FormatUtils.<clinit>()"]
1778 [label="org.joda.time.format.DateTimeFormat$StyleFormatter.<clinit>()"]
1959 [label="org.joda.time.format.DateTimeFormatterBuilder$TextField.<clinit>()"]
2003 [label="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId.<clinit>()"]
2128 [label="org.joda.time.format.ISODateTimeFormat$Constants.<clinit>()"]
2386 [label="org.joda.time.format.PeriodFormatterBuilder.<clinit>()"]
2261 [label="org.joda.time.format.PeriodFormat.<clinit>()"]
2312 [label="org.joda.time.format.PeriodFormatterBuilder$RegExAffix.<clinit>()"]
2361 [label="org.joda.time.format.PeriodFormatterBuilder$Literal.<clinit>()"]
999 [label="org.joda.time.chrono.ISOChronology.<clinit>()"]
932 [label="org.joda.time.chrono.GJLocaleSymbols.<clinit>()"]
525 [label="org.joda.time.chrono.BasicChronology.<clinit>()"]
736 [label="org.joda.time.chrono.BuddhistChronology.<clinit>()"]
856 [label="org.joda.time.chrono.GJChronology.<clinit>()"]
758 [label="org.joda.time.chrono.CopticChronology.<clinit>()"]
770 [label="org.joda.time.chrono.EthiopicChronology.<clinit>()"]
985 [label="org.joda.time.chrono.GregorianChronology.<clinit>()"]
1051 [label="org.joda.time.chrono.JulianChronology.<clinit>()"]
1011 [label="org.joda.time.chrono.ISOYearOfEraDateTimeField.<clinit>()"]
1027 [label="org.joda.time.chrono.IslamicChronology.<clinit>()"]
1611 [label="org.joda.time.field.MillisDurationField.<clinit>()"]
1235 [label="org.joda.time.convert.CalendarConverter.<clinit>()"]
1284 [label="org.joda.time.convert.DateConverter.<clinit>()"]
1287 [label="org.joda.time.convert.LongConverter.<clinit>()"]
1292 [label="org.joda.time.convert.NullConverter.<clinit>()"]
1299 [label="org.joda.time.convert.ReadableDurationConverter.<clinit>()"]
1304 [label="org.joda.time.convert.ReadableInstantConverter.<clinit>()"]
1309 [label="org.joda.time.convert.ReadableIntervalConverter.<clinit>()"]
1317 [label="org.joda.time.convert.ReadablePartialConverter.<clinit>()"]
1322 [label="org.joda.time.convert.ReadablePeriodConverter.<clinit>()"]
1326 [label="org.joda.time.convert.StringConverter.<clinit>()"]
2418 [label="org.joda.time.tz.CachedDateTimeZone.<clinit>()"]
2477 [label="org.joda.time.tz.DateTimeZoneBuilder$RuleSet.<clinit>()"]
2657 [label="org.joda.time.tz.ZoneInfoLogger.<clinit>()"]
2575 [label="org.joda.time.tz.UTCProvider.<clinit>()"]
2559 [label="org.joda.time.tz.DefaultNameProvider.<initblock>()"]
653 [label="java.lang.Math.abs(int)"]
655 [label="java.lang.Math.abs(long)"]
3146 [label="org.joda.time.Interval.abuts(org.joda.time.ReadableInterval)"]
2051 [label="java.util.ArrayList.add(E)"]
2008 [label="java.util.List.add(E)"]
2294 [label="java.util.Set.add(E)"]
2369 [label="java.util.TreeSet.add(E)"]
3603 [label="org.joda.time.MutableDateTime$Property.add(int)"]
3752 [label="org.joda.time.MutablePeriod.add(int,int,int,int,int,int,int,int)"]
3633 [label="org.joda.time.MutableDateTime.add(long)"]
3765 [label="org.joda.time.MutablePeriod.add(long)"]
3606 [label="org.joda.time.MutableDateTime$Property.add(long)"]
797 [label="org.joda.time.DateTimeField.add(long,int)"]
481 [label="org.joda.time.DurationField.add(long,int)"]
719 [label="org.joda.time.chrono.BasicYearDateTimeField.add(long,int)"]
970 [label="org.joda.time.chrono.GJYearOfEraDateTimeField.add(long,int)"]
700 [label="org.joda.time.chrono.BasicWeekyearDateTimeField.add(long,int)"]
651 [label="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,int)"]
796 [label="org.joda.time.chrono.GJChronology$CutoverField.add(long,int)"]
844 [label="org.joda.time.chrono.GJChronology$ImpreciseCutoverField.add(long,int)"]
852 [label="org.joda.time.chrono.GJChronology$LinkedDurationField.add(long,int)"]
1015 [label="org.joda.time.chrono.ISOYearOfEraDateTimeField.add(long,int)"]
1092 [label="org.joda.time.chrono.LimitChronology$LimitDurationField.add(long,int)"]
1101 [label="org.joda.time.chrono.LimitChronology$LimitDateTimeField.add(long,int)"]
1163 [label="org.joda.time.chrono.ZonedChronology$ZonedDurationField.add(long,int)"]
1182 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.add(long,int)"]
1749 [label="org.joda.time.field.UnsupportedDurationField.add(long,int)"]
1706 [label="org.joda.time.field.UnsupportedDateTimeField.add(long,int)"]
1647 [label="org.joda.time.field.PreciseDurationField.add(long,int)"]
1759 [label="org.joda.time.field.ZeroIsMaxDateTimeField.add(long,int)"]
1626 [label="org.joda.time.field.OffsetDateTimeField.add(long,int)"]
1574 [label="org.joda.time.field.DividedDateTimeField.add(long,int)"]
1600 [label="org.joda.time.field.ImpreciseDateTimeField.add(long,int)"]
1425 [label="org.joda.time.field.BaseDateTimeField.add(long,int)"]
1504 [label="org.joda.time.field.DelegatedDateTimeField.add(long,int)"]
1480 [label="org.joda.time.field.DecoratedDurationField.add(long,int)"]
1558 [label="org.joda.time.field.DelegatedDurationField.add(long,int)"]
1673 [label="org.joda.time.field.ScaledDurationField.add(long,int)"]
1603 [label="org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.add(long,int)"]
1616 [label="org.joda.time.field.MillisDurationField.add(long,int)"]
799 [label="org.joda.time.DateTimeField.add(long,long)"]
483 [label="org.joda.time.DurationField.add(long,long)"]
721 [label="org.joda.time.chrono.BasicYearDateTimeField.add(long,long)"]
971 [label="org.joda.time.chrono.GJYearOfEraDateTimeField.add(long,long)"]
702 [label="org.joda.time.chrono.BasicWeekyearDateTimeField.add(long,long)"]
654 [label="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,long)"]
798 [label="org.joda.time.chrono.GJChronology$CutoverField.add(long,long)"]
845 [label="org.joda.time.chrono.GJChronology$ImpreciseCutoverField.add(long,long)"]
853 [label="org.joda.time.chrono.GJChronology$LinkedDurationField.add(long,long)"]
1016 [label="org.joda.time.chrono.ISOYearOfEraDateTimeField.add(long,long)"]
1093 [label="org.joda.time.chrono.LimitChronology$LimitDurationField.add(long,long)"]
1102 [label="org.joda.time.chrono.LimitChronology$LimitDateTimeField.add(long,long)"]
1166 [label="org.joda.time.chrono.ZonedChronology$ZonedDurationField.add(long,long)"]
1185 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.add(long,long)"]
1750 [label="org.joda.time.field.UnsupportedDurationField.add(long,long)"]
1707 [label="org.joda.time.field.UnsupportedDateTimeField.add(long,long)"]
1648 [label="org.joda.time.field.PreciseDurationField.add(long,long)"]
1760 [label="org.joda.time.field.ZeroIsMaxDateTimeField.add(long,long)"]
1627 [label="org.joda.time.field.OffsetDateTimeField.add(long,long)"]
1575 [label="org.joda.time.field.DividedDateTimeField.add(long,long)"]
1602 [label="org.joda.time.field.ImpreciseDateTimeField.add(long,long)"]
1427 [label="org.joda.time.field.BaseDateTimeField.add(long,long)"]
1505 [label="org.joda.time.field.DelegatedDateTimeField.add(long,long)"]
1481 [label="org.joda.time.field.DecoratedDurationField.add(long,long)"]
1559 [label="org.joda.time.field.DelegatedDurationField.add(long,long)"]
1674 [label="org.joda.time.field.ScaledDurationField.add(long,long)"]
1604 [label="org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.add(long,long)"]
1617 [label="org.joda.time.field.MillisDurationField.add(long,long)"]
2732 [label="org.joda.time.Chronology.add(long,long,int)"]
484 [label="org.joda.time.chrono.BaseChronology.add(long,long,int)"]
3766 [label="org.joda.time.MutablePeriod.add(long,org.joda.time.Chronology)"]
3640 [label="org.joda.time.MutableDateTime.add(org.joda.time.DurationFieldType,int)"]
3751 [label="org.joda.time.MutablePeriod.add(org.joda.time.DurationFieldType,int)"]
3634 [label="org.joda.time.MutableDateTime.add(org.joda.time.ReadableDuration)"]
3764 [label="org.joda.time.MutablePeriod.add(org.joda.time.ReadableDuration)"]
3635 [label="org.joda.time.MutableDateTime.add(org.joda.time.ReadableDuration,int)"]
3761 [label="org.joda.time.MutablePeriod.add(org.joda.time.ReadableInterval)"]
1430 [label="org.joda.time.DateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)"]
656 [label="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)"]
800 [label="org.joda.time.chrono.GJChronology$CutoverField.add(org.joda.time.ReadablePartial,int,int[],int)"]
1708 [label="org.joda.time.field.UnsupportedDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)"]
659 [label="org.joda.time.field.BaseDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)"]
1506 [label="org.joda.time.field.DelegatedDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)"]
3636 [label="org.joda.time.MutableDateTime.add(org.joda.time.ReadablePeriod)"]
391 [label="org.joda.time.MutablePeriod.add(org.joda.time.ReadablePeriod)"]
3637 [label="org.joda.time.MutableDateTime.add(org.joda.time.ReadablePeriod,int)"]
275 [label="org.joda.time.Chronology.add(org.joda.time.ReadablePeriod,long,int)"]
482 [label="org.joda.time.chrono.BaseChronology.add(org.joda.time.ReadablePeriod,long,int)"]
1254 [label="org.joda.time.convert.ConverterSet.add(org.joda.time.convert.Converter,org.joda.time.convert.Converter[])"]
2025 [label="org.joda.time.format.DateTimeFormatterBuilder$Composite.addArrayToList(java.util.List,java.lang.Object[])"]
2385 [label="org.joda.time.format.PeriodFormatterBuilder$Composite.addArrayToList(java.util.List,java.lang.Object[])"]
3418 [label="org.joda.time.LocalTime$Property.addCopy(int)"]
3420 [label="org.joda.time.LocalTime$Property.addCopy(long)"]
2542 [label="org.joda.time.tz.DateTimeZoneBuilder.addCutover(int,char,int,int,int,boolean,int)"]
2594 [label="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.addCutover(org.joda.time.tz.DateTimeZoneBuilder,int)"]
3652 [label="org.joda.time.MutableDateTime.addDays(int)"]
3776 [label="org.joda.time.MutablePeriod.addDays(int)"]
1265 [label="org.joda.time.convert.ConverterManager.addDurationConverter(org.joda.time.convert.DurationConverter)"]
360 [label="org.joda.time.base.BasePeriod.addField(org.joda.time.DurationFieldType,int)"]
361 [label="org.joda.time.base.BasePeriod.addFieldInto(int[],org.joda.time.DurationFieldType,int)"]
3654 [label="org.joda.time.MutableDateTime.addHours(int)"]
3778 [label="org.joda.time.MutablePeriod.addHours(int)"]
3874 [label="org.joda.time.PeriodType.addIndexedField(org.joda.time.ReadablePeriod,int,int[],int)"]
1252 [label="org.joda.time.convert.ConverterManager.addInstantConverter(org.joda.time.convert.InstantConverter)"]
1273 [label="org.joda.time.convert.ConverterManager.addIntervalConverter(org.joda.time.convert.IntervalConverter)"]
3663 [label="org.joda.time.MutableDateTime.addMillis(int)"]
3784 [label="org.joda.time.MutablePeriod.addMillis(int)"]
3657 [label="org.joda.time.MutableDateTime.addMinutes(int)"]
3780 [label="org.joda.time.MutablePeriod.addMinutes(int)"]
3646 [label="org.joda.time.MutableDateTime.addMonths(int)"]
3772 [label="org.joda.time.MutablePeriod.addMonths(int)"]
3421 [label="org.joda.time.LocalTime$Property.addNoWrapToCopy(int)"]
3960 [label="org.joda.time.TimeOfDay$Property.addNoWrapToCopy(int)"]
938 [label="org.joda.time.chrono.GJLocaleSymbols.addNumerals(java.util.TreeMap,int,int,java.lang.Integer[])"]
1159 [label="org.joda.time.chrono.ZonedChronology$ZonedDurationField.addOffset(long)"]
1261 [label="org.joda.time.convert.ConverterManager.addPartialConverter(org.joda.time.convert.PartialConverter)"]
365 [label="org.joda.time.base.BasePeriod.addPeriod(org.joda.time.ReadablePeriod)"]
1269 [label="org.joda.time.convert.ConverterManager.addPeriodConverter(org.joda.time.convert.PeriodConverter)"]
366 [label="org.joda.time.base.BasePeriod.addPeriodInto(int[],org.joda.time.ReadablePeriod)"]
2599 [label="org.joda.time.tz.ZoneInfoCompiler$Rule.addRecurring(org.joda.time.tz.DateTimeZoneBuilder,java.lang.String)"]
2603 [label="org.joda.time.tz.ZoneInfoCompiler$RuleSet.addRecurring(org.joda.time.tz.DateTimeZoneBuilder,java.lang.String)"]
2593 [label="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.addRecurring(org.joda.time.tz.DateTimeZoneBuilder,java.lang.String,int,int,int)"]
2549 [label="org.joda.time.tz.DateTimeZoneBuilder.addRecurringSavings(java.lang.String,int,int,int,char,int,int,int,boolean,int)"]
2481 [label="org.joda.time.tz.DateTimeZoneBuilder$RuleSet.addRule(org.joda.time.tz.DateTimeZoneBuilder$Rule)"]
2602 [label="org.joda.time.tz.ZoneInfoCompiler$RuleSet.addRule(org.joda.time.tz.ZoneInfoCompiler$Rule)"]
3660 [label="org.joda.time.MutableDateTime.addSeconds(int)"]
3782 [label="org.joda.time.MutablePeriod.addSeconds(int)"]
936 [label="org.joda.time.chrono.GJLocaleSymbols.addSymbols(java.util.TreeMap,java.lang.String[],java.lang.Integer[])"]
2608 [label="org.joda.time.tz.ZoneInfoCompiler$Zone.addToBuilder(org.joda.time.tz.DateTimeZoneBuilder,java.util.Map)"]
2609 [label="org.joda.time.tz.ZoneInfoCompiler$Zone.addToBuilder(org.joda.time.tz.ZoneInfoCompiler$Zone,org.joda.time.tz.DateTimeZoneBuilder,java.util.Map)"]
2691 [label="org.joda.time.DateMidnight$Property.addToCopy(int)"]
2782 [label="org.joda.time.DateTime$Property.addToCopy(int)"]
3163 [label="org.joda.time.LocalDate$Property.addToCopy(int)"]
3279 [label="org.joda.time.LocalDateTime$Property.addToCopy(int)"]
3528 [label="org.joda.time.MonthDay$Property.addToCopy(int)"]
3791 [label="org.joda.time.Partial$Property.addToCopy(int)"]
3958 [label="org.joda.time.TimeOfDay$Property.addToCopy(int)"]
4053 [label="org.joda.time.YearMonth$Property.addToCopy(int)"]
4107 [label="org.joda.time.YearMonthDay$Property.addToCopy(int)"]
2693 [label="org.joda.time.DateMidnight$Property.addToCopy(long)"]
2784 [label="org.joda.time.DateTime$Property.addToCopy(long)"]
3281 [label="org.joda.time.LocalDateTime$Property.addToCopy(long)"]
2551 [label="org.joda.time.tz.DateTimeZoneBuilder.addTransition(java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$Transition)"]
3648 [label="org.joda.time.MutableDateTime.addWeeks(int)"]
3774 [label="org.joda.time.MutablePeriod.addWeeks(int)"]
3644 [label="org.joda.time.MutableDateTime.addWeekyears(int)"]
3607 [label="org.joda.time.MutableDateTime$Property.addWrapField(int)"]
973 [label="org.joda.time.DateTimeField.addWrapField(long,int)"]
722 [label="org.joda.time.chrono.BasicYearDateTimeField.addWrapField(long,int)"]
972 [label="org.joda.time.chrono.GJYearOfEraDateTimeField.addWrapField(long,int)"]
703 [label="org.joda.time.chrono.BasicWeekyearDateTimeField.addWrapField(long,int)"]
660 [label="org.joda.time.chrono.BasicMonthOfYearDateTimeField.addWrapField(long,int)"]
1017 [label="org.joda.time.chrono.ISOYearOfEraDateTimeField.addWrapField(long,int)"]
1103 [label="org.joda.time.chrono.LimitChronology$LimitDateTimeField.addWrapField(long,int)"]
1186 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.addWrapField(long,int)"]
1710 [label="org.joda.time.field.UnsupportedDateTimeField.addWrapField(long,int)"]
1641 [label="org.joda.time.field.PreciseDateTimeField.addWrapField(long,int)"]
1761 [label="org.joda.time.field.ZeroIsMaxDateTimeField.addWrapField(long,int)"]
1628 [label="org.joda.time.field.OffsetDateTimeField.addWrapField(long,int)"]
1576 [label="org.joda.time.field.DividedDateTimeField.addWrapField(long,int)"]
1656 [label="org.joda.time.field.RemainderDateTimeField.addWrapField(long,int)"]
1434 [label="org.joda.time.field.BaseDateTimeField.addWrapField(long,int)"]
1508 [label="org.joda.time.field.DelegatedDateTimeField.addWrapField(long,int)"]
975 [label="org.joda.time.DateTimeField.addWrapField(org.joda.time.ReadablePartial,int,int[],int)"]
974 [label="org.joda.time.chrono.GJYearOfEraDateTimeField.addWrapField(org.joda.time.ReadablePartial,int,int[],int)"]
1018 [label="org.joda.time.chrono.ISOYearOfEraDateTimeField.addWrapField(org.joda.time.ReadablePartial,int,int[],int)"]
1711 [label="org.joda.time.field.UnsupportedDateTimeField.addWrapField(org.joda.time.ReadablePartial,int,int[],int)"]
1762 [label="org.joda.time.field.ZeroIsMaxDateTimeField.addWrapField(org.joda.time.ReadablePartial,int,int[],int)"]
1438 [label="org.joda.time.field.BaseDateTimeField.addWrapField(org.joda.time.ReadablePartial,int,int[],int)"]
1509 [label="org.joda.time.field.DelegatedDateTimeField.addWrapField(org.joda.time.ReadablePartial,int,int[],int)"]
2694 [label="org.joda.time.DateMidnight$Property.addWrapFieldToCopy(int)"]
2785 [label="org.joda.time.DateTime$Property.addWrapFieldToCopy(int)"]
3165 [label="org.joda.time.LocalDate$Property.addWrapFieldToCopy(int)"]
3282 [label="org.joda.time.LocalDateTime$Property.addWrapFieldToCopy(int)"]
3422 [label="org.joda.time.LocalTime$Property.addWrapFieldToCopy(int)"]
3530 [label="org.joda.time.MonthDay$Property.addWrapFieldToCopy(int)"]
3794 [label="org.joda.time.Partial$Property.addWrapFieldToCopy(int)"]
3961 [label="org.joda.time.TimeOfDay$Property.addWrapFieldToCopy(int)"]
4055 [label="org.joda.time.YearMonth$Property.addWrapFieldToCopy(int)"]
4109 [label="org.joda.time.YearMonthDay$Property.addWrapFieldToCopy(int)"]
1433 [label="org.joda.time.DateTimeField.addWrapPartial(org.joda.time.ReadablePartial,int,int[],int)"]
1709 [label="org.joda.time.field.UnsupportedDateTimeField.addWrapPartial(org.joda.time.ReadablePartial,int,int[],int)"]
1432 [label="org.joda.time.field.BaseDateTimeField.addWrapPartial(org.joda.time.ReadablePartial,int,int[],int)"]
1507 [label="org.joda.time.field.DelegatedDateTimeField.addWrapPartial(org.joda.time.ReadablePartial,int,int[],int)"]
3642 [label="org.joda.time.MutableDateTime.addYears(int)"]
3770 [label="org.joda.time.MutablePeriod.addYears(int)"]
228 [label="org.joda.time.base.BaseDateTime.adjustForMinMax()"]
2822 [label="org.joda.time.DateTimeZone.adjustOffset(long,boolean)"]
1053 [label="org.joda.time.chrono.JulianChronology.adjustYearForSet(int)"]
2220 [label="org.joda.time.format.ISOPeriodFormat.alternate()"]
2223 [label="org.joda.time.format.ISOPeriodFormat.alternateExtended()"]
2227 [label="org.joda.time.format.ISOPeriodFormat.alternateExtendedWithWeeks()"]
2225 [label="org.joda.time.format.ISOPeriodFormat.alternateWithWeeks()"]
80 [label="java.lang.StringBuffer.append(char)"]
548 [label="java.lang.StringBuilder.append(char)"]
1920 [label="java.lang.Appendable.append(char)"]
885 [label="java.lang.StringBuffer.append(int)"]
550 [label="java.lang.StringBuilder.append(int)"]
1930 [label="java.lang.Appendable.append(java.lang.CharSequence)"]
1079 [label="java.lang.StringBuffer.append(java.lang.Object)"]
3108 [label="java.lang.StringBuilder.append(java.lang.Object)"]
75 [label="java.lang.StringBuffer.append(java.lang.String)"]
547 [label="java.lang.StringBuilder.append(java.lang.String)"]
2041 [label="org.joda.time.format.DateTimeFormatterBuilder.append(org.joda.time.format.DateTimeFormatter)"]
2045 [label="org.joda.time.format.DateTimeFormatterBuilder.append(org.joda.time.format.DateTimeParser)"]
2043 [label="org.joda.time.format.DateTimeFormatterBuilder.append(org.joda.time.format.DateTimePrinter)"]
2047 [label="org.joda.time.format.DateTimeFormatterBuilder.append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser)"]
2048 [label="org.joda.time.format.DateTimeFormatterBuilder.append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[])"]
2392 [label="org.joda.time.format.PeriodFormatterBuilder.append(org.joda.time.format.PeriodFormatter)"]
2395 [label="org.joda.time.format.PeriodFormatterBuilder.append(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser)"]
2050 [label="org.joda.time.format.DateTimeFormatterBuilder.append0(java.lang.Object)"]
2042 [label="org.joda.time.format.DateTimeFormatterBuilder.append0(org.joda.time.format.InternalPrinter,org.joda.time.format.InternalParser)"]
2394 [label="org.joda.time.format.PeriodFormatterBuilder.append0(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser)"]
1824 [label="org.joda.time.format.DateTimeFormatterBuilder.appendCenturyOfEra(int,int)"]
1839 [label="org.joda.time.format.DateTimeFormatterBuilder.appendClockhourOfDay(int)"]
1837 [label="org.joda.time.format.DateTimeFormatterBuilder.appendClockhourOfHalfday(int)"]
1835 [label="org.joda.time.format.DateTimeFormatterBuilder.appendDayOfMonth(int)"]
1844 [label="org.joda.time.format.DateTimeFormatterBuilder.appendDayOfWeek(int)"]
1846 [label="org.joda.time.format.DateTimeFormatterBuilder.appendDayOfWeekShortText()"]
1845 [label="org.joda.time.format.DateTimeFormatterBuilder.appendDayOfWeekText()"]
1847 [label="org.joda.time.format.DateTimeFormatterBuilder.appendDayOfYear(int)"]
2214 [label="org.joda.time.format.PeriodFormatterBuilder.appendDays()"]
2052 [label="org.joda.time.format.DateTimeFormatterBuilder.appendDecimal(org.joda.time.DateTimeFieldType,int,int)"]
1823 [label="org.joda.time.format.DateTimeFormatterBuilder.appendEraText()"]
2399 [label="org.joda.time.format.PeriodFormatterBuilder.appendField(int)"]
2402 [label="org.joda.time.format.PeriodFormatterBuilder.appendField(int,int)"]
2053 [label="org.joda.time.format.DateTimeFormatterBuilder.appendFixedDecimal(org.joda.time.DateTimeFieldType,int)"]
2055 [label="org.joda.time.format.DateTimeFormatterBuilder.appendFixedSignedDecimal(org.joda.time.DateTimeFieldType,int)"]
2058 [label="org.joda.time.format.DateTimeFormatterBuilder.appendFraction(org.joda.time.DateTimeFieldType,int,int)"]
2061 [label="org.joda.time.format.DateTimeFormatterBuilder.appendFractionOfDay(int,int)"]
2060 [label="org.joda.time.format.DateTimeFormatterBuilder.appendFractionOfHour(int,int)"]
2059 [label="org.joda.time.format.DateTimeFormatterBuilder.appendFractionOfMinute(int,int)"]
1843 [label="org.joda.time.format.DateTimeFormatterBuilder.appendFractionOfSecond(int,int)"]
1836 [label="org.joda.time.format.DateTimeFormatterBuilder.appendHalfdayOfDayText()"]
1838 [label="org.joda.time.format.DateTimeFormatterBuilder.appendHourOfDay(int)"]
1840 [label="org.joda.time.format.DateTimeFormatterBuilder.appendHourOfHalfday(int)"]
2216 [label="org.joda.time.format.PeriodFormatterBuilder.appendHours()"]
1853 [label="org.joda.time.format.DateTimeFormatterBuilder.appendLiteral(char)"]
1855 [label="org.joda.time.format.DateTimeFormatterBuilder.appendLiteral(java.lang.String)"]
2209 [label="org.joda.time.format.PeriodFormatterBuilder.appendLiteral(java.lang.String)"]
2278 [label="org.joda.time.format.PeriodFormatterBuilder.appendMillis()"]
2401 [label="org.joda.time.format.PeriodFormatterBuilder.appendMillis3Digit()"]
2063 [label="org.joda.time.format.DateTimeFormatterBuilder.appendMillisOfDay(int)"]
2062 [label="org.joda.time.format.DateTimeFormatterBuilder.appendMillisOfSecond(int)"]
2065 [label="org.joda.time.format.DateTimeFormatterBuilder.appendMinuteOfDay(int)"]
1841 [label="org.joda.time.format.DateTimeFormatterBuilder.appendMinuteOfHour(int)"]
2217 [label="org.joda.time.format.PeriodFormatterBuilder.appendMinutes()"]
1834 [label="org.joda.time.format.DateTimeFormatterBuilder.appendMonthOfYear(int)"]
1833 [label="org.joda.time.format.DateTimeFormatterBuilder.appendMonthOfYearShortText()"]
1832 [label="org.joda.time.format.DateTimeFormatterBuilder.appendMonthOfYearText()"]
2212 [label="org.joda.time.format.PeriodFormatterBuilder.appendMonths()"]
2049 [label="org.joda.time.format.DateTimeFormatterBuilder.appendOptional(org.joda.time.format.DateTimeParser)"]
1947 [label="org.joda.time.format.FormatUtils.appendPaddedInteger(java.lang.Appendable,int,int)"]
2117 [label="org.joda.time.format.FormatUtils.appendPaddedInteger(java.lang.Appendable,long,int)"]
2115 [label="org.joda.time.format.FormatUtils.appendPaddedInteger(java.lang.StringBuffer,int,int)"]
2116 [label="org.joda.time.format.FormatUtils.appendPaddedInteger(java.lang.StringBuffer,long,int)"]
2072 [label="org.joda.time.format.DateTimeFormatterBuilder.appendPattern(java.lang.String)"]
1819 [label="org.joda.time.format.DateTimeFormat.appendPatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String)"]
2226 [label="org.joda.time.format.PeriodFormatterBuilder.appendPrefix(java.lang.String)"]
2397 [label="org.joda.time.format.PeriodFormatterBuilder.appendPrefix(java.lang.String,java.lang.String)"]
2398 [label="org.joda.time.format.PeriodFormatterBuilder.appendPrefix(java.lang.String[],java.lang.String[])"]
2396 [label="org.joda.time.format.PeriodFormatterBuilder.appendPrefix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)"]
2064 [label="org.joda.time.format.DateTimeFormatterBuilder.appendSecondOfDay(int)"]
1842 [label="org.joda.time.format.DateTimeFormatterBuilder.appendSecondOfMinute(int)"]
2277 [label="org.joda.time.format.PeriodFormatterBuilder.appendSeconds()"]
2400 [label="org.joda.time.format.PeriodFormatterBuilder.appendSecondsWithMillis()"]
2218 [label="org.joda.time.format.PeriodFormatterBuilder.appendSecondsWithOptionalMillis()"]
2224 [label="org.joda.time.format.PeriodFormatterBuilder.appendSeparator(java.lang.String)"]
2408 [label="org.joda.time.format.PeriodFormatterBuilder.appendSeparator(java.lang.String,java.lang.String)"]
2276 [label="org.joda.time.format.PeriodFormatterBuilder.appendSeparator(java.lang.String,java.lang.String,java.lang.String[])"]
2406 [label="org.joda.time.format.PeriodFormatterBuilder.appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean)"]
2204 [label="org.joda.time.format.ISODateTimeFormat.appendSeparator(org.joda.time.format.DateTimeFormatterBuilder,boolean)"]
2215 [label="org.joda.time.format.PeriodFormatterBuilder.appendSeparatorIfFieldsAfter(java.lang.String)"]
2407 [label="org.joda.time.format.PeriodFormatterBuilder.appendSeparatorIfFieldsBefore(java.lang.String)"]
2057 [label="org.joda.time.format.DateTimeFormatterBuilder.appendShortText(org.joda.time.DateTimeFieldType)"]
2054 [label="org.joda.time.format.DateTimeFormatterBuilder.appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int)"]
2211 [label="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(java.lang.String)"]
2275 [label="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(java.lang.String,java.lang.String)"]
2274 [label="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(java.lang.String[],java.lang.String[])"]
2403 [label="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)"]
2056 [label="org.joda.time.format.DateTimeFormatterBuilder.appendText(org.joda.time.DateTimeFieldType)"]
1852 [label="org.joda.time.format.DateTimeFormatterBuilder.appendTimeZoneId()"]
1849 [label="org.joda.time.format.DateTimeFormatterBuilder.appendTimeZoneName()"]
2069 [label="org.joda.time.format.DateTimeFormatterBuilder.appendTimeZoneName(java.util.Map)"]
2071 [label="org.joda.time.format.DateTimeFormatterBuilder.appendTimeZoneOffset(java.lang.String,boolean,int,int)"]
1851 [label="org.joda.time.format.DateTimeFormatterBuilder.appendTimeZoneOffset(java.lang.String,java.lang.String,boolean,int,int)"]
2070 [label="org.joda.time.format.DateTimeFormatterBuilder.appendTimeZoneShortName()"]
1850 [label="org.joda.time.format.DateTimeFormatterBuilder.appendTimeZoneShortName(java.util.Map)"]
2067 [label="org.joda.time.format.DateTimeFormatterBuilder.appendTwoDigitWeekyear(int)"]
1827 [label="org.joda.time.format.DateTimeFormatterBuilder.appendTwoDigitWeekyear(int,boolean)"]
2066 [label="org.joda.time.format.DateTimeFormatterBuilder.appendTwoDigitYear(int)"]
1828 [label="org.joda.time.format.DateTimeFormatterBuilder.appendTwoDigitYear(int,boolean)"]
1948 [label="org.joda.time.format.DateTimeFormatterBuilder.appendUnknownString(java.lang.Appendable,int)"]
1943 [label="org.joda.time.format.FormatUtils.appendUnpaddedInteger(java.lang.Appendable,int)"]
2123 [label="org.joda.time.format.FormatUtils.appendUnpaddedInteger(java.lang.Appendable,long)"]
2122 [label="org.joda.time.format.FormatUtils.appendUnpaddedInteger(java.lang.StringBuffer,int)"]
76 [label="org.joda.time.format.FormatUtils.appendUnpaddedInteger(java.lang.StringBuffer,long)"]
1848 [label="org.joda.time.format.DateTimeFormatterBuilder.appendWeekOfWeekyear(int)"]
2213 [label="org.joda.time.format.PeriodFormatterBuilder.appendWeeks()"]
1829 [label="org.joda.time.format.DateTimeFormatterBuilder.appendWeekyear(int,int)"]
1830 [label="org.joda.time.format.DateTimeFormatterBuilder.appendYear(int,int)"]
2068 [label="org.joda.time.format.DateTimeFormatterBuilder.appendYearOfCentury(int,int)"]
1831 [label="org.joda.time.format.DateTimeFormatterBuilder.appendYearOfEra(int,int)"]
2210 [label="org.joda.time.format.PeriodFormatterBuilder.appendYears()"]
306 [label="java.lang.System.arraycopy(java.lang.Object,int,java.lang.Object,int,int)"]
3825 [label="java.util.Arrays.asList(T[])"]
1005 [label="org.joda.time.chrono.ISOChronology.assemble(org.joda.time.chrono.AssembledChronology$Fields)"]
430 [label="org.joda.time.chrono.AssembledChronology.assemble(org.joda.time.chrono.AssembledChronology$Fields)"]
552 [label="org.joda.time.chrono.BasicChronology.assemble(org.joda.time.chrono.AssembledChronology$Fields)"]
753 [label="org.joda.time.chrono.BuddhistChronology.assemble(org.joda.time.chrono.AssembledChronology$Fields)"]
886 [label="org.joda.time.chrono.GJChronology.assemble(org.joda.time.chrono.AssembledChronology$Fields)"]
1132 [label="org.joda.time.chrono.LimitChronology.assemble(org.joda.time.chrono.AssembledChronology$Fields)"]
768 [label="org.joda.time.chrono.CopticChronology.assemble(org.joda.time.chrono.AssembledChronology$Fields)"]
1220 [label="org.joda.time.chrono.ZonedChronology.assemble(org.joda.time.chrono.AssembledChronology$Fields)"]
779 [label="org.joda.time.chrono.EthiopicChronology.assemble(org.joda.time.chrono.AssembledChronology$Fields)"]
990 [label="org.joda.time.chrono.GregorianChronology.assemble(org.joda.time.chrono.AssembledChronology$Fields)"]
1061 [label="org.joda.time.chrono.JulianChronology.assemble(org.joda.time.chrono.AssembledChronology$Fields)"]
1050 [label="org.joda.time.chrono.IslamicChronology.assemble(org.joda.time.chrono.AssembledChronology$Fields)"]
1066 [label="org.joda.time.chrono.LenientChronology.assemble(org.joda.time.chrono.AssembledChronology$Fields)"]
1146 [label="org.joda.time.chrono.StrictChronology.assemble(org.joda.time.chrono.AssembledChronology$Fields)"]
2166 [label="org.joda.time.format.ISODateTimeFormat$Constants.basicDate()"]
2171 [label="org.joda.time.format.ISODateTimeFormat$Constants.basicDateTime()"]
2172 [label="org.joda.time.format.ISODateTimeFormat$Constants.basicDateTimeNoMillis()"]
2173 [label="org.joda.time.format.ISODateTimeFormat$Constants.basicOrdinalDate()"]
2174 [label="org.joda.time.format.ISODateTimeFormat$Constants.basicOrdinalDateTime()"]
2175 [label="org.joda.time.format.ISODateTimeFormat$Constants.basicOrdinalDateTimeNoMillis()"]
2169 [label="org.joda.time.format.ISODateTimeFormat$Constants.basicTTime()"]
2170 [label="org.joda.time.format.ISODateTimeFormat$Constants.basicTTimeNoMillis()"]
2167 [label="org.joda.time.format.ISODateTimeFormat$Constants.basicTime()"]
2168 [label="org.joda.time.format.ISODateTimeFormat$Constants.basicTimeNoMillis()"]
2176 [label="org.joda.time.format.ISODateTimeFormat$Constants.basicWeekDate()"]
2177 [label="org.joda.time.format.ISODateTimeFormat$Constants.basicWeekDateTime()"]
2178 [label="org.joda.time.format.ISODateTimeFormat$Constants.basicWeekDateTimeNoMillis()"]
368 [label="org.joda.time.base.BaseSingleFieldPeriod.between(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant,org.joda.time.DurationFieldType)"]
371 [label="org.joda.time.base.BaseSingleFieldPeriod.between(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.ReadablePeriod)"]
2520 [label="java.util.Arrays.binarySearch(long[],long)"]
2943 [label="org.joda.time.DateTimeUtils.buildDefaultTimeZoneNames()"]
2540 [label="org.joda.time.tz.DateTimeZoneBuilder.buildFixedZone(java.lang.String,java.lang.String,int,int)"]
2962 [label="org.joda.time.DateTimeZone$LazyInit.buildFormatter()"]
2961 [label="org.joda.time.DateTimeZone$LazyInit.buildMap()"]
2270 [label="org.joda.time.format.PeriodFormat.buildNonRegExFormatter(java.util.ResourceBundle,java.util.Locale)"]
2269 [label="org.joda.time.format.PeriodFormat.buildRegExFormatter(java.util.ResourceBundle,java.util.Locale)"]
2493 [label="org.joda.time.tz.DateTimeZoneBuilder$RuleSet.buildTailZone(java.lang.String)"]
2265 [label="org.joda.time.format.PeriodFormat.buildWordBased(java.util.Locale)"]
2126 [label="org.joda.time.format.FormatUtils.calculateDigitCount(long)"]
598 [label="org.joda.time.chrono.BasicChronology.calculateFirstDayOfYearMillis(int)"]
767 [label="org.joda.time.chrono.CopticChronology.calculateFirstDayOfYearMillis(int)"]
778 [label="org.joda.time.chrono.EthiopicChronology.calculateFirstDayOfYearMillis(int)"]
991 [label="org.joda.time.chrono.GregorianChronology.calculateFirstDayOfYearMillis(int)"]
1059 [label="org.joda.time.chrono.JulianChronology.calculateFirstDayOfYearMillis(int)"]
1048 [label="org.joda.time.chrono.IslamicChronology.calculateFirstDayOfYearMillis(int)"]
2327 [label="org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix.calculatePrintedLength(int)"]
2299 [label="org.joda.time.format.PeriodFormatterBuilder$SimpleAffix.calculatePrintedLength(int)"]
2305 [label="org.joda.time.format.PeriodFormatterBuilder$PluralAffix.calculatePrintedLength(int)"]
2319 [label="org.joda.time.format.PeriodFormatterBuilder$RegExAffix.calculatePrintedLength(int)"]
2326 [label="org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.calculatePrintedLength(int)"]
2248 [label="org.joda.time.format.PeriodFormat$DynamicWordBased.calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale)"]
2249 [label="org.joda.time.format.PeriodPrinter.calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale)"]
2343 [label="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale)"]
2363 [label="org.joda.time.format.PeriodFormatterBuilder$Literal.calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale)"]
2373 [label="org.joda.time.format.PeriodFormatterBuilder$Separator.calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale)"]
2381 [label="org.joda.time.format.PeriodFormatterBuilder$Composite.calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale)"]
2035 [label="org.joda.time.format.DateTimeFormatterBuilder.canBuildFormatter()"]
2038 [label="org.joda.time.format.DateTimeFormatterBuilder.canBuildParser()"]
2037 [label="org.joda.time.format.DateTimeFormatterBuilder.canBuildPrinter()"]
409 [label="org.joda.time.Chronology.centuries()"]
510 [label="org.joda.time.DurationFieldType.centuries()"]
441 [label="org.joda.time.chrono.BaseChronology.centuries()"]
511 [label="org.joda.time.DateTimeFieldType.centuryOfEra()"]
11 [label="org.joda.time.Chronology.centuryOfEra()"]
2887 [label="org.joda.time.DateTime.centuryOfEra()"]
3672 [label="org.joda.time.MutableDateTime.centuryOfEra()"]
3259 [label="org.joda.time.LocalDate.centuryOfEra()"]
3395 [label="org.joda.time.LocalDateTime.centuryOfEra()"]
2767 [label="org.joda.time.DateMidnight.centuryOfEra()"]
464 [label="org.joda.time.chrono.BaseChronology.centuryOfEra()"]
901 [label="org.joda.time.chrono.AssembledChronology.centuryOfEra()"]
2607 [label="org.joda.time.tz.ZoneInfoCompiler$Zone.chain(java.util.StringTokenizer)"]
1334 [label="java.lang.String.charAt(int)"]
1924 [label="java.lang.CharSequence.charAt(int)"]
2983 [label="java.lang.AbstractStringBuilder.charAt(int)"]
1266 [label="org.joda.time.convert.ConverterManager.checkAlterDurationConverters()"]
1253 [label="org.joda.time.convert.ConverterManager.checkAlterInstantConverters()"]
1274 [label="org.joda.time.convert.ConverterManager.checkAlterIntervalConverters()"]
1262 [label="org.joda.time.convert.ConverterManager.checkAlterPartialConverters()"]
1270 [label="org.joda.time.convert.ConverterManager.checkAlterPeriodConverters()"]
344 [label="org.joda.time.base.BasePeriod.checkAndUpdate(org.joda.time.DurationFieldType,int[],int)"]
226 [label="org.joda.time.base.BaseDateTime.checkChronology(org.joda.time.Chronology)"]
227 [label="org.joda.time.base.BaseDateTime.checkInstant(long,org.joda.time.Chronology)"]
2724 [label="org.joda.time.DateMidnight.checkInstant(long,org.joda.time.Chronology)"]
124 [label="org.joda.time.base.AbstractInterval.checkInterval(long,long)"]
1083 [label="org.joda.time.chrono.LimitChronology.checkLimits(long,java.lang.String)"]
2205 [label="org.joda.time.format.ISODateTimeFormat.checkNotStrictISO(java.util.Collection,boolean)"]
2288 [label="org.joda.time.format.PeriodFormatter.checkParser()"]
2046 [label="org.joda.time.format.DateTimeFormatterBuilder.checkParser(org.joda.time.format.DateTimeParser)"]
2286 [label="org.joda.time.format.PeriodFormatter.checkPeriod(org.joda.time.ReadablePeriod)"]
316 [label="org.joda.time.base.BasePeriod.checkPeriodType(org.joda.time.PeriodType)"]
2934 [label="org.joda.time.DateTimeUtils.checkPermission()"]
1259 [label="java.lang.SecurityManager.checkPermission(java.security.Permission)"]
2285 [label="org.joda.time.format.PeriodFormatter.checkPrinter()"]
2044 [label="org.joda.time.format.DateTimeFormatterBuilder.checkPrinter(org.joda.time.format.DateTimePrinter)"]
3895 [label="org.joda.time.Period.checkYearsAndMonths(java.lang.String)"]
3737 [label="org.joda.time.MutablePeriod.clear()"]
1339 [label="org.joda.time.ReadWritablePeriod.clear()"]
3337 [label="java.util.Calendar.clear()"]
2040 [label="java.util.ArrayList.clear()"]
2391 [label="java.util.List.clear()"]
2039 [label="org.joda.time.format.DateTimeFormatterBuilder.clear()"]
2387 [label="org.joda.time.format.PeriodFormatterBuilder.clear()"]
2393 [label="org.joda.time.format.PeriodFormatterBuilder.clearPrefix()"]
494 [label="org.joda.time.DateTimeFieldType.clockhourOfDay()"]
412 [label="org.joda.time.Chronology.clockhourOfDay()"]
450 [label="org.joda.time.chrono.BaseChronology.clockhourOfDay()"]
896 [label="org.joda.time.chrono.AssembledChronology.clockhourOfDay()"]
497 [label="org.joda.time.DateTimeFieldType.clockhourOfHalfday()"]
414 [label="org.joda.time.Chronology.clockhourOfHalfday()"]
452 [label="org.joda.time.chrono.BaseChronology.clockhourOfHalfday()"]
897 [label="org.joda.time.chrono.AssembledChronology.clockhourOfHalfday()"]
303 [label="java.lang.Object.clone()"]
3690 [label="org.joda.time.MutableDateTime.clone()"]
3715 [label="org.joda.time.MutableInterval.clone()"]
3786 [label="org.joda.time.MutablePeriod.clone()"]
2639 [label="java.io.BufferedReader.close()"]
2647 [label="java.io.FilterOutputStream.close()"]
2648 [label="java.io.OutputStream.close()"]
2650 [label="java.io.InputStream.close()"]
2683 [label="java.io.FilterInputStream.close()"]
2908 [label="org.joda.time.DateTimeComparator.compare(java.lang.Object,java.lang.Object)"]
2311 [label="org.joda.time.format.RegExAffix$1.compare(java.lang.String,java.lang.String)"]
2944 [label="java.util.concurrent.atomic.AtomicReference.compareAndSet(V,V)"]
1863 [label="java.util.concurrent.atomic.AtomicReferenceArray.compareAndSet(int,E,E)"]
2082 [label="org.joda.time.format.DateTimeParserBucket.compareReverse(org.joda.time.DurationField,org.joda.time.DurationField)"]
1564 [label="java.lang.Comparable.compareTo(T)"]
1467 [label="org.joda.time.field.BaseDurationField.compareTo(org.joda.time.DurationField)"]
1563 [label="org.joda.time.field.DelegatedDurationField.compareTo(org.joda.time.DurationField)"]
1620 [label="org.joda.time.field.MillisDurationField.compareTo(org.joda.time.DurationField)"]
67 [label="org.joda.time.base.AbstractDuration.compareTo(org.joda.time.ReadableDuration)"]
109 [label="org.joda.time.base.AbstractInstant.compareTo(org.joda.time.ReadableInstant)"]
1371 [label="org.joda.time.field.AbstractPartialFieldProperty.compareTo(org.joda.time.ReadableInstant)"]
1405 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.compareTo(org.joda.time.ReadableInstant)"]
185 [label="org.joda.time.base.AbstractPartial.compareTo(org.joda.time.ReadablePartial)"]
3208 [label="org.joda.time.LocalDate.compareTo(org.joda.time.ReadablePartial)"]
3323 [label="org.joda.time.LocalDateTime.compareTo(org.joda.time.ReadablePartial)"]
3463 [label="org.joda.time.LocalTime.compareTo(org.joda.time.ReadablePartial)"]
1373 [label="org.joda.time.field.AbstractPartialFieldProperty.compareTo(org.joda.time.ReadablePartial)"]
1406 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.compareTo(org.joda.time.ReadablePartial)"]
395 [label="org.joda.time.base.BaseSingleFieldPeriod.compareTo(org.joda.time.base.BaseSingleFieldPeriod)"]
2081 [label="org.joda.time.format.DateTimeParserBucket$SavedField.compareTo(org.joda.time.format.DateTimeParserBucket$SavedField)"]
2617 [label="org.joda.time.tz.ZoneInfoCompiler.compile(java.io.File,java.io.File[])"]
2314 [label="java.util.regex.Pattern.compile(java.lang.String)"]
2092 [label="org.joda.time.format.DateTimeParserBucket.computeMillis()"]
2093 [label="org.joda.time.format.DateTimeParserBucket.computeMillis(boolean)"]
2087 [label="org.joda.time.format.DateTimeParserBucket.computeMillis(boolean,java.lang.CharSequence)"]
1900 [label="org.joda.time.format.DateTimeParserBucket.computeMillis(boolean,java.lang.String)"]
2127 [label="java.lang.String.concat(java.lang.String)"]
2482 [label="java.util.ArrayList.contains(java.lang.Object)"]
2018 [label="java.util.List.contains(java.lang.Object)"]
2196 [label="java.util.Set.contains(java.lang.Object)"]
130 [label="org.joda.time.base.AbstractInterval.contains(long)"]
132 [label="org.joda.time.base.AbstractInterval.contains(org.joda.time.ReadableInstant)"]
133 [label="org.joda.time.base.AbstractInterval.contains(org.joda.time.ReadableInterval)"]
1974 [label="java.util.Map.containsKey(java.lang.Object)"]
1136 [label="java.util.HashMap.containsKey(java.lang.Object)"]
2268 [label="org.joda.time.format.PeriodFormat.containsKey(java.util.ResourceBundle,java.lang.String)"]
131 [label="org.joda.time.base.AbstractInterval.containsNow()"]
858 [label="org.joda.time.chrono.GJChronology.convertByWeekyear(long,org.joda.time.Chronology,org.joda.time.Chronology)"]
857 [label="org.joda.time.chrono.GJChronology.convertByYear(long,org.joda.time.Chronology,org.joda.time.Chronology)"]
1067 [label="org.joda.time.chrono.LenientChronology.convertField(org.joda.time.DateTimeField)"]
1147 [label="org.joda.time.chrono.StrictChronology.convertField(org.joda.time.DateTimeField)"]
1135 [label="org.joda.time.chrono.LimitChronology.convertField(org.joda.time.DateTimeField,java.util.HashMap)"]
1222 [label="org.joda.time.chrono.ZonedChronology.convertField(org.joda.time.DateTimeField,java.util.HashMap)"]
1134 [label="org.joda.time.chrono.LimitChronology.convertField(org.joda.time.DurationField,java.util.HashMap)"]
1221 [label="org.joda.time.chrono.ZonedChronology.convertField(org.joda.time.DurationField,java.util.HashMap)"]
3002 [label="org.joda.time.DateTimeZone.convertLocalToUTC(long,boolean)"]
1184 [label="org.joda.time.DateTimeZone.convertLocalToUTC(long,boolean,long)"]
909 [label="org.joda.time.chrono.GJDayOfWeekDateTimeField.convertText(java.lang.String,java.util.Locale)"]
960 [label="org.joda.time.chrono.GJMonthOfYearDateTimeField.convertText(java.lang.String,java.util.Locale)"]
1444 [label="org.joda.time.field.BaseDateTimeField.convertText(java.lang.String,java.util.Locale)"]
2980 [label="org.joda.time.DateTimeZone.convertToAsciiNumber(java.lang.String)"]
1171 [label="org.joda.time.DateTimeZone.convertUTCToLocal(long)"]
3689 [label="org.joda.time.MutableDateTime.copy()"]
3714 [label="org.joda.time.MutableInterval.copy()"]
3785 [label="org.joda.time.MutablePeriod.copy()"]
397 [label="org.joda.time.chrono.AssembledChronology$Fields.copyFieldsFrom(org.joda.time.Chronology)"]
1251 [label="org.joda.time.convert.ConverterSet.copyInto(org.joda.time.convert.Converter[])"]
3334 [label="org.joda.time.LocalDateTime.correctDstTransition(java.util.Date,java.util.TimeZone)"]
2245 [label="org.joda.time.format.PeriodFormat$DynamicWordBased.countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale)"]
2247 [label="org.joda.time.format.PeriodPrinter.countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale)"]
2341 [label="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale)"]
2372 [label="org.joda.time.format.PeriodFormatterBuilder$Separator.countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale)"]
2380 [label="org.joda.time.format.PeriodFormatterBuilder$Composite.countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale)"]
2596 [label="java.util.StringTokenizer.countTokens()"]
2509 [label="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)"]
2560 [label="org.joda.time.tz.DefaultNameProvider.createCache()"]
2410 [label="org.joda.time.format.PeriodFormatterBuilder.createComposite(java.util.List)"]
1861 [label="org.joda.time.format.DateTimeFormat.createDateTimeFormatter(int,int)"]
1914 [label="org.joda.time.format.FormatUtils.createErrorMessage(java.lang.String,int)"]
1802 [label="org.joda.time.format.DateTimeFormat.createFormatterForPattern(java.lang.String)"]
1804 [label="org.joda.time.format.DateTimeFormat.createFormatterForStyle(java.lang.String)"]
1807 [label="org.joda.time.format.DateTimeFormat.createFormatterForStyleIndex(int,int)"]
2434 [label="org.joda.time.tz.CachedDateTimeZone.createInfo(long)"]
3107 [label="org.joda.time.IllegalFieldValueException.createMessage(java.lang.String,java.lang.Number,java.lang.Number,java.lang.Number,java.lang.String)"]
3109 [label="org.joda.time.IllegalFieldValueException.createMessage(java.lang.String,java.lang.String)"]
3115 [label="org.joda.time.IllegalInstantException.createMessage(long,java.lang.String)"]
2001 [label="org.joda.time.format.DateTimeFormatterBuilder.csStartsWith(java.lang.CharSequence,int,java.lang.String)"]
1934 [label="org.joda.time.format.DateTimeFormatterBuilder.csStartsWithIgnoreCase(java.lang.CharSequence,int,java.lang.String)"]
2925 [label="java.lang.System.currentTimeMillis()"]
112 [label="org.joda.time.DateTimeUtils.currentTimeMillis()"]
884 [label="org.joda.time.format.ISODateTimeFormat.date()"]
2197 [label="org.joda.time.format.ISODateTimeFormat.dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean)"]
2198 [label="org.joda.time.format.ISODateTimeFormat.dateByOrdinal(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean)"]
2199 [label="org.joda.time.format.ISODateTimeFormat.dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean)"]
2179 [label="org.joda.time.format.ISODateTimeFormat$Constants.dateElementParser()"]
2150 [label="org.joda.time.format.ISODateTimeFormat$Constants.dateHour()"]
2151 [label="org.joda.time.format.ISODateTimeFormat$Constants.dateHourMinute()"]
2152 [label="org.joda.time.format.ISODateTimeFormat$Constants.dateHourMinuteSecond()"]
2154 [label="org.joda.time.format.ISODateTimeFormat$Constants.dateHourMinuteSecondFraction()"]
2153 [label="org.joda.time.format.ISODateTimeFormat$Constants.dateHourMinuteSecondMillis()"]
4124 [label="org.joda.time.format.ISODateTimeFormat.dateOptionalTimeParser()"]
2186 [label="org.joda.time.format.ISODateTimeFormat$Constants.dateOptionalTimeParser()"]
2181 [label="org.joda.time.format.ISODateTimeFormat$Constants.dateParser()"]
121 [label="org.joda.time.format.ISODateTimeFormat.dateTime()"]
2159 [label="org.joda.time.format.ISODateTimeFormat$Constants.dateTime()"]
2160 [label="org.joda.time.format.ISODateTimeFormat$Constants.dateTimeNoMillis()"]
1329 [label="org.joda.time.format.ISODateTimeFormat.dateTimeParser()"]
2185 [label="org.joda.time.format.ISODateTimeFormat$Constants.dateTimeParser()"]
500 [label="org.joda.time.DateTimeFieldType.dayOfMonth()"]
27 [label="org.joda.time.Chronology.dayOfMonth()"]
2895 [label="org.joda.time.DateTime.dayOfMonth()"]
3680 [label="org.joda.time.MutableDateTime.dayOfMonth()"]
3267 [label="org.joda.time.LocalDate.dayOfMonth()"]
3403 [label="org.joda.time.LocalDateTime.dayOfMonth()"]
2775 [label="org.joda.time.DateMidnight.dayOfMonth()"]
4162 [label="org.joda.time.YearMonthDay.dayOfMonth()"]
3572 [label="org.joda.time.MonthDay.dayOfMonth()"]
455 [label="org.joda.time.chrono.BaseChronology.dayOfMonth()"]
615 [label="org.joda.time.chrono.AssembledChronology.dayOfMonth()"]
2131 [label="org.joda.time.format.ISODateTimeFormat$Constants.dayOfMonthElement()"]
499 [label="org.joda.time.DateTimeFieldType.dayOfWeek()"]
29 [label="org.joda.time.Chronology.dayOfWeek()"]
2896 [label="org.joda.time.DateTime.dayOfWeek()"]
3681 [label="org.joda.time.MutableDateTime.dayOfWeek()"]
3268 [label="org.joda.time.LocalDate.dayOfWeek()"]
3404 [label="org.joda.time.LocalDateTime.dayOfWeek()"]
2776 [label="org.joda.time.DateMidnight.dayOfWeek()"]
454 [label="org.joda.time.chrono.BaseChronology.dayOfWeek()"]
707 [label="org.joda.time.chrono.AssembledChronology.dayOfWeek()"]
2134 [label="org.joda.time.format.ISODateTimeFormat$Constants.dayOfWeekElement()"]
910 [label="org.joda.time.chrono.GJLocaleSymbols.dayOfWeekTextToValue(java.lang.String)"]
908 [label="org.joda.time.chrono.GJLocaleSymbols.dayOfWeekValueToShortText(int)"]
906 [label="org.joda.time.chrono.GJLocaleSymbols.dayOfWeekValueToText(int)"]
501 [label="org.joda.time.DateTimeFieldType.dayOfYear()"]
25 [label="org.joda.time.Chronology.dayOfYear()"]
2894 [label="org.joda.time.DateTime.dayOfYear()"]
3679 [label="org.joda.time.MutableDateTime.dayOfYear()"]
3266 [label="org.joda.time.LocalDate.dayOfYear()"]
3402 [label="org.joda.time.LocalDateTime.dayOfYear()"]
2774 [label="org.joda.time.DateMidnight.dayOfYear()"]
456 [label="org.joda.time.chrono.BaseChronology.dayOfYear()"]
627 [label="org.joda.time.chrono.AssembledChronology.dayOfYear()"]
2135 [label="org.joda.time.format.ISODateTimeFormat$Constants.dayOfYearElement()"]
3910 [label="org.joda.time.PeriodType.dayTime()"]
404 [label="org.joda.time.Chronology.days()"]
3009 [label="org.joda.time.PeriodType.days()"]
353 [label="org.joda.time.DurationFieldType.days()"]
436 [label="org.joda.time.chrono.BaseChronology.days()"]
670 [label="org.joda.time.chrono.AssembledChronology.days()"]
3838 [label="org.joda.time.Period.days(int)"]
3010 [label="org.joda.time.Days.days(int)"]
3011 [label="org.joda.time.Days.daysBetween(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)"]
3012 [label="org.joda.time.Days.daysBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)"]
3014 [label="org.joda.time.Days.daysIn(org.joda.time.ReadableInterval)"]
2017 [label="org.joda.time.format.DateTimeFormatterBuilder$Composite.decompose(java.util.List,java.util.List,java.util.List)"]
2378 [label="org.joda.time.format.PeriodFormatterBuilder$Composite.decompose(java.util.List,java.util.List,java.util.List)"]
467 [label="java.io.ObjectInputStream.defaultReadObject()"]
2984 [label="java.lang.Character.digit(char,int)"]
1991 [label="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.digitCount(java.lang.CharSequence,int,int)"]
1589 [label="java.math.BigDecimal.divide(java.math.BigDecimal,java.math.RoundingMode)"]
3038 [label="org.joda.time.Days.dividedBy(int)"]
4045 [label="org.joda.time.Weeks.dividedBy(int)"]
3102 [label="org.joda.time.Hours.dividedBy(int)"]
3519 [label="org.joda.time.Minutes.dividedBy(int)"]
3950 [label="org.joda.time.Seconds.dividedBy(int)"]
3593 [label="org.joda.time.Months.dividedBy(int)"]
4180 [label="org.joda.time.Years.dividedBy(int)"]
3068 [label="org.joda.time.Duration.dividedBy(long)"]
3069 [label="org.joda.time.Duration.dividedBy(long,java.math.RoundingMode)"]
1907 [label="org.joda.time.format.DateTimeParserBucket.doParseMillis(org.joda.time.format.InternalParser,java.lang.CharSequence)"]
2679 [label="java.security.AccessController.doPrivileged(java.security.PrivilegedAction)"]
1241 [label="java.lang.String.endsWith(java.lang.String)"]
2622 [label="java.util.Map.entrySet()"]
2529 [label="java.util.Arrays.equals(int[],int[])"]
105 [label="org.joda.time.base.AbstractInstant.equals(java.lang.Object)"]
71 [label="org.joda.time.base.AbstractDuration.equals(java.lang.Object)"]
155 [label="org.joda.time.base.AbstractInterval.equals(java.lang.Object)"]
182 [label="org.joda.time.base.AbstractPartial.equals(java.lang.Object)"]
211 [label="org.joda.time.base.AbstractPeriod.equals(java.lang.Object)"]
392 [label="org.joda.time.base.BaseSingleFieldPeriod.equals(java.lang.Object)"]
657 [label="java.lang.Object.equals(java.lang.Object)"]
678 [label="java.lang.String.equals(java.lang.Object)"]
1878 [label="java.lang.Integer.equals(java.lang.Object)"]
538 [label="org.joda.time.DateTimeZone.equals(java.lang.Object)"]
3861 [label="org.joda.time.PeriodType.equals(java.lang.Object)"]
3206 [label="org.joda.time.LocalDate.equals(java.lang.Object)"]
3322 [label="org.joda.time.LocalDateTime.equals(java.lang.Object)"]
3462 [label="org.joda.time.LocalTime.equals(java.lang.Object)"]
2910 [label="org.joda.time.DateTimeComparator.equals(java.lang.Object)"]
1799 [label="java.util.Locale.equals(java.lang.Object)"]
1798 [label="org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey.equals(java.lang.Object)"]
2243 [label="org.joda.time.format.InternalPrinterDateTimePrinter.equals(java.lang.Object)"]
2233 [label="org.joda.time.format.InternalParserDateTimeParser.equals(java.lang.Object)"]
1008 [label="org.joda.time.chrono.ISOChronology.equals(java.lang.Object)"]
536 [label="org.joda.time.chrono.BasicChronology.equals(java.lang.Object)"]
750 [label="org.joda.time.chrono.BuddhistChronology.equals(java.lang.Object)"]
880 [label="org.joda.time.chrono.GJChronology.equals(java.lang.Object)"]
1139 [label="org.joda.time.chrono.LimitChronology.equals(java.lang.Object)"]
1223 [label="org.joda.time.chrono.ZonedChronology.equals(java.lang.Object)"]
782 [label="org.joda.time.chrono.GJCacheKey.equals(java.lang.Object)"]
1035 [label="org.joda.time.chrono.IslamicChronology.equals(java.lang.Object)"]
1069 [label="org.joda.time.chrono.LenientChronology.equals(java.lang.Object)"]
1149 [label="org.joda.time.chrono.StrictChronology.equals(java.lang.Object)"]
1172 [label="org.joda.time.chrono.ZonedChronology$ZonedDurationField.equals(java.lang.Object)"]
1210 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.equals(java.lang.Object)"]
1753 [label="org.joda.time.field.UnsupportedDurationField.equals(java.lang.Object)"]
1650 [label="org.joda.time.field.PreciseDurationField.equals(java.lang.Object)"]
1374 [label="org.joda.time.field.AbstractPartialFieldProperty.equals(java.lang.Object)"]
1407 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.equals(java.lang.Object)"]
1565 [label="org.joda.time.field.DelegatedDurationField.equals(java.lang.Object)"]
1678 [label="org.joda.time.field.ScaledDurationField.equals(java.lang.Object)"]
1622 [label="org.joda.time.field.MillisDurationField.equals(java.lang.Object)"]
2433 [label="org.joda.time.tz.CachedDateTimeZone.equals(java.lang.Object)"]
2458 [label="org.joda.time.tz.DateTimeZoneBuilder$OfYear.equals(java.lang.Object)"]
2457 [label="org.joda.time.tz.DateTimeZoneBuilder$Recurrence.equals(java.lang.Object)"]
2502 [label="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.equals(java.lang.Object)"]
2526 [label="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.equals(java.lang.Object)"]
2573 [label="org.joda.time.tz.FixedDateTimeZone.equals(java.lang.Object)"]
106 [label="org.joda.time.field.FieldUtils.equals(java.lang.Object,java.lang.Object)"]
2528 [label="java.util.Arrays.equals(java.lang.Object[],java.lang.Object[])"]
2527 [label="java.util.Arrays.equals(long[],long[])"]
955 [label="java.lang.String.equalsIgnoreCase(java.lang.String)"]
513 [label="org.joda.time.DateTimeFieldType.era()"]
9 [label="org.joda.time.Chronology.era()"]
2886 [label="org.joda.time.DateTime.era()"]
3671 [label="org.joda.time.MutableDateTime.era()"]
3258 [label="org.joda.time.LocalDate.era()"]
3394 [label="org.joda.time.LocalDateTime.era()"]
2766 [label="org.joda.time.DateMidnight.era()"]
465 [label="org.joda.time.chrono.BaseChronology.era()"]
899 [label="org.joda.time.chrono.AssembledChronology.era()"]
922 [label="org.joda.time.chrono.GJLocaleSymbols.eraTextToValue(java.lang.String)"]
919 [label="org.joda.time.chrono.GJLocaleSymbols.eraValueToText(int)"]
410 [label="org.joda.time.Chronology.eras()"]
512 [label="org.joda.time.DurationFieldType.eras()"]
442 [label="org.joda.time.chrono.BaseChronology.eras()"]
967 [label="org.joda.time.chrono.AssembledChronology.eras()"]
2020 [label="org.joda.time.format.InternalParser.estimateParsedLength()"]
2099 [label="org.joda.time.format.DateTimeParserInternalParser.estimateParsedLength()"]
2230 [label="org.joda.time.format.InternalParserDateTimeParser.estimateParsedLength()"]
1932 [label="org.joda.time.format.DateTimeFormatterBuilder$StringLiteral.estimateParsedLength()"]
1965 [label="org.joda.time.format.DateTimeFormatterBuilder$TextField.estimateParsedLength()"]
1988 [label="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.estimateParsedLength()"]
2100 [label="org.joda.time.format.DateTimeParser.estimateParsedLength()"]
1894 [label="org.joda.time.format.InternalPrinter.estimatePrintedLength()"]
2104 [label="org.joda.time.format.DateTimePrinterInternalPrinter.estimatePrintedLength()"]
2236 [label="org.joda.time.format.InternalPrinterDateTimePrinter.estimatePrintedLength()"]
1928 [label="org.joda.time.format.DateTimeFormatterBuilder$StringLiteral.estimatePrintedLength()"]
1966 [label="org.joda.time.format.DateTimeFormatterBuilder$TextField.estimatePrintedLength()"]
1986 [label="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.estimatePrintedLength()"]
2105 [label="org.joda.time.format.DateTimePrinter.estimatePrintedLength()"]
2640 [label="java.io.File.exists()"]
3843 [label="org.joda.time.Period.fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)"]
2498 [label="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.findMatchingRecurrence(long)"]
2291 [label="org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix.finish(java.util.Set)"]
2340 [label="org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix.finish(java.util.Set)"]
2339 [label="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.finish(org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[])"]
2411 [label="org.joda.time.format.PeriodFormatterBuilder$Separator.finish(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser)"]
2483 [label="org.joda.time.tz.DateTimeZoneBuilder$RuleSet.firstTransition(long)"]
2974 [label="org.joda.time.DateTimeZone.fixedOffsetZone(java.lang.String,int)"]
2953 [label="java.lang.Math.floor(double)"]
2557 [label="java.io.DataOutputStream.flush()"]
2192 [label="org.joda.time.format.ISODateTimeFormat.forFields(java.util.Collection,boolean,boolean)"]
3844 [label="org.joda.time.PeriodType.forFields(org.joda.time.DurationFieldType[])"]
2015 [label="org.joda.time.DateTimeZone.forID(java.lang.String)"]
517 [label="org.joda.time.chrono.GJLocaleSymbols.forLocale(java.util.Locale)"]
2990 [label="java.lang.Class.forName(java.lang.String)"]
2975 [label="org.joda.time.DateTimeZone.forOffsetHours(int)"]
2976 [label="org.joda.time.DateTimeZone.forOffsetHoursMinutes(int,int)"]
1903 [label="org.joda.time.DateTimeZone.forOffsetMillis(int)"]
56 [label="org.joda.time.format.DateTimeFormat.forPattern(java.lang.String)"]
1803 [label="org.joda.time.format.DateTimeFormat.forStyle(java.lang.String)"]
1239 [label="org.joda.time.DateTimeZone.forTimeZone(java.util.TimeZone)"]
2420 [label="org.joda.time.tz.CachedDateTimeZone.forZone(org.joda.time.DateTimeZone)"]
2600 [label="org.joda.time.tz.ZoneInfoCompiler$Rule.formatName(java.lang.String)"]
2139 [label="org.joda.time.format.ISODateTimeFormat$Constants.fractionElement()"]
3186 [label="org.joda.time.LocalDate.fromCalendarFields(java.util.Calendar)"]
3302 [label="org.joda.time.LocalDateTime.fromCalendarFields(java.util.Calendar)"]
4116 [label="org.joda.time.YearMonthDay.fromCalendarFields(java.util.Calendar)"]
3446 [label="org.joda.time.LocalTime.fromCalendarFields(java.util.Calendar)"]
3969 [label="org.joda.time.TimeOfDay.fromCalendarFields(java.util.Calendar)"]
3544 [label="org.joda.time.MonthDay.fromCalendarFields(java.util.Calendar)"]
4069 [label="org.joda.time.YearMonth.fromCalendarFields(java.util.Calendar)"]
3188 [label="org.joda.time.LocalDate.fromDateFields(java.util.Date)"]
3304 [label="org.joda.time.LocalDateTime.fromDateFields(java.util.Date)"]
4118 [label="org.joda.time.YearMonthDay.fromDateFields(java.util.Date)"]
3447 [label="org.joda.time.LocalTime.fromDateFields(java.util.Date)"]
3970 [label="org.joda.time.TimeOfDay.fromDateFields(java.util.Date)"]
3545 [label="org.joda.time.MonthDay.fromDateFields(java.util.Date)"]
4070 [label="org.joda.time.YearMonth.fromDateFields(java.util.Date)"]
3444 [label="org.joda.time.LocalTime.fromMillisOfDay(long)"]
3971 [label="org.joda.time.TimeOfDay.fromMillisOfDay(long)"]
3445 [label="org.joda.time.LocalTime.fromMillisOfDay(long,org.joda.time.Chronology)"]
3972 [label="org.joda.time.TimeOfDay.fromMillisOfDay(long,org.joda.time.Chronology)"]
1816 [label="org.joda.time.format.DateTimeFormat.fullDate()"]
1818 [label="org.joda.time.format.DateTimeFormat.fullDateTime()"]
1817 [label="org.joda.time.format.DateTimeFormat.fullTime()"]
3145 [label="org.joda.time.Interval.gap(org.joda.time.ReadableInterval)"]
2659 [label="java.lang.ThreadLocal.get()"]
3526 [label="org.joda.time.MonthDay$Property.get()"]
3789 [label="org.joda.time.Partial$Property.get()"]
3957 [label="org.joda.time.TimeOfDay$Property.get()"]
4052 [label="org.joda.time.YearMonth$Property.get()"]
4106 [label="org.joda.time.YearMonthDay$Property.get()"]
1354 [label="org.joda.time.field.AbstractPartialFieldProperty.get()"]
1383 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.get()"]
2942 [label="java.util.concurrent.atomic.AtomicReference.get()"]
2671 [label="java.lang.ref.SoftReference.get()"]
3187 [label="java.util.Calendar.get(int)"]
2074 [label="java.util.ArrayList.get(int)"]
2014 [label="java.util.List.get(int)"]
1862 [label="java.util.concurrent.atomic.AtomicReferenceArray.get(int)"]
933 [label="java.util.Map.get(java.lang.Object)"]
952 [label="java.util.TreeMap.get(java.lang.Object)"]
1137 [label="java.util.HashMap.get(java.lang.Object)"]
741 [label="java.util.concurrent.ConcurrentHashMap.get(java.lang.Object)"]
7 [label="org.joda.time.DateTimeField.get(long)"]
718 [label="org.joda.time.chrono.BasicYearDateTimeField.get(long)"]
968 [label="org.joda.time.chrono.GJYearOfEraDateTimeField.get(long)"]
917 [label="org.joda.time.chrono.GJEraDateTimeField.get(long)"]
904 [label="org.joda.time.chrono.GJDayOfWeekDateTimeField.get(long)"]
600 [label="org.joda.time.chrono.BasicDayOfMonthDateTimeField.get(long)"]
616 [label="org.joda.time.chrono.BasicDayOfYearDateTimeField.get(long)"]
699 [label="org.joda.time.chrono.BasicWeekyearDateTimeField.get(long)"]
683 [label="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.get(long)"]
650 [label="org.joda.time.chrono.BasicMonthOfYearDateTimeField.get(long)"]
787 [label="org.joda.time.chrono.GJChronology$CutoverField.get(long)"]
1014 [label="org.joda.time.chrono.ISOYearOfEraDateTimeField.get(long)"]
1098 [label="org.joda.time.chrono.LimitChronology$LimitDateTimeField.get(long)"]
1177 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.get(long)"]
1694 [label="org.joda.time.field.UnsupportedDateTimeField.get(long)"]
1640 [label="org.joda.time.field.PreciseDateTimeField.get(long)"]
1757 [label="org.joda.time.field.ZeroIsMaxDateTimeField.get(long)"]
1625 [label="org.joda.time.field.OffsetDateTimeField.get(long)"]
1573 [label="org.joda.time.field.DividedDateTimeField.get(long)"]
1655 [label="org.joda.time.field.RemainderDateTimeField.get(long)"]
1414 [label="org.joda.time.field.BaseDateTimeField.get(long)"]
1685 [label="org.joda.time.field.SkipUndoDateTimeField.get(long)"]
1489 [label="org.joda.time.field.DelegatedDateTimeField.get(long)"]
1681 [label="org.joda.time.field.SkipDateTimeField.get(long)"]
1470 [label="org.joda.time.field.DecoratedDateTimeField.get(long)"]
86 [label="org.joda.time.base.AbstractInstant.get(org.joda.time.DateTimeField)"]
2 [label="org.joda.time.base.AbstractDateTime.get(org.joda.time.DateTimeFieldType)"]
83 [label="org.joda.time.base.AbstractInstant.get(org.joda.time.DateTimeFieldType)"]
172 [label="org.joda.time.base.AbstractPartial.get(org.joda.time.DateTimeFieldType)"]
1372 [label="org.joda.time.ReadableInstant.get(org.joda.time.DateTimeFieldType)"]
608 [label="org.joda.time.ReadablePartial.get(org.joda.time.DateTimeFieldType)"]
3203 [label="org.joda.time.LocalDate.get(org.joda.time.DateTimeFieldType)"]
3319 [label="org.joda.time.LocalDateTime.get(org.joda.time.DateTimeFieldType)"]
3459 [label="org.joda.time.LocalTime.get(org.joda.time.DateTimeFieldType)"]
202 [label="org.joda.time.base.AbstractPeriod.get(org.joda.time.DurationFieldType)"]
385 [label="org.joda.time.base.BaseSingleFieldPeriod.get(org.joda.time.DurationFieldType)"]
2351 [label="org.joda.time.ReadablePeriod.get(org.joda.time.DurationFieldType)"]
291 [label="org.joda.time.Chronology.get(org.joda.time.ReadablePartial,long)"]
478 [label="org.joda.time.chrono.BaseChronology.get(org.joda.time.ReadablePartial,long)"]
333 [label="org.joda.time.Chronology.get(org.joda.time.ReadablePeriod,long)"]
331 [label="org.joda.time.chrono.BaseChronology.get(org.joda.time.ReadablePeriod,long)"]
319 [label="org.joda.time.Chronology.get(org.joda.time.ReadablePeriod,long,long)"]
480 [label="org.joda.time.chrono.BaseChronology.get(org.joda.time.ReadablePeriod,long,long)"]
2292 [label="org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix.getAffixes()"]
2324 [label="org.joda.time.format.PeriodFormatterBuilder$RegExAffix.getAffixes()"]
2336 [label="org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.getAffixes()"]
949 [label="java.text.DateFormatSymbols.getAmPmStrings()"]
580 [label="org.joda.time.chrono.BasicChronology.getApproxMillisAtEpochDividedByTwo()"]
1360 [label="org.joda.time.field.AbstractPartialFieldProperty.getAsShortText()"]
1388 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.getAsShortText()"]
795 [label="org.joda.time.DateTimeField.getAsShortText(int,java.util.Locale)"]
907 [label="org.joda.time.chrono.GJDayOfWeekDateTimeField.getAsShortText(int,java.util.Locale)"]
958 [label="org.joda.time.chrono.GJMonthOfYearDateTimeField.getAsShortText(int,java.util.Locale)"]
794 [label="org.joda.time.chrono.GJChronology$CutoverField.getAsShortText(int,java.util.Locale)"]
1181 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getAsShortText(int,java.util.Locale)"]
1705 [label="org.joda.time.field.UnsupportedDateTimeField.getAsShortText(int,java.util.Locale)"]
1421 [label="org.joda.time.field.BaseDateTimeField.getAsShortText(int,java.util.Locale)"]
1503 [label="org.joda.time.field.DelegatedDateTimeField.getAsShortText(int,java.util.Locale)"]
1361 [label="org.joda.time.field.AbstractPartialFieldProperty.getAsShortText(java.util.Locale)"]
1389 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.getAsShortText(java.util.Locale)"]
1499 [label="org.joda.time.DateTimeField.getAsShortText(long)"]
1702 [label="org.joda.time.field.UnsupportedDateTimeField.getAsShortText(long)"]
1422 [label="org.joda.time.field.BaseDateTimeField.getAsShortText(long)"]
1498 [label="org.joda.time.field.DelegatedDateTimeField.getAsShortText(long)"]
793 [label="org.joda.time.DateTimeField.getAsShortText(long,java.util.Locale)"]
792 [label="org.joda.time.chrono.GJChronology$CutoverField.getAsShortText(long,java.util.Locale)"]
1100 [label="org.joda.time.chrono.LimitChronology$LimitDateTimeField.getAsShortText(long,java.util.Locale)"]
1179 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getAsShortText(long,java.util.Locale)"]
1701 [label="org.joda.time.field.UnsupportedDateTimeField.getAsShortText(long,java.util.Locale)"]
1420 [label="org.joda.time.field.BaseDateTimeField.getAsShortText(long,java.util.Locale)"]
1497 [label="org.joda.time.field.DelegatedDateTimeField.getAsShortText(long,java.util.Locale)"]
1362 [label="org.joda.time.DateTimeField.getAsShortText(org.joda.time.ReadablePartial,int,java.util.Locale)"]
1703 [label="org.joda.time.field.UnsupportedDateTimeField.getAsShortText(org.joda.time.ReadablePartial,int,java.util.Locale)"]
1423 [label="org.joda.time.field.BaseDateTimeField.getAsShortText(org.joda.time.ReadablePartial,int,java.util.Locale)"]
1500 [label="org.joda.time.field.DelegatedDateTimeField.getAsShortText(org.joda.time.ReadablePartial,int,java.util.Locale)"]
1502 [label="org.joda.time.DateTimeField.getAsShortText(org.joda.time.ReadablePartial,java.util.Locale)"]
1704 [label="org.joda.time.field.UnsupportedDateTimeField.getAsShortText(org.joda.time.ReadablePartial,java.util.Locale)"]
1424 [label="org.joda.time.field.BaseDateTimeField.getAsShortText(org.joda.time.ReadablePartial,java.util.Locale)"]
1501 [label="org.joda.time.field.DelegatedDateTimeField.getAsShortText(org.joda.time.ReadablePartial,java.util.Locale)"]
1353 [label="org.joda.time.field.AbstractPartialFieldProperty.getAsString()"]
1385 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.getAsString()"]
1356 [label="org.joda.time.field.AbstractPartialFieldProperty.getAsText()"]
1386 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.getAsText()"]
791 [label="org.joda.time.DateTimeField.getAsText(int,java.util.Locale)"]
516 [label="org.joda.time.chrono.BasicChronology$HalfdayField.getAsText(int,java.util.Locale)"]
918 [label="org.joda.time.chrono.GJEraDateTimeField.getAsText(int,java.util.Locale)"]
905 [label="org.joda.time.chrono.GJDayOfWeekDateTimeField.getAsText(int,java.util.Locale)"]
956 [label="org.joda.time.chrono.GJMonthOfYearDateTimeField.getAsText(int,java.util.Locale)"]
790 [label="org.joda.time.chrono.GJChronology$CutoverField.getAsText(int,java.util.Locale)"]
1180 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getAsText(int,java.util.Locale)"]
1700 [label="org.joda.time.field.UnsupportedDateTimeField.getAsText(int,java.util.Locale)"]
1415 [label="org.joda.time.field.BaseDateTimeField.getAsText(int,java.util.Locale)"]
1496 [label="org.joda.time.field.DelegatedDateTimeField.getAsText(int,java.util.Locale)"]
1357 [label="org.joda.time.field.AbstractPartialFieldProperty.getAsText(java.util.Locale)"]
1387 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.getAsText(java.util.Locale)"]
1492 [label="org.joda.time.DateTimeField.getAsText(long)"]
1697 [label="org.joda.time.field.UnsupportedDateTimeField.getAsText(long)"]
1416 [label="org.joda.time.field.BaseDateTimeField.getAsText(long)"]
1491 [label="org.joda.time.field.DelegatedDateTimeField.getAsText(long)"]
789 [label="org.joda.time.DateTimeField.getAsText(long,java.util.Locale)"]
788 [label="org.joda.time.chrono.GJChronology$CutoverField.getAsText(long,java.util.Locale)"]
1099 [label="org.joda.time.chrono.LimitChronology$LimitDateTimeField.getAsText(long,java.util.Locale)"]
1178 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getAsText(long,java.util.Locale)"]
1696 [label="org.joda.time.field.UnsupportedDateTimeField.getAsText(long,java.util.Locale)"]
1413 [label="org.joda.time.field.BaseDateTimeField.getAsText(long,java.util.Locale)"]
1490 [label="org.joda.time.field.DelegatedDateTimeField.getAsText(long,java.util.Locale)"]
1359 [label="org.joda.time.DateTimeField.getAsText(org.joda.time.ReadablePartial,int,java.util.Locale)"]
1698 [label="org.joda.time.field.UnsupportedDateTimeField.getAsText(org.joda.time.ReadablePartial,int,java.util.Locale)"]
1417 [label="org.joda.time.field.BaseDateTimeField.getAsText(org.joda.time.ReadablePartial,int,java.util.Locale)"]
1493 [label="org.joda.time.field.DelegatedDateTimeField.getAsText(org.joda.time.ReadablePartial,int,java.util.Locale)"]
1495 [label="org.joda.time.DateTimeField.getAsText(org.joda.time.ReadablePartial,java.util.Locale)"]
1699 [label="org.joda.time.field.UnsupportedDateTimeField.getAsText(org.joda.time.ReadablePartial,java.util.Locale)"]
1418 [label="org.joda.time.field.BaseDateTimeField.getAsText(org.joda.time.ReadablePartial,java.util.Locale)"]
1494 [label="org.joda.time.field.DelegatedDateTimeField.getAsText(org.joda.time.ReadablePartial,java.util.Locale)"]
2005 [label="org.joda.time.DateTimeZone.getAvailableIDs()"]
2986 [label="org.joda.time.tz.Provider.getAvailableIDs()"]
648 [label="org.joda.time.chrono.BasicChronology.getAverageMillisPerMonth()"]
698 [label="org.joda.time.chrono.BasicChronology.getAverageMillisPerYear()"]
579 [label="org.joda.time.chrono.BasicChronology.getAverageMillisPerYearDividedByTwo()"]
530 [label="org.joda.time.chrono.AssembledChronology.getBase()"]
2267 [label="java.util.ResourceBundle.getBundle(java.lang.String,java.util.Locale)"]
3116 [label="java.lang.Throwable.getCause()"]
10 [label="org.joda.time.base.AbstractDateTime.getCenturyOfEra()"]
3240 [label="org.joda.time.LocalDate.getCenturyOfEra()"]
3370 [label="org.joda.time.LocalDateTime.getCenturyOfEra()"]
1347 [label="org.joda.time.base.BaseDateTime.getChronology()"]
282 [label="org.joda.time.base.BaseInterval.getChronology()"]
308 [label="org.joda.time.base.BasePartial.getChronology()"]
4 [label="org.joda.time.ReadableInstant.getChronology()"]
3124 [label="org.joda.time.Instant.getChronology()"]
127 [label="org.joda.time.ReadableInterval.getChronology()"]
163 [label="org.joda.time.ReadablePartial.getChronology()"]
3160 [label="org.joda.time.LocalDate.getChronology()"]
3275 [label="org.joda.time.LocalDateTime.getChronology()"]
3602 [label="org.joda.time.MutableDateTime$Property.getChronology()"]
2690 [label="org.joda.time.DateMidnight$Property.getChronology()"]
2781 [label="org.joda.time.DateTime$Property.getChronology()"]
3217 [label="org.joda.time.LocalTime.getChronology()"]
3162 [label="org.joda.time.LocalDate$Property.getChronology()"]
3278 [label="org.joda.time.LocalDateTime$Property.getChronology()"]
3417 [label="org.joda.time.LocalTime$Property.getChronology()"]
3811 [label="org.joda.time.Partial.getChronology()"]
1983 [label="org.joda.time.format.DateTimeParserBucket.getChronology()"]
1381 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.getChronology()"]
235 [label="org.joda.time.convert.InstantConverter.getChronology(java.lang.Object,org.joda.time.Chronology)"]
294 [label="org.joda.time.convert.PartialConverter.getChronology(java.lang.Object,org.joda.time.Chronology)"]
1229 [label="org.joda.time.convert.AbstractConverter.getChronology(java.lang.Object,org.joda.time.Chronology)"]
1237 [label="org.joda.time.convert.CalendarConverter.getChronology(java.lang.Object,org.joda.time.Chronology)"]
1307 [label="org.joda.time.convert.ReadableInstantConverter.getChronology(java.lang.Object,org.joda.time.Chronology)"]
1320 [label="org.joda.time.convert.ReadablePartialConverter.getChronology(java.lang.Object,org.joda.time.Chronology)"]
232 [label="org.joda.time.convert.InstantConverter.getChronology(java.lang.Object,org.joda.time.DateTimeZone)"]
3198 [label="org.joda.time.convert.PartialConverter.getChronology(java.lang.Object,org.joda.time.DateTimeZone)"]
1228 [label="org.joda.time.convert.AbstractConverter.getChronology(java.lang.Object,org.joda.time.DateTimeZone)"]
1240 [label="org.joda.time.convert.CalendarConverter.getChronology(java.lang.Object,org.joda.time.DateTimeZone)"]
1306 [label="org.joda.time.convert.ReadableInstantConverter.getChronology(java.lang.Object,org.joda.time.DateTimeZone)"]
1319 [label="org.joda.time.convert.ReadablePartialConverter.getChronology(java.lang.Object,org.joda.time.DateTimeZone)"]
95 [label="org.joda.time.DateTimeUtils.getChronology(org.joda.time.Chronology)"]
323 [label="java.lang.Object.getClass()"]
2669 [label="java.lang.Class.getClassLoader()"]
2978 [label="org.joda.time.DateTimeZone.getConvertedId(java.lang.String)"]
3225 [label="java.util.TimeZone.getDSTSavings()"]
3192 [label="java.util.Date.getDate()"]
941 [label="org.joda.time.DateTimeUtils.getDateFormatSymbols(java.util.Locale)"]
1792 [label="java.text.DateFormat.getDateInstance(int,java.util.Locale)"]
535 [label="org.joda.time.chrono.BasicChronology.getDateMidnightMillis(int,int,int)"]
1058 [label="org.joda.time.chrono.JulianChronology.getDateMidnightMillis(int,int,int)"]
1794 [label="java.text.DateFormat.getDateTimeInstance(int,int,java.util.Locale)"]
423 [label="org.joda.time.Chronology.getDateTimeMillis(int,int,int,int)"]
424 [label="org.joda.time.chrono.BaseChronology.getDateTimeMillis(int,int,int,int)"]
422 [label="org.joda.time.chrono.AssembledChronology.getDateTimeMillis(int,int,int,int)"]
531 [label="org.joda.time.chrono.BasicChronology.getDateTimeMillis(int,int,int,int)"]
878 [label="org.joda.time.chrono.GJChronology.getDateTimeMillis(int,int,int,int)"]
1129 [label="org.joda.time.chrono.LimitChronology.getDateTimeMillis(int,int,int,int)"]
1216 [label="org.joda.time.chrono.ZonedChronology.getDateTimeMillis(int,int,int,int)"]
239 [label="org.joda.time.Chronology.getDateTimeMillis(int,int,int,int,int,int,int)"]
426 [label="org.joda.time.chrono.BaseChronology.getDateTimeMillis(int,int,int,int,int,int,int)"]
425 [label="org.joda.time.chrono.AssembledChronology.getDateTimeMillis(int,int,int,int,int,int,int)"]
534 [label="org.joda.time.chrono.BasicChronology.getDateTimeMillis(int,int,int,int,int,int,int)"]
879 [label="org.joda.time.chrono.GJChronology.getDateTimeMillis(int,int,int,int,int,int,int)"]
1130 [label="org.joda.time.chrono.LimitChronology.getDateTimeMillis(int,int,int,int,int,int,int)"]
1218 [label="org.joda.time.chrono.ZonedChronology.getDateTimeMillis(int,int,int,int,int,int,int)"]
428 [label="org.joda.time.Chronology.getDateTimeMillis(long,int,int,int,int)"]
429 [label="org.joda.time.chrono.BaseChronology.getDateTimeMillis(long,int,int,int,int)"]
427 [label="org.joda.time.chrono.AssembledChronology.getDateTimeMillis(long,int,int,int,int)"]
1131 [label="org.joda.time.chrono.LimitChronology.getDateTimeMillis(long,int,int,int,int)"]
1219 [label="org.joda.time.chrono.ZonedChronology.getDateTimeMillis(long,int,int,int,int)"]
533 [label="org.joda.time.chrono.BasicChronology.getDateTimeMillis0(int,int,int,int)"]
26 [label="org.joda.time.base.AbstractDateTime.getDayOfMonth()"]
2592 [label="org.joda.time.LocalDate.getDayOfMonth()"]
3327 [label="org.joda.time.LocalDateTime.getDayOfMonth()"]
4146 [label="org.joda.time.YearMonthDay.getDayOfMonth()"]
3567 [label="org.joda.time.MonthDay.getDayOfMonth()"]
583 [label="org.joda.time.chrono.BasicChronology.getDayOfMonth(long)"]
633 [label="org.joda.time.chrono.BasicFixedMonthChronology.getDayOfMonth(long)"]
1043 [label="org.joda.time.chrono.IslamicChronology.getDayOfMonth(long)"]
585 [label="org.joda.time.chrono.BasicChronology.getDayOfMonth(long,int)"]
584 [label="org.joda.time.chrono.BasicChronology.getDayOfMonth(long,int,int)"]
28 [label="org.joda.time.base.AbstractDateTime.getDayOfWeek()"]
3246 [label="org.joda.time.LocalDate.getDayOfWeek()"]
3376 [label="org.joda.time.LocalDateTime.getDayOfWeek()"]
573 [label="org.joda.time.chrono.BasicChronology.getDayOfWeek(long)"]
915 [label="org.joda.time.chrono.GJLocaleSymbols.getDayOfWeekMaxShortTextLength()"]
913 [label="org.joda.time.chrono.GJLocaleSymbols.getDayOfWeekMaxTextLength()"]
24 [label="org.joda.time.base.AbstractDateTime.getDayOfYear()"]
3245 [label="org.joda.time.LocalDate.getDayOfYear()"]
3375 [label="org.joda.time.LocalDateTime.getDayOfYear()"]
586 [label="org.joda.time.chrono.BasicChronology.getDayOfYear(long)"]
587 [label="org.joda.time.chrono.BasicChronology.getDayOfYear(long,int)"]
3019 [label="org.joda.time.Period.getDays()"]
3756 [label="org.joda.time.MutablePeriod.getDays()"]
3032 [label="org.joda.time.Days.getDays()"]
604 [label="org.joda.time.chrono.BasicChronology.getDaysInMonthMax()"]
609 [label="org.joda.time.chrono.BasicChronology.getDaysInMonthMax(int)"]
591 [label="org.joda.time.chrono.BasicChronology.getDaysInMonthMax(long)"]
593 [label="org.joda.time.chrono.BasicChronology.getDaysInMonthMaxForSet(long,int)"]
643 [label="org.joda.time.chrono.BasicGJChronology.getDaysInMonthMaxForSet(long,int)"]
568 [label="org.joda.time.chrono.BasicChronology.getDaysInYear(int)"]
1045 [label="org.joda.time.chrono.IslamicChronology.getDaysInYear(int)"]
620 [label="org.joda.time.chrono.BasicChronology.getDaysInYearMax()"]
592 [label="org.joda.time.chrono.BasicChronology.getDaysInYearMonth(int,int)"]
634 [label="org.joda.time.chrono.BasicFixedMonthChronology.getDaysInYearMonth(int,int)"]
642 [label="org.joda.time.chrono.BasicGJChronology.getDaysInYearMonth(int,int)"]
1046 [label="org.joda.time.chrono.IslamicChronology.getDaysInYearMonth(int,int)"]
740 [label="org.joda.time.DateTimeZone.getDefault()"]
45 [label="java.util.Locale.getDefault()"]
2968 [label="java.util.TimeZone.getDefault()"]
2263 [label="org.joda.time.format.PeriodFormat.getDefault()"]
2994 [label="org.joda.time.DateTimeZone.getDefaultNameProvider()"]
2987 [label="org.joda.time.DateTimeZone.getDefaultProvider()"]
1999 [label="org.joda.time.DateTimeUtils.getDefaultTimeZoneNames()"]
802 [label="org.joda.time.DateTimeField.getDifference(long,long)"]
370 [label="org.joda.time.DurationField.getDifference(long,long)"]
976 [label="org.joda.time.chrono.GJYearOfEraDateTimeField.getDifference(long,long)"]
801 [label="org.joda.time.chrono.GJChronology$CutoverField.getDifference(long,long)"]
846 [label="org.joda.time.chrono.GJChronology$ImpreciseCutoverField.getDifference(long,long)"]
854 [label="org.joda.time.chrono.GJChronology$LinkedDurationField.getDifference(long,long)"]
1019 [label="org.joda.time.chrono.ISOYearOfEraDateTimeField.getDifference(long,long)"]
1094 [label="org.joda.time.chrono.LimitChronology$LimitDurationField.getDifference(long,long)"]
1104 [label="org.joda.time.chrono.LimitChronology$LimitDateTimeField.getDifference(long,long)"]
1167 [label="org.joda.time.chrono.ZonedChronology$ZonedDurationField.getDifference(long,long)"]
1192 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getDifference(long,long)"]
1751 [label="org.joda.time.field.UnsupportedDurationField.getDifference(long,long)"]
1712 [label="org.joda.time.field.UnsupportedDateTimeField.getDifference(long,long)"]
1763 [label="org.joda.time.field.ZeroIsMaxDateTimeField.getDifference(long,long)"]
1578 [label="org.joda.time.field.DividedDateTimeField.getDifference(long,long)"]
664 [label="org.joda.time.field.ImpreciseDateTimeField.getDifference(long,long)"]
1441 [label="org.joda.time.field.BaseDateTimeField.getDifference(long,long)"]
1510 [label="org.joda.time.field.DelegatedDateTimeField.getDifference(long,long)"]
1466 [label="org.joda.time.field.BaseDurationField.getDifference(long,long)"]
1560 [label="org.joda.time.field.DelegatedDurationField.getDifference(long,long)"]
1675 [label="org.joda.time.field.ScaledDurationField.getDifference(long,long)"]
1605 [label="org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.getDifference(long,long)"]
1618 [label="org.joda.time.field.MillisDurationField.getDifference(long,long)"]
1390 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.getDifference(org.joda.time.ReadableInstant)"]
804 [label="org.joda.time.DateTimeField.getDifferenceAsLong(long,long)"]
1096 [label="org.joda.time.DurationField.getDifferenceAsLong(long,long)"]
724 [label="org.joda.time.chrono.BasicYearDateTimeField.getDifferenceAsLong(long,long)"]
977 [label="org.joda.time.chrono.GJYearOfEraDateTimeField.getDifferenceAsLong(long,long)"]
704 [label="org.joda.time.chrono.BasicWeekyearDateTimeField.getDifferenceAsLong(long,long)"]
663 [label="org.joda.time.chrono.BasicMonthOfYearDateTimeField.getDifferenceAsLong(long,long)"]
803 [label="org.joda.time.chrono.GJChronology$CutoverField.getDifferenceAsLong(long,long)"]
847 [label="org.joda.time.chrono.GJChronology$ImpreciseCutoverField.getDifferenceAsLong(long,long)"]
855 [label="org.joda.time.chrono.GJChronology$LinkedDurationField.getDifferenceAsLong(long,long)"]
1020 [label="org.joda.time.chrono.ISOYearOfEraDateTimeField.getDifferenceAsLong(long,long)"]
1095 [label="org.joda.time.chrono.LimitChronology$LimitDurationField.getDifferenceAsLong(long,long)"]
1105 [label="org.joda.time.chrono.LimitChronology$LimitDateTimeField.getDifferenceAsLong(long,long)"]
1168 [label="org.joda.time.chrono.ZonedChronology$ZonedDurationField.getDifferenceAsLong(long,long)"]
1193 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getDifferenceAsLong(long,long)"]
1752 [label="org.joda.time.field.UnsupportedDurationField.getDifferenceAsLong(long,long)"]
1713 [label="org.joda.time.field.UnsupportedDateTimeField.getDifferenceAsLong(long,long)"]
1649 [label="org.joda.time.field.PreciseDurationField.getDifferenceAsLong(long,long)"]
1764 [label="org.joda.time.field.ZeroIsMaxDateTimeField.getDifferenceAsLong(long,long)"]
1579 [label="org.joda.time.field.DividedDateTimeField.getDifferenceAsLong(long,long)"]
1598 [label="org.joda.time.field.ImpreciseDateTimeField.getDifferenceAsLong(long,long)"]
1442 [label="org.joda.time.field.BaseDateTimeField.getDifferenceAsLong(long,long)"]
1511 [label="org.joda.time.field.DelegatedDateTimeField.getDifferenceAsLong(long,long)"]
1482 [label="org.joda.time.field.DecoratedDurationField.getDifferenceAsLong(long,long)"]
1561 [label="org.joda.time.field.DelegatedDurationField.getDifferenceAsLong(long,long)"]
1676 [label="org.joda.time.field.ScaledDurationField.getDifferenceAsLong(long,long)"]
1606 [label="org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.getDifferenceAsLong(long,long)"]
1619 [label="org.joda.time.field.MillisDurationField.getDifferenceAsLong(long,long)"]
1391 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.getDifferenceAsLong(org.joda.time.ReadableInstant)"]
1658 [label="org.joda.time.field.RemainderDateTimeField.getDivided(int)"]
247 [label="org.joda.time.convert.ConverterManager.getDurationConverter(java.lang.Object)"]
1264 [label="org.joda.time.convert.ConverterManager.getDurationConverters()"]
557 [label="org.joda.time.DateTimeField.getDurationField()"]
928 [label="org.joda.time.chrono.GJEraDateTimeField.getDurationField()"]
680 [label="org.joda.time.chrono.BasicSingleEraDateTimeField.getDurationField()"]
1691 [label="org.joda.time.field.UnsupportedDateTimeField.getDurationField()"]
1426 [label="org.joda.time.field.BaseDateTimeField.getDurationField()"]
1519 [label="org.joda.time.field.DelegatedDateTimeField.getDurationField()"]
1471 [label="org.joda.time.field.DecoratedDateTimeField.getDurationField()"]
1363 [label="org.joda.time.field.AbstractPartialFieldProperty.getDurationField()"]
1392 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.getDurationField()"]
248 [label="org.joda.time.convert.DurationConverter.getDurationMillis(java.lang.Object)"]
1291 [label="org.joda.time.convert.LongConverter.getDurationMillis(java.lang.Object)"]
1301 [label="org.joda.time.convert.ReadableDurationConverter.getDurationMillis(java.lang.Object)"]
1311 [label="org.joda.time.convert.ReadableIntervalConverter.getDurationMillis(java.lang.Object)"]
1333 [label="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)"]
271 [label="org.joda.time.DateTimeUtils.getDurationMillis(org.joda.time.ReadableDuration)"]
177 [label="org.joda.time.DateTimeFieldType.getDurationType()"]
128 [label="org.joda.time.base.AbstractInterval.getEnd()"]
3016 [label="org.joda.time.ReadableInterval.getEnd()"]
284 [label="org.joda.time.base.BaseInterval.getEndMillis()"]
129 [label="org.joda.time.ReadableInterval.getEndMillis()"]
8 [label="org.joda.time.base.AbstractDateTime.getEra()"]
3239 [label="org.joda.time.LocalDate.getEra()"]
3369 [label="org.joda.time.LocalDateTime.getEra()"]
930 [label="org.joda.time.chrono.GJLocaleSymbols.getEraMaxTextLength()"]
942 [label="java.text.DateFormatSymbols.getEras()"]
3604 [label="org.joda.time.MutableDateTime$Property.getField()"]
3525 [label="org.joda.time.MonthDay$Property.getField()"]
3788 [label="org.joda.time.Partial$Property.getField()"]
3956 [label="org.joda.time.TimeOfDay$Property.getField()"]
4051 [label="org.joda.time.YearMonth$Property.getField()"]
4105 [label="org.joda.time.YearMonthDay$Property.getField()"]
1350 [label="org.joda.time.field.AbstractPartialFieldProperty.getField()"]
1379 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.getField()"]
168 [label="org.joda.time.base.AbstractPartial.getField(int)"]
471 [label="org.joda.time.ReadablePartial.getField(int)"]
164 [label="org.joda.time.base.AbstractPartial.getField(int,org.joda.time.Chronology)"]
3201 [label="org.joda.time.LocalDate.getField(int,org.joda.time.Chronology)"]
3317 [label="org.joda.time.LocalDateTime.getField(int,org.joda.time.Chronology)"]
4128 [label="org.joda.time.YearMonthDay.getField(int,org.joda.time.Chronology)"]
3457 [label="org.joda.time.LocalTime.getField(int,org.joda.time.Chronology)"]
3986 [label="org.joda.time.TimeOfDay.getField(int,org.joda.time.Chronology)"]
3553 [label="org.joda.time.MonthDay.getField(int,org.joda.time.Chronology)"]
3808 [label="org.joda.time.Partial.getField(int,org.joda.time.Chronology)"]
4078 [label="org.joda.time.YearMonth.getField(int,org.joda.time.Chronology)"]
5 [label="org.joda.time.DateTimeFieldType.getField(org.joda.time.Chronology)"]
369 [label="org.joda.time.DurationFieldType.getField(org.joda.time.Chronology)"]
2918 [label="org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField(org.joda.time.Chronology)"]
3074 [label="org.joda.time.DurationFieldType$StandardDurationFieldType.getField(org.joda.time.Chronology)"]
382 [label="org.joda.time.base.BaseSingleFieldPeriod.getFieldType()"]
3021 [label="org.joda.time.Days.getFieldType()"]
4032 [label="org.joda.time.Weeks.getFieldType()"]
3089 [label="org.joda.time.Hours.getFieldType()"]
3506 [label="org.joda.time.Minutes.getFieldType()"]
3937 [label="org.joda.time.Seconds.getFieldType()"]
3585 [label="org.joda.time.Months.getFieldType()"]
4172 [label="org.joda.time.Years.getFieldType()"]
2405 [label="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldType()"]
1349 [label="org.joda.time.field.AbstractPartialFieldProperty.getFieldType()"]
1378 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.getFieldType()"]
162 [label="org.joda.time.base.AbstractPartial.getFieldType(int)"]
197 [label="org.joda.time.base.AbstractPeriod.getFieldType(int)"]
379 [label="org.joda.time.base.BaseSingleFieldPeriod.getFieldType(int)"]
183 [label="org.joda.time.ReadablePartial.getFieldType(int)"]
213 [label="org.joda.time.ReadablePeriod.getFieldType(int)"]
198 [label="org.joda.time.PeriodType.getFieldType(int)"]
166 [label="org.joda.time.base.AbstractPartial.getFieldTypes()"]
199 [label="org.joda.time.base.AbstractPeriod.getFieldTypes()"]
4129 [label="org.joda.time.YearMonthDay.getFieldTypes()"]
3987 [label="org.joda.time.TimeOfDay.getFieldTypes()"]
3554 [label="org.joda.time.MonthDay.getFieldTypes()"]
3809 [label="org.joda.time.Partial.getFieldTypes()"]
4079 [label="org.joda.time.YearMonth.getFieldTypes()"]
2342 [label="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue(org.joda.time.ReadablePeriod)"]
169 [label="org.joda.time.base.AbstractPartial.getFields()"]
571 [label="org.joda.time.chrono.BasicChronology.getFirstWeekOfYearMillis(int)"]
3824 [label="org.joda.time.Partial.getFormatter()"]
2030 [label="org.joda.time.format.DateTimeFormatterBuilder.getFormatter()"]
1781 [label="org.joda.time.format.DateTimeFormat$StyleFormatter.getFormatter(java.util.Locale)"]
1980 [label="org.joda.time.format.DateTimeFormatterBuilder$Fraction.getFractionData(long,org.joda.time.DateTimeField)"]
1242 [label="java.util.GregorianCalendar.getGregorianChange()"]
523 [label="org.joda.time.chrono.GJLocaleSymbols.getHalfdayMaxTextLength()"]
30 [label="org.joda.time.base.AbstractDateTime.getHourOfDay()"]
3328 [label="org.joda.time.LocalDateTime.getHourOfDay()"]
2828 [label="org.joda.time.LocalTime.getHourOfDay()"]
4004 [label="org.joda.time.TimeOfDay.getHourOfDay()"]
3087 [label="org.joda.time.Period.getHours()"]
3757 [label="org.joda.time.MutablePeriod.getHours()"]
3096 [label="org.joda.time.Hours.getHours()"]
3305 [label="java.util.Date.getHours()"]
549 [label="org.joda.time.DateTimeZone.getID()"]
2977 [label="java.util.TimeZone.getID()"]
3113 [label="org.joda.time.IllegalFieldValueException.getIllegalValueAsString()"]
3768 [label="org.joda.time.PeriodType.getIndexedField(org.joda.time.ReadablePeriod,int)"]
2424 [label="org.joda.time.tz.CachedDateTimeZone.getInfo(long)"]
220 [label="org.joda.time.chrono.ISOChronology.getInstance()"]
739 [label="org.joda.time.chrono.BuddhistChronology.getInstance()"]
860 [label="org.joda.time.chrono.GJChronology.getInstance()"]
760 [label="org.joda.time.chrono.CopticChronology.getInstance()"]
772 [label="org.joda.time.chrono.EthiopicChronology.getInstance()"]
986 [label="org.joda.time.chrono.GregorianChronology.getInstance()"]
1054 [label="org.joda.time.chrono.JulianChronology.getInstance()"]
1029 [label="org.joda.time.chrono.IslamicChronology.getInstance()"]
230 [label="org.joda.time.convert.ConverterManager.getInstance()"]
3336 [label="java.util.Calendar.getInstance(java.util.TimeZone)"]
48 [label="java.util.Calendar.getInstance(java.util.TimeZone,java.util.Locale)"]
1062 [label="org.joda.time.chrono.LenientChronology.getInstance(org.joda.time.Chronology)"]
1142 [label="org.joda.time.chrono.StrictChronology.getInstance(org.joda.time.Chronology)"]
763 [label="org.joda.time.chrono.ZonedChronology.getInstance(org.joda.time.Chronology,org.joda.time.DateTimeZone)"]
745 [label="org.joda.time.chrono.LimitChronology.getInstance(org.joda.time.Chronology,org.joda.time.ReadableDateTime,org.joda.time.ReadableDateTime)"]
1148 [label="org.joda.time.field.StrictDateTimeField.getInstance(org.joda.time.DateTimeField)"]
1068 [label="org.joda.time.field.LenientDateTimeField.getInstance(org.joda.time.DateTimeField,org.joda.time.Chronology)"]
2906 [label="org.joda.time.DateTimeComparator.getInstance(org.joda.time.DateTimeFieldType)"]
2907 [label="org.joda.time.DateTimeComparator.getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType)"]
487 [label="org.joda.time.field.UnsupportedDateTimeField.getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DurationField)"]
92 [label="org.joda.time.chrono.ISOChronology.getInstance(org.joda.time.DateTimeZone)"]
738 [label="org.joda.time.chrono.BuddhistChronology.getInstance(org.joda.time.DateTimeZone)"]
861 [label="org.joda.time.chrono.GJChronology.getInstance(org.joda.time.DateTimeZone)"]
759 [label="org.joda.time.chrono.CopticChronology.getInstance(org.joda.time.DateTimeZone)"]
771 [label="org.joda.time.chrono.EthiopicChronology.getInstance(org.joda.time.DateTimeZone)"]
865 [label="org.joda.time.chrono.GregorianChronology.getInstance(org.joda.time.DateTimeZone)"]
1052 [label="org.joda.time.chrono.JulianChronology.getInstance(org.joda.time.DateTimeZone)"]
1028 [label="org.joda.time.chrono.IslamicChronology.getInstance(org.joda.time.DateTimeZone)"]
761 [label="org.joda.time.chrono.CopticChronology.getInstance(org.joda.time.DateTimeZone,int)"]
773 [label="org.joda.time.chrono.EthiopicChronology.getInstance(org.joda.time.DateTimeZone,int)"]
869 [label="org.joda.time.chrono.GregorianChronology.getInstance(org.joda.time.DateTimeZone,int)"]
868 [label="org.joda.time.chrono.JulianChronology.getInstance(org.joda.time.DateTimeZone,int)"]
872 [label="org.joda.time.chrono.GJChronology.getInstance(org.joda.time.DateTimeZone,long,int)"]
742 [label="org.joda.time.chrono.GJChronology.getInstance(org.joda.time.DateTimeZone,org.joda.time.ReadableInstant)"]
859 [label="org.joda.time.chrono.GJChronology.getInstance(org.joda.time.DateTimeZone,org.joda.time.ReadableInstant,int)"]
1030 [label="org.joda.time.chrono.IslamicChronology.getInstance(org.joda.time.DateTimeZone,org.joda.time.chrono.IslamicChronology$LeapYearPatternType)"]
485 [label="org.joda.time.field.UnsupportedDurationField.getInstance(org.joda.time.DurationFieldType)"]
330 [label="org.joda.time.chrono.ISOChronology.getInstanceUTC()"]
748 [label="org.joda.time.chrono.BuddhistChronology.getInstanceUTC()"]
825 [label="org.joda.time.chrono.GJChronology.getInstanceUTC()"]
1000 [label="org.joda.time.chrono.GregorianChronology.getInstanceUTC()"]
1033 [label="org.joda.time.chrono.IslamicChronology.getInstanceUTC()"]
180 [label="org.joda.time.DateTimeUtils.getInstantChronology(org.joda.time.ReadableInstant)"]
231 [label="org.joda.time.convert.ConverterManager.getInstantConverter(java.lang.Object)"]
1249 [label="org.joda.time.convert.ConverterManager.getInstantConverters()"]
233 [label="org.joda.time.convert.InstantConverter.getInstantMillis(java.lang.Object,org.joda.time.Chronology)"]
1227 [label="org.joda.time.convert.AbstractConverter.getInstantMillis(java.lang.Object,org.joda.time.Chronology)"]
1244 [label="org.joda.time.convert.CalendarConverter.getInstantMillis(java.lang.Object,org.joda.time.Chronology)"]
1286 [label="org.joda.time.convert.DateConverter.getInstantMillis(java.lang.Object,org.joda.time.Chronology)"]
1289 [label="org.joda.time.convert.LongConverter.getInstantMillis(java.lang.Object,org.joda.time.Chronology)"]
1308 [label="org.joda.time.convert.ReadableInstantConverter.getInstantMillis(java.lang.Object,org.joda.time.Chronology)"]
1328 [label="org.joda.time.convert.StringConverter.getInstantMillis(java.lang.Object,org.joda.time.Chronology)"]
114 [label="org.joda.time.DateTimeUtils.getInstantMillis(org.joda.time.ReadableInstant)"]
2419 [label="java.lang.Integer.getInteger(java.lang.String)"]
321 [label="org.joda.time.DateTimeUtils.getIntervalChronology(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)"]
1314 [label="org.joda.time.DateTimeUtils.getIntervalChronology(org.joda.time.ReadableInterval)"]
278 [label="org.joda.time.convert.ConverterManager.getIntervalConverter(java.lang.Object)"]
1272 [label="org.joda.time.convert.ConverterManager.getIntervalConverters()"]
2623 [label="java.util.Map$Entry.getKey()"]
2280 [label="java.util.ResourceBundle.getKeys()"]
951 [label="java.util.Locale.getLanguage()"]
2545 [label="org.joda.time.tz.DateTimeZoneBuilder.getLastRuleSet()"]
1395 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.getLeapAmount()"]
812 [label="org.joda.time.DateTimeField.getLeapAmount(long)"]
727 [label="org.joda.time.chrono.BasicYearDateTimeField.getLeapAmount(long)"]
709 [label="org.joda.time.chrono.BasicWeekyearDateTimeField.getLeapAmount(long)"]
668 [label="org.joda.time.chrono.BasicMonthOfYearDateTimeField.getLeapAmount(long)"]
811 [label="org.joda.time.chrono.GJChronology$CutoverField.getLeapAmount(long)"]
1109 [label="org.joda.time.chrono.LimitChronology$LimitDateTimeField.getLeapAmount(long)"]
1195 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getLeapAmount(long)"]
1720 [label="org.joda.time.field.UnsupportedDateTimeField.getLeapAmount(long)"]
1767 [label="org.joda.time.field.ZeroIsMaxDateTimeField.getLeapAmount(long)"]
1631 [label="org.joda.time.field.OffsetDateTimeField.getLeapAmount(long)"]
1522 [label="org.joda.time.field.DelegatedDateTimeField.getLeapAmount(long)"]
814 [label="org.joda.time.DateTimeField.getLeapDurationField()"]
728 [label="org.joda.time.chrono.BasicYearDateTimeField.getLeapDurationField()"]
710 [label="org.joda.time.chrono.BasicWeekyearDateTimeField.getLeapDurationField()"]
669 [label="org.joda.time.chrono.BasicMonthOfYearDateTimeField.getLeapDurationField()"]
813 [label="org.joda.time.chrono.GJChronology$CutoverField.getLeapDurationField()"]
1768 [label="org.joda.time.field.ZeroIsMaxDateTimeField.getLeapDurationField()"]
1632 [label="org.joda.time.field.OffsetDateTimeField.getLeapDurationField()"]
1523 [label="org.joda.time.field.DelegatedDateTimeField.getLeapDurationField()"]
1396 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.getLeapDurationField()"]
1036 [label="org.joda.time.chrono.IslamicChronology.getLeapYearPatternType()"]
2618 [label="org.joda.time.tz.ZoneInfoCompiler.getLenientISOChronology()"]
324 [label="org.joda.time.base.BaseLocal.getLocalMillis()"]
3013 [label="org.joda.time.LocalDate.getLocalMillis()"]
3277 [label="org.joda.time.LocalDateTime.getLocalMillis()"]
3083 [label="org.joda.time.LocalTime.getLocalMillis()"]
1873 [label="org.joda.time.format.DateTimeFormatter.getLocale()"]
2254 [label="org.joda.time.format.PeriodFormatter.getLocale()"]
1787 [label="org.joda.time.format.DateTimeParserBucket.getLocale()"]
2911 [label="org.joda.time.DateTimeComparator.getLowerLimit()"]
1076 [label="org.joda.time.chrono.LimitChronology.getLowerLimit()"]
597 [label="org.joda.time.chrono.BasicChronology.getMaxMonth()"]
596 [label="org.joda.time.chrono.BasicChronology.getMaxMonth(int)"]
595 [label="org.joda.time.chrono.BasicChronology.getMaxYear()"]
834 [label="org.joda.time.DateTimeField.getMaximumShortTextLength(java.util.Locale)"]
914 [label="org.joda.time.chrono.GJDayOfWeekDateTimeField.getMaximumShortTextLength(java.util.Locale)"]
963 [label="org.joda.time.chrono.GJMonthOfYearDateTimeField.getMaximumShortTextLength(java.util.Locale)"]
833 [label="org.joda.time.chrono.GJChronology$CutoverField.getMaximumShortTextLength(java.util.Locale)"]
1122 [label="org.joda.time.chrono.LimitChronology$LimitDateTimeField.getMaximumShortTextLength(java.util.Locale)"]
1209 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMaximumShortTextLength(java.util.Locale)"]
1730 [label="org.joda.time.field.UnsupportedDateTimeField.getMaximumShortTextLength(java.util.Locale)"]
1450 [label="org.joda.time.field.BaseDateTimeField.getMaximumShortTextLength(java.util.Locale)"]
1533 [label="org.joda.time.field.DelegatedDateTimeField.getMaximumShortTextLength(java.util.Locale)"]
1370 [label="org.joda.time.field.AbstractPartialFieldProperty.getMaximumShortTextLength(java.util.Locale)"]
1402 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumShortTextLength(java.util.Locale)"]
831 [label="org.joda.time.DateTimeField.getMaximumTextLength(java.util.Locale)"]
522 [label="org.joda.time.chrono.BasicChronology$HalfdayField.getMaximumTextLength(java.util.Locale)"]
929 [label="org.joda.time.chrono.GJEraDateTimeField.getMaximumTextLength(java.util.Locale)"]
912 [label="org.joda.time.chrono.GJDayOfWeekDateTimeField.getMaximumTextLength(java.util.Locale)"]
961 [label="org.joda.time.chrono.GJMonthOfYearDateTimeField.getMaximumTextLength(java.util.Locale)"]
681 [label="org.joda.time.chrono.BasicSingleEraDateTimeField.getMaximumTextLength(java.util.Locale)"]
830 [label="org.joda.time.chrono.GJChronology$CutoverField.getMaximumTextLength(java.util.Locale)"]
1121 [label="org.joda.time.chrono.LimitChronology$LimitDateTimeField.getMaximumTextLength(java.util.Locale)"]
1208 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMaximumTextLength(java.util.Locale)"]
1729 [label="org.joda.time.field.UnsupportedDateTimeField.getMaximumTextLength(java.util.Locale)"]
1449 [label="org.joda.time.field.BaseDateTimeField.getMaximumTextLength(java.util.Locale)"]
1532 [label="org.joda.time.field.DelegatedDateTimeField.getMaximumTextLength(java.util.Locale)"]
1369 [label="org.joda.time.field.AbstractPartialFieldProperty.getMaximumTextLength(java.util.Locale)"]
1401 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumTextLength(java.util.Locale)"]
475 [label="org.joda.time.DateTimeField.getMaximumValue()"]
730 [label="org.joda.time.chrono.BasicYearDateTimeField.getMaximumValue()"]
979 [label="org.joda.time.chrono.GJYearOfEraDateTimeField.getMaximumValue()"]
603 [label="org.joda.time.chrono.BasicDayOfMonthDateTimeField.getMaximumValue()"]
619 [label="org.joda.time.chrono.BasicDayOfYearDateTimeField.getMaximumValue()"]
713 [label="org.joda.time.chrono.BasicWeekyearDateTimeField.getMaximumValue()"]
821 [label="org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue()"]
1022 [label="org.joda.time.chrono.ISOYearOfEraDateTimeField.getMaximumValue()"]
1203 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMaximumValue()"]
1725 [label="org.joda.time.field.UnsupportedDateTimeField.getMaximumValue()"]
1643 [label="org.joda.time.field.PreciseDateTimeField.getMaximumValue()"]
1758 [label="org.joda.time.field.ZeroIsMaxDateTimeField.getMaximumValue()"]
1448 [label="org.joda.time.field.BaseDateTimeField.getMaximumValue()"]
1528 [label="org.joda.time.field.DelegatedDateTimeField.getMaximumValue()"]
1474 [label="org.joda.time.field.DecoratedDateTimeField.getMaximumValue()"]
1368 [label="org.joda.time.field.AbstractPartialFieldProperty.getMaximumValue()"]
1400 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumValue()"]
823 [label="org.joda.time.DateTimeField.getMaximumValue(long)"]
605 [label="org.joda.time.chrono.BasicDayOfMonthDateTimeField.getMaximumValue(long)"]
621 [label="org.joda.time.chrono.BasicDayOfYearDateTimeField.getMaximumValue(long)"]
692 [label="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValue(long)"]
822 [label="org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue(long)"]
849 [label="org.joda.time.chrono.GJChronology$ImpreciseCutoverField.getMaximumValue(long)"]
1120 [label="org.joda.time.chrono.LimitChronology$LimitDateTimeField.getMaximumValue(long)"]
1204 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMaximumValue(long)"]
1726 [label="org.joda.time.field.UnsupportedDateTimeField.getMaximumValue(long)"]
1769 [label="org.joda.time.field.ZeroIsMaxDateTimeField.getMaximumValue(long)"]
1436 [label="org.joda.time.field.BaseDateTimeField.getMaximumValue(long)"]
1529 [label="org.joda.time.field.DelegatedDateTimeField.getMaximumValue(long)"]
1206 [label="org.joda.time.DateTimeField.getMaximumValue(org.joda.time.ReadablePartial)"]
606 [label="org.joda.time.chrono.BasicDayOfMonthDateTimeField.getMaximumValue(org.joda.time.ReadablePartial)"]
622 [label="org.joda.time.chrono.BasicDayOfYearDateTimeField.getMaximumValue(org.joda.time.ReadablePartial)"]
693 [label="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValue(org.joda.time.ReadablePartial)"]
824 [label="org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue(org.joda.time.ReadablePartial)"]
1205 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMaximumValue(org.joda.time.ReadablePartial)"]
1727 [label="org.joda.time.field.UnsupportedDateTimeField.getMaximumValue(org.joda.time.ReadablePartial)"]
1770 [label="org.joda.time.field.ZeroIsMaxDateTimeField.getMaximumValue(org.joda.time.ReadablePartial)"]
1440 [label="org.joda.time.field.BaseDateTimeField.getMaximumValue(org.joda.time.ReadablePartial)"]
1530 [label="org.joda.time.field.DelegatedDateTimeField.getMaximumValue(org.joda.time.ReadablePartial)"]
477 [label="org.joda.time.DateTimeField.getMaximumValue(org.joda.time.ReadablePartial,int[])"]
610 [label="org.joda.time.chrono.BasicDayOfMonthDateTimeField.getMaximumValue(org.joda.time.ReadablePartial,int[])"]
623 [label="org.joda.time.chrono.BasicDayOfYearDateTimeField.getMaximumValue(org.joda.time.ReadablePartial,int[])"]
694 [label="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValue(org.joda.time.ReadablePartial,int[])"]
826 [label="org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue(org.joda.time.ReadablePartial,int[])"]
1207 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMaximumValue(org.joda.time.ReadablePartial,int[])"]
1728 [label="org.joda.time.field.UnsupportedDateTimeField.getMaximumValue(org.joda.time.ReadablePartial,int[])"]
1771 [label="org.joda.time.field.ZeroIsMaxDateTimeField.getMaximumValue(org.joda.time.ReadablePartial,int[])"]
1428 [label="org.joda.time.field.BaseDateTimeField.getMaximumValue(org.joda.time.ReadablePartial,int[])"]
1531 [label="org.joda.time.field.DelegatedDateTimeField.getMaximumValue(org.joda.time.ReadablePartial,int[])"]
611 [label="org.joda.time.chrono.BasicDayOfMonthDateTimeField.getMaximumValueForSet(long,int)"]
624 [label="org.joda.time.chrono.BasicDayOfYearDateTimeField.getMaximumValueForSet(long,int)"]
695 [label="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValueForSet(long,int)"]
1645 [label="org.joda.time.field.PreciseDurationDateTimeField.getMaximumValueForSet(long,int)"]
1367 [label="org.joda.time.field.AbstractPartialFieldProperty.getMaximumValueOverall()"]
1399 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumValueOverall()"]
1075 [label="java.lang.Throwable.getMessage()"]
1074 [label="org.joda.time.chrono.LimitChronology$LimitException.getMessage()"]
2940 [label="java.lang.Class.getMethod(java.lang.String,java.lang.Class[])"]
1077 [label="org.joda.time.base.BaseDateTime.getMillis()"]
250 [label="org.joda.time.base.BaseDuration.getMillis()"]
6 [label="org.joda.time.ReadableInstant.getMillis()"]
63 [label="org.joda.time.ReadableDuration.getMillis()"]
3859 [label="org.joda.time.Period.getMillis()"]
864 [label="org.joda.time.Instant.getMillis()"]
3760 [label="org.joda.time.MutablePeriod.getMillis()"]
3601 [label="org.joda.time.MutableDateTime$Property.getMillis()"]
2689 [label="org.joda.time.DateMidnight$Property.getMillis()"]
2780 [label="org.joda.time.DateTime$Property.getMillis()"]
2924 [label="org.joda.time.DateTimeUtils$SystemMillisProvider.getMillis()"]
2928 [label="org.joda.time.DateTimeUtils$OffsetMillisProvider.getMillis()"]
2932 [label="org.joda.time.DateTimeUtils$MillisProvider.getMillis()"]
3161 [label="org.joda.time.LocalDate$Property.getMillis()"]
3276 [label="org.joda.time.LocalDateTime$Property.getMillis()"]
3416 [label="org.joda.time.LocalTime$Property.getMillis()"]
1384 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.getMillis()"]
2485 [label="org.joda.time.tz.DateTimeZoneBuilder$Transition.getMillis()"]
1553 [label="org.joda.time.DurationField.getMillis(int)"]
1745 [label="org.joda.time.field.UnsupportedDurationField.getMillis(int)"]
1463 [label="org.joda.time.field.BaseDurationField.getMillis(int)"]
1552 [label="org.joda.time.field.DelegatedDurationField.getMillis(int)"]
1669 [label="org.joda.time.field.ScaledDurationField.getMillis(int)"]
1089 [label="org.joda.time.DurationField.getMillis(int,long)"]
1088 [label="org.joda.time.chrono.LimitChronology$LimitDurationField.getMillis(int,long)"]
1161 [label="org.joda.time.chrono.ZonedChronology$ZonedDurationField.getMillis(int,long)"]
1747 [label="org.joda.time.field.UnsupportedDurationField.getMillis(int,long)"]
1478 [label="org.joda.time.field.DecoratedDurationField.getMillis(int,long)"]
1556 [label="org.joda.time.field.DelegatedDurationField.getMillis(int,long)"]
1671 [label="org.joda.time.field.ScaledDurationField.getMillis(int,long)"]
1599 [label="org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.getMillis(int,long)"]
1555 [label="org.joda.time.DurationField.getMillis(long)"]
1746 [label="org.joda.time.field.UnsupportedDurationField.getMillis(long)"]
1464 [label="org.joda.time.field.BaseDurationField.getMillis(long)"]
1554 [label="org.joda.time.field.DelegatedDurationField.getMillis(long)"]
1670 [label="org.joda.time.field.ScaledDurationField.getMillis(long)"]
1091 [label="org.joda.time.DurationField.getMillis(long,long)"]
1090 [label="org.joda.time.chrono.LimitChronology$LimitDurationField.getMillis(long,long)"]
1162 [label="org.joda.time.chrono.ZonedChronology$ZonedDurationField.getMillis(long,long)"]
1748 [label="org.joda.time.field.UnsupportedDurationField.getMillis(long,long)"]
1646 [label="org.joda.time.field.PreciseDurationField.getMillis(long,long)"]
1479 [label="org.joda.time.field.DecoratedDurationField.getMillis(long,long)"]
1557 [label="org.joda.time.field.DelegatedDurationField.getMillis(long,long)"]
1672 [label="org.joda.time.field.ScaledDurationField.getMillis(long,long)"]
1601 [label="org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.getMillis(long,long)"]
2727 [label="org.joda.time.DateTimeZone.getMillisKeepLocal(org.joda.time.DateTimeZone,long)"]
40 [label="org.joda.time.base.AbstractDateTime.getMillisOfDay()"]
3377 [label="org.joda.time.LocalDateTime.getMillisOfDay()"]
3479 [label="org.joda.time.LocalTime.getMillisOfDay()"]
630 [label="org.joda.time.chrono.BasicChronology.getMillisOfDay(long)"]
42 [label="org.joda.time.base.AbstractDateTime.getMillisOfSecond()"]
3331 [label="org.joda.time.LocalDateTime.getMillisOfSecond()"]
2831 [label="org.joda.time.LocalTime.getMillisOfSecond()"]
4007 [label="org.joda.time.TimeOfDay.getMillisOfSecond()"]
594 [label="org.joda.time.chrono.BasicChronology.getMinYear()"]
537 [label="org.joda.time.chrono.BasicChronology.getMinimumDaysInFirstWeek()"]
875 [label="org.joda.time.chrono.GJChronology.getMinimumDaysInFirstWeek()"]
472 [label="org.joda.time.DateTimeField.getMinimumValue()"]
729 [label="org.joda.time.chrono.BasicYearDateTimeField.getMinimumValue()"]
712 [label="org.joda.time.chrono.BasicWeekyearDateTimeField.getMinimumValue()"]
815 [label="org.joda.time.chrono.GJChronology$CutoverField.getMinimumValue()"]
1199 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMinimumValue()"]
1721 [label="org.joda.time.field.UnsupportedDateTimeField.getMinimumValue()"]
1642 [label="org.joda.time.field.PreciseDurationDateTimeField.getMinimumValue()"]
1447 [label="org.joda.time.field.BaseDateTimeField.getMinimumValue()"]
1524 [label="org.joda.time.field.DelegatedDateTimeField.getMinimumValue()"]
1473 [label="org.joda.time.field.DecoratedDateTimeField.getMinimumValue()"]
1366 [label="org.joda.time.field.AbstractPartialFieldProperty.getMinimumValue()"]
1398 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.getMinimumValue()"]
820 [label="org.joda.time.DateTimeField.getMinimumValue(long)"]
819 [label="org.joda.time.chrono.GJChronology$CutoverField.getMinimumValue(long)"]
848 [label="org.joda.time.chrono.GJChronology$ImpreciseCutoverField.getMinimumValue(long)"]
1119 [label="org.joda.time.chrono.LimitChronology$LimitDateTimeField.getMinimumValue(long)"]
1200 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMinimumValue(long)"]
1722 [label="org.joda.time.field.UnsupportedDateTimeField.getMinimumValue(long)"]
1435 [label="org.joda.time.field.BaseDateTimeField.getMinimumValue(long)"]
1525 [label="org.joda.time.field.DelegatedDateTimeField.getMinimumValue(long)"]
817 [label="org.joda.time.DateTimeField.getMinimumValue(org.joda.time.ReadablePartial)"]
816 [label="org.joda.time.chrono.GJChronology$CutoverField.getMinimumValue(org.joda.time.ReadablePartial)"]
1201 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMinimumValue(org.joda.time.ReadablePartial)"]
1723 [label="org.joda.time.field.UnsupportedDateTimeField.getMinimumValue(org.joda.time.ReadablePartial)"]
1439 [label="org.joda.time.field.BaseDateTimeField.getMinimumValue(org.joda.time.ReadablePartial)"]
1526 [label="org.joda.time.field.DelegatedDateTimeField.getMinimumValue(org.joda.time.ReadablePartial)"]
476 [label="org.joda.time.DateTimeField.getMinimumValue(org.joda.time.ReadablePartial,int[])"]
818 [label="org.joda.time.chrono.GJChronology$CutoverField.getMinimumValue(org.joda.time.ReadablePartial,int[])"]
1202 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMinimumValue(org.joda.time.ReadablePartial,int[])"]
1724 [label="org.joda.time.field.UnsupportedDateTimeField.getMinimumValue(org.joda.time.ReadablePartial,int[])"]
1431 [label="org.joda.time.field.BaseDateTimeField.getMinimumValue(org.joda.time.ReadablePartial,int[])"]
1527 [label="org.joda.time.field.DelegatedDateTimeField.getMinimumValue(org.joda.time.ReadablePartial,int[])"]
1365 [label="org.joda.time.field.AbstractPartialFieldProperty.getMinimumValueOverall()"]
1397 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.getMinimumValueOverall()"]
32 [label="org.joda.time.base.AbstractDateTime.getMinuteOfDay()"]
34 [label="org.joda.time.base.AbstractDateTime.getMinuteOfHour()"]
3329 [label="org.joda.time.LocalDateTime.getMinuteOfHour()"]
2829 [label="org.joda.time.LocalTime.getMinuteOfHour()"]
4005 [label="org.joda.time.TimeOfDay.getMinuteOfHour()"]
3504 [label="org.joda.time.Period.getMinutes()"]
3758 [label="org.joda.time.MutablePeriod.getMinutes()"]
3513 [label="org.joda.time.Minutes.getMinutes()"]
3306 [label="java.util.Date.getMinutes()"]
3191 [label="java.util.Date.getMonth()"]
964 [label="org.joda.time.chrono.GJLocaleSymbols.getMonthMaxShortTextLength()"]
962 [label="org.joda.time.chrono.GJLocaleSymbols.getMonthMaxTextLength()"]
20 [label="org.joda.time.base.AbstractDateTime.getMonthOfYear()"]
2591 [label="org.joda.time.LocalDate.getMonthOfYear()"]
3326 [label="org.joda.time.LocalDateTime.getMonthOfYear()"]
4145 [label="org.joda.time.YearMonthDay.getMonthOfYear()"]
3566 [label="org.joda.time.MonthDay.getMonthOfYear()"]
4092 [label="org.joda.time.YearMonth.getMonthOfYear()"]
581 [label="org.joda.time.chrono.BasicChronology.getMonthOfYear(long)"]
635 [label="org.joda.time.chrono.BasicFixedMonthChronology.getMonthOfYear(long)"]
582 [label="org.joda.time.chrono.BasicChronology.getMonthOfYear(long,int)"]
636 [label="org.joda.time.chrono.BasicFixedMonthChronology.getMonthOfYear(long,int)"]
641 [label="org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)"]
1047 [label="org.joda.time.chrono.IslamicChronology.getMonthOfYear(long,int)"]
2516 [label="org.joda.time.Period.getMonths()"]
3754 [label="org.joda.time.MutablePeriod.getMonths()"]
3587 [label="org.joda.time.Months.getMonths()"]
946 [label="java.text.DateFormatSymbols.getMonths()"]
540 [label="java.lang.Class.getName()"]
1412 [label="org.joda.time.DateTimeFieldType.getName()"]
1352 [label="org.joda.time.DateTimeField.getName()"]
3926 [label="org.joda.time.PeriodType.getName()"]
345 [label="org.joda.time.DurationFieldType.getName()"]
374 [label="org.joda.time.DurationField.getName()"]
1739 [label="org.joda.time.field.UnsupportedDurationField.getName()"]
1693 [label="org.joda.time.field.UnsupportedDateTimeField.getName()"]
1411 [label="org.joda.time.field.BaseDateTimeField.getName()"]
1486 [label="org.joda.time.field.DelegatedDateTimeField.getName()"]
1459 [label="org.joda.time.field.BaseDurationField.getName()"]
1351 [label="org.joda.time.field.AbstractPartialFieldProperty.getName()"]
1380 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.getName()"]
1543 [label="org.joda.time.field.DelegatedDurationField.getName()"]
2637 [label="java.io.File.getName()"]
2564 [label="org.joda.time.tz.DefaultNameProvider.getName(java.util.Locale,java.lang.String,java.lang.String)"]
3000 [label="org.joda.time.tz.NameProvider.getName(java.util.Locale,java.lang.String,java.lang.String)"]
2567 [label="org.joda.time.tz.DefaultNameProvider.getName(java.util.Locale,java.lang.String,java.lang.String,boolean)"]
2999 [label="org.joda.time.DateTimeZone.getName(long)"]
1996 [label="org.joda.time.DateTimeZone.getName(long,java.util.Locale)"]
2467 [label="org.joda.time.tz.DateTimeZoneBuilder$Recurrence.getNameKey()"]
2466 [label="org.joda.time.tz.DateTimeZoneBuilder$Rule.getNameKey()"]
2486 [label="org.joda.time.tz.DateTimeZoneBuilder$Transition.getNameKey()"]
2414 [label="org.joda.time.DateTimeZone.getNameKey(long)"]
2413 [label="org.joda.time.tz.CachedDateTimeZone$Info.getNameKey(long)"]
2423 [label="org.joda.time.tz.CachedDateTimeZone.getNameKey(long)"]
2497 [label="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.getNameKey(long)"]
2519 [label="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey(long)"]
2993 [label="org.joda.time.DateTimeZone.getNameProvider()"]
2563 [label="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String)"]
2566 [label="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String,boolean)"]
2465 [label="org.joda.time.tz.DateTimeZoneBuilder$Recurrence.getOfYear()"]
2464 [label="org.joda.time.tz.DateTimeZoneBuilder$Rule.getOfYear()"]
1169 [label="org.joda.time.DateTimeZone.getOffset(long)"]
2415 [label="org.joda.time.tz.CachedDateTimeZone$Info.getOffset(long)"]
2425 [label="org.joda.time.tz.CachedDateTimeZone.getOffset(long)"]
2499 [label="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.getOffset(long)"]
2521 [label="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getOffset(long)"]
3001 [label="org.joda.time.DateTimeZone.getOffset(org.joda.time.ReadableInstant)"]
1170 [label="org.joda.time.DateTimeZone.getOffsetFromLocal(long)"]
1165 [label="org.joda.time.chrono.ZonedChronology$ZonedDurationField.getOffsetFromLocalToSubtract(long)"]
1902 [label="org.joda.time.format.DateTimeParserBucket.getOffsetInteger()"]
1164 [label="org.joda.time.chrono.ZonedChronology$ZonedDurationField.getOffsetToAdd(long)"]
1183 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getOffsetToAdd(long)"]
754 [label="org.joda.time.chrono.AssembledChronology.getParam()"]
2644 [label="java.io.File.getParentFile()"]
1871 [label="org.joda.time.format.DateTimeFormatter.getParser()"]
2260 [label="org.joda.time.format.PeriodFormatter.getParser()"]
2258 [label="org.joda.time.format.PeriodFormat$DynamicWordBased.getParser(java.util.Locale)"]
1788 [label="org.joda.time.format.DateTimeFormatter.getParser0()"]
293 [label="org.joda.time.convert.ConverterManager.getPartialConverter(java.lang.Object)"]
1260 [label="org.joda.time.convert.ConverterManager.getPartialConverters()"]
295 [label="org.joda.time.convert.PartialConverter.getPartialValues(org.joda.time.ReadablePartial,java.lang.Object,org.joda.time.Chronology)"]
1230 [label="org.joda.time.convert.AbstractConverter.getPartialValues(org.joda.time.ReadablePartial,java.lang.Object,org.joda.time.Chronology)"]
1321 [label="org.joda.time.convert.ReadablePartialConverter.getPartialValues(org.joda.time.ReadablePartial,java.lang.Object,org.joda.time.Chronology)"]
297 [label="org.joda.time.convert.PartialConverter.getPartialValues(org.joda.time.ReadablePartial,java.lang.Object,org.joda.time.Chronology,org.joda.time.format.DateTimeFormatter)"]
1231 [label="org.joda.time.convert.AbstractConverter.getPartialValues(org.joda.time.ReadablePartial,java.lang.Object,org.joda.time.Chronology,org.joda.time.format.DateTimeFormatter)"]
1331 [label="org.joda.time.convert.StringConverter.getPartialValues(org.joda.time.ReadablePartial,java.lang.Object,org.joda.time.Chronology,org.joda.time.format.DateTimeFormatter)"]
1791 [label="org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern(java.util.Locale)"]
335 [label="org.joda.time.convert.ConverterManager.getPeriodConverter(java.lang.Object)"]
1268 [label="org.joda.time.convert.ConverterManager.getPeriodConverters()"]
312 [label="org.joda.time.base.BasePeriod$1.getPeriodType()"]
3762 [label="org.joda.time.base.BasePeriod.getPeriodType()"]
393 [label="org.joda.time.base.BaseSingleFieldPeriod.getPeriodType()"]
195 [label="org.joda.time.ReadablePeriod.getPeriodType()"]
3022 [label="org.joda.time.Days.getPeriodType()"]
4033 [label="org.joda.time.Weeks.getPeriodType()"]
3090 [label="org.joda.time.Hours.getPeriodType()"]
3507 [label="org.joda.time.Minutes.getPeriodType()"]
3938 [label="org.joda.time.Seconds.getPeriodType()"]
3586 [label="org.joda.time.Months.getPeriodType()"]
4173 [label="org.joda.time.Years.getPeriodType()"]
336 [label="org.joda.time.convert.PeriodConverter.getPeriodType(java.lang.Object)"]
1232 [label="org.joda.time.convert.AbstractConverter.getPeriodType(java.lang.Object)"]
1325 [label="org.joda.time.convert.ReadablePeriodConverter.getPeriodType(java.lang.Object)"]
340 [label="org.joda.time.DateTimeUtils.getPeriodType(org.joda.time.PeriodType)"]
1954 [label="org.joda.time.format.DateTimeParserBucket.getPivotYear()"]
1869 [label="org.joda.time.format.DateTimeFormatter.getPrinter()"]
2256 [label="org.joda.time.format.PeriodFormatter.getPrinter()"]
2246 [label="org.joda.time.format.PeriodFormat$DynamicWordBased.getPrinter(java.util.Locale)"]
1782 [label="org.joda.time.format.DateTimeFormatter.getPrinter0()"]
2967 [label="java.lang.System.getProperty(java.lang.String)"]
2970 [label="org.joda.time.DateTimeZone.getProvider()"]
786 [label="org.joda.time.DateTimeField.getRangeDurationField()"]
966 [label="org.joda.time.chrono.GJYearOfEraDateTimeField.getRangeDurationField()"]
911 [label="org.joda.time.chrono.GJDayOfWeekDateTimeField.getRangeDurationField()"]
601 [label="org.joda.time.chrono.BasicDayOfMonthDateTimeField.getRangeDurationField()"]
617 [label="org.joda.time.chrono.BasicDayOfYearDateTimeField.getRangeDurationField()"]
684 [label="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getRangeDurationField()"]
666 [label="org.joda.time.chrono.BasicMonthOfYearDateTimeField.getRangeDurationField()"]
1013 [label="org.joda.time.chrono.ISOYearOfEraDateTimeField.getRangeDurationField()"]
1572 [label="org.joda.time.field.DividedDateTimeField.getRangeDurationField()"]
1429 [label="org.joda.time.field.BaseDateTimeField.getRangeDurationField()"]
1520 [label="org.joda.time.field.DelegatedDateTimeField.getRangeDurationField()"]
1472 [label="org.joda.time.field.DecoratedDateTimeField.getRangeDurationField()"]
1364 [label="org.joda.time.field.AbstractPartialFieldProperty.getRangeDurationField()"]
1393 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.getRangeDurationField()"]
1654 [label="org.joda.time.DateTimeFieldType.getRangeDurationType()"]
2938 [label="org.joda.time.DateTimeUtils.getReadableInterval(org.joda.time.ReadableInterval)"]
1358 [label="org.joda.time.field.AbstractPartialFieldProperty.getReadablePartial()"]
1580 [label="org.joda.time.field.DividedDateTimeField.getRemainder(int)"]
2677 [label="java.lang.ClassLoader.getResourceAsStream(java.lang.String)"]
2469 [label="org.joda.time.tz.DateTimeZoneBuilder$Recurrence.getSaveMillis()"]
2468 [label="org.joda.time.tz.DateTimeZoneBuilder$Rule.getSaveMillis()"]
2487 [label="org.joda.time.tz.DateTimeZoneBuilder$Transition.getSaveMillis()"]
36 [label="org.joda.time.base.AbstractDateTime.getSecondOfDay()"]
38 [label="org.joda.time.base.AbstractDateTime.getSecondOfMinute()"]
3330 [label="org.joda.time.LocalDateTime.getSecondOfMinute()"]
2830 [label="org.joda.time.LocalTime.getSecondOfMinute()"]
4006 [label="org.joda.time.TimeOfDay.getSecondOfMinute()"]
3858 [label="org.joda.time.Period.getSeconds()"]
3759 [label="org.joda.time.MutablePeriod.getSeconds()"]
3944 [label="org.joda.time.Seconds.getSeconds()"]
3307 [label="java.util.Date.getSeconds()"]
1257 [label="java.lang.System.getSecurityManager()"]
948 [label="java.text.DateFormatSymbols.getShortMonths()"]
2562 [label="org.joda.time.tz.DefaultNameProvider.getShortName(java.util.Locale,java.lang.String,java.lang.String)"]
2998 [label="org.joda.time.tz.NameProvider.getShortName(java.util.Locale,java.lang.String,java.lang.String)"]
2565 [label="org.joda.time.tz.DefaultNameProvider.getShortName(java.util.Locale,java.lang.String,java.lang.String,boolean)"]
2996 [label="org.joda.time.DateTimeZone.getShortName(long)"]
1997 [label="org.joda.time.DateTimeZone.getShortName(long,java.util.Locale)"]
945 [label="java.text.DateFormatSymbols.getShortWeekdays()"]
3052 [label="org.joda.time.Duration.getStandardDays()"]
3053 [label="org.joda.time.Duration.getStandardHours()"]
3054 [label="org.joda.time.Duration.getStandardMinutes()"]
2511 [label="org.joda.time.tz.DateTimeZoneBuilder$Transition.getStandardOffset()"]
2417 [label="org.joda.time.DateTimeZone.getStandardOffset(long)"]
2416 [label="org.joda.time.tz.CachedDateTimeZone$Info.getStandardOffset(long)"]
2426 [label="org.joda.time.tz.CachedDateTimeZone.getStandardOffset(long)"]
2523 [label="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.getStandardOffset(long)"]
2522 [label="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getStandardOffset(long)"]
3055 [label="org.joda.time.Duration.getStandardSeconds()"]
125 [label="org.joda.time.base.AbstractInterval.getStart()"]
3015 [label="org.joda.time.ReadableInterval.getStart()"]
283 [label="org.joda.time.base.BaseInterval.getStartMillis()"]
126 [label="org.joda.time.ReadableInterval.getStartMillis()"]
2606 [label="org.joda.time.tz.ZoneInfoCompiler.getStartOfYear()"]
2272 [label="java.util.ResourceBundle.getString(java.lang.String)"]
1234 [label="org.joda.time.convert.Converter.getSupportedType()"]
2678 [label="java.lang.ClassLoader.getSystemResourceAsStream(java.lang.String)"]
1245 [label="java.util.Calendar.getTime()"]
1243 [label="java.util.Date.getTime()"]
3339 [label="java.util.Calendar.getTimeInMillis()"]
1793 [label="java.text.DateFormat.getTimeInstance(int,java.util.Locale)"]
1238 [label="java.util.Calendar.getTimeZone()"]
2571 [label="java.util.TimeZone.getTimeZone(java.lang.String)"]
2494 [label="org.joda.time.tz.DateTimeZoneBuilder$Rule.getToYear()"]
576 [label="org.joda.time.chrono.BasicChronology.getTotalMillisByYearMonth(int,int)"]
644 [label="org.joda.time.chrono.BasicGJChronology.getTotalMillisByYearMonth(int,int)"]
1956 [label="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.getTwoDigitYear(long,org.joda.time.Chronology)"]
1958 [label="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.getTwoDigitYear(org.joda.time.ReadablePartial)"]
165 [label="org.joda.time.DateTimeField.getType()"]
850 [label="org.joda.time.DurationField.getType()"]
1419 [label="org.joda.time.field.BaseDateTimeField.getType()"]
1610 [label="org.joda.time.field.DelegatedDateTimeField.getType()"]
1651 [label="org.joda.time.field.BaseDurationField.getType()"]
1613 [label="org.joda.time.field.MillisDurationField.getType()"]
2558 [label="org.joda.time.tz.CachedDateTimeZone.getUncachedZone()"]
2234 [label="org.joda.time.format.DateTimePrinterInternalPrinter.getUnderlying()"]
2228 [label="org.joda.time.format.DateTimeParserInternalParser.getUnderlying()"]
375 [label="org.joda.time.DurationField.getUnitMillis()"]
1157 [label="org.joda.time.chrono.ZonedChronology$ZonedDurationField.getUnitMillis()"]
1639 [label="org.joda.time.field.PreciseDurationDateTimeField.getUnitMillis()"]
1483 [label="org.joda.time.field.DecoratedDurationField.getUnitMillis()"]
1562 [label="org.joda.time.field.DelegatedDurationField.getUnitMillis()"]
1677 [label="org.joda.time.field.ScaledDurationField.getUnitMillis()"]
1621 [label="org.joda.time.field.MillisDurationField.getUnitMillis()"]
2912 [label="org.joda.time.DateTimeComparator.getUpperLimit()"]
1078 [label="org.joda.time.chrono.LimitChronology.getUpperLimit()"]
2492 [label="org.joda.time.tz.DateTimeZoneBuilder$RuleSet.getUpperLimit(int)"]
384 [label="org.joda.time.base.BaseSingleFieldPeriod.getValue()"]
2626 [label="java.util.Map$Entry.getValue()"]
3527 [label="org.joda.time.base.BasePartial.getValue(int)"]
367 [label="org.joda.time.base.BasePeriod.getValue(int)"]
383 [label="org.joda.time.base.BaseSingleFieldPeriod.getValue(int)"]
171 [label="org.joda.time.ReadablePartial.getValue(int)"]
201 [label="org.joda.time.ReadablePeriod.getValue(int)"]
3202 [label="org.joda.time.LocalDate.getValue(int)"]
3318 [label="org.joda.time.LocalDateTime.getValue(int)"]
3458 [label="org.joda.time.LocalTime.getValue(int)"]
3790 [label="org.joda.time.Partial.getValue(int)"]
1547 [label="org.joda.time.DurationField.getValue(long)"]
1740 [label="org.joda.time.field.UnsupportedDurationField.getValue(long)"]
1460 [label="org.joda.time.field.BaseDurationField.getValue(long)"]
1546 [label="org.joda.time.field.DelegatedDurationField.getValue(long)"]
1665 [label="org.joda.time.field.ScaledDurationField.getValue(long)"]
1614 [label="org.joda.time.field.MillisDurationField.getValue(long)"]
1085 [label="org.joda.time.DurationField.getValue(long,long)"]
1082 [label="org.joda.time.chrono.LimitChronology$LimitDurationField.getValue(long,long)"]
1158 [label="org.joda.time.chrono.ZonedChronology$ZonedDurationField.getValue(long,long)"]
1743 [label="org.joda.time.field.UnsupportedDurationField.getValue(long,long)"]
1462 [label="org.joda.time.field.BaseDurationField.getValue(long,long)"]
1550 [label="org.joda.time.field.DelegatedDurationField.getValue(long,long)"]
1667 [label="org.joda.time.field.ScaledDurationField.getValue(long,long)"]
1596 [label="org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.getValue(long,long)"]
1615 [label="org.joda.time.field.MillisDurationField.getValue(long,long)"]
1549 [label="org.joda.time.DurationField.getValueAsLong(long)"]
1742 [label="org.joda.time.field.UnsupportedDurationField.getValueAsLong(long)"]
1461 [label="org.joda.time.field.BaseDurationField.getValueAsLong(long)"]
1548 [label="org.joda.time.field.DelegatedDurationField.getValueAsLong(long)"]
1666 [label="org.joda.time.field.ScaledDurationField.getValueAsLong(long)"]
1087 [label="org.joda.time.DurationField.getValueAsLong(long,long)"]
1086 [label="org.joda.time.chrono.LimitChronology$LimitDurationField.getValueAsLong(long,long)"]
1160 [label="org.joda.time.chrono.ZonedChronology$ZonedDurationField.getValueAsLong(long,long)"]
1744 [label="org.joda.time.field.UnsupportedDurationField.getValueAsLong(long,long)"]
1477 [label="org.joda.time.field.DecoratedDurationField.getValueAsLong(long,long)"]
1551 [label="org.joda.time.field.DelegatedDurationField.getValueAsLong(long,long)"]
1668 [label="org.joda.time.field.ScaledDurationField.getValueAsLong(long,long)"]
1597 [label="org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.getValueAsLong(long,long)"]
170 [label="org.joda.time.base.AbstractPartial.getValues()"]
200 [label="org.joda.time.base.AbstractPeriod.getValues()"]
302 [label="org.joda.time.base.BasePartial.getValues()"]
3792 [label="org.joda.time.Partial.getValues()"]
2510 [label="org.joda.time.tz.DateTimeZoneBuilder$Transition.getWallOffset()"]
22 [label="org.joda.time.base.AbstractDateTime.getWeekOfWeekyear()"]
3244 [label="org.joda.time.LocalDate.getWeekOfWeekyear()"]
3374 [label="org.joda.time.LocalDateTime.getWeekOfWeekyear()"]
590 [label="org.joda.time.chrono.BasicChronology.getWeekOfWeekyear(long)"]
589 [label="org.joda.time.chrono.BasicChronology.getWeekOfWeekyear(long,int)"]
943 [label="java.text.DateFormatSymbols.getWeekdays()"]
3857 [label="org.joda.time.Period.getWeeks()"]
3755 [label="org.joda.time.MutablePeriod.getWeeks()"]
4039 [label="org.joda.time.Weeks.getWeeks()"]
570 [label="org.joda.time.chrono.BasicChronology.getWeeksInYear(int)"]
18 [label="org.joda.time.base.AbstractDateTime.getWeekyear()"]
3243 [label="org.joda.time.LocalDate.getWeekyear()"]
3373 [label="org.joda.time.LocalDateTime.getWeekyear()"]
588 [label="org.joda.time.chrono.BasicChronology.getWeekyear(long)"]
1607 [label="org.joda.time.field.DelegatedDateTimeField.getWrappedField()"]
1084 [label="org.joda.time.field.DecoratedDurationField.getWrappedField()"]
969 [label="org.joda.time.field.DecoratedDateTimeField.getWrappedField()"]
1594 [label="org.joda.time.field.FieldUtils.getWrappedValue(int,int,int)"]
661 [label="org.joda.time.field.FieldUtils.getWrappedValue(int,int,int,int)"]
16 [label="org.joda.time.base.AbstractDateTime.getYear()"]
867 [label="org.joda.time.LocalDate.getYear()"]
3325 [label="org.joda.time.LocalDateTime.getYear()"]
4144 [label="org.joda.time.YearMonthDay.getYear()"]
4091 [label="org.joda.time.YearMonth.getYear()"]
3190 [label="java.util.Date.getYear()"]
578 [label="org.joda.time.chrono.BasicChronology.getYear(long)"]
1039 [label="org.joda.time.chrono.IslamicChronology.getYear(long)"]
725 [label="org.joda.time.chrono.BasicChronology.getYearDifference(long,long)"]
632 [label="org.joda.time.chrono.BasicFixedMonthChronology.getYearDifference(long,long)"]
645 [label="org.joda.time.chrono.BasicGJChronology.getYearDifference(long,long)"]
1042 [label="org.joda.time.chrono.IslamicChronology.getYearDifference(long,long)"]
574 [label="org.joda.time.chrono.BasicChronology.getYearInfo(int)"]
572 [label="org.joda.time.chrono.BasicChronology.getYearMillis(int)"]
577 [label="org.joda.time.chrono.BasicChronology.getYearMonthDayMillis(int,int,int)"]
575 [label="org.joda.time.chrono.BasicChronology.getYearMonthMillis(int,int)"]
14 [label="org.joda.time.base.AbstractDateTime.getYearOfCentury()"]
3242 [label="org.joda.time.LocalDate.getYearOfCentury()"]
3372 [label="org.joda.time.LocalDateTime.getYearOfCentury()"]
12 [label="org.joda.time.base.AbstractDateTime.getYearOfEra()"]
3241 [label="org.joda.time.LocalDate.getYearOfEra()"]
3371 [label="org.joda.time.LocalDateTime.getYearOfEra()"]
2515 [label="org.joda.time.Period.getYears()"]
3753 [label="org.joda.time.MutablePeriod.getYears()"]
4174 [label="org.joda.time.Years.getYears()"]
46 [label="org.joda.time.base.AbstractInstant.getZone()"]
82 [label="org.joda.time.Chronology.getZone()"]
1332 [label="org.joda.time.format.DateTimeFormatter.getZone()"]
1904 [label="org.joda.time.format.DateTimeParserBucket.getZone()"]
421 [label="org.joda.time.chrono.AssembledChronology.getZone()"]
529 [label="org.joda.time.chrono.BasicChronology.getZone()"]
874 [label="org.joda.time.chrono.GJChronology.getZone()"]
1213 [label="org.joda.time.chrono.ZonedChronology.getZone()"]
2578 [label="org.joda.time.tz.UTCProvider.getZone(java.lang.String)"]
2670 [label="org.joda.time.tz.ZoneInfoProvider.getZone(java.lang.String)"]
2971 [label="org.joda.time.tz.Provider.getZone(java.lang.String)"]
862 [label="org.joda.time.DateTimeUtils.getZone(org.joda.time.DateTimeZone)"]
2513 [label="java.text.DateFormatSymbols.getZoneStrings()"]
806 [label="org.joda.time.chrono.GJChronology$CutoverField.gregorianToJulian(long)"]
837 [label="org.joda.time.chrono.GJChronology.gregorianToJulianByWeekyear(long)"]
838 [label="org.joda.time.chrono.GJChronology.gregorianToJulianByYear(long)"]
498 [label="org.joda.time.DateTimeFieldType.halfdayOfDay()"]
415 [label="org.joda.time.Chronology.halfdayOfDay()"]
453 [label="org.joda.time.chrono.BaseChronology.halfdayOfDay()"]
898 [label="org.joda.time.chrono.AssembledChronology.halfdayOfDay()"]
520 [label="org.joda.time.chrono.GJLocaleSymbols.halfdayTextToValue(java.lang.String)"]
518 [label="org.joda.time.chrono.GJLocaleSymbols.halfdayValueToText(int)"]
403 [label="org.joda.time.Chronology.halfdays()"]
495 [label="org.joda.time.DurationFieldType.halfdays()"]
435 [label="org.joda.time.chrono.BaseChronology.halfdays()"]
2281 [label="java.util.Enumeration.hasMoreElements()"]
2581 [label="java.util.StringTokenizer.hasMoreTokens()"]
2489 [label="java.util.Iterator.hasNext()"]
107 [label="org.joda.time.base.AbstractInstant.hashCode()"]
72 [label="org.joda.time.base.AbstractDuration.hashCode()"]
156 [label="org.joda.time.base.AbstractInterval.hashCode()"]
184 [label="org.joda.time.base.AbstractPartial.hashCode()"]
214 [label="org.joda.time.base.AbstractPeriod.hashCode()"]
394 [label="org.joda.time.base.BaseSingleFieldPeriod.hashCode()"]
108 [label="java.lang.Object.hashCode()"]
541 [label="java.lang.String.hashCode()"]
542 [label="org.joda.time.DateTimeZone.hashCode()"]
3928 [label="org.joda.time.PeriodType.hashCode()"]
3207 [label="org.joda.time.LocalDate.hashCode()"]
2913 [label="org.joda.time.DateTimeComparator.hashCode()"]
4023 [label="org.joda.time.UTCDateTimeZone.hashCode()"]
1797 [label="java.util.Locale.hashCode()"]
1796 [label="org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey.hashCode()"]
1009 [label="org.joda.time.chrono.ISOChronology.hashCode()"]
539 [label="org.joda.time.chrono.BasicChronology.hashCode()"]
751 [label="org.joda.time.chrono.BuddhistChronology.hashCode()"]
881 [label="org.joda.time.chrono.GJChronology.hashCode()"]
1140 [label="org.joda.time.chrono.LimitChronology.hashCode()"]
1224 [label="org.joda.time.chrono.ZonedChronology.hashCode()"]
781 [label="org.joda.time.chrono.GJCacheKey.hashCode()"]
1038 [label="org.joda.time.chrono.IslamicChronology$LeapYearPatternType.hashCode()"]
1037 [label="org.joda.time.chrono.IslamicChronology.hashCode()"]
1070 [label="org.joda.time.chrono.LenientChronology.hashCode()"]
1150 [label="org.joda.time.chrono.StrictChronology.hashCode()"]
1173 [label="org.joda.time.chrono.ZonedChronology$ZonedDurationField.hashCode()"]
1211 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.hashCode()"]
1754 [label="org.joda.time.field.UnsupportedDurationField.hashCode()"]
1652 [label="org.joda.time.field.PreciseDurationField.hashCode()"]
1375 [label="org.joda.time.field.AbstractPartialFieldProperty.hashCode()"]
1408 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.hashCode()"]
1566 [label="org.joda.time.field.DelegatedDurationField.hashCode()"]
1679 [label="org.joda.time.field.ScaledDurationField.hashCode()"]
1623 [label="org.joda.time.field.MillisDurationField.hashCode()"]
2432 [label="org.joda.time.tz.CachedDateTimeZone.hashCode()"]
2574 [label="org.joda.time.tz.FixedDateTimeZone.hashCode()"]
2190 [label="org.joda.time.format.ISODateTimeFormat.hour()"]
2136 [label="org.joda.time.format.ISODateTimeFormat$Constants.hourElement()"]
2146 [label="org.joda.time.format.ISODateTimeFormat$Constants.hourMinute()"]
2147 [label="org.joda.time.format.ISODateTimeFormat$Constants.hourMinuteSecond()"]
2632 [label="org.joda.time.format.ISODateTimeFormat.hourMinuteSecondFraction()"]
2149 [label="org.joda.time.format.ISODateTimeFormat$Constants.hourMinuteSecondFraction()"]
2148 [label="org.joda.time.format.ISODateTimeFormat$Constants.hourMinuteSecondMillis()"]
493 [label="org.joda.time.DateTimeFieldType.hourOfDay()"]
31 [label="org.joda.time.Chronology.hourOfDay()"]
2897 [label="org.joda.time.DateTime.hourOfDay()"]
3682 [label="org.joda.time.MutableDateTime.hourOfDay()"]
3405 [label="org.joda.time.LocalDateTime.hourOfDay()"]
3485 [label="org.joda.time.LocalTime.hourOfDay()"]
4014 [label="org.joda.time.TimeOfDay.hourOfDay()"]
449 [label="org.joda.time.chrono.BaseChronology.hourOfDay()"]
894 [label="org.joda.time.chrono.AssembledChronology.hourOfDay()"]
496 [label="org.joda.time.DateTimeFieldType.hourOfHalfday()"]
413 [label="org.joda.time.Chronology.hourOfHalfday()"]
451 [label="org.joda.time.chrono.BaseChronology.hourOfHalfday()"]
895 [label="org.joda.time.chrono.AssembledChronology.hourOfHalfday()"]
402 [label="org.joda.time.Chronology.hours()"]
3080 [label="org.joda.time.PeriodType.hours()"]
354 [label="org.joda.time.DurationFieldType.hours()"]
434 [label="org.joda.time.chrono.BaseChronology.hours()"]
3839 [label="org.joda.time.Period.hours(int)"]
3026 [label="org.joda.time.Hours.hours(int)"]
3081 [label="org.joda.time.Hours.hoursBetween(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)"]
3082 [label="org.joda.time.Hours.hoursBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)"]
3084 [label="org.joda.time.Hours.hoursIn(org.joda.time.ReadableInterval)"]
1344 [label="java.lang.String.indexOf(int)"]
2585 [label="java.lang.String.indexOf(java.lang.String)"]
175 [label="org.joda.time.base.AbstractPartial.indexOf(org.joda.time.DateTimeFieldType)"]
176 [label="org.joda.time.base.AbstractPartial.indexOf(org.joda.time.DurationFieldType)"]
203 [label="org.joda.time.base.AbstractPeriod.indexOf(org.joda.time.DurationFieldType)"]
206 [label="org.joda.time.PeriodType.indexOf(org.joda.time.DurationFieldType)"]
173 [label="org.joda.time.base.AbstractPartial.indexOfSupported(org.joda.time.DateTimeFieldType)"]
178 [label="org.joda.time.base.AbstractPartial.indexOfSupported(org.joda.time.DurationFieldType)"]
2089 [label="org.joda.time.format.DateTimeParserBucket$SavedField.init(org.joda.time.DateTimeField,int)"]
2090 [label="org.joda.time.format.DateTimeParserBucket$SavedField.init(org.joda.time.DateTimeField,java.lang.String,java.util.Locale)"]
1190 [label="java.lang.Throwable.initCause(java.lang.Throwable)"]
2345 [label="java.lang.StringBuffer.insert(int,char)"]
78 [label="java.lang.StringBuffer.insert(int,java.lang.String)"]
953 [label="java.lang.Integer.intValue()"]
939 [label="java.lang.String.intern()"]
2941 [label="java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object[])"]
110 [label="org.joda.time.base.AbstractInstant.isAfter(long)"]
140 [label="org.joda.time.base.AbstractInterval.isAfter(long)"]
113 [label="org.joda.time.base.AbstractInstant.isAfter(org.joda.time.ReadableInstant)"]
142 [label="org.joda.time.base.AbstractInterval.isAfter(org.joda.time.ReadableInstant)"]
143 [label="org.joda.time.base.AbstractInterval.isAfter(org.joda.time.ReadableInterval)"]
187 [label="org.joda.time.base.AbstractPartial.isAfter(org.joda.time.ReadablePartial)"]
111 [label="org.joda.time.base.AbstractInstant.isAfterNow()"]
141 [label="org.joda.time.base.AbstractInterval.isAfterNow()"]
1281 [label="java.lang.Class.isAssignableFrom(java.lang.Class)"]
115 [label="org.joda.time.base.AbstractInstant.isBefore(long)"]
136 [label="org.joda.time.base.AbstractInterval.isBefore(long)"]
117 [label="org.joda.time.base.AbstractInstant.isBefore(org.joda.time.ReadableInstant)"]
138 [label="org.joda.time.base.AbstractInterval.isBefore(org.joda.time.ReadableInstant)"]
1124 [label="org.joda.time.ReadableInstant.isBefore(org.joda.time.ReadableInstant)"]
139 [label="org.joda.time.base.AbstractInterval.isBefore(org.joda.time.ReadableInterval)"]
188 [label="org.joda.time.base.AbstractPartial.isBefore(org.joda.time.ReadablePartial)"]
116 [label="org.joda.time.base.AbstractInstant.isBeforeNow()"]
137 [label="org.joda.time.base.AbstractInterval.isBeforeNow()"]
2552 [label="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.isCachable()"]
325 [label="org.joda.time.DateTimeUtils.isContiguous(org.joda.time.ReadablePartial)"]
2979 [label="java.lang.Character.isDigit(char)"]
2642 [label="java.io.File.isDirectory()"]
3915 [label="java.util.Map.isEmpty()"]
2019 [label="java.util.List.isEmpty()"]
118 [label="org.joda.time.base.AbstractInstant.isEqual(long)"]
68 [label="org.joda.time.base.AbstractDuration.isEqual(org.joda.time.ReadableDuration)"]
120 [label="org.joda.time.base.AbstractInstant.isEqual(org.joda.time.ReadableInstant)"]
135 [label="org.joda.time.base.AbstractInterval.isEqual(org.joda.time.ReadableInterval)"]
189 [label="org.joda.time.base.AbstractPartial.isEqual(org.joda.time.ReadablePartial)"]
119 [label="org.joda.time.base.AbstractInstant.isEqualNow()"]
1156 [label="org.joda.time.DateTimeZone.isFixed()"]
2427 [label="org.joda.time.tz.CachedDateTimeZone.isFixed()"]
2036 [label="org.joda.time.format.DateTimeFormatterBuilder.isFormatter(java.lang.Object)"]
3040 [label="org.joda.time.Days.isGreaterThan(org.joda.time.Days)"]
3104 [label="org.joda.time.Hours.isGreaterThan(org.joda.time.Hours)"]
3521 [label="org.joda.time.Minutes.isGreaterThan(org.joda.time.Minutes)"]
3595 [label="org.joda.time.Months.isGreaterThan(org.joda.time.Months)"]
3952 [label="org.joda.time.Seconds.isGreaterThan(org.joda.time.Seconds)"]
4047 [label="org.joda.time.Weeks.isGreaterThan(org.joda.time.Weeks)"]
4182 [label="org.joda.time.Years.isGreaterThan(org.joda.time.Years)"]
2790 [label="org.joda.time.IllegalInstantException.isIllegalInstant(java.lang.Throwable)"]
1394 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.isLeap()"]
640 [label="org.joda.time.DateTimeField.isLeap(long)"]
726 [label="org.joda.time.chrono.BasicYearDateTimeField.isLeap(long)"]
612 [label="org.joda.time.chrono.BasicDayOfMonthDateTimeField.isLeap(long)"]
625 [label="org.joda.time.chrono.BasicDayOfYearDateTimeField.isLeap(long)"]
708 [label="org.joda.time.chrono.BasicWeekyearDateTimeField.isLeap(long)"]
667 [label="org.joda.time.chrono.BasicMonthOfYearDateTimeField.isLeap(long)"]
810 [label="org.joda.time.chrono.GJChronology$CutoverField.isLeap(long)"]
1108 [label="org.joda.time.chrono.LimitChronology$LimitDateTimeField.isLeap(long)"]
1194 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.isLeap(long)"]
1719 [label="org.joda.time.field.UnsupportedDateTimeField.isLeap(long)"]
1766 [label="org.joda.time.field.ZeroIsMaxDateTimeField.isLeap(long)"]
1630 [label="org.joda.time.field.OffsetDateTimeField.isLeap(long)"]
1521 [label="org.joda.time.field.DelegatedDateTimeField.isLeap(long)"]
613 [label="org.joda.time.chrono.BasicChronology.isLeapDay(long)"]
638 [label="org.joda.time.chrono.BasicGJChronology.isLeapDay(long)"]
766 [label="org.joda.time.chrono.CopticChronology.isLeapDay(long)"]
777 [label="org.joda.time.chrono.EthiopicChronology.isLeapDay(long)"]
569 [label="org.joda.time.chrono.BasicChronology.isLeapYear(int)"]
631 [label="org.joda.time.chrono.BasicFixedMonthChronology.isLeapYear(int)"]
992 [label="org.joda.time.chrono.GregorianChronology.isLeapYear(int)"]
1060 [label="org.joda.time.chrono.JulianChronology.isLeapYear(int)"]
1044 [label="org.joda.time.chrono.IslamicChronology$LeapYearPatternType.isLeapYear(int)"]
1040 [label="org.joda.time.chrono.IslamicChronology.isLeapYear(int)"]
1176 [label="org.joda.time.DateTimeField.isLenient()"]
1175 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.isLenient()"]
1488 [label="org.joda.time.field.DelegatedDateTimeField.isLenient()"]
1469 [label="org.joda.time.field.DecoratedDateTimeField.isLenient()"]
3041 [label="org.joda.time.Days.isLessThan(org.joda.time.Days)"]
3105 [label="org.joda.time.Hours.isLessThan(org.joda.time.Hours)"]
3522 [label="org.joda.time.Minutes.isLessThan(org.joda.time.Minutes)"]
3596 [label="org.joda.time.Months.isLessThan(org.joda.time.Months)"]
3953 [label="org.joda.time.Seconds.isLessThan(org.joda.time.Seconds)"]
4048 [label="org.joda.time.Weeks.isLessThan(org.joda.time.Weeks)"]
4183 [label="org.joda.time.Years.isLessThan(org.joda.time.Years)"]
3003 [label="org.joda.time.DateTimeZone.isLocalDateTimeGap(org.joda.time.LocalDateTime)"]
69 [label="org.joda.time.base.AbstractDuration.isLongerThan(org.joda.time.ReadableDuration)"]
3822 [label="org.joda.time.Partial.isMatch(org.joda.time.ReadableInstant)"]
3823 [label="org.joda.time.Partial.isMatch(org.joda.time.ReadablePartial)"]
1825 [label="org.joda.time.format.DateTimeFormat.isNumericToken(java.lang.String)"]
2076 [label="org.joda.time.format.DateTimeFormatterBuilder$Composite.isParser()"]
2032 [label="org.joda.time.format.DateTimeFormatterBuilder.isParser(java.lang.Object)"]
373 [label="org.joda.time.DurationField.isPrecise()"]
1155 [label="org.joda.time.chrono.ZonedChronology$ZonedDurationField.isPrecise()"]
1476 [label="org.joda.time.field.DecoratedDurationField.isPrecise()"]
1545 [label="org.joda.time.field.DelegatedDurationField.isPrecise()"]
2075 [label="org.joda.time.format.DateTimeFormatterBuilder$Composite.isPrinter()"]
2031 [label="org.joda.time.format.DateTimeFormatterBuilder.isPrinter(java.lang.Object)"]
279 [label="org.joda.time.convert.IntervalConverter.isReadableInterval(java.lang.Object,org.joda.time.Chronology)"]
70 [label="org.joda.time.base.AbstractDuration.isShorterThan(org.joda.time.ReadableDuration)"]
2997 [label="org.joda.time.DateTimeZone.isStandardOffset(long)"]
85 [label="org.joda.time.DateTimeField.isSupported()"]
417 [label="org.joda.time.DurationField.isSupported()"]
1487 [label="org.joda.time.field.DelegatedDateTimeField.isSupported()"]
1544 [label="org.joda.time.field.DelegatedDurationField.isSupported()"]
2921 [label="org.joda.time.DateTimeFieldType.isSupported(org.joda.time.Chronology)"]
3076 [label="org.joda.time.DurationFieldType.isSupported(org.joda.time.Chronology)"]
411 [label="org.joda.time.chrono.AssembledChronology$Fields.isSupported(org.joda.time.DateTimeField)"]
84 [label="org.joda.time.base.AbstractInstant.isSupported(org.joda.time.DateTimeFieldType)"]
174 [label="org.joda.time.base.AbstractPartial.isSupported(org.joda.time.DateTimeFieldType)"]
607 [label="org.joda.time.ReadablePartial.isSupported(org.joda.time.DateTimeFieldType)"]
3204 [label="org.joda.time.LocalDate.isSupported(org.joda.time.DateTimeFieldType)"]
3320 [label="org.joda.time.LocalDateTime.isSupported(org.joda.time.DateTimeFieldType)"]
3460 [label="org.joda.time.LocalTime.isSupported(org.joda.time.DateTimeFieldType)"]
399 [label="org.joda.time.chrono.AssembledChronology$Fields.isSupported(org.joda.time.DurationField)"]
204 [label="org.joda.time.base.AbstractPeriod.isSupported(org.joda.time.DurationFieldType)"]
386 [label="org.joda.time.base.BaseSingleFieldPeriod.isSupported(org.joda.time.DurationFieldType)"]
205 [label="org.joda.time.PeriodType.isSupported(org.joda.time.DurationFieldType)"]
3205 [label="org.joda.time.LocalDate.isSupported(org.joda.time.DurationFieldType)"]
3321 [label="org.joda.time.LocalDateTime.isSupported(org.joda.time.DurationFieldType)"]
3461 [label="org.joda.time.LocalTime.isSupported(org.joda.time.DurationFieldType)"]
2348 [label="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.isSupported(org.joda.time.PeriodType,int)"]
2475 [label="org.joda.time.tz.DateTimeZoneBuilder$Transition.isTransitionFrom(org.joda.time.tz.DateTimeZoneBuilder$Transition)"]
2654 [label="java.lang.Character.isWhitespace(char)"]
2352 [label="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.isZero(org.joda.time.ReadablePeriod)"]
2488 [label="java.util.ArrayList.iterator()"]
2531 [label="java.util.Set.iterator()"]
2636 [label="java.io.BufferedReader.BufferedReader(java.io.Reader)"]
2536 [label="java.io.DataInputStream.DataInputStream(java.io.InputStream)"]
2556 [label="java.io.DataOutputStream.DataOutputStream(java.io.OutputStream)"]
2614 [label="java.io.File.File(java.io.File,java.lang.String)"]
2613 [label="java.io.File.File(java.lang.String)"]
2649 [label="java.io.FileInputStream.FileInputStream(java.io.File)"]
2645 [label="java.io.FileOutputStream.FileOutputStream(java.io.File)"]
2635 [label="java.io.FileReader.FileReader(java.io.File)"]
2507 [label="java.io.IOException.IOException(java.lang.String)"]
1049 [label="java.lang.ArithmeticException.ArithmeticException(java.lang.String)"]
186 [label="java.lang.ClassCastException.ClassCastException(java.lang.String)"]
2010 [label="java.lang.Enum.Enum(java.lang.String,int)"]
887 [label="java.lang.IllegalArgumentException.IllegalArgumentException()"]
3 [label="java.lang.IllegalArgumentException.IllegalArgumentException(java.lang.String)"]
1283 [label="java.lang.IllegalStateException.IllegalStateException(java.lang.String)"]
1280 [label="java.lang.IndexOutOfBoundsException.IndexOutOfBoundsException()"]
381 [label="java.lang.IndexOutOfBoundsException.IndexOutOfBoundsException(java.lang.String)"]
2919 [label="java.lang.InternalError.InternalError()"]
2625 [label="java.lang.InternalError.InternalError(java.lang.String)"]
2708 [label="java.lang.NullPointerException.NullPointerException(java.lang.String)"]
61 [label="java.lang.Object.Object()"]
2992 [label="java.lang.RuntimeException.RuntimeException(java.lang.Throwable)"]
1854 [label="java.lang.String.String(java.lang.String)"]
74 [label="java.lang.StringBuffer.StringBuffer()"]
159 [label="java.lang.StringBuffer.StringBuffer(int)"]
1282 [label="java.lang.StringBuilder.StringBuilder()"]
544 [label="java.lang.StringBuilder.StringBuilder(int)"]
2981 [label="java.lang.StringBuilder.StringBuilder(java.lang.String)"]
2656 [label="java.lang.ThreadLocal.ThreadLocal()"]
2022 [label="java.lang.UnsupportedOperationException.UnsupportedOperationException()"]
1382 [label="java.lang.UnsupportedOperationException.UnsupportedOperationException(java.lang.String)"]
2680 [label="java.lang.ref.SoftReference.SoftReference(T)"]
1588 [label="java.math.BigDecimal.BigDecimal(long)"]
3156 [label="java.security.BasicPermission.BasicPermission(java.lang.String)"]
2512 [label="java.text.DateFormatSymbols.DateFormatSymbols(java.util.Locale)"]
2004 [label="java.util.ArrayList.ArrayList()"]
2479 [label="java.util.ArrayList.ArrayList(int)"]
2006 [label="java.util.ArrayList.ArrayList(java.util.Collection)"]
3223 [label="java.util.Date.Date(int,int,int)"]
3333 [label="java.util.Date.Date(int,int,int,int,int,int)"]
104 [label="java.util.Date.Date(long)"]
3189 [label="java.util.GregorianCalendar.GregorianCalendar()"]
52 [label="java.util.GregorianCalendar.GregorianCalendar(java.util.TimeZone)"]
1133 [label="java.util.HashMap.HashMap()"]
1690 [label="java.util.HashMap.HashMap(int)"]
2946 [label="java.util.HashMap.HashMap(java.util.Map)"]
2293 [label="java.util.HashSet.HashSet()"]
2194 [label="java.util.HashSet.HashSet(java.util.Collection)"]
2949 [label="java.util.LinkedHashMap.LinkedHashMap()"]
2572 [label="java.util.SimpleTimeZone.SimpleTimeZone(int,java.lang.String)"]
2653 [label="java.util.StringTokenizer.StringTokenizer(java.lang.String,java.lang.String)"]
2621 [label="java.util.TreeMap.TreeMap()"]
950 [label="java.util.TreeMap.TreeMap(java.util.Comparator)"]
2664 [label="java.util.TreeSet.TreeSet(java.util.Collection)"]
2368 [label="java.util.TreeSet.TreeSet(java.util.Comparator)"]
737 [label="java.util.concurrent.ConcurrentHashMap.ConcurrentHashMap()"]
1969 [label="java.util.concurrent.ConcurrentHashMap.ConcurrentHashMap(int)"]
2930 [label="java.util.concurrent.atomic.AtomicReference.AtomicReference()"]
1801 [label="java.util.concurrent.atomic.AtomicReferenceArray.AtomicReferenceArray(int)"]
807 [label="org.joda.time.chrono.GJChronology$CutoverField.julianToGregorian(long)"]
835 [label="org.joda.time.chrono.GJChronology.julianToGregorianByWeekyear(long)"]
836 [label="org.joda.time.chrono.GJChronology.julianToGregorianByYear(long)"]
2000 [label="java.util.Map.keySet()"]
545 [label="java.lang.String.lastIndexOf(int)"]
77 [label="java.lang.StringBuffer.length()"]
682 [label="java.lang.String.length()"]
1923 [label="java.lang.CharSequence.length()"]
2982 [label="java.lang.AbstractStringBuilder.length()"]
1860 [label="java.util.concurrent.atomic.AtomicReferenceArray.length()"]
2141 [label="org.joda.time.format.ISODateTimeFormat$Constants.literalTElement()"]
2672 [label="org.joda.time.tz.ZoneInfoProvider.loadZoneData(java.lang.String)"]
2663 [label="org.joda.time.tz.ZoneInfoProvider.loadZoneInfoMap(java.io.InputStream)"]
3300 [label="org.joda.time.format.ISODateTimeFormat.localDateOptionalTimeParser()"]
2187 [label="org.joda.time.format.ISODateTimeFormat$Constants.localDateOptionalTimeParser()"]
3184 [label="org.joda.time.format.ISODateTimeFormat.localDateParser()"]
2182 [label="org.joda.time.format.ISODateTimeFormat$Constants.localDateParser()"]
3442 [label="org.joda.time.format.ISODateTimeFormat.localTimeParser()"]
2184 [label="org.joda.time.format.ISODateTimeFormat$Constants.localTimeParser()"]
1217 [label="org.joda.time.chrono.ZonedChronology.localToUTC(long)"]
2113 [label="java.lang.Math.log(double)"]
1813 [label="org.joda.time.format.DateTimeFormat.longDate()"]
1815 [label="org.joda.time.format.DateTimeFormat.longDateTime()"]
1814 [label="org.joda.time.format.DateTimeFormat.longTime()"]
1290 [label="java.lang.Long.longValue()"]
1590 [label="java.math.BigDecimal.longValue()"]
2611 [label="org.joda.time.tz.ZoneInfoCompiler.main(java.lang.String[])"]
2317 [label="java.util.regex.Pattern.matcher(java.lang.CharSequence)"]
2318 [label="java.util.regex.Matcher.matches()"]
2296 [label="org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix.matchesOtherAffix(int,java.lang.String,int)"]
832 [label="java.lang.Math.max(int,int)"]
3143 [label="java.lang.Math.max(long,long)"]
940 [label="org.joda.time.chrono.GJLocaleSymbols.maxLength(java.lang.String[])"]
1810 [label="org.joda.time.format.DateTimeFormat.mediumDate()"]
1812 [label="org.joda.time.format.DateTimeFormat.mediumDateTime()"]
1811 [label="org.joda.time.format.DateTimeFormat.mediumTime()"]
363 [label="org.joda.time.base.BasePeriod.mergePeriod(org.joda.time.ReadablePeriod)"]
3767 [label="org.joda.time.MutablePeriod.mergePeriod(org.joda.time.ReadablePeriod)"]
364 [label="org.joda.time.base.BasePeriod.mergePeriodInto(int[],org.joda.time.ReadablePeriod)"]
398 [label="org.joda.time.Chronology.millis()"]
3914 [label="org.joda.time.PeriodType.millis()"]
357 [label="org.joda.time.DurationFieldType.millis()"]
431 [label="org.joda.time.chrono.BaseChronology.millis()"]
3842 [label="org.joda.time.Period.millis(int)"]
3050 [label="org.joda.time.Duration.millis(long)"]
488 [label="org.joda.time.DateTimeFieldType.millisOfDay()"]
41 [label="org.joda.time.Chronology.millisOfDay()"]
2902 [label="org.joda.time.DateTime.millisOfDay()"]
3687 [label="org.joda.time.MutableDateTime.millisOfDay()"]
3409 [label="org.joda.time.LocalDateTime.millisOfDay()"]
3489 [label="org.joda.time.LocalTime.millisOfDay()"]
444 [label="org.joda.time.chrono.BaseChronology.millisOfDay()"]
888 [label="org.joda.time.chrono.AssembledChronology.millisOfDay()"]
486 [label="org.joda.time.DateTimeFieldType.millisOfSecond()"]
43 [label="org.joda.time.Chronology.millisOfSecond()"]
2903 [label="org.joda.time.DateTime.millisOfSecond()"]
3688 [label="org.joda.time.MutableDateTime.millisOfSecond()"]
3408 [label="org.joda.time.LocalDateTime.millisOfSecond()"]
3488 [label="org.joda.time.LocalTime.millisOfSecond()"]
4017 [label="org.joda.time.TimeOfDay.millisOfSecond()"]
443 [label="org.joda.time.chrono.BaseChronology.millisOfSecond()"]
889 [label="org.joda.time.chrono.AssembledChronology.millisOfSecond()"]
1937 [label="java.lang.Math.min(int,int)"]
3144 [label="java.lang.Math.min(long,long)"]
2222 [label="org.joda.time.format.PeriodFormatterBuilder.minimumPrintedDigits(int)"]
3035 [label="org.joda.time.Days.minus(int)"]
4042 [label="org.joda.time.Weeks.minus(int)"]
3099 [label="org.joda.time.Hours.minus(int)"]
3516 [label="org.joda.time.Minutes.minus(int)"]
3947 [label="org.joda.time.Seconds.minus(int)"]
3590 [label="org.joda.time.Months.minus(int)"]
4177 [label="org.joda.time.Years.minus(int)"]
3065 [label="org.joda.time.Duration.minus(long)"]
3128 [label="org.joda.time.Instant.minus(long)"]
2852 [label="org.joda.time.DateTime.minus(long)"]
2742 [label="org.joda.time.DateMidnight.minus(long)"]
3036 [label="org.joda.time.Days.minus(org.joda.time.Days)"]
3100 [label="org.joda.time.Hours.minus(org.joda.time.Hours)"]
3517 [label="org.joda.time.Minutes.minus(org.joda.time.Minutes)"]
3591 [label="org.joda.time.Months.minus(org.joda.time.Months)"]
3066 [label="org.joda.time.Duration.minus(org.joda.time.ReadableDuration)"]
3129 [label="org.joda.time.Instant.minus(org.joda.time.ReadableDuration)"]
2853 [label="org.joda.time.DateTime.minus(org.joda.time.ReadableDuration)"]
3358 [label="org.joda.time.LocalDateTime.minus(org.joda.time.ReadableDuration)"]
2743 [label="org.joda.time.DateMidnight.minus(org.joda.time.ReadableDuration)"]
3883 [label="org.joda.time.Period.minus(org.joda.time.ReadablePeriod)"]
2854 [label="org.joda.time.DateTime.minus(org.joda.time.ReadablePeriod)"]
3233 [label="org.joda.time.LocalDate.minus(org.joda.time.ReadablePeriod)"]
3359 [label="org.joda.time.LocalDateTime.minus(org.joda.time.ReadablePeriod)"]
2744 [label="org.joda.time.DateMidnight.minus(org.joda.time.ReadablePeriod)"]
4138 [label="org.joda.time.YearMonthDay.minus(org.joda.time.ReadablePeriod)"]
3473 [label="org.joda.time.LocalTime.minus(org.joda.time.ReadablePeriod)"]
3997 [label="org.joda.time.TimeOfDay.minus(org.joda.time.ReadablePeriod)"]
3562 [label="org.joda.time.MonthDay.minus(org.joda.time.ReadablePeriod)"]
3820 [label="org.joda.time.Partial.minus(org.joda.time.ReadablePeriod)"]
4087 [label="org.joda.time.YearMonth.minus(org.joda.time.ReadablePeriod)"]
3948 [label="org.joda.time.Seconds.minus(org.joda.time.Seconds)"]
4043 [label="org.joda.time.Weeks.minus(org.joda.time.Weeks)"]
4178 [label="org.joda.time.Years.minus(org.joda.time.Years)"]
3887 [label="org.joda.time.Period.minusDays(int)"]
2858 [label="org.joda.time.DateTime.minusDays(int)"]
3237 [label="org.joda.time.LocalDate.minusDays(int)"]
3363 [label="org.joda.time.LocalDateTime.minusDays(int)"]
2749 [label="org.joda.time.DateMidnight.minusDays(int)"]
4141 [label="org.joda.time.YearMonthDay.minusDays(int)"]
3564 [label="org.joda.time.MonthDay.minusDays(int)"]
3888 [label="org.joda.time.Period.minusHours(int)"]
2859 [label="org.joda.time.DateTime.minusHours(int)"]
3364 [label="org.joda.time.LocalDateTime.minusHours(int)"]
3474 [label="org.joda.time.LocalTime.minusHours(int)"]
3998 [label="org.joda.time.TimeOfDay.minusHours(int)"]
3891 [label="org.joda.time.Period.minusMillis(int)"]
2862 [label="org.joda.time.DateTime.minusMillis(int)"]
3367 [label="org.joda.time.LocalDateTime.minusMillis(int)"]
3477 [label="org.joda.time.LocalTime.minusMillis(int)"]
4001 [label="org.joda.time.TimeOfDay.minusMillis(int)"]
3889 [label="org.joda.time.Period.minusMinutes(int)"]
2860 [label="org.joda.time.DateTime.minusMinutes(int)"]
3365 [label="org.joda.time.LocalDateTime.minusMinutes(int)"]
3475 [label="org.joda.time.LocalTime.minusMinutes(int)"]
3999 [label="org.joda.time.TimeOfDay.minusMinutes(int)"]
3885 [label="org.joda.time.Period.minusMonths(int)"]
2856 [label="org.joda.time.DateTime.minusMonths(int)"]
3235 [label="org.joda.time.LocalDate.minusMonths(int)"]
3361 [label="org.joda.time.LocalDateTime.minusMonths(int)"]
2747 [label="org.joda.time.DateMidnight.minusMonths(int)"]
4140 [label="org.joda.time.YearMonthDay.minusMonths(int)"]
3563 [label="org.joda.time.MonthDay.minusMonths(int)"]
4089 [label="org.joda.time.YearMonth.minusMonths(int)"]
3890 [label="org.joda.time.Period.minusSeconds(int)"]
2861 [label="org.joda.time.DateTime.minusSeconds(int)"]
3366 [label="org.joda.time.LocalDateTime.minusSeconds(int)"]
3476 [label="org.joda.time.LocalTime.minusSeconds(int)"]
4000 [label="org.joda.time.TimeOfDay.minusSeconds(int)"]
3886 [label="org.joda.time.Period.minusWeeks(int)"]
2857 [label="org.joda.time.DateTime.minusWeeks(int)"]
3236 [label="org.joda.time.LocalDate.minusWeeks(int)"]
3362 [label="org.joda.time.LocalDateTime.minusWeeks(int)"]
2748 [label="org.joda.time.DateMidnight.minusWeeks(int)"]
3884 [label="org.joda.time.Period.minusYears(int)"]
2855 [label="org.joda.time.DateTime.minusYears(int)"]
3234 [label="org.joda.time.LocalDate.minusYears(int)"]
3360 [label="org.joda.time.LocalDateTime.minusYears(int)"]
2745 [label="org.joda.time.DateMidnight.minusYears(int)"]
4139 [label="org.joda.time.YearMonthDay.minusYears(int)"]
4088 [label="org.joda.time.YearMonth.minusYears(int)"]
2137 [label="org.joda.time.format.ISODateTimeFormat$Constants.minuteElement()"]
492 [label="org.joda.time.DateTimeFieldType.minuteOfDay()"]
33 [label="org.joda.time.Chronology.minuteOfDay()"]
2898 [label="org.joda.time.DateTime.minuteOfDay()"]
3683 [label="org.joda.time.MutableDateTime.minuteOfDay()"]
448 [label="org.joda.time.chrono.BaseChronology.minuteOfDay()"]
893 [label="org.joda.time.chrono.AssembledChronology.minuteOfDay()"]
491 [label="org.joda.time.DateTimeFieldType.minuteOfHour()"]
35 [label="org.joda.time.Chronology.minuteOfHour()"]
2899 [label="org.joda.time.DateTime.minuteOfHour()"]
3684 [label="org.joda.time.MutableDateTime.minuteOfHour()"]
3406 [label="org.joda.time.LocalDateTime.minuteOfHour()"]
3486 [label="org.joda.time.LocalTime.minuteOfHour()"]
4015 [label="org.joda.time.TimeOfDay.minuteOfHour()"]
447 [label="org.joda.time.chrono.BaseChronology.minuteOfHour()"]
892 [label="org.joda.time.chrono.AssembledChronology.minuteOfHour()"]
401 [label="org.joda.time.Chronology.minutes()"]
3498 [label="org.joda.time.PeriodType.minutes()"]
355 [label="org.joda.time.DurationFieldType.minutes()"]
433 [label="org.joda.time.chrono.BaseChronology.minutes()"]
3840 [label="org.joda.time.Period.minutes(int)"]
3028 [label="org.joda.time.Minutes.minutes(int)"]
3499 [label="org.joda.time.Minutes.minutesBetween(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)"]
3500 [label="org.joda.time.Minutes.minutesBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)"]
3501 [label="org.joda.time.Minutes.minutesIn(org.joda.time.ReadableInterval)"]
2641 [label="java.io.File.mkdirs()"]
2130 [label="org.joda.time.format.ISODateTimeFormat$Constants.monthElement()"]
506 [label="org.joda.time.DateTimeFieldType.monthOfYear()"]
21 [label="org.joda.time.Chronology.monthOfYear()"]
2892 [label="org.joda.time.DateTime.monthOfYear()"]
3677 [label="org.joda.time.MutableDateTime.monthOfYear()"]
3264 [label="org.joda.time.LocalDate.monthOfYear()"]
3400 [label="org.joda.time.LocalDateTime.monthOfYear()"]
2772 [label="org.joda.time.DateMidnight.monthOfYear()"]
4161 [label="org.joda.time.YearMonthDay.monthOfYear()"]
3571 [label="org.joda.time.MonthDay.monthOfYear()"]
4099 [label="org.joda.time.YearMonth.monthOfYear()"]
460 [label="org.joda.time.chrono.BaseChronology.monthOfYear()"]
639 [label="org.joda.time.chrono.AssembledChronology.monthOfYear()"]
954 [label="org.joda.time.chrono.GJLocaleSymbols.monthOfYearTextToValue(java.lang.String)"]
959 [label="org.joda.time.chrono.GJLocaleSymbols.monthOfYearValueToShortText(int)"]
957 [label="org.joda.time.chrono.GJLocaleSymbols.monthOfYearValueToText(int)"]
407 [label="org.joda.time.Chronology.months()"]
3578 [label="org.joda.time.PeriodType.months()"]
351 [label="org.joda.time.DurationFieldType.months()"]
439 [label="org.joda.time.chrono.BaseChronology.months()"]
602 [label="org.joda.time.chrono.AssembledChronology.months()"]
3836 [label="org.joda.time.Period.months(int)"]
3579 [label="org.joda.time.Months.months(int)"]
3580 [label="org.joda.time.Months.monthsBetween(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)"]
3581 [label="org.joda.time.Months.monthsBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)"]
3582 [label="org.joda.time.Months.monthsIn(org.joda.time.ReadableInterval)"]
3892 [label="org.joda.time.Period.multipliedBy(int)"]
3037 [label="org.joda.time.Days.multipliedBy(int)"]
4044 [label="org.joda.time.Weeks.multipliedBy(int)"]
3101 [label="org.joda.time.Hours.multipliedBy(int)"]
3518 [label="org.joda.time.Minutes.multipliedBy(int)"]
3949 [label="org.joda.time.Seconds.multipliedBy(int)"]
3592 [label="org.joda.time.Months.multipliedBy(int)"]
4179 [label="org.joda.time.Years.multipliedBy(int)"]
3067 [label="org.joda.time.Duration.multipliedBy(long)"]
3070 [label="org.joda.time.Duration.negated()"]
3893 [label="org.joda.time.Period.negated()"]
3039 [label="org.joda.time.Days.negated()"]
4046 [label="org.joda.time.Weeks.negated()"]
3103 [label="org.joda.time.Hours.negated()"]
3520 [label="org.joda.time.Minutes.negated()"]
3951 [label="org.joda.time.Seconds.negated()"]
3594 [label="org.joda.time.Months.negated()"]
4181 [label="org.joda.time.Years.negated()"]
2991 [label="java.lang.Class.newInstance()"]
2490 [label="java.util.Iterator.next()"]
2444 [label="org.joda.time.tz.DateTimeZoneBuilder$OfYear.next(long,int,int)"]
2455 [label="org.joda.time.tz.DateTimeZoneBuilder$Recurrence.next(long,int,int)"]
2470 [label="org.joda.time.tz.DateTimeZoneBuilder$Rule.next(long,int,int)"]
2282 [label="java.util.Enumeration.nextElement()"]
2582 [label="java.util.StringTokenizer.nextToken()"]
2429 [label="org.joda.time.DateTimeZone.nextTransition(long)"]
2428 [label="org.joda.time.tz.CachedDateTimeZone.nextTransition(long)"]
2500 [label="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.nextTransition(long)"]
2524 [label="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.nextTransition(long)"]
2484 [label="org.joda.time.tz.DateTimeZoneBuilder$RuleSet.nextTransition(long,int)"]
3901 [label="org.joda.time.Period.normalizedStandard()"]
3902 [label="org.joda.time.Period.normalizedStandard(org.joda.time.PeriodType)"]
3117 [label="org.joda.time.Instant.now()"]
2797 [label="org.joda.time.DateTime.now()"]
3615 [label="org.joda.time.MutableDateTime.now()"]
3177 [label="org.joda.time.LocalDate.now()"]
3293 [label="org.joda.time.LocalDateTime.now()"]
2705 [label="org.joda.time.DateMidnight.now()"]
3435 [label="org.joda.time.LocalTime.now()"]
3535 [label="org.joda.time.MonthDay.now()"]
4060 [label="org.joda.time.YearMonth.now()"]
2800 [label="org.joda.time.DateTime.now(org.joda.time.Chronology)"]
3619 [label="org.joda.time.MutableDateTime.now(org.joda.time.Chronology)"]
3181 [label="org.joda.time.LocalDate.now(org.joda.time.Chronology)"]
3297 [label="org.joda.time.LocalDateTime.now(org.joda.time.Chronology)"]
2710 [label="org.joda.time.DateMidnight.now(org.joda.time.Chronology)"]
3439 [label="org.joda.time.LocalTime.now(org.joda.time.Chronology)"]
3539 [label="org.joda.time.MonthDay.now(org.joda.time.Chronology)"]
4064 [label="org.joda.time.YearMonth.now(org.joda.time.Chronology)"]
2798 [label="org.joda.time.DateTime.now(org.joda.time.DateTimeZone)"]
3617 [label="org.joda.time.MutableDateTime.now(org.joda.time.DateTimeZone)"]
3179 [label="org.joda.time.LocalDate.now(org.joda.time.DateTimeZone)"]
3295 [label="org.joda.time.LocalDateTime.now(org.joda.time.DateTimeZone)"]
2707 [label="org.joda.time.DateMidnight.now(org.joda.time.DateTimeZone)"]
3437 [label="org.joda.time.LocalTime.now(org.joda.time.DateTimeZone)"]
3537 [label="org.joda.time.MonthDay.now(org.joda.time.DateTimeZone)"]
4062 [label="org.joda.time.YearMonth.now(org.joda.time.DateTimeZone)"]
2088 [label="org.joda.time.format.DateTimeParserBucket.obtainSaveField()"]
1867 [label="org.joda.time.format.DateTimeParserInternalParser.of(org.joda.time.format.DateTimeParser)"]
1866 [label="org.joda.time.format.DateTimePrinterInternalPrinter.of(org.joda.time.format.DateTimePrinter)"]
1872 [label="org.joda.time.format.InternalParserDateTimeParser.of(org.joda.time.format.InternalParser)"]
1870 [label="org.joda.time.format.InternalPrinterDateTimePrinter.of(org.joda.time.format.InternalPrinter)"]
2140 [label="org.joda.time.format.ISODateTimeFormat$Constants.offsetElement()"]
2662 [label="org.joda.time.tz.ZoneInfoProvider.openResource(java.lang.String)"]
2163 [label="org.joda.time.format.ISODateTimeFormat$Constants.ordinalDate()"]
2164 [label="org.joda.time.format.ISODateTimeFormat$Constants.ordinalDateTime()"]
2165 [label="org.joda.time.format.ISODateTimeFormat$Constants.ordinalDateTimeNoMillis()"]
468 [label="org.joda.time.Chronology.Chronology()"]
2686 [label="org.joda.time.DateMidnight$Property.DateMidnight$Property(org.joda.time.DateMidnight,org.joda.time.DateTimeField)"]
2706 [label="org.joda.time.DateMidnight.DateMidnight()"]
2721 [label="org.joda.time.DateMidnight.DateMidnight(int,int,int)"]
2723 [label="org.joda.time.DateMidnight.DateMidnight(int,int,int,org.joda.time.Chronology)"]
2722 [label="org.joda.time.DateMidnight.DateMidnight(int,int,int,org.joda.time.DateTimeZone)"]
2718 [label="org.joda.time.DateMidnight.DateMidnight(java.lang.Object)"]
2720 [label="org.joda.time.DateMidnight.DateMidnight(java.lang.Object,org.joda.time.Chronology)"]
2719 [label="org.joda.time.DateMidnight.DateMidnight(java.lang.Object,org.joda.time.DateTimeZone)"]
2715 [label="org.joda.time.DateMidnight.DateMidnight(long)"]
2717 [label="org.joda.time.DateMidnight.DateMidnight(long,org.joda.time.Chronology)"]
2716 [label="org.joda.time.DateMidnight.DateMidnight(long,org.joda.time.DateTimeZone)"]
2711 [label="org.joda.time.DateMidnight.DateMidnight(org.joda.time.Chronology)"]
2709 [label="org.joda.time.DateMidnight.DateMidnight(org.joda.time.DateTimeZone)"]
2777 [label="org.joda.time.DateTime$Property.DateTime$Property(org.joda.time.DateTime,org.joda.time.DateTimeField)"]
1826 [label="org.joda.time.DateTime.DateTime()"]
2808 [label="org.joda.time.DateTime.DateTime(int,int,int,int,int)"]
2811 [label="org.joda.time.DateTime.DateTime(int,int,int,int,int,int)"]
2814 [label="org.joda.time.DateTime.DateTime(int,int,int,int,int,int,int)"]
744 [label="org.joda.time.DateTime.DateTime(int,int,int,int,int,int,int,org.joda.time.Chronology)"]
2815 [label="org.joda.time.DateTime.DateTime(int,int,int,int,int,int,int,org.joda.time.DateTimeZone)"]
2813 [label="org.joda.time.DateTime.DateTime(int,int,int,int,int,int,org.joda.time.Chronology)"]
2812 [label="org.joda.time.DateTime.DateTime(int,int,int,int,int,int,org.joda.time.DateTimeZone)"]
2810 [label="org.joda.time.DateTime.DateTime(int,int,int,int,int,org.joda.time.Chronology)"]
2809 [label="org.joda.time.DateTime.DateTime(int,int,int,int,int,org.joda.time.DateTimeZone)"]
2805 [label="org.joda.time.DateTime.DateTime(java.lang.Object)"]
2807 [label="org.joda.time.DateTime.DateTime(java.lang.Object,org.joda.time.Chronology)"]
2806 [label="org.joda.time.DateTime.DateTime(java.lang.Object,org.joda.time.DateTimeZone)"]
2804 [label="org.joda.time.DateTime.DateTime(long)"]
93 [label="org.joda.time.DateTime.DateTime(long,org.joda.time.Chronology)"]
90 [label="org.joda.time.DateTime.DateTime(long,org.joda.time.DateTimeZone)"]
2801 [label="org.joda.time.DateTime.DateTime(org.joda.time.Chronology)"]
2799 [label="org.joda.time.DateTime.DateTime(org.joda.time.DateTimeZone)"]
2905 [label="org.joda.time.DateTimeComparator.DateTimeComparator(org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType)"]
2915 [label="org.joda.time.DateTimeConstants.DateTimeConstants()"]
1410 [label="org.joda.time.DateTimeField.DateTimeField()"]
2916 [label="org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.DateTimeFieldType$StandardDateTimeFieldType(java.lang.String,byte,org.joda.time.DurationFieldType,org.joda.time.DurationFieldType)"]
2917 [label="org.joda.time.DateTimeFieldType.DateTimeFieldType(java.lang.String)"]
2926 [label="org.joda.time.DateTimeUtils$FixedMillisProvider.DateTimeUtils$FixedMillisProvider(long)"]
2927 [label="org.joda.time.DateTimeUtils$OffsetMillisProvider.DateTimeUtils$OffsetMillisProvider(long)"]
2923 [label="org.joda.time.DateTimeUtils$SystemMillisProvider.DateTimeUtils$SystemMillisProvider()"]
2931 [label="org.joda.time.DateTimeUtils.DateTimeUtils()"]
2964 [label="org.joda.time.DateTimeZone$LazyInit$1.LazyInit$1()"]
2963 [label="org.joda.time.DateTimeZone$LazyInit.DateTimeZone$LazyInit()"]
2954 [label="org.joda.time.DateTimeZone$Stub.DateTimeZone$Stub(java.lang.String)"]
2422 [label="org.joda.time.DateTimeZone.DateTimeZone(java.lang.String)"]
3008 [label="org.joda.time.Days.Days(int)"]
3045 [label="org.joda.time.Duration.Duration(java.lang.Object)"]
64 [label="org.joda.time.Duration.Duration(long)"]
342 [label="org.joda.time.Duration.Duration(long,long)"]
3051 [label="org.joda.time.Duration.Duration(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)"]
1458 [label="org.joda.time.DurationField.DurationField()"]
3072 [label="org.joda.time.DurationFieldType$StandardDurationFieldType.DurationFieldType$StandardDurationFieldType(java.lang.String,byte)"]
3073 [label="org.joda.time.DurationFieldType.DurationFieldType(java.lang.String)"]
3079 [label="org.joda.time.Hours.Hours(int)"]
1593 [label="org.joda.time.IllegalFieldValueException.IllegalFieldValueException(java.lang.String,java.lang.Number,java.lang.Number,java.lang.Number)"]
3112 [label="org.joda.time.IllegalFieldValueException.IllegalFieldValueException(java.lang.String,java.lang.String)"]
474 [label="org.joda.time.IllegalFieldValueException.IllegalFieldValueException(org.joda.time.DateTimeFieldType,java.lang.Number,java.lang.Number,java.lang.Number)"]
1189 [label="org.joda.time.IllegalFieldValueException.IllegalFieldValueException(org.joda.time.DateTimeFieldType,java.lang.Number,java.lang.String)"]
679 [label="org.joda.time.IllegalFieldValueException.IllegalFieldValueException(org.joda.time.DateTimeFieldType,java.lang.String)"]
3110 [label="org.joda.time.IllegalFieldValueException.IllegalFieldValueException(org.joda.time.DurationFieldType,java.lang.Number,java.lang.Number,java.lang.Number)"]
3111 [label="org.joda.time.IllegalFieldValueException.IllegalFieldValueException(org.joda.time.DurationFieldType,java.lang.String)"]
2096 [label="org.joda.time.IllegalInstantException.IllegalInstantException(java.lang.String)"]
1188 [label="org.joda.time.IllegalInstantException.IllegalInstantException(long,java.lang.String)"]
3118 [label="org.joda.time.Instant.Instant()"]
3121 [label="org.joda.time.Instant.Instant(java.lang.Object)"]
88 [label="org.joda.time.Instant.Instant(long)"]
3135 [label="org.joda.time.Interval.Interval(java.lang.Object)"]
3141 [label="org.joda.time.Interval.Interval(java.lang.Object,org.joda.time.Chronology)"]
2939 [label="org.joda.time.Interval.Interval(long,long)"]
145 [label="org.joda.time.Interval.Interval(long,long,org.joda.time.Chronology)"]
3140 [label="org.joda.time.Interval.Interval(long,long,org.joda.time.DateTimeZone)"]
267 [label="org.joda.time.Interval.Interval(org.joda.time.ReadableDuration,org.joda.time.ReadableInstant)"]
265 [label="org.joda.time.Interval.Interval(org.joda.time.ReadableInstant,org.joda.time.ReadableDuration)"]
3139 [label="org.joda.time.Interval.Interval(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)"]
3137 [label="org.joda.time.Interval.Interval(org.joda.time.ReadableInstant,org.joda.time.ReadablePeriod)"]
3138 [label="org.joda.time.Interval.Interval(org.joda.time.ReadablePeriod,org.joda.time.ReadableInstant)"]
1258 [label="org.joda.time.JodaTimePermission.JodaTimePermission(java.lang.String)"]
3157 [label="org.joda.time.LocalDate$Property.LocalDate$Property(org.joda.time.LocalDate,org.joda.time.DateTimeField)"]
3178 [label="org.joda.time.LocalDate.LocalDate()"]
2588 [label="org.joda.time.LocalDate.LocalDate(int,int,int)"]
3199 [label="org.joda.time.LocalDate.LocalDate(int,int,int,org.joda.time.Chronology)"]
3195 [label="org.joda.time.LocalDate.LocalDate(java.lang.Object)"]
3196 [label="org.joda.time.LocalDate.LocalDate(java.lang.Object,org.joda.time.Chronology)"]
3197 [label="org.joda.time.LocalDate.LocalDate(java.lang.Object,org.joda.time.DateTimeZone)"]
3193 [label="org.joda.time.LocalDate.LocalDate(long)"]
866 [label="org.joda.time.LocalDate.LocalDate(long,org.joda.time.Chronology)"]
3194 [label="org.joda.time.LocalDate.LocalDate(long,org.joda.time.DateTimeZone)"]
3182 [label="org.joda.time.LocalDate.LocalDate(org.joda.time.Chronology)"]
3180 [label="org.joda.time.LocalDate.LocalDate(org.joda.time.DateTimeZone)"]
3272 [label="org.joda.time.LocalDateTime$Property.LocalDateTime$Property(org.joda.time.LocalDateTime,org.joda.time.DateTimeField)"]
3294 [label="org.joda.time.LocalDateTime.LocalDateTime()"]
3313 [label="org.joda.time.LocalDateTime.LocalDateTime(int,int,int,int,int)"]
3315 [label="org.joda.time.LocalDateTime.LocalDateTime(int,int,int,int,int,int)"]
3303 [label="org.joda.time.LocalDateTime.LocalDateTime(int,int,int,int,int,int,int)"]
3314 [label="org.joda.time.LocalDateTime.LocalDateTime(int,int,int,int,int,int,int,org.joda.time.Chronology)"]
3310 [label="org.joda.time.LocalDateTime.LocalDateTime(java.lang.Object)"]
3311 [label="org.joda.time.LocalDateTime.LocalDateTime(java.lang.Object,org.joda.time.Chronology)"]
3312 [label="org.joda.time.LocalDateTime.LocalDateTime(java.lang.Object,org.joda.time.DateTimeZone)"]
3308 [label="org.joda.time.LocalDateTime.LocalDateTime(long)"]
1913 [label="org.joda.time.LocalDateTime.LocalDateTime(long,org.joda.time.Chronology)"]
3309 [label="org.joda.time.LocalDateTime.LocalDateTime(long,org.joda.time.DateTimeZone)"]
3298 [label="org.joda.time.LocalDateTime.LocalDateTime(org.joda.time.Chronology)"]
3296 [label="org.joda.time.LocalDateTime.LocalDateTime(org.joda.time.DateTimeZone)"]
3413 [label="org.joda.time.LocalTime$Property.LocalTime$Property(org.joda.time.LocalTime,org.joda.time.DateTimeField)"]
3436 [label="org.joda.time.LocalTime.LocalTime()"]
3453 [label="org.joda.time.LocalTime.LocalTime(int,int)"]
3455 [label="org.joda.time.LocalTime.LocalTime(int,int,int)"]
3434 [label="org.joda.time.LocalTime.LocalTime(int,int,int,int)"]
3454 [label="org.joda.time.LocalTime.LocalTime(int,int,int,int,org.joda.time.Chronology)"]
3450 [label="org.joda.time.LocalTime.LocalTime(java.lang.Object)"]
3451 [label="org.joda.time.LocalTime.LocalTime(java.lang.Object,org.joda.time.Chronology)"]
3452 [label="org.joda.time.LocalTime.LocalTime(java.lang.Object,org.joda.time.DateTimeZone)"]
3448 [label="org.joda.time.LocalTime.LocalTime(long)"]
2869 [label="org.joda.time.LocalTime.LocalTime(long,org.joda.time.Chronology)"]
3449 [label="org.joda.time.LocalTime.LocalTime(long,org.joda.time.DateTimeZone)"]
3440 [label="org.joda.time.LocalTime.LocalTime(org.joda.time.Chronology)"]
3438 [label="org.joda.time.LocalTime.LocalTime(org.joda.time.DateTimeZone)"]
3497 [label="org.joda.time.Minutes.Minutes(int)"]
3524 [label="org.joda.time.MonthDay$Property.MonthDay$Property(org.joda.time.MonthDay,int)"]
3536 [label="org.joda.time.MonthDay.MonthDay()"]
3543 [label="org.joda.time.MonthDay.MonthDay(int,int)"]
3550 [label="org.joda.time.MonthDay.MonthDay(int,int,org.joda.time.Chronology)"]
3548 [label="org.joda.time.MonthDay.MonthDay(java.lang.Object)"]
3549 [label="org.joda.time.MonthDay.MonthDay(java.lang.Object,org.joda.time.Chronology)"]
3546 [label="org.joda.time.MonthDay.MonthDay(long)"]
3547 [label="org.joda.time.MonthDay.MonthDay(long,org.joda.time.Chronology)"]
3540 [label="org.joda.time.MonthDay.MonthDay(org.joda.time.Chronology)"]
3538 [label="org.joda.time.MonthDay.MonthDay(org.joda.time.DateTimeZone)"]
3529 [label="org.joda.time.MonthDay.MonthDay(org.joda.time.MonthDay,int[])"]
3551 [label="org.joda.time.MonthDay.MonthDay(org.joda.time.MonthDay,org.joda.time.Chronology)"]
3577 [label="org.joda.time.Months.Months(int)"]
3598 [label="org.joda.time.MutableDateTime$Property.MutableDateTime$Property(org.joda.time.MutableDateTime,org.joda.time.DateTimeField)"]
3616 [label="org.joda.time.MutableDateTime.MutableDateTime()"]
3627 [label="org.joda.time.MutableDateTime.MutableDateTime(int,int,int,int,int,int,int)"]
3629 [label="org.joda.time.MutableDateTime.MutableDateTime(int,int,int,int,int,int,int,org.joda.time.Chronology)"]
3628 [label="org.joda.time.MutableDateTime.MutableDateTime(int,int,int,int,int,int,int,org.joda.time.DateTimeZone)"]
3624 [label="org.joda.time.MutableDateTime.MutableDateTime(java.lang.Object)"]
3626 [label="org.joda.time.MutableDateTime.MutableDateTime(java.lang.Object,org.joda.time.Chronology)"]
3625 [label="org.joda.time.MutableDateTime.MutableDateTime(java.lang.Object,org.joda.time.DateTimeZone)"]
3623 [label="org.joda.time.MutableDateTime.MutableDateTime(long)"]
101 [label="org.joda.time.MutableDateTime.MutableDateTime(long,org.joda.time.Chronology)"]
99 [label="org.joda.time.MutableDateTime.MutableDateTime(long,org.joda.time.DateTimeZone)"]
3620 [label="org.joda.time.MutableDateTime.MutableDateTime(org.joda.time.Chronology)"]
3618 [label="org.joda.time.MutableDateTime.MutableDateTime(org.joda.time.DateTimeZone)"]
281 [label="org.joda.time.MutableInterval.MutableInterval()"]
3692 [label="org.joda.time.MutableInterval.MutableInterval(java.lang.Object)"]
3699 [label="org.joda.time.MutableInterval.MutableInterval(java.lang.Object,org.joda.time.Chronology)"]
3693 [label="org.joda.time.MutableInterval.MutableInterval(long,long)"]
147 [label="org.joda.time.MutableInterval.MutableInterval(long,long,org.joda.time.Chronology)"]
3696 [label="org.joda.time.MutableInterval.MutableInterval(org.joda.time.ReadableDuration,org.joda.time.ReadableInstant)"]
3695 [label="org.joda.time.MutableInterval.MutableInterval(org.joda.time.ReadableInstant,org.joda.time.ReadableDuration)"]
3694 [label="org.joda.time.MutableInterval.MutableInterval(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)"]
3697 [label="org.joda.time.MutableInterval.MutableInterval(org.joda.time.ReadableInstant,org.joda.time.ReadablePeriod)"]
3698 [label="org.joda.time.MutableInterval.MutableInterval(org.joda.time.ReadablePeriod,org.joda.time.ReadableInstant)"]
390 [label="org.joda.time.MutablePeriod.MutablePeriod()"]
3719 [label="org.joda.time.MutablePeriod.MutablePeriod(int,int,int,int)"]
3720 [label="org.joda.time.MutablePeriod.MutablePeriod(int,int,int,int,int,int,int,int)"]
3721 [label="org.joda.time.MutablePeriod.MutablePeriod(int,int,int,int,int,int,int,int,org.joda.time.PeriodType)"]
210 [label="org.joda.time.MutablePeriod.MutablePeriod(java.lang.Object)"]
3736 [label="org.joda.time.MutablePeriod.MutablePeriod(java.lang.Object,org.joda.time.Chronology)"]
3735 [label="org.joda.time.MutablePeriod.MutablePeriod(java.lang.Object,org.joda.time.PeriodType)"]
338 [label="org.joda.time.MutablePeriod.MutablePeriod(java.lang.Object,org.joda.time.PeriodType,org.joda.time.Chronology)"]
3722 [label="org.joda.time.MutablePeriod.MutablePeriod(long)"]
3725 [label="org.joda.time.MutablePeriod.MutablePeriod(long,long)"]
3727 [label="org.joda.time.MutablePeriod.MutablePeriod(long,long,org.joda.time.Chronology)"]
3726 [label="org.joda.time.MutablePeriod.MutablePeriod(long,long,org.joda.time.PeriodType)"]
3728 [label="org.joda.time.MutablePeriod.MutablePeriod(long,long,org.joda.time.PeriodType,org.joda.time.Chronology)"]
3723 [label="org.joda.time.MutablePeriod.MutablePeriod(long,org.joda.time.Chronology)"]
2289 [label="org.joda.time.MutablePeriod.MutablePeriod(long,org.joda.time.PeriodType)"]
3724 [label="org.joda.time.MutablePeriod.MutablePeriod(long,org.joda.time.PeriodType,org.joda.time.Chronology)"]
3718 [label="org.joda.time.MutablePeriod.MutablePeriod(org.joda.time.PeriodType)"]
3733 [label="org.joda.time.MutablePeriod.MutablePeriod(org.joda.time.ReadableDuration,org.joda.time.ReadableInstant)"]
3734 [label="org.joda.time.MutablePeriod.MutablePeriod(org.joda.time.ReadableDuration,org.joda.time.ReadableInstant,org.joda.time.PeriodType)"]
3731 [label="org.joda.time.MutablePeriod.MutablePeriod(org.joda.time.ReadableInstant,org.joda.time.ReadableDuration)"]
3732 [label="org.joda.time.MutablePeriod.MutablePeriod(org.joda.time.ReadableInstant,org.joda.time.ReadableDuration,org.joda.time.PeriodType)"]
3729 [label="org.joda.time.MutablePeriod.MutablePeriod(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)"]
3730 [label="org.joda.time.MutablePeriod.MutablePeriod(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant,org.joda.time.PeriodType)"]
3787 [label="org.joda.time.Partial$Property.Partial$Property(org.joda.time.Partial,int)"]
3800 [label="org.joda.time.Partial.Partial()"]
3801 [label="org.joda.time.Partial.Partial(org.joda.time.Chronology)"]
3807 [label="org.joda.time.Partial.Partial(org.joda.time.Chronology,org.joda.time.DateTimeFieldType[],int[])"]
3802 [label="org.joda.time.Partial.Partial(org.joda.time.DateTimeFieldType,int)"]
3803 [label="org.joda.time.Partial.Partial(org.joda.time.DateTimeFieldType,int,org.joda.time.Chronology)"]
3804 [label="org.joda.time.Partial.Partial(org.joda.time.DateTimeFieldType[],int[])"]
3805 [label="org.joda.time.Partial.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)"]
3793 [label="org.joda.time.Partial.Partial(org.joda.time.Partial,int[])"]
3806 [label="org.joda.time.Partial.Partial(org.joda.time.ReadablePartial)"]
3831 [label="org.joda.time.Period.Period()"]
3845 [label="org.joda.time.Period.Period(int,int,int,int)"]
3846 [label="org.joda.time.Period.Period(int,int,int,int,int,int,int,int)"]
3847 [label="org.joda.time.Period.Period(int,int,int,int,int,int,int,int,org.joda.time.PeriodType)"]
3835 [label="org.joda.time.Period.Period(int[],org.joda.time.PeriodType)"]
208 [label="org.joda.time.Period.Period(java.lang.Object)"]
3855 [label="org.joda.time.Period.Period(java.lang.Object,org.joda.time.Chronology)"]
3854 [label="org.joda.time.Period.Period(java.lang.Object,org.joda.time.PeriodType)"]
3856 [label="org.joda.time.Period.Period(java.lang.Object,org.joda.time.PeriodType,org.joda.time.Chronology)"]
66 [label="org.joda.time.Period.Period(long)"]
3848 [label="org.joda.time.Period.Period(long,long)"]
152 [label="org.joda.time.Period.Period(long,long,org.joda.time.Chronology)"]
3849 [label="org.joda.time.Period.Period(long,long,org.joda.time.PeriodType)"]
154 [label="org.joda.time.Period.Period(long,long,org.joda.time.PeriodType,org.joda.time.Chronology)"]
253 [label="org.joda.time.Period.Period(long,org.joda.time.Chronology)"]
251 [label="org.joda.time.Period.Period(long,org.joda.time.PeriodType)"]
255 [label="org.joda.time.Period.Period(long,org.joda.time.PeriodType,org.joda.time.Chronology)"]
261 [label="org.joda.time.Period.Period(org.joda.time.ReadableDuration,org.joda.time.ReadableInstant)"]
263 [label="org.joda.time.Period.Period(org.joda.time.ReadableDuration,org.joda.time.ReadableInstant,org.joda.time.PeriodType)"]
257 [label="org.joda.time.Period.Period(org.joda.time.ReadableInstant,org.joda.time.ReadableDuration)"]
259 [label="org.joda.time.Period.Period(org.joda.time.ReadableInstant,org.joda.time.ReadableDuration,org.joda.time.PeriodType)"]
3850 [label="org.joda.time.Period.Period(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)"]
3851 [label="org.joda.time.Period.Period(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant,org.joda.time.PeriodType)"]
3852 [label="org.joda.time.Period.Period(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)"]
3853 [label="org.joda.time.Period.Period(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType)"]
3904 [label="org.joda.time.PeriodType.PeriodType(java.lang.String,org.joda.time.DurationFieldType[],int[])"]
3930 [label="org.joda.time.Seconds.Seconds(int)"]
3955 [label="org.joda.time.TimeOfDay$Property.TimeOfDay$Property(org.joda.time.TimeOfDay,int)"]
3973 [label="org.joda.time.TimeOfDay.TimeOfDay()"]
3980 [label="org.joda.time.TimeOfDay.TimeOfDay(int,int)"]
3983 [label="org.joda.time.TimeOfDay.TimeOfDay(int,int,int)"]
3968 [label="org.joda.time.TimeOfDay.TimeOfDay(int,int,int,int)"]
3981 [label="org.joda.time.TimeOfDay.TimeOfDay(int,int,int,int,org.joda.time.Chronology)"]
3984 [label="org.joda.time.TimeOfDay.TimeOfDay(int,int,int,org.joda.time.Chronology)"]
3982 [label="org.joda.time.TimeOfDay.TimeOfDay(int,int,org.joda.time.Chronology)"]
3977 [label="org.joda.time.TimeOfDay.TimeOfDay(java.lang.Object)"]
3979 [label="org.joda.time.TimeOfDay.TimeOfDay(java.lang.Object,org.joda.time.Chronology)"]
3976 [label="org.joda.time.TimeOfDay.TimeOfDay(long)"]
2866 [label="org.joda.time.TimeOfDay.TimeOfDay(long,org.joda.time.Chronology)"]
3975 [label="org.joda.time.TimeOfDay.TimeOfDay(org.joda.time.Chronology)"]
3974 [label="org.joda.time.TimeOfDay.TimeOfDay(org.joda.time.DateTimeZone)"]
3959 [label="org.joda.time.TimeOfDay.TimeOfDay(org.joda.time.TimeOfDay,int[])"]
3985 [label="org.joda.time.TimeOfDay.TimeOfDay(org.joda.time.TimeOfDay,org.joda.time.Chronology)"]
4021 [label="org.joda.time.UTCDateTimeZone.UTCDateTimeZone()"]
4025 [label="org.joda.time.Weeks.Weeks(int)"]
4050 [label="org.joda.time.YearMonth$Property.YearMonth$Property(org.joda.time.YearMonth,int)"]
4061 [label="org.joda.time.YearMonth.YearMonth()"]
4068 [label="org.joda.time.YearMonth.YearMonth(int,int)"]
4075 [label="org.joda.time.YearMonth.YearMonth(int,int,org.joda.time.Chronology)"]
4073 [label="org.joda.time.YearMonth.YearMonth(java.lang.Object)"]
4074 [label="org.joda.time.YearMonth.YearMonth(java.lang.Object,org.joda.time.Chronology)"]
4071 [label="org.joda.time.YearMonth.YearMonth(long)"]
4072 [label="org.joda.time.YearMonth.YearMonth(long,org.joda.time.Chronology)"]
4065 [label="org.joda.time.YearMonth.YearMonth(org.joda.time.Chronology)"]
4063 [label="org.joda.time.YearMonth.YearMonth(org.joda.time.DateTimeZone)"]
4054 [label="org.joda.time.YearMonth.YearMonth(org.joda.time.YearMonth,int[])"]
4076 [label="org.joda.time.YearMonth.YearMonth(org.joda.time.YearMonth,org.joda.time.Chronology)"]
4104 [label="org.joda.time.YearMonthDay$Property.YearMonthDay$Property(org.joda.time.YearMonthDay,int)"]
4119 [label="org.joda.time.YearMonthDay.YearMonthDay()"]
4117 [label="org.joda.time.YearMonthDay.YearMonthDay(int,int,int)"]
4126 [label="org.joda.time.YearMonthDay.YearMonthDay(int,int,int,org.joda.time.Chronology)"]
4123 [label="org.joda.time.YearMonthDay.YearMonthDay(java.lang.Object)"]
4125 [label="org.joda.time.YearMonthDay.YearMonthDay(java.lang.Object,org.joda.time.Chronology)"]
4122 [label="org.joda.time.YearMonthDay.YearMonthDay(long)"]
2752 [label="org.joda.time.YearMonthDay.YearMonthDay(long,org.joda.time.Chronology)"]
4121 [label="org.joda.time.YearMonthDay.YearMonthDay(org.joda.time.Chronology)"]
4120 [label="org.joda.time.YearMonthDay.YearMonthDay(org.joda.time.DateTimeZone)"]
4108 [label="org.joda.time.YearMonthDay.YearMonthDay(org.joda.time.YearMonthDay,int[])"]
4127 [label="org.joda.time.YearMonthDay.YearMonthDay(org.joda.time.YearMonthDay,org.joda.time.Chronology)"]
4165 [label="org.joda.time.Years.Years(int)"]
0 [label="org.joda.time.base.AbstractDateTime.AbstractDateTime()"]
60 [label="org.joda.time.base.AbstractDuration.AbstractDuration()"]
1 [label="org.joda.time.base.AbstractInstant.AbstractInstant()"]
123 [label="org.joda.time.base.AbstractInterval.AbstractInterval()"]
161 [label="org.joda.time.base.AbstractPartial.AbstractPartial()"]
193 [label="org.joda.time.base.AbstractPeriod.AbstractPeriod()"]
219 [label="org.joda.time.base.BaseDateTime.BaseDateTime()"]
236 [label="org.joda.time.base.BaseDateTime.BaseDateTime(int,int,int,int,int,int,int)"]
237 [label="org.joda.time.base.BaseDateTime.BaseDateTime(int,int,int,int,int,int,int,org.joda.time.Chronology)"]
238 [label="org.joda.time.base.BaseDateTime.BaseDateTime(int,int,int,int,int,int,int,org.joda.time.DateTimeZone)"]
234 [label="org.joda.time.base.BaseDateTime.BaseDateTime(java.lang.Object,org.joda.time.Chronology)"]
229 [label="org.joda.time.base.BaseDateTime.BaseDateTime(java.lang.Object,org.joda.time.DateTimeZone)"]
224 [label="org.joda.time.base.BaseDateTime.BaseDateTime(long)"]
221 [label="org.joda.time.base.BaseDateTime.BaseDateTime(long,org.joda.time.Chronology)"]
225 [label="org.joda.time.base.BaseDateTime.BaseDateTime(long,org.joda.time.DateTimeZone)"]
223 [label="org.joda.time.base.BaseDateTime.BaseDateTime(org.joda.time.Chronology)"]
222 [label="org.joda.time.base.BaseDateTime.BaseDateTime(org.joda.time.DateTimeZone)"]
246 [label="org.joda.time.base.BaseDuration.BaseDuration(java.lang.Object)"]
243 [label="org.joda.time.base.BaseDuration.BaseDuration(long)"]
244 [label="org.joda.time.base.BaseDuration.BaseDuration(long,long)"]
245 [label="org.joda.time.base.BaseDuration.BaseDuration(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)"]
277 [label="org.joda.time.base.BaseInterval.BaseInterval(java.lang.Object,org.joda.time.Chronology)"]
268 [label="org.joda.time.base.BaseInterval.BaseInterval(long,long,org.joda.time.Chronology)"]
273 [label="org.joda.time.base.BaseInterval.BaseInterval(org.joda.time.ReadableDuration,org.joda.time.ReadableInstant)"]
270 [label="org.joda.time.base.BaseInterval.BaseInterval(org.joda.time.ReadableInstant,org.joda.time.ReadableDuration)"]
269 [label="org.joda.time.base.BaseInterval.BaseInterval(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)"]
274 [label="org.joda.time.base.BaseInterval.BaseInterval(org.joda.time.ReadableInstant,org.joda.time.ReadablePeriod)"]
276 [label="org.joda.time.base.BaseInterval.BaseInterval(org.joda.time.ReadablePeriod,org.joda.time.ReadableInstant)"]
286 [label="org.joda.time.base.BaseLocal.BaseLocal()"]
287 [label="org.joda.time.base.BasePartial.BasePartial()"]
298 [label="org.joda.time.base.BasePartial.BasePartial(int[],org.joda.time.Chronology)"]
292 [label="org.joda.time.base.BasePartial.BasePartial(java.lang.Object,org.joda.time.Chronology)"]
296 [label="org.joda.time.base.BasePartial.BasePartial(java.lang.Object,org.joda.time.Chronology,org.joda.time.format.DateTimeFormatter)"]
290 [label="org.joda.time.base.BasePartial.BasePartial(long)"]
288 [label="org.joda.time.base.BasePartial.BasePartial(long,org.joda.time.Chronology)"]
289 [label="org.joda.time.base.BasePartial.BasePartial(org.joda.time.Chronology)"]
300 [label="org.joda.time.base.BasePartial.BasePartial(org.joda.time.base.BasePartial,int[])"]
301 [label="org.joda.time.base.BasePartial.BasePartial(org.joda.time.base.BasePartial,org.joda.time.Chronology)"]
311 [label="org.joda.time.base.BasePeriod$1.BasePeriod$1()"]
315 [label="org.joda.time.base.BasePeriod.BasePeriod(int,int,int,int,int,int,int,int,org.joda.time.PeriodType)"]
339 [label="org.joda.time.base.BasePeriod.BasePeriod(int[],org.joda.time.PeriodType)"]
334 [label="org.joda.time.base.BasePeriod.BasePeriod(java.lang.Object,org.joda.time.PeriodType,org.joda.time.Chronology)"]
328 [label="org.joda.time.base.BasePeriod.BasePeriod(long)"]
318 [label="org.joda.time.base.BasePeriod.BasePeriod(long,long,org.joda.time.PeriodType,org.joda.time.Chronology)"]
332 [label="org.joda.time.base.BasePeriod.BasePeriod(long,org.joda.time.PeriodType,org.joda.time.Chronology)"]
327 [label="org.joda.time.base.BasePeriod.BasePeriod(org.joda.time.ReadableDuration,org.joda.time.ReadableInstant,org.joda.time.PeriodType)"]
326 [label="org.joda.time.base.BasePeriod.BasePeriod(org.joda.time.ReadableInstant,org.joda.time.ReadableDuration,org.joda.time.PeriodType)"]
320 [label="org.joda.time.base.BasePeriod.BasePeriod(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant,org.joda.time.PeriodType)"]
322 [label="org.joda.time.base.BasePeriod.BasePeriod(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType)"]
378 [label="org.joda.time.base.BaseSingleFieldPeriod.BaseSingleFieldPeriod(int)"]
396 [label="org.joda.time.chrono.AssembledChronology$Fields.AssembledChronology$Fields()"]
418 [label="org.joda.time.chrono.AssembledChronology.AssembledChronology(org.joda.time.Chronology,java.lang.Object)"]
419 [label="org.joda.time.chrono.BaseChronology.BaseChronology()"]
514 [label="org.joda.time.chrono.BasicChronology$HalfdayField.BasicChronology$HalfdayField()"]
524 [label="org.joda.time.chrono.BasicChronology$YearInfo.BasicChronology$YearInfo(int,long)"]
528 [label="org.joda.time.chrono.BasicChronology.BasicChronology(org.joda.time.Chronology,java.lang.Object,int)"]
562 [label="org.joda.time.chrono.BasicDayOfMonthDateTimeField.BasicDayOfMonthDateTimeField(org.joda.time.chrono.BasicChronology,org.joda.time.DurationField)"]
563 [label="org.joda.time.chrono.BasicDayOfYearDateTimeField.BasicDayOfYearDateTimeField(org.joda.time.chrono.BasicChronology,org.joda.time.DurationField)"]
628 [label="org.joda.time.chrono.BasicFixedMonthChronology.BasicFixedMonthChronology(org.joda.time.Chronology,java.lang.Object,int)"]
637 [label="org.joda.time.chrono.BasicGJChronology.BasicGJChronology(org.joda.time.Chronology,java.lang.Object,int)"]
647 [label="org.joda.time.chrono.BasicMonthOfYearDateTimeField.BasicMonthOfYearDateTimeField(org.joda.time.chrono.BasicChronology,int)"]
674 [label="org.joda.time.chrono.BasicSingleEraDateTimeField.BasicSingleEraDateTimeField(java.lang.String)"]
566 [label="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.BasicWeekOfWeekyearDateTimeField(org.joda.time.chrono.BasicChronology,org.joda.time.DurationField)"]
565 [label="org.joda.time.chrono.BasicWeekyearDateTimeField.BasicWeekyearDateTimeField(org.joda.time.chrono.BasicChronology)"]
553 [label="org.joda.time.chrono.BasicYearDateTimeField.BasicYearDateTimeField(org.joda.time.chrono.BasicChronology)"]
743 [label="org.joda.time.chrono.BuddhistChronology.BuddhistChronology(org.joda.time.Chronology,java.lang.Object)"]
762 [label="org.joda.time.chrono.CopticChronology.CopticChronology(org.joda.time.Chronology,java.lang.Object,int)"]
774 [label="org.joda.time.chrono.EthiopicChronology.EthiopicChronology(org.joda.time.Chronology,java.lang.Object,int)"]
780 [label="org.joda.time.chrono.GJCacheKey.GJCacheKey(org.joda.time.DateTimeZone,org.joda.time.Instant,int)"]
783 [label="org.joda.time.chrono.GJChronology$CutoverField.GJChronology$CutoverField(org.joda.time.DateTimeField,org.joda.time.DateTimeField,long)"]
784 [label="org.joda.time.chrono.GJChronology$CutoverField.GJChronology$CutoverField(org.joda.time.DateTimeField,org.joda.time.DateTimeField,long,boolean)"]
785 [label="org.joda.time.chrono.GJChronology$CutoverField.GJChronology$CutoverField(org.joda.time.DateTimeField,org.joda.time.DateTimeField,org.joda.time.DurationField,long,boolean)"]
839 [label="org.joda.time.chrono.GJChronology$ImpreciseCutoverField.GJChronology$ImpreciseCutoverField(org.joda.time.DateTimeField,org.joda.time.DateTimeField,long)"]
841 [label="org.joda.time.chrono.GJChronology$ImpreciseCutoverField.GJChronology$ImpreciseCutoverField(org.joda.time.DateTimeField,org.joda.time.DateTimeField,org.joda.time.DurationField,long)"]
840 [label="org.joda.time.chrono.GJChronology$ImpreciseCutoverField.GJChronology$ImpreciseCutoverField(org.joda.time.DateTimeField,org.joda.time.DateTimeField,org.joda.time.DurationField,long,boolean)"]
842 [label="org.joda.time.chrono.GJChronology$ImpreciseCutoverField.GJChronology$ImpreciseCutoverField(org.joda.time.DateTimeField,org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DurationField,long)"]
843 [label="org.joda.time.chrono.GJChronology$LinkedDurationField.GJChronology$LinkedDurationField(org.joda.time.DurationField,org.joda.time.chrono.GJChronology$ImpreciseCutoverField)"]
871 [label="org.joda.time.chrono.GJChronology.GJChronology(org.joda.time.Chronology,org.joda.time.chrono.JulianChronology,org.joda.time.chrono.GregorianChronology,org.joda.time.Instant)"]
870 [label="org.joda.time.chrono.GJChronology.GJChronology(org.joda.time.chrono.JulianChronology,org.joda.time.chrono.GregorianChronology,org.joda.time.Instant)"]
561 [label="org.joda.time.chrono.GJDayOfWeekDateTimeField.GJDayOfWeekDateTimeField(org.joda.time.chrono.BasicChronology,org.joda.time.DurationField)"]
560 [label="org.joda.time.chrono.GJEraDateTimeField.GJEraDateTimeField(org.joda.time.chrono.BasicChronology)"]
934 [label="org.joda.time.chrono.GJLocaleSymbols.GJLocaleSymbols(java.util.Locale)"]
564 [label="org.joda.time.chrono.GJMonthOfYearDateTimeField.GJMonthOfYearDateTimeField(org.joda.time.chrono.BasicChronology)"]
554 [label="org.joda.time.chrono.GJYearOfEraDateTimeField.GJYearOfEraDateTimeField(org.joda.time.DateTimeField,org.joda.time.chrono.BasicChronology)"]
987 [label="org.joda.time.chrono.GregorianChronology.GregorianChronology(org.joda.time.Chronology,java.lang.Object,int)"]
993 [label="org.joda.time.chrono.ISOChronology$Stub.ISOChronology$Stub(org.joda.time.DateTimeZone)"]
1001 [label="org.joda.time.chrono.ISOChronology.ISOChronology(org.joda.time.Chronology)"]
1012 [label="org.joda.time.chrono.ISOYearOfEraDateTimeField.ISOYearOfEraDateTimeField()"]
1026 [label="org.joda.time.chrono.IslamicChronology$LeapYearPatternType.IslamicChronology$LeapYearPatternType(int,int)"]
1031 [label="org.joda.time.chrono.IslamicChronology.IslamicChronology(org.joda.time.Chronology,java.lang.Object,org.joda.time.chrono.IslamicChronology$LeapYearPatternType)"]
1055 [label="org.joda.time.chrono.JulianChronology.JulianChronology(org.joda.time.Chronology,java.lang.Object,int)"]
1063 [label="org.joda.time.chrono.LenientChronology.LenientChronology(org.joda.time.Chronology)"]
1097 [label="org.joda.time.chrono.LimitChronology$LimitDateTimeField.LimitChronology$LimitDateTimeField(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DurationField,org.joda.time.DurationField)"]
1081 [label="org.joda.time.chrono.LimitChronology$LimitDurationField.LimitChronology$LimitDurationField(org.joda.time.DurationField)"]
1073 [label="org.joda.time.chrono.LimitChronology$LimitException.LimitChronology$LimitException(java.lang.String,boolean)"]
1125 [label="org.joda.time.chrono.LimitChronology.LimitChronology(org.joda.time.Chronology,org.joda.time.DateTime,org.joda.time.DateTime)"]
1143 [label="org.joda.time.chrono.StrictChronology.StrictChronology(org.joda.time.Chronology)"]
1174 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.ZonedChronology$ZonedDateTimeField(org.joda.time.DateTimeField,org.joda.time.DateTimeZone,org.joda.time.DurationField,org.joda.time.DurationField,org.joda.time.DurationField)"]
1152 [label="org.joda.time.chrono.ZonedChronology$ZonedDurationField.ZonedChronology$ZonedDurationField(org.joda.time.DurationField,org.joda.time.DateTimeZone)"]
1212 [label="org.joda.time.chrono.ZonedChronology.ZonedChronology(org.joda.time.Chronology,org.joda.time.DateTimeZone)"]
1226 [label="org.joda.time.convert.AbstractConverter.AbstractConverter()"]
1236 [label="org.joda.time.convert.CalendarConverter.CalendarConverter()"]
1246 [label="org.joda.time.convert.ConverterManager.ConverterManager()"]
1277 [label="org.joda.time.convert.ConverterSet$Entry.ConverterSet$Entry(java.lang.Class,org.joda.time.convert.Converter)"]
1247 [label="org.joda.time.convert.ConverterSet.ConverterSet(org.joda.time.convert.Converter[])"]
1285 [label="org.joda.time.convert.DateConverter.DateConverter()"]
1288 [label="org.joda.time.convert.LongConverter.LongConverter()"]
1293 [label="org.joda.time.convert.NullConverter.NullConverter()"]
1300 [label="org.joda.time.convert.ReadableDurationConverter.ReadableDurationConverter()"]
1305 [label="org.joda.time.convert.ReadableInstantConverter.ReadableInstantConverter()"]
1310 [label="org.joda.time.convert.ReadableIntervalConverter.ReadableIntervalConverter()"]
1318 [label="org.joda.time.convert.ReadablePartialConverter.ReadablePartialConverter()"]
1323 [label="org.joda.time.convert.ReadablePeriodConverter.ReadablePeriodConverter()"]
1327 [label="org.joda.time.convert.StringConverter.StringConverter()"]
1348 [label="org.joda.time.field.AbstractPartialFieldProperty.AbstractPartialFieldProperty()"]
1377 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.AbstractReadableInstantFieldProperty()"]
675 [label="org.joda.time.field.BaseDateTimeField.BaseDateTimeField(org.joda.time.DateTimeFieldType)"]
1153 [label="org.joda.time.field.BaseDurationField.BaseDurationField(org.joda.time.DurationFieldType)"]
965 [label="org.joda.time.field.DecoratedDateTimeField.DecoratedDateTimeField(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType)"]
851 [label="org.joda.time.field.DecoratedDurationField.DecoratedDurationField(org.joda.time.DurationField,org.joda.time.DurationFieldType)"]
1484 [label="org.joda.time.field.DelegatedDateTimeField.DelegatedDateTimeField(org.joda.time.DateTimeField)"]
1485 [label="org.joda.time.field.DelegatedDateTimeField.DelegatedDateTimeField(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType)"]
756 [label="org.joda.time.field.DelegatedDateTimeField.DelegatedDateTimeField(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType)"]
1541 [label="org.joda.time.field.DelegatedDurationField.DelegatedDurationField(org.joda.time.DurationField)"]
1542 [label="org.joda.time.field.DelegatedDurationField.DelegatedDurationField(org.joda.time.DurationField,org.joda.time.DurationFieldType)"]
556 [label="org.joda.time.field.DividedDateTimeField.DividedDateTimeField(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int)"]
757 [label="org.joda.time.field.DividedDateTimeField.DividedDateTimeField(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int)"]
1570 [label="org.joda.time.field.DividedDateTimeField.DividedDateTimeField(org.joda.time.field.RemainderDateTimeField,org.joda.time.DateTimeFieldType)"]
1571 [label="org.joda.time.field.DividedDateTimeField.DividedDateTimeField(org.joda.time.field.RemainderDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType)"]
1583 [label="org.joda.time.field.FieldUtils.FieldUtils()"]
1595 [label="org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.ImpreciseDateTimeField$LinkedDurationField(org.joda.time.DurationFieldType)"]
649 [label="org.joda.time.field.ImpreciseDateTimeField.ImpreciseDateTimeField(org.joda.time.DateTimeFieldType,long)"]
1608 [label="org.joda.time.field.LenientDateTimeField.LenientDateTimeField(org.joda.time.DateTimeField,org.joda.time.Chronology)"]
1612 [label="org.joda.time.field.MillisDurationField.MillisDurationField()"]
555 [label="org.joda.time.field.OffsetDateTimeField.OffsetDateTimeField(org.joda.time.DateTimeField,int)"]
559 [label="org.joda.time.field.OffsetDateTimeField.OffsetDateTimeField(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int)"]
1624 [label="org.joda.time.field.OffsetDateTimeField.OffsetDateTimeField(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int,int,int)"]
515 [label="org.joda.time.field.PreciseDateTimeField.PreciseDateTimeField(org.joda.time.DateTimeFieldType,org.joda.time.DurationField,org.joda.time.DurationField)"]
599 [label="org.joda.time.field.PreciseDurationDateTimeField.PreciseDurationDateTimeField(org.joda.time.DateTimeFieldType,org.joda.time.DurationField)"]
526 [label="org.joda.time.field.PreciseDurationField.PreciseDurationField(org.joda.time.DurationFieldType,long)"]
1653 [label="org.joda.time.field.RemainderDateTimeField.RemainderDateTimeField(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType,int)"]
567 [label="org.joda.time.field.RemainderDateTimeField.RemainderDateTimeField(org.joda.time.DateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType,int)"]
558 [label="org.joda.time.field.RemainderDateTimeField.RemainderDateTimeField(org.joda.time.field.DividedDateTimeField)"]
1006 [label="org.joda.time.field.RemainderDateTimeField.RemainderDateTimeField(org.joda.time.field.DividedDateTimeField,org.joda.time.DateTimeFieldType)"]
1007 [label="org.joda.time.field.RemainderDateTimeField.RemainderDateTimeField(org.joda.time.field.DividedDateTimeField,org.joda.time.DurationField,org.joda.time.DateTimeFieldType)"]
1569 [label="org.joda.time.field.ScaledDurationField.ScaledDurationField(org.joda.time.DurationField,org.joda.time.DurationFieldType,int)"]
769 [label="org.joda.time.field.SkipDateTimeField.SkipDateTimeField(org.joda.time.Chronology,org.joda.time.DateTimeField)"]
1680 [label="org.joda.time.field.SkipDateTimeField.SkipDateTimeField(org.joda.time.Chronology,org.joda.time.DateTimeField,int)"]
755 [label="org.joda.time.field.SkipUndoDateTimeField.SkipUndoDateTimeField(org.joda.time.Chronology,org.joda.time.DateTimeField)"]
1684 [label="org.joda.time.field.SkipUndoDateTimeField.SkipUndoDateTimeField(org.joda.time.Chronology,org.joda.time.DateTimeField,int)"]
1688 [label="org.joda.time.field.StrictDateTimeField.StrictDateTimeField(org.joda.time.DateTimeField)"]
1692 [label="org.joda.time.field.UnsupportedDateTimeField.UnsupportedDateTimeField(org.joda.time.DateTimeFieldType,org.joda.time.DurationField)"]
1738 [label="org.joda.time.field.UnsupportedDurationField.UnsupportedDurationField(org.joda.time.DurationFieldType)"]
527 [label="org.joda.time.field.ZeroIsMaxDateTimeField.ZeroIsMaxDateTimeField(org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType)"]
1779 [label="org.joda.time.format.DateTimeFormat$StyleFormatter.DateTimeFormat$StyleFormatter(int,int,int)"]
1790 [label="org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey.DateTimeFormat$StyleFormatterCacheKey(int,int,int,java.util.Locale)"]
1821 [label="org.joda.time.format.DateTimeFormat.DateTimeFormat()"]
1865 [label="org.joda.time.format.DateTimeFormatter.DateTimeFormatter(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser)"]
1864 [label="org.joda.time.format.DateTimeFormatter.DateTimeFormatter(org.joda.time.format.InternalPrinter,org.joda.time.format.InternalParser)"]
1868 [label="org.joda.time.format.DateTimeFormatter.DateTimeFormatter(org.joda.time.format.InternalPrinter,org.joda.time.format.InternalParser,java.util.Locale,boolean,org.joda.time.Chronology,org.joda.time.DateTimeZone,java.lang.Integer,int)"]
1918 [label="org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral.DateTimeFormatterBuilder$CharacterLiteral(char)"]
2016 [label="org.joda.time.format.DateTimeFormatterBuilder$Composite.DateTimeFormatterBuilder$Composite(java.util.List)"]
1950 [label="org.joda.time.format.DateTimeFormatterBuilder$FixedNumber.DateTimeFormatterBuilder$FixedNumber(org.joda.time.DateTimeFieldType,int,boolean)"]
1976 [label="org.joda.time.format.DateTimeFormatterBuilder$Fraction.DateTimeFormatterBuilder$Fraction(org.joda.time.DateTimeFieldType,int,int)"]
2026 [label="org.joda.time.format.DateTimeFormatterBuilder$MatchingParser.DateTimeFormatterBuilder$MatchingParser(org.joda.time.format.InternalParser[])"]
1935 [label="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.DateTimeFormatterBuilder$NumberFormatter(org.joda.time.DateTimeFieldType,int,boolean)"]
1945 [label="org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber.DateTimeFormatterBuilder$PaddedNumber(org.joda.time.DateTimeFieldType,int,boolean,int)"]
1927 [label="org.joda.time.format.DateTimeFormatterBuilder$StringLiteral.DateTimeFormatterBuilder$StringLiteral(java.lang.String)"]
1960 [label="org.joda.time.format.DateTimeFormatterBuilder$TextField.DateTimeFormatterBuilder$TextField(org.joda.time.DateTimeFieldType,boolean)"]
2009 [label="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId.DateTimeFormatterBuilder$TimeZoneId()"]
1993 [label="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName.DateTimeFormatterBuilder$TimeZoneName(int,java.util.Map)"]
1985 [label="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.DateTimeFormatterBuilder$TimeZoneOffset(java.lang.String,java.lang.String,boolean,int,int)"]
1952 [label="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.DateTimeFormatterBuilder$TwoDigitYear(org.joda.time.DateTimeFieldType,int,boolean)"]
1941 [label="org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber.DateTimeFormatterBuilder$UnpaddedNumber(org.joda.time.DateTimeFieldType,int,boolean)"]
1856 [label="org.joda.time.format.DateTimeFormatterBuilder.DateTimeFormatterBuilder()"]
2078 [label="org.joda.time.format.DateTimeParserBucket$SavedField.DateTimeParserBucket$SavedField()"]
2077 [label="org.joda.time.format.DateTimeParserBucket$SavedState.DateTimeParserBucket$SavedState()"]
2083 [label="org.joda.time.format.DateTimeParserBucket.DateTimeParserBucket(long,org.joda.time.Chronology,java.util.Locale)"]
2084 [label="org.joda.time.format.DateTimeParserBucket.DateTimeParserBucket(long,org.joda.time.Chronology,java.util.Locale,java.lang.Integer)"]
1899 [label="org.joda.time.format.DateTimeParserBucket.DateTimeParserBucket(long,org.joda.time.Chronology,java.util.Locale,java.lang.Integer,int)"]
2098 [label="org.joda.time.format.DateTimeParserInternalParser.DateTimeParserInternalParser(org.joda.time.format.DateTimeParser)"]
2103 [label="org.joda.time.format.DateTimePrinterInternalPrinter.DateTimePrinterInternalPrinter(org.joda.time.format.DateTimePrinter)"]
2114 [label="org.joda.time.format.FormatUtils.FormatUtils()"]
2188 [label="org.joda.time.format.ISODateTimeFormat$Constants.ISODateTimeFormat$Constants()"]
2191 [label="org.joda.time.format.ISODateTimeFormat.ISODateTimeFormat()"]
2207 [label="org.joda.time.format.ISOPeriodFormat.ISOPeriodFormat()"]
2229 [label="org.joda.time.format.InternalParserDateTimeParser.InternalParserDateTimeParser(org.joda.time.format.InternalParser)"]
2235 [label="org.joda.time.format.InternalPrinterDateTimePrinter.InternalPrinterDateTimePrinter(org.joda.time.format.InternalPrinter)"]
2244 [label="org.joda.time.format.PeriodFormat$DynamicWordBased.PeriodFormat$DynamicWordBased(org.joda.time.format.PeriodFormatter)"]
2262 [label="org.joda.time.format.PeriodFormat.PeriodFormat()"]
2283 [label="org.joda.time.format.PeriodFormatter.PeriodFormatter(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser)"]
2266 [label="org.joda.time.format.PeriodFormatter.PeriodFormatter(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,java.util.Locale,org.joda.time.PeriodType)"]
2377 [label="org.joda.time.format.PeriodFormatterBuilder$Composite.PeriodFormatterBuilder$Composite(java.util.List)"]
2325 [label="org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.PeriodFormatterBuilder$CompositeAffix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix,org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)"]
2337 [label="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.PeriodFormatterBuilder$FieldFormatter(int,int,int,boolean,int,org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[],org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix,org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)"]
2338 [label="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.PeriodFormatterBuilder$FieldFormatter(org.joda.time.format.PeriodFormatterBuilder$FieldFormatter,org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)"]
2290 [label="org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix.PeriodFormatterBuilder$IgnorableAffix()"]
2362 [label="org.joda.time.format.PeriodFormatterBuilder$Literal.PeriodFormatterBuilder$Literal(java.lang.String)"]
2304 [label="org.joda.time.format.PeriodFormatterBuilder$PluralAffix.PeriodFormatterBuilder$PluralAffix(java.lang.String,java.lang.String)"]
2310 [label="org.joda.time.format.PeriodFormatterBuilder$RegExAffix$1.RegExAffix$1()"]
2313 [label="org.joda.time.format.PeriodFormatterBuilder$RegExAffix.PeriodFormatterBuilder$RegExAffix(java.lang.String[],java.lang.String[])"]
2367 [label="org.joda.time.format.PeriodFormatterBuilder$Separator.PeriodFormatterBuilder$Separator(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean)"]
2298 [label="org.joda.time.format.PeriodFormatterBuilder$SimpleAffix.PeriodFormatterBuilder$SimpleAffix(java.lang.String)"]
2208 [label="org.joda.time.format.PeriodFormatterBuilder.PeriodFormatterBuilder()"]
2412 [label="org.joda.time.tz.CachedDateTimeZone$Info.CachedDateTimeZone$Info(org.joda.time.DateTimeZone,long)"]
2421 [label="org.joda.time.tz.CachedDateTimeZone.CachedDateTimeZone(org.joda.time.DateTimeZone)"]
2495 [label="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.DateTimeZoneBuilder$DSTZone(java.lang.String,int,org.joda.time.tz.DateTimeZoneBuilder$Recurrence,org.joda.time.tz.DateTimeZoneBuilder$Recurrence)"]
2440 [label="org.joda.time.tz.DateTimeZoneBuilder$OfYear.DateTimeZoneBuilder$OfYear(char,int,int,int,boolean,int)"]
2508 [label="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.DateTimeZoneBuilder$PrecalculatedZone(java.lang.String,long[],int[],int[],java.lang.String[],org.joda.time.tz.DateTimeZoneBuilder$DSTZone)"]
2454 [label="org.joda.time.tz.DateTimeZoneBuilder$Recurrence.DateTimeZoneBuilder$Recurrence(org.joda.time.tz.DateTimeZoneBuilder$OfYear,java.lang.String,int)"]
2463 [label="org.joda.time.tz.DateTimeZoneBuilder$Rule.DateTimeZoneBuilder$Rule(org.joda.time.tz.DateTimeZoneBuilder$Recurrence,int,int)"]
2478 [label="org.joda.time.tz.DateTimeZoneBuilder$RuleSet.DateTimeZoneBuilder$RuleSet()"]
2480 [label="org.joda.time.tz.DateTimeZoneBuilder$RuleSet.DateTimeZoneBuilder$RuleSet(org.joda.time.tz.DateTimeZoneBuilder$RuleSet)"]
2473 [label="org.joda.time.tz.DateTimeZoneBuilder$Transition.DateTimeZoneBuilder$Transition(long,java.lang.String,int,int)"]
2472 [label="org.joda.time.tz.DateTimeZoneBuilder$Transition.DateTimeZoneBuilder$Transition(long,org.joda.time.tz.DateTimeZoneBuilder$Rule,int)"]
2471 [label="org.joda.time.tz.DateTimeZoneBuilder$Transition.DateTimeZoneBuilder$Transition(long,org.joda.time.tz.DateTimeZoneBuilder$Transition)"]
2541 [label="org.joda.time.tz.DateTimeZoneBuilder.DateTimeZoneBuilder()"]
2561 [label="org.joda.time.tz.DefaultNameProvider.DefaultNameProvider()"]
2537 [label="org.joda.time.tz.FixedDateTimeZone.FixedDateTimeZone(java.lang.String,java.lang.String,int,int)"]
2577 [label="org.joda.time.tz.UTCProvider.UTCProvider()"]
2579 [label="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.ZoneInfoCompiler$DateTimeOfYear()"]
2580 [label="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.ZoneInfoCompiler$DateTimeOfYear(java.util.StringTokenizer)"]
2595 [label="org.joda.time.tz.ZoneInfoCompiler$Rule.ZoneInfoCompiler$Rule(java.util.StringTokenizer)"]
2601 [label="org.joda.time.tz.ZoneInfoCompiler$RuleSet.ZoneInfoCompiler$RuleSet(org.joda.time.tz.ZoneInfoCompiler$Rule)"]
2605 [label="org.joda.time.tz.ZoneInfoCompiler$Zone.ZoneInfoCompiler$Zone(java.lang.String,java.util.StringTokenizer)"]
2604 [label="org.joda.time.tz.ZoneInfoCompiler$Zone.ZoneInfoCompiler$Zone(java.util.StringTokenizer)"]
2616 [label="org.joda.time.tz.ZoneInfoCompiler.ZoneInfoCompiler()"]
2655 [label="org.joda.time.tz.ZoneInfoLogger$1.ZoneInfoLogger$1()"]
2658 [label="org.joda.time.tz.ZoneInfoLogger.ZoneInfoLogger()"]
2675 [label="org.joda.time.tz.ZoneInfoProvider$1.ZoneInfoProvider$1()"]
2661 [label="org.joda.time.tz.ZoneInfoProvider.ZoneInfoProvider(java.io.File)"]
2666 [label="org.joda.time.tz.ZoneInfoProvider.ZoneInfoProvider(java.lang.String)"]
2668 [label="org.joda.time.tz.ZoneInfoProvider.ZoneInfoProvider(java.lang.String,java.lang.ClassLoader)"]
2667 [label="org.joda.time.tz.ZoneInfoProvider.ZoneInfoProvider(java.lang.String,java.lang.ClassLoader,boolean)"]
3142 [label="org.joda.time.Interval.overlap(org.joda.time.ReadableInterval)"]
134 [label="org.joda.time.base.AbstractInterval.overlaps(org.joda.time.ReadableInterval)"]
3044 [label="org.joda.time.Duration.parse(java.lang.String)"]
3832 [label="org.joda.time.Period.parse(java.lang.String)"]
3119 [label="org.joda.time.Instant.parse(java.lang.String)"]
2802 [label="org.joda.time.DateTime.parse(java.lang.String)"]
3621 [label="org.joda.time.MutableDateTime.parse(java.lang.String)"]
3134 [label="org.joda.time.Interval.parse(java.lang.String)"]
3691 [label="org.joda.time.MutableInterval.parse(java.lang.String)"]
3716 [label="org.joda.time.MutablePeriod.parse(java.lang.String)"]
3183 [label="org.joda.time.LocalDate.parse(java.lang.String)"]
3299 [label="org.joda.time.LocalDateTime.parse(java.lang.String)"]
2712 [label="org.joda.time.DateMidnight.parse(java.lang.String)"]
3441 [label="org.joda.time.LocalTime.parse(java.lang.String)"]
3541 [label="org.joda.time.MonthDay.parse(java.lang.String)"]
4066 [label="org.joda.time.YearMonth.parse(java.lang.String)"]
2333 [label="org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix.parse(java.lang.String,int)"]
2302 [label="org.joda.time.format.PeriodFormatterBuilder$SimpleAffix.parse(java.lang.String,int)"]
2308 [label="org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse(java.lang.String,int)"]
2322 [label="org.joda.time.format.PeriodFormatterBuilder$RegExAffix.parse(java.lang.String,int)"]
2332 [label="org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.parse(java.lang.String,int)"]
3120 [label="org.joda.time.Instant.parse(java.lang.String,org.joda.time.format.DateTimeFormatter)"]
2803 [label="org.joda.time.DateTime.parse(java.lang.String,org.joda.time.format.DateTimeFormatter)"]
3622 [label="org.joda.time.MutableDateTime.parse(java.lang.String,org.joda.time.format.DateTimeFormatter)"]
3185 [label="org.joda.time.LocalDate.parse(java.lang.String,org.joda.time.format.DateTimeFormatter)"]
3301 [label="org.joda.time.LocalDateTime.parse(java.lang.String,org.joda.time.format.DateTimeFormatter)"]
2713 [label="org.joda.time.DateMidnight.parse(java.lang.String,org.joda.time.format.DateTimeFormatter)"]
3443 [label="org.joda.time.LocalTime.parse(java.lang.String,org.joda.time.format.DateTimeFormatter)"]
3542 [label="org.joda.time.MonthDay.parse(java.lang.String,org.joda.time.format.DateTimeFormatter)"]
4067 [label="org.joda.time.YearMonth.parse(java.lang.String,org.joda.time.format.DateTimeFormatter)"]
3833 [label="org.joda.time.Period.parse(java.lang.String,org.joda.time.format.PeriodFormatter)"]
3717 [label="org.joda.time.MutablePeriod.parse(java.lang.String,org.joda.time.format.PeriodFormatter)"]
2638 [label="org.joda.time.tz.ZoneInfoCompiler.parseDataFile(java.io.BufferedReader,boolean)"]
1346 [label="org.joda.time.format.DateTimeFormatter.parseDateTime(java.lang.String)"]
2584 [label="org.joda.time.tz.ZoneInfoCompiler.parseDayOfWeek(java.lang.String)"]
3018 [label="org.joda.time.Days.parseDays(java.lang.String)"]
3086 [label="org.joda.time.Hours.parseHours(java.lang.String)"]
1337 [label="java.lang.Integer.parseInt(java.lang.String)"]
2349 [label="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInt(java.lang.String,int,int)"]
1897 [label="org.joda.time.format.DateTimeFormatter.parseInto(org.joda.time.ReadWritableInstant,java.lang.String,int)"]
1340 [label="org.joda.time.format.PeriodFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int)"]
2257 [label="org.joda.time.format.PeriodFormat$DynamicWordBased.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)"]
2259 [label="org.joda.time.format.PeriodParser.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)"]
2347 [label="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)"]
2366 [label="org.joda.time.format.PeriodFormatterBuilder$Literal.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)"]
2376 [label="org.joda.time.format.PeriodFormatterBuilder$Separator.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)"]
2384 [label="org.joda.time.format.PeriodFormatterBuilder$Composite.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)"]
1786 [label="org.joda.time.format.DateTimeFormat$StyleFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)"]
1789 [label="org.joda.time.format.InternalParser.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)"]
2101 [label="org.joda.time.format.DateTimeParserInternalParser.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)"]
2231 [label="org.joda.time.format.InternalParserDateTimeParser.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)"]
1922 [label="org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)"]
1933 [label="org.joda.time.format.DateTimeFormatterBuilder$StringLiteral.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)"]
1936 [label="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)"]
1951 [label="org.joda.time.format.DateTimeFormatterBuilder$FixedNumber.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)"]
1953 [label="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)"]
1967 [label="org.joda.time.format.DateTimeFormatterBuilder$TextField.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)"]
1982 [label="org.joda.time.format.DateTimeFormatterBuilder$Fraction.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)"]
1989 [label="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)"]
1998 [label="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)"]
2012 [label="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)"]
2024 [label="org.joda.time.format.DateTimeFormatterBuilder$Composite.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)"]
2027 [label="org.joda.time.format.DateTimeFormatterBuilder$MatchingParser.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)"]
2232 [label="org.joda.time.format.InternalParserDateTimeParser.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int)"]
2102 [label="org.joda.time.format.DateTimeParser.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int)"]
1908 [label="org.joda.time.format.DateTimeFormatter.parseLocalDate(java.lang.String)"]
1909 [label="org.joda.time.format.DateTimeFormatter.parseLocalDateTime(java.lang.String)"]
1911 [label="org.joda.time.format.DateTimeFormatter.parseLocalTime(java.lang.String)"]
1336 [label="java.lang.Long.parseLong(java.lang.String)"]
1330 [label="org.joda.time.format.DateTimeFormatter.parseMillis(java.lang.String)"]
2085 [label="org.joda.time.format.DateTimeParserBucket.parseMillis(org.joda.time.format.DateTimeParser,java.lang.CharSequence)"]
3503 [label="org.joda.time.Minutes.parseMinutes(java.lang.String)"]
2583 [label="org.joda.time.tz.ZoneInfoCompiler.parseMonth(java.lang.String)"]
3583 [label="org.joda.time.Months.parseMonths(java.lang.String)"]
1916 [label="org.joda.time.format.DateTimeFormatter.parseMutableDateTime(java.lang.String)"]
1342 [label="org.joda.time.format.PeriodFormatter.parseMutablePeriod(java.lang.String)"]
2972 [label="org.joda.time.DateTimeZone.parseOffset(java.lang.String)"]
2598 [label="org.joda.time.tz.ZoneInfoCompiler.parseOptional(java.lang.String)"]
1820 [label="org.joda.time.format.DateTimeFormat.parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder,java.lang.String)"]
1345 [label="org.joda.time.format.PeriodFormatter.parsePeriod(java.lang.String)"]
3935 [label="org.joda.time.Seconds.parseSeconds(java.lang.String)"]
2587 [label="org.joda.time.tz.ZoneInfoCompiler.parseTime(java.lang.String)"]
1822 [label="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])"]
1992 [label="org.joda.time.format.FormatUtils.parseTwoDigits(java.lang.CharSequence,int)"]
4030 [label="org.joda.time.Weeks.parseWeeks(java.lang.String)"]
3136 [label="org.joda.time.Interval.parseWithOffset(java.lang.String)"]
2597 [label="org.joda.time.tz.ZoneInfoCompiler.parseYear(java.lang.String,int)"]
4170 [label="org.joda.time.Years.parseYears(java.lang.String)"]
2586 [label="org.joda.time.tz.ZoneInfoCompiler.parseZoneChar(char)"]
1805 [label="org.joda.time.format.DateTimeFormat.patternForStyle(java.lang.String,java.util.Locale)"]
3033 [label="org.joda.time.Days.plus(int)"]
4040 [label="org.joda.time.Weeks.plus(int)"]
3097 [label="org.joda.time.Hours.plus(int)"]
3514 [label="org.joda.time.Minutes.plus(int)"]
3945 [label="org.joda.time.Seconds.plus(int)"]
3588 [label="org.joda.time.Months.plus(int)"]
4175 [label="org.joda.time.Years.plus(int)"]
3063 [label="org.joda.time.Duration.plus(long)"]
3126 [label="org.joda.time.Instant.plus(long)"]
2841 [label="org.joda.time.DateTime.plus(long)"]
2735 [label="org.joda.time.DateMidnight.plus(long)"]
3034 [label="org.joda.time.Days.plus(org.joda.time.Days)"]
3098 [label="org.joda.time.Hours.plus(org.joda.time.Hours)"]
3515 [label="org.joda.time.Minutes.plus(org.joda.time.Minutes)"]
3589 [label="org.joda.time.Months.plus(org.joda.time.Months)"]
3064 [label="org.joda.time.Duration.plus(org.joda.time.ReadableDuration)"]
3127 [label="org.joda.time.Instant.plus(org.joda.time.ReadableDuration)"]
2842 [label="org.joda.time.DateTime.plus(org.joda.time.ReadableDuration)"]
3348 [label="org.joda.time.LocalDateTime.plus(org.joda.time.ReadableDuration)"]
2736 [label="org.joda.time.DateMidnight.plus(org.joda.time.ReadableDuration)"]
3873 [label="org.joda.time.Period.plus(org.joda.time.ReadablePeriod)"]
2843 [label="org.joda.time.DateTime.plus(org.joda.time.ReadablePeriod)"]
3230 [label="org.joda.time.LocalDate.plus(org.joda.time.ReadablePeriod)"]
3349 [label="org.joda.time.LocalDateTime.plus(org.joda.time.ReadablePeriod)"]
2737 [label="org.joda.time.DateMidnight.plus(org.joda.time.ReadablePeriod)"]
4134 [label="org.joda.time.YearMonthDay.plus(org.joda.time.ReadablePeriod)"]
3468 [label="org.joda.time.LocalTime.plus(org.joda.time.ReadablePeriod)"]
3992 [label="org.joda.time.TimeOfDay.plus(org.joda.time.ReadablePeriod)"]
3559 [label="org.joda.time.MonthDay.plus(org.joda.time.ReadablePeriod)"]
3819 [label="org.joda.time.Partial.plus(org.joda.time.ReadablePeriod)"]
4084 [label="org.joda.time.YearMonth.plus(org.joda.time.ReadablePeriod)"]
3946 [label="org.joda.time.Seconds.plus(org.joda.time.Seconds)"]
4041 [label="org.joda.time.Weeks.plus(org.joda.time.Weeks)"]
4176 [label="org.joda.time.Years.plus(org.joda.time.Years)"]
3878 [label="org.joda.time.Period.plusDays(int)"]
2847 [label="org.joda.time.DateTime.plusDays(int)"]
2590 [label="org.joda.time.LocalDate.plusDays(int)"]
3353 [label="org.joda.time.LocalDateTime.plusDays(int)"]
2741 [label="org.joda.time.DateMidnight.plusDays(int)"]
4137 [label="org.joda.time.YearMonthDay.plusDays(int)"]
3561 [label="org.joda.time.MonthDay.plusDays(int)"]
3879 [label="org.joda.time.Period.plusHours(int)"]
2848 [label="org.joda.time.DateTime.plusHours(int)"]
3354 [label="org.joda.time.LocalDateTime.plusHours(int)"]
3469 [label="org.joda.time.LocalTime.plusHours(int)"]
3993 [label="org.joda.time.TimeOfDay.plusHours(int)"]
3882 [label="org.joda.time.Period.plusMillis(int)"]
2851 [label="org.joda.time.DateTime.plusMillis(int)"]
3357 [label="org.joda.time.LocalDateTime.plusMillis(int)"]
3472 [label="org.joda.time.LocalTime.plusMillis(int)"]
3996 [label="org.joda.time.TimeOfDay.plusMillis(int)"]
3880 [label="org.joda.time.Period.plusMinutes(int)"]
2849 [label="org.joda.time.DateTime.plusMinutes(int)"]
3355 [label="org.joda.time.LocalDateTime.plusMinutes(int)"]
3470 [label="org.joda.time.LocalTime.plusMinutes(int)"]
3994 [label="org.joda.time.TimeOfDay.plusMinutes(int)"]
3876 [label="org.joda.time.Period.plusMonths(int)"]
2845 [label="org.joda.time.DateTime.plusMonths(int)"]
2589 [label="org.joda.time.LocalDate.plusMonths(int)"]
3351 [label="org.joda.time.LocalDateTime.plusMonths(int)"]
2739 [label="org.joda.time.DateMidnight.plusMonths(int)"]
4136 [label="org.joda.time.YearMonthDay.plusMonths(int)"]
3560 [label="org.joda.time.MonthDay.plusMonths(int)"]
4086 [label="org.joda.time.YearMonth.plusMonths(int)"]
3881 [label="org.joda.time.Period.plusSeconds(int)"]
2850 [label="org.joda.time.DateTime.plusSeconds(int)"]
3356 [label="org.joda.time.LocalDateTime.plusSeconds(int)"]
3471 [label="org.joda.time.LocalTime.plusSeconds(int)"]
3995 [label="org.joda.time.TimeOfDay.plusSeconds(int)"]
3877 [label="org.joda.time.Period.plusWeeks(int)"]
2846 [label="org.joda.time.DateTime.plusWeeks(int)"]
3232 [label="org.joda.time.LocalDate.plusWeeks(int)"]
3352 [label="org.joda.time.LocalDateTime.plusWeeks(int)"]
2740 [label="org.joda.time.DateMidnight.plusWeeks(int)"]
3875 [label="org.joda.time.Period.plusYears(int)"]
2844 [label="org.joda.time.DateTime.plusYears(int)"]
3231 [label="org.joda.time.LocalDate.plusYears(int)"]
3350 [label="org.joda.time.LocalDateTime.plusYears(int)"]
2738 [label="org.joda.time.DateMidnight.plusYears(int)"]
4135 [label="org.joda.time.YearMonthDay.plusYears(int)"]
4085 [label="org.joda.time.YearMonth.plusYears(int)"]
2095 [label="org.joda.time.IllegalFieldValueException.prependMessage(java.lang.String)"]
2446 [label="org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous(long,int,int)"]
2456 [label="org.joda.time.tz.DateTimeZoneBuilder$Recurrence.previous(long,int,int)"]
2431 [label="org.joda.time.DateTimeZone.previousTransition(long)"]
2430 [label="org.joda.time.tz.CachedDateTimeZone.previousTransition(long)"]
2501 [label="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.previousTransition(long)"]
2525 [label="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.previousTransition(long)"]
1895 [label="org.joda.time.format.DateTimeFormatter.print(long)"]
1962 [label="org.joda.time.format.DateTimeFormatterBuilder$TextField.print(long,org.joda.time.Chronology,java.util.Locale)"]
1995 [label="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName.print(long,org.joda.time.DateTimeZone,java.util.Locale)"]
57 [label="org.joda.time.format.DateTimeFormatter.print(org.joda.time.ReadableInstant)"]
192 [label="org.joda.time.format.DateTimeFormatter.print(org.joda.time.ReadablePartial)"]
1964 [label="org.joda.time.format.DateTimeFormatterBuilder$TextField.print(org.joda.time.ReadablePartial,java.util.Locale)"]
217 [label="org.joda.time.format.PeriodFormatter.print(org.joda.time.ReadablePeriod)"]
2973 [label="org.joda.time.DateTimeZone.printOffset(int)"]
2674 [label="java.lang.Throwable.printStackTrace()"]
2331 [label="org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix.printTo(java.io.Writer,int)"]
2301 [label="org.joda.time.format.PeriodFormatterBuilder$SimpleAffix.printTo(java.io.Writer,int)"]
2307 [label="org.joda.time.format.PeriodFormatterBuilder$PluralAffix.printTo(java.io.Writer,int)"]
2321 [label="org.joda.time.format.PeriodFormatterBuilder$RegExAffix.printTo(java.io.Writer,int)"]
2330 [label="org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.printTo(java.io.Writer,int)"]
1888 [label="org.joda.time.format.DateTimeFormatter.printTo(java.io.Writer,long)"]
2238 [label="org.joda.time.format.InternalPrinterDateTimePrinter.printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)"]
2108 [label="org.joda.time.format.DateTimePrinter.printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)"]
1884 [label="org.joda.time.format.DateTimeFormatter.printTo(java.io.Writer,org.joda.time.ReadableInstant)"]
1892 [label="org.joda.time.format.DateTimeFormatter.printTo(java.io.Writer,org.joda.time.ReadablePartial)"]
2241 [label="org.joda.time.format.InternalPrinterDateTimePrinter.printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale)"]
2111 [label="org.joda.time.format.DateTimePrinter.printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale)"]
2287 [label="org.joda.time.format.PeriodFormatter.printTo(java.io.Writer,org.joda.time.ReadablePeriod)"]
2252 [label="org.joda.time.format.PeriodFormat$DynamicWordBased.printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale)"]
2253 [label="org.joda.time.format.PeriodPrinter.printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale)"]
2346 [label="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale)"]
2365 [label="org.joda.time.format.PeriodFormatterBuilder$Literal.printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale)"]
2375 [label="org.joda.time.format.PeriodFormatterBuilder$Separator.printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale)"]
2383 [label="org.joda.time.format.PeriodFormatterBuilder$Composite.printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale)"]
1886 [label="org.joda.time.format.DateTimeFormatter.printTo(java.lang.Appendable,long)"]
1885 [label="org.joda.time.format.DateTimeFormatter.printTo(java.lang.Appendable,long,org.joda.time.Chronology)"]
1978 [label="org.joda.time.format.DateTimeFormatterBuilder$Fraction.printTo(java.lang.Appendable,long,org.joda.time.Chronology)"]
1780 [label="org.joda.time.format.DateTimeFormat$StyleFormatter.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)"]
1783 [label="org.joda.time.format.InternalPrinter.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)"]
2106 [label="org.joda.time.format.DateTimePrinterInternalPrinter.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)"]
2239 [label="org.joda.time.format.InternalPrinterDateTimePrinter.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)"]
1919 [label="org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)"]
1929 [label="org.joda.time.format.DateTimeFormatterBuilder$StringLiteral.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)"]
1942 [label="org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)"]
1946 [label="org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)"]
1955 [label="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)"]
1961 [label="org.joda.time.format.DateTimeFormatterBuilder$TextField.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)"]
1977 [label="org.joda.time.format.DateTimeFormatterBuilder$Fraction.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)"]
1987 [label="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)"]
1994 [label="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)"]
2011 [label="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)"]
2021 [label="org.joda.time.format.DateTimeFormatterBuilder$Composite.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)"]
1882 [label="org.joda.time.format.DateTimeFormatter.printTo(java.lang.Appendable,org.joda.time.ReadableInstant)"]
1890 [label="org.joda.time.format.DateTimeFormatter.printTo(java.lang.Appendable,org.joda.time.ReadablePartial)"]
1784 [label="org.joda.time.format.DateTimeFormat$StyleFormatter.printTo(java.lang.Appendable,org.joda.time.ReadablePartial,java.util.Locale)"]
1785 [label="org.joda.time.format.InternalPrinter.printTo(java.lang.Appendable,org.joda.time.ReadablePartial,java.util.Locale)"]
2109 [label="org.joda.time.format.DateTimePrinterInternalPrinter.printTo(java.lang.Appendable,org.joda.time.ReadablePartial,java.util.Locale)"]
2242 [label="org.joda.time.format.InternalPrinterDateTimePrinter.printTo(java.lang.Appendable,org.joda.time.ReadablePartial,java.util.Locale)"]
1921 [label="org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral.printTo(java.lang.Appendable,org.joda.time.ReadablePartial,java.util.Locale)"]
1931 [label="org.joda.time.format.DateTimeFormatterBuilder$StringLiteral.printTo(java.lang.Appendable,org.joda.time.ReadablePartial,java.util.Locale)"]
1944 [label="org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber.printTo(java.lang.Appendable,org.joda.time.ReadablePartial,java.util.Locale)"]
1949 [label="org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber.printTo(java.lang.Appendable,org.joda.time.ReadablePartial,java.util.Locale)"]
1957 [label="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.printTo(java.lang.Appendable,org.joda.time.ReadablePartial,java.util.Locale)"]
1963 [label="org.joda.time.format.DateTimeFormatterBuilder$TextField.printTo(java.lang.Appendable,org.joda.time.ReadablePartial,java.util.Locale)"]
1979 [label="org.joda.time.format.DateTimeFormatterBuilder$Fraction.printTo(java.lang.Appendable,org.joda.time.ReadablePartial,java.util.Locale)"]
2023 [label="org.joda.time.format.DateTimeFormatterBuilder$Composite.printTo(java.lang.Appendable,org.joda.time.ReadablePartial,java.util.Locale)"]
2329 [label="org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix.printTo(java.lang.StringBuffer,int)"]
2300 [label="org.joda.time.format.PeriodFormatterBuilder$SimpleAffix.printTo(java.lang.StringBuffer,int)"]
2306 [label="org.joda.time.format.PeriodFormatterBuilder$PluralAffix.printTo(java.lang.StringBuffer,int)"]
2320 [label="org.joda.time.format.PeriodFormatterBuilder$RegExAffix.printTo(java.lang.StringBuffer,int)"]
2328 [label="org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.printTo(java.lang.StringBuffer,int)"]
160 [label="org.joda.time.format.DateTimeFormatter.printTo(java.lang.StringBuffer,long)"]
2237 [label="org.joda.time.format.InternalPrinterDateTimePrinter.printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)"]
2107 [label="org.joda.time.format.DateTimePrinter.printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)"]
1881 [label="org.joda.time.format.DateTimeFormatter.printTo(java.lang.StringBuffer,org.joda.time.ReadableInstant)"]
1889 [label="org.joda.time.format.DateTimeFormatter.printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial)"]
2240 [label="org.joda.time.format.InternalPrinterDateTimePrinter.printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale)"]
2110 [label="org.joda.time.format.DateTimePrinter.printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale)"]
2284 [label="org.joda.time.format.PeriodFormatter.printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod)"]
2250 [label="org.joda.time.format.PeriodFormat$DynamicWordBased.printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale)"]
2251 [label="org.joda.time.format.PeriodPrinter.printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale)"]
2344 [label="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale)"]
2364 [label="org.joda.time.format.PeriodFormatterBuilder$Literal.printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale)"]
2374 [label="org.joda.time.format.PeriodFormatterBuilder$Separator.printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale)"]
2382 [label="org.joda.time.format.PeriodFormatterBuilder$Composite.printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale)"]
1887 [label="org.joda.time.format.DateTimeFormatter.printTo(java.lang.StringBuilder,long)"]
1883 [label="org.joda.time.format.DateTimeFormatter.printTo(java.lang.StringBuilder,org.joda.time.ReadableInstant)"]
1891 [label="org.joda.time.format.DateTimeFormatter.printTo(java.lang.StringBuilder,org.joda.time.ReadablePartial)"]
2612 [label="org.joda.time.tz.ZoneInfoCompiler.printUsage()"]
2221 [label="org.joda.time.format.PeriodFormatterBuilder.printZeroAlways()"]
2518 [label="java.io.PrintStream.println(java.lang.String)"]
2863 [label="org.joda.time.DateTime.property(org.joda.time.DateTimeFieldType)"]
1970 [label="org.joda.time.MutableDateTime.property(org.joda.time.DateTimeFieldType)"]
3238 [label="org.joda.time.LocalDate.property(org.joda.time.DateTimeFieldType)"]
3368 [label="org.joda.time.LocalDateTime.property(org.joda.time.DateTimeFieldType)"]
2750 [label="org.joda.time.DateMidnight.property(org.joda.time.DateTimeFieldType)"]
4142 [label="org.joda.time.YearMonthDay.property(org.joda.time.DateTimeFieldType)"]
3478 [label="org.joda.time.LocalTime.property(org.joda.time.DateTimeFieldType)"]
4002 [label="org.joda.time.TimeOfDay.property(org.joda.time.DateTimeFieldType)"]
3570 [label="org.joda.time.MonthDay.property(org.joda.time.DateTimeFieldType)"]
3821 [label="org.joda.time.Partial.property(org.joda.time.DateTimeFieldType)"]
4097 [label="org.joda.time.YearMonth.property(org.joda.time.DateTimeFieldType)"]
1968 [label="java.util.Map.put(K,V)"]
937 [label="java.util.TreeMap.put(K,V)"]
1138 [label="java.util.HashMap.put(K,V)"]
1002 [label="java.util.concurrent.ConcurrentHashMap.put(K,V)"]
2950 [label="org.joda.time.DateTimeUtils.put(java.util.Map,java.lang.String,java.lang.String)"]
2646 [label="java.util.Map.putAll(java.util.Map)"]
746 [label="java.util.concurrent.ConcurrentHashMap.putIfAbsent(K,V)"]
935 [label="java.util.concurrent.ConcurrentMap.putIfAbsent(K,V)"]
2438 [label="java.io.DataInput.readBoolean()"]
2437 [label="java.io.DataInput.readByte()"]
2435 [label="org.joda.time.tz.DateTimeZoneBuilder$OfYear.readFrom(java.io.DataInput)"]
2452 [label="org.joda.time.tz.DateTimeZoneBuilder$Recurrence.readFrom(java.io.DataInput)"]
2535 [label="org.joda.time.tz.DateTimeZoneBuilder.readFrom(java.io.DataInput,java.lang.String)"]
2496 [label="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.readFrom(java.io.DataInput,java.lang.String)"]
2504 [label="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.readFrom(java.io.DataInput,java.lang.String)"]
2534 [label="org.joda.time.tz.DateTimeZoneBuilder.readFrom(java.io.InputStream,java.lang.String)"]
2506 [label="java.io.DataInput.readInt()"]
2651 [label="java.io.BufferedReader.readLine()"]
2539 [label="java.io.DataInput.readLong()"]
2439 [label="org.joda.time.tz.DateTimeZoneBuilder.readMillis(java.io.DataInput)"]
998 [label="java.io.ObjectInputStream.readObject()"]
3600 [label="org.joda.time.MutableDateTime$Property.readObject(java.io.ObjectInputStream)"]
2688 [label="org.joda.time.DateMidnight$Property.readObject(java.io.ObjectInputStream)"]
2779 [label="org.joda.time.DateTime$Property.readObject(java.io.ObjectInputStream)"]
2957 [label="org.joda.time.DateTimeZone$Stub.readObject(java.io.ObjectInputStream)"]
3159 [label="org.joda.time.LocalDate$Property.readObject(java.io.ObjectInputStream)"]
3274 [label="org.joda.time.LocalDateTime$Property.readObject(java.io.ObjectInputStream)"]
3415 [label="org.joda.time.LocalTime$Property.readObject(java.io.ObjectInputStream)"]
466 [label="org.joda.time.chrono.AssembledChronology.readObject(java.io.ObjectInputStream)"]
997 [label="org.joda.time.chrono.ISOChronology$Stub.readObject(java.io.ObjectInputStream)"]
3200 [label="org.joda.time.LocalDate.readResolve()"]
3316 [label="org.joda.time.LocalDateTime.readResolve()"]
3456 [label="org.joda.time.LocalTime.readResolve()"]
2909 [label="org.joda.time.DateTimeComparator.readResolve()"]
2959 [label="org.joda.time.DateTimeZone$Stub.readResolve()"]
3020 [label="org.joda.time.Days.readResolve()"]
4031 [label="org.joda.time.Weeks.readResolve()"]
3088 [label="org.joda.time.Hours.readResolve()"]
3505 [label="org.joda.time.Minutes.readResolve()"]
3936 [label="org.joda.time.Seconds.readResolve()"]
3552 [label="org.joda.time.MonthDay.readResolve()"]
3584 [label="org.joda.time.Months.readResolve()"]
4077 [label="org.joda.time.YearMonth.readResolve()"]
4171 [label="org.joda.time.Years.readResolve()"]
734 [label="org.joda.time.chrono.BasicYearDateTimeField.readResolve()"]
984 [label="org.joda.time.chrono.GJYearOfEraDateTimeField.readResolve()"]
931 [label="org.joda.time.chrono.GJEraDateTimeField.readResolve()"]
916 [label="org.joda.time.chrono.GJDayOfWeekDateTimeField.readResolve()"]
614 [label="org.joda.time.chrono.BasicDayOfMonthDateTimeField.readResolve()"]
626 [label="org.joda.time.chrono.BasicDayOfYearDateTimeField.readResolve()"]
716 [label="org.joda.time.chrono.BasicWeekyearDateTimeField.readResolve()"]
696 [label="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.readResolve()"]
673 [label="org.joda.time.chrono.BasicMonthOfYearDateTimeField.readResolve()"]
747 [label="org.joda.time.chrono.BuddhistChronology.readResolve()"]
873 [label="org.joda.time.chrono.GJChronology.readResolve()"]
764 [label="org.joda.time.chrono.CopticChronology.readResolve()"]
775 [label="org.joda.time.chrono.EthiopicChronology.readResolve()"]
988 [label="org.joda.time.chrono.GregorianChronology.readResolve()"]
1056 [label="org.joda.time.chrono.JulianChronology.readResolve()"]
994 [label="org.joda.time.chrono.ISOChronology$Stub.readResolve()"]
1032 [label="org.joda.time.chrono.IslamicChronology.readResolve()"]
1756 [label="org.joda.time.field.UnsupportedDurationField.readResolve()"]
1737 [label="org.joda.time.field.UnsupportedDateTimeField.readResolve()"]
1687 [label="org.joda.time.field.SkipUndoDateTimeField.readResolve()"]
1683 [label="org.joda.time.field.SkipDateTimeField.readResolve()"]
2958 [label="java.io.ObjectInputStream.readUTF()"]
2453 [label="java.io.DataInput.readUTF()"]
2685 [label="java.io.DataInputStream.readUTF()"]
2436 [label="java.io.DataInput.readUnsignedByte()"]
2505 [label="java.io.DataInput.readUnsignedShort()"]
2684 [label="java.io.DataInputStream.readUnsignedShort()"]
2682 [label="org.joda.time.tz.ZoneInfoProvider.readZoneInfoMap(java.io.DataInputStream,java.util.Map)"]
944 [label="org.joda.time.chrono.GJLocaleSymbols.realignDaysOfWeek(java.lang.String[])"]
947 [label="org.joda.time.chrono.GJLocaleSymbols.realignMonths(java.lang.String[])"]
2297 [label="java.lang.String.regionMatches(boolean,int,java.lang.String,int,int)"]
1403 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.remainder()"]
883 [label="org.joda.time.DateTimeField.remainder(long)"]
733 [label="org.joda.time.chrono.BasicYearDateTimeField.remainder(long)"]
983 [label="org.joda.time.chrono.GJYearOfEraDateTimeField.remainder(long)"]
705 [label="org.joda.time.chrono.BasicWeekyearDateTimeField.remainder(long)"]
690 [label="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.remainder(long)"]
672 [label="org.joda.time.chrono.BasicMonthOfYearDateTimeField.remainder(long)"]
1025 [label="org.joda.time.chrono.ISOYearOfEraDateTimeField.remainder(long)"]
1118 [label="org.joda.time.chrono.LimitChronology$LimitDateTimeField.remainder(long)"]
1198 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.remainder(long)"]
1736 [label="org.joda.time.field.UnsupportedDateTimeField.remainder(long)"]
1777 [label="org.joda.time.field.ZeroIsMaxDateTimeField.remainder(long)"]
1638 [label="org.joda.time.field.OffsetDateTimeField.remainder(long)"]
1582 [label="org.joda.time.field.DividedDateTimeField.remainder(long)"]
1664 [label="org.joda.time.field.RemainderDateTimeField.remainder(long)"]
691 [label="org.joda.time.field.PreciseDurationDateTimeField.remainder(long)"]
1456 [label="org.joda.time.field.BaseDateTimeField.remainder(long)"]
1539 [label="org.joda.time.field.DelegatedDateTimeField.remainder(long)"]
2491 [label="java.util.Iterator.remove()"]
2553 [label="java.util.ArrayList.remove(int)"]
1279 [label="org.joda.time.convert.ConverterSet.remove(int,org.joda.time.convert.Converter[])"]
2681 [label="java.util.Map.remove(java.lang.Object)"]
3916 [label="java.util.List.remove(java.lang.Object)"]
2203 [label="java.util.Collection.remove(java.lang.Object)"]
2200 [label="java.util.Set.remove(java.lang.Object)"]
1256 [label="org.joda.time.convert.ConverterSet.remove(org.joda.time.convert.Converter,org.joda.time.convert.Converter[])"]
1267 [label="org.joda.time.convert.ConverterManager.removeDurationConverter(org.joda.time.convert.DurationConverter)"]
1255 [label="org.joda.time.convert.ConverterManager.removeInstantConverter(org.joda.time.convert.InstantConverter)"]
1275 [label="org.joda.time.convert.ConverterManager.removeIntervalConverter(org.joda.time.convert.IntervalConverter)"]
1263 [label="org.joda.time.convert.ConverterManager.removePartialConverter(org.joda.time.convert.PartialConverter)"]
1271 [label="org.joda.time.convert.ConverterManager.removePeriodConverter(org.joda.time.convert.PeriodConverter)"]
2461 [label="org.joda.time.tz.DateTimeZoneBuilder$Recurrence.rename(java.lang.String)"]
2462 [label="org.joda.time.tz.DateTimeZoneBuilder$Recurrence.renameAppend(java.lang.String)"]
1898 [label="org.joda.time.format.DateTimeFormatter.requireParser()"]
1893 [label="org.joda.time.format.DateTimeFormatter.requirePrinter()"]
2086 [label="org.joda.time.format.DateTimeParserBucket.reset()"]
2029 [label="org.joda.time.format.DateTimeParserBucket.restoreState(java.lang.Object)"]
2091 [label="org.joda.time.format.DateTimeParserBucket$SavedState.restoreState(org.joda.time.format.DateTimeParserBucket)"]
2202 [label="java.util.Collection.retainAll(java.util.Collection)"]
2271 [label="org.joda.time.format.PeriodFormat.retrieveVariants(java.util.ResourceBundle)"]
2370 [label="java.util.Collections.reverse(java.util.List)"]
3611 [label="org.joda.time.MutableDateTime$Property.roundCeiling()"]
829 [label="org.joda.time.DateTimeField.roundCeiling(long)"]
732 [label="org.joda.time.chrono.BasicYearDateTimeField.roundCeiling(long)"]
982 [label="org.joda.time.chrono.GJYearOfEraDateTimeField.roundCeiling(long)"]
924 [label="org.joda.time.chrono.GJEraDateTimeField.roundCeiling(long)"]
688 [label="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.roundCeiling(long)"]
828 [label="org.joda.time.chrono.GJChronology$CutoverField.roundCeiling(long)"]
1024 [label="org.joda.time.chrono.ISOYearOfEraDateTimeField.roundCeiling(long)"]
1111 [label="org.joda.time.chrono.LimitChronology$LimitDateTimeField.roundCeiling(long)"]
1197 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.roundCeiling(long)"]
1732 [label="org.joda.time.field.UnsupportedDateTimeField.roundCeiling(long)"]
1773 [label="org.joda.time.field.ZeroIsMaxDateTimeField.roundCeiling(long)"]
1634 [label="org.joda.time.field.OffsetDateTimeField.roundCeiling(long)"]
1660 [label="org.joda.time.field.RemainderDateTimeField.roundCeiling(long)"]
689 [label="org.joda.time.field.PreciseDurationDateTimeField.roundCeiling(long)"]
1451 [label="org.joda.time.field.BaseDateTimeField.roundCeiling(long)"]
1535 [label="org.joda.time.field.DelegatedDateTimeField.roundCeiling(long)"]
2701 [label="org.joda.time.DateMidnight$Property.roundCeilingCopy()"]
2793 [label="org.joda.time.DateTime$Property.roundCeilingCopy()"]
3172 [label="org.joda.time.LocalDate$Property.roundCeilingCopy()"]
3289 [label="org.joda.time.LocalDateTime$Property.roundCeilingCopy()"]
3429 [label="org.joda.time.LocalTime$Property.roundCeilingCopy()"]
3610 [label="org.joda.time.MutableDateTime$Property.roundFloor()"]
715 [label="org.joda.time.DateTimeField.roundFloor(long)"]
731 [label="org.joda.time.chrono.BasicYearDateTimeField.roundFloor(long)"]
981 [label="org.joda.time.chrono.GJYearOfEraDateTimeField.roundFloor(long)"]
923 [label="org.joda.time.chrono.GJEraDateTimeField.roundFloor(long)"]
714 [label="org.joda.time.chrono.BasicWeekyearDateTimeField.roundFloor(long)"]
686 [label="org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.roundFloor(long)"]
671 [label="org.joda.time.chrono.BasicMonthOfYearDateTimeField.roundFloor(long)"]
827 [label="org.joda.time.chrono.GJChronology$CutoverField.roundFloor(long)"]
1023 [label="org.joda.time.chrono.ISOYearOfEraDateTimeField.roundFloor(long)"]
1110 [label="org.joda.time.chrono.LimitChronology$LimitDateTimeField.roundFloor(long)"]
1196 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.roundFloor(long)"]
1731 [label="org.joda.time.field.UnsupportedDateTimeField.roundFloor(long)"]
1772 [label="org.joda.time.field.ZeroIsMaxDateTimeField.roundFloor(long)"]
1633 [label="org.joda.time.field.OffsetDateTimeField.roundFloor(long)"]
1581 [label="org.joda.time.field.DividedDateTimeField.roundFloor(long)"]
1659 [label="org.joda.time.field.RemainderDateTimeField.roundFloor(long)"]
687 [label="org.joda.time.field.PreciseDurationDateTimeField.roundFloor(long)"]
1452 [label="org.joda.time.field.BaseDateTimeField.roundFloor(long)"]
1534 [label="org.joda.time.field.DelegatedDateTimeField.roundFloor(long)"]
1475 [label="org.joda.time.field.DecoratedDateTimeField.roundFloor(long)"]
2700 [label="org.joda.time.DateMidnight$Property.roundFloorCopy()"]
2792 [label="org.joda.time.DateTime$Property.roundFloorCopy()"]
3171 [label="org.joda.time.LocalDate$Property.roundFloorCopy()"]
3288 [label="org.joda.time.LocalDateTime$Property.roundFloorCopy()"]
3428 [label="org.joda.time.LocalTime$Property.roundFloorCopy()"]
3613 [label="org.joda.time.MutableDateTime$Property.roundHalfCeiling()"]
1115 [label="org.joda.time.DateTimeField.roundHalfCeiling(long)"]
926 [label="org.joda.time.chrono.GJEraDateTimeField.roundHalfCeiling(long)"]
1114 [label="org.joda.time.chrono.LimitChronology$LimitDateTimeField.roundHalfCeiling(long)"]
1734 [label="org.joda.time.field.UnsupportedDateTimeField.roundHalfCeiling(long)"]
1775 [label="org.joda.time.field.ZeroIsMaxDateTimeField.roundHalfCeiling(long)"]
1636 [label="org.joda.time.field.OffsetDateTimeField.roundHalfCeiling(long)"]
1662 [label="org.joda.time.field.RemainderDateTimeField.roundHalfCeiling(long)"]
1454 [label="org.joda.time.field.BaseDateTimeField.roundHalfCeiling(long)"]
1537 [label="org.joda.time.field.DelegatedDateTimeField.roundHalfCeiling(long)"]
2703 [label="org.joda.time.DateMidnight$Property.roundHalfCeilingCopy()"]
2795 [label="org.joda.time.DateTime$Property.roundHalfCeilingCopy()"]
3174 [label="org.joda.time.LocalDate$Property.roundHalfCeilingCopy()"]
3291 [label="org.joda.time.LocalDateTime$Property.roundHalfCeilingCopy()"]
3431 [label="org.joda.time.LocalTime$Property.roundHalfCeilingCopy()"]
3614 [label="org.joda.time.MutableDateTime$Property.roundHalfEven()"]
1117 [label="org.joda.time.DateTimeField.roundHalfEven(long)"]
927 [label="org.joda.time.chrono.GJEraDateTimeField.roundHalfEven(long)"]
1116 [label="org.joda.time.chrono.LimitChronology$LimitDateTimeField.roundHalfEven(long)"]
1735 [label="org.joda.time.field.UnsupportedDateTimeField.roundHalfEven(long)"]
1776 [label="org.joda.time.field.ZeroIsMaxDateTimeField.roundHalfEven(long)"]
1637 [label="org.joda.time.field.OffsetDateTimeField.roundHalfEven(long)"]
1663 [label="org.joda.time.field.RemainderDateTimeField.roundHalfEven(long)"]
1455 [label="org.joda.time.field.BaseDateTimeField.roundHalfEven(long)"]
1538 [label="org.joda.time.field.DelegatedDateTimeField.roundHalfEven(long)"]
2704 [label="org.joda.time.DateMidnight$Property.roundHalfEvenCopy()"]
2796 [label="org.joda.time.DateTime$Property.roundHalfEvenCopy()"]
3175 [label="org.joda.time.LocalDate$Property.roundHalfEvenCopy()"]
3292 [label="org.joda.time.LocalDateTime$Property.roundHalfEvenCopy()"]
3432 [label="org.joda.time.LocalTime$Property.roundHalfEvenCopy()"]
3612 [label="org.joda.time.MutableDateTime$Property.roundHalfFloor()"]
1113 [label="org.joda.time.DateTimeField.roundHalfFloor(long)"]
925 [label="org.joda.time.chrono.GJEraDateTimeField.roundHalfFloor(long)"]
1112 [label="org.joda.time.chrono.LimitChronology$LimitDateTimeField.roundHalfFloor(long)"]
1733 [label="org.joda.time.field.UnsupportedDateTimeField.roundHalfFloor(long)"]
1774 [label="org.joda.time.field.ZeroIsMaxDateTimeField.roundHalfFloor(long)"]
1635 [label="org.joda.time.field.OffsetDateTimeField.roundHalfFloor(long)"]
1661 [label="org.joda.time.field.RemainderDateTimeField.roundHalfFloor(long)"]
1453 [label="org.joda.time.field.BaseDateTimeField.roundHalfFloor(long)"]
1536 [label="org.joda.time.field.DelegatedDateTimeField.roundHalfFloor(long)"]
2702 [label="org.joda.time.DateMidnight$Property.roundHalfFloorCopy()"]
2794 [label="org.joda.time.DateTime$Property.roundHalfFloorCopy()"]
3173 [label="org.joda.time.LocalDate$Property.roundHalfFloorCopy()"]
3290 [label="org.joda.time.LocalDateTime$Property.roundHalfFloorCopy()"]
3430 [label="org.joda.time.LocalTime$Property.roundHalfFloorCopy()"]
2676 [label="org.joda.time.tz.ZoneInfoProvider$1.run()"]
362 [label="org.joda.time.field.FieldUtils.safeAdd(int,int)"]
272 [label="org.joda.time.field.FieldUtils.safeAdd(long,long)"]
1586 [label="org.joda.time.field.FieldUtils.safeDivide(long,long)"]
1587 [label="org.joda.time.field.FieldUtils.safeDivide(long,long,java.math.RoundingMode)"]
1585 [label="org.joda.time.field.FieldUtils.safeMultiply(int,int)"]
376 [label="org.joda.time.field.FieldUtils.safeMultiply(long,int)"]
1465 [label="org.joda.time.field.FieldUtils.safeMultiply(long,long)"]
1591 [label="org.joda.time.field.FieldUtils.safeMultiplyToInt(long,long)"]
1584 [label="org.joda.time.field.FieldUtils.safeNegate(int)"]
149 [label="org.joda.time.field.FieldUtils.safeSubtract(long,long)"]
377 [label="org.joda.time.field.FieldUtils.safeToInt(long)"]
1984 [label="org.joda.time.format.DateTimeParserBucket.saveField(org.joda.time.DateTimeField,int)"]
1940 [label="org.joda.time.format.DateTimeParserBucket.saveField(org.joda.time.DateTimeFieldType,int)"]
1975 [label="org.joda.time.format.DateTimeParserBucket.saveField(org.joda.time.DateTimeFieldType,java.lang.String,java.util.Locale)"]
2028 [label="org.joda.time.format.DateTimeParserBucket.saveState()"]
2335 [label="org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix.scan(java.lang.String,int)"]
2303 [label="org.joda.time.format.PeriodFormatterBuilder$SimpleAffix.scan(java.lang.String,int)"]
2309 [label="org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan(java.lang.String,int)"]
2323 [label="org.joda.time.format.PeriodFormatterBuilder$RegExAffix.scan(java.lang.String,int)"]
2334 [label="org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.scan(java.lang.String,int)"]
2138 [label="org.joda.time.format.ISODateTimeFormat$Constants.secondElement()"]
490 [label="org.joda.time.DateTimeFieldType.secondOfDay()"]
37 [label="org.joda.time.Chronology.secondOfDay()"]
2900 [label="org.joda.time.DateTime.secondOfDay()"]
3685 [label="org.joda.time.MutableDateTime.secondOfDay()"]
446 [label="org.joda.time.chrono.BaseChronology.secondOfDay()"]
891 [label="org.joda.time.chrono.AssembledChronology.secondOfDay()"]
489 [label="org.joda.time.DateTimeFieldType.secondOfMinute()"]
39 [label="org.joda.time.Chronology.secondOfMinute()"]
2901 [label="org.joda.time.DateTime.secondOfMinute()"]
3686 [label="org.joda.time.MutableDateTime.secondOfMinute()"]
3407 [label="org.joda.time.LocalDateTime.secondOfMinute()"]
3487 [label="org.joda.time.LocalTime.secondOfMinute()"]
4016 [label="org.joda.time.TimeOfDay.secondOfMinute()"]
445 [label="org.joda.time.chrono.BaseChronology.secondOfMinute()"]
890 [label="org.joda.time.chrono.AssembledChronology.secondOfMinute()"]
400 [label="org.joda.time.Chronology.seconds()"]
3913 [label="org.joda.time.PeriodType.seconds()"]
356 [label="org.joda.time.DurationFieldType.seconds()"]
432 [label="org.joda.time.chrono.BaseChronology.seconds()"]
3841 [label="org.joda.time.Period.seconds(int)"]
3030 [label="org.joda.time.Seconds.seconds(int)"]
3931 [label="org.joda.time.Seconds.secondsBetween(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)"]
3932 [label="org.joda.time.Seconds.secondsBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)"]
3933 [label="org.joda.time.Seconds.secondsIn(org.joda.time.ReadableInterval)"]
1248 [label="org.joda.time.convert.ConverterSet.select(java.lang.Class)"]
1896 [label="org.joda.time.format.DateTimeFormatter.selectChronology(org.joda.time.Chronology)"]
1278 [label="org.joda.time.convert.ConverterSet.selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class)"]
1859 [label="org.joda.time.format.DateTimeFormat.selectStyle(char)"]
2316 [label="org.joda.time.format.PeriodFormatterBuilder$RegExAffix.selectSuffixIndex(int)"]
2660 [label="java.lang.ThreadLocal.set(T)"]
2948 [label="java.util.concurrent.atomic.AtomicReference.set(V)"]
2615 [label="org.joda.time.tz.ZoneInfoLogger.set(boolean)"]
1971 [label="org.joda.time.MutableDateTime$Property.set(int)"]
2404 [label="java.util.List.set(int,E)"]
3338 [label="java.util.Calendar.set(int,int,int,int,int,int)"]
3609 [label="org.joda.time.MutableDateTime$Property.set(java.lang.String)"]
3608 [label="org.joda.time.MutableDateTime$Property.set(java.lang.String,java.util.Locale)"]
2079 [label="org.joda.time.format.DateTimeParserBucket$SavedField.set(long,boolean)"]
469 [label="org.joda.time.DateTimeField.set(long,int)"]
720 [label="org.joda.time.chrono.BasicYearDateTimeField.set(long,int)"]
978 [label="org.joda.time.chrono.GJYearOfEraDateTimeField.set(long,int)"]
920 [label="org.joda.time.chrono.GJEraDateTimeField.set(long,int)"]
701 [label="org.joda.time.chrono.BasicWeekyearDateTimeField.set(long,int)"]
662 [label="org.joda.time.chrono.BasicMonthOfYearDateTimeField.set(long,int)"]
676 [label="org.joda.time.chrono.BasicSingleEraDateTimeField.set(long,int)"]
805 [label="org.joda.time.chrono.GJChronology$CutoverField.set(long,int)"]
1021 [label="org.joda.time.chrono.ISOYearOfEraDateTimeField.set(long,int)"]
1106 [label="org.joda.time.chrono.LimitChronology$LimitDateTimeField.set(long,int)"]
1187 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.set(long,int)"]
1714 [label="org.joda.time.field.UnsupportedDateTimeField.set(long,int)"]
521 [label="org.joda.time.field.PreciseDateTimeField.set(long,int)"]
1765 [label="org.joda.time.field.ZeroIsMaxDateTimeField.set(long,int)"]
1629 [label="org.joda.time.field.OffsetDateTimeField.set(long,int)"]
1577 [label="org.joda.time.field.DividedDateTimeField.set(long,int)"]
1657 [label="org.joda.time.field.RemainderDateTimeField.set(long,int)"]
1644 [label="org.joda.time.field.PreciseDurationDateTimeField.set(long,int)"]
1437 [label="org.joda.time.field.BaseDateTimeField.set(long,int)"]
1686 [label="org.joda.time.field.SkipUndoDateTimeField.set(long,int)"]
1512 [label="org.joda.time.field.DelegatedDateTimeField.set(long,int)"]
1682 [label="org.joda.time.field.SkipDateTimeField.set(long,int)"]
980 [label="org.joda.time.field.DecoratedDateTimeField.set(long,int)"]
1609 [label="org.joda.time.field.LenientDateTimeField.set(long,int)"]
1689 [label="org.joda.time.field.StrictDateTimeField.set(long,int)"]
1515 [label="org.joda.time.DateTimeField.set(long,java.lang.String)"]
1717 [label="org.joda.time.field.UnsupportedDateTimeField.set(long,java.lang.String)"]
1445 [label="org.joda.time.field.BaseDateTimeField.set(long,java.lang.String)"]
1514 [label="org.joda.time.field.DelegatedDateTimeField.set(long,java.lang.String)"]
809 [label="org.joda.time.DateTimeField.set(long,java.lang.String,java.util.Locale)"]
519 [label="org.joda.time.chrono.BasicChronology$HalfdayField.set(long,java.lang.String,java.util.Locale)"]
921 [label="org.joda.time.chrono.GJEraDateTimeField.set(long,java.lang.String,java.util.Locale)"]
677 [label="org.joda.time.chrono.BasicSingleEraDateTimeField.set(long,java.lang.String,java.util.Locale)"]
808 [label="org.joda.time.chrono.GJChronology$CutoverField.set(long,java.lang.String,java.util.Locale)"]
1107 [label="org.joda.time.chrono.LimitChronology$LimitDateTimeField.set(long,java.lang.String,java.util.Locale)"]
1191 [label="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.set(long,java.lang.String,java.util.Locale)"]
1716 [label="org.joda.time.field.UnsupportedDateTimeField.set(long,java.lang.String,java.util.Locale)"]
1443 [label="org.joda.time.field.BaseDateTimeField.set(long,java.lang.String,java.util.Locale)"]
1513 [label="org.joda.time.field.DelegatedDateTimeField.set(long,java.lang.String,java.util.Locale)"]
3639 [label="org.joda.time.MutableDateTime.set(org.joda.time.DateTimeFieldType,int)"]
3740 [label="org.joda.time.MutablePeriod.set(org.joda.time.DurationFieldType,int)"]
305 [label="org.joda.time.DateTimeField.set(org.joda.time.ReadablePartial,int,int[],int)"]
1715 [label="org.joda.time.field.UnsupportedDateTimeField.set(org.joda.time.ReadablePartial,int,int[],int)"]
658 [label="org.joda.time.field.BaseDateTimeField.set(org.joda.time.ReadablePartial,int,int[],int)"]
1516 [label="org.joda.time.field.DelegatedDateTimeField.set(org.joda.time.ReadablePartial,int,int[],int)"]
1518 [label="org.joda.time.DateTimeField.set(org.joda.time.ReadablePartial,int,int[],java.lang.String,java.util.Locale)"]
1718 [label="org.joda.time.field.UnsupportedDateTimeField.set(org.joda.time.ReadablePartial,int,int[],java.lang.String,java.util.Locale)"]
1446 [label="org.joda.time.field.BaseDateTimeField.set(org.joda.time.ReadablePartial,int,int[],java.lang.String,java.util.Locale)"]
1517 [label="org.joda.time.field.DelegatedDateTimeField.set(org.joda.time.ReadablePartial,int,int[],java.lang.String,java.util.Locale)"]
181 [label="org.joda.time.Chronology.set(org.joda.time.ReadablePartial,long)"]
479 [label="org.joda.time.chrono.BaseChronology.set(org.joda.time.ReadablePartial,long)"]
2985 [label="java.lang.AbstractStringBuilder.setCharAt(int,char)"]
242 [label="org.joda.time.base.BaseDateTime.setChronology(org.joda.time.Chronology)"]
3638 [label="org.joda.time.MutableDateTime.setChronology(org.joda.time.Chronology)"]
3703 [label="org.joda.time.MutableInterval.setChronology(org.joda.time.Chronology)"]
1297 [label="org.joda.time.ReadWritableInterval.setChronology(org.joda.time.Chronology)"]
1905 [label="org.joda.time.ReadWritableInstant.setChronology(org.joda.time.Chronology)"]
2695 [label="org.joda.time.DateMidnight$Property.setCopy(int)"]
2786 [label="org.joda.time.DateTime$Property.setCopy(int)"]
3166 [label="org.joda.time.LocalDate$Property.setCopy(int)"]
3283 [label="org.joda.time.LocalDateTime$Property.setCopy(int)"]
3423 [label="org.joda.time.LocalTime$Property.setCopy(int)"]
3531 [label="org.joda.time.MonthDay$Property.setCopy(int)"]
3795 [label="org.joda.time.Partial$Property.setCopy(int)"]
3962 [label="org.joda.time.TimeOfDay$Property.setCopy(int)"]
4056 [label="org.joda.time.YearMonth$Property.setCopy(int)"]
4110 [label="org.joda.time.YearMonthDay$Property.setCopy(int)"]
2697 [label="org.joda.time.DateMidnight$Property.setCopy(java.lang.String)"]
2788 [label="org.joda.time.DateTime$Property.setCopy(java.lang.String)"]
3168 [label="org.joda.time.LocalDate$Property.setCopy(java.lang.String)"]
3285 [label="org.joda.time.LocalDateTime$Property.setCopy(java.lang.String)"]
3425 [label="org.joda.time.LocalTime$Property.setCopy(java.lang.String)"]
3533 [label="org.joda.time.MonthDay$Property.setCopy(java.lang.String)"]
3797 [label="org.joda.time.Partial$Property.setCopy(java.lang.String)"]
3964 [label="org.joda.time.TimeOfDay$Property.setCopy(java.lang.String)"]
4058 [label="org.joda.time.YearMonth$Property.setCopy(java.lang.String)"]
4112 [label="org.joda.time.YearMonthDay$Property.setCopy(java.lang.String)"]
2696 [label="org.joda.time.DateMidnight$Property.setCopy(java.lang.String,java.util.Locale)"]
2787 [label="org.joda.time.DateTime$Property.setCopy(java.lang.String,java.util.Locale)"]
3167 [label="org.joda.time.LocalDate$Property.setCopy(java.lang.String,java.util.Locale)"]
3284 [label="org.joda.time.LocalDateTime$Property.setCopy(java.lang.String,java.util.Locale)"]
3424 [label="org.joda.time.LocalTime$Property.setCopy(java.lang.String,java.util.Locale)"]
3532 [label="org.joda.time.MonthDay$Property.setCopy(java.lang.String,java.util.Locale)"]
3796 [label="org.joda.time.Partial$Property.setCopy(java.lang.String,java.util.Locale)"]
3963 [label="org.joda.time.TimeOfDay$Property.setCopy(java.lang.String,java.util.Locale)"]
4057 [label="org.joda.time.YearMonth$Property.setCopy(java.lang.String,java.util.Locale)"]
4111 [label="org.joda.time.YearMonthDay$Property.setCopy(java.lang.String,java.util.Locale)"]
2935 [label="org.joda.time.DateTimeUtils.setCurrentMillisFixed(long)"]
2936 [label="org.joda.time.DateTimeUtils.setCurrentMillisOffset(long)"]
2937 [label="org.joda.time.DateTimeUtils.setCurrentMillisProvider(org.joda.time.DateTimeUtils$MillisProvider)"]
2933 [label="org.joda.time.DateTimeUtils.setCurrentMillisSystem()"]
3666 [label="org.joda.time.MutableDateTime.setDate(int,int,int)"]
3664 [label="org.joda.time.MutableDateTime.setDate(long)"]
3665 [label="org.joda.time.MutableDateTime.setDate(org.joda.time.ReadableInstant)"]
3670 [label="org.joda.time.MutableDateTime.setDateTime(int,int,int,int,int,int,int)"]
3650 [label="org.joda.time.MutableDateTime.setDayOfMonth(int)"]
2442 [label="org.joda.time.tz.DateTimeZoneBuilder$OfYear.setDayOfMonth(org.joda.time.Chronology,long)"]
2445 [label="org.joda.time.tz.DateTimeZoneBuilder$OfYear.setDayOfMonthNext(org.joda.time.Chronology,long)"]
2447 [label="org.joda.time.tz.DateTimeZoneBuilder$OfYear.setDayOfMonthPrevious(org.joda.time.Chronology,long)"]
3651 [label="org.joda.time.MutableDateTime.setDayOfWeek(int)"]
2443 [label="org.joda.time.tz.DateTimeZoneBuilder$OfYear.setDayOfWeek(org.joda.time.Chronology,long)"]
3649 [label="org.joda.time.MutableDateTime.setDayOfYear(int)"]
3775 [label="org.joda.time.MutablePeriod.setDays(int)"]
2356 [label="org.joda.time.ReadWritablePeriod.setDays(int)"]
2969 [label="org.joda.time.DateTimeZone.setDefault(org.joda.time.DateTimeZone)"]
2945 [label="org.joda.time.DateTimeUtils.setDefaultTimeZoneNames(java.util.Map)"]
3708 [label="org.joda.time.MutableInterval.setDurationAfterStart(long)"]
3710 [label="org.joda.time.MutableInterval.setDurationAfterStart(org.joda.time.ReadableDuration)"]
3709 [label="org.joda.time.MutableInterval.setDurationBeforeEnd(long)"]
3711 [label="org.joda.time.MutableInterval.setDurationBeforeEnd(org.joda.time.ReadableDuration)"]
3707 [label="org.joda.time.MutableInterval.setEnd(org.joda.time.ReadableInstant)"]
3706 [label="org.joda.time.MutableInterval.setEndMillis(long)"]
2080 [label="org.joda.time.DateTimeField.setExtended(long,int)"]
723 [label="org.joda.time.chrono.BasicYearDateTimeField.setExtended(long,int)"]
358 [label="org.joda.time.base.BasePeriod.setField(org.joda.time.DurationFieldType,int)"]
359 [label="org.joda.time.base.BasePeriod.setFieldInto(int[],org.joda.time.DurationFieldType,int)"]
2350 [label="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.setFieldValue(org.joda.time.ReadWritablePeriod,int,int)"]
420 [label="org.joda.time.chrono.AssembledChronology.setFields()"]
2547 [label="org.joda.time.tz.DateTimeZoneBuilder.setFixedSavings(java.lang.String,int)"]
2548 [label="org.joda.time.tz.DateTimeZoneBuilder$RuleSet.setFixedSavings(java.lang.String,int)"]
3653 [label="org.joda.time.MutableDateTime.setHourOfDay(int)"]
3777 [label="org.joda.time.MutablePeriod.setHours(int)"]
2357 [label="org.joda.time.ReadWritablePeriod.setHours(int)"]
3865 [label="org.joda.time.PeriodType.setIndexedField(org.joda.time.ReadablePeriod,int,int[],int)"]
2441 [label="org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant(int,int,int)"]
3700 [label="org.joda.time.MutableInterval.setInterval(long,long)"]
1298 [label="org.joda.time.ReadWritableInterval.setInterval(long,long)"]
285 [label="org.joda.time.base.BaseInterval.setInterval(long,long,org.joda.time.Chronology)"]
3702 [label="org.joda.time.MutableInterval.setInterval(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)"]
3701 [label="org.joda.time.MutableInterval.setInterval(org.joda.time.ReadableInterval)"]
1316 [label="org.joda.time.ReadWritableInterval.setInterval(org.joda.time.ReadableInterval)"]
280 [label="org.joda.time.convert.IntervalConverter.setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology)"]
1296 [label="org.joda.time.convert.NullConverter.setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology)"]
1315 [label="org.joda.time.convert.ReadableIntervalConverter.setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology)"]
1343 [label="org.joda.time.convert.StringConverter.setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology)"]
337 [label="org.joda.time.convert.PeriodConverter.setInto(org.joda.time.ReadWritablePeriod,java.lang.Object,org.joda.time.Chronology)"]
1294 [label="org.joda.time.convert.NullConverter.setInto(org.joda.time.ReadWritablePeriod,java.lang.Object,org.joda.time.Chronology)"]
1302 [label="org.joda.time.convert.ReadableDurationConverter.setInto(org.joda.time.ReadWritablePeriod,java.lang.Object,org.joda.time.Chronology)"]
1313 [label="org.joda.time.convert.ReadableIntervalConverter.setInto(org.joda.time.ReadWritablePeriod,java.lang.Object,org.joda.time.Chronology)"]
1324 [label="org.joda.time.convert.ReadablePeriodConverter.setInto(org.joda.time.ReadWritablePeriod,java.lang.Object,org.joda.time.Chronology)"]
1338 [label="org.joda.time.convert.StringConverter.setInto(org.joda.time.ReadWritablePeriod,java.lang.Object,org.joda.time.Chronology)"]
79 [label="java.lang.StringBuffer.setLength(int)"]
3783 [label="org.joda.time.MutablePeriod.setMillis(int)"]
2360 [label="org.joda.time.ReadWritablePeriod.setMillis(int)"]
241 [label="org.joda.time.base.BaseDateTime.setMillis(long)"]
3605 [label="org.joda.time.MutableDateTime.setMillis(long)"]
1901 [label="org.joda.time.ReadWritableInstant.setMillis(long)"]
3632 [label="org.joda.time.MutableDateTime.setMillis(org.joda.time.ReadableInstant)"]
3661 [label="org.joda.time.MutableDateTime.setMillisOfDay(int)"]
3662 [label="org.joda.time.MutableDateTime.setMillisOfSecond(int)"]
3655 [label="org.joda.time.MutableDateTime.setMinuteOfDay(int)"]
3656 [label="org.joda.time.MutableDateTime.setMinuteOfHour(int)"]
3779 [label="org.joda.time.MutablePeriod.setMinutes(int)"]
2358 [label="org.joda.time.ReadWritablePeriod.setMinutes(int)"]
3645 [label="org.joda.time.MutableDateTime.setMonthOfYear(int)"]
3771 [label="org.joda.time.MutablePeriod.setMonths(int)"]
2354 [label="org.joda.time.ReadWritablePeriod.setMonths(int)"]
2995 [label="org.joda.time.DateTimeZone.setNameProvider(org.joda.time.tz.NameProvider)"]
1990 [label="org.joda.time.format.DateTimeParserBucket.setOffset(java.lang.Integer)"]
349 [label="org.joda.time.base.BasePeriod.setPeriod(int,int,int,int,int,int,int,int)"]
3742 [label="org.joda.time.MutablePeriod.setPeriod(int,int,int,int,int,int,int,int)"]
3744 [label="org.joda.time.MutablePeriod.setPeriod(long)"]
3747 [label="org.joda.time.MutablePeriod.setPeriod(long,long)"]
3745 [label="org.joda.time.MutablePeriod.setPeriod(long,long,org.joda.time.Chronology)"]
3750 [label="org.joda.time.MutablePeriod.setPeriod(long,org.joda.time.Chronology)"]
3748 [label="org.joda.time.MutablePeriod.setPeriod(org.joda.time.ReadableDuration)"]
3749 [label="org.joda.time.MutablePeriod.setPeriod(org.joda.time.ReadableDuration,org.joda.time.Chronology)"]
3746 [label="org.joda.time.MutablePeriod.setPeriod(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)"]
3743 [label="org.joda.time.MutablePeriod.setPeriod(org.joda.time.ReadableInterval)"]
346 [label="org.joda.time.base.BasePeriod.setPeriod(org.joda.time.ReadablePeriod)"]
3741 [label="org.joda.time.MutablePeriod.setPeriod(org.joda.time.ReadablePeriod)"]
1295 [label="org.joda.time.ReadWritablePeriod.setPeriod(org.joda.time.ReadablePeriod)"]
3712 [label="org.joda.time.MutableInterval.setPeriodAfterStart(org.joda.time.ReadablePeriod)"]
3713 [label="org.joda.time.MutableInterval.setPeriodBeforeEnd(org.joda.time.ReadablePeriod)"]
317 [label="org.joda.time.base.BasePeriod.setPeriodInternal(int,int,int,int,int,int,int,int)"]
348 [label="org.joda.time.base.BasePeriod.setPeriodInternal(org.joda.time.ReadablePeriod)"]
2988 [label="org.joda.time.DateTimeZone.setProvider(org.joda.time.tz.Provider)"]
3630 [label="org.joda.time.MutableDateTime.setRounding(org.joda.time.DateTimeField)"]
3631 [label="org.joda.time.MutableDateTime.setRounding(org.joda.time.DateTimeField,int)"]
3658 [label="org.joda.time.MutableDateTime.setSecondOfDay(int)"]
3659 [label="org.joda.time.MutableDateTime.setSecondOfMinute(int)"]
3781 [label="org.joda.time.MutablePeriod.setSeconds(int)"]
2359 [label="org.joda.time.ReadWritablePeriod.setSeconds(int)"]
2544 [label="org.joda.time.tz.DateTimeZoneBuilder.setStandardOffset(int)"]
2546 [label="org.joda.time.tz.DateTimeZoneBuilder$RuleSet.setStandardOffset(int)"]
3705 [label="org.joda.time.MutableInterval.setStart(org.joda.time.ReadableInstant)"]
3704 [label="org.joda.time.MutableInterval.setStartMillis(long)"]
3669 [label="org.joda.time.MutableDateTime.setTime(int,int,int,int)"]
50 [label="java.util.Calendar.setTime(java.util.Date)"]
3667 [label="org.joda.time.MutableDateTime.setTime(long)"]
3224 [label="java.util.Date.setTime(long)"]
3668 [label="org.joda.time.MutableDateTime.setTime(org.joda.time.ReadableInstant)"]
3340 [label="java.util.Calendar.setTimeInMillis(long)"]
2543 [label="org.joda.time.tz.DateTimeZoneBuilder$RuleSet.setUpperLimit(int,org.joda.time.tz.DateTimeZoneBuilder$OfYear)"]
304 [label="org.joda.time.base.BasePartial.setValue(int,int)"]
3739 [label="org.joda.time.base.BasePeriod.setValue(int,int)"]
3738 [label="org.joda.time.MutablePeriod.setValue(int,int)"]
1303 [label="org.joda.time.ReadWritablePeriod.setValue(int,int)"]
307 [label="org.joda.time.base.BasePartial.setValues(int[])"]
347 [label="org.joda.time.base.BasePeriod.setValues(int[])"]
3647 [label="org.joda.time.MutableDateTime.setWeekOfWeekyear(int)"]
3773 [label="org.joda.time.MutablePeriod.setWeeks(int)"]
2355 [label="org.joda.time.ReadWritablePeriod.setWeeks(int)"]
3643 [label="org.joda.time.MutableDateTime.setWeekyear(int)"]
3641 [label="org.joda.time.MutableDateTime.setYear(int)"]
706 [label="org.joda.time.chrono.BasicChronology.setYear(long,int)"]
629 [label="org.joda.time.chrono.BasicFixedMonthChronology.setYear(long,int)"]
646 [label="org.joda.time.chrono.BasicGJChronology.setYear(long,int)"]
1041 [label="org.joda.time.chrono.IslamicChronology.setYear(long,int)"]
3769 [label="org.joda.time.MutablePeriod.setYears(int)"]
2353 [label="org.joda.time.ReadWritablePeriod.setYears(int)"]
1917 [label="org.joda.time.MutableDateTime.setZone(org.joda.time.DateTimeZone)"]
1906 [label="org.joda.time.ReadWritableInstant.setZone(org.joda.time.DateTimeZone)"]
2002 [label="org.joda.time.format.DateTimeParserBucket.setZone(org.joda.time.DateTimeZone)"]
1128 [label="org.joda.time.MutableDateTime.setZoneRetainFields(org.joda.time.DateTimeZone)"]
1806 [label="org.joda.time.format.DateTimeFormat.shortDate()"]
1809 [label="org.joda.time.format.DateTimeFormat.shortDateTime()"]
1808 [label="org.joda.time.format.DateTimeFormat.shortTime()"]
2631 [label="java.lang.Short.shortValue()"]
652 [label="java.lang.Math.signum(float)"]
2576 [label="java.util.Collections.singleton(T)"]
194 [label="org.joda.time.base.AbstractPeriod.size()"]
167 [label="org.joda.time.ReadablePartial.size()"]
212 [label="org.joda.time.ReadablePeriod.size()"]
196 [label="org.joda.time.PeriodType.size()"]
3814 [label="org.joda.time.Partial.size()"]
2620 [label="java.util.Map.size()"]
2627 [label="java.util.TreeMap.size()"]
2073 [label="java.util.ArrayList.size()"]
2013 [label="java.util.List.size()"]
2193 [label="java.util.Collection.size()"]
2195 [label="java.util.Set.size()"]
1250 [label="org.joda.time.convert.ConverterSet.size()"]
1858 [label="java.util.concurrent.ConcurrentHashMap.size()"]
2315 [label="java.util.Arrays.sort(T[],java.util.Comparator)"]
2097 [label="java.util.Arrays.sort(java.lang.Object[],int,int)"]
2007 [label="java.util.Collections.sort(java.util.List)"]
2094 [label="org.joda.time.format.DateTimeParserBucket.sort(org.joda.time.format.DateTimeParserBucket$SavedField[],int)"]
2273 [label="java.lang.String.split(java.lang.String)"]
329 [label="org.joda.time.PeriodType.standard()"]
216 [label="org.joda.time.format.ISOPeriodFormat.standard()"]
3046 [label="org.joda.time.Duration.standardDays(long)"]
3017 [label="org.joda.time.Days.standardDaysIn(org.joda.time.ReadablePeriod)"]
3047 [label="org.joda.time.Duration.standardHours(long)"]
3085 [label="org.joda.time.Hours.standardHoursIn(org.joda.time.ReadablePeriod)"]
3048 [label="org.joda.time.Duration.standardMinutes(long)"]
3502 [label="org.joda.time.Minutes.standardMinutesIn(org.joda.time.ReadablePeriod)"]
372 [label="org.joda.time.base.BaseSingleFieldPeriod.standardPeriodIn(org.joda.time.ReadablePeriod,long)"]
3049 [label="org.joda.time.Duration.standardSeconds(long)"]
3934 [label="org.joda.time.Seconds.standardSecondsIn(org.joda.time.ReadablePeriod)"]
4029 [label="org.joda.time.Weeks.standardWeeksIn(org.joda.time.ReadablePeriod)"]
2568 [label="java.lang.String.startsWith(java.lang.String)"]
2409 [label="java.util.List.subList(int,int)"]
1938 [label="java.lang.CharSequence.subSequence(int,int)"]
546 [label="java.lang.String.substring(int)"]
1335 [label="java.lang.String.substring(int,int)"]
2746 [label="org.joda.time.DurationField.subtract(long,int)"]
3071 [label="org.joda.time.DurationField.subtract(long,long)"]
4019 [label="org.joda.time.format.ISODateTimeFormat.tTime()"]
2157 [label="org.joda.time.format.ISODateTimeFormat$Constants.tTime()"]
2158 [label="org.joda.time.format.ISODateTimeFormat$Constants.tTimeNoMillis()"]
2633 [label="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)"]
313 [label="org.joda.time.PeriodType.time()"]
3493 [label="org.joda.time.format.ISODateTimeFormat.time()"]
2155 [label="org.joda.time.format.ISODateTimeFormat$Constants.time()"]
2201 [label="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)"]
2180 [label="org.joda.time.format.ISODateTimeFormat$Constants.timeElementParser()"]
2156 [label="org.joda.time.format.ISODateTimeFormat$Constants.timeNoMillis()"]
3978 [label="org.joda.time.format.ISODateTimeFormat.timeParser()"]
2183 [label="org.joda.time.format.ISODateTimeFormat$Constants.timeParser()"]
2371 [label="java.util.ArrayList.toArray(T[])"]
2379 [label="java.util.List.toArray(T[])"]
2295 [label="java.util.Set.toArray(T[])"]
44 [label="org.joda.time.base.AbstractDateTime.toCalendar(java.util.Locale)"]
49 [label="org.joda.time.base.AbstractInstant.toDate()"]
3222 [label="org.joda.time.LocalDate.toDate()"]
3332 [label="org.joda.time.LocalDateTime.toDate()"]
3335 [label="org.joda.time.LocalDateTime.toDate(java.util.TimeZone)"]
2714 [label="org.joda.time.DateTime.toDateMidnight()"]
3214 [label="org.joda.time.LocalDate.toDateMidnight()"]
4151 [label="org.joda.time.YearMonthDay.toDateMidnight()"]
3215 [label="org.joda.time.LocalDate.toDateMidnight(org.joda.time.DateTimeZone)"]
4152 [label="org.joda.time.YearMonthDay.toDateMidnight(org.joda.time.DateTimeZone)"]
89 [label="org.joda.time.base.AbstractInstant.toDateTime()"]
3130 [label="org.joda.time.Instant.toDateTime()"]
1123 [label="org.joda.time.ReadableDateTime.toDateTime()"]
3324 [label="org.joda.time.LocalDateTime.toDateTime()"]
97 [label="org.joda.time.base.AbstractInstant.toDateTime(org.joda.time.Chronology)"]
2818 [label="org.joda.time.DateTime.toDateTime(org.joda.time.Chronology)"]
94 [label="org.joda.time.base.AbstractInstant.toDateTime(org.joda.time.DateTimeZone)"]
2817 [label="org.joda.time.DateTime.toDateTime(org.joda.time.DateTimeZone)"]
3004 [label="org.joda.time.LocalDateTime.toDateTime(org.joda.time.DateTimeZone)"]
3218 [label="org.joda.time.LocalDate.toDateTime(org.joda.time.LocalTime)"]
3219 [label="org.joda.time.LocalDate.toDateTime(org.joda.time.LocalTime,org.joda.time.DateTimeZone)"]
179 [label="org.joda.time.base.AbstractPartial.toDateTime(org.joda.time.ReadableInstant)"]
4153 [label="org.joda.time.YearMonthDay.toDateTime(org.joda.time.TimeOfDay)"]
4154 [label="org.joda.time.YearMonthDay.toDateTime(org.joda.time.TimeOfDay,org.joda.time.DateTimeZone)"]
3212 [label="org.joda.time.LocalDate.toDateTimeAtCurrentTime()"]
4149 [label="org.joda.time.YearMonthDay.toDateTimeAtCurrentTime()"]
3213 [label="org.joda.time.LocalDate.toDateTimeAtCurrentTime(org.joda.time.DateTimeZone)"]
4150 [label="org.joda.time.YearMonthDay.toDateTimeAtCurrentTime(org.joda.time.DateTimeZone)"]
3210 [label="org.joda.time.LocalDate.toDateTimeAtMidnight()"]
4147 [label="org.joda.time.YearMonthDay.toDateTimeAtMidnight()"]
3211 [label="org.joda.time.LocalDate.toDateTimeAtMidnight(org.joda.time.DateTimeZone)"]
4148 [label="org.joda.time.YearMonthDay.toDateTimeAtMidnight(org.joda.time.DateTimeZone)"]
3209 [label="org.joda.time.LocalDate.toDateTimeAtStartOfDay()"]
2834 [label="org.joda.time.LocalDate.toDateTimeAtStartOfDay(org.joda.time.DateTimeZone)"]
91 [label="org.joda.time.base.AbstractInstant.toDateTimeISO()"]
3131 [label="org.joda.time.Instant.toDateTimeISO()"]
2816 [label="org.joda.time.DateTime.toDateTimeISO()"]
3490 [label="org.joda.time.LocalTime.toDateTimeToday()"]
4008 [label="org.joda.time.TimeOfDay.toDateTimeToday()"]
3491 [label="org.joda.time.LocalTime.toDateTimeToday(org.joda.time.DateTimeZone)"]
4009 [label="org.joda.time.TimeOfDay.toDateTimeToday(org.joda.time.DateTimeZone)"]
2550 [label="org.joda.time.tz.DateTimeZoneBuilder.toDateTimeZone(java.lang.String,boolean)"]
62 [label="org.joda.time.base.AbstractDuration.toDuration()"]
150 [label="org.joda.time.base.AbstractInterval.toDuration()"]
341 [label="org.joda.time.base.BasePeriod.toDurationFrom(org.joda.time.ReadableInstant)"]
148 [label="org.joda.time.base.AbstractInterval.toDurationMillis()"]
1312 [label="org.joda.time.ReadableInterval.toDurationMillis()"]
343 [label="org.joda.time.base.BasePeriod.toDurationTo(org.joda.time.ReadableInstant)"]
1857 [label="org.joda.time.format.DateTimeFormatterBuilder.toFormatter()"]
2219 [label="org.joda.time.format.PeriodFormatterBuilder.toFormatter()"]
2388 [label="org.joda.time.format.PeriodFormatterBuilder.toFormatter(java.util.List,boolean,boolean)"]
51 [label="org.joda.time.base.AbstractDateTime.toGregorianCalendar()"]
87 [label="org.joda.time.base.AbstractInstant.toInstant()"]
863 [label="org.joda.time.ReadableInstant.toInstant()"]
144 [label="org.joda.time.base.AbstractInterval.toInterval()"]
3220 [label="org.joda.time.LocalDate.toInterval()"]
2754 [label="org.joda.time.DateMidnight.toInterval()"]
4155 [label="org.joda.time.YearMonthDay.toInterval()"]
4093 [label="org.joda.time.YearMonth.toInterval()"]
1404 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.toInterval()"]
3221 [label="org.joda.time.LocalDate.toInterval(org.joda.time.DateTimeZone)"]
4156 [label="org.joda.time.YearMonthDay.toInterval(org.joda.time.DateTimeZone)"]
4094 [label="org.joda.time.YearMonth.toInterval(org.joda.time.DateTimeZone)"]
264 [label="org.joda.time.base.BaseDuration.toIntervalFrom(org.joda.time.ReadableInstant)"]
266 [label="org.joda.time.base.BaseDuration.toIntervalTo(org.joda.time.ReadableInstant)"]
2952 [label="org.joda.time.DateTimeUtils.toJulianDay(long)"]
2951 [label="org.joda.time.DateTimeUtils.toJulianDayNumber(long)"]
2833 [label="org.joda.time.DateTime.toLocalDate()"]
1910 [label="org.joda.time.LocalDateTime.toLocalDate()"]
2753 [label="org.joda.time.DateMidnight.toLocalDate()"]
4143 [label="org.joda.time.YearMonthDay.toLocalDate()"]
3565 [label="org.joda.time.MonthDay.toLocalDate(int)"]
4090 [label="org.joda.time.YearMonth.toLocalDate(int)"]
2867 [label="org.joda.time.DateTime.toLocalDateTime()"]
3216 [label="org.joda.time.LocalDate.toLocalDateTime(org.joda.time.LocalTime)"]
2868 [label="org.joda.time.DateTime.toLocalTime()"]
1912 [label="org.joda.time.LocalDateTime.toLocalTime()"]
4003 [label="org.joda.time.TimeOfDay.toLocalTime()"]
1926 [label="java.lang.Character.toLowerCase(char)"]
1972 [label="java.lang.String.toLowerCase(java.util.Locale)"]
98 [label="org.joda.time.base.AbstractInstant.toMutableDateTime()"]
3132 [label="org.joda.time.Instant.toMutableDateTime()"]
103 [label="org.joda.time.base.AbstractInstant.toMutableDateTime(org.joda.time.Chronology)"]
102 [label="org.joda.time.base.AbstractInstant.toMutableDateTime(org.joda.time.DateTimeZone)"]
100 [label="org.joda.time.base.AbstractInstant.toMutableDateTimeISO()"]
3133 [label="org.joda.time.Instant.toMutableDateTimeISO()"]
146 [label="org.joda.time.base.AbstractInterval.toMutableInterval()"]
209 [label="org.joda.time.base.AbstractPeriod.toMutablePeriod()"]
389 [label="org.joda.time.base.BaseSingleFieldPeriod.toMutablePeriod()"]
2034 [label="org.joda.time.format.DateTimeFormatterBuilder.toParser()"]
2390 [label="org.joda.time.format.PeriodFormatterBuilder.toParser()"]
1795 [label="java.text.SimpleDateFormat.toPattern()"]
65 [label="org.joda.time.base.AbstractDuration.toPeriod()"]
151 [label="org.joda.time.base.AbstractInterval.toPeriod()"]
207 [label="org.joda.time.base.AbstractPeriod.toPeriod()"]
387 [label="org.joda.time.base.BaseSingleFieldPeriod.toPeriod()"]
252 [label="org.joda.time.base.BaseDuration.toPeriod(org.joda.time.Chronology)"]
153 [label="org.joda.time.base.AbstractInterval.toPeriod(org.joda.time.PeriodType)"]
249 [label="org.joda.time.base.BaseDuration.toPeriod(org.joda.time.PeriodType)"]
3763 [label="org.joda.time.ReadableInterval.toPeriod(org.joda.time.PeriodType)"]
254 [label="org.joda.time.base.BaseDuration.toPeriod(org.joda.time.PeriodType,org.joda.time.Chronology)"]
256 [label="org.joda.time.base.BaseDuration.toPeriodFrom(org.joda.time.ReadableInstant)"]
258 [label="org.joda.time.base.BaseDuration.toPeriodFrom(org.joda.time.ReadableInstant,org.joda.time.PeriodType)"]
260 [label="org.joda.time.base.BaseDuration.toPeriodTo(org.joda.time.ReadableInstant)"]
262 [label="org.joda.time.base.BaseDuration.toPeriodTo(org.joda.time.ReadableInstant,org.joda.time.PeriodType)"]
2033 [label="org.joda.time.format.DateTimeFormatterBuilder.toPrinter()"]
2389 [label="org.joda.time.format.PeriodFormatterBuilder.toPrinter()"]
3056 [label="org.joda.time.Duration.toStandardDays()"]
3896 [label="org.joda.time.Period.toStandardDays()"]
4034 [label="org.joda.time.Weeks.toStandardDays()"]
3092 [label="org.joda.time.Hours.toStandardDays()"]
3509 [label="org.joda.time.Minutes.toStandardDays()"]
3940 [label="org.joda.time.Seconds.toStandardDays()"]
3900 [label="org.joda.time.Period.toStandardDuration()"]
3031 [label="org.joda.time.Days.toStandardDuration()"]
4038 [label="org.joda.time.Weeks.toStandardDuration()"]
3095 [label="org.joda.time.Hours.toStandardDuration()"]
3512 [label="org.joda.time.Minutes.toStandardDuration()"]
3943 [label="org.joda.time.Seconds.toStandardDuration()"]
3057 [label="org.joda.time.Duration.toStandardHours()"]
3897 [label="org.joda.time.Period.toStandardHours()"]
3025 [label="org.joda.time.Days.toStandardHours()"]
4035 [label="org.joda.time.Weeks.toStandardHours()"]
3510 [label="org.joda.time.Minutes.toStandardHours()"]
3941 [label="org.joda.time.Seconds.toStandardHours()"]
3058 [label="org.joda.time.Duration.toStandardMinutes()"]
3898 [label="org.joda.time.Period.toStandardMinutes()"]
3027 [label="org.joda.time.Days.toStandardMinutes()"]
4036 [label="org.joda.time.Weeks.toStandardMinutes()"]
3093 [label="org.joda.time.Hours.toStandardMinutes()"]
3942 [label="org.joda.time.Seconds.toStandardMinutes()"]
3059 [label="org.joda.time.Duration.toStandardSeconds()"]
3899 [label="org.joda.time.Period.toStandardSeconds()"]
3029 [label="org.joda.time.Days.toStandardSeconds()"]
4037 [label="org.joda.time.Weeks.toStandardSeconds()"]
3094 [label="org.joda.time.Hours.toStandardSeconds()"]
3511 [label="org.joda.time.Minutes.toStandardSeconds()"]
3894 [label="org.joda.time.Period.toStandardWeeks()"]
3023 [label="org.joda.time.Days.toStandardWeeks()"]
3091 [label="org.joda.time.Hours.toStandardWeeks()"]
3508 [label="org.joda.time.Minutes.toStandardWeeks()"]
3939 [label="org.joda.time.Seconds.toStandardWeeks()"]
53 [label="org.joda.time.base.AbstractDateTime.toString()"]
54 [label="org.joda.time.base.AbstractInstant.toString()"]
73 [label="org.joda.time.base.AbstractDuration.toString()"]
157 [label="org.joda.time.base.AbstractInterval.toString()"]
215 [label="org.joda.time.base.AbstractPeriod.toString()"]
191 [label="java.lang.Object.toString()"]
81 [label="java.lang.StringBuffer.toString()"]
551 [label="java.lang.StringBuilder.toString()"]
1939 [label="java.lang.CharSequence.toString()"]
2922 [label="org.joda.time.DateTimeFieldType.toString()"]
1072 [label="org.joda.time.Chronology.toString()"]
3005 [label="org.joda.time.DateTimeZone.toString()"]
3925 [label="org.joda.time.PeriodType.toString()"]
3077 [label="org.joda.time.DurationFieldType.toString()"]
1568 [label="org.joda.time.DurationField.toString()"]
3269 [label="org.joda.time.LocalDate.toString()"]
3410 [label="org.joda.time.LocalDateTime.toString()"]
4163 [label="org.joda.time.YearMonthDay.toString()"]
3492 [label="org.joda.time.LocalTime.toString()"]
4018 [label="org.joda.time.TimeOfDay.toString()"]
2914 [label="org.joda.time.DateTimeComparator.toString()"]
2965 [label="org.joda.time.LazyInit$1.toString()"]
3042 [label="org.joda.time.Days.toString()"]
4049 [label="org.joda.time.Weeks.toString()"]
3106 [label="org.joda.time.Hours.toString()"]
3523 [label="org.joda.time.Minutes.toString()"]
3954 [label="org.joda.time.Seconds.toString()"]
3573 [label="org.joda.time.MonthDay.toString()"]
3597 [label="org.joda.time.Months.toString()"]
3826 [label="org.joda.time.Partial.toString()"]
4100 [label="org.joda.time.YearMonth.toString()"]
4184 [label="org.joda.time.Years.toString()"]
1004 [label="org.joda.time.chrono.ISOChronology.toString()"]
543 [label="org.joda.time.chrono.BasicChronology.toString()"]
752 [label="org.joda.time.chrono.BuddhistChronology.toString()"]
882 [label="org.joda.time.chrono.GJChronology.toString()"]
1141 [label="org.joda.time.chrono.LimitChronology.toString()"]
1225 [label="org.joda.time.chrono.ZonedChronology.toString()"]
1071 [label="org.joda.time.chrono.LenientChronology.toString()"]
1080 [label="org.joda.time.chrono.LimitChronology$LimitException.toString()"]
1151 [label="org.joda.time.chrono.StrictChronology.toString()"]
1755 [label="org.joda.time.field.UnsupportedDurationField.toString()"]
1457 [label="org.joda.time.field.BaseDateTimeField.toString()"]
1540 [label="org.joda.time.field.DelegatedDateTimeField.toString()"]
1468 [label="org.joda.time.field.BaseDurationField.toString()"]
1376 [label="org.joda.time.field.AbstractPartialFieldProperty.toString()"]
1409 [label="org.joda.time.field.AbstractReadableInstantFieldProperty.toString()"]
1567 [label="org.joda.time.field.DelegatedDurationField.toString()"]
1276 [label="org.joda.time.convert.ConverterManager.toString()"]
1233 [label="org.joda.time.convert.AbstractConverter.toString()"]
2476 [label="org.joda.time.tz.DateTimeZoneBuilder$Transition.toString()"]
2610 [label="org.joda.time.tz.ZoneInfoCompiler$Zone.toString()"]
1355 [label="java.lang.Integer.toString(int)"]
55 [label="org.joda.time.base.AbstractDateTime.toString(java.lang.String)"]
309 [label="org.joda.time.base.BasePartial.toString(java.lang.String)"]
3270 [label="org.joda.time.LocalDate.toString(java.lang.String)"]
3411 [label="org.joda.time.LocalDateTime.toString(java.lang.String)"]
3494 [label="org.joda.time.LocalTime.toString(java.lang.String)"]
3574 [label="org.joda.time.MonthDay.toString(java.lang.String)"]
3828 [label="org.joda.time.Partial.toString(java.lang.String)"]
4102 [label="org.joda.time.YearMonth.toString(java.lang.String)"]
58 [label="org.joda.time.base.AbstractDateTime.toString(java.lang.String,java.util.Locale)"]
310 [label="org.joda.time.base.BasePartial.toString(java.lang.String,java.util.Locale)"]
3271 [label="org.joda.time.LocalDate.toString(java.lang.String,java.util.Locale)"]
3412 [label="org.joda.time.LocalDateTime.toString(java.lang.String,java.util.Locale)"]
3495 [label="org.joda.time.LocalTime.toString(java.lang.String,java.util.Locale)"]
3575 [label="org.joda.time.MonthDay.toString(java.lang.String,java.util.Locale)"]
3829 [label="org.joda.time.Partial.toString(java.lang.String,java.util.Locale)"]
4103 [label="org.joda.time.YearMonth.toString(java.lang.String,java.util.Locale)"]
1981 [label="java.lang.Long.toString(long)"]
122 [label="org.joda.time.base.AbstractInstant.toString(org.joda.time.format.DateTimeFormatter)"]
190 [label="org.joda.time.base.AbstractPartial.toString(org.joda.time.format.DateTimeFormatter)"]
218 [label="org.joda.time.base.AbstractPeriod.toString(org.joda.time.format.PeriodFormatter)"]
3827 [label="org.joda.time.Partial.toStringList()"]
2865 [label="org.joda.time.DateTime.toTimeOfDay()"]
47 [label="org.joda.time.DateTimeZone.toTimeZone()"]
4022 [label="org.joda.time.UTCDateTimeZone.toTimeZone()"]
2570 [label="org.joda.time.tz.FixedDateTimeZone.toTimeZone()"]
1925 [label="java.lang.Character.toUpperCase(char)"]
1973 [label="java.lang.String.toUpperCase(java.util.Locale)"]
2864 [label="org.joda.time.DateTime.toYearMonthDay()"]
2751 [label="org.joda.time.DateMidnight.toYearMonthDay()"]
2652 [label="java.lang.String.trim()"]
2673 [label="org.joda.time.tz.ZoneInfoProvider.uncaughtException(java.lang.Exception)"]
2947 [label="java.util.Collections.unmodifiableMap(java.util.Map)"]
2665 [label="java.util.Collections.unmodifiableSortedSet(java.util.SortedSet)"]
1741 [label="org.joda.time.field.UnsupportedDurationField.unsupported()"]
1695 [label="org.joda.time.field.UnsupportedDateTimeField.unsupported()"]
1154 [label="org.joda.time.chrono.ZonedChronology.useTimeArithmetic(org.joda.time.DurationField)"]
299 [label="org.joda.time.Chronology.validate(org.joda.time.ReadablePartial,int[])"]
470 [label="org.joda.time.chrono.BaseChronology.validate(org.joda.time.ReadablePartial,int[])"]
2989 [label="org.joda.time.DateTimeZone.validateProvider(org.joda.time.tz.Provider)"]
2569 [label="java.lang.Boolean.valueOf(boolean)"]
380 [label="java.lang.String.valueOf(int)"]
473 [label="java.lang.Integer.valueOf(int)"]
3114 [label="java.lang.String.valueOf(java.lang.Object)"]
2634 [label="java.lang.Long.valueOf(long)"]
2624 [label="java.lang.Short.valueOf(short)"]
2629 [label="java.util.TreeMap.values()"]
2517 [label="org.joda.time.tz.ZoneInfoLogger.verbose()"]
1592 [label="org.joda.time.field.FieldUtils.verifyValueBounds(java.lang.String,int,int,int)"]
665 [label="org.joda.time.field.FieldUtils.verifyValueBounds(org.joda.time.DateTimeField,int,int,int)"]
532 [label="org.joda.time.field.FieldUtils.verifyValueBounds(org.joda.time.DateTimeFieldType,int,int,int)"]
2189 [label="org.joda.time.format.ISODateTimeFormat.weekDate()"]
2161 [label="org.joda.time.format.ISODateTimeFormat$Constants.weekDateTime()"]
2162 [label="org.joda.time.format.ISODateTimeFormat$Constants.weekDateTimeNoMillis()"]
2133 [label="org.joda.time.format.ISODateTimeFormat$Constants.weekElement()"]
502 [label="org.joda.time.DateTimeFieldType.weekOfWeekyear()"]
23 [label="org.joda.time.Chronology.weekOfWeekyear()"]
2893 [label="org.joda.time.DateTime.weekOfWeekyear()"]
3678 [label="org.joda.time.MutableDateTime.weekOfWeekyear()"]
3265 [label="org.joda.time.LocalDate.weekOfWeekyear()"]
3401 [label="org.joda.time.LocalDateTime.weekOfWeekyear()"]
2773 [label="org.joda.time.DateMidnight.weekOfWeekyear()"]
457 [label="org.joda.time.chrono.BaseChronology.weekOfWeekyear()"]
697 [label="org.joda.time.chrono.AssembledChronology.weekOfWeekyear()"]
405 [label="org.joda.time.Chronology.weeks()"]
3912 [label="org.joda.time.PeriodType.weeks()"]
352 [label="org.joda.time.DurationFieldType.weeks()"]
437 [label="org.joda.time.chrono.BaseChronology.weeks()"]
711 [label="org.joda.time.chrono.AssembledChronology.weeks()"]
3837 [label="org.joda.time.Period.weeks(int)"]
3024 [label="org.joda.time.Weeks.weeks(int)"]
4026 [label="org.joda.time.Weeks.weeksBetween(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)"]
4027 [label="org.joda.time.Weeks.weeksBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)"]
4028 [label="org.joda.time.Weeks.weeksIn(org.joda.time.ReadableInterval)"]
504 [label="org.joda.time.DateTimeFieldType.weekyear()"]
19 [label="org.joda.time.Chronology.weekyear()"]
2891 [label="org.joda.time.DateTime.weekyear()"]
3676 [label="org.joda.time.MutableDateTime.weekyear()"]
3263 [label="org.joda.time.LocalDate.weekyear()"]
3399 [label="org.joda.time.LocalDateTime.weekyear()"]
2771 [label="org.joda.time.DateMidnight.weekyear()"]
458 [label="org.joda.time.chrono.BaseChronology.weekyear()"]
717 [label="org.joda.time.chrono.AssembledChronology.weekyear()"]
2132 [label="org.joda.time.format.ISODateTimeFormat$Constants.weekyearElement()"]
505 [label="org.joda.time.DateTimeFieldType.weekyearOfCentury()"]
416 [label="org.joda.time.Chronology.weekyearOfCentury()"]
459 [label="org.joda.time.chrono.BaseChronology.weekyearOfCentury()"]
903 [label="org.joda.time.chrono.AssembledChronology.weekyearOfCentury()"]
2144 [label="org.joda.time.format.ISODateTimeFormat$Constants.weekyearWeek()"]
2145 [label="org.joda.time.format.ISODateTimeFormat$Constants.weekyearWeekDay()"]
406 [label="org.joda.time.Chronology.weekyears()"]
503 [label="org.joda.time.DurationFieldType.weekyears()"]
438 [label="org.joda.time.chrono.BaseChronology.weekyears()"]
685 [label="org.joda.time.chrono.AssembledChronology.weekyears()"]
3812 [label="org.joda.time.Partial.with(org.joda.time.DateTimeFieldType,int)"]
2871 [label="org.joda.time.DateTime.withCenturyOfEra(int)"]
3248 [label="org.joda.time.LocalDate.withCenturyOfEra(int)"]
3379 [label="org.joda.time.LocalDateTime.withCenturyOfEra(int)"]
2756 [label="org.joda.time.DateMidnight.withCenturyOfEra(int)"]
2819 [label="org.joda.time.DateTime.withChronology(org.joda.time.Chronology)"]
3147 [label="org.joda.time.Interval.withChronology(org.joda.time.Chronology)"]
2725 [label="org.joda.time.DateMidnight.withChronology(org.joda.time.Chronology)"]
158 [label="org.joda.time.format.DateTimeFormatter.withChronology(org.joda.time.Chronology)"]
4130 [label="org.joda.time.YearMonthDay.withChronologyRetainFields(org.joda.time.Chronology)"]
3988 [label="org.joda.time.TimeOfDay.withChronologyRetainFields(org.joda.time.Chronology)"]
3555 [label="org.joda.time.MonthDay.withChronologyRetainFields(org.joda.time.Chronology)"]
3810 [label="org.joda.time.Partial.withChronologyRetainFields(org.joda.time.Chronology)"]
4080 [label="org.joda.time.YearMonth.withChronologyRetainFields(org.joda.time.Chronology)"]
2824 [label="org.joda.time.DateTime.withDate(int,int,int)"]
3341 [label="org.joda.time.LocalDateTime.withDate(int,int,int)"]
2825 [label="org.joda.time.DateTime.withDate(org.joda.time.LocalDate)"]
2879 [label="org.joda.time.DateTime.withDayOfMonth(int)"]
3256 [label="org.joda.time.LocalDate.withDayOfMonth(int)"]
3387 [label="org.joda.time.LocalDateTime.withDayOfMonth(int)"]
2764 [label="org.joda.time.DateMidnight.withDayOfMonth(int)"]
4159 [label="org.joda.time.YearMonthDay.withDayOfMonth(int)"]
3569 [label="org.joda.time.MonthDay.withDayOfMonth(int)"]
2880 [label="org.joda.time.DateTime.withDayOfWeek(int)"]
3257 [label="org.joda.time.LocalDate.withDayOfWeek(int)"]
3388 [label="org.joda.time.LocalDateTime.withDayOfWeek(int)"]
2765 [label="org.joda.time.DateMidnight.withDayOfWeek(int)"]
2878 [label="org.joda.time.DateTime.withDayOfYear(int)"]
3255 [label="org.joda.time.LocalDate.withDayOfYear(int)"]
3386 [label="org.joda.time.LocalDateTime.withDayOfYear(int)"]
2763 [label="org.joda.time.DateMidnight.withDayOfYear(int)"]
3868 [label="org.joda.time.Period.withDays(int)"]
3920 [label="org.joda.time.PeriodType.withDaysRemoved()"]
1880 [label="org.joda.time.format.DateTimeFormatter.withDefaultYear(int)"]
3061 [label="org.joda.time.Duration.withDurationAdded(long,int)"]
3123 [label="org.joda.time.Instant.withDurationAdded(long,int)"]
2838 [label="org.joda.time.DateTime.withDurationAdded(long,int)"]
2731 [label="org.joda.time.DateMidnight.withDurationAdded(long,int)"]
3062 [label="org.joda.time.Duration.withDurationAdded(org.joda.time.ReadableDuration,int)"]
3125 [label="org.joda.time.Instant.withDurationAdded(org.joda.time.ReadableDuration,int)"]
2839 [label="org.joda.time.DateTime.withDurationAdded(org.joda.time.ReadableDuration,int)"]
3346 [label="org.joda.time.LocalDateTime.withDurationAdded(org.joda.time.ReadableDuration,int)"]
2733 [label="org.joda.time.DateMidnight.withDurationAdded(org.joda.time.ReadableDuration,int)"]
3152 [label="org.joda.time.Interval.withDurationAfterStart(org.joda.time.ReadableDuration)"]
3153 [label="org.joda.time.Interval.withDurationBeforeEnd(org.joda.time.ReadableDuration)"]
2821 [label="org.joda.time.DateTime.withEarlierOffsetAtOverlap()"]
3151 [label="org.joda.time.Interval.withEnd(org.joda.time.ReadableInstant)"]
3150 [label="org.joda.time.Interval.withEndMillis(long)"]
2870 [label="org.joda.time.DateTime.withEra(int)"]
3247 [label="org.joda.time.LocalDate.withEra(int)"]
3378 [label="org.joda.time.LocalDateTime.withEra(int)"]
2755 [label="org.joda.time.DateMidnight.withEra(int)"]
2836 [label="org.joda.time.DateTime.withField(org.joda.time.DateTimeFieldType,int)"]
3227 [label="org.joda.time.LocalDate.withField(org.joda.time.DateTimeFieldType,int)"]
3344 [label="org.joda.time.LocalDateTime.withField(org.joda.time.DateTimeFieldType,int)"]
2729 [label="org.joda.time.DateMidnight.withField(org.joda.time.DateTimeFieldType,int)"]
4131 [label="org.joda.time.YearMonthDay.withField(org.joda.time.DateTimeFieldType,int)"]
3465 [label="org.joda.time.LocalTime.withField(org.joda.time.DateTimeFieldType,int)"]
3989 [label="org.joda.time.TimeOfDay.withField(org.joda.time.DateTimeFieldType,int)"]
3556 [label="org.joda.time.MonthDay.withField(org.joda.time.DateTimeFieldType,int)"]
3815 [label="org.joda.time.Partial.withField(org.joda.time.DateTimeFieldType,int)"]
4081 [label="org.joda.time.YearMonth.withField(org.joda.time.DateTimeFieldType,int)"]
3862 [label="org.joda.time.Period.withField(org.joda.time.DurationFieldType,int)"]
3817 [label="org.joda.time.Partial.withFieldAddWrapped(org.joda.time.DurationFieldType,int)"]
3863 [label="org.joda.time.Period.withFieldAdded(org.joda.time.DurationFieldType,int)"]
2837 [label="org.joda.time.DateTime.withFieldAdded(org.joda.time.DurationFieldType,int)"]
3228 [label="org.joda.time.LocalDate.withFieldAdded(org.joda.time.DurationFieldType,int)"]
3345 [label="org.joda.time.LocalDateTime.withFieldAdded(org.joda.time.DurationFieldType,int)"]
2730 [label="org.joda.time.DateMidnight.withFieldAdded(org.joda.time.DurationFieldType,int)"]
4132 [label="org.joda.time.YearMonthDay.withFieldAdded(org.joda.time.DurationFieldType,int)"]
3466 [label="org.joda.time.LocalTime.withFieldAdded(org.joda.time.DurationFieldType,int)"]
3990 [label="org.joda.time.TimeOfDay.withFieldAdded(org.joda.time.DurationFieldType,int)"]
3557 [label="org.joda.time.MonthDay.withFieldAdded(org.joda.time.DurationFieldType,int)"]
3816 [label="org.joda.time.Partial.withFieldAdded(org.joda.time.DurationFieldType,int)"]
4082 [label="org.joda.time.YearMonth.withFieldAdded(org.joda.time.DurationFieldType,int)"]
3927 [label="org.joda.time.PeriodType.withFieldRemoved(int,java.lang.String)"]
2835 [label="org.joda.time.DateTime.withFields(org.joda.time.ReadablePartial)"]
3226 [label="org.joda.time.LocalDate.withFields(org.joda.time.ReadablePartial)"]
3343 [label="org.joda.time.LocalDateTime.withFields(org.joda.time.ReadablePartial)"]
2728 [label="org.joda.time.DateMidnight.withFields(org.joda.time.ReadablePartial)"]
3464 [label="org.joda.time.LocalTime.withFields(org.joda.time.ReadablePartial)"]
388 [label="org.joda.time.Period.withFields(org.joda.time.ReadablePeriod)"]
2881 [label="org.joda.time.DateTime.withHourOfDay(int)"]
3389 [label="org.joda.time.LocalDateTime.withHourOfDay(int)"]
3480 [label="org.joda.time.LocalTime.withHourOfDay(int)"]
4010 [label="org.joda.time.TimeOfDay.withHourOfDay(int)"]
3869 [label="org.joda.time.Period.withHours(int)"]
3921 [label="org.joda.time.PeriodType.withHoursRemoved()"]
2823 [label="org.joda.time.DateTime.withLaterOffsetAtOverlap()"]
3164 [label="org.joda.time.LocalDate.withLocalMillis(long)"]
3280 [label="org.joda.time.LocalDateTime.withLocalMillis(long)"]
3419 [label="org.joda.time.LocalTime.withLocalMillis(long)"]
59 [label="org.joda.time.format.DateTimeFormatter.withLocale(java.util.Locale)"]
2279 [label="org.joda.time.format.PeriodFormatter.withLocale(java.util.Locale)"]
2698 [label="org.joda.time.DateMidnight$Property.withMaximumValue()"]
2789 [label="org.joda.time.DateTime$Property.withMaximumValue()"]
3169 [label="org.joda.time.LocalDate$Property.withMaximumValue()"]
3286 [label="org.joda.time.LocalDateTime$Property.withMaximumValue()"]
3426 [label="org.joda.time.LocalTime$Property.withMaximumValue()"]
3798 [label="org.joda.time.Partial$Property.withMaximumValue()"]
3965 [label="org.joda.time.TimeOfDay$Property.withMaximumValue()"]
4113 [label="org.joda.time.YearMonthDay$Property.withMaximumValue()"]
3872 [label="org.joda.time.Period.withMillis(int)"]
3060 [label="org.joda.time.Duration.withMillis(long)"]
3122 [label="org.joda.time.Instant.withMillis(long)"]
2783 [label="org.joda.time.DateTime.withMillis(long)"]
2692 [label="org.joda.time.DateMidnight.withMillis(long)"]
2474 [label="org.joda.time.tz.DateTimeZoneBuilder$Transition.withMillis(long)"]
2885 [label="org.joda.time.DateTime.withMillisOfDay(int)"]
3393 [label="org.joda.time.LocalDateTime.withMillisOfDay(int)"]
3484 [label="org.joda.time.LocalTime.withMillisOfDay(int)"]
2884 [label="org.joda.time.DateTime.withMillisOfSecond(int)"]
3392 [label="org.joda.time.LocalDateTime.withMillisOfSecond(int)"]
3483 [label="org.joda.time.LocalTime.withMillisOfSecond(int)"]
4013 [label="org.joda.time.TimeOfDay.withMillisOfSecond(int)"]
3924 [label="org.joda.time.PeriodType.withMillisRemoved()"]
2699 [label="org.joda.time.DateMidnight$Property.withMinimumValue()"]
2791 [label="org.joda.time.DateTime$Property.withMinimumValue()"]
3170 [label="org.joda.time.LocalDate$Property.withMinimumValue()"]
3287 [label="org.joda.time.LocalDateTime$Property.withMinimumValue()"]
3427 [label="org.joda.time.LocalTime$Property.withMinimumValue()"]
3799 [label="org.joda.time.Partial$Property.withMinimumValue()"]
3966 [label="org.joda.time.TimeOfDay$Property.withMinimumValue()"]
4114 [label="org.joda.time.YearMonthDay$Property.withMinimumValue()"]
2882 [label="org.joda.time.DateTime.withMinuteOfHour(int)"]
3390 [label="org.joda.time.LocalDateTime.withMinuteOfHour(int)"]
3481 [label="org.joda.time.LocalTime.withMinuteOfHour(int)"]
4011 [label="org.joda.time.TimeOfDay.withMinuteOfHour(int)"]
3870 [label="org.joda.time.Period.withMinutes(int)"]
3922 [label="org.joda.time.PeriodType.withMinutesRemoved()"]
2876 [label="org.joda.time.DateTime.withMonthOfYear(int)"]
3253 [label="org.joda.time.LocalDate.withMonthOfYear(int)"]
3384 [label="org.joda.time.LocalDateTime.withMonthOfYear(int)"]
2761 [label="org.joda.time.DateMidnight.withMonthOfYear(int)"]
4158 [label="org.joda.time.YearMonthDay.withMonthOfYear(int)"]
3568 [label="org.joda.time.MonthDay.withMonthOfYear(int)"]
4096 [label="org.joda.time.YearMonth.withMonthOfYear(int)"]
3866 [label="org.joda.time.Period.withMonths(int)"]
3918 [label="org.joda.time.PeriodType.withMonthsRemoved()"]
1874 [label="org.joda.time.format.DateTimeFormatter.withOffsetParsed()"]
1341 [label="org.joda.time.format.PeriodFormatter.withParseType(org.joda.time.PeriodType)"]
2840 [label="org.joda.time.DateTime.withPeriodAdded(org.joda.time.ReadablePeriod,int)"]
3229 [label="org.joda.time.LocalDate.withPeriodAdded(org.joda.time.ReadablePeriod,int)"]
3347 [label="org.joda.time.LocalDateTime.withPeriodAdded(org.joda.time.ReadablePeriod,int)"]
2734 [label="org.joda.time.DateMidnight.withPeriodAdded(org.joda.time.ReadablePeriod,int)"]
4133 [label="org.joda.time.YearMonthDay.withPeriodAdded(org.joda.time.ReadablePeriod,int)"]
3467 [label="org.joda.time.LocalTime.withPeriodAdded(org.joda.time.ReadablePeriod,int)"]
3991 [label="org.joda.time.TimeOfDay.withPeriodAdded(org.joda.time.ReadablePeriod,int)"]
3558 [label="org.joda.time.MonthDay.withPeriodAdded(org.joda.time.ReadablePeriod,int)"]
3818 [label="org.joda.time.Partial.withPeriodAdded(org.joda.time.ReadablePeriod,int)"]
4083 [label="org.joda.time.YearMonth.withPeriodAdded(org.joda.time.ReadablePeriod,int)"]
3154 [label="org.joda.time.Interval.withPeriodAfterStart(org.joda.time.ReadablePeriod)"]
3155 [label="org.joda.time.Interval.withPeriodBeforeEnd(org.joda.time.ReadablePeriod)"]
3860 [label="org.joda.time.Period.withPeriodType(org.joda.time.PeriodType)"]
1879 [label="org.joda.time.format.DateTimeFormatter.withPivotYear(int)"]
1877 [label="org.joda.time.format.DateTimeFormatter.withPivotYear(java.lang.Integer)"]
2883 [label="org.joda.time.DateTime.withSecondOfMinute(int)"]
3391 [label="org.joda.time.LocalDateTime.withSecondOfMinute(int)"]
3482 [label="org.joda.time.LocalTime.withSecondOfMinute(int)"]
4012 [label="org.joda.time.TimeOfDay.withSecondOfMinute(int)"]
3871 [label="org.joda.time.Period.withSeconds(int)"]
3923 [label="org.joda.time.PeriodType.withSecondsRemoved()"]
3149 [label="org.joda.time.Interval.withStart(org.joda.time.ReadableInstant)"]
3148 [label="org.joda.time.Interval.withStartMillis(long)"]
2826 [label="org.joda.time.DateTime.withTime(int,int,int,int)"]
3342 [label="org.joda.time.LocalDateTime.withTime(int,int,int,int)"]
2827 [label="org.joda.time.DateTime.withTime(org.joda.time.LocalTime)"]
2832 [label="org.joda.time.DateTime.withTimeAtStartOfDay()"]
240 [label="org.joda.time.Chronology.withUTC()"]
876 [label="org.joda.time.chrono.GJChronology.withUTC()"]
1126 [label="org.joda.time.chrono.LimitChronology.withUTC()"]
1214 [label="org.joda.time.chrono.ZonedChronology.withUTC()"]
1064 [label="org.joda.time.chrono.LenientChronology.withUTC()"]
1144 [label="org.joda.time.chrono.StrictChronology.withUTC()"]
2877 [label="org.joda.time.DateTime.withWeekOfWeekyear(int)"]
3254 [label="org.joda.time.LocalDate.withWeekOfWeekyear(int)"]
3385 [label="org.joda.time.LocalDateTime.withWeekOfWeekyear(int)"]
2762 [label="org.joda.time.DateMidnight.withWeekOfWeekyear(int)"]
3867 [label="org.joda.time.Period.withWeeks(int)"]
3919 [label="org.joda.time.PeriodType.withWeeksRemoved()"]
2875 [label="org.joda.time.DateTime.withWeekyear(int)"]
3252 [label="org.joda.time.LocalDate.withWeekyear(int)"]
3383 [label="org.joda.time.LocalDateTime.withWeekyear(int)"]
2760 [label="org.joda.time.DateMidnight.withWeekyear(int)"]
2874 [label="org.joda.time.DateTime.withYear(int)"]
3251 [label="org.joda.time.LocalDate.withYear(int)"]
3382 [label="org.joda.time.LocalDateTime.withYear(int)"]
2759 [label="org.joda.time.DateMidnight.withYear(int)"]
4157 [label="org.joda.time.YearMonthDay.withYear(int)"]
4095 [label="org.joda.time.YearMonth.withYear(int)"]
2873 [label="org.joda.time.DateTime.withYearOfCentury(int)"]
3250 [label="org.joda.time.LocalDate.withYearOfCentury(int)"]
3381 [label="org.joda.time.LocalDateTime.withYearOfCentury(int)"]
2758 [label="org.joda.time.DateMidnight.withYearOfCentury(int)"]
2872 [label="org.joda.time.DateTime.withYearOfEra(int)"]
3249 [label="org.joda.time.LocalDate.withYearOfEra(int)"]
3380 [label="org.joda.time.LocalDateTime.withYearOfEra(int)"]
2757 [label="org.joda.time.DateMidnight.withYearOfEra(int)"]
3864 [label="org.joda.time.Period.withYears(int)"]
3917 [label="org.joda.time.PeriodType.withYearsRemoved()"]
96 [label="org.joda.time.Chronology.withZone(org.joda.time.DateTimeZone)"]
1915 [label="org.joda.time.DateTime.withZone(org.joda.time.DateTimeZone)"]
1876 [label="org.joda.time.format.DateTimeFormatter.withZone(org.joda.time.DateTimeZone)"]
1003 [label="org.joda.time.chrono.ISOChronology.withZone(org.joda.time.DateTimeZone)"]
749 [label="org.joda.time.chrono.BuddhistChronology.withZone(org.joda.time.DateTimeZone)"]
877 [label="org.joda.time.chrono.GJChronology.withZone(org.joda.time.DateTimeZone)"]
1127 [label="org.joda.time.chrono.LimitChronology.withZone(org.joda.time.DateTimeZone)"]
765 [label="org.joda.time.chrono.CopticChronology.withZone(org.joda.time.DateTimeZone)"]
1215 [label="org.joda.time.chrono.ZonedChronology.withZone(org.joda.time.DateTimeZone)"]
776 [label="org.joda.time.chrono.EthiopicChronology.withZone(org.joda.time.DateTimeZone)"]
989 [label="org.joda.time.chrono.GregorianChronology.withZone(org.joda.time.DateTimeZone)"]
1057 [label="org.joda.time.chrono.JulianChronology.withZone(org.joda.time.DateTimeZone)"]
1034 [label="org.joda.time.chrono.IslamicChronology.withZone(org.joda.time.DateTimeZone)"]
1065 [label="org.joda.time.chrono.LenientChronology.withZone(org.joda.time.DateTimeZone)"]
1145 [label="org.joda.time.chrono.StrictChronology.withZone(org.joda.time.DateTimeZone)"]
2820 [label="org.joda.time.DateTime.withZoneRetainFields(org.joda.time.DateTimeZone)"]
2726 [label="org.joda.time.DateMidnight.withZoneRetainFields(org.joda.time.DateTimeZone)"]
1875 [label="org.joda.time.format.DateTimeFormatter.withZoneUTC()"]
3813 [label="org.joda.time.Partial.without(org.joda.time.DateTimeFieldType)"]
2264 [label="org.joda.time.format.PeriodFormat.wordBased()"]
2255 [label="org.joda.time.format.PeriodFormat.wordBased(java.util.Locale)"]
2119 [label="java.io.Writer.write(int)"]
2120 [label="java.io.Writer.write(java.lang.String)"]
2450 [label="java.io.DataOutput.writeBoolean(boolean)"]
2449 [label="java.io.DataOutput.writeByte(int)"]
2533 [label="java.io.DataOutput.writeInt(int)"]
2538 [label="java.io.DataOutput.writeLong(long)"]
2451 [label="org.joda.time.tz.DateTimeZoneBuilder.writeMillis(java.io.DataOutput,long)"]
3599 [label="org.joda.time.MutableDateTime$Property.writeObject(java.io.ObjectOutputStream)"]
2687 [label="org.joda.time.DateMidnight$Property.writeObject(java.io.ObjectOutputStream)"]
2778 [label="org.joda.time.DateTime$Property.writeObject(java.io.ObjectOutputStream)"]
2955 [label="org.joda.time.DateTimeZone$Stub.writeObject(java.io.ObjectOutputStream)"]
3158 [label="org.joda.time.LocalDate$Property.writeObject(java.io.ObjectOutputStream)"]
3273 [label="org.joda.time.LocalDateTime$Property.writeObject(java.io.ObjectOutputStream)"]
3414 [label="org.joda.time.LocalTime$Property.writeObject(java.io.ObjectOutputStream)"]
995 [label="org.joda.time.chrono.ISOChronology$Stub.writeObject(java.io.ObjectOutputStream)"]
996 [label="java.io.ObjectOutputStream.writeObject(java.lang.Object)"]
2118 [label="org.joda.time.format.FormatUtils.writePaddedInteger(java.io.Writer,int,int)"]
2121 [label="org.joda.time.format.FormatUtils.writePaddedInteger(java.io.Writer,long,int)"]
3006 [label="org.joda.time.DateTimeZone.writeReplace()"]
1010 [label="org.joda.time.chrono.ISOChronology.writeReplace()"]
2532 [label="java.io.DataOutput.writeShort(int)"]
2628 [label="java.io.DataOutputStream.writeShort(int)"]
2448 [label="org.joda.time.tz.DateTimeZoneBuilder$OfYear.writeTo(java.io.DataOutput)"]
2459 [label="org.joda.time.tz.DateTimeZoneBuilder$Recurrence.writeTo(java.io.DataOutput)"]
2503 [label="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.writeTo(java.io.DataOutput)"]
2530 [label="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.writeTo(java.io.DataOutput)"]
2555 [label="org.joda.time.tz.DateTimeZoneBuilder.writeTo(java.lang.String,java.io.DataOutput)"]
2554 [label="org.joda.time.tz.DateTimeZoneBuilder.writeTo(java.lang.String,java.io.OutputStream)"]
2956 [label="java.io.ObjectOutputStream.writeUTF(java.lang.String)"]
2460 [label="java.io.DataOutput.writeUTF(java.lang.String)"]
2630 [label="java.io.DataOutputStream.writeUTF(java.lang.String)"]
2124 [label="org.joda.time.format.FormatUtils.writeUnpaddedInteger(java.io.Writer,int)"]
2125 [label="org.joda.time.format.FormatUtils.writeUnpaddedInteger(java.io.Writer,long)"]
2643 [label="org.joda.time.tz.ZoneInfoCompiler.writeZone(java.io.File,org.joda.time.tz.DateTimeZoneBuilder,org.joda.time.DateTimeZone)"]
2619 [label="org.joda.time.tz.ZoneInfoCompiler.writeZoneInfoMap(java.io.DataOutputStream,java.util.Map)"]
507 [label="org.joda.time.DateTimeFieldType.year()"]
17 [label="org.joda.time.Chronology.year()"]
2890 [label="org.joda.time.DateTime.year()"]
3675 [label="org.joda.time.MutableDateTime.year()"]
3262 [label="org.joda.time.LocalDate.year()"]
3398 [label="org.joda.time.LocalDateTime.year()"]
2770 [label="org.joda.time.DateMidnight.year()"]
4160 [label="org.joda.time.YearMonthDay.year()"]
4098 [label="org.joda.time.YearMonth.year()"]
461 [label="org.joda.time.chrono.BaseChronology.year()"]
735 [label="org.joda.time.chrono.AssembledChronology.year()"]
3909 [label="org.joda.time.PeriodType.yearDay()"]
3908 [label="org.joda.time.PeriodType.yearDayTime()"]
2129 [label="org.joda.time.format.ISODateTimeFormat$Constants.yearElement()"]
4101 [label="org.joda.time.format.ISODateTimeFormat.yearMonth()"]
2142 [label="org.joda.time.format.ISODateTimeFormat$Constants.yearMonth()"]
2514 [label="org.joda.time.PeriodType.yearMonthDay()"]
2206 [label="org.joda.time.format.ISODateTimeFormat.yearMonthDay()"]
2143 [label="org.joda.time.format.ISODateTimeFormat$Constants.yearMonthDay()"]
3905 [label="org.joda.time.PeriodType.yearMonthDayTime()"]
509 [label="org.joda.time.DateTimeFieldType.yearOfCentury()"]
15 [label="org.joda.time.Chronology.yearOfCentury()"]
2888 [label="org.joda.time.DateTime.yearOfCentury()"]
3673 [label="org.joda.time.MutableDateTime.yearOfCentury()"]
3260 [label="org.joda.time.LocalDate.yearOfCentury()"]
3396 [label="org.joda.time.LocalDateTime.yearOfCentury()"]
2768 [label="org.joda.time.DateMidnight.yearOfCentury()"]
463 [label="org.joda.time.chrono.BaseChronology.yearOfCentury()"]
902 [label="org.joda.time.chrono.AssembledChronology.yearOfCentury()"]
508 [label="org.joda.time.DateTimeFieldType.yearOfEra()"]
13 [label="org.joda.time.Chronology.yearOfEra()"]
2889 [label="org.joda.time.DateTime.yearOfEra()"]
3674 [label="org.joda.time.MutableDateTime.yearOfEra()"]
3261 [label="org.joda.time.LocalDate.yearOfEra()"]
3397 [label="org.joda.time.LocalDateTime.yearOfEra()"]
2769 [label="org.joda.time.DateMidnight.yearOfEra()"]
462 [label="org.joda.time.chrono.BaseChronology.yearOfEra()"]
900 [label="org.joda.time.chrono.AssembledChronology.yearOfEra()"]
3907 [label="org.joda.time.PeriodType.yearWeekDay()"]
3906 [label="org.joda.time.PeriodType.yearWeekDayTime()"]
408 [label="org.joda.time.Chronology.years()"]
3911 [label="org.joda.time.PeriodType.years()"]
350 [label="org.joda.time.DurationFieldType.years()"]
440 [label="org.joda.time.chrono.BaseChronology.years()"]
618 [label="org.joda.time.chrono.AssembledChronology.years()"]
3834 [label="org.joda.time.Period.years(int)"]
4166 [label="org.joda.time.Years.years(int)"]
4167 [label="org.joda.time.Years.yearsBetween(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)"]
4168 [label="org.joda.time.Years.yearsBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)"]
4169 [label="org.joda.time.Years.yearsIn(org.joda.time.ReadableInterval)"]
0 -> 1
1 -> 61
2 -> 3
2 -> 4
2 -> 5
2 -> 6
2 -> 7
8 -> 4
8 -> 6
8 -> 7
8 -> 9
10 -> 4
10 -> 6
10 -> 7
10 -> 11
12 -> 4
12 -> 6
12 -> 7
12 -> 13
14 -> 4
14 -> 6
14 -> 7
14 -> 15
16 -> 4
16 -> 6
16 -> 7
16 -> 17
18 -> 4
18 -> 6
18 -> 7
18 -> 19
20 -> 4
20 -> 6
20 -> 7
20 -> 21
22 -> 4
22 -> 6
22 -> 7
22 -> 23
24 -> 4
24 -> 6
24 -> 7
24 -> 25
26 -> 4
26 -> 6
26 -> 7
26 -> 27
28 -> 4
28 -> 6
28 -> 7
28 -> 29
30 -> 4
30 -> 6
30 -> 7
30 -> 31
32 -> 4
32 -> 6
32 -> 7
32 -> 33
34 -> 4
34 -> 6
34 -> 7
34 -> 35
36 -> 4
36 -> 6
36 -> 7
36 -> 37
38 -> 4
38 -> 6
38 -> 7
38 -> 39
40 -> 4
40 -> 6
40 -> 7
40 -> 41
42 -> 4
42 -> 6
42 -> 7
42 -> 43
44 -> 45
44 -> 46
44 -> 47
44 -> 48
44 -> 49
44 -> 50
46 -> 4
46 -> 82
47 -> 2571
49 -> 6
49 -> 104
51 -> 46
51 -> 47
51 -> 49
51 -> 50
51 -> 52
53 -> 54
54 -> 57
54 -> 121
55 -> 53
55 -> 56
55 -> 57
56 -> 1802
57 -> 544
57 -> 551
57 -> 1882
57 -> 1893
57 -> 1894
58 -> 53
58 -> 56
58 -> 57
58 -> 59
59 -> 1799
59 -> 1868
59 -> 1873
60 -> 61
62 -> 63
62 -> 64
64 -> 243
65 -> 63
65 -> 66
66 -> 328
67 -> 63
68 -> 67
69 -> 67
70 -> 67
71 -> 63
72 -> 63
73 -> 63
73 -> 74
73 -> 75
73 -> 76
73 -> 77
73 -> 78
73 -> 79
73 -> 80
73 -> 81
76 -> 2123
83 -> 3
83 -> 4
83 -> 5
83 -> 6
83 -> 7
84 -> 4
84 -> 5
84 -> 85
86 -> 3
86 -> 6
86 -> 7
87 -> 6
87 -> 88
88 -> 1
89 -> 6
89 -> 46
89 -> 90
90 -> 225
91 -> 6
91 -> 46
91 -> 92
91 -> 93
92 -> 740
92 -> 741
92 -> 746
92 -> 763
92 -> 1001
93 -> 221
94 -> 4
94 -> 6
94 -> 93
94 -> 95
94 -> 96
95 -> 220
97 -> 6
97 -> 93
98 -> 6
98 -> 46
98 -> 99
99 -> 225
100 -> 6
100 -> 46
100 -> 92
100 -> 101
101 -> 221
102 -> 4
102 -> 6
102 -> 95
102 -> 96
102 -> 101
103 -> 6
103 -> 101
105 -> 4
105 -> 6
105 -> 106
106 -> 657
107 -> 4
107 -> 6
107 -> 108
109 -> 6
110 -> 6
111 -> 110
111 -> 112
112 -> 2932
113 -> 110
113 -> 114
114 -> 6
114 -> 112
115 -> 6
116 -> 112
116 -> 115
117 -> 114
117 -> 115
118 -> 6
119 -> 112
119 -> 118
120 -> 114
120 -> 118
122 -> 54
122 -> 57
123 -> 61
124 -> 3
125 -> 93
125 -> 126
125 -> 127
128 -> 93
128 -> 127
128 -> 129
130 -> 126
130 -> 129
131 -> 112
131 -> 130
132 -> 6
132 -> 130
132 -> 131
133 -> 126
133 -> 129
133 -> 131
134 -> 112
134 -> 126
134 -> 129
135 -> 126
135 -> 129
136 -> 129
137 -> 112
137 -> 136
138 -> 6
138 -> 136
138 -> 137
139 -> 126
139 -> 136
139 -> 137
140 -> 126
141 -> 112
141 -> 140
142 -> 6
142 -> 140
142 -> 141
143 -> 112
143 -> 126
143 -> 129
144 -> 126
144 -> 127
144 -> 129
144 -> 145
145 -> 268
146 -> 126
146 -> 127
146 -> 129
146 -> 147
147 -> 268
148 -> 126
148 -> 129
148 -> 149
149 -> 1049
150 -> 64
150 -> 148
151 -> 126
151 -> 127
151 -> 129
151 -> 152
152 -> 318
153 -> 126
153 -> 127
153 -> 129
153 -> 154
154 -> 318
155 -> 106
155 -> 126
155 -> 127
155 -> 129
156 -> 108
156 -> 126
156 -> 127
156 -> 129
157 -> 80
157 -> 81
157 -> 121
157 -> 126
157 -> 127
157 -> 129
157 -> 158
157 -> 159
157 -> 160
158 -> 1868
160 -> 1886
161 -> 61
162 -> 163
162 -> 164
162 -> 165
166 -> 162
166 -> 167
168 -> 163
168 -> 164
169 -> 167
169 -> 168
170 -> 167
170 -> 171
172 -> 171
172 -> 173
173 -> 3
173 -> 175
174 -> 175
175 -> 162
175 -> 167
176 -> 162
176 -> 167
176 -> 177
178 -> 3
178 -> 176
179 -> 93
179 -> 114
179 -> 180
179 -> 181
180 -> 4
180 -> 220
182 -> 106
182 -> 162
182 -> 163
182 -> 167
182 -> 171
182 -> 183
184 -> 108
184 -> 162
184 -> 163
184 -> 167
184 -> 171
185 -> 162
185 -> 167
185 -> 171
185 -> 183
185 -> 186
187 -> 3
187 -> 185
188 -> 3
188 -> 185
189 -> 3
189 -> 185
190 -> 191
190 -> 192
192 -> 544
192 -> 551
192 -> 1890
192 -> 1893
192 -> 1894
193 -> 61
194 -> 195
194 -> 196
197 -> 195
197 -> 198
199 -> 194
199 -> 197
200 -> 194
200 -> 201
202 -> 201
202 -> 203
203 -> 195
203 -> 206
204 -> 195
204 -> 205
205 -> 206
206 -> 196
207 -> 208
208 -> 334
209 -> 210
210 -> 334
211 -> 194
211 -> 197
211 -> 201
211 -> 212
211 -> 213
214 -> 108
214 -> 194
214 -> 197
214 -> 201
215 -> 216
215 -> 217
216 -> 2208
216 -> 2209
216 -> 2210
216 -> 2211
216 -> 2212
216 -> 2213
216 -> 2214
216 -> 2215
216 -> 2216
216 -> 2217
216 -> 2218
216 -> 2219
217 -> 81
217 -> 159
217 -> 2249
217 -> 2251
217 -> 2256
217 -> 2285
217 -> 2286
218 -> 215
218 -> 217
219 -> 112
219 -> 220
219 -> 221
220 -> 92
220 -> 740
221 -> 0
221 -> 226
221 -> 227
221 -> 228
222 -> 92
222 -> 112
222 -> 221
223 -> 112
223 -> 221
224 -> 220
224 -> 221
225 -> 92
225 -> 221
226 -> 95
228 -> 240
229 -> 0
229 -> 226
229 -> 227
229 -> 228
229 -> 230
229 -> 231
229 -> 232
229 -> 233
230 -> 1246
231 -> 3
231 -> 323
231 -> 540
231 -> 1248
234 -> 0
234 -> 226
234 -> 227
234 -> 228
234 -> 230
234 -> 231
234 -> 233
234 -> 235
236 -> 220
236 -> 237
237 -> 0
237 -> 226
237 -> 227
237 -> 228
237 -> 239
238 -> 92
238 -> 237
241 -> 227
242 -> 226
243 -> 60
244 -> 60
244 -> 149
245 -> 60
245 -> 114
245 -> 149
246 -> 60
246 -> 230
246 -> 247
246 -> 248
247 -> 3
247 -> 323
247 -> 540
247 -> 1248
249 -> 250
249 -> 251
251 -> 332
252 -> 250
252 -> 253
253 -> 332
254 -> 250
254 -> 255
255 -> 332
256 -> 257
257 -> 326
258 -> 259
259 -> 326
260 -> 261
261 -> 327
262 -> 263
263 -> 327
264 -> 265
265 -> 270
266 -> 267
267 -> 273
268 -> 95
268 -> 123
268 -> 124
269 -> 112
269 -> 114
269 -> 123
269 -> 124
269 -> 180
269 -> 220
270 -> 114
270 -> 123
270 -> 124
270 -> 180
270 -> 271
270 -> 272
271 -> 63
272 -> 1049
273 -> 114
273 -> 123
273 -> 124
273 -> 180
273 -> 271
273 -> 272
274 -> 114
274 -> 123
274 -> 124
274 -> 180
274 -> 275
276 -> 114
276 -> 123
276 -> 124
276 -> 180
276 -> 275
277 -> 123
277 -> 124
277 -> 126
277 -> 127
277 -> 129
277 -> 230
277 -> 278
277 -> 279
277 -> 280
277 -> 281
277 -> 282
277 -> 283
277 -> 284
278 -> 3
278 -> 323
278 -> 540
278 -> 1248
281 -> 268
285 -> 95
285 -> 124
286 -> 161
287 -> 112
287 -> 288
288 -> 95
288 -> 161
288 -> 240
288 -> 291
289 -> 112
289 -> 288
290 -> 288
292 -> 95
292 -> 161
292 -> 230
292 -> 240
292 -> 293
292 -> 294
292 -> 295
293 -> 3
293 -> 323
293 -> 540
293 -> 1248
296 -> 95
296 -> 161
296 -> 230
296 -> 240
296 -> 293
296 -> 294
296 -> 297
298 -> 95
298 -> 161
298 -> 240
298 -> 299
300 -> 161
301 -> 161
301 -> 240
302 -> 303
304 -> 168
304 -> 305
304 -> 306
307 -> 299
307 -> 306
307 -> 308
309 -> 56
309 -> 191
309 -> 192
310 -> 56
310 -> 59
310 -> 191
310 -> 192
311 -> 193
312 -> 313
313 -> 354
313 -> 355
313 -> 356
313 -> 357
313 -> 3904
314 -> 311
315 -> 193
315 -> 316
315 -> 317
316 -> 340
317 -> 194
317 -> 344
317 -> 350
317 -> 351
317 -> 352
317 -> 353
317 -> 354
317 -> 355
317 -> 356
317 -> 357
318 -> 95
318 -> 193
318 -> 316
318 -> 319
320 -> 114
320 -> 193
320 -> 194
320 -> 316
320 -> 319
320 -> 321
321 -> 4
321 -> 220
322 -> 3
322 -> 95
322 -> 163
322 -> 167
322 -> 181
322 -> 183
322 -> 193
322 -> 240
322 -> 316
322 -> 319
322 -> 323
322 -> 324
322 -> 325
325 -> 3
325 -> 167
325 -> 471
325 -> 557
325 -> 786
325 -> 850
326 -> 114
326 -> 180
326 -> 193
326 -> 271
326 -> 272
326 -> 316
326 -> 319
327 -> 114
327 -> 149
327 -> 180
327 -> 193
327 -> 271
327 -> 316
327 -> 319
328 -> 193
328 -> 306
328 -> 329
328 -> 330
328 -> 331
329 -> 350
329 -> 351
329 -> 352
329 -> 353
329 -> 354
329 -> 355
329 -> 356
329 -> 357
329 -> 3904
331 -> 212
331 -> 213
331 -> 369
331 -> 370
331 -> 373
331 -> 481
332 -> 95
332 -> 193
332 -> 316
332 -> 333
334 -> 95
334 -> 193
334 -> 194
334 -> 200
334 -> 230
334 -> 316
334 -> 335
334 -> 336
334 -> 337
334 -> 338
335 -> 3
335 -> 323
335 -> 540
335 -> 1248
338 -> 334
339 -> 193
340 -> 329
341 -> 114
341 -> 180
341 -> 275
341 -> 342
342 -> 244
343 -> 114
343 -> 180
343 -> 275
343 -> 342
344 -> 3
344 -> 203
344 -> 345
346 -> 194
346 -> 347
346 -> 348
347 -> 306
348 -> 194
348 -> 201
348 -> 212
348 -> 213
348 -> 344
348 -> 347
349 -> 317
349 -> 347
358 -> 359
359 -> 3
359 -> 203
360 -> 361
361 -> 3
361 -> 203
361 -> 362
362 -> 1049
363 -> 200
363 -> 347
363 -> 364
364 -> 201
364 -> 212
364 -> 213
364 -> 344
365 -> 200
365 -> 347
365 -> 366
366 -> 3
366 -> 201
366 -> 203
366 -> 212
366 -> 213
366 -> 345
366 -> 362
366 -> 367
368 -> 3
368 -> 6
368 -> 180
368 -> 369
368 -> 370
371 -> 3
371 -> 95
371 -> 163
371 -> 167
371 -> 181
371 -> 183
371 -> 240
371 -> 319
371 -> 325
372 -> 3
372 -> 201
372 -> 212
372 -> 213
372 -> 272
372 -> 330
372 -> 369
372 -> 373
372 -> 374
372 -> 375
372 -> 376
372 -> 377
376 -> 1049
377 -> 1049
378 -> 61
379 -> 380
379 -> 381
379 -> 382
383 -> 380
383 -> 381
383 -> 384
385 -> 382
385 -> 384
386 -> 382
387 -> 388
388 -> 200
388 -> 364
388 -> 3762
388 -> 3835
389 -> 390
389 -> 391
390 -> 332
391 -> 365
392 -> 195
392 -> 201
392 -> 384
392 -> 393
394 -> 108
394 -> 382
394 -> 384
395 -> 186
395 -> 323
395 -> 384
396 -> 61
397 -> 9
397 -> 11
397 -> 13
397 -> 15
397 -> 17
397 -> 19
397 -> 21
397 -> 23
397 -> 25
397 -> 27
397 -> 29
397 -> 31
397 -> 33
397 -> 35
397 -> 37
397 -> 39
397 -> 41
397 -> 43
397 -> 398
397 -> 399
397 -> 400
397 -> 401
397 -> 402
397 -> 403
397 -> 404
397 -> 405
397 -> 406
397 -> 407
397 -> 408
397 -> 409
397 -> 410
397 -> 411
397 -> 412
397 -> 413
397 -> 414
397 -> 415
397 -> 416
399 -> 417
411 -> 85
418 -> 419
418 -> 420
419 -> 468
420 -> 17
420 -> 21
420 -> 27
420 -> 31
420 -> 35
420 -> 39
420 -> 41
420 -> 43
420 -> 396
420 -> 397
420 -> 430
420 -> 431
420 -> 432
420 -> 433
420 -> 434
420 -> 435
420 -> 436
420 -> 437
420 -> 438
420 -> 439
420 -> 440
420 -> 441
420 -> 442
420 -> 443
420 -> 444
420 -> 445
420 -> 446
420 -> 447
420 -> 448
420 -> 449
420 -> 450
420 -> 451
420 -> 452
420 -> 453
420 -> 454
420 -> 455
420 -> 456
420 -> 457
420 -> 458
420 -> 459
420 -> 460
420 -> 461
420 -> 462
420 -> 463
420 -> 464
420 -> 465
421 -> 82
422 -> 423
422 -> 424
424 -> 444
424 -> 455
424 -> 460
424 -> 461
424 -> 469
425 -> 239
425 -> 426
426 -> 443
426 -> 445
426 -> 447
426 -> 449
426 -> 455
426 -> 460
426 -> 461
426 -> 469
427 -> 428
427 -> 429
429 -> 443
429 -> 445
429 -> 447
429 -> 449
429 -> 469
431 -> 357
431 -> 485
432 -> 356
432 -> 485
433 -> 355
433 -> 485
434 -> 354
434 -> 485
435 -> 485
435 -> 495
436 -> 353
436 -> 485
437 -> 352
437 -> 485
438 -> 485
438 -> 503
439 -> 351
439 -> 485
440 -> 350
440 -> 485
441 -> 485
441 -> 510
442 -> 485
442 -> 512
443 -> 431
443 -> 486
443 -> 487
444 -> 431
444 -> 487
444 -> 488
445 -> 432
445 -> 487
445 -> 489
446 -> 432
446 -> 487
446 -> 490
447 -> 433
447 -> 487
447 -> 491
448 -> 433
448 -> 487
448 -> 492
449 -> 434
449 -> 487
449 -> 493
450 -> 434
450 -> 487
450 -> 494
451 -> 434
451 -> 487
451 -> 496
452 -> 434
452 -> 487
452 -> 497
453 -> 435
453 -> 487
453 -> 498
454 -> 436
454 -> 487
454 -> 499
455 -> 436
455 -> 487
455 -> 500
456 -> 436
456 -> 487
456 -> 501
457 -> 437
457 -> 487
457 -> 502
458 -> 438
458 -> 487
458 -> 504
459 -> 438
459 -> 487
459 -> 505
460 -> 439
460 -> 487
460 -> 506
461 -> 440
461 -> 487
461 -> 507
462 -> 440
462 -> 487
462 -> 508
463 -> 440
463 -> 487
463 -> 509
464 -> 441
464 -> 487
464 -> 511
465 -> 442
465 -> 487
465 -> 513
466 -> 420
466 -> 467
468 -> 61
470 -> 165
470 -> 167
470 -> 471
470 -> 472
470 -> 473
470 -> 474
470 -> 475
470 -> 476
470 -> 477
474 -> 3
474 -> 1075
474 -> 1412
474 -> 3107
478 -> 5
478 -> 7
478 -> 167
478 -> 183
479 -> 5
479 -> 167
479 -> 171
479 -> 183
479 -> 469
480 -> 212
480 -> 213
480 -> 369
480 -> 370
480 -> 481
482 -> 201
482 -> 212
482 -> 213
482 -> 369
482 -> 483
484 -> 272
484 -> 376
485 -> 1137
485 -> 1138
485 -> 1690
485 -> 1738
487 -> 1137
487 -> 1138
487 -> 1690
487 -> 1691
487 -> 1692
514 -> 498
514 -> 515
515 -> 3
515 -> 373
515 -> 375
515 -> 599
515 -> 1639
516 -> 517
516 -> 518
517 -> 45
517 -> 933
517 -> 934
517 -> 935
519 -> 517
519 -> 520
519 -> 521
520 -> 498
520 -> 679
520 -> 955
521 -> 665
521 -> 1640
521 -> 1642
521 -> 1643
522 -> 517
522 -> 523
524 -> 61
525 -> 352
525 -> 353
525 -> 354
525 -> 355
525 -> 356
525 -> 486
525 -> 488
525 -> 489
525 -> 490
525 -> 491
525 -> 492
525 -> 493
525 -> 494
525 -> 495
525 -> 496
525 -> 497
525 -> 514
525 -> 515
525 -> 526
525 -> 527
526 -> 1153
527 -> 3
527 -> 472
527 -> 965
528 -> 3
528 -> 418
529 -> 82
529 -> 530
531 -> 423
531 -> 488
531 -> 530
531 -> 532
531 -> 533
532 -> 473
532 -> 474
533 -> 535
534 -> 239
534 -> 486
534 -> 489
534 -> 491
534 -> 493
534 -> 530
534 -> 532
534 -> 533
535 -> 500
535 -> 506
535 -> 507
535 -> 532
535 -> 577
535 -> 592
535 -> 594
535 -> 595
535 -> 596
536 -> 323
536 -> 529
536 -> 537
536 -> 538
539 -> 323
539 -> 529
539 -> 537
539 -> 540
539 -> 541
539 -> 542
542 -> 541
542 -> 549
543 -> 323
543 -> 529
543 -> 537
543 -> 540
543 -> 544
543 -> 545
543 -> 546
543 -> 547
543 -> 548
543 -> 549
543 -> 550
543 -> 551
552 -> 505
552 -> 509
552 -> 511
552 -> 553
552 -> 554
552 -> 555
552 -> 556
552 -> 557
552 -> 558
552 -> 559
552 -> 560
552 -> 561
552 -> 562
552 -> 563
552 -> 564
552 -> 565
552 -> 566
552 -> 567
553 -> 507
553 -> 649
553 -> 698
554 -> 508
554 -> 965
555 -> 165
555 -> 1624
556 -> 757
556 -> 786
558 -> 1006
558 -> 1419
559 -> 1624
560 -> 513
560 -> 675
561 -> 499
561 -> 599
562 -> 500
562 -> 599
563 -> 501
563 -> 599
564 -> 647
565 -> 504
565 -> 649
565 -> 698
566 -> 502
566 -> 599
567 -> 3
567 -> 557
567 -> 965
568 -> 569
570 -> 571
571 -> 572
571 -> 573
572 -> 574
574 -> 524
574 -> 598
575 -> 572
575 -> 576
577 -> 572
577 -> 576
578 -> 569
578 -> 572
578 -> 579
578 -> 580
581 -> 578
581 -> 582
583 -> 578
583 -> 582
583 -> 584
584 -> 572
584 -> 576
585 -> 582
585 -> 584
586 -> 578
586 -> 587
587 -> 572
588 -> 578
588 -> 589
589 -> 570
589 -> 571
590 -> 578
590 -> 589
591 -> 578
591 -> 582
591 -> 592
593 -> 591
596 -> 597
599 -> 3
599 -> 373
599 -> 375
599 -> 675
600 -> 583
601 -> 602
603 -> 604
605 -> 591
606 -> 506
606 -> 507
606 -> 592
606 -> 603
606 -> 607
606 -> 608
606 -> 609
610 -> 167
610 -> 183
610 -> 506
610 -> 507
610 -> 592
610 -> 603
610 -> 609
611 -> 593
612 -> 613
614 -> 615
616 -> 586
617 -> 618
619 -> 620
621 -> 568
621 -> 578
622 -> 507
622 -> 568
622 -> 607
622 -> 608
622 -> 620
623 -> 167
623 -> 183
623 -> 507
623 -> 568
623 -> 620
624 -> 620
624 -> 621
625 -> 613
626 -> 627
628 -> 528
629 -> 577
629 -> 578
629 -> 587
629 -> 630
629 -> 631
632 -> 572
632 -> 578
633 -> 586
634 -> 631
635 -> 586
636 -> 572
637 -> 528
638 -> 7
638 -> 615
638 -> 639
638 -> 640
641 -> 569
641 -> 572
642 -> 569
643 -> 591
644 -> 569
645 -> 569
645 -> 572
645 -> 578
646 -> 569
646 -> 577
646 -> 578
646 -> 587
646 -> 630
647 -> 506
647 -> 597
647 -> 648
647 -> 649
649 -> 177
649 -> 675
649 -> 1595
650 -> 581
651 -> 577
651 -> 578
651 -> 582
651 -> 584
651 -> 592
651 -> 630
651 -> 652
651 -> 653
654 -> 3
654 -> 577
654 -> 578
654 -> 582
654 -> 584
654 -> 592
654 -> 594
654 -> 595
654 -> 630
654 -> 651
654 -> 655
656 -> 5
656 -> 167
656 -> 183
656 -> 325
656 -> 469
656 -> 478
656 -> 506
656 -> 651
656 -> 657
656 -> 658
656 -> 659
658 -> 167
658 -> 471
658 -> 476
658 -> 477
658 -> 665
658 -> 1428
658 -> 1431
659 -> 3
659 -> 471
659 -> 557
659 -> 658
659 -> 850
659 -> 1428
659 -> 1429
659 -> 1430
659 -> 1431
660 -> 650
660 -> 661
660 -> 662
661 -> 1594
662 -> 577
662 -> 578
662 -> 585
662 -> 592
662 -> 630
662 -> 665
663 -> 469
663 -> 575
663 -> 578
663 -> 582
663 -> 584
663 -> 592
663 -> 615
663 -> 664
664 -> 377
664 -> 1598
665 -> 165
665 -> 473
665 -> 474
666 -> 618
667 -> 569
667 -> 578
667 -> 582
668 -> 667
669 -> 670
671 -> 575
671 -> 578
671 -> 582
672 -> 671
673 -> 639
674 -> 513
674 -> 675
675 -> 3
675 -> 1410
676 -> 665
677 -> 513
677 -> 678
677 -> 679
679 -> 3
679 -> 1075
679 -> 1412
679 -> 3109
680 -> 485
680 -> 512
681 -> 682
683 -> 590
684 -> 685
686 -> 687
688 -> 689
690 -> 691
692 -> 570
692 -> 588
693 -> 504
693 -> 570
693 -> 607
693 -> 608
694 -> 167
694 -> 183
694 -> 504
694 -> 570
695 -> 692
696 -> 697
699 -> 588
700 -> 699
700 -> 701
701 -> 469
701 -> 570
701 -> 573
701 -> 590
701 -> 594
701 -> 595
701 -> 653
701 -> 665
701 -> 699
701 -> 706
701 -> 707
702 -> 377
702 -> 700
703 -> 700
704 -> 570
704 -> 664
704 -> 699
704 -> 705
705 -> 714
708 -> 570
708 -> 588
709 -> 570
709 -> 588
710 -> 711
712 -> 594
713 -> 595
714 -> 590
714 -> 697
714 -> 715
716 -> 717
718 -> 578
719 -> 362
719 -> 718
719 -> 720
720 -> 594
720 -> 595
720 -> 665
720 -> 706
721 -> 377
721 -> 719
722 -> 578
722 -> 594
722 -> 595
722 -> 661
722 -> 720
723 -> 594
723 -> 595
723 -> 665
723 -> 706
724 -> 725
726 -> 569
726 -> 718
727 -> 569
727 -> 718
728 -> 670
729 -> 594
730 -> 595
731 -> 572
731 -> 718
732 -> 572
732 -> 718
733 -> 731
734 -> 735
736 -> 674
736 -> 737
736 -> 738
738 -> 740
738 -> 741
738 -> 742
738 -> 743
738 -> 744
738 -> 745
738 -> 746
739 -> 738
739 -> 740
740 -> 1239
740 -> 2015
740 -> 2942
740 -> 2944
740 -> 2967
740 -> 2968
742 -> 859
743 -> 418
744 -> 237
745 -> 3
745 -> 1123
745 -> 1124
745 -> 1125
747 -> 82
747 -> 530
747 -> 738
747 -> 748
749 -> 421
749 -> 738
749 -> 740
750 -> 421
750 -> 538
751 -> 421
751 -> 541
751 -> 542
752 -> 421
752 -> 549
753 -> 485
753 -> 505
753 -> 508
753 -> 509
753 -> 511
753 -> 512
753 -> 555
753 -> 557
753 -> 558
753 -> 559
753 -> 567
753 -> 754
753 -> 755
753 -> 756
753 -> 757
755 -> 1684
756 -> 3
756 -> 165
756 -> 1410
757 -> 3
757 -> 177
757 -> 472
757 -> 475
757 -> 557
757 -> 965
757 -> 1569
758 -> 674
758 -> 737
758 -> 759
759 -> 761
760 -> 740
760 -> 761
761 -> 3
761 -> 740
761 -> 741
761 -> 744
761 -> 745
761 -> 746
761 -> 761
761 -> 762
761 -> 763
762 -> 628
763 -> 3
763 -> 240
763 -> 1212
764 -> 82
764 -> 530
764 -> 537
764 -> 761
765 -> 529
765 -> 740
765 -> 759
766 -> 7
766 -> 615
766 -> 639
766 -> 640
767 -> 631
768 -> 530
768 -> 552
768 -> 557
768 -> 647
768 -> 769
769 -> 1680
770 -> 674
770 -> 737
770 -> 771
771 -> 773
772 -> 740
772 -> 773
773 -> 3
773 -> 740
773 -> 741
773 -> 744
773 -> 745
773 -> 746
773 -> 763
773 -> 773
773 -> 774
774 -> 628
775 -> 82
775 -> 530
775 -> 537
775 -> 773
776 -> 529
776 -> 740
776 -> 771
777 -> 7
777 -> 615
777 -> 639
777 -> 640
778 -> 631
779 -> 530
779 -> 552
779 -> 557
779 -> 647
779 -> 769
780 -> 61
781 -> 107
781 -> 542
782 -> 105
782 -> 538
783 -> 784
784 -> 785
785 -> 165
785 -> 557
785 -> 675
785 -> 786
787 -> 7
788 -> 789
790 -> 791
792 -> 793
794 -> 795
796 -> 797
798 -> 799
800 -> 5
800 -> 167
800 -> 183
800 -> 325
800 -> 469
800 -> 478
800 -> 659
800 -> 796
801 -> 802
803 -> 804
805 -> 165
805 -> 469
805 -> 473
805 -> 474
805 -> 787
805 -> 806
805 -> 807
806 -> 837
806 -> 838
807 -> 835
807 -> 836
808 -> 806
808 -> 807
808 -> 809
810 -> 640
811 -> 812
813 -> 814
815 -> 472
816 -> 817
818 -> 476
819 -> 7
819 -> 469
819 -> 820
821 -> 475
822 -> 7
822 -> 469
822 -> 797
822 -> 823
824 -> 479
824 -> 822
824 -> 825
825 -> 859
826 -> 5
826 -> 167
826 -> 183
826 -> 469
826 -> 822
826 -> 823
826 -> 825
827 -> 715
827 -> 806
828 -> 807
828 -> 829
830 -> 831
830 -> 832
833 -> 832
833 -> 834
835 -> 858
836 -> 857
837 -> 858
838 -> 857
839 -> 840
840 -> 784
840 -> 843
841 -> 840
842 -> 840
843 -> 850
843 -> 851
844 -> 7
844 -> 717
844 -> 735
844 -> 797
844 -> 806
844 -> 807
845 -> 7
845 -> 717
845 -> 735
845 -> 797
845 -> 799
845 -> 806
845 -> 807
846 -> 802
846 -> 806
846 -> 807
847 -> 804
847 -> 806
847 -> 807
848 -> 820
849 -> 823
851 -> 3
851 -> 417
851 -> 1153
852 -> 844
853 -> 845
854 -> 846
855 -> 847
856 -> 88
856 -> 737
857 -> 7
857 -> 17
857 -> 21
857 -> 27
857 -> 41
857 -> 423
858 -> 7
858 -> 19
858 -> 23
858 -> 29
858 -> 41
858 -> 469
859 -> 3
859 -> 741
859 -> 746
859 -> 763
859 -> 780
859 -> 859
859 -> 862
859 -> 863
859 -> 864
859 -> 865
859 -> 866
859 -> 867
859 -> 868
859 -> 869
859 -> 870
859 -> 871
860 -> 740
860 -> 859
861 -> 859
862 -> 740
865 -> 869
866 -> 27
866 -> 82
866 -> 95
866 -> 240
866 -> 286
866 -> 715
866 -> 2727
867 -> 7
867 -> 17
867 -> 3013
867 -> 3160
868 -> 3
868 -> 740
868 -> 741
868 -> 746
868 -> 763
868 -> 868
868 -> 1055
869 -> 3
869 -> 740
869 -> 741
869 -> 746
869 -> 763
869 -> 869
869 -> 987
870 -> 418
871 -> 418
872 -> 88
872 -> 859
872 -> 864
873 -> 859
873 -> 874
873 -> 875
874 -> 82
874 -> 530
875 -> 537
876 -> 877
877 -> 740
877 -> 859
877 -> 874
877 -> 875
878 -> 3
878 -> 423
878 -> 530
878 -> 531
879 -> 3
879 -> 239
879 -> 530
879 -> 534
880 -> 538
880 -> 874
880 -> 875
881 -> 107
881 -> 541
881 -> 542
881 -> 874
881 -> 875
882 -> 25
882 -> 75
882 -> 80
882 -> 81
882 -> 121
882 -> 158
882 -> 159
882 -> 160
882 -> 549
882 -> 864
882 -> 874
882 -> 875
882 -> 876
882 -> 883
882 -> 884
882 -> 885
884 -> 2206
886 -> 7
886 -> 397
886 -> 530
886 -> 537
886 -> 557
886 -> 615
886 -> 627
886 -> 639
886 -> 697
886 -> 717
886 -> 735
886 -> 754
886 -> 783
886 -> 785
886 -> 829
886 -> 836
886 -> 839
886 -> 840
886 -> 841
886 -> 842
886 -> 864
886 -> 887
886 -> 888
886 -> 889
886 -> 890
886 -> 891
886 -> 892
886 -> 893
886 -> 894
886 -> 895
886 -> 896
886 -> 897
886 -> 898
886 -> 899
886 -> 900
886 -> 901
886 -> 902
886 -> 903
904 -> 573
905 -> 517
905 -> 906
907 -> 517
907 -> 908
909 -> 517
909 -> 910
910 -> 499
910 -> 679
910 -> 952
910 -> 953
911 -> 711
912 -> 517
912 -> 913
914 -> 517
914 -> 915
916 -> 707
917 -> 578
918 -> 517
918 -> 919
920 -> 578
920 -> 665
920 -> 706
920 -> 917
921 -> 517
921 -> 920
921 -> 922
922 -> 513
922 -> 679
922 -> 952
922 -> 953
923 -> 706
923 -> 917
924 -> 706
924 -> 917
925 -> 923
926 -> 923
927 -> 923
928 -> 485
928 -> 512
929 -> 517
929 -> 930
931 -> 899
932 -> 737
934 -> 61
934 -> 473
934 -> 678
934 -> 936
934 -> 937
934 -> 938
934 -> 940
934 -> 941
934 -> 942
934 -> 943
934 -> 944
934 -> 945
934 -> 946
934 -> 947
934 -> 948
934 -> 949
934 -> 950
934 -> 951
936 -> 937
938 -> 380
938 -> 937
938 -> 939
940 -> 682
941 -> 2512
941 -> 2940
941 -> 2941
954 -> 506
954 -> 679
954 -> 952
954 -> 953
956 -> 517
956 -> 957
958 -> 517
958 -> 959
960 -> 517
960 -> 954
961 -> 517
961 -> 962
963 -> 517
963 -> 964
965 -> 3
965 -> 85
965 -> 675
966 -> 967
968 -> 7
968 -> 969
970 -> 797
970 -> 969
971 -> 799
971 -> 969
972 -> 969
972 -> 973
974 -> 969
974 -> 975
976 -> 802
976 -> 969
977 -> 804
977 -> 969
978 -> 578
978 -> 665
978 -> 979
978 -> 980
979 -> 475
979 -> 969
980 -> 469
981 -> 715
981 -> 969
982 -> 829
982 -> 969
983 -> 883
983 -> 969
984 -> 900
985 -> 737
985 -> 865
986 -> 740
986 -> 869
987 -> 637
988 -> 82
988 -> 530
988 -> 537
988 -> 869
989 -> 529
989 -> 740
989 -> 865
990 -> 530
990 -> 552
991 -> 992
993 -> 61
994 -> 92
995 -> 996
997 -> 998
999 -> 737
999 -> 1000
999 -> 1001
999 -> 1002
1001 -> 418
1003 -> 92
1003 -> 421
1003 -> 740
1004 -> 421
1004 -> 549
1005 -> 82
1005 -> 505
1005 -> 509
1005 -> 511
1005 -> 530
1005 -> 556
1005 -> 557
1005 -> 1006
1005 -> 1007
1006 -> 557
1006 -> 969
1006 -> 1007
1007 -> 965
1007 -> 969
1008 -> 421
1008 -> 538
1009 -> 421
1009 -> 541
1009 -> 542
1010 -> 421
1010 -> 993
1011 -> 1012
1012 -> 508
1012 -> 735
1012 -> 965
1012 -> 1000
1013 -> 967
1013 -> 1000
1014 -> 7
1014 -> 969
1015 -> 797
1015 -> 969
1016 -> 799
1016 -> 969
1017 -> 969
1017 -> 973
1018 -> 969
1018 -> 975
1019 -> 802
1019 -> 969
1020 -> 804
1020 -> 969
1021 -> 7
1021 -> 665
1021 -> 969
1021 -> 980
1021 -> 1022
1022 -> 475
1022 -> 969
1023 -> 715
1023 -> 969
1024 -> 829
1024 -> 969
1025 -> 883
1025 -> 969
1026 -> 61
1027 -> 674
1027 -> 737
1027 -> 1026
1027 -> 1028
1028 -> 1030
1029 -> 740
1029 -> 1030
1030 -> 740
1030 -> 741
1030 -> 744
1030 -> 745
1030 -> 746
1030 -> 763
1030 -> 1030
1030 -> 1031
1031 -> 528
1032 -> 82
1032 -> 530
1032 -> 1028
1032 -> 1033
1034 -> 529
1034 -> 740
1034 -> 1028
1035 -> 536
1035 -> 1036
1037 -> 539
1037 -> 1036
1037 -> 1038
1039 -> 1040
1040 -> 1044
1041 -> 577
1041 -> 587
1041 -> 630
1041 -> 1039
1041 -> 1040
1042 -> 572
1042 -> 1039
1043 -> 586
1045 -> 1040
1046 -> 1040
1047 -> 572
1048 -> 1040
1048 -> 1049
1050 -> 530
1050 -> 552
1050 -> 557
1050 -> 647
1051 -> 737
1051 -> 1052
1052 -> 868
1053 -> 473
1053 -> 474
1053 -> 507
1054 -> 740
1054 -> 868
1055 -> 637
1056 -> 82
1056 -> 530
1056 -> 537
1056 -> 868
1057 -> 529
1057 -> 740
1057 -> 1052
1058 -> 535
1058 -> 1053
1059 -> 1060
1061 -> 530
1061 -> 552
1061 -> 769
1062 -> 3
1062 -> 1063
1063 -> 418
1064 -> 240
1064 -> 421
1064 -> 530
1064 -> 1062
1065 -> 96
1065 -> 421
1065 -> 530
1065 -> 740
1065 -> 1062
1065 -> 1064
1066 -> 1067
1067 -> 530
1067 -> 1068
1068 -> 1176
1068 -> 1607
1068 -> 1608
1069 -> 530
1069 -> 657
1070 -> 108
1070 -> 530
1071 -> 530
1071 -> 1072
1073 -> 3
1074 -> 75
1074 -> 80
1074 -> 81
1074 -> 121
1074 -> 158
1074 -> 159
1074 -> 160
1074 -> 530
1074 -> 1075
1074 -> 1076
1074 -> 1077
1074 -> 1078
1074 -> 1079
1080 -> 1074
1081 -> 850
1081 -> 851
1082 -> 1083
1082 -> 1084
1082 -> 1085
1083 -> 1073
1083 -> 1077
1086 -> 1083
1086 -> 1084
1086 -> 1087
1088 -> 1083
1088 -> 1084
1088 -> 1089
1090 -> 1083
1090 -> 1084
1090 -> 1091
1092 -> 481
1092 -> 1083
1092 -> 1084
1093 -> 483
1093 -> 1083
1093 -> 1084
1094 -> 370
1094 -> 1083
1094 -> 1084
1095 -> 1083
1095 -> 1084
1095 -> 1096
1097 -> 165
1097 -> 965
1098 -> 7
1098 -> 969
1098 -> 1083
1099 -> 789
1099 -> 969
1099 -> 1083
1100 -> 793
1100 -> 969
1100 -> 1083
1101 -> 797
1101 -> 969
1101 -> 1083
1102 -> 799
1102 -> 969
1102 -> 1083
1103 -> 969
1103 -> 973
1103 -> 1083
1104 -> 802
1104 -> 969
1104 -> 1083
1105 -> 804
1105 -> 969
1105 -> 1083
1106 -> 469
1106 -> 969
1106 -> 1083
1107 -> 809
1107 -> 969
1107 -> 1083
1108 -> 640
1108 -> 969
1108 -> 1083
1109 -> 812
1109 -> 969
1109 -> 1083
1110 -> 715
1110 -> 969
1110 -> 1083
1111 -> 829
1111 -> 969
1111 -> 1083
1112 -> 969
1112 -> 1083
1112 -> 1113
1114 -> 969
1114 -> 1083
1114 -> 1115
1116 -> 969
1116 -> 1083
1116 -> 1117
1118 -> 883
1118 -> 969
1118 -> 1083
1119 -> 820
1119 -> 969
1119 -> 1083
1120 -> 823
1120 -> 969
1120 -> 1083
1121 -> 831
1121 -> 969
1122 -> 834
1122 -> 969
1125 -> 418
1126 -> 1127
1127 -> 89
1127 -> 96
1127 -> 98
1127 -> 421
1127 -> 530
1127 -> 740
1127 -> 745
1127 -> 1128
1128 -> 46
1128 -> 96
1128 -> 862
1128 -> 1077
1128 -> 1347
1128 -> 2727
1128 -> 3605
1128 -> 3638
1129 -> 423
1129 -> 530
1129 -> 1083
1130 -> 239
1130 -> 530
1130 -> 1083
1131 -> 428
1131 -> 530
1131 -> 1083
1132 -> 1133
1132 -> 1134
1132 -> 1135
1134 -> 417
1134 -> 1081
1134 -> 1136
1134 -> 1137
1134 -> 1138
1135 -> 85
1135 -> 557
1135 -> 786
1135 -> 814
1135 -> 1097
1135 -> 1134
1135 -> 1136
1135 -> 1137
1135 -> 1138
1139 -> 106
1139 -> 530
1139 -> 657
1139 -> 1076
1139 -> 1078
1140 -> 107
1140 -> 108
1140 -> 530
1140 -> 1076
1140 -> 1078
1141 -> 53
1141 -> 530
1141 -> 1072
1141 -> 1076
1141 -> 1078
1142 -> 3
1142 -> 1143
1143 -> 418
1144 -> 240
1144 -> 421
1144 -> 530
1144 -> 1142
1145 -> 96
1145 -> 421
1145 -> 530
1145 -> 740
1145 -> 1142
1145 -> 1144
1146 -> 1147
1147 -> 1148
1148 -> 1176
1148 -> 1607
1148 -> 1688
1149 -> 530
1149 -> 657
1150 -> 108
1150 -> 530
1151 -> 530
1151 -> 1072
1152 -> 417
1152 -> 850
1152 -> 887
1152 -> 1153
1152 -> 1154
1153 -> 3
1153 -> 1458
1154 -> 375
1155 -> 373
1155 -> 1156
1157 -> 375
1158 -> 1085
1158 -> 1159
1159 -> 1171
1160 -> 1087
1160 -> 1159
1161 -> 1089
1161 -> 1159
1162 -> 1091
1162 -> 1159
1163 -> 481
1163 -> 1164
1163 -> 1165
1164 -> 1049
1164 -> 1169
1165 -> 1049
1165 -> 1170
1166 -> 483
1166 -> 1164
1166 -> 1165
1167 -> 370
1167 -> 1164
1168 -> 1096
1168 -> 1164
1170 -> 1169
1170 -> 2429
1170 -> 2431
1171 -> 1049
1171 -> 1169
1172 -> 538
1172 -> 657
1173 -> 108
1173 -> 542
1174 -> 85
1174 -> 165
1174 -> 675
1174 -> 887
1174 -> 1154
1175 -> 1176
1177 -> 7
1177 -> 1171
1178 -> 789
1178 -> 1171
1179 -> 793
1179 -> 1171
1180 -> 791
1181 -> 795
1182 -> 797
1182 -> 1171
1182 -> 1183
1182 -> 1184
1183 -> 1049
1183 -> 1169
1184 -> 1169
1184 -> 3002
1185 -> 799
1185 -> 1171
1185 -> 1183
1185 -> 1184
1186 -> 973
1186 -> 1171
1186 -> 1183
1186 -> 1184
1187 -> 165
1187 -> 469
1187 -> 473
1187 -> 549
1187 -> 1075
1187 -> 1171
1187 -> 1177
1187 -> 1184
1187 -> 1188
1187 -> 1189
1187 -> 1190
1188 -> 3
1188 -> 3115
1189 -> 3
1189 -> 1075
1189 -> 1412
1189 -> 3107
1191 -> 809
1191 -> 1171
1191 -> 1184
1192 -> 802
1192 -> 1183
1193 -> 804
1193 -> 1183
1194 -> 640
1194 -> 1171
1195 -> 812
1195 -> 1171
1196 -> 715
1196 -> 1171
1196 -> 1183
1196 -> 1184
1197 -> 829
1197 -> 1171
1197 -> 1183
1197 -> 1184
1198 -> 883
1198 -> 1171
1199 -> 472
1200 -> 820
1200 -> 1171
1201 -> 817
1202 -> 476
1203 -> 475
1204 -> 823
1204 -> 1171
1205 -> 1206
1207 -> 477
1208 -> 831
1209 -> 834
1210 -> 538
1210 -> 657
1211 -> 108
1211 -> 542
1212 -> 418
1213 -> 754
1214 -> 530
1215 -> 530
1215 -> 740
1215 -> 754
1215 -> 1212
1216 -> 423
1216 -> 530
1216 -> 1217
1217 -> 549
1217 -> 1169
1217 -> 1170
1217 -> 1188
1217 -> 1213
1218 -> 239
1218 -> 530
1218 -> 1217
1219 -> 428
1219 -> 530
1219 -> 1169
1219 -> 1213
1219 -> 1217
1220 -> 1133
1220 -> 1221
1220 -> 1222
1221 -> 417
1221 -> 1136
1221 -> 1137
1221 -> 1138
1221 -> 1152
1221 -> 1213
1222 -> 85
1222 -> 557
1222 -> 786
1222 -> 814
1222 -> 1136
1222 -> 1137
1222 -> 1138
1222 -> 1174
1222 -> 1213
1222 -> 1221
1223 -> 530
1223 -> 538
1223 -> 657
1223 -> 1213
1224 -> 108
1224 -> 530
1224 -> 542
1224 -> 1213
1225 -> 530
1225 -> 549
1225 -> 1213
1226 -> 61
1227 -> 112
1228 -> 92
1229 -> 95
1230 -> 291
1230 -> 1227
1231 -> 1230
1232 -> 329
1233 -> 540
1233 -> 1234
1235 -> 1236
1236 -> 1226
1237 -> 740
1237 -> 1238
1237 -> 1239
1237 -> 1240
1239 -> 3
1239 -> 546
1239 -> 678
1239 -> 682
1239 -> 740
1239 -> 1334
1239 -> 2568
1239 -> 2970
1239 -> 2971
1239 -> 2972
1239 -> 2973
1239 -> 2974
1239 -> 2977
1239 -> 2978
1239 -> 2979
1239 -> 2980
1240 -> 92
1240 -> 323
1240 -> 540
1240 -> 738
1240 -> 865
1240 -> 872
1240 -> 1052
1240 -> 1241
1240 -> 1242
1240 -> 1243
1244 -> 1243
1244 -> 1245
1246 -> 61
1246 -> 1247
1247 -> 61
1248 -> 108
1248 -> 303
1248 -> 1277
1248 -> 1278
1249 -> 1250
1249 -> 1251
1251 -> 306
1252 -> 1253
1252 -> 1254
1253 -> 1257
1253 -> 1258
1253 -> 1259
1254 -> 306
1254 -> 657
1254 -> 1234
1254 -> 1247
1255 -> 1253
1255 -> 1256
1256 -> 657
1256 -> 1279
1258 -> 3156
1260 -> 1250
1260 -> 1251
1261 -> 1254
1261 -> 1262
1262 -> 1257
1262 -> 1258
1262 -> 1259
1263 -> 1256
1263 -> 1262
1264 -> 1250
1264 -> 1251
1265 -> 1254
1265 -> 1266
1266 -> 1257
1266 -> 1258
1266 -> 1259
1267 -> 1256
1267 -> 1266
1268 -> 1250
1268 -> 1251
1269 -> 1254
1269 -> 1270
1270 -> 1257
1270 -> 1258
1270 -> 1259
1271 -> 1256
1271 -> 1270
1272 -> 1250
1272 -> 1251
1273 -> 1254
1273 -> 1274
1274 -> 1257
1274 -> 1258
1274 -> 1259
1275 -> 1256
1275 -> 1274
1276 -> 1250
1277 -> 61
1278 -> 323
1278 -> 540
1278 -> 547
1278 -> 548
1278 -> 551
1278 -> 1234
1278 -> 1279
1278 -> 1281
1278 -> 1282
1278 -> 1283
1279 -> 1247
1279 -> 1280
1284 -> 1285
1285 -> 1226
1286 -> 1243
1287 -> 1288
1288 -> 1226
1289 -> 1290
1291 -> 1290
1292 -> 1293
1293 -> 1226
1294 -> 1295
1296 -> 112
1296 -> 1297
1296 -> 1298
1299 -> 1300
1300 -> 1226
1301 -> 63
1302 -> 63
1302 -> 95
1302 -> 333
1302 -> 1303
1304 -> 1305
1305 -> 1226
1306 -> 4
1306 -> 82
1306 -> 92
1306 -> 96
1307 -> 4
1307 -> 95
1308 -> 6
1309 -> 1310
1310 -> 1226
1311 -> 1312
1313 -> 126
1313 -> 129
1313 -> 319
1313 -> 1303
1313 -> 1314
1314 -> 127
1314 -> 220
1315 -> 127
1315 -> 1297
1315 -> 1316
1317 -> 1318
1318 -> 1226
1319 -> 96
1319 -> 1320
1320 -> 95
1320 -> 163
1321 -> 167
1321 -> 183
1321 -> 299
1321 -> 608
1322 -> 1323
1323 -> 1226
1324 -> 1295
1325 -> 195
1326 -> 1327
1327 -> 1226
1328 -> 158
1328 -> 1329
1328 -> 1330
1330 -> 1896
1330 -> 1898
1330 -> 1899
1330 -> 1907
1331 -> 96
1331 -> 158
1331 -> 291
1331 -> 1330
1331 -> 1332
1333 -> 3
1333 -> 272
1333 -> 376
1333 -> 546
1333 -> 682
1333 -> 1334
1333 -> 1335
1333 -> 1336
1333 -> 1337
1338 -> 3
1338 -> 195
1338 -> 216
1338 -> 682
1338 -> 1339
1338 -> 1340
1338 -> 1341
1338 -> 1342
1340 -> 2259
1340 -> 2260
1340 -> 2286
1340 -> 2288
1341 -> 2266
1342 -> 3
1342 -> 682
1342 -> 1914
1342 -> 2259
1342 -> 2260
1342 -> 2288
1342 -> 2289
1343 -> 3
1343 -> 158
1343 -> 216
1343 -> 275
1343 -> 546
1343 -> 682
1343 -> 1077
1343 -> 1232
1343 -> 1297
1343 -> 1298
1343 -> 1329
1343 -> 1334
1343 -> 1335
1343 -> 1341
1343 -> 1344
1343 -> 1345
1343 -> 1346
1343 -> 1347
1345 -> 207
1345 -> 1342
1345 -> 2288
1346 -> 3
1346 -> 93
1346 -> 96
1346 -> 682
1346 -> 1789
1346 -> 1896
1346 -> 1898
1346 -> 1899
1346 -> 1900
1346 -> 1902
1346 -> 1903
1346 -> 1904
1346 -> 1914
1346 -> 1915
1348 -> 61
1349 -> 165
1349 -> 1350
1351 -> 1350
1351 -> 1352
1353 -> 1354
1353 -> 1355
1356 -> 1357
1357 -> 1350
1357 -> 1354
1357 -> 1358
1357 -> 1359
1360 -> 1361
1361 -> 1350
1361 -> 1354
1361 -> 1358
1361 -> 1362
1363 -> 557
1363 -> 1350
1364 -> 786
1364 -> 1350
1365 -> 472
1365 -> 1350
1366 -> 817
1366 -> 1350
1366 -> 1358
1367 -> 475
1367 -> 1350
1368 -> 1206
1368 -> 1350
1368 -> 1358
1369 -> 831
1369 -> 1350
1370 -> 834
1370 -> 1350
1371 -> 3
1371 -> 1349
1371 -> 1354
1371 -> 1372
1373 -> 3
1373 -> 608
1373 -> 1349
1373 -> 1354
1374 -> 106
1374 -> 163
1374 -> 1349
1374 -> 1354
1374 -> 1358
1375 -> 108
1375 -> 163
1375 -> 1349
1375 -> 1354
1375 -> 1358
1376 -> 1351
1377 -> 61
1378 -> 165
1378 -> 1379
1380 -> 1352
1380 -> 1379
1381 -> 1382
1383 -> 7
1383 -> 1379
1383 -> 1384
1385 -> 1355
1385 -> 1383
1386 -> 1387
1387 -> 789
1387 -> 1379
1387 -> 1384
1388 -> 1389
1389 -> 793
1389 -> 1379
1389 -> 1384
1390 -> 6
1390 -> 112
1390 -> 802
1390 -> 1379
1390 -> 1384
1391 -> 6
1391 -> 112
1391 -> 804
1391 -> 1379
1391 -> 1384
1392 -> 557
1392 -> 1379
1393 -> 786
1393 -> 1379
1394 -> 640
1394 -> 1379
1394 -> 1384
1395 -> 812
1395 -> 1379
1395 -> 1384
1396 -> 814
1396 -> 1379
1397 -> 472
1397 -> 1379
1398 -> 820
1398 -> 1379
1398 -> 1384
1399 -> 475
1399 -> 1379
1400 -> 823
1400 -> 1379
1400 -> 1384
1401 -> 831
1401 -> 1379
1402 -> 834
1402 -> 1379
1403 -> 883
1403 -> 1379
1403 -> 1384
1404 -> 145
1404 -> 715
1404 -> 797
1404 -> 1379
1404 -> 1381
1404 -> 1384
1405 -> 3
1405 -> 1372
1405 -> 1378
1405 -> 1383
1406 -> 3
1406 -> 608
1406 -> 1378
1406 -> 1383
1407 -> 106
1407 -> 657
1407 -> 1378
1407 -> 1381
1407 -> 1383
1408 -> 108
1408 -> 1378
1408 -> 1381
1408 -> 1383
1409 -> 1380
1410 -> 61
1411 -> 1412
1413 -> 1414
1413 -> 1415
1415 -> 1355
1416 -> 1413
1417 -> 1415
1418 -> 608
1418 -> 1417
1418 -> 1419
1420 -> 1414
1420 -> 1421
1421 -> 1415
1422 -> 1420
1423 -> 1421
1424 -> 608
1424 -> 1419
1424 -> 1423
1425 -> 481
1425 -> 1426
1427 -> 483
1427 -> 1426
1428 -> 1440
1431 -> 1439
1432 -> 3
1432 -> 471
1432 -> 557
1432 -> 658
1432 -> 850
1432 -> 1428
1432 -> 1429
1432 -> 1431
1432 -> 1433
1434 -> 661
1434 -> 1414
1434 -> 1435
1434 -> 1436
1434 -> 1437
1435 -> 1447
1436 -> 1448
1438 -> 658
1438 -> 661
1438 -> 1439
1438 -> 1440
1439 -> 1447
1440 -> 1448
1441 -> 370
1441 -> 1426
1442 -> 1096
1442 -> 1426
1443 -> 1437
1443 -> 1444
1444 -> 679
1444 -> 1337
1444 -> 1419
1445 -> 1443
1446 -> 658
1446 -> 1444
1449 -> 682
1449 -> 1355
1449 -> 1448
1450 -> 1449
1451 -> 1425
1451 -> 1452
1453 -> 1451
1453 -> 1452
1454 -> 1451
1454 -> 1452
1455 -> 1414
1455 -> 1451
1455 -> 1452
1456 -> 1452
1457 -> 1411
1458 -> 61
1459 -> 345
1460 -> 377
1460 -> 1461
1461 -> 375
1462 -> 377
1462 -> 1087
1463 -> 375
1464 -> 375
1464 -> 1465
1465 -> 1049
1466 -> 377
1466 -> 1096
1467 -> 375
1468 -> 1459
1469 -> 1176
1470 -> 7
1471 -> 557
1472 -> 786
1473 -> 472
1474 -> 475
1475 -> 715
1476 -> 373
1477 -> 1087
1478 -> 1089
1479 -> 1091
1480 -> 481
1481 -> 483
1482 -> 1096
1483 -> 375
1484 -> 1485
1485 -> 756
1486 -> 1412
1487 -> 85
1488 -> 1176
1489 -> 7
1490 -> 789
1491 -> 1492
1493 -> 1359
1494 -> 1495
1496 -> 791
1497 -> 793
1498 -> 1499
1500 -> 1362
1501 -> 1502
1503 -> 795
1504 -> 797
1505 -> 799
1506 -> 1430
1507 -> 1433
1508 -> 973
1509 -> 975
1510 -> 802
1511 -> 804
1512 -> 469
1513 -> 809
1514 -> 1515
1516 -> 305
1517 -> 1518
1519 -> 557
1520 -> 786
1521 -> 640
1522 -> 812
1523 -> 814
1524 -> 472
1525 -> 820
1526 -> 817
1527 -> 476
1528 -> 475
1529 -> 823
1530 -> 1206
1531 -> 477
1532 -> 831
1533 -> 834
1534 -> 715
1535 -> 829
1536 -> 1113
1537 -> 1115
1538 -> 1117
1539 -> 883
1540 -> 1486
1541 -> 1542
1542 -> 3
1542 -> 850
1542 -> 1458
1543 -> 345
1544 -> 417
1545 -> 373
1546 -> 1547
1548 -> 1549
1550 -> 1085
1551 -> 1087
1552 -> 1553
1554 -> 1555
1556 -> 1089
1557 -> 1091
1558 -> 481
1559 -> 483
1560 -> 370
1561 -> 1096
1562 -> 375
1563 -> 1564
1565 -> 657
1566 -> 108
1567 -> 1568
1569 -> 3
1569 -> 851
1570 -> 1571
1571 -> 472
1571 -> 475
1571 -> 965
1571 -> 969
1572 -> 1472
1573 -> 7
1573 -> 969
1574 -> 797
1574 -> 969
1575 -> 799
1575 -> 969
1576 -> 661
1576 -> 1573
1576 -> 1577
1577 -> 7
1577 -> 469
1577 -> 665
1577 -> 969
1577 -> 1580
1578 -> 802
1578 -> 969
1579 -> 804
1579 -> 969
1581 -> 469
1581 -> 715
1581 -> 969
1581 -> 1573
1582 -> 883
1582 -> 969
1582 -> 1573
1582 -> 1577
1583 -> 61
1584 -> 1049
1585 -> 1049
1586 -> 1049
1587 -> 1049
1587 -> 1588
1587 -> 1589
1587 -> 1590
1591 -> 377
1591 -> 1465
1592 -> 473
1592 -> 1593
1593 -> 3
1593 -> 1075
1593 -> 3107
1594 -> 3
1595 -> 1153
1596 -> 664
1597 -> 1598
1598 -> 1598
1598 -> 1602
1599 -> 1600
1601 -> 1602
1603 -> 1600
1604 -> 1602
1605 -> 664
1606 -> 1598
1608 -> 1484
1609 -> 5
1609 -> 82
1609 -> 149
1609 -> 240
1609 -> 799
1609 -> 1171
1609 -> 1184
1609 -> 1489
1609 -> 1610
1611 -> 1612
1612 -> 1458
1613 -> 357
1614 -> 377
1615 -> 377
1616 -> 272
1617 -> 272
1618 -> 149
1618 -> 377
1619 -> 149
1620 -> 375
1620 -> 1621
1622 -> 1621
1623 -> 1621
1624 -> 3
1624 -> 472
1624 -> 475
1624 -> 965
1625 -> 1470
1626 -> 665
1626 -> 1425
1626 -> 1625
1627 -> 665
1627 -> 1427
1627 -> 1625
1628 -> 661
1628 -> 1625
1628 -> 1629
1629 -> 665
1629 -> 980
1630 -> 640
1630 -> 969
1631 -> 812
1631 -> 969
1632 -> 814
1632 -> 969
1633 -> 715
1633 -> 969
1634 -> 829
1634 -> 969
1635 -> 969
1635 -> 1113
1636 -> 969
1636 -> 1115
1637 -> 969
1637 -> 1117
1638 -> 883
1638 -> 969
1640 -> 1639
1641 -> 661
1641 -> 1639
1641 -> 1640
1641 -> 1642
1641 -> 1643
1644 -> 665
1644 -> 1414
1644 -> 1642
1644 -> 1645
1645 -> 1436
1646 -> 1465
1647 -> 272
1648 -> 272
1648 -> 1465
1649 -> 149
1650 -> 1651
1652 -> 108
1652 -> 1651
1653 -> 3
1653 -> 557
1653 -> 965
1653 -> 1569
1653 -> 1654
1655 -> 7
1655 -> 969
1656 -> 661
1656 -> 1655
1656 -> 1657
1657 -> 7
1657 -> 469
1657 -> 665
1657 -> 969
1657 -> 1658
1659 -> 715
1659 -> 969
1660 -> 829
1660 -> 969
1661 -> 969
1661 -> 1113
1662 -> 969
1662 -> 1115
1663 -> 969
1663 -> 1117
1664 -> 883
1664 -> 969
1665 -> 1084
1665 -> 1547
1666 -> 1084
1666 -> 1549
1667 -> 1084
1667 -> 1085
1668 -> 1084
1668 -> 1087
1669 -> 1084
1669 -> 1555
1670 -> 376
1670 -> 1084
1670 -> 1555
1671 -> 1084
1671 -> 1091
1672 -> 376
1672 -> 1084
1672 -> 1091
1673 -> 483
1673 -> 1084
1674 -> 376
1674 -> 483
1674 -> 1084
1675 -> 370
1675 -> 1084
1676 -> 1084
1676 -> 1096
1677 -> 375
1677 -> 1084
1678 -> 657
1678 -> 1084
1678 -> 1651
1679 -> 108
1679 -> 1084
1679 -> 1651
1680 -> 1484
1680 -> 1524
1681 -> 1489
1682 -> 473
1682 -> 474
1682 -> 507
1682 -> 665
1682 -> 1512
1682 -> 1528
1683 -> 5
1683 -> 1610
1684 -> 1484
1684 -> 1524
1685 -> 1489
1686 -> 665
1686 -> 1512
1686 -> 1528
1687 -> 5
1687 -> 1610
1688 -> 1484
1689 -> 665
1689 -> 1512
1689 -> 1525
1689 -> 1529
1692 -> 887
1692 -> 1410
1693 -> 1412
1694 -> 1695
1695 -> 1382
1696 -> 1695
1697 -> 1695
1698 -> 1695
1699 -> 1695
1700 -> 1695
1701 -> 1695
1702 -> 1695
1703 -> 1695
1704 -> 1695
1705 -> 1695
1706 -> 481
1706 -> 1691
1707 -> 483
1707 -> 1691
1708 -> 1695
1709 -> 1695
1710 -> 1695
1711 -> 1695
1712 -> 370
1712 -> 1691
1713 -> 1096
1713 -> 1691
1714 -> 1695
1715 -> 1695
1716 -> 1695
1717 -> 1695
1718 -> 1695
1719 -> 1695
1720 -> 1695
1721 -> 1695
1722 -> 1695
1723 -> 1695
1724 -> 1695
1725 -> 1695
1726 -> 1695
1727 -> 1695
1728 -> 1695
1729 -> 1695
1730 -> 1695
1731 -> 1695
1732 -> 1695
1733 -> 1695
1734 -> 1695
1735 -> 1695
1736 -> 1695
1737 -> 487
1738 -> 1458
1739 -> 345
1740 -> 1741
1741 -> 1382
1742 -> 1741
1743 -> 1741
1744 -> 1741
1745 -> 1741
1746 -> 1741
1747 -> 1741
1748 -> 1741
1749 -> 1741
1750 -> 1741
1751 -> 1741
1752 -> 1741
1753 -> 678
1753 -> 1739
1754 -> 541
1754 -> 1739
1755 -> 1739
1756 -> 485
1757 -> 7
1757 -> 969
1757 -> 1758
1758 -> 475
1758 -> 969
1759 -> 797
1759 -> 969
1760 -> 799
1760 -> 969
1761 -> 969
1761 -> 973
1762 -> 969
1762 -> 975
1763 -> 802
1763 -> 969
1764 -> 804
1764 -> 969
1765 -> 469
1765 -> 665
1765 -> 969
1765 -> 1758
1766 -> 640
1766 -> 969
1767 -> 812
1767 -> 969
1768 -> 814
1768 -> 969
1769 -> 823
1769 -> 969
1770 -> 969
1770 -> 1206
1771 -> 477
1771 -> 969
1772 -> 715
1772 -> 969
1773 -> 829
1773 -> 969
1774 -> 969
1774 -> 1113
1775 -> 969
1775 -> 1115
1776 -> 969
1776 -> 1117
1777 -> 883
1777 -> 969
1778 -> 737
1779 -> 61
1780 -> 1781
1780 -> 1782
1780 -> 1783
1781 -> 45
1781 -> 56
1781 -> 741
1781 -> 746
1781 -> 1790
1781 -> 1791
1784 -> 1781
1784 -> 1782
1784 -> 1785
1786 -> 1781
1786 -> 1787
1786 -> 1788
1786 -> 1789
1790 -> 61
1791 -> 3
1791 -> 1792
1791 -> 1793
1791 -> 1794
1791 -> 1795
1796 -> 1797
1798 -> 1799
1800 -> 737
1800 -> 1801
1802 -> 3
1802 -> 682
1802 -> 741
1802 -> 746
1802 -> 1820
1802 -> 1856
1802 -> 1857
1802 -> 1858
1803 -> 1804
1804 -> 3
1804 -> 682
1804 -> 1334
1804 -> 1807
1804 -> 1859
1805 -> 45
1805 -> 1782
1805 -> 1791
1805 -> 1804
1806 -> 1807
1807 -> 1860
1807 -> 1861
1807 -> 1862
1807 -> 1863
1808 -> 1807
1809 -> 1807
1810 -> 1807
1811 -> 1807
1812 -> 1807
1813 -> 1807
1814 -> 1807
1815 -> 1807
1816 -> 1807
1817 -> 1807
1818 -> 1807
1819 -> 1820
1820 -> 3
1820 -> 16
1820 -> 18
1820 -> 546
1820 -> 682
1820 -> 1334
1820 -> 1822
1820 -> 1823
1820 -> 1824
1820 -> 1825
1820 -> 1826
1820 -> 1827
1820 -> 1828
1820 -> 1829
1820 -> 1830
1820 -> 1831
1820 -> 1832
1820 -> 1833
1820 -> 1834
1820 -> 1835
1820 -> 1836
1820 -> 1837
1820 -> 1838
1820 -> 1839
1820 -> 1840
1820 -> 1841
1820 -> 1842
1820 -> 1843
1820 -> 1844
1820 -> 1845
1820 -> 1846
1820 -> 1847
1820 -> 1848
1820 -> 1849
1820 -> 1850
1820 -> 1851
1820 -> 1852
1820 -> 1853
1820 -> 1854
1820 -> 1855
1821 -> 61
1822 -> 548
1822 -> 551
1822 -> 682
1822 -> 1282
1822 -> 1334
1823 -> 513
1823 -> 2056
1824 -> 511
1824 -> 2054
1825 -> 682
1825 -> 1334
1826 -> 219
1827 -> 504
1827 -> 1952
1827 -> 2050
1828 -> 507
1828 -> 1952
1828 -> 2050
1829 -> 504
1829 -> 2054
1830 -> 507
1830 -> 2054
1831 -> 508
1831 -> 2052
1832 -> 506
1832 -> 2056
1833 -> 506
1833 -> 2057
1834 -> 506
1834 -> 2052
1835 -> 500
1835 -> 2052
1836 -> 498
1836 -> 2056
1837 -> 497
1837 -> 2052
1838 -> 493
1838 -> 2052
1839 -> 494
1839 -> 2052
1840 -> 496
1840 -> 2052
1841 -> 491
1841 -> 2052
1842 -> 489
1842 -> 2052
1843 -> 490
1843 -> 2058
1844 -> 499
1844 -> 2052
1845 -> 499
1845 -> 2056
1846 -> 499
1846 -> 2057
1847 -> 501
1847 -> 2052
1848 -> 502
1848 -> 2052
1849 -> 1993
1849 -> 2042
1850 -> 1993
1850 -> 2042
1851 -> 1985
1851 -> 2050
1852 -> 2042
1853 -> 1918
1853 -> 2050
1855 -> 3
1855 -> 682
1855 -> 1334
1855 -> 1918
1855 -> 1927
1855 -> 2050
1856 -> 61
1856 -> 2004
1857 -> 1382
1857 -> 1864
1857 -> 2030
1857 -> 2031
1857 -> 2032
1859 -> 3
1861 -> 1779
1861 -> 1864
1864 -> 61
1865 -> 1864
1865 -> 1866
1865 -> 1867
1866 -> 2103
1867 -> 2098
1868 -> 61
1869 -> 1870
1870 -> 2234
1870 -> 2235
1871 -> 1872
1872 -> 2228
1872 -> 2229
1874 -> 1868
1875 -> 1876
1876 -> 1868
1877 -> 1868
1877 -> 1878
1879 -> 473
1879 -> 1877
1880 -> 1868
1881 -> 1882
1882 -> 114
1882 -> 180
1882 -> 1885
1883 -> 1882
1884 -> 1882
1885 -> 82
1885 -> 240
1885 -> 1169
1885 -> 1783
1885 -> 1893
1885 -> 1896
1886 -> 1885
1887 -> 1886
1888 -> 1886
1889 -> 1890
1890 -> 3
1890 -> 1785
1890 -> 1893
1891 -> 1890
1892 -> 1890
1893 -> 1382
1895 -> 544
1895 -> 551
1895 -> 1886
1895 -> 1893
1895 -> 1894
1896 -> 95
1896 -> 96
1897 -> 3
1897 -> 4
1897 -> 6
1897 -> 7
1897 -> 17
1897 -> 82
1897 -> 95
1897 -> 96
1897 -> 1169
1897 -> 1789
1897 -> 1896
1897 -> 1898
1897 -> 1899
1897 -> 1900
1897 -> 1901
1897 -> 1902
1897 -> 1903
1897 -> 1904
1897 -> 1905
1897 -> 1906
1898 -> 1382
1899 -> 45
1899 -> 61
1899 -> 82
1899 -> 95
1899 -> 240
1900 -> 2087
1903 -> 3
1903 -> 2973
1903 -> 2974
1907 -> 3
1907 -> 1789
1907 -> 1914
1907 -> 1923
1907 -> 1939
1907 -> 2087
1908 -> 1909
1908 -> 1910
1909 -> 3
1909 -> 96
1909 -> 240
1909 -> 682
1909 -> 1789
1909 -> 1896
1909 -> 1898
1909 -> 1899
1909 -> 1900
1909 -> 1902
1909 -> 1903
1909 -> 1904
1909 -> 1913
1909 -> 1914
1910 -> 866
1910 -> 3275
1910 -> 3277
1911 -> 1909
1911 -> 1912
1912 -> 2869
1912 -> 3275
1912 -> 3277
1913 -> 82
1913 -> 95
1913 -> 240
1913 -> 286
1913 -> 2727
1914 -> 546
1914 -> 682
1914 -> 1335
1914 -> 2127
1915 -> 96
1915 -> 1347
1915 -> 2819
1916 -> 3
1916 -> 96
1916 -> 101
1916 -> 682
1916 -> 1789
1916 -> 1896
1916 -> 1898
1916 -> 1899
1916 -> 1900
1916 -> 1902
1916 -> 1903
1916 -> 1904
1916 -> 1914
1916 -> 1917
1917 -> 82
1917 -> 96
1917 -> 862
1917 -> 1347
1917 -> 3638
1918 -> 61
1919 -> 1920
1921 -> 1920
1922 -> 1923
1922 -> 1924
1922 -> 1925
1922 -> 1926
1927 -> 61
1928 -> 682
1929 -> 1930
1931 -> 1930
1932 -> 682
1933 -> 682
1933 -> 1934
1934 -> 682
1934 -> 1334
1934 -> 1923
1934 -> 1924
1934 -> 1925
1934 -> 1926
1935 -> 61
1936 -> 1337
1936 -> 1923
1936 -> 1924
1936 -> 1937
1936 -> 1938
1936 -> 1939
1936 -> 1940
1940 -> 5
1940 -> 2088
1940 -> 2089
1941 -> 1935
1942 -> 5
1942 -> 7
1942 -> 1920
1942 -> 1943
1943 -> 1355
1943 -> 1920
1943 -> 1930
1944 -> 607
1944 -> 608
1944 -> 1920
1944 -> 1943
1945 -> 1935
1946 -> 5
1946 -> 7
1946 -> 1947
1946 -> 1948
1947 -> 1355
1947 -> 1920
1947 -> 1930
1947 -> 2113
1948 -> 1920
1949 -> 607
1949 -> 608
1949 -> 1947
1949 -> 1948
1950 -> 1945
1951 -> 1924
1951 -> 1936
1952 -> 61
1953 -> 953
1953 -> 1337
1953 -> 1923
1953 -> 1924
1953 -> 1937
1953 -> 1938
1953 -> 1939
1953 -> 1940
1953 -> 1954
1955 -> 1920
1955 -> 1947
1955 -> 1956
1956 -> 5
1956 -> 7
1957 -> 1920
1957 -> 1947
1957 -> 1958
1958 -> 607
1958 -> 608
1959 -> 737
1960 -> 61
1961 -> 1920
1961 -> 1930
1961 -> 1962
1962 -> 5
1962 -> 789
1962 -> 793
1963 -> 1920
1963 -> 1930
1963 -> 1964
1964 -> 5
1964 -> 163
1964 -> 607
1964 -> 1495
1964 -> 1502
1965 -> 1966
1967 -> 99
1967 -> 473
1967 -> 513
1967 -> 678
1967 -> 737
1967 -> 933
1967 -> 951
1967 -> 953
1967 -> 1387
1967 -> 1389
1967 -> 1397
1967 -> 1399
1967 -> 1401
1967 -> 1787
1967 -> 1923
1967 -> 1937
1967 -> 1938
1967 -> 1939
1967 -> 1968
1967 -> 1969
1967 -> 1970
1967 -> 1971
1967 -> 1972
1967 -> 1973
1967 -> 1974
1967 -> 1975
1970 -> 3
1970 -> 5
1970 -> 85
1970 -> 1347
1970 -> 3598
1971 -> 469
1971 -> 1077
1971 -> 3604
1971 -> 3605
1975 -> 5
1975 -> 2088
1975 -> 2090
1976 -> 61
1977 -> 1978
1978 -> 5
1978 -> 682
1978 -> 883
1978 -> 1334
1978 -> 1355
1978 -> 1920
1978 -> 1930
1978 -> 1948
1978 -> 1980
1978 -> 1981
1979 -> 163
1979 -> 181
1979 -> 1978
1980 -> 375
1980 -> 557
1982 -> 5
1982 -> 375
1982 -> 486
1982 -> 515
1982 -> 557
1982 -> 1923
1982 -> 1924
1982 -> 1937
1982 -> 1983
1982 -> 1984
1984 -> 2088
1984 -> 2089
1985 -> 61
1985 -> 887
1986 -> 682
1987 -> 1920
1987 -> 1930
1987 -> 1947
1988 -> 1986
1989 -> 473
1989 -> 682
1989 -> 1923
1989 -> 1924
1989 -> 1934
1989 -> 1990
1989 -> 1991
1989 -> 1992
1991 -> 1923
1991 -> 1924
1991 -> 1937
1992 -> 1924
1993 -> 61
1994 -> 1930
1994 -> 1995
1995 -> 1996
1995 -> 1997
1996 -> 45
1996 -> 1169
1996 -> 2414
1996 -> 2567
1996 -> 2973
1996 -> 2993
1996 -> 2997
1996 -> 3000
1997 -> 45
1997 -> 1169
1997 -> 2414
1997 -> 2565
1997 -> 2973
1997 -> 2993
1997 -> 2997
1997 -> 2998
1998 -> 682
1998 -> 933
1998 -> 1999
1998 -> 2000
1998 -> 2001
1998 -> 2002
1999 -> 2942
1999 -> 2943
1999 -> 2944
2001 -> 682
2001 -> 1334
2001 -> 1923
2001 -> 1924
2003 -> 546
2003 -> 682
2003 -> 832
2003 -> 933
2003 -> 1133
2003 -> 1335
2003 -> 1344
2003 -> 1968
2003 -> 1974
2003 -> 2004
2003 -> 2005
2003 -> 2006
2003 -> 2007
2003 -> 2008
2003 -> 2009
2005 -> 2970
2005 -> 2986
2009 -> 2010
2011 -> 549
2011 -> 1930
2012 -> 682
2012 -> 933
2012 -> 1923
2012 -> 1924
2012 -> 1937
2012 -> 1938
2012 -> 1939
2012 -> 2001
2012 -> 2002
2012 -> 2013
2012 -> 2014
2012 -> 2015
2015 -> 3
2015 -> 678
2015 -> 740
2015 -> 2568
2015 -> 2970
2015 -> 2971
2015 -> 2972
2015 -> 2973
2015 -> 2974
2016 -> 61
2016 -> 1894
2016 -> 2004
2016 -> 2013
2016 -> 2014
2016 -> 2017
2016 -> 2018
2016 -> 2019
2016 -> 2020
2017 -> 2008
2017 -> 2013
2017 -> 2014
2017 -> 2025
2021 -> 45
2021 -> 1783
2021 -> 2022
2023 -> 45
2023 -> 1785
2023 -> 2022
2024 -> 1789
2024 -> 2022
2025 -> 2008
2026 -> 61
2026 -> 2020
2027 -> 1789
2027 -> 1923
2027 -> 2028
2027 -> 2029
2028 -> 2077
2029 -> 2091
2030 -> 2016
2030 -> 2073
2030 -> 2074
2031 -> 2075
2032 -> 2076
2033 -> 1382
2033 -> 1870
2033 -> 2030
2033 -> 2031
2034 -> 1382
2034 -> 1872
2034 -> 2030
2034 -> 2032
2035 -> 2030
2035 -> 2036
2036 -> 2031
2036 -> 2032
2037 -> 2030
2037 -> 2031
2038 -> 2030
2038 -> 2032
2039 -> 2040
2041 -> 3
2041 -> 1782
2041 -> 1788
2041 -> 2042
2042 -> 2051
2043 -> 1866
2043 -> 2042
2043 -> 2044
2044 -> 3
2045 -> 1867
2045 -> 2042
2045 -> 2046
2046 -> 3
2047 -> 1866
2047 -> 1867
2047 -> 2042
2047 -> 2044
2047 -> 2046
2048 -> 3
2048 -> 1866
2048 -> 1867
2048 -> 2026
2048 -> 2042
2048 -> 2044
2049 -> 1867
2049 -> 2026
2049 -> 2042
2049 -> 2046
2050 -> 2051
2052 -> 3
2052 -> 887
2052 -> 1941
2052 -> 1945
2052 -> 2050
2053 -> 3
2053 -> 1950
2053 -> 2050
2054 -> 3
2054 -> 887
2054 -> 1941
2054 -> 1945
2054 -> 2050
2055 -> 3
2055 -> 1950
2055 -> 2050
2056 -> 3
2056 -> 1960
2056 -> 2050
2057 -> 3
2057 -> 1960
2057 -> 2050
2058 -> 3
2058 -> 887
2058 -> 1976
2058 -> 2050
2059 -> 492
2059 -> 2058
2060 -> 493
2060 -> 2058
2061 -> 501
2061 -> 2058
2062 -> 486
2062 -> 2052
2063 -> 488
2063 -> 2052
2064 -> 490
2064 -> 2052
2065 -> 492
2065 -> 2052
2066 -> 1828
2067 -> 1827
2068 -> 509
2068 -> 2052
2069 -> 1993
2069 -> 2042
2070 -> 1993
2070 -> 2042
2071 -> 1985
2071 -> 2050
2072 -> 1819
2077 -> 61
2078 -> 61
2079 -> 715
2079 -> 809
2079 -> 2080
2080 -> 469
2081 -> 557
2081 -> 786
2081 -> 2082
2082 -> 417
2082 -> 1564
2083 -> 1899
2084 -> 1899
2085 -> 1867
2085 -> 1907
2085 -> 2086
2087 -> 303
2087 -> 351
2087 -> 353
2087 -> 369
2087 -> 507
2087 -> 557
2087 -> 1169
2087 -> 1170
2087 -> 1940
2087 -> 2079
2087 -> 2082
2087 -> 2087
2087 -> 2094
2087 -> 2095
2087 -> 2096
2088 -> 306
2088 -> 2078
2092 -> 2087
2093 -> 2087
2094 -> 2081
2094 -> 2097
2096 -> 3
2098 -> 61
2099 -> 2100
2101 -> 1939
2101 -> 2102
2103 -> 61
2104 -> 2105
2106 -> 159
2106 -> 1930
2106 -> 2104
2106 -> 2107
2106 -> 2108
2109 -> 159
2109 -> 1930
2109 -> 2104
2109 -> 2110
2109 -> 2111
2112 -> 2113
2114 -> 61
2115 -> 1947
2116 -> 2117
2117 -> 1920
2117 -> 1930
2117 -> 1947
2117 -> 1981
2117 -> 2113
2118 -> 1355
2118 -> 2113
2118 -> 2119
2118 -> 2120
2121 -> 1981
2121 -> 2113
2121 -> 2118
2121 -> 2119
2121 -> 2120
2122 -> 1943
2123 -> 1930
2123 -> 1943
2123 -> 1981
2124 -> 1355
2124 -> 2119
2124 -> 2120
2125 -> 1981
2125 -> 2120
2125 -> 2124
2126 -> 2113
2126 -> 2126
2128 -> 2129
2128 -> 2130
2128 -> 2131
2128 -> 2132
2128 -> 2133
2128 -> 2134
2128 -> 2135
2128 -> 2136
2128 -> 2137
2128 -> 2138
2128 -> 2139
2128 -> 2140
2128 -> 2141
2128 -> 2142
2128 -> 2143
2128 -> 2144
2128 -> 2145
2128 -> 2146
2128 -> 2147
2128 -> 2148
2128 -> 2149
2128 -> 2150
2128 -> 2151
2128 -> 2152
2128 -> 2153
2128 -> 2154
2128 -> 2155
2128 -> 2156
2128 -> 2157
2128 -> 2158
2128 -> 2159
2128 -> 2160
2128 -> 2161
2128 -> 2162
2128 -> 2163
2128 -> 2164
2128 -> 2165
2128 -> 2166
2128 -> 2167
2128 -> 2168
2128 -> 2169
2128 -> 2170
2128 -> 2171
2128 -> 2172
2128 -> 2173
2128 -> 2174
2128 -> 2175
2128 -> 2176
2128 -> 2177
2128 -> 2178
2128 -> 2179
2128 -> 2180
2128 -> 2181
2128 -> 2182
2128 -> 2183
2128 -> 2184
2128 -> 2185
2128 -> 2186
2128 -> 2187
2129 -> 1830
2129 -> 1856
2129 -> 1857
2130 -> 1834
2130 -> 1853
2130 -> 1856
2130 -> 1857
2131 -> 1835
2131 -> 1853
2131 -> 1856
2131 -> 1857
2132 -> 1829
2132 -> 1856
2132 -> 1857
2133 -> 1848
2133 -> 1855
2133 -> 1856
2133 -> 1857
2134 -> 1844
2134 -> 1853
2134 -> 1856
2134 -> 1857
2135 -> 1847
2135 -> 1853
2135 -> 1856
2135 -> 1857
2136 -> 1838
2136 -> 1856
2136 -> 1857
2137 -> 1841
2137 -> 1853
2137 -> 1856
2137 -> 1857
2138 -> 1842
2138 -> 1853
2138 -> 1856
2138 -> 1857
2139 -> 1843
2139 -> 1853
2139 -> 1856
2139 -> 1857
2140 -> 1856
2140 -> 1857
2140 -> 2071
2141 -> 1853
2141 -> 1856
2141 -> 1857
2142 -> 1856
2142 -> 1857
2142 -> 2041
2142 -> 2129
2142 -> 2130
2143 -> 1856
2143 -> 1857
2143 -> 2041
2143 -> 2129
2143 -> 2130
2143 -> 2131
2144 -> 1856
2144 -> 1857
2144 -> 2041
2144 -> 2132
2144 -> 2133
2145 -> 1856
2145 -> 1857
2145 -> 2041
2145 -> 2132
2145 -> 2133
2145 -> 2134
2146 -> 1856
2146 -> 1857
2146 -> 2041
2146 -> 2136
2146 -> 2137
2147 -> 1856
2147 -> 1857
2147 -> 2041
2147 -> 2136
2147 -> 2137
2147 -> 2138
2148 -> 1843
2148 -> 1853
2148 -> 1856
2148 -> 1857
2148 -> 2041
2148 -> 2136
2148 -> 2137
2148 -> 2138
2149 -> 1856
2149 -> 1857
2149 -> 2041
2149 -> 2136
2149 -> 2137
2149 -> 2138
2149 -> 2139
2150 -> 884
2150 -> 1856
2150 -> 1857
2150 -> 2041
2150 -> 2141
2150 -> 2190
2151 -> 884
2151 -> 1856
2151 -> 1857
2151 -> 2041
2151 -> 2141
2151 -> 2146
2152 -> 884
2152 -> 1856
2152 -> 1857
2152 -> 2041
2152 -> 2141
2152 -> 2147
2153 -> 884
2153 -> 1856
2153 -> 1857
2153 -> 2041
2153 -> 2141
2153 -> 2148
2154 -> 884
2154 -> 1856
2154 -> 1857
2154 -> 2041
2154 -> 2141
2154 -> 2149
2155 -> 1856
2155 -> 1857
2155 -> 2041
2155 -> 2140
2155 -> 2149
2156 -> 1856
2156 -> 1857
2156 -> 2041
2156 -> 2140
2156 -> 2147
2157 -> 1856
2157 -> 1857
2157 -> 2041
2157 -> 2141
2157 -> 2155
2158 -> 1856
2158 -> 1857
2158 -> 2041
2158 -> 2141
2158 -> 2156
2159 -> 884
2159 -> 1856
2159 -> 1857
2159 -> 2041
2159 -> 2157
2160 -> 884
2160 -> 1856
2160 -> 1857
2160 -> 2041
2160 -> 2158
2161 -> 1856
2161 -> 1857
2161 -> 2041
2161 -> 2157
2161 -> 2189
2162 -> 1856
2162 -> 1857
2162 -> 2041
2162 -> 2158
2162 -> 2189
2163 -> 1856
2163 -> 1857
2163 -> 2041
2163 -> 2129
2163 -> 2135
2164 -> 1856
2164 -> 1857
2164 -> 2041
2164 -> 2157
2164 -> 2163
2165 -> 1856
2165 -> 1857
2165 -> 2041
2165 -> 2158
2165 -> 2163
2166 -> 500
2166 -> 506
2166 -> 1830
2166 -> 1856
2166 -> 1857
2166 -> 2053
2167 -> 489
2167 -> 491
2167 -> 493
2167 -> 1843
2167 -> 1853
2167 -> 1856
2167 -> 1857
2167 -> 2053
2167 -> 2071
2168 -> 489
2168 -> 491
2168 -> 493
2168 -> 1856
2168 -> 1857
2168 -> 2053
2168 -> 2071
2169 -> 1856
2169 -> 1857
2169 -> 2041
2169 -> 2141
2169 -> 2167
2170 -> 1856
2170 -> 1857
2170 -> 2041
2170 -> 2141
2170 -> 2168
2171 -> 1856
2171 -> 1857
2171 -> 2041
2171 -> 2166
2171 -> 2169
2172 -> 1856
2172 -> 1857
2172 -> 2041
2172 -> 2166
2172 -> 2170
2173 -> 501
2173 -> 1830
2173 -> 1856
2173 -> 1857
2173 -> 2053
2174 -> 1856
2174 -> 1857
2174 -> 2041
2174 -> 2169
2174 -> 2173
2175 -> 1856
2175 -> 1857
2175 -> 2041
2175 -> 2170
2175 -> 2173
2176 -> 499
2176 -> 502
2176 -> 1829
2176 -> 1853
2176 -> 1856
2176 -> 1857
2176 -> 2053
2177 -> 1856
2177 -> 1857
2177 -> 2041
2177 -> 2169
2177 -> 2176
2178 -> 1856
2178 -> 1857
2178 -> 2041
2178 -> 2170
2178 -> 2176
2179 -> 1856
2179 -> 1857
2179 -> 1871
2179 -> 2034
2179 -> 2041
2179 -> 2048
2179 -> 2049
2179 -> 2129
2179 -> 2130
2179 -> 2131
2179 -> 2132
2179 -> 2133
2179 -> 2134
2179 -> 2135
2180 -> 1843
2180 -> 1853
2180 -> 1856
2180 -> 1857
2180 -> 2034
2180 -> 2041
2180 -> 2045
2180 -> 2048
2180 -> 2049
2180 -> 2059
2180 -> 2060
2180 -> 2136
2180 -> 2137
2180 -> 2138
2181 -> 1853
2181 -> 1856
2181 -> 1857
2181 -> 2034
2181 -> 2041
2181 -> 2049
2181 -> 2140
2181 -> 2179
2182 -> 1875
2182 -> 2179
2183 -> 1856
2183 -> 1857
2183 -> 1871
2183 -> 2041
2183 -> 2049
2183 -> 2140
2183 -> 2141
2183 -> 2180
2184 -> 1856
2184 -> 1857
2184 -> 1871
2184 -> 1875
2184 -> 2041
2184 -> 2049
2184 -> 2141
2184 -> 2180
2185 -> 1853
2185 -> 1856
2185 -> 1857
2185 -> 1871
2185 -> 2034
2185 -> 2041
2185 -> 2048
2185 -> 2049
2185 -> 2140
2185 -> 2180
2185 -> 2186
2186 -> 1853
2186 -> 1856
2186 -> 1857
2186 -> 1871
2186 -> 2034
2186 -> 2041
2186 -> 2049
2186 -> 2140
2186 -> 2179
2186 -> 2180
2187 -> 1853
2187 -> 1856
2187 -> 1857
2187 -> 1875
2187 -> 2034
2187 -> 2041
2187 -> 2049
2187 -> 2179
2187 -> 2180
2188 -> 61
2191 -> 61
2192 -> 3
2192 -> 499
2192 -> 500
2192 -> 501
2192 -> 502
2192 -> 504
2192 -> 506
2192 -> 507
2192 -> 1856
2192 -> 1857
2192 -> 2035
2192 -> 2041
2192 -> 2193
2192 -> 2194
2192 -> 2195
2192 -> 2196
2192 -> 2197
2192 -> 2198
2192 -> 2199
2192 -> 2200
2192 -> 2201
2192 -> 2202
2197 -> 500
2197 -> 506
2197 -> 507
2197 -> 1834
2197 -> 1835
2197 -> 1853
2197 -> 2041
2197 -> 2203
2197 -> 2204
2197 -> 2205
2198 -> 501
2198 -> 507
2198 -> 1847
2198 -> 1853
2198 -> 2041
2198 -> 2203
2198 -> 2204
2199 -> 499
2199 -> 502
2199 -> 504
2199 -> 1844
2199 -> 1848
2199 -> 1853
2199 -> 2041
2199 -> 2203
2199 -> 2204
2199 -> 2205
2201 -> 3
2201 -> 486
2201 -> 489
2201 -> 491
2201 -> 493
2201 -> 1838
2201 -> 1841
2201 -> 1842
2201 -> 1853
2201 -> 2062
2201 -> 2203
2204 -> 1853
2205 -> 3
2207 -> 61
2208 -> 61
2208 -> 2387
2209 -> 3
2209 -> 2362
2209 -> 2393
2209 -> 2394
2210 -> 2399
2211 -> 887
2211 -> 2298
2211 -> 2403
2212 -> 2399
2213 -> 2399
2214 -> 2399
2215 -> 2406
2216 -> 2399
2217 -> 2399
2218 -> 2399
2219 -> 303
2219 -> 2339
2219 -> 2388
2220 -> 2208
2220 -> 2209
2220 -> 2210
2220 -> 2212
2220 -> 2214
2220 -> 2215
2220 -> 2216
2220 -> 2217
2220 -> 2218
2220 -> 2219
2220 -> 2221
2220 -> 2222
2223 -> 2208
2223 -> 2209
2223 -> 2210
2223 -> 2212
2223 -> 2214
2223 -> 2215
2223 -> 2216
2223 -> 2217
2223 -> 2218
2223 -> 2219
2223 -> 2221
2223 -> 2222
2223 -> 2224
2224 -> 2406
2225 -> 2208
2225 -> 2209
2225 -> 2210
2225 -> 2213
2225 -> 2214
2225 -> 2215
2225 -> 2216
2225 -> 2217
2225 -> 2218
2225 -> 2219
2225 -> 2221
2225 -> 2222
2225 -> 2226
2226 -> 887
2226 -> 2298
2226 -> 2396
2227 -> 2208
2227 -> 2209
2227 -> 2210
2227 -> 2213
2227 -> 2214
2227 -> 2215
2227 -> 2216
2227 -> 2217
2227 -> 2218
2227 -> 2219
2227 -> 2221
2227 -> 2222
2227 -> 2224
2227 -> 2226
2229 -> 61
2230 -> 2020
2231 -> 1789
2232 -> 1789
2233 -> 657
2235 -> 61
2236 -> 1894
2237 -> 1783
2238 -> 1783
2239 -> 1783
2240 -> 1785
2241 -> 1785
2242 -> 1785
2243 -> 657
2244 -> 61
2245 -> 2246
2245 -> 2247
2246 -> 1799
2246 -> 2254
2246 -> 2255
2246 -> 2256
2248 -> 2246
2248 -> 2249
2250 -> 2246
2250 -> 2251
2252 -> 2246
2252 -> 2253
2255 -> 933
2255 -> 935
2255 -> 2244
2255 -> 2265
2255 -> 2266
2257 -> 2258
2257 -> 2259
2258 -> 1799
2258 -> 2254
2258 -> 2255
2258 -> 2260
2261 -> 737
2262 -> 61
2263 -> 2255
2264 -> 45
2264 -> 2255
2265 -> 2267
2265 -> 2268
2265 -> 2269
2265 -> 2270
2266 -> 61
2268 -> 678
2268 -> 2280
2268 -> 2281
2268 -> 2282
2269 -> 2208
2269 -> 2210
2269 -> 2212
2269 -> 2213
2269 -> 2214
2269 -> 2216
2269 -> 2217
2269 -> 2219
2269 -> 2268
2269 -> 2271
2269 -> 2272
2269 -> 2273
2269 -> 2274
2269 -> 2275
2269 -> 2276
2269 -> 2277
2269 -> 2278
2269 -> 2279
2270 -> 2208
2270 -> 2210
2270 -> 2212
2270 -> 2213
2270 -> 2214
2270 -> 2216
2270 -> 2217
2270 -> 2219
2270 -> 2271
2270 -> 2272
2270 -> 2275
2270 -> 2276
2270 -> 2277
2270 -> 2278
2270 -> 2279
2271 -> 2272
2274 -> 887
2274 -> 2313
2274 -> 2403
2275 -> 887
2275 -> 2304
2275 -> 2403
2276 -> 2406
2277 -> 2399
2278 -> 2399
2279 -> 1799
2279 -> 2254
2279 -> 2266
2283 -> 61
2284 -> 2251
2284 -> 2256
2284 -> 2285
2284 -> 2286
2285 -> 1382
2286 -> 3
2287 -> 2253
2287 -> 2256
2287 -> 2285
2287 -> 2286
2288 -> 1382
2289 -> 332
2290 -> 61
2291 -> 678
2291 -> 682
2291 -> 955
2291 -> 2195
2291 -> 2292
2291 -> 2293
2291 -> 2294
2291 -> 2295
2296 -> 682
2296 -> 2297
2298 -> 2290
2299 -> 682
2300 -> 75
2301 -> 2120
2302 -> 682
2302 -> 2296
2302 -> 2297
2303 -> 682
2303 -> 1334
2303 -> 2296
2303 -> 2297
2304 -> 2290
2305 -> 682
2306 -> 75
2307 -> 2120
2308 -> 682
2308 -> 2296
2308 -> 2297
2309 -> 682
2309 -> 2296
2309 -> 2297
2310 -> 61
2311 -> 682
2312 -> 2310
2313 -> 303
2313 -> 933
2313 -> 935
2313 -> 2290
2313 -> 2314
2313 -> 2315
2316 -> 380
2316 -> 2317
2316 -> 2318
2319 -> 682
2319 -> 2316
2320 -> 75
2320 -> 2316
2321 -> 2120
2321 -> 2316
2322 -> 682
2322 -> 2296
2322 -> 2297
2323 -> 682
2323 -> 2296
2323 -> 2297
2324 -> 303
2325 -> 2195
2325 -> 2290
2325 -> 2292
2325 -> 2293
2325 -> 2294
2325 -> 2295
2326 -> 2327
2328 -> 2329
2330 -> 2331
2332 -> 2296
2332 -> 2332
2332 -> 2333
2334 -> 2296
2334 -> 2333
2334 -> 2335
2336 -> 303
2337 -> 61
2338 -> 61
2338 -> 2325
2339 -> 657
2339 -> 2293
2339 -> 2294
2339 -> 2340
2341 -> 2342
2342 -> 195
2342 -> 350
2342 -> 351
2342 -> 352
2342 -> 353
2342 -> 354
2342 -> 355
2342 -> 356
2342 -> 357
2342 -> 1937
2342 -> 2348
2342 -> 2351
2342 -> 2352
2343 -> 655
2343 -> 832
2343 -> 2126
2343 -> 2327
2343 -> 2342
2344 -> 77
2344 -> 80
2344 -> 655
2344 -> 2115
2344 -> 2122
2344 -> 2329
2344 -> 2342
2344 -> 2345
2346 -> 655
2346 -> 2118
2346 -> 2119
2346 -> 2124
2346 -> 2331
2346 -> 2342
2347 -> 195
2347 -> 682
2347 -> 1334
2347 -> 1937
2347 -> 2333
2347 -> 2335
2347 -> 2348
2347 -> 2349
2347 -> 2350
2348 -> 205
2348 -> 350
2348 -> 351
2348 -> 352
2348 -> 353
2348 -> 354
2348 -> 355
2348 -> 356
2348 -> 357
2349 -> 1334
2349 -> 1335
2349 -> 1337
2350 -> 2353
2350 -> 2354
2350 -> 2355
2350 -> 2356
2350 -> 2357
2350 -> 2358
2350 -> 2359
2350 -> 2360
2352 -> 201
2352 -> 212
2361 -> 2362
2362 -> 61
2363 -> 682
2364 -> 75
2365 -> 2120
2366 -> 682
2366 -> 2297
2367 -> 61
2367 -> 678
2367 -> 2006
2367 -> 2073
2367 -> 2368
2367 -> 2369
2367 -> 2370
2367 -> 2371
2372 -> 2247
2373 -> 682
2373 -> 2247
2373 -> 2249
2374 -> 75
2374 -> 2247
2374 -> 2251
2375 -> 2120
2375 -> 2247
2375 -> 2253
2376 -> 682
2376 -> 2259
2376 -> 2297
2377 -> 61
2377 -> 2004
2377 -> 2013
2377 -> 2378
2377 -> 2379
2378 -> 2008
2378 -> 2013
2378 -> 2014
2378 -> 2385
2380 -> 2247
2381 -> 2249
2382 -> 2251
2383 -> 2253
2384 -> 2022
2384 -> 2259
2385 -> 2008
2386 -> 737
2387 -> 2004
2387 -> 2391
2388 -> 1283
2388 -> 2013
2388 -> 2014
2388 -> 2256
2388 -> 2260
2388 -> 2283
2388 -> 2388
2388 -> 2409
2388 -> 2410
2388 -> 2411
2389 -> 2219
2389 -> 2256
2390 -> 2219
2390 -> 2260
2392 -> 3
2392 -> 2256
2392 -> 2260
2392 -> 2393
2392 -> 2394
2393 -> 1283
2394 -> 2008
2395 -> 3
2395 -> 2393
2395 -> 2394
2396 -> 887
2396 -> 2325
2397 -> 887
2397 -> 2304
2397 -> 2396
2398 -> 887
2398 -> 2313
2398 -> 2396
2399 -> 2402
2400 -> 2399
2401 -> 2402
2402 -> 2337
2402 -> 2394
2403 -> 1283
2403 -> 2013
2403 -> 2014
2403 -> 2338
2403 -> 2393
2403 -> 2404
2403 -> 2405
2406 -> 887
2406 -> 1283
2406 -> 2008
2406 -> 2013
2406 -> 2014
2406 -> 2367
2406 -> 2391
2406 -> 2393
2406 -> 2394
2406 -> 2409
2406 -> 2410
2407 -> 2406
2408 -> 2406
2410 -> 2013
2410 -> 2014
2410 -> 2377
2412 -> 61
2413 -> 2413
2413 -> 2414
2415 -> 1169
2415 -> 2415
2416 -> 2416
2416 -> 2417
2418 -> 953
2418 -> 2419
2420 -> 2421
2421 -> 549
2421 -> 2422
2422 -> 3
2422 -> 61
2423 -> 2413
2423 -> 2424
2424 -> 2434
2425 -> 2415
2425 -> 2424
2426 -> 2416
2426 -> 2424
2427 -> 1156
2428 -> 2429
2430 -> 2431
2432 -> 542
2433 -> 538
2434 -> 2412
2434 -> 2429
2435 -> 2436
2435 -> 2437
2435 -> 2438
2435 -> 2439
2435 -> 2440
2439 -> 2436
2439 -> 2539
2440 -> 3
2440 -> 61
2441 -> 17
2441 -> 21
2441 -> 41
2441 -> 330
2441 -> 469
2441 -> 2442
2441 -> 2443
2442 -> 21
2442 -> 27
2442 -> 469
2442 -> 797
2443 -> 7
2443 -> 29
2443 -> 797
2444 -> 17
2444 -> 21
2444 -> 41
2444 -> 330
2444 -> 469
2444 -> 797
2444 -> 2443
2444 -> 2445
2445 -> 17
2445 -> 640
2445 -> 797
2445 -> 2442
2446 -> 17
2446 -> 21
2446 -> 41
2446 -> 330
2446 -> 469
2446 -> 797
2446 -> 2443
2446 -> 2447
2447 -> 17
2447 -> 640
2447 -> 797
2447 -> 2442
2448 -> 2449
2448 -> 2450
2448 -> 2451
2451 -> 2449
2451 -> 2533
2451 -> 2538
2452 -> 2435
2452 -> 2439
2452 -> 2453
2452 -> 2454
2454 -> 61
2455 -> 2444
2456 -> 2446
2457 -> 678
2457 -> 2458
2459 -> 2448
2459 -> 2451
2459 -> 2460
2461 -> 2454
2462 -> 939
2462 -> 2461
2463 -> 61
2464 -> 2465
2466 -> 2467
2468 -> 2469
2470 -> 7
2470 -> 17
2470 -> 330
2470 -> 469
2470 -> 2455
2471 -> 61
2472 -> 61
2472 -> 2466
2472 -> 2468
2473 -> 61
2474 -> 2473
2475 -> 678
2476 -> 90
2477 -> 7
2477 -> 112
2477 -> 330
2477 -> 735
2478 -> 61
2478 -> 2479
2480 -> 61
2480 -> 2006
2481 -> 2051
2481 -> 2482
2483 -> 2006
2483 -> 2468
2483 -> 2471
2483 -> 2472
2483 -> 2473
2483 -> 2484
2483 -> 2485
2483 -> 2486
2483 -> 2487
2484 -> 7
2484 -> 17
2484 -> 330
2484 -> 2441
2484 -> 2470
2484 -> 2472
2484 -> 2488
2484 -> 2489
2484 -> 2490
2484 -> 2491
2492 -> 2441
2493 -> 2073
2493 -> 2074
2493 -> 2494
2493 -> 2495
2495 -> 2422
2496 -> 2439
2496 -> 2452
2496 -> 2495
2497 -> 2467
2497 -> 2498
2498 -> 2455
2498 -> 2469
2499 -> 2469
2499 -> 2498
2500 -> 2455
2500 -> 2469
2501 -> 2456
2501 -> 2469
2502 -> 549
2502 -> 678
2502 -> 2457
2503 -> 2451
2503 -> 2459
2504 -> 2436
2504 -> 2438
2504 -> 2439
2504 -> 2453
2504 -> 2496
2504 -> 2505
2504 -> 2506
2504 -> 2507
2504 -> 2508
2508 -> 2422
2509 -> 3
2509 -> 93
2509 -> 154
2509 -> 330
2509 -> 549
2509 -> 678
2509 -> 887
2509 -> 939
2509 -> 2073
2509 -> 2074
2509 -> 2462
2509 -> 2467
2509 -> 2469
2509 -> 2475
2509 -> 2485
2509 -> 2486
2509 -> 2495
2509 -> 2508
2509 -> 2510
2509 -> 2511
2509 -> 2512
2509 -> 2513
2509 -> 2514
2509 -> 2515
2509 -> 2516
2509 -> 2517
2509 -> 2518
2514 -> 350
2514 -> 351
2514 -> 353
2514 -> 3904
2515 -> 3762
2515 -> 3768
2516 -> 3762
2516 -> 3768
2517 -> 2659
2519 -> 2497
2519 -> 2520
2521 -> 2499
2521 -> 2520
2522 -> 2520
2522 -> 2523
2524 -> 2500
2524 -> 2520
2525 -> 2501
2525 -> 2520
2526 -> 549
2526 -> 678
2526 -> 2502
2526 -> 2527
2526 -> 2528
2526 -> 2529
2530 -> 678
2530 -> 1382
2530 -> 2195
2530 -> 2293
2530 -> 2294
2530 -> 2449
2530 -> 2450
2530 -> 2451
2530 -> 2460
2530 -> 2489
2530 -> 2490
2530 -> 2503
2530 -> 2531
2530 -> 2532
2530 -> 2533
2534 -> 2535
2534 -> 2536
2535 -> 538
2535 -> 2420
2535 -> 2436
2535 -> 2439
2535 -> 2453
2535 -> 2504
2535 -> 2507
2535 -> 2537
2537 -> 2422
2540 -> 678
2540 -> 2537
2541 -> 61
2541 -> 2479
2542 -> 2051
2542 -> 2073
2542 -> 2074
2542 -> 2440
2542 -> 2478
2542 -> 2543
2544 -> 2545
2544 -> 2546
2545 -> 2073
2545 -> 2074
2545 -> 2542
2547 -> 2545
2547 -> 2548
2549 -> 2440
2549 -> 2454
2549 -> 2463
2549 -> 2481
2549 -> 2545
2550 -> 887
2550 -> 2004
2550 -> 2073
2550 -> 2074
2550 -> 2420
2550 -> 2480
2550 -> 2483
2550 -> 2484
2550 -> 2485
2550 -> 2486
2550 -> 2487
2550 -> 2492
2550 -> 2493
2550 -> 2509
2550 -> 2510
2550 -> 2511
2550 -> 2540
2550 -> 2551
2550 -> 2552
2551 -> 2051
2551 -> 2073
2551 -> 2074
2551 -> 2474
2551 -> 2475
2551 -> 2485
2551 -> 2510
2551 -> 2551
2551 -> 2553
2554 -> 2555
2554 -> 2556
2554 -> 2557
2555 -> 1169
2555 -> 2414
2555 -> 2417
2555 -> 2449
2555 -> 2451
2555 -> 2460
2555 -> 2530
2555 -> 2550
2555 -> 2558
2559 -> 2560
2560 -> 1690
2561 -> 61
2562 -> 2563
2563 -> 678
2563 -> 933
2563 -> 941
2563 -> 1137
2563 -> 1138
2563 -> 1968
2563 -> 2513
2563 -> 2560
2564 -> 2563
2565 -> 2566
2566 -> 546
2566 -> 678
2566 -> 933
2566 -> 941
2566 -> 1137
2566 -> 1138
2566 -> 1968
2566 -> 2513
2566 -> 2560
2566 -> 2568
2566 -> 2569
2567 -> 2566
2570 -> 549
2570 -> 682
2570 -> 2568
2570 -> 2571
2570 -> 2572
2573 -> 549
2573 -> 678
2574 -> 541
2574 -> 549
2575 -> 2576
2577 -> 61
2578 -> 955
2579 -> 61
2580 -> 3
2580 -> 61
2580 -> 546
2580 -> 678
2580 -> 682
2580 -> 1334
2580 -> 1335
2580 -> 1337
2580 -> 2568
2580 -> 2581
2580 -> 2582
2580 -> 2583
2580 -> 2584
2580 -> 2585
2580 -> 2586
2580 -> 2587
2580 -> 2588
2580 -> 2589
2580 -> 2590
2580 -> 2591
2580 -> 2592
2583 -> 7
2583 -> 330
2583 -> 639
2583 -> 809
2584 -> 7
2584 -> 330
2584 -> 707
2584 -> 809
2587 -> 3
2587 -> 101
2587 -> 1077
2587 -> 1897
2587 -> 2568
2587 -> 2618
2587 -> 2632
2588 -> 330
2588 -> 3199
2589 -> 407
2589 -> 481
2589 -> 3013
2589 -> 3160
2589 -> 3164
2590 -> 404
2590 -> 481
2590 -> 3013
2590 -> 3160
2590 -> 3164
2591 -> 7
2591 -> 21
2591 -> 3013
2591 -> 3160
2592 -> 7
2592 -> 27
2592 -> 3013
2592 -> 3160
2593 -> 2549
2594 -> 2542
2595 -> 3
2595 -> 61
2595 -> 887
2595 -> 939
2595 -> 2580
2595 -> 2582
2595 -> 2587
2595 -> 2596
2595 -> 2597
2595 -> 2598
2597 -> 678
2597 -> 1337
2597 -> 1972
2598 -> 678
2599 -> 2593
2599 -> 2600
2600 -> 546
2600 -> 939
2600 -> 1335
2600 -> 1344
2600 -> 2127
2600 -> 2585
2601 -> 61
2601 -> 2004
2601 -> 2008
2602 -> 3
2602 -> 678
2602 -> 2008
2602 -> 2014
2603 -> 2013
2603 -> 2014
2603 -> 2599
2604 -> 2582
2604 -> 2605
2605 -> 61
2605 -> 939
2605 -> 1337
2605 -> 2580
2605 -> 2581
2605 -> 2582
2605 -> 2587
2605 -> 2598
2605 -> 2606
2606 -> 2579
2607 -> 2605
2607 -> 2607
2608 -> 2609
2609 -> 3
2609 -> 933
2609 -> 2544
2609 -> 2547
2609 -> 2587
2609 -> 2594
2609 -> 2603
2610 -> 2610
2611 -> 678
2611 -> 2612
2611 -> 2613
2611 -> 2614
2611 -> 2615
2611 -> 2616
2611 -> 2617
2612 -> 2518
2615 -> 2660
2616 -> 61
2616 -> 1133
2616 -> 2004
2617 -> 549
2617 -> 678
2617 -> 933
2617 -> 950
2617 -> 1968
2617 -> 2013
2617 -> 2014
2617 -> 2507
2617 -> 2517
2617 -> 2518
2617 -> 2541
2617 -> 2550
2617 -> 2556
2617 -> 2608
2617 -> 2614
2617 -> 2619
2617 -> 2621
2617 -> 2633
2617 -> 2635
2617 -> 2636
2617 -> 2637
2617 -> 2638
2617 -> 2639
2617 -> 2640
2617 -> 2641
2617 -> 2642
2617 -> 2643
2617 -> 2644
2617 -> 2645
2617 -> 2646
2617 -> 2647
2618 -> 330
2618 -> 1062
2619 -> 549
2619 -> 933
2619 -> 937
2619 -> 1690
2619 -> 1968
2619 -> 1974
2619 -> 2620
2619 -> 2621
2619 -> 2622
2619 -> 2623
2619 -> 2624
2619 -> 2625
2619 -> 2626
2619 -> 2627
2619 -> 2628
2619 -> 2629
2619 -> 2630
2619 -> 2631
2633 -> 93
2633 -> 330
2633 -> 469
2633 -> 549
2633 -> 678
2633 -> 682
2633 -> 735
2633 -> 1169
2633 -> 1290
2633 -> 2004
2633 -> 2008
2633 -> 2013
2633 -> 2014
2633 -> 2414
2633 -> 2417
2633 -> 2429
2633 -> 2431
2633 -> 2518
2633 -> 2634
2638 -> 3
2638 -> 678
2638 -> 682
2638 -> 933
2638 -> 955
2638 -> 1334
2638 -> 1335
2638 -> 1344
2638 -> 1968
2638 -> 2008
2638 -> 2518
2638 -> 2568
2638 -> 2581
2638 -> 2582
2638 -> 2595
2638 -> 2596
2638 -> 2601
2638 -> 2602
2638 -> 2604
2638 -> 2607
2638 -> 2651
2638 -> 2652
2638 -> 2653
2638 -> 2654
2643 -> 538
2643 -> 549
2643 -> 2517
2643 -> 2518
2643 -> 2534
2643 -> 2554
2643 -> 2614
2643 -> 2640
2643 -> 2641
2643 -> 2644
2643 -> 2645
2643 -> 2648
2643 -> 2649
2643 -> 2650
2655 -> 2656
2657 -> 2655
2658 -> 61
2661 -> 3
2661 -> 61
2661 -> 2000
2661 -> 2507
2661 -> 2640
2661 -> 2642
2661 -> 2662
2661 -> 2663
2661 -> 2664
2661 -> 2665
2662 -> 191
2662 -> 544
2662 -> 547
2662 -> 551
2662 -> 2127
2662 -> 2507
2662 -> 2614
2662 -> 2649
2662 -> 2679
2663 -> 737
2663 -> 1968
2663 -> 2536
2663 -> 2680
2663 -> 2682
2663 -> 2683
2666 -> 2667
2667 -> 3
2667 -> 61
2667 -> 323
2667 -> 1241
2667 -> 2000
2667 -> 2662
2667 -> 2663
2667 -> 2664
2667 -> 2665
2667 -> 2669
2668 -> 2667
2670 -> 678
2670 -> 933
2670 -> 2670
2670 -> 2671
2670 -> 2672
2672 -> 1968
2672 -> 2534
2672 -> 2650
2672 -> 2662
2672 -> 2673
2672 -> 2680
2672 -> 2681
2673 -> 2674
2675 -> 61
2676 -> 2677
2676 -> 2678
2679 -> 2675
2682 -> 939
2682 -> 1968
2682 -> 2507
2682 -> 2684
2682 -> 2685
2686 -> 1377
2687 -> 165
2687 -> 996
2688 -> 5
2688 -> 998
2688 -> 1347
2689 -> 1077
2690 -> 1347
2691 -> 797
2691 -> 1077
2691 -> 2692
2692 -> 1077
2692 -> 1347
2692 -> 2717
2692 -> 2724
2693 -> 799
2693 -> 1077
2693 -> 2692
2694 -> 973
2694 -> 1077
2694 -> 2692
2695 -> 469
2695 -> 1077
2695 -> 2692
2696 -> 809
2696 -> 1077
2696 -> 2692
2697 -> 2696
2698 -> 1400
2698 -> 2695
2699 -> 1398
2699 -> 2695
2700 -> 715
2700 -> 1077
2700 -> 2692
2701 -> 829
2701 -> 1077
2701 -> 2692
2702 -> 1077
2702 -> 1113
2702 -> 2692
2703 -> 1077
2703 -> 1115
2703 -> 2692
2704 -> 1077
2704 -> 1117
2704 -> 2692
2705 -> 2706
2706 -> 219
2707 -> 2708
2707 -> 2709
2709 -> 222
2710 -> 2708
2710 -> 2711
2711 -> 223
2712 -> 1329
2712 -> 1874
2712 -> 2713
2713 -> 1346
2713 -> 2714
2714 -> 1077
2714 -> 1347
2714 -> 2717
2715 -> 224
2716 -> 225
2717 -> 221
2718 -> 234
2719 -> 229
2720 -> 95
2720 -> 234
2721 -> 236
2722 -> 238
2723 -> 237
2724 -> 27
2724 -> 715
2725 -> 1077
2725 -> 1347
2725 -> 2717
2726 -> 46
2726 -> 96
2726 -> 862
2726 -> 1077
2726 -> 1347
2726 -> 2717
2726 -> 2727
2727 -> 740
2727 -> 1171
2727 -> 1184
2728 -> 181
2728 -> 1077
2728 -> 1347
2728 -> 2692
2729 -> 3
2729 -> 5
2729 -> 469
2729 -> 1077
2729 -> 1347
2729 -> 2692
2730 -> 3
2730 -> 369
2730 -> 481
2730 -> 1077
2730 -> 1347
2730 -> 2692
2731 -> 1077
2731 -> 1347
2731 -> 2692
2731 -> 2732
2733 -> 63
2733 -> 2731
2734 -> 275
2734 -> 1077
2734 -> 1347
2734 -> 2692
2735 -> 2731
2736 -> 2733
2737 -> 2734
2738 -> 408
2738 -> 481
2738 -> 1077
2738 -> 1347
2738 -> 2692
2739 -> 407
2739 -> 481
2739 -> 1077
2739 -> 1347
2739 -> 2692
2740 -> 405
2740 -> 481
2740 -> 1077
2740 -> 1347
2740 -> 2692
2741 -> 404
2741 -> 481
2741 -> 1077
2741 -> 1347
2741 -> 2692
2742 -> 2731
2743 -> 2733
2744 -> 2734
2745 -> 408
2745 -> 1077
2745 -> 1347
2745 -> 2692
2745 -> 2746
2746 -> 481
2746 -> 3071
2747 -> 407
2747 -> 1077
2747 -> 1347
2747 -> 2692
2747 -> 2746
2748 -> 405
2748 -> 1077
2748 -> 1347
2748 -> 2692
2748 -> 2746
2749 -> 404
2749 -> 1077
2749 -> 1347
2749 -> 2692
2749 -> 2746
2750 -> 3
2750 -> 5
2750 -> 85
2750 -> 1347
2750 -> 2686
2751 -> 1077
2751 -> 1347
2751 -> 2752
2752 -> 288
2753 -> 866
2753 -> 1077
2753 -> 1347
2754 -> 145
2754 -> 353
2754 -> 369
2754 -> 481
2754 -> 1077
2754 -> 1347
2755 -> 9
2755 -> 469
2755 -> 1077
2755 -> 1347
2755 -> 2692
2756 -> 11
2756 -> 469
2756 -> 1077
2756 -> 1347
2756 -> 2692
2757 -> 13
2757 -> 469
2757 -> 1077
2757 -> 1347
2757 -> 2692
2758 -> 15
2758 -> 469
2758 -> 1077
2758 -> 1347
2758 -> 2692
2759 -> 17
2759 -> 469
2759 -> 1077
2759 -> 1347
2759 -> 2692
2760 -> 19
2760 -> 469
2760 -> 1077
2760 -> 1347
2760 -> 2692
2761 -> 21
2761 -> 469
2761 -> 1077
2761 -> 1347
2761 -> 2692
2762 -> 23
2762 -> 469
2762 -> 1077
2762 -> 1347
2762 -> 2692
2763 -> 25
2763 -> 469
2763 -> 1077
2763 -> 1347
2763 -> 2692
2764 -> 27
2764 -> 469
2764 -> 1077
2764 -> 1347
2764 -> 2692
2765 -> 29
2765 -> 469
2765 -> 1077
2765 -> 1347
2765 -> 2692
2766 -> 9
2766 -> 1347
2766 -> 2686
2767 -> 11
2767 -> 1347
2767 -> 2686
2768 -> 15
2768 -> 1347
2768 -> 2686
2769 -> 13
2769 -> 1347
2769 -> 2686
2770 -> 17
2770 -> 1347
2770 -> 2686
2771 -> 19
2771 -> 1347
2771 -> 2686
2772 -> 21
2772 -> 1347
2772 -> 2686
2773 -> 23
2773 -> 1347
2773 -> 2686
2774 -> 25
2774 -> 1347
2774 -> 2686
2775 -> 27
2775 -> 1347
2775 -> 2686
2776 -> 29
2776 -> 1347
2776 -> 2686
2777 -> 1377
2778 -> 165
2778 -> 996
2779 -> 5
2779 -> 998
2779 -> 1347
2780 -> 1077
2781 -> 1347
2782 -> 797
2782 -> 1077
2782 -> 2783
2783 -> 93
2783 -> 1077
2783 -> 1347
2784 -> 799
2784 -> 1077
2784 -> 2783
2785 -> 973
2785 -> 1077
2785 -> 2783
2786 -> 469
2786 -> 1077
2786 -> 2783
2787 -> 809
2787 -> 1077
2787 -> 2783
2788 -> 2787
2789 -> 82
2789 -> 93
2789 -> 1400
2789 -> 2431
2789 -> 2780
2789 -> 2781
2789 -> 2786
2789 -> 2790
2790 -> 2790
2790 -> 3116
2791 -> 82
2791 -> 93
2791 -> 1398
2791 -> 2429
2791 -> 2780
2791 -> 2781
2791 -> 2786
2791 -> 2790
2792 -> 715
2792 -> 1077
2792 -> 2783
2793 -> 829
2793 -> 1077
2793 -> 2783
2794 -> 1077
2794 -> 1113
2794 -> 2783
2795 -> 1077
2795 -> 1115
2795 -> 2783
2796 -> 1077
2796 -> 1117
2796 -> 2783
2797 -> 1826
2798 -> 2708
2798 -> 2799
2799 -> 222
2800 -> 2708
2800 -> 2801
2801 -> 223
2802 -> 1329
2802 -> 1874
2802 -> 2803
2803 -> 1346
2804 -> 224
2805 -> 234
2806 -> 229
2807 -> 95
2807 -> 234
2808 -> 236
2809 -> 238
2810 -> 237
2811 -> 236
2812 -> 238
2813 -> 237
2814 -> 236
2815 -> 238
2816 -> 91
2816 -> 220
2816 -> 1347
2817 -> 46
2817 -> 94
2817 -> 862
2818 -> 95
2818 -> 97
2818 -> 1347
2819 -> 93
2819 -> 95
2819 -> 1077
2819 -> 1347
2820 -> 46
2820 -> 93
2820 -> 96
2820 -> 862
2820 -> 1077
2820 -> 1347
2820 -> 2727
2821 -> 46
2821 -> 1077
2821 -> 2783
2821 -> 2822
2822 -> 1169
2822 -> 2429
2823 -> 46
2823 -> 1077
2823 -> 2783
2823 -> 2822
2824 -> 40
2824 -> 82
2824 -> 240
2824 -> 423
2824 -> 1077
2824 -> 1184
2824 -> 1347
2824 -> 2783
2825 -> 867
2825 -> 2591
2825 -> 2592
2825 -> 2824
2826 -> 16
2826 -> 20
2826 -> 26
2826 -> 82
2826 -> 239
2826 -> 240
2826 -> 1077
2826 -> 1184
2826 -> 1347
2826 -> 2783
2827 -> 2826
2827 -> 2828
2827 -> 2829
2827 -> 2830
2827 -> 2831
2828 -> 7
2828 -> 31
2828 -> 3083
2828 -> 3217
2829 -> 7
2829 -> 35
2829 -> 3083
2829 -> 3217
2830 -> 7
2830 -> 39
2830 -> 3083
2830 -> 3217
2831 -> 7
2831 -> 43
2831 -> 3083
2831 -> 3217
2832 -> 46
2832 -> 2833
2832 -> 2834
2833 -> 866
2833 -> 1077
2833 -> 1347
2834 -> 27
2834 -> 93
2834 -> 96
2834 -> 715
2834 -> 862
2834 -> 3002
2834 -> 3013
2834 -> 3160
2835 -> 181
2835 -> 1077
2835 -> 1347
2835 -> 2783
2836 -> 3
2836 -> 5
2836 -> 469
2836 -> 1077
2836 -> 1347
2836 -> 2783
2837 -> 3
2837 -> 369
2837 -> 481
2837 -> 1077
2837 -> 1347
2837 -> 2783
2838 -> 1077
2838 -> 1347
2838 -> 2732
2838 -> 2783
2839 -> 63
2839 -> 2838
2840 -> 275
2840 -> 1077
2840 -> 1347
2840 -> 2783
2841 -> 2838
2842 -> 2839
2843 -> 2840
2844 -> 408
2844 -> 481
2844 -> 1077
2844 -> 1347
2844 -> 2783
2845 -> 407
2845 -> 481
2845 -> 1077
2845 -> 1347
2845 -> 2783
2846 -> 405
2846 -> 481
2846 -> 1077
2846 -> 1347
2846 -> 2783
2847 -> 404
2847 -> 481
2847 -> 1077
2847 -> 1347
2847 -> 2783
2848 -> 402
2848 -> 481
2848 -> 1077
2848 -> 1347
2848 -> 2783
2849 -> 401
2849 -> 481
2849 -> 1077
2849 -> 1347
2849 -> 2783
2850 -> 400
2850 -> 481
2850 -> 1077
2850 -> 1347
2850 -> 2783
2851 -> 398
2851 -> 481
2851 -> 1077
2851 -> 1347
2851 -> 2783
2852 -> 2838
2853 -> 2839
2854 -> 2840
2855 -> 408
2855 -> 1077
2855 -> 1347
2855 -> 2746
2855 -> 2783
2856 -> 407
2856 -> 1077
2856 -> 1347
2856 -> 2746
2856 -> 2783
2857 -> 405
2857 -> 1077
2857 -> 1347
2857 -> 2746
2857 -> 2783
2858 -> 404
2858 -> 1077
2858 -> 1347
2858 -> 2746
2858 -> 2783
2859 -> 402
2859 -> 1077
2859 -> 1347
2859 -> 2746
2859 -> 2783
2860 -> 401
2860 -> 1077
2860 -> 1347
2860 -> 2746
2860 -> 2783
2861 -> 400
2861 -> 1077
2861 -> 1347
2861 -> 2746
2861 -> 2783
2862 -> 398
2862 -> 1077
2862 -> 1347
2862 -> 2746
2862 -> 2783
2863 -> 3
2863 -> 5
2863 -> 85
2863 -> 1347
2863 -> 2777
2864 -> 1077
2864 -> 1347
2864 -> 2752
2865 -> 1077
2865 -> 1347
2865 -> 2866
2866 -> 288
2867 -> 1077
2867 -> 1347
2867 -> 1913
2868 -> 1077
2868 -> 1347
2868 -> 2869
2869 -> 7
2869 -> 41
2869 -> 82
2869 -> 95
2869 -> 240
2869 -> 286
2869 -> 2727
2870 -> 9
2870 -> 469
2870 -> 1077
2870 -> 1347
2870 -> 2783
2871 -> 11
2871 -> 469
2871 -> 1077
2871 -> 1347
2871 -> 2783
2872 -> 13
2872 -> 469
2872 -> 1077
2872 -> 1347
2872 -> 2783
2873 -> 15
2873 -> 469
2873 -> 1077
2873 -> 1347
2873 -> 2783
2874 -> 17
2874 -> 469
2874 -> 1077
2874 -> 1347
2874 -> 2783
2875 -> 19
2875 -> 469
2875 -> 1077
2875 -> 1347
2875 -> 2783
2876 -> 21
2876 -> 469
2876 -> 1077
2876 -> 1347
2876 -> 2783
2877 -> 23
2877 -> 469
2877 -> 1077
2877 -> 1347
2877 -> 2783
2878 -> 25
2878 -> 469
2878 -> 1077
2878 -> 1347
2878 -> 2783
2879 -> 27
2879 -> 469
2879 -> 1077
2879 -> 1347
2879 -> 2783
2880 -> 29
2880 -> 469
2880 -> 1077
2880 -> 1347
2880 -> 2783
2881 -> 31
2881 -> 469
2881 -> 1077
2881 -> 1347
2881 -> 2783
2882 -> 35
2882 -> 469
2882 -> 1077
2882 -> 1347
2882 -> 2783
2883 -> 39
2883 -> 469
2883 -> 1077
2883 -> 1347
2883 -> 2783
2884 -> 43
2884 -> 469
2884 -> 1077
2884 -> 1347
2884 -> 2783
2885 -> 41
2885 -> 469
2885 -> 1077
2885 -> 1347
2885 -> 2783
2886 -> 9
2886 -> 1347
2886 -> 2777
2887 -> 11
2887 -> 1347
2887 -> 2777
2888 -> 15
2888 -> 1347
2888 -> 2777
2889 -> 13
2889 -> 1347
2889 -> 2777
2890 -> 17
2890 -> 1347
2890 -> 2777
2891 -> 19
2891 -> 1347
2891 -> 2777
2892 -> 21
2892 -> 1347
2892 -> 2777
2893 -> 23
2893 -> 1347
2893 -> 2777
2894 -> 25
2894 -> 1347
2894 -> 2777
2895 -> 27
2895 -> 1347
2895 -> 2777
2896 -> 29
2896 -> 1347
2896 -> 2777
2897 -> 31
2897 -> 1347
2897 -> 2777
2898 -> 33
2898 -> 1347
2898 -> 2777
2899 -> 35
2899 -> 1347
2899 -> 2777
2900 -> 37
2900 -> 1347
2900 -> 2777
2901 -> 39
2901 -> 1347
2901 -> 2777
2902 -> 41
2902 -> 1347
2902 -> 2777
2903 -> 43
2903 -> 1347
2903 -> 2777
2904 -> 501
2904 -> 2905
2905 -> 61
2906 -> 2907
2907 -> 501
2907 -> 2905
2908 -> 5
2908 -> 230
2908 -> 231
2908 -> 233
2908 -> 235
2908 -> 715
2908 -> 883
2909 -> 2907
2910 -> 657
2910 -> 2911
2910 -> 2912
2913 -> 108
2914 -> 1412
2915 -> 61
2916 -> 2917
2917 -> 61
2918 -> 9
2918 -> 11
2918 -> 13
2918 -> 15
2918 -> 17
2918 -> 19
2918 -> 21
2918 -> 23
2918 -> 25
2918 -> 27
2918 -> 29
2918 -> 31
2918 -> 33
2918 -> 35
2918 -> 37
2918 -> 39
2918 -> 41
2918 -> 43
2918 -> 95
2918 -> 412
2918 -> 413
2918 -> 414
2918 -> 415
2918 -> 416
2918 -> 2919
2920 -> 350
2920 -> 351
2920 -> 352
2920 -> 353
2920 -> 354
2920 -> 355
2920 -> 356
2920 -> 357
2920 -> 495
2920 -> 503
2920 -> 510
2920 -> 512
2920 -> 2916
2921 -> 5
2921 -> 85
2922 -> 1412
2923 -> 61
2924 -> 2925
2926 -> 61
2927 -> 61
2928 -> 2925
2929 -> 2923
2929 -> 2930
2931 -> 61
2933 -> 2934
2934 -> 1257
2934 -> 1258
2934 -> 1259
2935 -> 2926
2935 -> 2934
2936 -> 2927
2936 -> 2934
2937 -> 3
2937 -> 2934
2938 -> 112
2938 -> 2939
2939 -> 268
2943 -> 1968
2943 -> 2947
2943 -> 2949
2943 -> 2950
2945 -> 2946
2945 -> 2947
2945 -> 2948
2950 -> 1968
2950 -> 2015
2951 -> 2952
2951 -> 2953
2954 -> 61
2955 -> 2956
2957 -> 2958
2959 -> 2015
2960 -> 2961
2960 -> 2962
2961 -> 1133
2961 -> 1968
2961 -> 2947
2962 -> 158
2962 -> 1856
2962 -> 1857
2962 -> 2071
2962 -> 2964
2963 -> 61
2964 -> 419
2965 -> 323
2965 -> 540
2966 -> 2930
2969 -> 3
2969 -> 1257
2969 -> 1258
2969 -> 1259
2969 -> 2948
2970 -> 2942
2970 -> 2944
2970 -> 2987
2972 -> 1330
2973 -> 74
2973 -> 80
2973 -> 81
2973 -> 2115
2974 -> 2537
2975 -> 2976
2976 -> 3
2976 -> 653
2976 -> 1585
2976 -> 1903
2978 -> 933
2980 -> 551
2980 -> 2981
2980 -> 2982
2980 -> 2983
2980 -> 2984
2980 -> 2985
2987 -> 2577
2987 -> 2613
2987 -> 2661
2987 -> 2666
2987 -> 2674
2987 -> 2967
2987 -> 2989
2987 -> 2990
2987 -> 2991
2987 -> 2992
2988 -> 1257
2988 -> 1258
2988 -> 1259
2988 -> 2948
2988 -> 2987
2988 -> 2989
2989 -> 3
2989 -> 538
2989 -> 2195
2989 -> 2196
2989 -> 2971
2989 -> 2986
2993 -> 2942
2993 -> 2944
2993 -> 2994
2994 -> 2561
2994 -> 2967
2994 -> 2990
2994 -> 2991
2994 -> 2992
2995 -> 1257
2995 -> 1258
2995 -> 1259
2995 -> 2948
2995 -> 2994
2996 -> 1997
2997 -> 1169
2997 -> 2417
2999 -> 1996
3001 -> 6
3001 -> 112
3001 -> 1169
3002 -> 549
3002 -> 1049
3002 -> 1169
3002 -> 1188
3002 -> 2429
3003 -> 1156
3003 -> 3004
3004 -> 96
3004 -> 744
3004 -> 862
3004 -> 3325
3004 -> 3326
3004 -> 3327
3004 -> 3328
3004 -> 3329
3004 -> 3330
3004 -> 3331
3005 -> 549
3006 -> 2954
3007 -> 216
3007 -> 1341
3007 -> 3008
3007 -> 3009
3008 -> 378
3009 -> 353
3009 -> 3904
3010 -> 3008
3011 -> 353
3011 -> 368
3011 -> 3010
3012 -> 95
3012 -> 163
3012 -> 370
3012 -> 371
3012 -> 404
3012 -> 3010
3012 -> 3013
3014 -> 353
3014 -> 368
3014 -> 3010
3014 -> 3015
3014 -> 3016
3017 -> 372
3017 -> 3010
3018 -> 1345
3018 -> 3010
3018 -> 3019
3019 -> 3762
3019 -> 3768
3020 -> 384
3020 -> 3010
3021 -> 353
3022 -> 3009
3023 -> 384
3023 -> 3024
3024 -> 4025
3025 -> 384
3025 -> 1585
3025 -> 3026
3026 -> 3079
3027 -> 384
3027 -> 1585
3027 -> 3028
3028 -> 3497
3029 -> 384
3029 -> 1585
3029 -> 3030
3030 -> 3930
3031 -> 64
3031 -> 384
3032 -> 384
3033 -> 362
3033 -> 384
3033 -> 3010
3034 -> 384
3034 -> 3033
3035 -> 1584
3035 -> 3033
3036 -> 384
3036 -> 3035
3037 -> 384
3037 -> 1585
3037 -> 3010
3038 -> 384
3038 -> 3010
3039 -> 384
3039 -> 1584
3039 -> 3010
3040 -> 384
3041 -> 384
3042 -> 380
3042 -> 384
3043 -> 64
3044 -> 3045
3045 -> 246
3046 -> 64
3046 -> 376
3047 -> 64
3047 -> 376
3048 -> 64
3048 -> 376
3049 -> 64
3049 -> 376
3050 -> 64
3051 -> 245
3052 -> 250
3053 -> 250
3054 -> 250
3055 -> 250
3056 -> 377
3056 -> 3010
3056 -> 3052
3057 -> 377
3057 -> 3026
3057 -> 3053
3058 -> 377
3058 -> 3028
3058 -> 3054
3059 -> 377
3059 -> 3030
3059 -> 3055
3060 -> 64
3060 -> 250
3061 -> 64
3061 -> 250
3061 -> 272
3061 -> 376
3062 -> 63
3062 -> 3061
3063 -> 3061
3064 -> 63
3064 -> 3061
3065 -> 3061
3066 -> 63
3066 -> 3061
3067 -> 64
3067 -> 250
3067 -> 1465
3068 -> 64
3068 -> 250
3068 -> 1586
3069 -> 64
3069 -> 250
3069 -> 1587
3070 -> 64
3070 -> 250
3070 -> 1049
3071 -> 483
3071 -> 1049
3072 -> 3073
3073 -> 61
3074 -> 95
3074 -> 398
3074 -> 400
3074 -> 401
3074 -> 402
3074 -> 403
3074 -> 404
3074 -> 405
3074 -> 406
3074 -> 407
3074 -> 408
3074 -> 409
3074 -> 410
3074 -> 2919
3075 -> 3072
3076 -> 369
3076 -> 417
3077 -> 345
3078 -> 216
3078 -> 1341
3078 -> 3079
3078 -> 3080
3079 -> 378
3080 -> 354
3080 -> 3904
3081 -> 354
3081 -> 368
3081 -> 3026
3082 -> 95
3082 -> 163
3082 -> 370
3082 -> 371
3082 -> 402
3082 -> 3026
3082 -> 3083
3084 -> 354
3084 -> 368
3084 -> 3015
3084 -> 3016
3084 -> 3026
3085 -> 372
3085 -> 3026
3086 -> 1345
3086 -> 3026
3086 -> 3087
3087 -> 3762
3087 -> 3768
3088 -> 384
3088 -> 3026
3089 -> 354
3090 -> 3080
3091 -> 384
3091 -> 3024
3092 -> 384
3092 -> 3010
3093 -> 384
3093 -> 1585
3093 -> 3028
3094 -> 384
3094 -> 1585
3094 -> 3030
3095 -> 64
3095 -> 384
3096 -> 384
3097 -> 362
3097 -> 384
3097 -> 3026
3098 -> 384
3098 -> 3097
3099 -> 1584
3099 -> 3097
3100 -> 384
3100 -> 3099
3101 -> 384
3101 -> 1585
3101 -> 3026
3102 -> 384
3102 -> 3026
3103 -> 384
3103 -> 1584
3103 -> 3026
3104 -> 384
3105 -> 384
3106 -> 380
3106 -> 384
3107 -> 547
3107 -> 548
3107 -> 551
3107 -> 1282
3107 -> 3108
3109 -> 74
3109 -> 75
3109 -> 80
3109 -> 81
3110 -> 3
3110 -> 345
3110 -> 1075
3110 -> 3107
3111 -> 3
3111 -> 345
3111 -> 1075
3111 -> 3109
3112 -> 3
3112 -> 1075
3112 -> 3109
3113 -> 3114
3115 -> 56
3115 -> 57
3115 -> 88
3117 -> 3118
3118 -> 1
3118 -> 112
3119 -> 1329
3119 -> 3120
3120 -> 87
3120 -> 1346
3121 -> 1
3121 -> 230
3121 -> 231
3121 -> 233
3121 -> 330
3122 -> 88
3123 -> 864
3123 -> 2732
3123 -> 3122
3123 -> 3124
3124 -> 330
3125 -> 63
3125 -> 3123
3126 -> 3123
3127 -> 3125
3128 -> 3123
3129 -> 3125
3130 -> 93
3130 -> 220
3130 -> 864
3131 -> 3130
3132 -> 101
3132 -> 220
3132 -> 864
3133 -> 3132
3134 -> 3135
3135 -> 277
3136 -> 3
3136 -> 216
3136 -> 329
3136 -> 546
3136 -> 682
3136 -> 1329
3136 -> 1334
3136 -> 1335
3136 -> 1341
3136 -> 1344
3136 -> 1345
3136 -> 1346
3136 -> 1874
3136 -> 3137
3136 -> 3138
3136 -> 3139
3137 -> 274
3138 -> 276
3139 -> 269
3140 -> 92
3140 -> 268
3141 -> 277
3142 -> 126
3142 -> 129
3142 -> 134
3142 -> 145
3142 -> 282
3142 -> 283
3142 -> 284
3142 -> 2938
3142 -> 3143
3142 -> 3144
3145 -> 126
3145 -> 129
3145 -> 145
3145 -> 282
3145 -> 283
3145 -> 284
3145 -> 2938
3146 -> 112
3146 -> 126
3146 -> 129
3146 -> 283
3146 -> 284
3147 -> 145
3147 -> 282
3147 -> 283
3147 -> 284
3148 -> 145
3148 -> 282
3148 -> 283
3148 -> 284
3149 -> 114
3149 -> 3148
3150 -> 145
3150 -> 282
3150 -> 283
3150 -> 284
3151 -> 114
3151 -> 3150
3152 -> 145
3152 -> 148
3152 -> 271
3152 -> 282
3152 -> 283
3152 -> 2732
3153 -> 145
3153 -> 148
3153 -> 271
3153 -> 282
3153 -> 284
3153 -> 2732
3154 -> 145
3154 -> 275
3154 -> 282
3154 -> 283
3154 -> 3152
3155 -> 145
3155 -> 275
3155 -> 282
3155 -> 284
3155 -> 3153
3157 -> 1377
3158 -> 165
3158 -> 996
3159 -> 5
3159 -> 998
3159 -> 3160
3161 -> 3013
3162 -> 3160
3163 -> 797
3163 -> 3013
3163 -> 3164
3164 -> 27
3164 -> 715
3164 -> 866
3164 -> 3013
3164 -> 3160
3165 -> 973
3165 -> 3013
3165 -> 3164
3166 -> 469
3166 -> 3013
3166 -> 3164
3167 -> 809
3167 -> 3013
3167 -> 3164
3168 -> 3167
3169 -> 1400
3169 -> 3166
3170 -> 1398
3170 -> 3166
3171 -> 715
3171 -> 3013
3171 -> 3164
3172 -> 829
3172 -> 3013
3172 -> 3164
3173 -> 1113
3173 -> 3013
3173 -> 3164
3174 -> 1115
3174 -> 3013
3174 -> 3164
3175 -> 1117
3175 -> 3013
3175 -> 3164
3176 -> 350
3176 -> 351
3176 -> 352
3176 -> 353
3176 -> 503
3176 -> 510
3176 -> 512
3176 -> 2293
3176 -> 2294
3177 -> 3178
3178 -> 112
3178 -> 220
3178 -> 866
3179 -> 2708
3179 -> 3180
3180 -> 92
3180 -> 112
3180 -> 866
3181 -> 2708
3181 -> 3182
3182 -> 112
3182 -> 866
3183 -> 3184
3183 -> 3185
3185 -> 1908
3186 -> 3
3186 -> 2588
3186 -> 3187
3188 -> 3
3188 -> 50
3188 -> 1243
3188 -> 2588
3188 -> 3186
3188 -> 3189
3188 -> 3190
3188 -> 3191
3188 -> 3192
3193 -> 220
3193 -> 866
3194 -> 92
3194 -> 866
3195 -> 3196
3196 -> 95
3196 -> 230
3196 -> 240
3196 -> 286
3196 -> 293
3196 -> 294
3196 -> 297
3196 -> 423
3196 -> 3184
3197 -> 95
3197 -> 230
3197 -> 240
3197 -> 286
3197 -> 293
3197 -> 297
3197 -> 423
3197 -> 3184
3197 -> 3198
3199 -> 95
3199 -> 240
3199 -> 286
3199 -> 423
3200 -> 82
3200 -> 240
3200 -> 330
3200 -> 538
3200 -> 866
3201 -> 17
3201 -> 21
3201 -> 27
3201 -> 381
3202 -> 7
3202 -> 17
3202 -> 21
3202 -> 27
3202 -> 381
3202 -> 3013
3202 -> 3160
3203 -> 3
3203 -> 5
3203 -> 7
3203 -> 3013
3203 -> 3160
3203 -> 3204
3204 -> 5
3204 -> 85
3204 -> 177
3204 -> 369
3204 -> 375
3204 -> 404
3204 -> 2196
3204 -> 3160
3205 -> 369
3205 -> 375
3205 -> 404
3205 -> 417
3205 -> 2196
3205 -> 3160
3206 -> 182
3206 -> 657
3207 -> 184
3208 -> 185
3208 -> 657
3209 -> 2834
3210 -> 3211
3211 -> 96
3211 -> 744
3211 -> 862
3211 -> 867
3211 -> 2591
3211 -> 2592
3211 -> 3160
3212 -> 3213
3213 -> 93
3213 -> 96
3213 -> 112
3213 -> 181
3213 -> 862
3213 -> 3160
3214 -> 3215
3215 -> 96
3215 -> 862
3215 -> 867
3215 -> 2591
3215 -> 2592
3215 -> 2723
3215 -> 3160
3216 -> 3
3216 -> 1913
3216 -> 3013
3216 -> 3083
3216 -> 3160
3216 -> 3217
3218 -> 3219
3219 -> 3
3219 -> 96
3219 -> 744
3219 -> 867
3219 -> 2591
3219 -> 2592
3219 -> 2828
3219 -> 2829
3219 -> 2830
3219 -> 2831
3219 -> 3160
3219 -> 3213
3219 -> 3217
3220 -> 3221
3221 -> 862
3221 -> 2590
3221 -> 2834
3221 -> 3139
3222 -> 104
3222 -> 188
3222 -> 867
3222 -> 1243
3222 -> 2591
3222 -> 2592
3222 -> 2968
3222 -> 3188
3222 -> 3192
3222 -> 3206
3222 -> 3223
3222 -> 3224
3222 -> 3225
3226 -> 181
3226 -> 3013
3226 -> 3160
3226 -> 3164
3227 -> 3
3227 -> 5
3227 -> 469
3227 -> 3013
3227 -> 3160
3227 -> 3164
3227 -> 3204
3228 -> 3
3228 -> 369
3228 -> 481
3228 -> 3013
3228 -> 3160
3228 -> 3164
3228 -> 3205
3229 -> 201
3229 -> 212
3229 -> 213
3229 -> 369
3229 -> 483
3229 -> 1585
3229 -> 3013
3229 -> 3160
3229 -> 3164
3229 -> 3205
3230 -> 3229
3231 -> 408
3231 -> 481
3231 -> 3013
3231 -> 3160
3231 -> 3164
3232 -> 405
3232 -> 481
3232 -> 3013
3232 -> 3160
3232 -> 3164
3233 -> 3229
3234 -> 408
3234 -> 2746
3234 -> 3013
3234 -> 3160
3234 -> 3164
3235 -> 407
3235 -> 2746
3235 -> 3013
3235 -> 3160
3235 -> 3164
3236 -> 405
3236 -> 2746
3236 -> 3013
3236 -> 3160
3236 -> 3164
3237 -> 404
3237 -> 2746
3237 -> 3013
3237 -> 3160
3237 -> 3164
3238 -> 3
3238 -> 5
3238 -> 3157
3238 -> 3160
3238 -> 3204
3239 -> 7
3239 -> 9
3239 -> 3013
3239 -> 3160
3240 -> 7
3240 -> 11
3240 -> 3013
3240 -> 3160
3241 -> 7
3241 -> 13
3241 -> 3013
3241 -> 3160
3242 -> 7
3242 -> 15
3242 -> 3013
3242 -> 3160
3243 -> 7
3243 -> 19
3243 -> 3013
3243 -> 3160
3244 -> 7
3244 -> 23
3244 -> 3013
3244 -> 3160
3245 -> 7
3245 -> 25
3245 -> 3013
3245 -> 3160
3246 -> 7
3246 -> 29
3246 -> 3013
3246 -> 3160
3247 -> 9
3247 -> 469
3247 -> 3013
3247 -> 3160
3247 -> 3164
3248 -> 11
3248 -> 469
3248 -> 3013
3248 -> 3160
3248 -> 3164
3249 -> 13
3249 -> 469
3249 -> 3013
3249 -> 3160
3249 -> 3164
3250 -> 15
3250 -> 469
3250 -> 3013
3250 -> 3160
3250 -> 3164
3251 -> 17
3251 -> 469
3251 -> 3013
3251 -> 3160
3251 -> 3164
3252 -> 19
3252 -> 469
3252 -> 3013
3252 -> 3160
3252 -> 3164
3253 -> 21
3253 -> 469
3253 -> 3013
3253 -> 3160
3253 -> 3164
3254 -> 23
3254 -> 469
3254 -> 3013
3254 -> 3160
3254 -> 3164
3255 -> 25
3255 -> 469
3255 -> 3013
3255 -> 3160
3255 -> 3164
3256 -> 27
3256 -> 469
3256 -> 3013
3256 -> 3160
3256 -> 3164
3257 -> 29
3257 -> 469
3257 -> 3013
3257 -> 3160
3257 -> 3164
3258 -> 9
3258 -> 3157
3258 -> 3160
3259 -> 11
3259 -> 3157
3259 -> 3160
3260 -> 15
3260 -> 3157
3260 -> 3160
3261 -> 13
3261 -> 3157
3261 -> 3160
3262 -> 17
3262 -> 3157
3262 -> 3160
3263 -> 19
3263 -> 3157
3263 -> 3160
3264 -> 21
3264 -> 3157
3264 -> 3160
3265 -> 23
3265 -> 3157
3265 -> 3160
3266 -> 25
3266 -> 3157
3266 -> 3160
3267 -> 27
3267 -> 3157
3267 -> 3160
3268 -> 29
3268 -> 3157
3268 -> 3160
3269 -> 192
3269 -> 884
3270 -> 56
3270 -> 192
3270 -> 3269
3271 -> 56
3271 -> 59
3271 -> 192
3271 -> 3269
3272 -> 1377
3273 -> 165
3273 -> 996
3274 -> 5
3274 -> 998
3274 -> 3275
3276 -> 3277
3278 -> 3275
3279 -> 797
3279 -> 3277
3279 -> 3280
3280 -> 1913
3280 -> 3275
3280 -> 3277
3281 -> 799
3281 -> 3277
3281 -> 3280
3282 -> 973
3282 -> 3277
3282 -> 3280
3283 -> 469
3283 -> 3277
3283 -> 3280
3284 -> 809
3284 -> 3277
3284 -> 3280
3285 -> 3284
3286 -> 1400
3286 -> 3283
3287 -> 1398
3287 -> 3283
3288 -> 715
3288 -> 3277
3288 -> 3280
3289 -> 829
3289 -> 3277
3289 -> 3280
3290 -> 1113
3290 -> 3277
3290 -> 3280
3291 -> 1115
3291 -> 3277
3291 -> 3280
3292 -> 1117
3292 -> 3277
3292 -> 3280
3293 -> 3294
3294 -> 112
3294 -> 220
3294 -> 1913
3295 -> 2708
3295 -> 3296
3296 -> 92
3296 -> 112
3296 -> 1913
3297 -> 2708
3297 -> 3298
3298 -> 112
3298 -> 1913
3299 -> 3300
3299 -> 3301
3301 -> 1909
3302 -> 3
3302 -> 3187
3302 -> 3303
3303 -> 330
3303 -> 3314
3304 -> 3
3304 -> 50
3304 -> 1243
3304 -> 3189
3304 -> 3190
3304 -> 3191
3304 -> 3192
3304 -> 3302
3304 -> 3303
3304 -> 3305
3304 -> 3306
3304 -> 3307
3308 -> 220
3308 -> 1913
3309 -> 92
3309 -> 1913
3310 -> 3311
3311 -> 95
3311 -> 230
3311 -> 240
3311 -> 286
3311 -> 293
3311 -> 294
3311 -> 297
3311 -> 423
3311 -> 3300
3312 -> 95
3312 -> 230
3312 -> 240
3312 -> 286
3312 -> 293
3312 -> 297
3312 -> 423
3312 -> 3198
3312 -> 3300
3313 -> 330
3313 -> 3314
3314 -> 95
3314 -> 239
3314 -> 240
3314 -> 286
3315 -> 330
3315 -> 3314
3316 -> 82
3316 -> 240
3316 -> 330
3316 -> 538
3316 -> 1913
3317 -> 17
3317 -> 21
3317 -> 27
3317 -> 41
3317 -> 381
3318 -> 7
3318 -> 17
3318 -> 21
3318 -> 27
3318 -> 41
3318 -> 381
3318 -> 3275
3318 -> 3277
3319 -> 3
3319 -> 5
3319 -> 7
3319 -> 3275
3319 -> 3277
3320 -> 5
3320 -> 85
3320 -> 3275
3321 -> 369
3321 -> 417
3321 -> 3275
3322 -> 182
3322 -> 657
3323 -> 185
3323 -> 657
3324 -> 3004
3325 -> 7
3325 -> 17
3325 -> 3275
3325 -> 3277
3326 -> 7
3326 -> 21
3326 -> 3275
3326 -> 3277
3327 -> 7
3327 -> 27
3327 -> 3275
3327 -> 3277
3328 -> 7
3328 -> 31
3328 -> 3275
3328 -> 3277
3329 -> 7
3329 -> 35
3329 -> 3275
3329 -> 3277
3330 -> 7
3330 -> 39
3330 -> 3275
3330 -> 3277
3331 -> 7
3331 -> 43
3331 -> 3275
3331 -> 3277
3332 -> 1243
3332 -> 2968
3332 -> 3224
3332 -> 3325
3332 -> 3326
3332 -> 3327
3332 -> 3328
3332 -> 3329
3332 -> 3330
3332 -> 3331
3332 -> 3333
3332 -> 3334
3334 -> 50
3334 -> 188
3334 -> 1245
3334 -> 3225
3334 -> 3302
3334 -> 3322
3334 -> 3336
3334 -> 3339
3334 -> 3340
3335 -> 1243
3335 -> 1245
3335 -> 3224
3335 -> 3325
3335 -> 3326
3335 -> 3327
3335 -> 3328
3335 -> 3329
3335 -> 3330
3335 -> 3331
3335 -> 3334
3335 -> 3336
3335 -> 3337
3335 -> 3338
3341 -> 17
3341 -> 21
3341 -> 27
3341 -> 469
3341 -> 3275
3341 -> 3277
3341 -> 3280
3342 -> 31
3342 -> 35
3342 -> 39
3342 -> 43
3342 -> 469
3342 -> 3275
3342 -> 3277
3342 -> 3280
3343 -> 181
3343 -> 3275
3343 -> 3277
3343 -> 3280
3344 -> 3
3344 -> 5
3344 -> 469
3344 -> 3275
3344 -> 3277
3344 -> 3280
3345 -> 3
3345 -> 369
3345 -> 481
3345 -> 3275
3345 -> 3277
3345 -> 3280
3346 -> 63
3346 -> 2732
3346 -> 3275
3346 -> 3277
3346 -> 3280
3347 -> 275
3347 -> 3275
3347 -> 3277
3347 -> 3280
3348 -> 3346
3349 -> 3347
3350 -> 408
3350 -> 481
3350 -> 3275
3350 -> 3277
3350 -> 3280
3351 -> 407
3351 -> 481
3351 -> 3275
3351 -> 3277
3351 -> 3280
3352 -> 405
3352 -> 481
3352 -> 3275
3352 -> 3277
3352 -> 3280
3353 -> 404
3353 -> 481
3353 -> 3275
3353 -> 3277
3353 -> 3280
3354 -> 402
3354 -> 481
3354 -> 3275
3354 -> 3277
3354 -> 3280
3355 -> 401
3355 -> 481
3355 -> 3275
3355 -> 3277
3355 -> 3280
3356 -> 400
3356 -> 481
3356 -> 3275
3356 -> 3277
3356 -> 3280
3357 -> 398
3357 -> 481
3357 -> 3275
3357 -> 3277
3357 -> 3280
3358 -> 3346
3359 -> 3347
3360 -> 408
3360 -> 2746
3360 -> 3275
3360 -> 3277
3360 -> 3280
3361 -> 407
3361 -> 2746
3361 -> 3275
3361 -> 3277
3361 -> 3280
3362 -> 405
3362 -> 2746
3362 -> 3275
3362 -> 3277
3362 -> 3280
3363 -> 404
3363 -> 2746
3363 -> 3275
3363 -> 3277
3363 -> 3280
3364 -> 402
3364 -> 2746
3364 -> 3275
3364 -> 3277
3364 -> 3280
3365 -> 401
3365 -> 2746
3365 -> 3275
3365 -> 3277
3365 -> 3280
3366 -> 400
3366 -> 2746
3366 -> 3275
3366 -> 3277
3366 -> 3280
3367 -> 398
3367 -> 2746
3367 -> 3275
3367 -> 3277
3367 -> 3280
3368 -> 3
3368 -> 5
3368 -> 3272
3368 -> 3275
3368 -> 3320
3369 -> 7
3369 -> 9
3369 -> 3275
3369 -> 3277
3370 -> 7
3370 -> 11
3370 -> 3275
3370 -> 3277
3371 -> 7
3371 -> 13
3371 -> 3275
3371 -> 3277
3372 -> 7
3372 -> 15
3372 -> 3275
3372 -> 3277
3373 -> 7
3373 -> 19
3373 -> 3275
3373 -> 3277
3374 -> 7
3374 -> 23
3374 -> 3275
3374 -> 3277
3375 -> 7
3375 -> 25
3375 -> 3275
3375 -> 3277
3376 -> 7
3376 -> 29
3376 -> 3275
3376 -> 3277
3377 -> 7
3377 -> 41
3377 -> 3275
3377 -> 3277
3378 -> 9
3378 -> 469
3378 -> 3275
3378 -> 3277
3378 -> 3280
3379 -> 11
3379 -> 469
3379 -> 3275
3379 -> 3277
3379 -> 3280
3380 -> 13
3380 -> 469
3380 -> 3275
3380 -> 3277
3380 -> 3280
3381 -> 15
3381 -> 469
3381 -> 3275
3381 -> 3277
3381 -> 3280
3382 -> 17
3382 -> 469
3382 -> 3275
3382 -> 3277
3382 -> 3280
3383 -> 19
3383 -> 469
3383 -> 3275
3383 -> 3277
3383 -> 3280
3384 -> 21
3384 -> 469
3384 -> 3275
3384 -> 3277
3384 -> 3280
3385 -> 23
3385 -> 469
3385 -> 3275
3385 -> 3277
3385 -> 3280
3386 -> 25
3386 -> 469
3386 -> 3275
3386 -> 3277
3386 -> 3280
3387 -> 27
3387 -> 469
3387 -> 3275
3387 -> 3277
3387 -> 3280
3388 -> 29
3388 -> 469
3388 -> 3275
3388 -> 3277
3388 -> 3280
3389 -> 31
3389 -> 469
3389 -> 3275
3389 -> 3277
3389 -> 3280
3390 -> 35
3390 -> 469
3390 -> 3275
3390 -> 3277
3390 -> 3280
3391 -> 39
3391 -> 469
3391 -> 3275
3391 -> 3277
3391 -> 3280
3392 -> 43
3392 -> 469
3392 -> 3275
3392 -> 3277
3392 -> 3280
3393 -> 41
3393 -> 469
3393 -> 3275
3393 -> 3277
3393 -> 3280
3394 -> 9
3394 -> 3272
3394 -> 3275
3395 -> 11
3395 -> 3272
3395 -> 3275
3396 -> 15
3396 -> 3272
3396 -> 3275
3397 -> 13
3397 -> 3272
3397 -> 3275
3398 -> 17
3398 -> 3272
3398 -> 3275
3399 -> 19
3399 -> 3272
3399 -> 3275
3400 -> 21
3400 -> 3272
3400 -> 3275
3401 -> 23
3401 -> 3272
3401 -> 3275
3402 -> 25
3402 -> 3272
3402 -> 3275
3403 -> 27
3403 -> 3272
3403 -> 3275
3404 -> 29
3404 -> 3272
3404 -> 3275
3405 -> 31
3405 -> 3272
3405 -> 3275
3406 -> 35
3406 -> 3272
3406 -> 3275
3407 -> 39
3407 -> 3272
3407 -> 3275
3408 -> 43
3408 -> 3272
3408 -> 3275
3409 -> 41
3409 -> 3272
3409 -> 3275
3410 -> 121
3410 -> 192
3411 -> 56
3411 -> 192
3411 -> 3410
3412 -> 56
3412 -> 59
3412 -> 192
3412 -> 3410
3413 -> 1377
3414 -> 165
3414 -> 996
3415 -> 5
3415 -> 998
3415 -> 3217
3416 -> 3083
3417 -> 3217
3418 -> 797
3418 -> 3083
3418 -> 3419
3419 -> 2869
3419 -> 3083
3419 -> 3217
3420 -> 799
3420 -> 3083
3420 -> 3419
3421 -> 3
3421 -> 7
3421 -> 41
3421 -> 797
3421 -> 3083
3421 -> 3217
3421 -> 3419
3422 -> 973
3422 -> 3083
3422 -> 3419
3423 -> 469
3423 -> 3083
3423 -> 3419
3424 -> 809
3424 -> 3083
3424 -> 3419
3425 -> 3424
3426 -> 1400
3426 -> 3423
3427 -> 1398
3427 -> 3423
3428 -> 715
3428 -> 3083
3428 -> 3419
3429 -> 829
3429 -> 3083
3429 -> 3419
3430 -> 1113
3430 -> 3083
3430 -> 3419
3431 -> 1115
3431 -> 3083
3431 -> 3419
3432 -> 1117
3432 -> 3083
3432 -> 3419
3433 -> 354
3433 -> 355
3433 -> 356
3433 -> 357
3433 -> 2293
3433 -> 2294
3433 -> 3434
3434 -> 330
3434 -> 3454
3435 -> 3436
3436 -> 112
3436 -> 220
3436 -> 2869
3437 -> 2708
3437 -> 3438
3438 -> 92
3438 -> 112
3438 -> 2869
3439 -> 2708
3439 -> 3440
3440 -> 112
3440 -> 2869
3441 -> 3442
3441 -> 3443
3443 -> 1911
3444 -> 3445
3445 -> 95
3445 -> 240
3445 -> 2869
3446 -> 3
3446 -> 3187
3446 -> 3434
3447 -> 3
3447 -> 1243
3447 -> 3305
3447 -> 3306
3447 -> 3307
3447 -> 3434
3448 -> 220
3448 -> 2869
3449 -> 92
3449 -> 2869
3450 -> 3451
3451 -> 95
3451 -> 230
3451 -> 240
3451 -> 286
3451 -> 293
3451 -> 294
3451 -> 297
3451 -> 428
3451 -> 3442
3452 -> 95
3452 -> 230
3452 -> 240
3452 -> 286
3452 -> 293
3452 -> 297
3452 -> 428
3452 -> 3198
3452 -> 3442
3453 -> 330
3453 -> 3454
3454 -> 95
3454 -> 240
3454 -> 286
3454 -> 428
3455 -> 330
3455 -> 3454
3456 -> 82
3456 -> 240
3456 -> 330
3456 -> 538
3456 -> 2869
3457 -> 31
3457 -> 35
3457 -> 39
3457 -> 43
3457 -> 381
3458 -> 7
3458 -> 31
3458 -> 35
3458 -> 39
3458 -> 43
3458 -> 381
3458 -> 3083
3458 -> 3217
3459 -> 3
3459 -> 5
3459 -> 7
3459 -> 3083
3459 -> 3217
3459 -> 3460
3460 -> 177
3460 -> 353
3460 -> 1654
3460 -> 3461
3461 -> 369
3461 -> 375
3461 -> 404
3461 -> 417
3461 -> 2196
3461 -> 3217
3462 -> 182
3462 -> 657
3463 -> 185
3463 -> 657
3464 -> 181
3464 -> 3083
3464 -> 3217
3464 -> 3419
3465 -> 3
3465 -> 5
3465 -> 469
3465 -> 3083
3465 -> 3217
3465 -> 3419
3465 -> 3460
3466 -> 3
3466 -> 369
3466 -> 481
3466 -> 3083
3466 -> 3217
3466 -> 3419
3466 -> 3461
3467 -> 275
3467 -> 3083
3467 -> 3217
3467 -> 3419
3468 -> 3467
3469 -> 402
3469 -> 481
3469 -> 3083
3469 -> 3217
3469 -> 3419
3470 -> 401
3470 -> 481
3470 -> 3083
3470 -> 3217
3470 -> 3419
3471 -> 400
3471 -> 481
3471 -> 3083
3471 -> 3217
3471 -> 3419
3472 -> 398
3472 -> 481
3472 -> 3083
3472 -> 3217
3472 -> 3419
3473 -> 3467
3474 -> 402
3474 -> 2746
3474 -> 3083
3474 -> 3217
3474 -> 3419
3475 -> 401
3475 -> 2746
3475 -> 3083
3475 -> 3217
3475 -> 3419
3476 -> 400
3476 -> 2746
3476 -> 3083
3476 -> 3217
3476 -> 3419
3477 -> 398
3477 -> 2746
3477 -> 3083
3477 -> 3217
3477 -> 3419
3478 -> 3
3478 -> 5
3478 -> 3217
3478 -> 3413
3478 -> 3460
3479 -> 7
3479 -> 41
3479 -> 3083
3479 -> 3217
3480 -> 31
3480 -> 469
3480 -> 3083
3480 -> 3217
3480 -> 3419
3481 -> 35
3481 -> 469
3481 -> 3083
3481 -> 3217
3481 -> 3419
3482 -> 39
3482 -> 469
3482 -> 3083
3482 -> 3217
3482 -> 3419
3483 -> 43
3483 -> 469
3483 -> 3083
3483 -> 3217
3483 -> 3419
3484 -> 41
3484 -> 469
3484 -> 3083
3484 -> 3217
3484 -> 3419
3485 -> 31
3485 -> 3217
3485 -> 3413
3486 -> 35
3486 -> 3217
3486 -> 3413
3487 -> 39
3487 -> 3217
3487 -> 3413
3488 -> 43
3488 -> 3217
3488 -> 3413
3489 -> 41
3489 -> 3217
3489 -> 3413
3490 -> 3491
3491 -> 93
3491 -> 96
3491 -> 112
3491 -> 181
3491 -> 3217
3492 -> 192
3492 -> 3493
3494 -> 56
3494 -> 192
3494 -> 3492
3495 -> 56
3495 -> 59
3495 -> 192
3495 -> 3492
3496 -> 216
3496 -> 1341
3496 -> 3497
3496 -> 3498
3497 -> 378
3498 -> 355
3498 -> 3904
3499 -> 355
3499 -> 368
3499 -> 3028
3500 -> 95
3500 -> 163
3500 -> 370
3500 -> 371
3500 -> 401
3500 -> 3028
3500 -> 3083
3501 -> 355
3501 -> 368
3501 -> 3015
3501 -> 3016
3501 -> 3028
3502 -> 372
3502 -> 3028
3503 -> 1345
3503 -> 3028
3503 -> 3504
3504 -> 3762
3504 -> 3768
3505 -> 384
3505 -> 3028
3506 -> 355
3507 -> 3498
3508 -> 384
3508 -> 3024
3509 -> 384
3509 -> 3010
3510 -> 384
3510 -> 3026
3511 -> 384
3511 -> 1585
3511 -> 3030
3512 -> 64
3512 -> 384
3513 -> 384
3514 -> 362
3514 -> 384
3514 -> 3028
3515 -> 384
3515 -> 3514
3516 -> 1584
3516 -> 3514
3517 -> 384
3517 -> 3516
3518 -> 384
3518 -> 1585
3518 -> 3028
3519 -> 384
3519 -> 3028
3520 -> 384
3520 -> 1584
3520 -> 3028
3521 -> 384
3522 -> 384
3523 -> 380
3523 -> 384
3524 -> 1348
3525 -> 168
3526 -> 3527
3528 -> 302
3528 -> 1430
3528 -> 3525
3528 -> 3529
3529 -> 300
3530 -> 302
3530 -> 975
3530 -> 3525
3530 -> 3529
3531 -> 302
3531 -> 305
3531 -> 3525
3531 -> 3529
3532 -> 302
3532 -> 1518
3532 -> 3525
3532 -> 3529
3533 -> 3532
3534 -> 56
3534 -> 500
3534 -> 506
3534 -> 1856
3534 -> 1857
3534 -> 1871
3534 -> 2049
3534 -> 3184
3535 -> 3536
3536 -> 287
3537 -> 2708
3537 -> 3538
3538 -> 92
3538 -> 289
3539 -> 2708
3539 -> 3540
3540 -> 289
3541 -> 3542
3542 -> 1908
3542 -> 2591
3542 -> 2592
3542 -> 3543
3543 -> 3550
3544 -> 3
3544 -> 3187
3544 -> 3543
3545 -> 3
3545 -> 3191
3545 -> 3192
3545 -> 3543
3546 -> 290
3547 -> 288
3548 -> 296
3548 -> 3184
3549 -> 95
3549 -> 296
3549 -> 3184
3550 -> 298
3551 -> 301
3552 -> 82
3552 -> 240
3552 -> 308
3552 -> 538
3552 -> 3551
3553 -> 21
3553 -> 27
3553 -> 381
3554 -> 303
3555 -> 95
3555 -> 240
3555 -> 299
3555 -> 302
3555 -> 308
3555 -> 3551
3556 -> 168
3556 -> 173
3556 -> 302
3556 -> 305
3556 -> 3527
3556 -> 3529
3557 -> 168
3557 -> 178
3557 -> 302
3557 -> 1430
3557 -> 3529
3558 -> 168
3558 -> 176
3558 -> 201
3558 -> 212
3558 -> 213
3558 -> 302
3558 -> 1430
3558 -> 1585
3558 -> 3529
3559 -> 3558
3560 -> 351
3560 -> 3557
3561 -> 353
3561 -> 3557
3562 -> 3558
3563 -> 351
3563 -> 1584
3563 -> 3557
3564 -> 353
3564 -> 1584
3564 -> 3557
3565 -> 308
3565 -> 3199
3565 -> 3566
3565 -> 3567
3566 -> 3527
3567 -> 3527
3568 -> 21
3568 -> 302
3568 -> 305
3568 -> 308
3568 -> 3529
3569 -> 27
3569 -> 302
3569 -> 305
3569 -> 308
3569 -> 3529
3570 -> 173
3570 -> 3524
3571 -> 3524
3572 -> 3524
3573 -> 192
3573 -> 500
3573 -> 506
3573 -> 2004
3573 -> 2008
3573 -> 2192
3574 -> 56
3574 -> 192
3574 -> 3573
3575 -> 56
3575 -> 59
3575 -> 192
3575 -> 3573
3576 -> 216
3576 -> 1341
3576 -> 3577
3576 -> 3578
3577 -> 378
3578 -> 351
3578 -> 3904
3579 -> 3577
3580 -> 351
3580 -> 368
3580 -> 3579
3581 -> 95
3581 -> 163
3581 -> 370
3581 -> 371
3581 -> 407
3581 -> 3013
3581 -> 3579
3582 -> 351
3582 -> 368
3582 -> 3015
3582 -> 3016
3582 -> 3579
3583 -> 1345
3583 -> 2516
3583 -> 3579
3584 -> 384
3584 -> 3579
3585 -> 351
3586 -> 3578
3587 -> 384
3588 -> 362
3588 -> 384
3588 -> 3579
3589 -> 384
3589 -> 3588
3590 -> 1584
3590 -> 3588
3591 -> 384
3591 -> 3590
3592 -> 384
3592 -> 1585
3592 -> 3579
3593 -> 384
3593 -> 3579
3594 -> 384
3594 -> 1584
3594 -> 3579
3595 -> 384
3596 -> 384
3597 -> 380
3597 -> 384
3598 -> 1377
3599 -> 165
3599 -> 996
3600 -> 5
3600 -> 998
3600 -> 1347
3601 -> 1077
3602 -> 1347
3603 -> 797
3603 -> 1077
3603 -> 3604
3603 -> 3605
3605 -> 241
3605 -> 715
3605 -> 829
3605 -> 1113
3605 -> 1115
3605 -> 1117
3606 -> 799
3606 -> 1077
3606 -> 3604
3606 -> 3605
3607 -> 973
3607 -> 1077
3607 -> 3604
3607 -> 3605
3608 -> 809
3608 -> 1077
3608 -> 3604
3608 -> 3605
3609 -> 3608
3610 -> 715
3610 -> 1077
3610 -> 3604
3610 -> 3605
3611 -> 829
3611 -> 1077
3611 -> 3604
3611 -> 3605
3612 -> 1077
3612 -> 1113
3612 -> 3604
3612 -> 3605
3613 -> 1077
3613 -> 1115
3613 -> 3604
3613 -> 3605
3614 -> 1077
3614 -> 1117
3614 -> 3604
3614 -> 3605
3615 -> 3616
3616 -> 219
3617 -> 2708
3617 -> 3618
3618 -> 222
3619 -> 2708
3619 -> 3620
3620 -> 223
3621 -> 1329
3621 -> 1874
3621 -> 3622
3622 -> 98
3622 -> 1346
3623 -> 224
3624 -> 234
3625 -> 229
3626 -> 95
3626 -> 234
3627 -> 236
3628 -> 238
3629 -> 237
3630 -> 3631
3631 -> 3
3631 -> 1077
3631 -> 3605
3632 -> 114
3632 -> 3605
3633 -> 272
3633 -> 1077
3633 -> 3605
3634 -> 3635
3635 -> 63
3635 -> 376
3635 -> 3633
3636 -> 3637
3637 -> 275
3637 -> 1077
3637 -> 1347
3637 -> 3605
3638 -> 242
3639 -> 3
3639 -> 5
3639 -> 469
3639 -> 1077
3639 -> 1347
3639 -> 3605
3640 -> 3
3640 -> 369
3640 -> 481
3640 -> 1077
3640 -> 1347
3640 -> 3605
3641 -> 17
3641 -> 469
3641 -> 1077
3641 -> 1347
3641 -> 3605
3642 -> 408
3642 -> 481
3642 -> 1077
3642 -> 1347
3642 -> 3605
3643 -> 19
3643 -> 469
3643 -> 1077
3643 -> 1347
3643 -> 3605
3644 -> 406
3644 -> 481
3644 -> 1077
3644 -> 1347
3644 -> 3605
3645 -> 21
3645 -> 469
3645 -> 1077
3645 -> 1347
3645 -> 3605
3646 -> 407
3646 -> 481
3646 -> 1077
3646 -> 1347
3646 -> 3605
3647 -> 23
3647 -> 469
3647 -> 1077
3647 -> 1347
3647 -> 3605
3648 -> 405
3648 -> 481
3648 -> 1077
3648 -> 1347
3648 -> 3605
3649 -> 25
3649 -> 469
3649 -> 1077
3649 -> 1347
3649 -> 3605
3650 -> 27
3650 -> 469
3650 -> 1077
3650 -> 1347
3650 -> 3605
3651 -> 29
3651 -> 469
3651 -> 1077
3651 -> 1347
3651 -> 3605
3652 -> 404
3652 -> 481
3652 -> 1077
3652 -> 1347
3652 -> 3605
3653 -> 31
3653 -> 469
3653 -> 1077
3653 -> 1347
3653 -> 3605
3654 -> 402
3654 -> 481
3654 -> 1077
3654 -> 1347
3654 -> 3605
3655 -> 33
3655 -> 469
3655 -> 1077
3655 -> 1347
3655 -> 3605
3656 -> 35
3656 -> 469
3656 -> 1077
3656 -> 1347
3656 -> 3605
3657 -> 401
3657 -> 481
3657 -> 1077
3657 -> 1347
3657 -> 3605
3658 -> 37
3658 -> 469
3658 -> 1077
3658 -> 1347
3658 -> 3605
3659 -> 39
3659 -> 469
3659 -> 1077
3659 -> 1347
3659 -> 3605
3660 -> 400
3660 -> 481
3660 -> 1077
3660 -> 1347
3660 -> 3605
3661 -> 41
3661 -> 469
3661 -> 1077
3661 -> 1347
3661 -> 3605
3662 -> 43
3662 -> 469
3662 -> 1077
3662 -> 1347
3662 -> 3605
3663 -> 398
3663 -> 481
3663 -> 1077
3663 -> 1347
3663 -> 3605
3664 -> 40
3664 -> 41
3664 -> 469
3664 -> 1347
3664 -> 3605
3665 -> 4
3665 -> 46
3665 -> 82
3665 -> 95
3665 -> 114
3665 -> 2727
3665 -> 3664
3666 -> 423
3666 -> 1347
3666 -> 3664
3667 -> 7
3667 -> 41
3667 -> 330
3667 -> 469
3667 -> 888
3667 -> 1077
3667 -> 1347
3667 -> 3605
3668 -> 82
3668 -> 114
3668 -> 180
3668 -> 2727
3668 -> 3667
3669 -> 428
3669 -> 1077
3669 -> 1347
3669 -> 3605
3670 -> 239
3670 -> 1347
3670 -> 3605
3671 -> 9
3671 -> 1347
3671 -> 3598
3672 -> 11
3672 -> 1347
3672 -> 3598
3673 -> 15
3673 -> 1347
3673 -> 3598
3674 -> 13
3674 -> 1347
3674 -> 3598
3675 -> 17
3675 -> 1347
3675 -> 3598
3676 -> 19
3676 -> 1347
3676 -> 3598
3677 -> 21
3677 -> 1347
3677 -> 3598
3678 -> 23
3678 -> 1347
3678 -> 3598
3679 -> 25
3679 -> 1347
3679 -> 3598
3680 -> 27
3680 -> 1347
3680 -> 3598
3681 -> 29
3681 -> 1347
3681 -> 3598
3682 -> 31
3682 -> 1347
3682 -> 3598
3683 -> 33
3683 -> 1347
3683 -> 3598
3684 -> 35
3684 -> 1347
3684 -> 3598
3685 -> 37
3685 -> 1347
3685 -> 3598
3686 -> 39
3686 -> 1347
3686 -> 3598
3687 -> 41
3687 -> 1347
3687 -> 3598
3688 -> 43
3688 -> 1347
3688 -> 3598
3689 -> 3690
3690 -> 303
3690 -> 2625
3691 -> 3692
3692 -> 277
3693 -> 268
3694 -> 269
3695 -> 270
3696 -> 273
3697 -> 274
3698 -> 276
3699 -> 277
3700 -> 282
3700 -> 285
3701 -> 3
3701 -> 126
3701 -> 127
3701 -> 129
3701 -> 285
3702 -> 112
3702 -> 114
3702 -> 180
3702 -> 285
3702 -> 3700
3703 -> 283
3703 -> 284
3703 -> 285
3704 -> 282
3704 -> 284
3704 -> 285
3705 -> 114
3705 -> 282
3705 -> 284
3705 -> 285
3706 -> 282
3706 -> 283
3706 -> 285
3707 -> 114
3707 -> 282
3707 -> 283
3707 -> 285
3708 -> 272
3708 -> 283
3708 -> 3706
3709 -> 272
3709 -> 284
3709 -> 3704
3710 -> 271
3710 -> 272
3710 -> 283
3710 -> 3706
3711 -> 271
3711 -> 272
3711 -> 284
3711 -> 3704
3712 -> 275
3712 -> 282
3712 -> 283
3712 -> 3706
3713 -> 275
3713 -> 282
3713 -> 284
3713 -> 3704
3714 -> 3715
3715 -> 303
3715 -> 2625
3716 -> 216
3716 -> 3717
3717 -> 209
3717 -> 1345
3718 -> 332
3719 -> 315
3719 -> 329
3720 -> 315
3720 -> 329
3721 -> 315
3722 -> 328
3723 -> 332
3724 -> 332
3725 -> 318
3726 -> 318
3727 -> 318
3728 -> 318
3729 -> 320
3730 -> 320
3731 -> 326
3732 -> 326
3733 -> 327
3734 -> 327
3735 -> 334
3736 -> 334
3737 -> 194
3737 -> 347
3738 -> 3739
3740 -> 358
3741 -> 346
3742 -> 349
3743 -> 95
3743 -> 126
3743 -> 127
3743 -> 129
3743 -> 3744
3743 -> 3745
3744 -> 3750
3745 -> 95
3745 -> 319
3745 -> 347
3746 -> 114
3746 -> 321
3746 -> 3744
3746 -> 3745
3747 -> 3745
3748 -> 3749
3749 -> 271
3749 -> 3750
3750 -> 95
3750 -> 333
3750 -> 347
3751 -> 360
3752 -> 362
3752 -> 3742
3752 -> 3753
3752 -> 3754
3752 -> 3755
3752 -> 3756
3752 -> 3757
3752 -> 3758
3752 -> 3759
3752 -> 3760
3753 -> 3762
3753 -> 3768
3754 -> 3762
3754 -> 3768
3755 -> 3762
3755 -> 3768
3756 -> 3762
3756 -> 3768
3757 -> 3762
3757 -> 3768
3758 -> 3762
3758 -> 3768
3759 -> 3762
3759 -> 3768
3760 -> 3762
3760 -> 3768
3761 -> 391
3761 -> 3762
3761 -> 3763
3764 -> 63
3764 -> 251
3764 -> 391
3764 -> 3762
3765 -> 251
3765 -> 391
3765 -> 3762
3766 -> 255
3766 -> 391
3766 -> 3762
3767 -> 363
3768 -> 201
3769 -> 350
3769 -> 358
3770 -> 350
3770 -> 360
3771 -> 351
3771 -> 358
3772 -> 351
3772 -> 360
3773 -> 352
3773 -> 358
3774 -> 352
3774 -> 360
3775 -> 353
3775 -> 358
3776 -> 353
3776 -> 360
3777 -> 354
3777 -> 358
3778 -> 354
3778 -> 360
3779 -> 355
3779 -> 358
3780 -> 355
3780 -> 360
3781 -> 356
3781 -> 358
3782 -> 356
3782 -> 360
3783 -> 357
3783 -> 358
3784 -> 357
3784 -> 360
3785 -> 3786
3786 -> 303
3786 -> 2625
3787 -> 1348
3788 -> 168
3789 -> 3790
3791 -> 1430
3791 -> 3788
3791 -> 3792
3791 -> 3793
3792 -> 303
3793 -> 161
3794 -> 975
3794 -> 3788
3794 -> 3792
3794 -> 3793
3795 -> 305
3795 -> 3788
3795 -> 3792
3795 -> 3793
3796 -> 1518
3796 -> 3788
3796 -> 3792
3796 -> 3793
3797 -> 3796
3798 -> 1368
3798 -> 3795
3799 -> 1366
3799 -> 3795
3800 -> 3801
3801 -> 95
3801 -> 161
3801 -> 240
3802 -> 3803
3803 -> 3
3803 -> 95
3803 -> 161
3803 -> 240
3803 -> 299
3804 -> 3805
3805 -> 3
3805 -> 95
3805 -> 161
3805 -> 177
3805 -> 240
3805 -> 299
3805 -> 303
3805 -> 369
3805 -> 417
3805 -> 657
3805 -> 850
3805 -> 1412
3805 -> 1564
3805 -> 1654
3806 -> 3
3806 -> 95
3806 -> 161
3806 -> 163
3806 -> 167
3806 -> 171
3806 -> 183
3806 -> 240
3807 -> 161
3808 -> 5
3809 -> 303
3810 -> 95
3810 -> 240
3810 -> 299
3810 -> 3807
3810 -> 3811
3812 -> 3
3812 -> 168
3812 -> 175
3812 -> 177
3812 -> 299
3812 -> 305
3812 -> 306
3812 -> 369
3812 -> 417
3812 -> 1564
3812 -> 1654
3812 -> 3790
3812 -> 3792
3812 -> 3793
3812 -> 3805
3813 -> 175
3813 -> 299
3813 -> 306
3813 -> 3807
3813 -> 3814
3815 -> 168
3815 -> 173
3815 -> 305
3815 -> 3790
3815 -> 3792
3815 -> 3793
3816 -> 168
3816 -> 178
3816 -> 1430
3816 -> 3792
3816 -> 3793
3817 -> 168
3817 -> 178
3817 -> 1433
3817 -> 3792
3817 -> 3793
3818 -> 168
3818 -> 176
3818 -> 201
3818 -> 212
3818 -> 213
3818 -> 1430
3818 -> 1585
3818 -> 3792
3818 -> 3793
3819 -> 3818
3820 -> 3818
3821 -> 173
3821 -> 3787
3822 -> 5
3822 -> 7
3822 -> 114
3822 -> 180
3823 -> 3
3823 -> 608
3824 -> 2006
3824 -> 2013
3824 -> 2192
3824 -> 3814
3824 -> 3825
3826 -> 192
3826 -> 3824
3826 -> 3827
3827 -> 544
3827 -> 547
3827 -> 548
3827 -> 550
3827 -> 551
3827 -> 1412
3827 -> 3814
3828 -> 56
3828 -> 192
3828 -> 3826
3829 -> 56
3829 -> 59
3829 -> 192
3829 -> 3826
3830 -> 3831
3831 -> 332
3832 -> 216
3832 -> 3833
3833 -> 1345
3834 -> 329
3834 -> 3835
3835 -> 339
3836 -> 329
3836 -> 3835
3837 -> 329
3837 -> 3835
3838 -> 329
3838 -> 3835
3839 -> 329
3839 -> 3835
3840 -> 329
3840 -> 3835
3841 -> 329
3841 -> 3835
3842 -> 329
3842 -> 3835
3843 -> 3
3843 -> 167
3843 -> 171
3843 -> 177
3843 -> 183
3843 -> 3835
3843 -> 3844
3844 -> 3
3844 -> 313
3844 -> 329
3844 -> 350
3844 -> 351
3844 -> 352
3844 -> 353
3844 -> 354
3844 -> 355
3844 -> 356
3844 -> 357
3844 -> 933
3844 -> 1968
3844 -> 2006
3844 -> 2013
3844 -> 2514
3844 -> 3009
3844 -> 3080
3844 -> 3498
3844 -> 3578
3844 -> 3825
3844 -> 3904
3844 -> 3905
3844 -> 3906
3844 -> 3907
3844 -> 3908
3844 -> 3909
3844 -> 3910
3844 -> 3911
3844 -> 3912
3844 -> 3913
3844 -> 3914
3844 -> 3915
3844 -> 3916
3844 -> 3917
3844 -> 3918
3844 -> 3919
3844 -> 3920
3844 -> 3921
3844 -> 3922
3844 -> 3923
3844 -> 3924
3845 -> 315
3845 -> 329
3846 -> 315
3846 -> 329
3847 -> 315
3848 -> 318
3849 -> 318
3850 -> 320
3851 -> 320
3852 -> 322
3853 -> 322
3854 -> 334
3855 -> 334
3856 -> 334
3857 -> 3762
3857 -> 3768
3858 -> 3762
3858 -> 3768
3859 -> 3762
3859 -> 3768
3860 -> 340
3860 -> 3762
3860 -> 3854
3860 -> 3861
3861 -> 2528
3862 -> 3
3862 -> 200
3862 -> 359
3862 -> 3762
3862 -> 3835
3863 -> 3
3863 -> 200
3863 -> 361
3863 -> 3762
3863 -> 3835
3864 -> 200
3864 -> 3762
3864 -> 3835
3864 -> 3865
3865 -> 1382
3866 -> 200
3866 -> 3762
3866 -> 3835
3866 -> 3865
3867 -> 200
3867 -> 3762
3867 -> 3835
3867 -> 3865
3868 -> 200
3868 -> 3762
3868 -> 3835
3868 -> 3865
3869 -> 200
3869 -> 3762
3869 -> 3835
3869 -> 3865
3870 -> 200
3870 -> 3762
3870 -> 3835
3870 -> 3865
3871 -> 200
3871 -> 3762
3871 -> 3835
3871 -> 3865
3872 -> 200
3872 -> 3762
3872 -> 3835
3872 -> 3865
3873 -> 200
3873 -> 2351
3873 -> 3762
3873 -> 3835
3873 -> 3874
3874 -> 362
3874 -> 1382
3875 -> 200
3875 -> 3762
3875 -> 3835
3875 -> 3874
3876 -> 200
3876 -> 3762
3876 -> 3835
3876 -> 3874
3877 -> 200
3877 -> 3762
3877 -> 3835
3877 -> 3874
3878 -> 200
3878 -> 3762
3878 -> 3835
3878 -> 3874
3879 -> 200
3879 -> 3762
3879 -> 3835
3879 -> 3874
3880 -> 200
3880 -> 3762
3880 -> 3835
3880 -> 3874
3881 -> 200
3881 -> 3762
3881 -> 3835
3881 -> 3874
3882 -> 200
3882 -> 3762
3882 -> 3835
3882 -> 3874
3883 -> 200
3883 -> 2351
3883 -> 3762
3883 -> 3835
3883 -> 3874
3884 -> 3875
3885 -> 3876
3886 -> 3877
3887 -> 3878
3888 -> 3879
3889 -> 3880
3890 -> 3881
3891 -> 3882
3892 -> 200
3892 -> 1585
3892 -> 3762
3892 -> 3835
3893 -> 3892
3894 -> 377
3894 -> 3019
3894 -> 3024
3894 -> 3087
3894 -> 3504
3894 -> 3857
3894 -> 3858
3894 -> 3859
3894 -> 3895
3895 -> 1382
3895 -> 2515
3895 -> 2516
3896 -> 272
3896 -> 377
3896 -> 3010
3896 -> 3019
3896 -> 3087
3896 -> 3504
3896 -> 3857
3896 -> 3858
3896 -> 3859
3896 -> 3895
3897 -> 272
3897 -> 377
3897 -> 3019
3897 -> 3026
3897 -> 3087
3897 -> 3504
3897 -> 3857
3897 -> 3858
3897 -> 3859
3897 -> 3895
3898 -> 272
3898 -> 377
3898 -> 3019
3898 -> 3028
3898 -> 3087
3898 -> 3504
3898 -> 3857
3898 -> 3858
3898 -> 3859
3898 -> 3895
3899 -> 272
3899 -> 377
3899 -> 3019
3899 -> 3030
3899 -> 3087
3899 -> 3504
3899 -> 3857
3899 -> 3858
3899 -> 3859
3899 -> 3895
3900 -> 64
3900 -> 3019
3900 -> 3087
3900 -> 3504
3900 -> 3857
3900 -> 3858
3900 -> 3859
3900 -> 3895
3901 -> 329
3901 -> 3902
3902 -> 205
3902 -> 215
3902 -> 255
3902 -> 330
3902 -> 340
3902 -> 377
3902 -> 1382
3902 -> 2515
3902 -> 2516
3902 -> 3019
3902 -> 3087
3902 -> 3504
3902 -> 3857
3902 -> 3858
3902 -> 3859
3902 -> 3864
3902 -> 3866
3903 -> 1690
3904 -> 61
3905 -> 350
3905 -> 351
3905 -> 353
3905 -> 354
3905 -> 355
3905 -> 356
3905 -> 357
3905 -> 3904
3906 -> 350
3906 -> 352
3906 -> 353
3906 -> 354
3906 -> 355
3906 -> 356
3906 -> 357
3906 -> 3904
3907 -> 350
3907 -> 352
3907 -> 353
3907 -> 3904
3908 -> 350
3908 -> 353
3908 -> 354
3908 -> 355
3908 -> 356
3908 -> 357
3908 -> 3904
3909 -> 350
3909 -> 353
3909 -> 3904
3910 -> 353
3910 -> 354
3910 -> 355
3910 -> 356
3910 -> 357
3910 -> 3904
3911 -> 350
3911 -> 3904
3912 -> 352
3912 -> 3904
3913 -> 356
3913 -> 3904
3914 -> 357
3914 -> 3904
3917 -> 3927
3918 -> 3927
3919 -> 3927
3920 -> 3927
3921 -> 3927
3922 -> 3927
3923 -> 3927
3924 -> 3927
3925 -> 3926
3927 -> 196
3927 -> 3904
3927 -> 3926
3928 -> 108
3929 -> 216
3929 -> 1341
3929 -> 3913
3929 -> 3930
3930 -> 378
3931 -> 356
3931 -> 368
3931 -> 3030
3932 -> 95
3932 -> 163
3932 -> 370
3932 -> 371
3932 -> 400
3932 -> 3030
3932 -> 3083
3933 -> 356
3933 -> 368
3933 -> 3015
3933 -> 3016
3933 -> 3030
3934 -> 372
3934 -> 3030
3935 -> 1345
3935 -> 3030
3935 -> 3858
3936 -> 384
3936 -> 3030
3937 -> 356
3938 -> 3913
3939 -> 384
3939 -> 3024
3940 -> 384
3940 -> 3010
3941 -> 384
3941 -> 3026
3942 -> 384
3942 -> 3028
3943 -> 64
3943 -> 384
3944 -> 384
3945 -> 362
3945 -> 384
3945 -> 3030
3946 -> 384
3946 -> 3945
3947 -> 1584
3947 -> 3945
3948 -> 384
3948 -> 3947
3949 -> 384
3949 -> 1585
3949 -> 3030
3950 -> 384
3950 -> 3030
3951 -> 384
3951 -> 1584
3951 -> 3030
3952 -> 384
3953 -> 384
3954 -> 380
3954 -> 384
3955 -> 1348
3956 -> 168
3957 -> 3527
3958 -> 302
3958 -> 1433
3958 -> 3956
3958 -> 3959
3959 -> 300
3960 -> 302
3960 -> 1430
3960 -> 3956
3960 -> 3959
3961 -> 302
3961 -> 975
3961 -> 3956
3961 -> 3959
3962 -> 302
3962 -> 305
3962 -> 3956
3962 -> 3959
3963 -> 302
3963 -> 1518
3963 -> 3956
3963 -> 3959
3964 -> 3963
3965 -> 1368
3965 -> 3962
3966 -> 1366
3966 -> 3962
3967 -> 486
3967 -> 489
3967 -> 491
3967 -> 493
3967 -> 3968
3968 -> 3981
3969 -> 3
3969 -> 3187
3969 -> 3968
3970 -> 3
3970 -> 1243
3970 -> 3305
3970 -> 3306
3970 -> 3307
3970 -> 3968
3971 -> 3972
3972 -> 95
3972 -> 240
3972 -> 2866
3973 -> 287
3974 -> 92
3974 -> 289
3975 -> 289
3976 -> 290
3977 -> 296
3977 -> 3978
3979 -> 95
3979 -> 296
3979 -> 3978
3980 -> 3981
3981 -> 298
3982 -> 3981
3983 -> 3981
3984 -> 3981
3985 -> 301
3986 -> 31
3986 -> 35
3986 -> 39
3986 -> 43
3986 -> 381
3987 -> 303
3988 -> 95
3988 -> 240
3988 -> 299
3988 -> 302
3988 -> 308
3988 -> 3985
3989 -> 168
3989 -> 173
3989 -> 302
3989 -> 305
3989 -> 3527
3989 -> 3959
3990 -> 168
3990 -> 178
3990 -> 302
3990 -> 1433
3990 -> 3959
3991 -> 168
3991 -> 176
3991 -> 201
3991 -> 212
3991 -> 213
3991 -> 302
3991 -> 1433
3991 -> 1585
3991 -> 3959
3992 -> 3991
3993 -> 354
3993 -> 3990
3994 -> 355
3994 -> 3990
3995 -> 356
3995 -> 3990
3996 -> 357
3996 -> 3990
3997 -> 3991
3998 -> 354
3998 -> 1584
3998 -> 3990
3999 -> 355
3999 -> 1584
3999 -> 3990
4000 -> 356
4000 -> 1584
4000 -> 3990
4001 -> 357
4001 -> 1584
4001 -> 3990
4002 -> 173
4002 -> 3955
4003 -> 308
4003 -> 3454
4003 -> 4004
4003 -> 4005
4003 -> 4006
4003 -> 4007
4004 -> 3527
4005 -> 3527
4006 -> 3527
4007 -> 3527
4008 -> 4009
4009 -> 93
4009 -> 96
4009 -> 112
4009 -> 181
4009 -> 308
4010 -> 31
4010 -> 302
4010 -> 305
4010 -> 308
4010 -> 3959
4011 -> 35
4011 -> 302
4011 -> 305
4011 -> 308
4011 -> 3959
4012 -> 39
4012 -> 302
4012 -> 305
4012 -> 308
4012 -> 3959
4013 -> 43
4013 -> 302
4013 -> 305
4013 -> 308
4013 -> 3959
4014 -> 3955
4015 -> 3955
4016 -> 3955
4017 -> 3955
4018 -> 192
4018 -> 4019
4020 -> 4021
4021 -> 2422
4022 -> 549
4022 -> 2572
4023 -> 541
4023 -> 549
4024 -> 216
4024 -> 1341
4024 -> 3912
4024 -> 4025
4025 -> 378
4026 -> 352
4026 -> 368
4026 -> 3024
4027 -> 95
4027 -> 163
4027 -> 370
4027 -> 371
4027 -> 405
4027 -> 3013
4027 -> 3024
4028 -> 352
4028 -> 368
4028 -> 3015
4028 -> 3016
4028 -> 3024
4029 -> 372
4029 -> 3024
4030 -> 1345
4030 -> 3024
4030 -> 3857
4031 -> 384
4031 -> 3024
4032 -> 352
4033 -> 3912
4034 -> 384
4034 -> 1585
4034 -> 3010
4035 -> 384
4035 -> 1585
4035 -> 3026
4036 -> 384
4036 -> 1585
4036 -> 3028
4037 -> 384
4037 -> 1585
4037 -> 3030
4038 -> 64
4038 -> 384
4039 -> 384
4040 -> 362
4040 -> 384
4040 -> 3024
4041 -> 384
4041 -> 4040
4042 -> 1584
4042 -> 4040
4043 -> 384
4043 -> 4042
4044 -> 384
4044 -> 1585
4044 -> 3024
4045 -> 384
4045 -> 3024
4046 -> 384
4046 -> 1584
4046 -> 3024
4047 -> 384
4048 -> 384
4049 -> 380
4049 -> 384
4050 -> 1348
4051 -> 168
4052 -> 3527
4053 -> 302
4053 -> 1430
4053 -> 4051
4053 -> 4054
4054 -> 300
4055 -> 302
4055 -> 975
4055 -> 4051
4055 -> 4054
4056 -> 302
4056 -> 305
4056 -> 4051
4056 -> 4054
4057 -> 302
4057 -> 1518
4057 -> 4051
4057 -> 4054
4058 -> 4057
4059 -> 506
4059 -> 507
4060 -> 4061
4061 -> 287
4062 -> 2708
4062 -> 4063
4063 -> 92
4063 -> 289
4064 -> 2708
4064 -> 4065
4065 -> 289
4066 -> 3184
4066 -> 4067
4067 -> 867
4067 -> 1908
4067 -> 2591
4067 -> 4068
4068 -> 4075
4069 -> 3
4069 -> 3187
4069 -> 4068
4070 -> 3
4070 -> 3190
4070 -> 3191
4070 -> 4068
4071 -> 290
4072 -> 288
4073 -> 296
4073 -> 3184
4074 -> 95
4074 -> 296
4074 -> 3184
4075 -> 298
4076 -> 301
4077 -> 82
4077 -> 240
4077 -> 308
4077 -> 538
4077 -> 4076
4078 -> 17
4078 -> 21
4078 -> 381
4079 -> 303
4080 -> 95
4080 -> 240
4080 -> 299
4080 -> 302
4080 -> 308
4080 -> 4076
4081 -> 168
4081 -> 173
4081 -> 302
4081 -> 305
4081 -> 3527
4081 -> 4054
4082 -> 168
4082 -> 178
4082 -> 302
4082 -> 1430
4082 -> 4054
4083 -> 168
4083 -> 176
4083 -> 201
4083 -> 212
4083 -> 213
4083 -> 302
4083 -> 1430
4083 -> 1585
4083 -> 4054
4084 -> 4083
4085 -> 350
4085 -> 4082
4086 -> 351
4086 -> 4082
4087 -> 4083
4088 -> 350
4088 -> 1584
4088 -> 4082
4089 -> 351
4089 -> 1584
4089 -> 4082
4090 -> 308
4090 -> 3199
4090 -> 4091
4090 -> 4092
4091 -> 3527
4092 -> 3527
4093 -> 4094
4094 -> 862
4094 -> 2834
4094 -> 3139
4094 -> 4086
4094 -> 4090
4095 -> 17
4095 -> 302
4095 -> 305
4095 -> 308
4095 -> 4054
4096 -> 21
4096 -> 302
4096 -> 305
4096 -> 308
4096 -> 4054
4097 -> 173
4097 -> 4050
4098 -> 4050
4099 -> 4050
4100 -> 192
4100 -> 4101
4102 -> 56
4102 -> 192
4102 -> 4100
4103 -> 56
4103 -> 59
4103 -> 192
4103 -> 4100
4104 -> 1348
4105 -> 168
4106 -> 3527
4107 -> 302
4107 -> 1430
4107 -> 4105
4107 -> 4108
4108 -> 300
4109 -> 302
4109 -> 975
4109 -> 4105
4109 -> 4108
4110 -> 302
4110 -> 305
4110 -> 4105
4110 -> 4108
4111 -> 302
4111 -> 1518
4111 -> 4105
4111 -> 4108
4112 -> 4111
4113 -> 1368
4113 -> 4110
4114 -> 1366
4114 -> 4110
4115 -> 500
4115 -> 506
4115 -> 507
4116 -> 3
4116 -> 3187
4116 -> 4117
4117 -> 4126
4118 -> 3
4118 -> 3190
4118 -> 3191
4118 -> 3192
4118 -> 4117
4119 -> 287
4120 -> 92
4120 -> 289
4121 -> 289
4122 -> 290
4123 -> 296
4123 -> 4124
4125 -> 95
4125 -> 296
4125 -> 4124
4126 -> 298
4127 -> 301
4128 -> 17
4128 -> 21
4128 -> 27
4128 -> 381
4129 -> 303
4130 -> 95
4130 -> 240
4130 -> 299
4130 -> 302
4130 -> 308
4130 -> 4127
4131 -> 168
4131 -> 173
4131 -> 302
4131 -> 305
4131 -> 3527
4131 -> 4108
4132 -> 168
4132 -> 178
4132 -> 302
4132 -> 1430
4132 -> 4108
4133 -> 168
4133 -> 176
4133 -> 201
4133 -> 212
4133 -> 213
4133 -> 302
4133 -> 1430
4133 -> 1585
4133 -> 4108
4134 -> 4133
4135 -> 350
4135 -> 4132
4136 -> 351
4136 -> 4132
4137 -> 353
4137 -> 4132
4138 -> 4133
4139 -> 350
4139 -> 1584
4139 -> 4132
4140 -> 351
4140 -> 1584
4140 -> 4132
4141 -> 353
4141 -> 1584
4141 -> 4132
4142 -> 173
4142 -> 4104
4143 -> 308
4143 -> 3199
4143 -> 4144
4143 -> 4145
4143 -> 4146
4144 -> 3527
4145 -> 3527
4146 -> 3527
4147 -> 4148
4148 -> 96
4148 -> 308
4148 -> 744
4148 -> 4144
4148 -> 4145
4148 -> 4146
4149 -> 4150
4150 -> 93
4150 -> 96
4150 -> 112
4150 -> 181
4150 -> 308
4151 -> 4152
4152 -> 96
4152 -> 308
4152 -> 2723
4152 -> 4144
4152 -> 4145
4152 -> 4146
4153 -> 4154
4154 -> 93
4154 -> 96
4154 -> 112
4154 -> 181
4154 -> 308
4155 -> 4156
4156 -> 862
4156 -> 2754
4156 -> 4152
4157 -> 17
4157 -> 302
4157 -> 305
4157 -> 308
4157 -> 4108
4158 -> 21
4158 -> 302
4158 -> 305
4158 -> 308
4158 -> 4108
4159 -> 27
4159 -> 302
4159 -> 305
4159 -> 308
4159 -> 4108
4160 -> 4104
4161 -> 4104
4162 -> 4104
4163 -> 192
4163 -> 2206
4164 -> 216
4164 -> 1341
4164 -> 3911
4164 -> 4165
4165 -> 378
4166 -> 4165
4167 -> 350
4167 -> 368
4167 -> 4166
4168 -> 95
4168 -> 163
4168 -> 370
4168 -> 371
4168 -> 408
4168 -> 3013
4168 -> 4166
4169 -> 350
4169 -> 368
4169 -> 3015
4169 -> 3016
4169 -> 4166
4170 -> 1345
4170 -> 2515
4170 -> 4166
4171 -> 384
4171 -> 4166
4172 -> 350
4173 -> 3911
4174 -> 384
4175 -> 362
4175 -> 384
4175 -> 4166
4176 -> 384
4176 -> 4175
4177 -> 1584
4177 -> 4175
4178 -> 384
4178 -> 4177
4179 -> 384
4179 -> 1585
4179 -> 4166
4180 -> 384
4180 -> 4166
4181 -> 384
4181 -> 1584
4181 -> 4166
4182 -> 384
4183 -> 384
4184 -> 380
4184 -> 384
}
