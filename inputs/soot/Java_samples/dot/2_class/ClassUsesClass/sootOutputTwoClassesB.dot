digraph "call-graph" {
    "<TwoClassesB: void main(java.lang.String[])>"
    "<java.lang.Object: void <clinit>()>"
    "<TwoClassesB: void main(java.lang.String[])>"->"<java.lang.Object: void <clinit>()>";
    "<TwoClassesA: void <init>()>"
    "<TwoClassesB: void main(java.lang.String[])>"->"<TwoClassesA: void <init>()>";
    "<TwoClassesA: int foo()>"
    "<TwoClassesB: void main(java.lang.String[])>"->"<TwoClassesA: int foo()>";
    "<java.lang.System: void <clinit>()>"
    "<TwoClassesA: int foo()>"->"<java.lang.System: void <clinit>()>";
    "<TwoClassesA: int foo()>"->"<java.lang.Object: void <clinit>()>";
    "<java.lang.Object: void <init>()>"
    "<TwoClassesA: void <init>()>"->"<java.lang.Object: void <init>()>";
    "<java.io.PrintStream: void println(java.lang.String)>"
    "<TwoClassesA: int foo()>"->"<java.io.PrintStream: void println(java.lang.String)>";
}
