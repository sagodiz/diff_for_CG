digraph "call-graph" {
    "<PolimorfMain: void main(java.lang.String[])>"
    "<java.lang.Object: void <clinit>()>"
    "<PolimorfMain: void main(java.lang.String[])>"->"<java.lang.Object: void <clinit>()>";
    "<PolimorfMain: void foo(PolimorfBase)>"
    "<PolimorfMain: void main(java.lang.String[])>"->"<PolimorfMain: void foo(PolimorfBase)>";
    "<PolimorfMain: void main(java.lang.String[])>"->"<PolimorfMain: void foo(PolimorfBase)>";
    "<PolimorfMain: void main(java.lang.String[])>"->"<PolimorfMain: void foo(PolimorfBase)>";
    "<PolimorfMain: void main(java.lang.String[])>"->"<PolimorfMain: void foo(PolimorfBase)>";
    "<PolimorfMain: void main(java.lang.String[])>"->"<PolimorfMain: void foo(PolimorfBase)>";
    "<PolimorfMain: void main(java.lang.String[])>"->"<java.lang.Object: void <clinit>()>";
    "<PolimorfMain: void main(java.lang.String[])>"->"<java.lang.Object: void <clinit>()>";
    "<PolimorfMain: void main(java.lang.String[])>"->"<java.lang.Object: void <clinit>()>";
    "<PolimorfMain: void main(java.lang.String[])>"->"<java.lang.Object: void <clinit>()>";
    "<PolimorfMain: void main(java.lang.String[])>"->"<java.lang.Object: void <clinit>()>";
    "<PolimorfMain: void main(java.lang.String[])>"->"<java.lang.Object: void <clinit>()>";
    "<PolimorfMain: void main(java.lang.String[])>"->"<java.lang.Object: void <clinit>()>";
    "<PolimorfMain: void main(java.lang.String[])>"->"<java.lang.Object: void <clinit>()>";
    "<PolimorfMain: void main(java.lang.String[])>"->"<java.lang.Object: void <clinit>()>";
    "<PolimorfA: void <init>()>"
    "<PolimorfMain: void main(java.lang.String[])>"->"<PolimorfA: void <init>()>";
    "<PolimorfB: void <init>()>"
    "<PolimorfMain: void main(java.lang.String[])>"->"<PolimorfB: void <init>()>";
    "<PolimorfMain: void main(java.lang.String[])>"->"<PolimorfA: void <init>()>";
    "<PolimorfMain: void main(java.lang.String[])>"->"<PolimorfB: void <init>()>";
    "<PolimorfBase: void <init>()>"
    "<PolimorfMain: void main(java.lang.String[])>"->"<PolimorfBase: void <init>()>";
    "<PolimorfBase: void goo()>"
    "<PolimorfMain: void foo(PolimorfBase)>"->"<PolimorfBase: void goo()>";
    "<PolimorfB: void goo()>"
    "<PolimorfMain: void foo(PolimorfBase)>"->"<PolimorfB: void goo()>";
    "<PolimorfA: void goo()>"
    "<PolimorfMain: void foo(PolimorfBase)>"->"<PolimorfA: void goo()>";
    "<java.lang.System: void <clinit>()>"
    "<PolimorfBase: void goo()>"->"<java.lang.System: void <clinit>()>";
    "<PolimorfBase: void goo()>"->"<java.lang.Object: void <clinit>()>";
    "<PolimorfB: void goo()>"->"<java.lang.System: void <clinit>()>";
    "<PolimorfB: void goo()>"->"<java.lang.Object: void <clinit>()>";
    "<PolimorfA: void goo()>"->"<java.lang.System: void <clinit>()>";
    "<PolimorfA: void goo()>"->"<java.lang.Object: void <clinit>()>";
    "<PolimorfA: void <init>()>"->"<PolimorfBase: void <init>()>";
    "<PolimorfB: void <init>()>"->"<PolimorfBase: void <init>()>";
    "<java.lang.Object: void <init>()>"
    "<PolimorfBase: void <init>()>"->"<java.lang.Object: void <init>()>";
    "<java.io.PrintStream: void println(java.lang.String)>"
    "<PolimorfBase: void goo()>"->"<java.io.PrintStream: void println(java.lang.String)>";
    "<PolimorfB: void goo()>"->"<java.io.PrintStream: void println(java.lang.String)>";
    "<PolimorfA: void goo()>"->"<java.io.PrintStream: void println(java.lang.String)>";
}
