digraph "call-graph" {
    "<Loops: void main(java.lang.String[])>"
    "<java.lang.System: void <clinit>()>"
    "<Loops: void main(java.lang.String[])>"->"<java.lang.System: void <clinit>()>";
    "<Loops: void foo()>"
    "<Loops: void main(java.lang.String[])>"->"<Loops: void foo()>";
    "<Loops: void main(java.lang.String[])>"->"<Loops: void foo()>";
    "<java.lang.Math: double random()>"
    "<Loops: void main(java.lang.String[])>"->"<java.lang.Math: double random()>";
    "<java.lang.Object: void <clinit>()>"
    "<Loops: void main(java.lang.String[])>"->"<java.lang.Object: void <clinit>()>";
    "<Loops: void main(java.lang.String[])>"->"<java.lang.Object: void <clinit>()>";
    "<Loops: void main(java.lang.String[])>"->"<java.lang.System: void <clinit>()>";
    "<Loops: void main(java.lang.String[])>"->"<java.lang.Object: void <clinit>()>";
    "<Loops: void main(java.lang.String[])>"->"<java.lang.System: void <clinit>()>";
    "<Loops: void main(java.lang.String[])>"->"<java.lang.Object: void <clinit>()>";
    "<Loops: void main(java.lang.String[])>"->"<java.lang.Object: void <clinit>()>";
    "<java.lang.Math: void <clinit>()>"
    "<Loops: void main(java.lang.String[])>"->"<java.lang.Math: void <clinit>()>";
    "<Loops: void main(java.lang.String[])>"->"<java.lang.Object: void <clinit>()>";
    "<Loops: void foo()>"->"<java.lang.System: void <clinit>()>";
    "<Loops: void foo()>"->"<java.lang.Object: void <clinit>()>";
    "<java.io.PrintStream: void println(java.lang.String)>"
    "<Loops: void main(java.lang.String[])>"->"<java.io.PrintStream: void println(java.lang.String)>";
    "<java.io.PrintStream: void print(int)>"
    "<Loops: void main(java.lang.String[])>"->"<java.io.PrintStream: void print(int)>";
    "<java.io.PrintStream: void println(java.lang.Object)>"
    "<Loops: void main(java.lang.String[])>"->"<java.io.PrintStream: void println(java.lang.Object)>";
    "<Loops: void foo()>"->"<java.io.PrintStream: void println(java.lang.String)>";
}
