digraph "call-graph" {
    "(27)<sortpom.verify.ElementComparator: sortpom.util.XmlOrderedResult isElementOrdered()>"
    "(25)<sortpom.util.XmlOrderedResult: sortpom.util.XmlOrderedResult nameDiffers(java.lang.String,java.lang.String)>"
    "(27)<sortpom.verify.ElementComparator: sortpom.util.XmlOrderedResult isElementOrdered()>"->"(25)<sortpom.util.XmlOrderedResult: sortpom.util.XmlOrderedResult nameDiffers(java.lang.String,java.lang.String)>";
    "(38)<sortpom.util.XmlOrderedResult: sortpom.util.XmlOrderedResult textContentDiffers(java.lang.String,java.lang.String,java.lang.String)>"
    "(27)<sortpom.verify.ElementComparator: sortpom.util.XmlOrderedResult isElementOrdered()>"->"(38)<sortpom.util.XmlOrderedResult: sortpom.util.XmlOrderedResult textContentDiffers(java.lang.String,java.lang.String,java.lang.String)>";
    "(41)<sortpom.verify.ElementComparator: sortpom.util.XmlOrderedResult isChildrenOrdered(java.lang.String,java.util.List,java.util.List)>"
    "<java.lang.Math: void <clinit>()>"
    "(41)<sortpom.verify.ElementComparator: sortpom.util.XmlOrderedResult isChildrenOrdered(java.lang.String,java.util.List,java.util.List)>"->"<java.lang.Math: void <clinit>()>";
    "(20)<sortpom.util.XmlOrderedResult: sortpom.util.XmlOrderedResult ordered()>"
    "(41)<sortpom.verify.ElementComparator: sortpom.util.XmlOrderedResult isChildrenOrdered(java.lang.String,java.util.List,java.util.List)>"->"(20)<sortpom.util.XmlOrderedResult: sortpom.util.XmlOrderedResult ordered()>";
    "(31)<sortpom.util.XmlOrderedResult: sortpom.util.XmlOrderedResult childElementDiffers(java.lang.String,int,int)>"
    "(41)<sortpom.verify.ElementComparator: sortpom.util.XmlOrderedResult isChildrenOrdered(java.lang.String,java.util.List,java.util.List)>"->"(31)<sortpom.util.XmlOrderedResult: sortpom.util.XmlOrderedResult childElementDiffers(java.lang.String,int,int)>";
    "<java.lang.Math: int min(int,int)>"
    "(41)<sortpom.verify.ElementComparator: sortpom.util.XmlOrderedResult isChildrenOrdered(java.lang.String,java.util.List,java.util.List)>"->"<java.lang.Math: int min(int,int)>";
    "<java.lang.Object: void <clinit>()>"
    "(41)<sortpom.verify.ElementComparator: sortpom.util.XmlOrderedResult isChildrenOrdered(java.lang.String,java.util.List,java.util.List)>"->"<java.lang.Object: void <clinit>()>";
    "(59)<sortpom.wrapper.ElementWrapperCreator: boolean isDependencyElement(org.jdom.Element)>"
    "(35)<sortpom.wrapper.ElementUtil: boolean isElementName(org.jdom.Element,java.lang.String)>"
    "(59)<sortpom.wrapper.ElementWrapperCreator: boolean isDependencyElement(org.jdom.Element)>"->"(35)<sortpom.wrapper.ElementUtil: boolean isElementName(org.jdom.Element,java.lang.String)>";
    "(26)<sortpom.wrapper.ElementUtil: boolean isElementParentName(org.jdom.Element,java.lang.String)>"
    "(59)<sortpom.wrapper.ElementWrapperCreator: boolean isDependencyElement(org.jdom.Element)>"->"(26)<sortpom.wrapper.ElementUtil: boolean isElementParentName(org.jdom.Element,java.lang.String)>";
    "(66)<sortpom.wrapper.ElementWrapperCreator: boolean isPluginElement(org.jdom.Element)>"
    "(66)<sortpom.wrapper.ElementWrapperCreator: boolean isPluginElement(org.jdom.Element)>"->"(35)<sortpom.wrapper.ElementUtil: boolean isElementName(org.jdom.Element,java.lang.String)>";
    "(66)<sortpom.wrapper.ElementWrapperCreator: boolean isPluginElement(org.jdom.Element)>"->"(26)<sortpom.wrapper.ElementUtil: boolean isElementParentName(org.jdom.Element,java.lang.String)>";
    "(66)<sortpom.wrapper.ElementWrapperCreator: boolean isPluginElement(org.jdom.Element)>"->"(26)<sortpom.wrapper.ElementUtil: boolean isElementParentName(org.jdom.Element,java.lang.String)>";
    "(76)<sortpom.wrapper.ElementWrapperCreator: boolean isModuleElement(org.jdom.Element)>"
    "(76)<sortpom.wrapper.ElementWrapperCreator: boolean isModuleElement(org.jdom.Element)>"->"(35)<sortpom.wrapper.ElementUtil: boolean isElementName(org.jdom.Element,java.lang.String)>";
    "(76)<sortpom.wrapper.ElementWrapperCreator: boolean isModuleElement(org.jdom.Element)>"->"(26)<sortpom.wrapper.ElementUtil: boolean isElementParentName(org.jdom.Element,java.lang.String)>";
    "(83)<sortpom.wrapper.ElementWrapperCreator: boolean isPropertyElement(org.jdom.Element)>"
    "(18)<sortpom.wrapper.ElementUtil: java.lang.String getDeepName(org.jdom.Element)>"
    "(83)<sortpom.wrapper.ElementWrapperCreator: boolean isPropertyElement(org.jdom.Element)>"->"(18)<sortpom.wrapper.ElementUtil: java.lang.String getDeepName(org.jdom.Element)>";
    "(83)<sortpom.wrapper.ElementWrapperCreator: boolean isPropertyElement(org.jdom.Element)>"->"(26)<sortpom.wrapper.ElementUtil: boolean isElementParentName(org.jdom.Element,java.lang.String)>";
    "(28)<sortpom.wrapper.operation.SortAttributesOperation: java.util.List getSortedAttributes(org.jdom.Element)>"
    "(19)<sortpom.wrapper.operation.SortAttributesOperation: void <clinit>()>"
    "(28)<sortpom.wrapper.operation.SortAttributesOperation: java.util.List getSortedAttributes(org.jdom.Element)>"->"(19)<sortpom.wrapper.operation.SortAttributesOperation: void <clinit>()>";
    "<sortpom.wrapper.operation.SortAttributesOperation$detach__1: java.util.function.Consumer bootstrap$()>"
    "(28)<sortpom.wrapper.operation.SortAttributesOperation: java.util.List getSortedAttributes(org.jdom.Element)>"->"<sortpom.wrapper.operation.SortAttributesOperation$detach__1: java.util.function.Consumer bootstrap$()>";
    "(28)<sortpom.wrapper.operation.SortAttributesOperation: java.util.List getSortedAttributes(org.jdom.Element)>"->"<java.lang.Object: void <clinit>()>";
    "(38)<sortpom.wrapper.operation.SortAttributesOperation: java.util.List getAttributeList(org.jdom.Element)>"
    "<java.util.ArrayList: void <clinit>()>"
    "(38)<sortpom.wrapper.operation.SortAttributesOperation: java.util.List getAttributeList(org.jdom.Element)>"->"<java.util.ArrayList: void <clinit>()>";
    "(38)<sortpom.wrapper.operation.SortAttributesOperation: java.util.List getAttributeList(org.jdom.Element)>"->"<java.lang.Object: void <clinit>()>";
    "(19)<sortpom.wrapper.operation.SortAttributesOperation: void <clinit>()>"->"(19)<sortpom.wrapper.operation.SortAttributesOperation: void <clinit>()>";
    "<java.util.Comparator: java.util.Comparator comparing(java.util.function.Function)>"
    "(19)<sortpom.wrapper.operation.SortAttributesOperation: void <clinit>()>"->"<java.util.Comparator: java.util.Comparator comparing(java.util.function.Function)>";
    "<sortpom.wrapper.operation.SortAttributesOperation$getName__2: java.util.function.Function bootstrap$()>"
    "(19)<sortpom.wrapper.operation.SortAttributesOperation: void <clinit>()>"->"<sortpom.wrapper.operation.SortAttributesOperation$getName__2: java.util.function.Function bootstrap$()>";
    "(19)<sortpom.wrapper.operation.SortAttributesOperation: void <clinit>()>"->"<java.lang.Object: void <clinit>()>";
    "(36)<sortpom.wrapper.operation.ToStringOperation: void startOfProcess()>"
    "(18)<sortpom.wrapper.operation.ToStringOperation: void <clinit>()>"
    "(36)<sortpom.wrapper.operation.ToStringOperation: void startOfProcess()>"->"(18)<sortpom.wrapper.operation.ToStringOperation: void <clinit>()>";
    "(36)<sortpom.wrapper.operation.ToStringOperation: void startOfProcess()>"->"<java.lang.Object: void <clinit>()>";
    "(68)<sortpom.wrapper.operation.ToStringOperation: sortpom.wrapper.operation.HierarchyWrapperOperation createSubOperation()>"
    "(68)<sortpom.wrapper.operation.ToStringOperation: sortpom.wrapper.operation.HierarchyWrapperOperation createSubOperation()>"->"(18)<sortpom.wrapper.operation.ToStringOperation: void <clinit>()>";
    "(68)<sortpom.wrapper.operation.ToStringOperation: sortpom.wrapper.operation.HierarchyWrapperOperation createSubOperation()>"->"<java.lang.Object: void <clinit>()>";
    "(18)<sortpom.wrapper.operation.ToStringOperation: void <clinit>()>"->"(18)<sortpom.wrapper.operation.ToStringOperation: void <clinit>()>";
    "(18)<sortpom.wrapper.operation.ToStringOperation: void <clinit>()>"->"<java.lang.Object: void <clinit>()>";
    "(21)<sortpom.wrapper.operation.HierarchyWrapper: void <init>(sortpom.wrapper.content.Wrapper)>"
    "(21)<sortpom.wrapper.operation.HierarchyWrapper: void <init>(sortpom.wrapper.content.Wrapper)>"->"<java.util.ArrayList: void <clinit>()>";
    "(21)<sortpom.wrapper.operation.HierarchyWrapper: void <init>(sortpom.wrapper.content.Wrapper)>"->"<java.lang.Object: void <clinit>()>";
    "(58)<sortpom.wrapper.operation.HierarchyWrapper: java.util.List castToContentList(sortpom.wrapper.content.Wrapper)>"
    "(58)<sortpom.wrapper.operation.HierarchyWrapper: java.util.List castToContentList(sortpom.wrapper.content.Wrapper)>"->"<java.util.ArrayList: void <clinit>()>";
    "(58)<sortpom.wrapper.operation.HierarchyWrapper: java.util.List castToContentList(sortpom.wrapper.content.Wrapper)>"->"<java.lang.Object: void <clinit>()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"
    "<java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>"
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>";
    "<sortpom.wrapper.operation.HierarchyWrapper$processOtherContent__3: java.util.function.Consumer bootstrap$(sortpom.wrapper.operation.HierarchyWrapperOperation)>"
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<sortpom.wrapper.operation.HierarchyWrapper$processOtherContent__3: java.util.function.Consumer bootstrap$(sortpom.wrapper.operation.HierarchyWrapperOperation)>";
    "(100)<sortpom.wrapper.operation.HierarchyWrapper: java.lang.String toString()>"
    "(100)<sortpom.wrapper.operation.HierarchyWrapper: java.lang.String toString()>"->"(18)<sortpom.wrapper.operation.ToStringOperation: void <clinit>()>";
    "(100)<sortpom.wrapper.operation.HierarchyWrapper: java.lang.String toString()>"->"<java.lang.Object: void <clinit>()>";
    "(22)<sortpom.wrapper.operation.HierarchyRootWrapper: void sortStructureAttributes()>"
    "(22)<sortpom.wrapper.operation.HierarchyRootWrapper: void sortStructureAttributes()>"->"(19)<sortpom.wrapper.operation.SortAttributesOperation: void <clinit>()>";
    "(22)<sortpom.wrapper.operation.HierarchyRootWrapper: void sortStructureAttributes()>"->"<java.lang.Object: void <clinit>()>";
    "(13)<sortpom.wrapper.content.SingleNewlineInTextWrapper: void <clinit>()>"
    "(13)<sortpom.wrapper.content.SingleNewlineInTextWrapper: void <clinit>()>"->"(13)<sortpom.wrapper.content.SingleNewlineInTextWrapper: void <clinit>()>";
    "(13)<sortpom.wrapper.content.SingleNewlineInTextWrapper: void <clinit>()>"->"<java.lang.Object: void <clinit>()>";
    "(24)<sortpom.wrapper.content.DependencySortedWrapper: void <init>(org.jdom.Element,int)>"
    "(17)<sortpom.wrapper.content.ChildElementSorter: void <clinit>()>"
    "(24)<sortpom.wrapper.content.DependencySortedWrapper: void <init>(org.jdom.Element,int)>"->"(17)<sortpom.wrapper.content.ChildElementSorter: void <clinit>()>";
    "(24)<sortpom.wrapper.content.DependencySortedWrapper: void <init>(org.jdom.Element,int)>"->"<java.lang.Object: void <clinit>()>";
    "(29)<sortpom.wrapper.content.DependencySortedWrapper: void setSortOrder(sortpom.parameter.DependencySortOrder)>"
    "(29)<sortpom.wrapper.content.DependencySortedWrapper: void setSortOrder(sortpom.parameter.DependencySortOrder)>"->"(17)<sortpom.wrapper.content.ChildElementSorter: void <clinit>()>";
    "(29)<sortpom.wrapper.content.DependencySortedWrapper: void setSortOrder(sortpom.parameter.DependencySortOrder)>"->"<java.lang.Object: void <clinit>()>";
    "(25)<sortpom.wrapper.content.PluginSortedWrapper: void <init>(org.jdom.Element,int)>"
    "(25)<sortpom.wrapper.content.PluginSortedWrapper: void <init>(org.jdom.Element,int)>"->"(17)<sortpom.wrapper.content.ChildElementSorter: void <clinit>()>";
    "(25)<sortpom.wrapper.content.PluginSortedWrapper: void <init>(org.jdom.Element,int)>"->"<java.lang.Object: void <clinit>()>";
    "(30)<sortpom.wrapper.content.PluginSortedWrapper: void setSortOrder(sortpom.parameter.DependencySortOrder)>"
    "(30)<sortpom.wrapper.content.PluginSortedWrapper: void setSortOrder(sortpom.parameter.DependencySortOrder)>"->"(17)<sortpom.wrapper.content.ChildElementSorter: void <clinit>()>";
    "(30)<sortpom.wrapper.content.PluginSortedWrapper: void setSortOrder(sortpom.parameter.DependencySortOrder)>"->"<java.lang.Object: void <clinit>()>";
    "(71)<sortpom.wrapper.content.ChildElementSorter$Scope: sortpom.wrapper.content.ChildElementSorter$Scope[] values()>"
    "(73)<sortpom.wrapper.content.ChildElementSorter$Scope: void <clinit>()>"
    "(71)<sortpom.wrapper.content.ChildElementSorter$Scope: sortpom.wrapper.content.ChildElementSorter$Scope[] values()>"->"(73)<sortpom.wrapper.content.ChildElementSorter$Scope: void <clinit>()>";
    "(71)<sortpom.wrapper.content.ChildElementSorter$Scope: sortpom.wrapper.content.ChildElementSorter$Scope[] values()>"->"<java.lang.Object: void <clinit>()>";
    "(71)<sortpom.wrapper.content.ChildElementSorter$Scope: sortpom.wrapper.content.ChildElementSorter$Scope valueOf(java.lang.String)>"
    "<java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>"
    "(71)<sortpom.wrapper.content.ChildElementSorter$Scope: sortpom.wrapper.content.ChildElementSorter$Scope valueOf(java.lang.String)>"->"<java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>";
    "(75)<sortpom.wrapper.content.ChildElementSorter$Scope: sortpom.wrapper.content.ChildElementSorter$Scope getScope(java.lang.String)>"
    "(75)<sortpom.wrapper.content.ChildElementSorter$Scope: sortpom.wrapper.content.ChildElementSorter$Scope getScope(java.lang.String)>"->"(73)<sortpom.wrapper.content.ChildElementSorter$Scope: void <clinit>()>";
    "(75)<sortpom.wrapper.content.ChildElementSorter$Scope: sortpom.wrapper.content.ChildElementSorter$Scope getScope(java.lang.String)>"->"(71)<sortpom.wrapper.content.ChildElementSorter$Scope: sortpom.wrapper.content.ChildElementSorter$Scope[] values()>";
    "(75)<sortpom.wrapper.content.ChildElementSorter$Scope: sortpom.wrapper.content.ChildElementSorter$Scope getScope(java.lang.String)>"->"<java.lang.Object: void <clinit>()>";
    "(75)<sortpom.wrapper.content.ChildElementSorter$Scope: sortpom.wrapper.content.ChildElementSorter$Scope getScope(java.lang.String)>"->"(73)<sortpom.wrapper.content.ChildElementSorter$Scope: void <clinit>()>";
    "(75)<sortpom.wrapper.content.ChildElementSorter$Scope: sortpom.wrapper.content.ChildElementSorter$Scope getScope(java.lang.String)>"->"<java.lang.Object: void <clinit>()>";
    "(73)<sortpom.wrapper.content.ChildElementSorter$Scope: void <clinit>()>"->"(73)<sortpom.wrapper.content.ChildElementSorter$Scope: void <clinit>()>";
    "(73)<sortpom.wrapper.content.ChildElementSorter$Scope: void <clinit>()>"->"<java.lang.Object: void <clinit>()>";
    "(22)<sortpom.wrapper.content.ChildElementSorter: void <init>(sortpom.parameter.DependencySortOrder,java.util.List)>"
    "<sortpom.wrapper.content.ChildElementSorter$lambda_new_0__4: java.util.function.Consumer bootstrap$(sortpom.wrapper.content.ChildElementSorter)>"
    "(22)<sortpom.wrapper.content.ChildElementSorter: void <init>(sortpom.parameter.DependencySortOrder,java.util.List)>"->"<sortpom.wrapper.content.ChildElementSorter$lambda_new_0__4: java.util.function.Consumer bootstrap$(sortpom.wrapper.content.ChildElementSorter)>";
    "<sortpom.wrapper.content.ChildElementSorter$lambda_new_1__5: java.util.function.Consumer bootstrap$(sortpom.wrapper.content.ChildElementSorter)>"
    "(22)<sortpom.wrapper.content.ChildElementSorter: void <init>(sortpom.parameter.DependencySortOrder,java.util.List)>"->"<sortpom.wrapper.content.ChildElementSorter$lambda_new_1__5: java.util.function.Consumer bootstrap$(sortpom.wrapper.content.ChildElementSorter)>";
    "(36)<sortpom.wrapper.content.ChildElementSorter: boolean compareTo(sortpom.wrapper.content.ChildElementSorter)>"
    "<java.lang.Integer: void <clinit>()>"
    "(36)<sortpom.wrapper.content.ChildElementSorter: boolean compareTo(sortpom.wrapper.content.ChildElementSorter)>"->"<java.lang.Integer: void <clinit>()>";
    "<java.lang.Integer: java.lang.Integer valueOf(int)>"
    "(36)<sortpom.wrapper.content.ChildElementSorter: boolean compareTo(sortpom.wrapper.content.ChildElementSorter)>"->"<java.lang.Integer: java.lang.Integer valueOf(int)>";
    "<sortpom.wrapper.content.ChildElementSorter$lambda_compareTo_4__8: java.util.function.Predicate bootstrap$()>"
    "(36)<sortpom.wrapper.content.ChildElementSorter: boolean compareTo(sortpom.wrapper.content.ChildElementSorter)>"->"<sortpom.wrapper.content.ChildElementSorter$lambda_compareTo_4__8: java.util.function.Predicate bootstrap$()>";
    "<sortpom.wrapper.content.ChildElementSorter$lambda_compareTo_3__7: java.util.function.Function bootstrap$(sortpom.wrapper.content.ChildElementSorter,java.util.function.Function)>"
    "(36)<sortpom.wrapper.content.ChildElementSorter: boolean compareTo(sortpom.wrapper.content.ChildElementSorter)>"->"<sortpom.wrapper.content.ChildElementSorter$lambda_compareTo_3__7: java.util.function.Function bootstrap$(sortpom.wrapper.content.ChildElementSorter,java.util.function.Function)>";
    "<sortpom.wrapper.content.ChildElementSorter$lambda_compareTo_2__6: java.util.function.Function bootstrap$(sortpom.wrapper.content.ChildElementSorter)>"
    "(36)<sortpom.wrapper.content.ChildElementSorter: boolean compareTo(sortpom.wrapper.content.ChildElementSorter)>"->"<sortpom.wrapper.content.ChildElementSorter$lambda_compareTo_2__6: java.util.function.Function bootstrap$(sortpom.wrapper.content.ChildElementSorter)>";
    "(36)<sortpom.wrapper.content.ChildElementSorter: boolean compareTo(sortpom.wrapper.content.ChildElementSorter)>"->"<java.lang.Object: void <clinit>()>";
    "(57)<sortpom.wrapper.content.ChildElementSorter: int compareScope(java.lang.String,java.lang.String)>"
    "(57)<sortpom.wrapper.content.ChildElementSorter: int compareScope(java.lang.String,java.lang.String)>"->"(73)<sortpom.wrapper.content.ChildElementSorter$Scope: void <clinit>()>";
    "(57)<sortpom.wrapper.content.ChildElementSorter: int compareScope(java.lang.String,java.lang.String)>"->"(75)<sortpom.wrapper.content.ChildElementSorter$Scope: sortpom.wrapper.content.ChildElementSorter$Scope getScope(java.lang.String)>";
    "(57)<sortpom.wrapper.content.ChildElementSorter: int compareScope(java.lang.String,java.lang.String)>"->"(75)<sortpom.wrapper.content.ChildElementSorter$Scope: sortpom.wrapper.content.ChildElementSorter$Scope getScope(java.lang.String)>";
    "(57)<sortpom.wrapper.content.ChildElementSorter: int compareScope(java.lang.String,java.lang.String)>"->"<java.lang.Object: void <clinit>()>";
    "(61)<sortpom.wrapper.content.ChildElementSorter: void setEmptyPluginGroupIdValue(java.lang.String)>"
    "<sortpom.wrapper.content.ChildElementSorter$lambda_setEmptyPluginGroupIdValue_5__9: java.util.function.BiFunction bootstrap$(java.lang.String)>"
    "(61)<sortpom.wrapper.content.ChildElementSorter: void setEmptyPluginGroupIdValue(java.lang.String)>"->"<sortpom.wrapper.content.ChildElementSorter$lambda_setEmptyPluginGroupIdValue_5__9: java.util.function.BiFunction bootstrap$(java.lang.String)>";
    "(40)<sortpom.wrapper.content.ChildElementSorter: java.lang.Integer lambda$compareTo$3(java.util.function.Function,java.util.Map$Entry)>"
    "(40)<sortpom.wrapper.content.ChildElementSorter: java.lang.Integer lambda$compareTo$3(java.util.function.Function,java.util.Map$Entry)>"->"<java.lang.Integer: void <clinit>()>";
    "(40)<sortpom.wrapper.content.ChildElementSorter: java.lang.Integer lambda$compareTo$3(java.util.function.Function,java.util.Map$Entry)>"->"<java.lang.Integer: java.lang.Integer valueOf(int)>";
    "(40)<sortpom.wrapper.content.ChildElementSorter: java.lang.Integer lambda$compareTo$3(java.util.function.Function,java.util.Map$Entry)>"->"<java.lang.Object: void <clinit>()>";
    "(17)<sortpom.wrapper.content.ChildElementSorter: void <clinit>()>"->"(17)<sortpom.wrapper.content.ChildElementSorter: void <clinit>()>";
    "(17)<sortpom.wrapper.content.ChildElementSorter: void <clinit>()>"->"<java.lang.Object: void <clinit>()>";
    "(115)<sortpom.wrapper.WrapperFactoryImpl: java.util.List castToChildElementList(org.jdom.Element)>"
    "(115)<sortpom.wrapper.WrapperFactoryImpl: java.util.List castToChildElementList(org.jdom.Element)>"->"<java.util.ArrayList: void <clinit>()>";
    "(115)<sortpom.wrapper.WrapperFactoryImpl: java.util.List castToChildElementList(org.jdom.Element)>"->"<java.lang.Object: void <clinit>()>";
    "(18)<sortpom.wrapper.ElementUtil: java.lang.String getDeepName(org.jdom.Element)>"->"(18)<sortpom.wrapper.ElementUtil: java.lang.String getDeepName(org.jdom.Element)>";
    "(26)<sortpom.wrapper.ElementUtil: boolean isElementParentName(org.jdom.Element,java.lang.String)>"->"(35)<sortpom.wrapper.ElementUtil: boolean isElementName(org.jdom.Element,java.lang.String)>";
    "(23)<sortpom.wrapper.TextWrapperCreator: sortpom.wrapper.content.Wrapper createWrapper(org.jdom.Text)>"
    "(23)<sortpom.wrapper.TextWrapperCreator: sortpom.wrapper.content.Wrapper createWrapper(org.jdom.Text)>"->"(13)<sortpom.wrapper.content.SingleNewlineInTextWrapper: void <clinit>()>";
    "(23)<sortpom.wrapper.TextWrapperCreator: sortpom.wrapper.content.Wrapper createWrapper(org.jdom.Text)>"->"<java.lang.Object: void <clinit>()>";
    "(25)<sortpom.wrapper.ElementSortOrderMap: void addElement(org.jdom.Element,int)>"
    "(25)<sortpom.wrapper.ElementSortOrderMap: void addElement(org.jdom.Element,int)>"->"<java.lang.Integer: void <clinit>()>";
    "(25)<sortpom.wrapper.ElementSortOrderMap: void addElement(org.jdom.Element,int)>"->"<java.lang.Integer: java.lang.Integer valueOf(int)>";
    "(25)<sortpom.wrapper.ElementSortOrderMap: void addElement(org.jdom.Element,int)>"->"(18)<sortpom.wrapper.ElementUtil: java.lang.String getDeepName(org.jdom.Element)>";
    "(25)<sortpom.wrapper.ElementSortOrderMap: void addElement(org.jdom.Element,int)>"->"<java.lang.Object: void <clinit>()>";
    "(32)<sortpom.wrapper.ElementSortOrderMap: boolean containsElement(org.jdom.Element)>"
    "(32)<sortpom.wrapper.ElementSortOrderMap: boolean containsElement(org.jdom.Element)>"->"(18)<sortpom.wrapper.ElementUtil: java.lang.String getDeepName(org.jdom.Element)>";
    "(38)<sortpom.wrapper.ElementSortOrderMap: int getSortOrder(org.jdom.Element)>"
    "(38)<sortpom.wrapper.ElementSortOrderMap: int getSortOrder(org.jdom.Element)>"->"(18)<sortpom.wrapper.ElementUtil: java.lang.String getDeepName(org.jdom.Element)>";
    "(29)<sortpom.parameter.IndentCharacters: java.lang.String getIndentCharacters()>"
    "<java.util.Arrays: void <clinit>()>"
    "(29)<sortpom.parameter.IndentCharacters: java.lang.String getIndentCharacters()>"->"<java.util.Arrays: void <clinit>()>";
    "<java.util.Arrays: void fill(char[],char)>"
    "(29)<sortpom.parameter.IndentCharacters: java.lang.String getIndentCharacters()>"->"<java.util.Arrays: void fill(char[],char)>";
    "<java.lang.String: void <clinit>()>"
    "(29)<sortpom.parameter.IndentCharacters: java.lang.String getIndentCharacters()>"->"<java.lang.String: void <clinit>()>";
    "(29)<sortpom.parameter.IndentCharacters: java.lang.String getIndentCharacters()>"->"<java.lang.Object: void <clinit>()>";
    "(21)<sortpom.parameter.LineSeparatorUtil: void <init>(java.lang.String)>"
    "<java.nio.charset.Charset: void <clinit>()>"
    "(21)<sortpom.parameter.LineSeparatorUtil: void <init>(java.lang.String)>"->"<java.nio.charset.Charset: void <clinit>()>";
    "<java.util.Arrays: java.lang.String toString(byte[])>"
    "(21)<sortpom.parameter.LineSeparatorUtil: void <init>(java.lang.String)>"->"<java.util.Arrays: java.lang.String toString(byte[])>";
    "<java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>"
    "(21)<sortpom.parameter.LineSeparatorUtil: void <init>(java.lang.String)>"->"<java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>";
    "(21)<sortpom.parameter.LineSeparatorUtil: void <init>(java.lang.String)>"->"<java.util.Arrays: void <clinit>()>";
    "(21)<sortpom.parameter.LineSeparatorUtil: void <init>(java.lang.String)>"->"<java.lang.Object: void <clinit>()>";
    "(140)<sortpom.parameter.PluginParameters$Builder: sortpom.parameter.PluginParameters$Builder setVerifyFail(java.lang.String)>"
    "(11)<sortpom.parameter.VerifyFailType: void <clinit>()>"
    "(140)<sortpom.parameter.PluginParameters$Builder: sortpom.parameter.PluginParameters$Builder setVerifyFail(java.lang.String)>"->"(11)<sortpom.parameter.VerifyFailType: void <clinit>()>";
    "(13)<sortpom.parameter.VerifyFailType: sortpom.parameter.VerifyFailType fromString(java.lang.String)>"
    "(140)<sortpom.parameter.PluginParameters$Builder: sortpom.parameter.PluginParameters$Builder setVerifyFail(java.lang.String)>"->"(13)<sortpom.parameter.VerifyFailType: sortpom.parameter.VerifyFailType fromString(java.lang.String)>";
    "(140)<sortpom.parameter.PluginParameters$Builder: sortpom.parameter.PluginParameters$Builder setVerifyFail(java.lang.String)>"->"<java.lang.Object: void <clinit>()>";
    "(9)<sortpom.parameter.VerifyFailType: sortpom.parameter.VerifyFailType[] values()>"
    "(9)<sortpom.parameter.VerifyFailType: sortpom.parameter.VerifyFailType[] values()>"->"(11)<sortpom.parameter.VerifyFailType: void <clinit>()>";
    "(9)<sortpom.parameter.VerifyFailType: sortpom.parameter.VerifyFailType[] values()>"->"<java.lang.Object: void <clinit>()>";
    "(9)<sortpom.parameter.VerifyFailType: sortpom.parameter.VerifyFailType valueOf(java.lang.String)>"
    "(9)<sortpom.parameter.VerifyFailType: sortpom.parameter.VerifyFailType valueOf(java.lang.String)>"->"<java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>";
    "(13)<sortpom.parameter.VerifyFailType: sortpom.parameter.VerifyFailType fromString(java.lang.String)>"->"(11)<sortpom.parameter.VerifyFailType: void <clinit>()>";
    "(13)<sortpom.parameter.VerifyFailType: sortpom.parameter.VerifyFailType fromString(java.lang.String)>"->"<java.lang.Object: void <clinit>()>";
    "(13)<sortpom.parameter.VerifyFailType: sortpom.parameter.VerifyFailType fromString(java.lang.String)>"->"(11)<sortpom.parameter.VerifyFailType: void <clinit>()>";
    "(13)<sortpom.parameter.VerifyFailType: sortpom.parameter.VerifyFailType fromString(java.lang.String)>"->"<java.lang.Object: void <clinit>()>";
    "(13)<sortpom.parameter.VerifyFailType: sortpom.parameter.VerifyFailType fromString(java.lang.String)>"->"(11)<sortpom.parameter.VerifyFailType: void <clinit>()>";
    "(13)<sortpom.parameter.VerifyFailType: sortpom.parameter.VerifyFailType fromString(java.lang.String)>"->"<java.lang.Object: void <clinit>()>";
    "(11)<sortpom.parameter.VerifyFailType: void <clinit>()>"->"(11)<sortpom.parameter.VerifyFailType: void <clinit>()>";
    "(11)<sortpom.parameter.VerifyFailType: void <clinit>()>"->"<java.lang.Object: void <clinit>()>";
    "(35)<sortpom.parameter.DependencySortOrder: java.util.Collection getChildElementNames()>"
    "(35)<sortpom.parameter.DependencySortOrder: java.util.Collection getChildElementNames()>"->"<java.util.Arrays: void <clinit>()>";
    "<java.util.Collections: java.util.List unmodifiableList(java.util.List)>"
    "(35)<sortpom.parameter.DependencySortOrder: java.util.Collection getChildElementNames()>"->"<java.util.Collections: java.util.List unmodifiableList(java.util.List)>";
    "<java.util.Arrays: java.util.List asList(java.lang.Object[])>"
    "(35)<sortpom.parameter.DependencySortOrder: java.util.Collection getChildElementNames()>"->"<java.util.Arrays: java.util.List asList(java.lang.Object[])>";
    "<java.util.Collections: void <clinit>()>"
    "(35)<sortpom.parameter.DependencySortOrder: java.util.Collection getChildElementNames()>"->"<java.util.Collections: void <clinit>()>";
    "(35)<sortpom.parameter.DependencySortOrder: java.util.Collection getChildElementNames()>"->"<java.lang.Object: void <clinit>()>";
    "(42)<sortpom.parameter.DependencySortOrder: java.lang.String[] parseChildElementNameList()>"
    "(42)<sortpom.parameter.DependencySortOrder: java.lang.String[] parseChildElementNameList()>"->"<java.lang.String: void <clinit>()>";
    "(42)<sortpom.parameter.DependencySortOrder: java.lang.String[] parseChildElementNameList()>"->"<java.lang.Object: void <clinit>()>";
    "(42)<sortpom.parameter.DependencySortOrder: java.lang.String[] parseChildElementNameList()>"->"<java.lang.String: void <clinit>()>";
    "(42)<sortpom.parameter.DependencySortOrder: java.lang.String[] parseChildElementNameList()>"->"<java.lang.Object: void <clinit>()>";
    "(42)<sortpom.parameter.DependencySortOrder: java.lang.String[] parseChildElementNameList()>"->"<java.lang.String: void <clinit>()>";
    "(42)<sortpom.parameter.DependencySortOrder: java.lang.String[] parseChildElementNameList()>"->"<java.lang.Object: void <clinit>()>";
    "(167)<sortpom.SortPomImpl$1: void <clinit>()>"
    "(167)<sortpom.SortPomImpl$1: void <clinit>()>"->"(11)<sortpom.parameter.VerifyFailType: void <clinit>()>";
    "(167)<sortpom.SortPomImpl$1: void <clinit>()>"->"(9)<sortpom.parameter.VerifyFailType: sortpom.parameter.VerifyFailType[] values()>";
    "(167)<sortpom.SortPomImpl$1: void <clinit>()>"->"(11)<sortpom.parameter.VerifyFailType: void <clinit>()>";
    "(167)<sortpom.SortPomImpl$1: void <clinit>()>"->"<java.lang.Object: void <clinit>()>";
    "(167)<sortpom.SortPomImpl$1: void <clinit>()>"->"(167)<sortpom.SortPomImpl$1: void <clinit>()>";
    "(167)<sortpom.SortPomImpl$1: void <clinit>()>"->"(11)<sortpom.parameter.VerifyFailType: void <clinit>()>";
    "(167)<sortpom.SortPomImpl$1: void <clinit>()>"->"<java.lang.Object: void <clinit>()>";
    "(167)<sortpom.SortPomImpl$1: void <clinit>()>"->"(167)<sortpom.SortPomImpl$1: void <clinit>()>";
    "(167)<sortpom.SortPomImpl$1: void <clinit>()>"->"(167)<sortpom.SortPomImpl$1: void <clinit>()>";
    "(167)<sortpom.SortPomImpl$1: void <clinit>()>"->"<java.lang.Object: void <clinit>()>";
    "(112)<sortpom.SortPomImpl: java.lang.String sortXml(java.lang.String)>"
    "<sortpom.SortPomImpl$lambda_sortXml_0__10: java.util.function.Supplier bootstrap$(sortpom.SortPomImpl)>"
    "(112)<sortpom.SortPomImpl: java.lang.String sortXml(java.lang.String)>"->"<sortpom.SortPomImpl$lambda_sortXml_0__10: java.util.function.Supplier bootstrap$(sortpom.SortPomImpl)>";
    "(138)<sortpom.SortPomImpl: void createBackupFile()>"
    "(138)<sortpom.SortPomImpl: void createBackupFile()>"->"<java.lang.Object: void <clinit>()>";
    "<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>"
    "(138)<sortpom.SortPomImpl: void createBackupFile()>"->"<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>";
    "(138)<sortpom.SortPomImpl: void createBackupFile()>"->"<java.lang.String: void <clinit>()>";
    "(162)<sortpom.SortPomImpl: void verifyPom()>"
    "(162)<sortpom.SortPomImpl: void verifyPom()>"->"(167)<sortpom.SortPomImpl$1: void <clinit>()>";
    "(162)<sortpom.SortPomImpl: void verifyPom()>"->"<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>";
    "(162)<sortpom.SortPomImpl: void verifyPom()>"->"<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>";
    "(162)<sortpom.SortPomImpl: void verifyPom()>"->"<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>";
    "(162)<sortpom.SortPomImpl: void verifyPom()>"->"<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>";
    "(162)<sortpom.SortPomImpl: void verifyPom()>"->"<java.lang.String: void <clinit>()>";
    "(162)<sortpom.SortPomImpl: void verifyPom()>"->"<java.lang.String: void <clinit>()>";
    "(162)<sortpom.SortPomImpl: void verifyPom()>"->"<java.lang.String: void <clinit>()>";
    "(162)<sortpom.SortPomImpl: void verifyPom()>"->"<java.lang.Object: void <clinit>()>";
    "(189)<sortpom.SortPomImpl: void saveViolationFile(sortpom.util.XmlOrderedResult)>"
    "<java.io.File: void <clinit>()>"
    "(189)<sortpom.SortPomImpl: void saveViolationFile(sortpom.util.XmlOrderedResult)>"->"<java.io.File: void <clinit>()>";
    "(189)<sortpom.SortPomImpl: void saveViolationFile(sortpom.util.XmlOrderedResult)>"->"<java.lang.Object: void <clinit>()>";
    "(199)<sortpom.SortPomImpl: sortpom.util.XmlOrderedResult isPomElementsSorted()>"
    "<sortpom.SortPomImpl$lambda_isPomElementsSorted_1__11: java.util.function.Supplier bootstrap$(sortpom.SortPomImpl)>"
    "(199)<sortpom.SortPomImpl: sortpom.util.XmlOrderedResult isPomElementsSorted()>"->"<sortpom.SortPomImpl$lambda_isPomElementsSorted_1__11: java.util.function.Supplier bootstrap$(sortpom.SortPomImpl)>";
    "(19)<sortpom.processinstruction.IgnoredSectionsStore: void <init>()>"
    "(19)<sortpom.processinstruction.IgnoredSectionsStore: void <init>()>"->"<java.util.ArrayList: void <clinit>()>";
    "(19)<sortpom.processinstruction.IgnoredSectionsStore: void <init>()>"->"<java.lang.Object: void <clinit>()>";
    "(23)<sortpom.processinstruction.IgnoredSectionsStore: java.lang.String replaceIgnoredSections(java.lang.String)>"
    "(13)<sortpom.processinstruction.InstructionType: void <clinit>()>"
    "(23)<sortpom.processinstruction.IgnoredSectionsStore: java.lang.String replaceIgnoredSections(java.lang.String)>"->"(13)<sortpom.processinstruction.InstructionType: void <clinit>()>";
    "(23)<sortpom.processinstruction.IgnoredSectionsStore: java.lang.String replaceIgnoredSections(java.lang.String)>"->"<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>";
    "(23)<sortpom.processinstruction.IgnoredSectionsStore: java.lang.String replaceIgnoredSections(java.lang.String)>"->"<java.lang.Integer: java.lang.Integer valueOf(int)>";
    "(23)<sortpom.processinstruction.IgnoredSectionsStore: java.lang.String replaceIgnoredSections(java.lang.String)>"->"<java.lang.String: void <clinit>()>";
    "(23)<sortpom.processinstruction.IgnoredSectionsStore: java.lang.String replaceIgnoredSections(java.lang.String)>"->"<java.lang.Integer: void <clinit>()>";
    "<java.lang.AbstractStringBuilder: void <clinit>()>"
    "(23)<sortpom.processinstruction.IgnoredSectionsStore: java.lang.String replaceIgnoredSections(java.lang.String)>"->"<java.lang.AbstractStringBuilder: void <clinit>()>";
    "<java.lang.StringBuffer: void <clinit>()>"
    "(23)<sortpom.processinstruction.IgnoredSectionsStore: java.lang.String replaceIgnoredSections(java.lang.String)>"->"<java.lang.StringBuffer: void <clinit>()>";
    "(23)<sortpom.processinstruction.IgnoredSectionsStore: java.lang.String replaceIgnoredSections(java.lang.String)>"->"<java.lang.Object: void <clinit>()>";
    "(39)<sortpom.processinstruction.IgnoredSectionsStore: java.lang.String revertIgnoredSections(java.lang.String)>"
    "(39)<sortpom.processinstruction.IgnoredSectionsStore: java.lang.String revertIgnoredSections(java.lang.String)>"->"(13)<sortpom.processinstruction.InstructionType: void <clinit>()>";
    "<java.lang.Integer: int parseInt(java.lang.String)>"
    "(39)<sortpom.processinstruction.IgnoredSectionsStore: java.lang.String revertIgnoredSections(java.lang.String)>"->"<java.lang.Integer: int parseInt(java.lang.String)>";
    "(39)<sortpom.processinstruction.IgnoredSectionsStore: java.lang.String revertIgnoredSections(java.lang.String)>"->"<java.lang.Integer: void <clinit>()>";
    "(39)<sortpom.processinstruction.IgnoredSectionsStore: java.lang.String revertIgnoredSections(java.lang.String)>"->"<java.lang.AbstractStringBuilder: void <clinit>()>";
    "(39)<sortpom.processinstruction.IgnoredSectionsStore: java.lang.String revertIgnoredSections(java.lang.String)>"->"<java.lang.StringBuffer: void <clinit>()>";
    "(39)<sortpom.processinstruction.IgnoredSectionsStore: java.lang.String revertIgnoredSections(java.lang.String)>"->"<java.lang.Object: void <clinit>()>";
    "(11)<sortpom.processinstruction.InstructionType: sortpom.processinstruction.InstructionType[] values()>"
    "(11)<sortpom.processinstruction.InstructionType: sortpom.processinstruction.InstructionType[] values()>"->"(13)<sortpom.processinstruction.InstructionType: void <clinit>()>";
    "(11)<sortpom.processinstruction.InstructionType: sortpom.processinstruction.InstructionType[] values()>"->"<java.lang.Object: void <clinit>()>";
    "(11)<sortpom.processinstruction.InstructionType: sortpom.processinstruction.InstructionType valueOf(java.lang.String)>"
    "(11)<sortpom.processinstruction.InstructionType: sortpom.processinstruction.InstructionType valueOf(java.lang.String)>"->"<java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>";
    "(21)<sortpom.processinstruction.InstructionType: sortpom.processinstruction.InstructionType next()>"
    "(21)<sortpom.processinstruction.InstructionType: sortpom.processinstruction.InstructionType next()>"->"(13)<sortpom.processinstruction.InstructionType: void <clinit>()>";
    "(21)<sortpom.processinstruction.InstructionType: sortpom.processinstruction.InstructionType next()>"->"<java.lang.Object: void <clinit>()>";
    "(28)<sortpom.processinstruction.InstructionType: boolean containsType(java.lang.String)>"
    "(28)<sortpom.processinstruction.InstructionType: boolean containsType(java.lang.String)>"->"(13)<sortpom.processinstruction.InstructionType: void <clinit>()>";
    "(28)<sortpom.processinstruction.InstructionType: boolean containsType(java.lang.String)>"->"<java.lang.Object: void <clinit>()>";
    "(13)<sortpom.processinstruction.InstructionType: void <clinit>()>"->"(13)<sortpom.processinstruction.InstructionType: void <clinit>()>";
    "<java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>"
    "(13)<sortpom.processinstruction.InstructionType: void <clinit>()>"->"<java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>";
    "(13)<sortpom.processinstruction.InstructionType: void <clinit>()>"->"<java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>";
    "(13)<sortpom.processinstruction.InstructionType: void <clinit>()>"->"<java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>";
    "<java.util.regex.Pattern: void <clinit>()>"
    "(13)<sortpom.processinstruction.InstructionType: void <clinit>()>"->"<java.util.regex.Pattern: void <clinit>()>";
    "(13)<sortpom.processinstruction.InstructionType: void <clinit>()>"->"<java.lang.Object: void <clinit>()>";
    "(21)<sortpom.processinstruction.SortpomPiScanner: void <init>(sortpom.logger.SortPomLogger)>"
    "(21)<sortpom.processinstruction.SortpomPiScanner: void <init>(sortpom.logger.SortPomLogger)>"->"(13)<sortpom.processinstruction.InstructionType: void <clinit>()>";
    "(21)<sortpom.processinstruction.SortpomPiScanner: void <init>(sortpom.logger.SortPomLogger)>"->"<java.lang.Object: void <clinit>()>";
    "(27)<sortpom.processinstruction.SortpomPiScanner: void scan(java.lang.String)>"
    "(27)<sortpom.processinstruction.SortpomPiScanner: void scan(java.lang.String)>"->"(13)<sortpom.processinstruction.InstructionType: void <clinit>()>";
    "(27)<sortpom.processinstruction.SortpomPiScanner: void scan(java.lang.String)>"->"<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>";
    "(27)<sortpom.processinstruction.SortpomPiScanner: void scan(java.lang.String)>"->"<java.lang.String: void <clinit>()>";
    "(27)<sortpom.processinstruction.SortpomPiScanner: void scan(java.lang.String)>"->"<java.lang.Object: void <clinit>()>";
    "(39)<sortpom.processinstruction.SortpomPiScanner: void scanOneInstruction(java.lang.String)>"
    "(39)<sortpom.processinstruction.SortpomPiScanner: void scanOneInstruction(java.lang.String)>"->"(13)<sortpom.processinstruction.InstructionType: void <clinit>()>";
    "(39)<sortpom.processinstruction.SortpomPiScanner: void scanOneInstruction(java.lang.String)>"->"<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>";
    "(39)<sortpom.processinstruction.SortpomPiScanner: void scanOneInstruction(java.lang.String)>"->"<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>";
    "(39)<sortpom.processinstruction.SortpomPiScanner: void scanOneInstruction(java.lang.String)>"->"(28)<sortpom.processinstruction.InstructionType: boolean containsType(java.lang.String)>";
    "(39)<sortpom.processinstruction.SortpomPiScanner: void scanOneInstruction(java.lang.String)>"->"<java.lang.String: void <clinit>()>";
    "(39)<sortpom.processinstruction.SortpomPiScanner: void scanOneInstruction(java.lang.String)>"->"<java.lang.String: void <clinit>()>";
    "(39)<sortpom.processinstruction.SortpomPiScanner: void scanOneInstruction(java.lang.String)>"->"<java.lang.Object: void <clinit>()>";
    "(54)<sortpom.XmlOutputGenerator: org.jdom.output.Format createPrettyFormat()>"
    "<org.jdom.output.Format: org.jdom.output.Format getPrettyFormat()>"
    "(54)<sortpom.XmlOutputGenerator: org.jdom.output.Format createPrettyFormat()>"->"<org.jdom.output.Format: org.jdom.output.Format getPrettyFormat()>";
    "(35)<sortpom.util.FileAttributeUtil: void setTimestamps(java.io.File,long)>"
    "<java.nio.file.LinkOption: void <clinit>()>"
    "(35)<sortpom.util.FileAttributeUtil: void setTimestamps(java.io.File,long)>"->"<java.nio.file.LinkOption: void <clinit>()>";
    "<java.nio.file.attribute.FileTime: java.nio.file.attribute.FileTime fromMillis(long)>"
    "(35)<sortpom.util.FileAttributeUtil: void setTimestamps(java.io.File,long)>"->"<java.nio.file.attribute.FileTime: java.nio.file.attribute.FileTime fromMillis(long)>";
    "<java.nio.file.Files: java.nio.file.attribute.FileAttributeView getFileAttributeView(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>"
    "(35)<sortpom.util.FileAttributeUtil: void setTimestamps(java.io.File,long)>"->"<java.nio.file.Files: java.nio.file.attribute.FileAttributeView getFileAttributeView(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>";
    "<java.nio.file.Files: void <clinit>()>"
    "(35)<sortpom.util.FileAttributeUtil: void setTimestamps(java.io.File,long)>"->"<java.nio.file.Files: void <clinit>()>";
    "(35)<sortpom.util.FileAttributeUtil: void setTimestamps(java.io.File,long)>"->"<java.lang.Object: void <clinit>()>";
    "(25)<sortpom.util.XmlOrderedResult: sortpom.util.XmlOrderedResult nameDiffers(java.lang.String,java.lang.String)>"->"<java.lang.Object: void <clinit>()>";
    "(25)<sortpom.util.XmlOrderedResult: sortpom.util.XmlOrderedResult nameDiffers(java.lang.String,java.lang.String)>"->"<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>";
    "(25)<sortpom.util.XmlOrderedResult: sortpom.util.XmlOrderedResult nameDiffers(java.lang.String,java.lang.String)>"->"<java.lang.String: void <clinit>()>";
    "(31)<sortpom.util.XmlOrderedResult: sortpom.util.XmlOrderedResult childElementDiffers(java.lang.String,int,int)>"->"<java.lang.Object: void <clinit>()>";
    "(31)<sortpom.util.XmlOrderedResult: sortpom.util.XmlOrderedResult childElementDiffers(java.lang.String,int,int)>"->"<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>";
    "(31)<sortpom.util.XmlOrderedResult: sortpom.util.XmlOrderedResult childElementDiffers(java.lang.String,int,int)>"->"<java.lang.Integer: java.lang.Integer valueOf(int)>";
    "(31)<sortpom.util.XmlOrderedResult: sortpom.util.XmlOrderedResult childElementDiffers(java.lang.String,int,int)>"->"<java.lang.Integer: java.lang.Integer valueOf(int)>";
    "(31)<sortpom.util.XmlOrderedResult: sortpom.util.XmlOrderedResult childElementDiffers(java.lang.String,int,int)>"->"<java.lang.String: void <clinit>()>";
    "(31)<sortpom.util.XmlOrderedResult: sortpom.util.XmlOrderedResult childElementDiffers(java.lang.String,int,int)>"->"<java.lang.Integer: void <clinit>()>";
    "(38)<sortpom.util.XmlOrderedResult: sortpom.util.XmlOrderedResult textContentDiffers(java.lang.String,java.lang.String,java.lang.String)>"->"<java.lang.Object: void <clinit>()>";
    "(38)<sortpom.util.XmlOrderedResult: sortpom.util.XmlOrderedResult textContentDiffers(java.lang.String,java.lang.String,java.lang.String)>"->"<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>";
    "(38)<sortpom.util.XmlOrderedResult: sortpom.util.XmlOrderedResult textContentDiffers(java.lang.String,java.lang.String,java.lang.String)>"->"<java.lang.String: void <clinit>()>";
    "(23)<sortpom.util.UrlWrapper: boolean isUrl()>"
    "<java.net.URL: void <clinit>()>"
    "(23)<sortpom.util.UrlWrapper: boolean isUrl()>"->"<java.net.URL: void <clinit>()>";
    "(23)<sortpom.util.UrlWrapper: boolean isUrl()>"->"<java.lang.Object: void <clinit>()>";
    "(31)<sortpom.util.UrlWrapper: java.io.InputStream openStream()>"
    "(31)<sortpom.util.UrlWrapper: java.io.InputStream openStream()>"->"<java.net.URL: void <clinit>()>";
    "(31)<sortpom.util.UrlWrapper: java.io.InputStream openStream()>"->"<java.lang.Object: void <clinit>()>";
    "(56)<sortpom.util.FileUtil: void createFileHandle()>"
    "(56)<sortpom.util.FileUtil: void createFileHandle()>"->"<java.io.File: void <clinit>()>";
    "(56)<sortpom.util.FileUtil: void createFileHandle()>"->"<java.lang.Object: void <clinit>()>";
    "(62)<sortpom.util.FileUtil: void checkBackupFileAccess()>"
    "(62)<sortpom.util.FileUtil: void checkBackupFileAccess()>"->"<java.nio.file.Files: void <clinit>()>";
    "<java.nio.file.Files: boolean deleteIfExists(java.nio.file.Path)>"
    "(62)<sortpom.util.FileUtil: void checkBackupFileAccess()>"->"<java.nio.file.Files: boolean deleteIfExists(java.nio.file.Path)>";
    "(62)<sortpom.util.FileUtil: void checkBackupFileAccess()>"->"<java.lang.Object: void <clinit>()>";
    "(70)<sortpom.util.FileUtil: void createBackupFile()>"
    "(70)<sortpom.util.FileUtil: void createBackupFile()>"->"<java.nio.file.Files: void <clinit>()>";
    "<java.nio.file.Files: java.nio.file.Path copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>"
    "(70)<sortpom.util.FileUtil: void createBackupFile()>"->"<java.nio.file.Files: java.nio.file.Path copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption[])>";
    "(70)<sortpom.util.FileUtil: void createBackupFile()>"->"<java.lang.Object: void <clinit>()>";
    "(83)<sortpom.util.FileUtil: java.lang.String getPomFileContent()>"
    "<java.io.FileInputStream: void <clinit>()>"
    "(83)<sortpom.util.FileUtil: java.lang.String getPomFileContent()>"->"<java.io.FileInputStream: void <clinit>()>";
    "<org.apache.commons.io.IOUtils: java.lang.String toString(java.io.InputStream,java.lang.String)>"
    "(83)<sortpom.util.FileUtil: java.lang.String getPomFileContent()>"->"<org.apache.commons.io.IOUtils: java.lang.String toString(java.io.InputStream,java.lang.String)>";
    "(83)<sortpom.util.FileUtil: java.lang.String getPomFileContent()>"->"<java.lang.Object: void <clinit>()>";
    "(104)<sortpom.util.FileUtil: void saveViolationFile(java.lang.String)>"
    "(104)<sortpom.util.FileUtil: void saveViolationFile(java.lang.String)>"->"<java.io.File: void <clinit>()>";
    "(104)<sortpom.util.FileUtil: void saveViolationFile(java.lang.String)>"->"<java.lang.Object: void <clinit>()>";
    "(120)<sortpom.util.FileUtil: void saveFile(java.io.File,java.lang.String,java.lang.String)>"
    "(120)<sortpom.util.FileUtil: void saveFile(java.io.File,java.lang.String,java.lang.String)>"->"<java.nio.file.Files: void <clinit>()>";
    "<java.nio.file.Files: java.nio.file.Path write(java.nio.file.Path,byte[],java.nio.file.OpenOption[])>"
    "(120)<sortpom.util.FileUtil: void saveFile(java.io.File,java.lang.String,java.lang.String)>"->"<java.nio.file.Files: java.nio.file.Path write(java.nio.file.Path,byte[],java.nio.file.OpenOption[])>";
    "<java.nio.file.Files: java.nio.file.Path createDirectories(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>"
    "(120)<sortpom.util.FileUtil: void saveFile(java.io.File,java.lang.String,java.lang.String)>"->"<java.nio.file.Files: java.nio.file.Path createDirectories(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>";
    "(120)<sortpom.util.FileUtil: void saveFile(java.io.File,java.lang.String,java.lang.String)>"->"<java.lang.Object: void <clinit>()>";
    "(144)<sortpom.util.FileUtil: java.lang.String getDefaultSortOrderXml()>"
    "<java.nio.charset.StandardCharsets: void <clinit>()>"
    "(144)<sortpom.util.FileUtil: java.lang.String getDefaultSortOrderXml()>"->"<java.nio.charset.StandardCharsets: void <clinit>()>";
    "<org.apache.commons.io.IOUtils: java.lang.String toString(java.io.InputStream,java.nio.charset.Charset)>"
    "(144)<sortpom.util.FileUtil: java.lang.String getDefaultSortOrderXml()>"->"<org.apache.commons.io.IOUtils: java.lang.String toString(java.io.InputStream,java.nio.charset.Charset)>";
    "<sortpom.util.FileUtil$lambda_getDefaultSortOrderXml_0__12: sortpom.util.CheckedSupplier bootstrap$(sortpom.util.FileUtil)>"
    "(144)<sortpom.util.FileUtil: java.lang.String getDefaultSortOrderXml()>"->"<sortpom.util.FileUtil$lambda_getDefaultSortOrderXml_0__12: sortpom.util.CheckedSupplier bootstrap$(sortpom.util.FileUtil)>";
    "(144)<sortpom.util.FileUtil: java.lang.String getDefaultSortOrderXml()>"->"<java.lang.Object: void <clinit>()>";
    "(171)<sortpom.util.FileUtil: java.io.InputStream openCustomSortOrderFile()>"
    "(171)<sortpom.util.FileUtil: java.io.InputStream openCustomSortOrderFile()>"->"<java.io.FileInputStream: void <clinit>()>";
    "(171)<sortpom.util.FileUtil: java.io.InputStream openCustomSortOrderFile()>"->"<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>";
    "(171)<sortpom.util.FileUtil: java.io.InputStream openCustomSortOrderFile()>"->"<java.lang.String: void <clinit>()>";
    "(171)<sortpom.util.FileUtil: java.io.InputStream openCustomSortOrderFile()>"->"<java.io.File: void <clinit>()>";
    "(171)<sortpom.util.FileUtil: java.io.InputStream openCustomSortOrderFile()>"->"<java.lang.Object: void <clinit>()>";
    "(171)<sortpom.util.FileUtil: java.io.InputStream openCustomSortOrderFile()>"->"<java.lang.Object: void <clinit>()>";
    "(190)<sortpom.util.FileUtil: java.io.InputStream getPredefinedSortOrder(java.lang.String)>"
    "<java.util.Optional: void <clinit>()>"
    "(190)<sortpom.util.FileUtil: java.io.InputStream getPredefinedSortOrder(java.lang.String)>"->"<java.util.Optional: void <clinit>()>";
    "<sortpom.util.FileUtil$lambda_getPredefinedSortOrder_2__15: java.util.function.Supplier bootstrap$(java.lang.String)>"
    "(190)<sortpom.util.FileUtil: java.io.InputStream getPredefinedSortOrder(java.lang.String)>"->"<sortpom.util.FileUtil$lambda_getPredefinedSortOrder_2__15: java.util.function.Supplier bootstrap$(java.lang.String)>";
    "<sortpom.util.FileUtil$lambda_getPredefinedSortOrder_1__14: java.util.function.Function bootstrap$(java.lang.String)>"
    "(190)<sortpom.util.FileUtil: java.io.InputStream getPredefinedSortOrder(java.lang.String)>"->"<sortpom.util.FileUtil$lambda_getPredefinedSortOrder_1__14: java.util.function.Function bootstrap$(java.lang.String)>";
    "<sortpom.util.FileUtil$getClassLoader__13: java.util.function.Function bootstrap$()>"
    "(190)<sortpom.util.FileUtil: java.io.InputStream getPredefinedSortOrder(java.lang.String)>"->"<sortpom.util.FileUtil$getClassLoader__13: java.util.function.Function bootstrap$()>";
    "<java.util.Optional: java.util.Optional of(java.lang.Object)>"
    "(190)<sortpom.util.FileUtil: java.io.InputStream getPredefinedSortOrder(java.lang.String)>"->"<java.util.Optional: java.util.Optional of(java.lang.Object)>";
    "(190)<sortpom.util.FileUtil: java.io.InputStream getPredefinedSortOrder(java.lang.String)>"->"<java.lang.Object: void <clinit>()>";
    "(194)<sortpom.util.FileUtil: java.lang.IllegalArgumentException lambda$getPredefinedSortOrder$2(java.lang.String)>"
    "(194)<sortpom.util.FileUtil: java.lang.IllegalArgumentException lambda$getPredefinedSortOrder$2(java.lang.String)>"->"<java.lang.Object: void <clinit>()>";
    "(194)<sortpom.util.FileUtil: java.lang.IllegalArgumentException lambda$getPredefinedSortOrder$2(java.lang.String)>"->"<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>";
    "(194)<sortpom.util.FileUtil: java.lang.IllegalArgumentException lambda$getPredefinedSortOrder$2(java.lang.String)>"->"<java.lang.String: void <clinit>()>";
    "<sortpom.wrapper.content.ChildElementSorter$lambda_compareTo_2__6: java.lang.Object apply(java.lang.Object)>"
    "<sortpom.wrapper.content.ChildElementSorter$lambda_compareTo_2__6: java.lang.Object apply(java.lang.Object)>"->"(17)<sortpom.wrapper.content.ChildElementSorter: void <clinit>()>";
    "(38)<sortpom.wrapper.content.ChildElementSorter: java.lang.String lambda$compareTo$2(sortpom.wrapper.content.ChildElementSorter,java.util.Map$Entry)>"
    "<sortpom.wrapper.content.ChildElementSorter$lambda_compareTo_2__6: java.lang.Object apply(java.lang.Object)>"->"(38)<sortpom.wrapper.content.ChildElementSorter: java.lang.String lambda$compareTo$2(sortpom.wrapper.content.ChildElementSorter,java.util.Map$Entry)>";
    "<sortpom.wrapper.content.ChildElementSorter$lambda_compareTo_2__6: java.lang.Object apply(java.lang.Object)>"->"<java.lang.Object: void <clinit>()>";
    "<sortpom.wrapper.content.ChildElementSorter$lambda_compareTo_4__8: boolean test(java.lang.Object)>"
    "<sortpom.wrapper.content.ChildElementSorter$lambda_compareTo_4__8: boolean test(java.lang.Object)>"->"(17)<sortpom.wrapper.content.ChildElementSorter: void <clinit>()>";
    "(42)<sortpom.wrapper.content.ChildElementSorter: boolean lambda$compareTo$4(java.lang.Integer)>"
    "<sortpom.wrapper.content.ChildElementSorter$lambda_compareTo_4__8: boolean test(java.lang.Object)>"->"(42)<sortpom.wrapper.content.ChildElementSorter: boolean lambda$compareTo$4(java.lang.Integer)>";
    "<sortpom.wrapper.content.ChildElementSorter$lambda_compareTo_4__8: boolean test(java.lang.Object)>"->"<java.lang.Object: void <clinit>()>";
    "<sortpom.wrapper.content.ChildElementSorter$lambda_setEmptyPluginGroupIdValue_5__9: java.lang.Object apply(java.lang.Object,java.lang.Object)>"
    "<sortpom.wrapper.content.ChildElementSorter$lambda_setEmptyPluginGroupIdValue_5__9: java.lang.Object apply(java.lang.Object,java.lang.Object)>"->"(17)<sortpom.wrapper.content.ChildElementSorter: void <clinit>()>";
    "(61)<sortpom.wrapper.content.ChildElementSorter: java.lang.String lambda$setEmptyPluginGroupIdValue$5(java.lang.String,java.lang.String,java.lang.String)>"
    "<sortpom.wrapper.content.ChildElementSorter$lambda_setEmptyPluginGroupIdValue_5__9: java.lang.Object apply(java.lang.Object,java.lang.Object)>"->"(61)<sortpom.wrapper.content.ChildElementSorter: java.lang.String lambda$setEmptyPluginGroupIdValue$5(java.lang.String,java.lang.String,java.lang.String)>";
    "<sortpom.wrapper.content.ChildElementSorter$lambda_setEmptyPluginGroupIdValue_5__9: java.lang.Object apply(java.lang.Object,java.lang.Object)>"->"<java.lang.Object: void <clinit>()>";
    "<sortpom.util.FileUtil$lambda_getPredefinedSortOrder_1__14: java.lang.Object apply(java.lang.Object)>"
    "(192)<sortpom.util.FileUtil: java.net.URL lambda$getPredefinedSortOrder$1(java.lang.String,java.lang.ClassLoader)>"
    "<sortpom.util.FileUtil$lambda_getPredefinedSortOrder_1__14: java.lang.Object apply(java.lang.Object)>"->"(192)<sortpom.util.FileUtil: java.net.URL lambda$getPredefinedSortOrder$1(java.lang.String,java.lang.ClassLoader)>";
    "<sortpom.util.FileUtil$lambda_getPredefinedSortOrder_2__15: java.lang.Object get()>"
    "<sortpom.util.FileUtil$lambda_getPredefinedSortOrder_2__15: java.lang.Object get()>"->"(194)<sortpom.util.FileUtil: java.lang.IllegalArgumentException lambda$getPredefinedSortOrder$2(java.lang.String)>";
    "(16)<sortpom.verify.ElementComparator: void <init>(org.jdom.Element,org.jdom.Element)>"
    "<java.lang.Object: void <init>()>"
    "(16)<sortpom.verify.ElementComparator: void <init>(org.jdom.Element,org.jdom.Element)>"->"<java.lang.Object: void <init>()>";
    "(21)<sortpom.verify.ElementComparator: void <init>(java.lang.Object,java.lang.Object)>"
    "(21)<sortpom.verify.ElementComparator: void <init>(java.lang.Object,java.lang.Object)>"->"<java.lang.Object: void <init>()>";
    "(37)<sortpom.verify.ElementComparator: boolean isEqualsIgnoringWhitespace()>"
    "(27)<sortpom.verify.ElementComparator: sortpom.util.XmlOrderedResult isElementOrdered()>"->"(37)<sortpom.verify.ElementComparator: boolean isEqualsIgnoringWhitespace()>";
    "(27)<sortpom.verify.ElementComparator: sortpom.util.XmlOrderedResult isElementOrdered()>"->"(41)<sortpom.verify.ElementComparator: sortpom.util.XmlOrderedResult isChildrenOrdered(java.lang.String,java.util.List,java.util.List)>";
    "<java.lang.String: boolean equals(java.lang.Object)>"
    "(37)<sortpom.verify.ElementComparator: boolean isEqualsIgnoringWhitespace()>"->"<java.lang.String: boolean equals(java.lang.Object)>";
    "(41)<sortpom.verify.ElementComparator: sortpom.util.XmlOrderedResult isChildrenOrdered(java.lang.String,java.util.List,java.util.List)>"->"(21)<sortpom.verify.ElementComparator: void <init>(java.lang.Object,java.lang.Object)>";
    "(41)<sortpom.verify.ElementComparator: sortpom.util.XmlOrderedResult isChildrenOrdered(java.lang.String,java.util.List,java.util.List)>"->"(27)<sortpom.verify.ElementComparator: sortpom.util.XmlOrderedResult isElementOrdered()>";
    "(44)<sortpom.util.XmlOrderedResult: boolean isOrdered()>"
    "(41)<sortpom.verify.ElementComparator: sortpom.util.XmlOrderedResult isChildrenOrdered(java.lang.String,java.util.List,java.util.List)>"->"(44)<sortpom.util.XmlOrderedResult: boolean isOrdered()>";
    "(23)<sortpom.wrapper.ElementWrapperCreator: void <init>(sortpom.wrapper.ElementSortOrderMap)>"
    "(23)<sortpom.wrapper.ElementWrapperCreator: void <init>(sortpom.wrapper.ElementSortOrderMap)>"->"<java.lang.Object: void <init>()>";
    "(35)<sortpom.wrapper.ElementWrapperCreator: sortpom.wrapper.content.Wrapper createWrapper(org.jdom.Element)>"
    "(35)<sortpom.wrapper.ElementWrapperCreator: sortpom.wrapper.content.Wrapper createWrapper(org.jdom.Element)>"->"(32)<sortpom.wrapper.ElementSortOrderMap: boolean containsElement(org.jdom.Element)>";
    "(35)<sortpom.wrapper.ElementWrapperCreator: sortpom.wrapper.content.Wrapper createWrapper(org.jdom.Element)>"->"(59)<sortpom.wrapper.ElementWrapperCreator: boolean isDependencyElement(org.jdom.Element)>";
    "(35)<sortpom.wrapper.ElementWrapperCreator: sortpom.wrapper.content.Wrapper createWrapper(org.jdom.Element)>"->"(66)<sortpom.wrapper.ElementWrapperCreator: boolean isPluginElement(org.jdom.Element)>";
    "(35)<sortpom.wrapper.ElementWrapperCreator: sortpom.wrapper.content.Wrapper createWrapper(org.jdom.Element)>"->"(76)<sortpom.wrapper.ElementWrapperCreator: boolean isModuleElement(org.jdom.Element)>";
    "(35)<sortpom.wrapper.ElementWrapperCreator: sortpom.wrapper.content.Wrapper createWrapper(org.jdom.Element)>"->"(83)<sortpom.wrapper.ElementWrapperCreator: boolean isPropertyElement(org.jdom.Element)>";
    "(35)<sortpom.wrapper.ElementWrapperCreator: sortpom.wrapper.content.Wrapper createWrapper(org.jdom.Element)>"->"(38)<sortpom.wrapper.ElementSortOrderMap: int getSortOrder(org.jdom.Element)>";
    "(35)<sortpom.wrapper.ElementWrapperCreator: sortpom.wrapper.content.Wrapper createWrapper(org.jdom.Element)>"->"(24)<sortpom.wrapper.content.DependencySortedWrapper: void <init>(org.jdom.Element,int)>";
    "(35)<sortpom.wrapper.ElementWrapperCreator: sortpom.wrapper.content.Wrapper createWrapper(org.jdom.Element)>"->"(29)<sortpom.wrapper.content.DependencySortedWrapper: void setSortOrder(sortpom.parameter.DependencySortOrder)>";
    "(35)<sortpom.wrapper.ElementWrapperCreator: sortpom.wrapper.content.Wrapper createWrapper(org.jdom.Element)>"->"(38)<sortpom.wrapper.ElementSortOrderMap: int getSortOrder(org.jdom.Element)>";
    "(35)<sortpom.wrapper.ElementWrapperCreator: sortpom.wrapper.content.Wrapper createWrapper(org.jdom.Element)>"->"(25)<sortpom.wrapper.content.PluginSortedWrapper: void <init>(org.jdom.Element,int)>";
    "(35)<sortpom.wrapper.ElementWrapperCreator: sortpom.wrapper.content.Wrapper createWrapper(org.jdom.Element)>"->"(30)<sortpom.wrapper.content.PluginSortedWrapper: void setSortOrder(sortpom.parameter.DependencySortOrder)>";
    "(35)<sortpom.wrapper.ElementWrapperCreator: sortpom.wrapper.content.Wrapper createWrapper(org.jdom.Element)>"->"(38)<sortpom.wrapper.ElementSortOrderMap: int getSortOrder(org.jdom.Element)>";
    "(21)<sortpom.wrapper.content.ModuleSortedWrapper: void <init>(org.jdom.Element,int)>"
    "(35)<sortpom.wrapper.ElementWrapperCreator: sortpom.wrapper.content.Wrapper createWrapper(org.jdom.Element)>"->"(21)<sortpom.wrapper.content.ModuleSortedWrapper: void <init>(org.jdom.Element,int)>";
    "(35)<sortpom.wrapper.ElementWrapperCreator: sortpom.wrapper.content.Wrapper createWrapper(org.jdom.Element)>"->"(38)<sortpom.wrapper.ElementSortOrderMap: int getSortOrder(org.jdom.Element)>";
    "(19)<sortpom.wrapper.content.SortedWrapper: void <init>(org.jdom.Element,int)>"
    "(35)<sortpom.wrapper.ElementWrapperCreator: sortpom.wrapper.content.Wrapper createWrapper(org.jdom.Element)>"->"(19)<sortpom.wrapper.content.SortedWrapper: void <init>(org.jdom.Element,int)>";
    "(14)<sortpom.wrapper.content.AlphabeticalSortedWrapper: void <init>(org.jdom.Element)>"
    "(35)<sortpom.wrapper.ElementWrapperCreator: sortpom.wrapper.content.Wrapper createWrapper(org.jdom.Element)>"->"(14)<sortpom.wrapper.content.AlphabeticalSortedWrapper: void <init>(org.jdom.Element)>";
    "(22)<sortpom.wrapper.content.UnsortedWrapper: void <init>(org.jdom.Content)>"
    "(35)<sortpom.wrapper.ElementWrapperCreator: sortpom.wrapper.content.Wrapper createWrapper(org.jdom.Element)>"->"(22)<sortpom.wrapper.content.UnsortedWrapper: void <init>(org.jdom.Content)>";
    "(67)<sortpom.parameter.DependencySortOrder: boolean isNoSorting()>"
    "(59)<sortpom.wrapper.ElementWrapperCreator: boolean isDependencyElement(org.jdom.Element)>"->"(67)<sortpom.parameter.DependencySortOrder: boolean isNoSorting()>";
    "(66)<sortpom.wrapper.ElementWrapperCreator: boolean isPluginElement(org.jdom.Element)>"->"(67)<sortpom.parameter.DependencySortOrder: boolean isNoSorting()>";
    "<java.lang.String: boolean startsWith(java.lang.String)>"
    "(83)<sortpom.wrapper.ElementWrapperCreator: boolean isPropertyElement(org.jdom.Element)>"->"<java.lang.String: boolean startsWith(java.lang.String)>";
    "(83)<sortpom.wrapper.ElementWrapperCreator: boolean isPropertyElement(org.jdom.Element)>"->"<java.lang.String: boolean startsWith(java.lang.String)>";
    "(17)<sortpom.wrapper.operation.SortAttributesOperation: void <init>()>"
    "(17)<sortpom.wrapper.operation.SortAttributesOperation: void <init>()>"->"<java.lang.Object: void <init>()>";
    "(23)<sortpom.wrapper.operation.SortAttributesOperation: void processElement(sortpom.wrapper.content.Wrapper)>"
    "(11)<sortpom.wrapper.content.AlphabeticalSortedWrapper: org.jdom.Content getContent()>"
    "(23)<sortpom.wrapper.operation.SortAttributesOperation: void processElement(sortpom.wrapper.content.Wrapper)>"->"(11)<sortpom.wrapper.content.AlphabeticalSortedWrapper: org.jdom.Content getContent()>";
    "(11)<sortpom.wrapper.content.SortedWrapper: org.jdom.Content getContent()>"
    "(23)<sortpom.wrapper.operation.SortAttributesOperation: void processElement(sortpom.wrapper.content.Wrapper)>"->"(11)<sortpom.wrapper.content.SortedWrapper: org.jdom.Content getContent()>";
    "(11)<sortpom.wrapper.content.SingleNewlineInTextWrapper: org.jdom.Content getContent()>"
    "(23)<sortpom.wrapper.operation.SortAttributesOperation: void processElement(sortpom.wrapper.content.Wrapper)>"->"(11)<sortpom.wrapper.content.SingleNewlineInTextWrapper: org.jdom.Content getContent()>";
    "(29)<sortpom.wrapper.content.UnsortedWrapper: org.jdom.Content getContent()>"
    "(23)<sortpom.wrapper.operation.SortAttributesOperation: void processElement(sortpom.wrapper.content.Wrapper)>"->"(29)<sortpom.wrapper.content.UnsortedWrapper: org.jdom.Content getContent()>";
    "(23)<sortpom.wrapper.operation.SortAttributesOperation: void processElement(sortpom.wrapper.content.Wrapper)>"->"(28)<sortpom.wrapper.operation.SortAttributesOperation: java.util.List getSortedAttributes(org.jdom.Element)>";
    "(28)<sortpom.wrapper.operation.SortAttributesOperation: java.util.List getSortedAttributes(org.jdom.Element)>"->"(38)<sortpom.wrapper.operation.SortAttributesOperation: java.util.List getAttributeList(org.jdom.Element)>";
    "<java.util.ArrayList: void forEach(java.util.function.Consumer)>"
    "(28)<sortpom.wrapper.operation.SortAttributesOperation: java.util.List getSortedAttributes(org.jdom.Element)>"->"<java.util.ArrayList: void forEach(java.util.function.Consumer)>";
    "<java.util.ArrayList: void sort(java.util.Comparator)>"
    "(28)<sortpom.wrapper.operation.SortAttributesOperation: java.util.List getSortedAttributes(org.jdom.Element)>"->"<java.util.ArrayList: void sort(java.util.Comparator)>";
    "<java.util.ArrayList: void <init>(java.util.Collection)>"
    "(38)<sortpom.wrapper.operation.SortAttributesOperation: java.util.List getAttributeList(org.jdom.Element)>"->"<java.util.ArrayList: void <init>(java.util.Collection)>";
    "(18)<sortpom.wrapper.operation.GetContentStructureOperation: void <init>()>"
    "(18)<sortpom.wrapper.operation.GetContentStructureOperation: void <init>()>"->"<java.lang.Object: void <init>()>";
    "(22)<sortpom.wrapper.operation.GetContentStructureOperation: void <init>(org.jdom.Element)>"
    "(22)<sortpom.wrapper.operation.GetContentStructureOperation: void <init>(org.jdom.Element)>"->"<java.lang.Object: void <init>()>";
    "(29)<sortpom.wrapper.operation.GetContentStructureOperation: void processOtherContent(sortpom.wrapper.content.Wrapper)>"
    "(29)<sortpom.wrapper.operation.GetContentStructureOperation: void processOtherContent(sortpom.wrapper.content.Wrapper)>"->"(11)<sortpom.wrapper.content.AlphabeticalSortedWrapper: org.jdom.Content getContent()>";
    "(29)<sortpom.wrapper.operation.GetContentStructureOperation: void processOtherContent(sortpom.wrapper.content.Wrapper)>"->"(11)<sortpom.wrapper.content.SortedWrapper: org.jdom.Content getContent()>";
    "(29)<sortpom.wrapper.operation.GetContentStructureOperation: void processOtherContent(sortpom.wrapper.content.Wrapper)>"->"(11)<sortpom.wrapper.content.SingleNewlineInTextWrapper: org.jdom.Content getContent()>";
    "(29)<sortpom.wrapper.operation.GetContentStructureOperation: void processOtherContent(sortpom.wrapper.content.Wrapper)>"->"(29)<sortpom.wrapper.content.UnsortedWrapper: org.jdom.Content getContent()>";
    "(37)<sortpom.wrapper.operation.GetContentStructureOperation: void processElement(sortpom.wrapper.content.Wrapper)>"
    "(37)<sortpom.wrapper.operation.GetContentStructureOperation: void processElement(sortpom.wrapper.content.Wrapper)>"->"(11)<sortpom.wrapper.content.AlphabeticalSortedWrapper: org.jdom.Content getContent()>";
    "(37)<sortpom.wrapper.operation.GetContentStructureOperation: void processElement(sortpom.wrapper.content.Wrapper)>"->"(11)<sortpom.wrapper.content.SortedWrapper: org.jdom.Content getContent()>";
    "(37)<sortpom.wrapper.operation.GetContentStructureOperation: void processElement(sortpom.wrapper.content.Wrapper)>"->"(11)<sortpom.wrapper.content.SingleNewlineInTextWrapper: org.jdom.Content getContent()>";
    "(37)<sortpom.wrapper.operation.GetContentStructureOperation: void processElement(sortpom.wrapper.content.Wrapper)>"->"(29)<sortpom.wrapper.content.UnsortedWrapper: org.jdom.Content getContent()>";
    "(47)<sortpom.wrapper.operation.GetContentStructureOperation: sortpom.wrapper.operation.HierarchyWrapperOperation createSubOperation()>"
    "(47)<sortpom.wrapper.operation.GetContentStructureOperation: sortpom.wrapper.operation.HierarchyWrapperOperation createSubOperation()>"->"(22)<sortpom.wrapper.operation.GetContentStructureOperation: void <init>(org.jdom.Element)>";
    "(23)<sortpom.wrapper.operation.ToStringOperation: void <init>()>"
    "(23)<sortpom.wrapper.operation.ToStringOperation: void <init>()>"->"<java.lang.Object: void <init>()>";
    "<java.lang.StringBuilder: void <init>()>"
    "(23)<sortpom.wrapper.operation.ToStringOperation: void <init>()>"->"<java.lang.StringBuilder: void <init>()>";
    "(28)<sortpom.wrapper.operation.ToStringOperation: void <init>(java.lang.StringBuilder,java.lang.String)>"
    "(28)<sortpom.wrapper.operation.ToStringOperation: void <init>(java.lang.StringBuilder,java.lang.String)>"->"<java.lang.Object: void <init>()>";
    "(28)<sortpom.wrapper.operation.ToStringOperation: void <init>(java.lang.StringBuilder,java.lang.String)>"->"<java.lang.StringBuilder: void <init>()>";
    "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"
    "(28)<sortpom.wrapper.operation.ToStringOperation: void <init>(java.lang.StringBuilder,java.lang.String)>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(28)<sortpom.wrapper.operation.ToStringOperation: void <init>(java.lang.StringBuilder,java.lang.String)>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "<java.lang.StringBuilder: java.lang.String toString()>"
    "(28)<sortpom.wrapper.operation.ToStringOperation: void <init>(java.lang.StringBuilder,java.lang.String)>"->"<java.lang.StringBuilder: java.lang.String toString()>";
    "<java.lang.String: java.lang.String substring(int)>"
    "(36)<sortpom.wrapper.operation.ToStringOperation: void startOfProcess()>"->"<java.lang.String: java.lang.String substring(int)>";
    "(36)<sortpom.wrapper.operation.ToStringOperation: void startOfProcess()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(36)<sortpom.wrapper.operation.ToStringOperation: void startOfProcess()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(44)<sortpom.wrapper.operation.ToStringOperation: void processOtherContent(sortpom.wrapper.content.Wrapper)>"
    "(44)<sortpom.wrapper.operation.ToStringOperation: void processOtherContent(sortpom.wrapper.content.Wrapper)>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(44)<sortpom.wrapper.operation.ToStringOperation: void processOtherContent(sortpom.wrapper.content.Wrapper)>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(44)<sortpom.wrapper.operation.ToStringOperation: void processOtherContent(sortpom.wrapper.content.Wrapper)>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(53)<sortpom.wrapper.content.Wrapper: java.lang.String toString(java.lang.String)>"
    "(44)<sortpom.wrapper.operation.ToStringOperation: void processOtherContent(sortpom.wrapper.content.Wrapper)>"->"(53)<sortpom.wrapper.content.Wrapper: java.lang.String toString(java.lang.String)>";
    "(44)<sortpom.wrapper.operation.ToStringOperation: void processOtherContent(sortpom.wrapper.content.Wrapper)>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(44)<sortpom.wrapper.operation.ToStringOperation: void processOtherContent(sortpom.wrapper.content.Wrapper)>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(54)<sortpom.wrapper.operation.ToStringOperation: void processElement(sortpom.wrapper.content.Wrapper)>"
    "(54)<sortpom.wrapper.operation.ToStringOperation: void processElement(sortpom.wrapper.content.Wrapper)>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(54)<sortpom.wrapper.operation.ToStringOperation: void processElement(sortpom.wrapper.content.Wrapper)>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>"
    "(54)<sortpom.wrapper.operation.ToStringOperation: void processElement(sortpom.wrapper.content.Wrapper)>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>";
    "(54)<sortpom.wrapper.operation.ToStringOperation: void processElement(sortpom.wrapper.content.Wrapper)>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(60)<sortpom.wrapper.operation.ToStringOperation: void manipulateChildElements(java.util.List)>"
    "<java.util.ArrayList: boolean isEmpty()>"
    "(60)<sortpom.wrapper.operation.ToStringOperation: void manipulateChildElements(java.util.List)>"->"<java.util.ArrayList: boolean isEmpty()>";
    "(60)<sortpom.wrapper.operation.ToStringOperation: void manipulateChildElements(java.util.List)>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(60)<sortpom.wrapper.operation.ToStringOperation: void manipulateChildElements(java.util.List)>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(60)<sortpom.wrapper.operation.ToStringOperation: void manipulateChildElements(java.util.List)>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(68)<sortpom.wrapper.operation.ToStringOperation: sortpom.wrapper.operation.HierarchyWrapperOperation createSubOperation()>"->"(28)<sortpom.wrapper.operation.ToStringOperation: void <init>(java.lang.StringBuilder,java.lang.String)>";
    "(74)<sortpom.wrapper.operation.ToStringOperation: void endOfProcess()>"
    "(74)<sortpom.wrapper.operation.ToStringOperation: void endOfProcess()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>"
    "(74)<sortpom.wrapper.operation.ToStringOperation: void endOfProcess()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(char)>";
    "(74)<sortpom.wrapper.operation.ToStringOperation: void endOfProcess()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(79)<sortpom.wrapper.operation.ToStringOperation: java.lang.String toString()>"
    "(79)<sortpom.wrapper.operation.ToStringOperation: java.lang.String toString()>"->"<java.lang.StringBuilder: java.lang.String toString()>";
    "<java.lang.String: int length()>"
    "(18)<sortpom.wrapper.operation.ToStringOperation: void <clinit>()>"->"<java.lang.String: int length()>";
    "(21)<sortpom.wrapper.operation.HierarchyWrapper: void <init>(sortpom.wrapper.content.Wrapper)>"->"<java.lang.Object: void <init>()>";
    "(27)<sortpom.wrapper.operation.HierarchyWrapper: void addContent(sortpom.wrapper.content.Wrapper)>"
    "(21)<sortpom.wrapper.operation.HierarchyWrapper: void <init>(sortpom.wrapper.content.Wrapper)>"->"(27)<sortpom.wrapper.operation.HierarchyWrapper: void addContent(sortpom.wrapper.content.Wrapper)>";
    "<java.util.ArrayList: void <init>()>"
    "(21)<sortpom.wrapper.operation.HierarchyWrapper: void <init>(sortpom.wrapper.content.Wrapper)>"->"<java.util.ArrayList: void <init>()>";
    "(21)<sortpom.wrapper.operation.HierarchyWrapper: void <init>(sortpom.wrapper.content.Wrapper)>"->"<java.util.ArrayList: void <init>()>";
    "(34)<sortpom.wrapper.content.Wrapper: boolean isContentElement()>"
    "(27)<sortpom.wrapper.operation.HierarchyWrapper: void addContent(sortpom.wrapper.content.Wrapper)>"->"(34)<sortpom.wrapper.content.Wrapper: boolean isContentElement()>";
    "(30)<sortpom.wrapper.content.SingleNewlineInTextWrapper: boolean isContentElement()>"
    "(27)<sortpom.wrapper.operation.HierarchyWrapper: void addContent(sortpom.wrapper.content.Wrapper)>"->"(30)<sortpom.wrapper.content.SingleNewlineInTextWrapper: boolean isContentElement()>";
    "(41)<sortpom.wrapper.content.UnsortedWrapper: boolean isContentElement()>"
    "(27)<sortpom.wrapper.operation.HierarchyWrapper: void addContent(sortpom.wrapper.content.Wrapper)>"->"(41)<sortpom.wrapper.content.UnsortedWrapper: boolean isContentElement()>";
    "<java.util.ArrayList: boolean add(java.lang.Object)>"
    "(27)<sortpom.wrapper.operation.HierarchyWrapper: void addContent(sortpom.wrapper.content.Wrapper)>"->"<java.util.ArrayList: boolean add(java.lang.Object)>";
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"(58)<sortpom.wrapper.operation.HierarchyWrapper: java.util.List castToContentList(sortpom.wrapper.content.Wrapper)>";
    "<java.util.ArrayList: java.util.Iterator iterator()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.ArrayList: java.util.Iterator iterator()>";
    "<java.lang.ProcessEnvironment$StringValues$1: boolean hasNext()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.lang.ProcessEnvironment$StringValues$1: boolean hasNext()>";
    "<java.lang.ProcessEnvironment$StringValues$1: java.lang.String next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.lang.ProcessEnvironment$StringValues$1: java.lang.String next()>";
    "<java.util.concurrent.LinkedBlockingQueue$Itr: boolean hasNext()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.concurrent.LinkedBlockingQueue$Itr: boolean hasNext()>";
    "<java.util.concurrent.LinkedBlockingQueue$Itr: java.lang.Object next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.concurrent.LinkedBlockingQueue$Itr: java.lang.Object next()>";
    "<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: boolean hasNext()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: boolean hasNext()>";
    "<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.util.Map$Entry next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.util.Map$Entry next()>";
    "<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr: boolean hasNext()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr: boolean hasNext()>";
    "<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr: java.lang.Runnable next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr: java.lang.Runnable next()>";
    "<java.util.Arrays$ArrayItr: boolean hasNext()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.Arrays$ArrayItr: boolean hasNext()>";
    "<java.util.Arrays$ArrayItr: java.lang.Object next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.Arrays$ArrayItr: java.lang.Object next()>";
    "<java.util.TreeMap$PrivateEntryIterator: boolean hasNext()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.TreeMap$PrivateEntryIterator: boolean hasNext()>";
    "<java.util.TreeMap$KeyIterator: java.lang.Object next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.TreeMap$KeyIterator: java.lang.Object next()>";
    "<java.util.WeakHashMap$HashIterator: boolean hasNext()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.WeakHashMap$HashIterator: boolean hasNext()>";
    "<java.util.WeakHashMap$KeyIterator: java.lang.Object next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.WeakHashMap$KeyIterator: java.lang.Object next()>";
    "<java.util.Collections$CheckedMap$CheckedEntrySet$1: boolean hasNext()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.Collections$CheckedMap$CheckedEntrySet$1: boolean hasNext()>";
    "<java.util.Collections$CheckedMap$CheckedEntrySet$1: java.util.Map$Entry next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.Collections$CheckedMap$CheckedEntrySet$1: java.util.Map$Entry next()>";
    "<java.util.TreeMap$NavigableSubMap$SubMapIterator: boolean hasNext()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.TreeMap$NavigableSubMap$SubMapIterator: boolean hasNext()>";
    "<java.util.TreeMap$NavigableSubMap$SubMapKeyIterator: java.lang.Object next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.TreeMap$NavigableSubMap$SubMapKeyIterator: java.lang.Object next()>";
    "<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter: boolean hasNext()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter: boolean hasNext()>";
    "<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator: java.lang.Object next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator: java.lang.Object next()>";
    "<java.util.Collections$CheckedCollection$1: boolean hasNext()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.Collections$CheckedCollection$1: boolean hasNext()>";
    "<java.util.Collections$CheckedCollection$1: java.lang.Object next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.Collections$CheckedCollection$1: java.lang.Object next()>";
    "<java.util.LinkedHashMap$LinkedHashIterator: boolean hasNext()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.LinkedHashMap$LinkedHashIterator: boolean hasNext()>";
    "<java.util.LinkedHashMap$LinkedValueIterator: java.lang.Object next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.LinkedHashMap$LinkedValueIterator: java.lang.Object next()>";
    "<java.util.JumboEnumSet$EnumSetIterator: boolean hasNext()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.JumboEnumSet$EnumSetIterator: boolean hasNext()>";
    "<java.util.JumboEnumSet$EnumSetIterator: java.lang.Enum next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.JumboEnumSet$EnumSetIterator: java.lang.Enum next()>";
    "<java.util.ImmutableCollections$Set12$1: boolean hasNext()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.ImmutableCollections$Set12$1: boolean hasNext()>";
    "<java.util.ImmutableCollections$Set12$1: java.lang.Object next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.ImmutableCollections$Set12$1: java.lang.Object next()>";
    "<java.util.Collections$1: boolean hasNext()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.Collections$1: boolean hasNext()>";
    "<java.util.Collections$1: java.lang.Object next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.Collections$1: java.lang.Object next()>";
    "<sun.util.resources.ParallelListResourceBundle$KeySet$1: boolean hasNext()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<sun.util.resources.ParallelListResourceBundle$KeySet$1: boolean hasNext()>";
    "<sun.util.resources.ParallelListResourceBundle$KeySet$1: java.lang.String next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<sun.util.resources.ParallelListResourceBundle$KeySet$1: java.lang.String next()>";
    "<java.util.AbstractMap$2$1: boolean hasNext()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.AbstractMap$2$1: boolean hasNext()>";
    "<java.util.AbstractMap$2$1: java.lang.Object next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.AbstractMap$2$1: java.lang.Object next()>";
    "<java.util.ArrayDeque$DeqIterator: boolean hasNext()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.ArrayDeque$DeqIterator: boolean hasNext()>";
    "<java.util.ArrayDeque$DeqIterator: java.lang.Object next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.ArrayDeque$DeqIterator: java.lang.Object next()>";
    "<java.util.Vector$Itr: boolean hasNext()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.Vector$Itr: boolean hasNext()>";
    "<java.util.Vector$Itr: java.lang.Object next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.Vector$Itr: java.lang.Object next()>";
    "<java.util.concurrent.ConcurrentHashMap$BaseIterator: boolean hasNext()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.concurrent.ConcurrentHashMap$BaseIterator: boolean hasNext()>";
    "<java.util.concurrent.ConcurrentHashMap$ValueIterator: java.lang.Object next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.concurrent.ConcurrentHashMap$ValueIterator: java.lang.Object next()>";
    "<java.util.LinkedHashMap$LinkedEntryIterator: java.util.Map$Entry next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.LinkedHashMap$LinkedEntryIterator: java.util.Map$Entry next()>";
    "<sun.security.jca.ProviderList$ServiceList$1: boolean hasNext()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<sun.security.jca.ProviderList$ServiceList$1: boolean hasNext()>";
    "<sun.security.jca.ProviderList$ServiceList$1: java.security.Provider$Service next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<sun.security.jca.ProviderList$ServiceList$1: java.security.Provider$Service next()>";
    "<java.lang.ProcessEnvironment$StringKeySet$1: boolean hasNext()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.lang.ProcessEnvironment$StringKeySet$1: boolean hasNext()>";
    "<java.lang.ProcessEnvironment$StringKeySet$1: java.lang.String next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.lang.ProcessEnvironment$StringKeySet$1: java.lang.String next()>";
    "<java.util.TreeMap$EntryIterator: java.util.Map$Entry next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.TreeMap$EntryIterator: java.util.Map$Entry next()>";
    "<java.util.EnumMap$EnumMapIterator: boolean hasNext()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.EnumMap$EnumMapIterator: boolean hasNext()>";
    "<java.util.EnumMap$KeyIterator: java.lang.Enum next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.EnumMap$KeyIterator: java.lang.Enum next()>";
    "<java.util.concurrent.ConcurrentHashMap$EntryIterator: java.util.Map$Entry next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.concurrent.ConcurrentHashMap$EntryIterator: java.util.Map$Entry next()>";
    "<javax.security.auth.Subject$SecureSet$1: boolean hasNext()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<javax.security.auth.Subject$SecureSet$1: boolean hasNext()>";
    "<javax.security.auth.Subject$SecureSet$1: java.lang.Object next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<javax.security.auth.Subject$SecureSet$1: java.lang.Object next()>";
    "<java.util.Collections$EmptyIterator: boolean hasNext()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.Collections$EmptyIterator: boolean hasNext()>";
    "<java.util.Collections$EmptyIterator: java.lang.Object next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.Collections$EmptyIterator: java.lang.Object next()>";
    "<java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator: java.lang.Object next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator: java.lang.Object next()>";
    "<java.util.concurrent.CopyOnWriteArrayList$COWIterator: boolean hasNext()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.concurrent.CopyOnWriteArrayList$COWIterator: boolean hasNext()>";
    "<java.util.concurrent.CopyOnWriteArrayList$COWIterator: java.lang.Object next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.concurrent.CopyOnWriteArrayList$COWIterator: java.lang.Object next()>";
    "<sun.util.PreHashedMap$1$1: boolean hasNext()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<sun.util.PreHashedMap$1$1: boolean hasNext()>";
    "<sun.util.PreHashedMap$1$1: java.lang.String next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<sun.util.PreHashedMap$1$1: java.lang.String next()>";
    "<java.lang.invoke.AbstractConstantGroup$AsIterator: boolean hasNext()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.lang.invoke.AbstractConstantGroup$AsIterator: boolean hasNext()>";
    "<java.lang.invoke.AbstractConstantGroup$AsIterator: java.lang.Object next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.lang.invoke.AbstractConstantGroup$AsIterator: java.lang.Object next()>";
    "<java.util.TreeMap$NavigableSubMap$SubMapEntryIterator: java.util.Map$Entry next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.TreeMap$NavigableSubMap$SubMapEntryIterator: java.util.Map$Entry next()>";
    "<java.util.concurrent.ConcurrentSkipListMap$Iter: boolean hasNext()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.concurrent.ConcurrentSkipListMap$Iter: boolean hasNext()>";
    "<java.util.concurrent.ConcurrentSkipListMap$EntryIterator: java.util.Map$Entry next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.concurrent.ConcurrentSkipListMap$EntryIterator: java.util.Map$Entry next()>";
    "<java.util.HashMap$HashIterator: boolean hasNext()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.HashMap$HashIterator: boolean hasNext()>";
    "<java.util.HashMap$KeyIterator: java.lang.Object next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.HashMap$KeyIterator: java.lang.Object next()>";
    "<java.util.ImmutableCollections$SetN$SetNIterator: boolean hasNext()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.ImmutableCollections$SetN$SetNIterator: boolean hasNext()>";
    "<java.util.ImmutableCollections$SetN$SetNIterator: java.lang.Object next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.ImmutableCollections$SetN$SetNIterator: java.lang.Object next()>";
    "<java.util.IdentityHashMap$IdentityHashMapIterator: boolean hasNext()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.IdentityHashMap$IdentityHashMapIterator: boolean hasNext()>";
    "<java.util.IdentityHashMap$EntryIterator: java.util.Map$Entry next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.IdentityHashMap$EntryIterator: java.util.Map$Entry next()>";
    "<java.util.WeakHashMap$EntryIterator: java.util.Map$Entry next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.WeakHashMap$EntryIterator: java.util.Map$Entry next()>";
    "<java.util.AbstractMap$1$1: boolean hasNext()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.AbstractMap$1$1: boolean hasNext()>";
    "<java.util.AbstractMap$1$1: java.lang.Object next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.AbstractMap$1$1: java.lang.Object next()>";
    "<java.util.concurrent.ConcurrentSkipListMap$ValueIterator: java.lang.Object next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.concurrent.ConcurrentSkipListMap$ValueIterator: java.lang.Object next()>";
    "<java.util.concurrent.LinkedBlockingDeque$AbstractItr: boolean hasNext()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.concurrent.LinkedBlockingDeque$AbstractItr: boolean hasNext()>";
    "<java.util.concurrent.LinkedBlockingDeque$AbstractItr: java.lang.Object next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.concurrent.LinkedBlockingDeque$AbstractItr: java.lang.Object next()>";
    "<java.util.TreeMap$ValueIterator: java.lang.Object next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.TreeMap$ValueIterator: java.lang.Object next()>";
    "<java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: boolean hasNext()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: boolean hasNext()>";
    "<java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: java.lang.Object next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: java.lang.Object next()>";
    "<java.util.ArrayList$Itr: boolean hasNext()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.ArrayList$Itr: boolean hasNext()>";
    "<java.util.ArrayList$Itr: java.lang.Object next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.ArrayList$Itr: java.lang.Object next()>";
    "<java.util.IdentityHashMap$KeyIterator: java.lang.Object next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.IdentityHashMap$KeyIterator: java.lang.Object next()>";
    "<java.util.ImmutableCollections$ListItr: boolean hasNext()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.ImmutableCollections$ListItr: boolean hasNext()>";
    "<java.util.ImmutableCollections$ListItr: java.lang.Object next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.ImmutableCollections$ListItr: java.lang.Object next()>";
    "<java.util.WeakHashMap$ValueIterator: java.lang.Object next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.WeakHashMap$ValueIterator: java.lang.Object next()>";
    "<java.util.concurrent.ArrayBlockingQueue$Itr: boolean hasNext()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.concurrent.ArrayBlockingQueue$Itr: boolean hasNext()>";
    "<java.util.concurrent.ArrayBlockingQueue$Itr: java.lang.Object next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.concurrent.ArrayBlockingQueue$Itr: java.lang.Object next()>";
    "<java.util.EnumMap$ValueIterator: java.lang.Object next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.EnumMap$ValueIterator: java.lang.Object next()>";
    "<java.util.IdentityHashMap$ValueIterator: java.lang.Object next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.IdentityHashMap$ValueIterator: java.lang.Object next()>";
    "<java.lang.ProcessEnvironment$StringEntrySet$1: boolean hasNext()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.lang.ProcessEnvironment$StringEntrySet$1: boolean hasNext()>";
    "<java.lang.ProcessEnvironment$StringEntrySet$1: java.util.Map$Entry next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.lang.ProcessEnvironment$StringEntrySet$1: java.util.Map$Entry next()>";
    "<java.util.Hashtable$Enumerator: boolean hasNext()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.Hashtable$Enumerator: boolean hasNext()>";
    "<java.util.Hashtable$Enumerator: java.lang.Object next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.Hashtable$Enumerator: java.lang.Object next()>";
    "<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapKeyIterator: java.lang.Object next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapKeyIterator: java.lang.Object next()>";
    "<java.util.LinkedHashMap$LinkedKeyIterator: java.lang.Object next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.LinkedHashMap$LinkedKeyIterator: java.lang.Object next()>";
    "<java.util.HashMap$ValueIterator: java.lang.Object next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.HashMap$ValueIterator: java.lang.Object next()>";
    "<java.util.concurrent.ConcurrentHashMap$KeyIterator: java.lang.Object next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.concurrent.ConcurrentHashMap$KeyIterator: java.lang.Object next()>";
    "<java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>";
    "<java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>";
    "<java.util.ImmutableCollections$MapN$MapNIterator: boolean hasNext()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.ImmutableCollections$MapN$MapNIterator: boolean hasNext()>";
    "<java.util.ImmutableCollections$MapN$MapNIterator: java.util.Map$Entry next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.ImmutableCollections$MapN$MapNIterator: java.util.Map$Entry next()>";
    "<java.util.concurrent.ConcurrentLinkedQueue$Itr: boolean hasNext()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.concurrent.ConcurrentLinkedQueue$Itr: boolean hasNext()>";
    "<java.util.concurrent.ConcurrentLinkedQueue$Itr: java.lang.Object next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.concurrent.ConcurrentLinkedQueue$Itr: java.lang.Object next()>";
    "<java.util.HashMap$EntryIterator: java.util.Map$Entry next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.HashMap$EntryIterator: java.util.Map$Entry next()>";
    "<java.util.concurrent.ConcurrentSkipListMap$KeyIterator: java.lang.Object next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.concurrent.ConcurrentSkipListMap$KeyIterator: java.lang.Object next()>";
    "<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator: java.util.Map$Entry next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator: java.util.Map$Entry next()>";
    "<java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator: java.util.Map$Entry next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator: java.util.Map$Entry next()>";
    "<java.util.EnumMap$EntryIterator: java.util.Map$Entry next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.EnumMap$EntryIterator: java.util.Map$Entry next()>";
    "<java.util.RegularEnumSet$EnumSetIterator: boolean hasNext()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.RegularEnumSet$EnumSetIterator: boolean hasNext()>";
    "<java.util.RegularEnumSet$EnumSetIterator: java.lang.Enum next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.RegularEnumSet$EnumSetIterator: java.lang.Enum next()>";
    "<sun.util.PreHashedMap$2$1: boolean hasNext()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<sun.util.PreHashedMap$2$1: boolean hasNext()>";
    "<sun.util.PreHashedMap$2$1: java.util.Map$Entry next()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<sun.util.PreHashedMap$2$1: java.util.Map$Entry next()>";
    "(97)<sortpom.wrapper.WrapperFactoryImpl: sortpom.wrapper.content.Wrapper create(org.jdom.Content)>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"(97)<sortpom.wrapper.WrapperFactoryImpl: sortpom.wrapper.content.Wrapper create(org.jdom.Content)>";
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"(21)<sortpom.wrapper.operation.HierarchyWrapper: void <init>(sortpom.wrapper.content.Wrapper)>";
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"<java.util.ArrayList: boolean add(java.lang.Object)>";
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"(27)<sortpom.wrapper.operation.HierarchyWrapper: void addContent(sortpom.wrapper.content.Wrapper)>";
    "(62)<sortpom.wrapper.operation.HierarchyWrapper: boolean containsElement()>"
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"(62)<sortpom.wrapper.operation.HierarchyWrapper: boolean containsElement()>";
    "(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>";
    "(58)<sortpom.wrapper.operation.HierarchyWrapper: java.util.List castToContentList(sortpom.wrapper.content.Wrapper)>"->"(11)<sortpom.wrapper.content.AlphabeticalSortedWrapper: org.jdom.Content getContent()>";
    "(58)<sortpom.wrapper.operation.HierarchyWrapper: java.util.List castToContentList(sortpom.wrapper.content.Wrapper)>"->"(11)<sortpom.wrapper.content.SortedWrapper: org.jdom.Content getContent()>";
    "(58)<sortpom.wrapper.operation.HierarchyWrapper: java.util.List castToContentList(sortpom.wrapper.content.Wrapper)>"->"(11)<sortpom.wrapper.content.SingleNewlineInTextWrapper: org.jdom.Content getContent()>";
    "(58)<sortpom.wrapper.operation.HierarchyWrapper: java.util.List castToContentList(sortpom.wrapper.content.Wrapper)>"->"(29)<sortpom.wrapper.content.UnsortedWrapper: org.jdom.Content getContent()>";
    "(58)<sortpom.wrapper.operation.HierarchyWrapper: java.util.List castToContentList(sortpom.wrapper.content.Wrapper)>"->"<java.util.ArrayList: void <init>(java.util.Collection)>";
    "(18)<sortpom.wrapper.operation.HierarchyWrapperOperation: void startOfProcess()>"
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"(18)<sortpom.wrapper.operation.HierarchyWrapperOperation: void startOfProcess()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"(37)<sortpom.wrapper.operation.GetContentStructureOperation: void processElement(sortpom.wrapper.content.Wrapper)>";
    "(33)<sortpom.wrapper.operation.HierarchyWrapperOperation: void manipulateChildElements(java.util.List)>"
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"(33)<sortpom.wrapper.operation.HierarchyWrapperOperation: void manipulateChildElements(java.util.List)>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"(47)<sortpom.wrapper.operation.GetContentStructureOperation: sortpom.wrapper.operation.HierarchyWrapperOperation createSubOperation()>";
    "(45)<sortpom.wrapper.operation.HierarchyWrapperOperation: void endOfProcess()>"
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"(45)<sortpom.wrapper.operation.HierarchyWrapperOperation: void endOfProcess()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"(36)<sortpom.wrapper.operation.ToStringOperation: void startOfProcess()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"(54)<sortpom.wrapper.operation.ToStringOperation: void processElement(sortpom.wrapper.content.Wrapper)>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"(60)<sortpom.wrapper.operation.ToStringOperation: void manipulateChildElements(java.util.List)>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"(68)<sortpom.wrapper.operation.ToStringOperation: sortpom.wrapper.operation.HierarchyWrapperOperation createSubOperation()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"(74)<sortpom.wrapper.operation.ToStringOperation: void endOfProcess()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"(23)<sortpom.wrapper.operation.SortAttributesOperation: void processElement(sortpom.wrapper.content.Wrapper)>";
    "(40)<sortpom.wrapper.operation.HierarchyWrapperOperation: sortpom.wrapper.operation.HierarchyWrapperOperation createSubOperation()>"
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"(40)<sortpom.wrapper.operation.HierarchyWrapperOperation: sortpom.wrapper.operation.HierarchyWrapperOperation createSubOperation()>";
    "(24)<sortpom.wrapper.operation.DetachOperation: void processElement(sortpom.wrapper.content.Wrapper)>"
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"(24)<sortpom.wrapper.operation.DetachOperation: void processElement(sortpom.wrapper.content.Wrapper)>";
    "(29)<sortpom.wrapper.operation.HierarchyWrapperOperation: void processElement(sortpom.wrapper.content.Wrapper)>"
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"(29)<sortpom.wrapper.operation.HierarchyWrapperOperation: void processElement(sortpom.wrapper.content.Wrapper)>";
    "(19)<sortpom.wrapper.operation.SortChildrenOperation: void manipulateChildElements(java.util.List)>"
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"(19)<sortpom.wrapper.operation.SortChildrenOperation: void manipulateChildElements(java.util.List)>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.ArrayList: void forEach(java.util.function.Consumer)>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"(34)<sortpom.wrapper.content.Wrapper: boolean isContentElement()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"(30)<sortpom.wrapper.content.SingleNewlineInTextWrapper: boolean isContentElement()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"(41)<sortpom.wrapper.content.UnsortedWrapper: boolean isContentElement()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.ArrayList: java.util.Iterator iterator()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.lang.ProcessEnvironment$StringValues$1: boolean hasNext()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.lang.ProcessEnvironment$StringValues$1: java.lang.String next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.concurrent.LinkedBlockingQueue$Itr: boolean hasNext()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.concurrent.LinkedBlockingQueue$Itr: java.lang.Object next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: boolean hasNext()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.util.Map$Entry next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr: boolean hasNext()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr: java.lang.Runnable next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.Arrays$ArrayItr: boolean hasNext()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.Arrays$ArrayItr: java.lang.Object next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.TreeMap$PrivateEntryIterator: boolean hasNext()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.TreeMap$KeyIterator: java.lang.Object next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.WeakHashMap$HashIterator: boolean hasNext()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.WeakHashMap$KeyIterator: java.lang.Object next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.Collections$CheckedMap$CheckedEntrySet$1: boolean hasNext()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.Collections$CheckedMap$CheckedEntrySet$1: java.util.Map$Entry next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.TreeMap$NavigableSubMap$SubMapIterator: boolean hasNext()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.TreeMap$NavigableSubMap$SubMapKeyIterator: java.lang.Object next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter: boolean hasNext()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator: java.lang.Object next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.Collections$CheckedCollection$1: boolean hasNext()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.Collections$CheckedCollection$1: java.lang.Object next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.LinkedHashMap$LinkedHashIterator: boolean hasNext()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.LinkedHashMap$LinkedValueIterator: java.lang.Object next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.JumboEnumSet$EnumSetIterator: boolean hasNext()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.JumboEnumSet$EnumSetIterator: java.lang.Enum next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.ImmutableCollections$Set12$1: boolean hasNext()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.ImmutableCollections$Set12$1: java.lang.Object next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.Collections$1: boolean hasNext()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.Collections$1: java.lang.Object next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<sun.util.resources.ParallelListResourceBundle$KeySet$1: boolean hasNext()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<sun.util.resources.ParallelListResourceBundle$KeySet$1: java.lang.String next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.AbstractMap$2$1: boolean hasNext()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.AbstractMap$2$1: java.lang.Object next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.ArrayDeque$DeqIterator: boolean hasNext()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.ArrayDeque$DeqIterator: java.lang.Object next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.Vector$Itr: boolean hasNext()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.Vector$Itr: java.lang.Object next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.concurrent.ConcurrentHashMap$BaseIterator: boolean hasNext()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.concurrent.ConcurrentHashMap$ValueIterator: java.lang.Object next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.LinkedHashMap$LinkedEntryIterator: java.util.Map$Entry next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<sun.security.jca.ProviderList$ServiceList$1: boolean hasNext()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<sun.security.jca.ProviderList$ServiceList$1: java.security.Provider$Service next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.lang.ProcessEnvironment$StringKeySet$1: boolean hasNext()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.lang.ProcessEnvironment$StringKeySet$1: java.lang.String next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.TreeMap$EntryIterator: java.util.Map$Entry next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.EnumMap$EnumMapIterator: boolean hasNext()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.EnumMap$KeyIterator: java.lang.Enum next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.concurrent.ConcurrentHashMap$EntryIterator: java.util.Map$Entry next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<javax.security.auth.Subject$SecureSet$1: boolean hasNext()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<javax.security.auth.Subject$SecureSet$1: java.lang.Object next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.Collections$EmptyIterator: boolean hasNext()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.Collections$EmptyIterator: java.lang.Object next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator: java.lang.Object next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.concurrent.CopyOnWriteArrayList$COWIterator: boolean hasNext()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.concurrent.CopyOnWriteArrayList$COWIterator: java.lang.Object next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<sun.util.PreHashedMap$1$1: boolean hasNext()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<sun.util.PreHashedMap$1$1: java.lang.String next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.lang.invoke.AbstractConstantGroup$AsIterator: boolean hasNext()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.lang.invoke.AbstractConstantGroup$AsIterator: java.lang.Object next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.TreeMap$NavigableSubMap$SubMapEntryIterator: java.util.Map$Entry next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.concurrent.ConcurrentSkipListMap$Iter: boolean hasNext()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.concurrent.ConcurrentSkipListMap$EntryIterator: java.util.Map$Entry next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.HashMap$HashIterator: boolean hasNext()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.HashMap$KeyIterator: java.lang.Object next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.ImmutableCollections$SetN$SetNIterator: boolean hasNext()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.ImmutableCollections$SetN$SetNIterator: java.lang.Object next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.IdentityHashMap$IdentityHashMapIterator: boolean hasNext()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.IdentityHashMap$EntryIterator: java.util.Map$Entry next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.WeakHashMap$EntryIterator: java.util.Map$Entry next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.AbstractMap$1$1: boolean hasNext()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.AbstractMap$1$1: java.lang.Object next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.concurrent.ConcurrentSkipListMap$ValueIterator: java.lang.Object next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.concurrent.LinkedBlockingDeque$AbstractItr: boolean hasNext()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.concurrent.LinkedBlockingDeque$AbstractItr: java.lang.Object next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.TreeMap$ValueIterator: java.lang.Object next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: boolean hasNext()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: java.lang.Object next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.ArrayList$Itr: boolean hasNext()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.ArrayList$Itr: java.lang.Object next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.IdentityHashMap$KeyIterator: java.lang.Object next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.ImmutableCollections$ListItr: boolean hasNext()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.ImmutableCollections$ListItr: java.lang.Object next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.WeakHashMap$ValueIterator: java.lang.Object next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.concurrent.ArrayBlockingQueue$Itr: boolean hasNext()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.concurrent.ArrayBlockingQueue$Itr: java.lang.Object next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.EnumMap$ValueIterator: java.lang.Object next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.IdentityHashMap$ValueIterator: java.lang.Object next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.lang.ProcessEnvironment$StringEntrySet$1: boolean hasNext()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.lang.ProcessEnvironment$StringEntrySet$1: java.util.Map$Entry next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.Hashtable$Enumerator: boolean hasNext()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.Hashtable$Enumerator: java.lang.Object next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapKeyIterator: java.lang.Object next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.LinkedHashMap$LinkedKeyIterator: java.lang.Object next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.HashMap$ValueIterator: java.lang.Object next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.concurrent.ConcurrentHashMap$KeyIterator: java.lang.Object next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.ImmutableCollections$MapN$MapNIterator: boolean hasNext()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.ImmutableCollections$MapN$MapNIterator: java.util.Map$Entry next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.concurrent.ConcurrentLinkedQueue$Itr: boolean hasNext()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.concurrent.ConcurrentLinkedQueue$Itr: java.lang.Object next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.HashMap$EntryIterator: java.util.Map$Entry next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.concurrent.ConcurrentSkipListMap$KeyIterator: java.lang.Object next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator: java.util.Map$Entry next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator: java.util.Map$Entry next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.EnumMap$EntryIterator: java.util.Map$Entry next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.RegularEnumSet$EnumSetIterator: boolean hasNext()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.util.RegularEnumSet$EnumSetIterator: java.lang.Enum next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<sun.util.PreHashedMap$2$1: boolean hasNext()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<sun.util.PreHashedMap$2$1: java.util.Map$Entry next()>";
    "(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>";
    "(100)<sortpom.wrapper.operation.HierarchyWrapper: java.lang.String toString()>"->"(23)<sortpom.wrapper.operation.ToStringOperation: void <init>()>";
    "(100)<sortpom.wrapper.operation.HierarchyWrapper: java.lang.String toString()>"->"(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>";
    "(100)<sortpom.wrapper.operation.HierarchyWrapper: java.lang.String toString()>"->"(79)<sortpom.wrapper.operation.ToStringOperation: java.lang.String toString()>";
    "(12)<sortpom.wrapper.operation.HierarchyRootWrapper: void <init>(sortpom.wrapper.content.Wrapper)>"
    "(12)<sortpom.wrapper.operation.HierarchyRootWrapper: void <init>(sortpom.wrapper.content.Wrapper)>"->"(21)<sortpom.wrapper.operation.HierarchyWrapper: void <init>(sortpom.wrapper.content.Wrapper)>";
    "(17)<sortpom.wrapper.operation.HierarchyRootWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"
    "(17)<sortpom.wrapper.operation.HierarchyRootWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>"->"(37)<sortpom.wrapper.operation.HierarchyWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>";
    "(22)<sortpom.wrapper.operation.HierarchyRootWrapper: void sortStructureAttributes()>"->"(17)<sortpom.wrapper.operation.SortAttributesOperation: void <init>()>";
    "(22)<sortpom.wrapper.operation.HierarchyRootWrapper: void sortStructureAttributes()>"->"(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>";
    "(27)<sortpom.wrapper.operation.HierarchyRootWrapper: void sortStructureElements()>"
    "(14)<sortpom.wrapper.operation.SortChildrenOperation: void <init>()>"
    "(27)<sortpom.wrapper.operation.HierarchyRootWrapper: void sortStructureElements()>"->"(14)<sortpom.wrapper.operation.SortChildrenOperation: void <init>()>";
    "(27)<sortpom.wrapper.operation.HierarchyRootWrapper: void sortStructureElements()>"->"(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>";
    "(32)<sortpom.wrapper.operation.HierarchyRootWrapper: void connectXmlStructure()>"
    "(32)<sortpom.wrapper.operation.HierarchyRootWrapper: void connectXmlStructure()>"->"(18)<sortpom.wrapper.operation.GetContentStructureOperation: void <init>()>";
    "(32)<sortpom.wrapper.operation.HierarchyRootWrapper: void connectXmlStructure()>"->"(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>";
    "(37)<sortpom.wrapper.operation.HierarchyRootWrapper: void detachStructure()>"
    "(14)<sortpom.wrapper.operation.DetachOperation: void <init>()>"
    "(37)<sortpom.wrapper.operation.HierarchyRootWrapper: void detachStructure()>"->"(14)<sortpom.wrapper.operation.DetachOperation: void <init>()>";
    "(37)<sortpom.wrapper.operation.HierarchyRootWrapper: void detachStructure()>"->"(73)<sortpom.wrapper.operation.HierarchyWrapper: void processOperation(sortpom.wrapper.operation.HierarchyWrapperOperation)>";
    "(42)<sortpom.wrapper.operation.HierarchyRootWrapper: sortpom.wrapper.content.Wrapper getElementContent()>"
    "(67)<sortpom.wrapper.operation.HierarchyWrapper: sortpom.wrapper.content.Wrapper getElementContent()>"
    "(42)<sortpom.wrapper.operation.HierarchyRootWrapper: sortpom.wrapper.content.Wrapper getElementContent()>"->"(67)<sortpom.wrapper.operation.HierarchyWrapper: sortpom.wrapper.content.Wrapper getElementContent()>";
    "(14)<sortpom.wrapper.operation.DetachOperation: void <init>()>"->"<java.lang.Object: void <init>()>";
    "(18)<sortpom.wrapper.operation.DetachOperation: void processOtherContent(sortpom.wrapper.content.Wrapper)>"
    "(18)<sortpom.wrapper.operation.DetachOperation: void processOtherContent(sortpom.wrapper.content.Wrapper)>"->"(11)<sortpom.wrapper.content.AlphabeticalSortedWrapper: org.jdom.Content getContent()>";
    "(18)<sortpom.wrapper.operation.DetachOperation: void processOtherContent(sortpom.wrapper.content.Wrapper)>"->"(11)<sortpom.wrapper.content.SortedWrapper: org.jdom.Content getContent()>";
    "(18)<sortpom.wrapper.operation.DetachOperation: void processOtherContent(sortpom.wrapper.content.Wrapper)>"->"(11)<sortpom.wrapper.content.SingleNewlineInTextWrapper: org.jdom.Content getContent()>";
    "(18)<sortpom.wrapper.operation.DetachOperation: void processOtherContent(sortpom.wrapper.content.Wrapper)>"->"(29)<sortpom.wrapper.content.UnsortedWrapper: org.jdom.Content getContent()>";
    "(24)<sortpom.wrapper.operation.DetachOperation: void processElement(sortpom.wrapper.content.Wrapper)>"->"(11)<sortpom.wrapper.content.AlphabeticalSortedWrapper: org.jdom.Content getContent()>";
    "(24)<sortpom.wrapper.operation.DetachOperation: void processElement(sortpom.wrapper.content.Wrapper)>"->"(11)<sortpom.wrapper.content.SortedWrapper: org.jdom.Content getContent()>";
    "(24)<sortpom.wrapper.operation.DetachOperation: void processElement(sortpom.wrapper.content.Wrapper)>"->"(11)<sortpom.wrapper.content.SingleNewlineInTextWrapper: org.jdom.Content getContent()>";
    "(24)<sortpom.wrapper.operation.DetachOperation: void processElement(sortpom.wrapper.content.Wrapper)>"->"(29)<sortpom.wrapper.content.UnsortedWrapper: org.jdom.Content getContent()>";
    "(14)<sortpom.wrapper.operation.SortChildrenOperation: void <init>()>"->"<java.lang.Object: void <init>()>";
    "<java.util.ArrayList: int size()>"
    "(19)<sortpom.wrapper.operation.SortChildrenOperation: void manipulateChildElements(java.util.List)>"->"<java.util.ArrayList: int size()>";
    "<java.util.ArrayList: java.lang.Object get(int)>"
    "(19)<sortpom.wrapper.operation.SortChildrenOperation: void manipulateChildElements(java.util.List)>"->"<java.util.ArrayList: java.lang.Object get(int)>";
    "(19)<sortpom.wrapper.operation.SortChildrenOperation: void manipulateChildElements(java.util.List)>"->"(67)<sortpom.wrapper.operation.HierarchyWrapper: sortpom.wrapper.content.Wrapper getElementContent()>";
    "(43)<sortpom.wrapper.content.Wrapper: boolean isSortable()>"
    "(19)<sortpom.wrapper.operation.SortChildrenOperation: void manipulateChildElements(java.util.List)>"->"(43)<sortpom.wrapper.content.Wrapper: boolean isSortable()>";
    "(35)<sortpom.wrapper.content.SingleNewlineInTextWrapper: boolean isSortable()>"
    "(19)<sortpom.wrapper.operation.SortChildrenOperation: void manipulateChildElements(java.util.List)>"->"(35)<sortpom.wrapper.content.SingleNewlineInTextWrapper: boolean isSortable()>";
    "(47)<sortpom.wrapper.content.UnsortedWrapper: boolean isSortable()>"
    "(19)<sortpom.wrapper.operation.SortChildrenOperation: void manipulateChildElements(java.util.List)>"->"(47)<sortpom.wrapper.content.UnsortedWrapper: boolean isSortable()>";
    "(31)<sortpom.wrapper.operation.SortChildrenOperation: void insertChildInSortedOrder(java.util.List,int,sortpom.wrapper.operation.HierarchyWrapper,sortpom.wrapper.content.Wrapper)>"
    "(19)<sortpom.wrapper.operation.SortChildrenOperation: void manipulateChildElements(java.util.List)>"->"(31)<sortpom.wrapper.operation.SortChildrenOperation: void insertChildInSortedOrder(java.util.List,int,sortpom.wrapper.operation.HierarchyWrapper,sortpom.wrapper.content.Wrapper)>";
    "(31)<sortpom.wrapper.operation.SortChildrenOperation: void insertChildInSortedOrder(java.util.List,int,sortpom.wrapper.operation.HierarchyWrapper,sortpom.wrapper.content.Wrapper)>"->"<java.util.ArrayList: java.lang.Object get(int)>";
    "<java.util.ArrayList: java.lang.Object remove(int)>"
    "(31)<sortpom.wrapper.operation.SortChildrenOperation: void insertChildInSortedOrder(java.util.List,int,sortpom.wrapper.operation.HierarchyWrapper,sortpom.wrapper.content.Wrapper)>"->"<java.util.ArrayList: java.lang.Object remove(int)>";
    "<java.util.ArrayList: void add(int,java.lang.Object)>"
    "(31)<sortpom.wrapper.operation.SortChildrenOperation: void insertChildInSortedOrder(java.util.List,int,sortpom.wrapper.operation.HierarchyWrapper,sortpom.wrapper.content.Wrapper)>"->"<java.util.ArrayList: void add(int,java.lang.Object)>";
    "(31)<sortpom.wrapper.operation.SortChildrenOperation: void insertChildInSortedOrder(java.util.List,int,sortpom.wrapper.operation.HierarchyWrapper,sortpom.wrapper.content.Wrapper)>"->"(67)<sortpom.wrapper.operation.HierarchyWrapper: sortpom.wrapper.content.Wrapper getElementContent()>";
    "(25)<sortpom.wrapper.content.AlphabeticalSortedWrapper: boolean isBefore(sortpom.wrapper.content.Wrapper)>"
    "(31)<sortpom.wrapper.operation.SortChildrenOperation: void insertChildInSortedOrder(java.util.List,int,sortpom.wrapper.operation.HierarchyWrapper,sortpom.wrapper.content.Wrapper)>"->"(25)<sortpom.wrapper.content.AlphabeticalSortedWrapper: boolean isBefore(sortpom.wrapper.content.Wrapper)>";
    "(35)<sortpom.wrapper.content.DependencySortedWrapper: boolean isBefore(sortpom.wrapper.content.Wrapper)>"
    "(31)<sortpom.wrapper.operation.SortChildrenOperation: void insertChildInSortedOrder(java.util.List,int,sortpom.wrapper.operation.HierarchyWrapper,sortpom.wrapper.content.Wrapper)>"->"(35)<sortpom.wrapper.content.DependencySortedWrapper: boolean isBefore(sortpom.wrapper.content.Wrapper)>";
    "(31)<sortpom.wrapper.content.SortedWrapper: boolean isBefore(sortpom.wrapper.content.Wrapper)>"
    "(31)<sortpom.wrapper.operation.SortChildrenOperation: void insertChildInSortedOrder(java.util.List,int,sortpom.wrapper.operation.HierarchyWrapper,sortpom.wrapper.content.Wrapper)>"->"(31)<sortpom.wrapper.content.SortedWrapper: boolean isBefore(sortpom.wrapper.content.Wrapper)>";
    "(28)<sortpom.wrapper.content.ModuleSortedWrapper: boolean isBefore(sortpom.wrapper.content.Wrapper)>"
    "(31)<sortpom.wrapper.operation.SortChildrenOperation: void insertChildInSortedOrder(java.util.List,int,sortpom.wrapper.operation.HierarchyWrapper,sortpom.wrapper.content.Wrapper)>"->"(28)<sortpom.wrapper.content.ModuleSortedWrapper: boolean isBefore(sortpom.wrapper.content.Wrapper)>";
    "(25)<sortpom.wrapper.content.SingleNewlineInTextWrapper: boolean isBefore(sortpom.wrapper.content.Wrapper)>"
    "(31)<sortpom.wrapper.operation.SortChildrenOperation: void insertChildInSortedOrder(java.util.List,int,sortpom.wrapper.operation.HierarchyWrapper,sortpom.wrapper.content.Wrapper)>"->"(25)<sortpom.wrapper.content.SingleNewlineInTextWrapper: boolean isBefore(sortpom.wrapper.content.Wrapper)>";
    "(35)<sortpom.wrapper.content.UnsortedWrapper: boolean isBefore(sortpom.wrapper.content.Wrapper)>"
    "(31)<sortpom.wrapper.operation.SortChildrenOperation: void insertChildInSortedOrder(java.util.List,int,sortpom.wrapper.operation.HierarchyWrapper,sortpom.wrapper.content.Wrapper)>"->"(35)<sortpom.wrapper.content.UnsortedWrapper: boolean isBefore(sortpom.wrapper.content.Wrapper)>";
    "(37)<sortpom.wrapper.content.PluginSortedWrapper: boolean isBefore(sortpom.wrapper.content.Wrapper)>"
    "(31)<sortpom.wrapper.operation.SortChildrenOperation: void insertChildInSortedOrder(java.util.List,int,sortpom.wrapper.operation.HierarchyWrapper,sortpom.wrapper.content.Wrapper)>"->"(37)<sortpom.wrapper.content.PluginSortedWrapper: boolean isBefore(sortpom.wrapper.content.Wrapper)>";
    "(15)<sortpom.wrapper.content.SingleNewlineInTextWrapper: void <init>()>"
    "(15)<sortpom.wrapper.content.SingleNewlineInTextWrapper: void <init>()>"->"<java.lang.Object: void <init>()>";
    "(20)<sortpom.wrapper.content.SingleNewlineInTextWrapper: org.jdom.Text getContent()>"
    "<java.lang.UnsupportedOperationException: void <init>()>"
    "(20)<sortpom.wrapper.content.SingleNewlineInTextWrapper: org.jdom.Text getContent()>"->"<java.lang.UnsupportedOperationException: void <init>()>";
    "(25)<sortpom.wrapper.content.SingleNewlineInTextWrapper: boolean isBefore(sortpom.wrapper.content.Wrapper)>"->"<java.lang.UnsupportedOperationException: void <init>()>";
    "(30)<sortpom.wrapper.content.SingleNewlineInTextWrapper: boolean isContentElement()>"->"<java.lang.UnsupportedOperationException: void <init>()>";
    "(35)<sortpom.wrapper.content.SingleNewlineInTextWrapper: boolean isSortable()>"->"<java.lang.UnsupportedOperationException: void <init>()>";
    "(11)<sortpom.wrapper.content.SingleNewlineInTextWrapper: org.jdom.Content getContent()>"->"(20)<sortpom.wrapper.content.SingleNewlineInTextWrapper: org.jdom.Text getContent()>";
    "(13)<sortpom.wrapper.content.SingleNewlineInTextWrapper: void <clinit>()>"->"(15)<sortpom.wrapper.content.SingleNewlineInTextWrapper: void <init>()>";
    "(21)<sortpom.wrapper.content.ModuleSortedWrapper: void <init>(org.jdom.Element,int)>"->"(19)<sortpom.wrapper.content.SortedWrapper: void <init>(org.jdom.Element,int)>";
    "(39)<sortpom.wrapper.content.ModuleSortedWrapper: boolean isBeforeAlphabeticalTextSortedWrapper(sortpom.wrapper.content.ModuleSortedWrapper)>"
    "(28)<sortpom.wrapper.content.ModuleSortedWrapper: boolean isBefore(sortpom.wrapper.content.Wrapper)>"->"(39)<sortpom.wrapper.content.ModuleSortedWrapper: boolean isBeforeAlphabeticalTextSortedWrapper(sortpom.wrapper.content.ModuleSortedWrapper)>";
    "(28)<sortpom.wrapper.content.ModuleSortedWrapper: boolean isBefore(sortpom.wrapper.content.Wrapper)>"->"(31)<sortpom.wrapper.content.SortedWrapper: boolean isBefore(sortpom.wrapper.content.Wrapper)>";
    "(44)<sortpom.wrapper.content.ModuleSortedWrapper: java.lang.String toString()>"
    "(44)<sortpom.wrapper.content.ModuleSortedWrapper: java.lang.String toString()>"->"<java.lang.StringBuilder: void <init>()>";
    "(44)<sortpom.wrapper.content.ModuleSortedWrapper: java.lang.String toString()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(26)<sortpom.wrapper.content.SortedWrapper: org.jdom.Element getContent()>"
    "(44)<sortpom.wrapper.content.ModuleSortedWrapper: java.lang.String toString()>"->"(26)<sortpom.wrapper.content.SortedWrapper: org.jdom.Element getContent()>";
    "(44)<sortpom.wrapper.content.ModuleSortedWrapper: java.lang.String toString()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>";
    "(44)<sortpom.wrapper.content.ModuleSortedWrapper: java.lang.String toString()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(char)>";
    "(44)<sortpom.wrapper.content.ModuleSortedWrapper: java.lang.String toString()>"->"<java.lang.StringBuilder: java.lang.String toString()>";
    "(22)<sortpom.wrapper.content.UnsortedWrapper: void <init>(org.jdom.Content)>"->"<java.lang.Object: void <init>()>";
    "<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>"
    "(35)<sortpom.wrapper.content.UnsortedWrapper: boolean isBefore(sortpom.wrapper.content.Wrapper)>"->"<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>";
    "(52)<sortpom.wrapper.content.UnsortedWrapper: java.lang.String toString()>"
    "(52)<sortpom.wrapper.content.UnsortedWrapper: java.lang.String toString()>"->"<java.lang.StringBuilder: void <init>()>";
    "(52)<sortpom.wrapper.content.UnsortedWrapper: java.lang.String toString()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(52)<sortpom.wrapper.content.UnsortedWrapper: java.lang.String toString()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>";
    "(52)<sortpom.wrapper.content.UnsortedWrapper: java.lang.String toString()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(char)>";
    "(52)<sortpom.wrapper.content.UnsortedWrapper: java.lang.String toString()>"->"<java.lang.StringBuilder: java.lang.String toString()>";
    "(24)<sortpom.wrapper.content.DependencySortedWrapper: void <init>(org.jdom.Element,int)>"->"(19)<sortpom.wrapper.content.SortedWrapper: void <init>(org.jdom.Element,int)>";
    "(29)<sortpom.wrapper.content.DependencySortedWrapper: void setSortOrder(sortpom.parameter.DependencySortOrder)>"->"(26)<sortpom.wrapper.content.SortedWrapper: org.jdom.Element getContent()>";
    "(29)<sortpom.wrapper.content.DependencySortedWrapper: void setSortOrder(sortpom.parameter.DependencySortOrder)>"->"(22)<sortpom.wrapper.content.ChildElementSorter: void <init>(sortpom.parameter.DependencySortOrder,java.util.List)>";
    "(46)<sortpom.wrapper.content.DependencySortedWrapper: boolean isBeforeDependencySortedWrapper(sortpom.wrapper.content.DependencySortedWrapper)>"
    "(35)<sortpom.wrapper.content.DependencySortedWrapper: boolean isBefore(sortpom.wrapper.content.Wrapper)>"->"(46)<sortpom.wrapper.content.DependencySortedWrapper: boolean isBeforeDependencySortedWrapper(sortpom.wrapper.content.DependencySortedWrapper)>";
    "(35)<sortpom.wrapper.content.DependencySortedWrapper: boolean isBefore(sortpom.wrapper.content.Wrapper)>"->"(31)<sortpom.wrapper.content.SortedWrapper: boolean isBefore(sortpom.wrapper.content.Wrapper)>";
    "(46)<sortpom.wrapper.content.DependencySortedWrapper: boolean isBeforeDependencySortedWrapper(sortpom.wrapper.content.DependencySortedWrapper)>"->"(36)<sortpom.wrapper.content.ChildElementSorter: boolean compareTo(sortpom.wrapper.content.ChildElementSorter)>";
    "(51)<sortpom.wrapper.content.DependencySortedWrapper: java.lang.String toString()>"
    "(51)<sortpom.wrapper.content.DependencySortedWrapper: java.lang.String toString()>"->"<java.lang.StringBuilder: void <init>()>";
    "(51)<sortpom.wrapper.content.DependencySortedWrapper: java.lang.String toString()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(51)<sortpom.wrapper.content.DependencySortedWrapper: java.lang.String toString()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>";
    "(51)<sortpom.wrapper.content.DependencySortedWrapper: java.lang.String toString()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(char)>";
    "(51)<sortpom.wrapper.content.DependencySortedWrapper: java.lang.String toString()>"->"<java.lang.StringBuilder: java.lang.String toString()>";
    "(19)<sortpom.wrapper.content.SortedWrapper: void <init>(org.jdom.Element,int)>"->"<java.lang.Object: void <init>()>";
    "(35)<sortpom.wrapper.content.SortedWrapper: boolean isBeforeSortedWrapper(sortpom.wrapper.content.SortedWrapper)>"
    "(31)<sortpom.wrapper.content.SortedWrapper: boolean isBefore(sortpom.wrapper.content.Wrapper)>"->"(35)<sortpom.wrapper.content.SortedWrapper: boolean isBeforeSortedWrapper(sortpom.wrapper.content.SortedWrapper)>";
    "(40)<sortpom.wrapper.content.SortedWrapper: java.lang.String toString()>"
    "(40)<sortpom.wrapper.content.SortedWrapper: java.lang.String toString()>"->"<java.lang.StringBuilder: void <init>()>";
    "(40)<sortpom.wrapper.content.SortedWrapper: java.lang.String toString()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(40)<sortpom.wrapper.content.SortedWrapper: java.lang.String toString()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>";
    "(40)<sortpom.wrapper.content.SortedWrapper: java.lang.String toString()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(char)>";
    "(40)<sortpom.wrapper.content.SortedWrapper: java.lang.String toString()>"->"<java.lang.StringBuilder: java.lang.String toString()>";
    "(11)<sortpom.wrapper.content.SortedWrapper: org.jdom.Content getContent()>"->"(26)<sortpom.wrapper.content.SortedWrapper: org.jdom.Element getContent()>";
    "(25)<sortpom.wrapper.content.PluginSortedWrapper: void <init>(org.jdom.Element,int)>"->"(19)<sortpom.wrapper.content.SortedWrapper: void <init>(org.jdom.Element,int)>";
    "(30)<sortpom.wrapper.content.PluginSortedWrapper: void setSortOrder(sortpom.parameter.DependencySortOrder)>"->"(26)<sortpom.wrapper.content.SortedWrapper: org.jdom.Element getContent()>";
    "(30)<sortpom.wrapper.content.PluginSortedWrapper: void setSortOrder(sortpom.parameter.DependencySortOrder)>"->"(22)<sortpom.wrapper.content.ChildElementSorter: void <init>(sortpom.parameter.DependencySortOrder,java.util.List)>";
    "(30)<sortpom.wrapper.content.PluginSortedWrapper: void setSortOrder(sortpom.parameter.DependencySortOrder)>"->"(61)<sortpom.wrapper.content.ChildElementSorter: void setEmptyPluginGroupIdValue(java.lang.String)>";
    "(48)<sortpom.wrapper.content.PluginSortedWrapper: boolean isBeforePluginSortedWrapper(sortpom.wrapper.content.PluginSortedWrapper)>"
    "(37)<sortpom.wrapper.content.PluginSortedWrapper: boolean isBefore(sortpom.wrapper.content.Wrapper)>"->"(48)<sortpom.wrapper.content.PluginSortedWrapper: boolean isBeforePluginSortedWrapper(sortpom.wrapper.content.PluginSortedWrapper)>";
    "(37)<sortpom.wrapper.content.PluginSortedWrapper: boolean isBefore(sortpom.wrapper.content.Wrapper)>"->"(31)<sortpom.wrapper.content.SortedWrapper: boolean isBefore(sortpom.wrapper.content.Wrapper)>";
    "(48)<sortpom.wrapper.content.PluginSortedWrapper: boolean isBeforePluginSortedWrapper(sortpom.wrapper.content.PluginSortedWrapper)>"->"(36)<sortpom.wrapper.content.ChildElementSorter: boolean compareTo(sortpom.wrapper.content.ChildElementSorter)>";
    "(53)<sortpom.wrapper.content.PluginSortedWrapper: java.lang.String toString()>"
    "(53)<sortpom.wrapper.content.PluginSortedWrapper: java.lang.String toString()>"->"<java.lang.StringBuilder: void <init>()>";
    "(53)<sortpom.wrapper.content.PluginSortedWrapper: java.lang.String toString()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(53)<sortpom.wrapper.content.PluginSortedWrapper: java.lang.String toString()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>";
    "(53)<sortpom.wrapper.content.PluginSortedWrapper: java.lang.String toString()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(char)>";
    "(53)<sortpom.wrapper.content.PluginSortedWrapper: java.lang.String toString()>"->"<java.lang.StringBuilder: java.lang.String toString()>";
    "<java.lang.Object: java.lang.Object clone()>"
    "(71)<sortpom.wrapper.content.ChildElementSorter$Scope: sortpom.wrapper.content.ChildElementSorter$Scope[] values()>"->"<java.lang.Object: java.lang.Object clone()>";
    "(71)<sortpom.wrapper.content.ChildElementSorter$Scope: void <init>(java.lang.String,int)>"
    "<java.lang.Enum: void <init>(java.lang.String,int)>"
    "(71)<sortpom.wrapper.content.ChildElementSorter$Scope: void <init>(java.lang.String,int)>"->"<java.lang.Enum: void <init>(java.lang.String,int)>";
    "<java.lang.String: boolean isEmpty()>"
    "(75)<sortpom.wrapper.content.ChildElementSorter$Scope: sortpom.wrapper.content.ChildElementSorter$Scope getScope(java.lang.String)>"->"<java.lang.String: boolean isEmpty()>";
    "<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>"
    "(75)<sortpom.wrapper.content.ChildElementSorter$Scope: sortpom.wrapper.content.ChildElementSorter$Scope getScope(java.lang.String)>"->"<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>";
    "<java.lang.Enum: java.lang.String name()>"
    "(75)<sortpom.wrapper.content.ChildElementSorter$Scope: sortpom.wrapper.content.ChildElementSorter$Scope getScope(java.lang.String)>"->"<java.lang.Enum: java.lang.String name()>";
    "(73)<sortpom.wrapper.content.ChildElementSorter$Scope: void <clinit>()>"->"(71)<sortpom.wrapper.content.ChildElementSorter$Scope: void <init>(java.lang.String,int)>";
    "(73)<sortpom.wrapper.content.ChildElementSorter$Scope: void <clinit>()>"->"(71)<sortpom.wrapper.content.ChildElementSorter$Scope: void <init>(java.lang.String,int)>";
    "(73)<sortpom.wrapper.content.ChildElementSorter$Scope: void <clinit>()>"->"(71)<sortpom.wrapper.content.ChildElementSorter$Scope: void <init>(java.lang.String,int)>";
    "(73)<sortpom.wrapper.content.ChildElementSorter$Scope: void <clinit>()>"->"(71)<sortpom.wrapper.content.ChildElementSorter$Scope: void <init>(java.lang.String,int)>";
    "(73)<sortpom.wrapper.content.ChildElementSorter$Scope: void <clinit>()>"->"(71)<sortpom.wrapper.content.ChildElementSorter$Scope: void <init>(java.lang.String,int)>";
    "(73)<sortpom.wrapper.content.ChildElementSorter$Scope: void <clinit>()>"->"(71)<sortpom.wrapper.content.ChildElementSorter$Scope: void <init>(java.lang.String,int)>";
    "(73)<sortpom.wrapper.content.ChildElementSorter$Scope: void <clinit>()>"->"(71)<sortpom.wrapper.content.ChildElementSorter$Scope: void <init>(java.lang.String,int)>";
    "(22)<sortpom.wrapper.content.ChildElementSorter: void <init>(sortpom.parameter.DependencySortOrder,java.util.List)>"->"<java.lang.Object: void <init>()>";
    "<java.util.LinkedHashMap: void <init>()>"
    "(22)<sortpom.wrapper.content.ChildElementSorter: void <init>(sortpom.parameter.DependencySortOrder,java.util.List)>"->"<java.util.LinkedHashMap: void <init>()>";
    "(22)<sortpom.wrapper.content.ChildElementSorter: void <init>(sortpom.parameter.DependencySortOrder,java.util.List)>"->"(35)<sortpom.parameter.DependencySortOrder: java.util.Collection getChildElementNames()>";
    "<java.util.Collections$UnmodifiableCollection: void forEach(java.util.function.Consumer)>"
    "(22)<sortpom.wrapper.content.ChildElementSorter: void <init>(sortpom.parameter.DependencySortOrder,java.util.List)>"->"<java.util.Collections$UnmodifiableCollection: void forEach(java.util.function.Consumer)>";
    "(32)<sortpom.wrapper.content.ChildElementSorter: void <init>()>"
    "(32)<sortpom.wrapper.content.ChildElementSorter: void <init>()>"->"<java.lang.Object: void <init>()>";
    "(32)<sortpom.wrapper.content.ChildElementSorter: void <init>()>"->"<java.util.LinkedHashMap: void <init>()>";
    "<java.util.LinkedHashMap: java.util.Set entrySet()>"
    "(36)<sortpom.wrapper.content.ChildElementSorter: boolean compareTo(sortpom.wrapper.content.ChildElementSorter)>"->"<java.util.LinkedHashMap: java.util.Set entrySet()>";
    "<java.util.Collection: java.util.stream.Stream stream()>"
    "(36)<sortpom.wrapper.content.ChildElementSorter: boolean compareTo(sortpom.wrapper.content.ChildElementSorter)>"->"<java.util.Collection: java.util.stream.Stream stream()>";
    "<java.util.stream.ReferencePipeline: java.util.stream.Stream map(java.util.function.Function)>"
    "(36)<sortpom.wrapper.content.ChildElementSorter: boolean compareTo(sortpom.wrapper.content.ChildElementSorter)>"->"<java.util.stream.ReferencePipeline: java.util.stream.Stream map(java.util.function.Function)>";
    "<java.lang.Integer: int intValue()>"
    "(36)<sortpom.wrapper.content.ChildElementSorter: boolean compareTo(sortpom.wrapper.content.ChildElementSorter)>"->"<java.lang.Integer: int intValue()>";
    "(49)<sortpom.wrapper.content.ChildElementSorter: int compareTexts(java.lang.String,java.lang.String,java.lang.String)>"
    "(49)<sortpom.wrapper.content.ChildElementSorter: int compareTexts(java.lang.String,java.lang.String,java.lang.String)>"->"<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>";
    "(49)<sortpom.wrapper.content.ChildElementSorter: int compareTexts(java.lang.String,java.lang.String,java.lang.String)>"->"(57)<sortpom.wrapper.content.ChildElementSorter: int compareScope(java.lang.String,java.lang.String)>";
    "<java.lang.String: int compareToIgnoreCase(java.lang.String)>"
    "(49)<sortpom.wrapper.content.ChildElementSorter: int compareTexts(java.lang.String,java.lang.String,java.lang.String)>"->"<java.lang.String: int compareToIgnoreCase(java.lang.String)>";
    "<java.lang.Enum: int compareTo(java.lang.Enum)>"
    "(57)<sortpom.wrapper.content.ChildElementSorter: int compareScope(java.lang.String,java.lang.String)>"->"<java.lang.Enum: int compareTo(java.lang.Enum)>";
    "<java.util.HashMap: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>"
    "(61)<sortpom.wrapper.content.ChildElementSorter: void setEmptyPluginGroupIdValue(java.lang.String)>"->"<java.util.HashMap: java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction)>";
    "(66)<sortpom.wrapper.content.ChildElementSorter: java.lang.String toString()>"
    "(66)<sortpom.wrapper.content.ChildElementSorter: java.lang.String toString()>"->"<java.lang.StringBuilder: void <init>()>";
    "(66)<sortpom.wrapper.content.ChildElementSorter: java.lang.String toString()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "<java.util.LinkedHashMap: java.util.Collection values()>"
    "(66)<sortpom.wrapper.content.ChildElementSorter: java.lang.String toString()>"->"<java.util.LinkedHashMap: java.util.Collection values()>";
    "(66)<sortpom.wrapper.content.ChildElementSorter: java.lang.String toString()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>";
    "(66)<sortpom.wrapper.content.ChildElementSorter: java.lang.String toString()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(char)>";
    "(66)<sortpom.wrapper.content.ChildElementSorter: java.lang.String toString()>"->"<java.lang.StringBuilder: java.lang.String toString()>";
    "(61)<sortpom.wrapper.content.ChildElementSorter: java.lang.String lambda$setEmptyPluginGroupIdValue$5(java.lang.String,java.lang.String,java.lang.String)>"->"<java.lang.String: boolean isEmpty()>";
    "(42)<sortpom.wrapper.content.ChildElementSorter: boolean lambda$compareTo$4(java.lang.Integer)>"->"<java.lang.Integer: int intValue()>";
    "<java.util.Hashtable$Entry: java.lang.Object getKey()>"
    "(40)<sortpom.wrapper.content.ChildElementSorter: java.lang.Integer lambda$compareTo$3(java.util.function.Function,java.util.Map$Entry)>"->"<java.util.Hashtable$Entry: java.lang.Object getKey()>";
    "<java.util.Hashtable$Entry: java.lang.Object getValue()>"
    "(40)<sortpom.wrapper.content.ChildElementSorter: java.lang.Integer lambda$compareTo$3(java.util.function.Function,java.util.Map$Entry)>"->"<java.util.Hashtable$Entry: java.lang.Object getValue()>";
    "<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getKey()>"
    "(40)<sortpom.wrapper.content.ChildElementSorter: java.lang.Integer lambda$compareTo$3(java.util.function.Function,java.util.Map$Entry)>"->"<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getKey()>";
    "<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getValue()>"
    "(40)<sortpom.wrapper.content.ChildElementSorter: java.lang.Integer lambda$compareTo$3(java.util.function.Function,java.util.Map$Entry)>"->"<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getValue()>";
    "<java.lang.ProcessEnvironment$StringEntrySet$2: java.lang.ProcessEnvironment$Variable getKey()>"
    "(40)<sortpom.wrapper.content.ChildElementSorter: java.lang.Integer lambda$compareTo$3(java.util.function.Function,java.util.Map$Entry)>"->"<java.lang.ProcessEnvironment$StringEntrySet$2: java.lang.ProcessEnvironment$Variable getKey()>";
    "<java.lang.ProcessEnvironment$StringEntrySet$2: java.lang.ProcessEnvironment$Value getValue()>"
    "(40)<sortpom.wrapper.content.ChildElementSorter: java.lang.Integer lambda$compareTo$3(java.util.function.Function,java.util.Map$Entry)>"->"<java.lang.ProcessEnvironment$StringEntrySet$2: java.lang.ProcessEnvironment$Value getValue()>";
    "<java.util.TreeMap$Entry: java.lang.Object getKey()>"
    "(40)<sortpom.wrapper.content.ChildElementSorter: java.lang.Integer lambda$compareTo$3(java.util.function.Function,java.util.Map$Entry)>"->"<java.util.TreeMap$Entry: java.lang.Object getKey()>";
    "<java.util.TreeMap$Entry: java.lang.Object getValue()>"
    "(40)<sortpom.wrapper.content.ChildElementSorter: java.lang.Integer lambda$compareTo$3(java.util.function.Function,java.util.Map$Entry)>"->"<java.util.TreeMap$Entry: java.lang.Object getValue()>";
    "<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getKey()>"
    "(40)<sortpom.wrapper.content.ChildElementSorter: java.lang.Integer lambda$compareTo$3(java.util.function.Function,java.util.Map$Entry)>"->"<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getKey()>";
    "<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getValue()>"
    "(40)<sortpom.wrapper.content.ChildElementSorter: java.lang.Integer lambda$compareTo$3(java.util.function.Function,java.util.Map$Entry)>"->"<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getValue()>";
    "<java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry: java.lang.Object getKey()>"
    "(40)<sortpom.wrapper.content.ChildElementSorter: java.lang.Integer lambda$compareTo$3(java.util.function.Function,java.util.Map$Entry)>"->"<java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry: java.lang.Object getKey()>";
    "<java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry: java.lang.Object getValue()>"
    "(40)<sortpom.wrapper.content.ChildElementSorter: java.lang.Integer lambda$compareTo$3(java.util.function.Function,java.util.Map$Entry)>"->"<java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry: java.lang.Object getValue()>";
    "<java.lang.ProcessEnvironment$StringEntry: java.lang.String getKey()>"
    "(40)<sortpom.wrapper.content.ChildElementSorter: java.lang.Integer lambda$compareTo$3(java.util.function.Function,java.util.Map$Entry)>"->"<java.lang.ProcessEnvironment$StringEntry: java.lang.String getKey()>";
    "<java.lang.ProcessEnvironment$StringEntry: java.lang.String getValue()>"
    "(40)<sortpom.wrapper.content.ChildElementSorter: java.lang.Integer lambda$compareTo$3(java.util.function.Function,java.util.Map$Entry)>"->"<java.lang.ProcessEnvironment$StringEntry: java.lang.String getValue()>";
    "<java.util.HashMap$Node: java.lang.Object getKey()>"
    "(40)<sortpom.wrapper.content.ChildElementSorter: java.lang.Integer lambda$compareTo$3(java.util.function.Function,java.util.Map$Entry)>"->"<java.util.HashMap$Node: java.lang.Object getKey()>";
    "<java.util.HashMap$Node: java.lang.Object getValue()>"
    "(40)<sortpom.wrapper.content.ChildElementSorter: java.lang.Integer lambda$compareTo$3(java.util.function.Function,java.util.Map$Entry)>"->"<java.util.HashMap$Node: java.lang.Object getValue()>";
    "<java.util.IdentityHashMap$EntryIterator$Entry: java.lang.Object getKey()>"
    "(40)<sortpom.wrapper.content.ChildElementSorter: java.lang.Integer lambda$compareTo$3(java.util.function.Function,java.util.Map$Entry)>"->"<java.util.IdentityHashMap$EntryIterator$Entry: java.lang.Object getKey()>";
    "<java.util.IdentityHashMap$EntryIterator$Entry: java.lang.Object getValue()>"
    "(40)<sortpom.wrapper.content.ChildElementSorter: java.lang.Integer lambda$compareTo$3(java.util.function.Function,java.util.Map$Entry)>"->"<java.util.IdentityHashMap$EntryIterator$Entry: java.lang.Object getValue()>";
    "<java.util.KeyValueHolder: java.lang.Object getKey()>"
    "(40)<sortpom.wrapper.content.ChildElementSorter: java.lang.Integer lambda$compareTo$3(java.util.function.Function,java.util.Map$Entry)>"->"<java.util.KeyValueHolder: java.lang.Object getKey()>";
    "<java.util.KeyValueHolder: java.lang.Object getValue()>"
    "(40)<sortpom.wrapper.content.ChildElementSorter: java.lang.Integer lambda$compareTo$3(java.util.function.Function,java.util.Map$Entry)>"->"<java.util.KeyValueHolder: java.lang.Object getValue()>";
    "<java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getKey()>"
    "(40)<sortpom.wrapper.content.ChildElementSorter: java.lang.Integer lambda$compareTo$3(java.util.function.Function,java.util.Map$Entry)>"->"<java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getKey()>";
    "<java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getValue()>"
    "(40)<sortpom.wrapper.content.ChildElementSorter: java.lang.Integer lambda$compareTo$3(java.util.function.Function,java.util.Map$Entry)>"->"<java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getValue()>";
    "<java.util.AbstractMap$SimpleEntry: java.lang.Object getKey()>"
    "(40)<sortpom.wrapper.content.ChildElementSorter: java.lang.Integer lambda$compareTo$3(java.util.function.Function,java.util.Map$Entry)>"->"<java.util.AbstractMap$SimpleEntry: java.lang.Object getKey()>";
    "<java.util.AbstractMap$SimpleEntry: java.lang.Object getValue()>"
    "(40)<sortpom.wrapper.content.ChildElementSorter: java.lang.Integer lambda$compareTo$3(java.util.function.Function,java.util.Map$Entry)>"->"<java.util.AbstractMap$SimpleEntry: java.lang.Object getValue()>";
    "<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute getKey()>"
    "(40)<sortpom.wrapper.content.ChildElementSorter: java.lang.Integer lambda$compareTo$3(java.util.function.Function,java.util.Map$Entry)>"->"<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute getKey()>";
    "<java.text.AttributeEntry: java.lang.Object getValue()>"
    "(40)<sortpom.wrapper.content.ChildElementSorter: java.lang.Integer lambda$compareTo$3(java.util.function.Function,java.util.Map$Entry)>"->"<java.text.AttributeEntry: java.lang.Object getValue()>";
    "<sun.util.PreHashedMap$2$1$1: java.lang.String getKey()>"
    "(40)<sortpom.wrapper.content.ChildElementSorter: java.lang.Integer lambda$compareTo$3(java.util.function.Function,java.util.Map$Entry)>"->"<sun.util.PreHashedMap$2$1$1: java.lang.String getKey()>";
    "<sun.util.PreHashedMap$2$1$1: java.lang.Object getValue()>"
    "(40)<sortpom.wrapper.content.ChildElementSorter: java.lang.Integer lambda$compareTo$3(java.util.function.Function,java.util.Map$Entry)>"->"<sun.util.PreHashedMap$2$1$1: java.lang.Object getValue()>";
    "<java.util.EnumMap$EntryIterator$Entry: java.lang.Enum getKey()>"
    "(40)<sortpom.wrapper.content.ChildElementSorter: java.lang.Integer lambda$compareTo$3(java.util.function.Function,java.util.Map$Entry)>"->"<java.util.EnumMap$EntryIterator$Entry: java.lang.Enum getKey()>";
    "<java.util.EnumMap$EntryIterator$Entry: java.lang.Object getValue()>"
    "(40)<sortpom.wrapper.content.ChildElementSorter: java.lang.Integer lambda$compareTo$3(java.util.function.Function,java.util.Map$Entry)>"->"<java.util.EnumMap$EntryIterator$Entry: java.lang.Object getValue()>";
    "(40)<sortpom.wrapper.content.ChildElementSorter: java.lang.Integer lambda$compareTo$3(java.util.function.Function,java.util.Map$Entry)>"->"<sortpom.wrapper.content.ChildElementSorter$lambda_compareTo_2__6: java.lang.Object apply(java.lang.Object)>";
    "(40)<sortpom.wrapper.content.ChildElementSorter: java.lang.Integer lambda$compareTo$3(java.util.function.Function,java.util.Map$Entry)>"->"(49)<sortpom.wrapper.content.ChildElementSorter: int compareTexts(java.lang.String,java.lang.String,java.lang.String)>";
    "(38)<sortpom.wrapper.content.ChildElementSorter: java.lang.String lambda$compareTo$2(sortpom.wrapper.content.ChildElementSorter,java.util.Map$Entry)>"->"<java.util.Hashtable$Entry: java.lang.Object getKey()>";
    "(38)<sortpom.wrapper.content.ChildElementSorter: java.lang.String lambda$compareTo$2(sortpom.wrapper.content.ChildElementSorter,java.util.Map$Entry)>"->"<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry: java.lang.Object getKey()>";
    "(38)<sortpom.wrapper.content.ChildElementSorter: java.lang.String lambda$compareTo$2(sortpom.wrapper.content.ChildElementSorter,java.util.Map$Entry)>"->"<java.lang.ProcessEnvironment$StringEntrySet$2: java.lang.ProcessEnvironment$Variable getKey()>";
    "(38)<sortpom.wrapper.content.ChildElementSorter: java.lang.String lambda$compareTo$2(sortpom.wrapper.content.ChildElementSorter,java.util.Map$Entry)>"->"<java.util.TreeMap$Entry: java.lang.Object getKey()>";
    "(38)<sortpom.wrapper.content.ChildElementSorter: java.lang.String lambda$compareTo$2(sortpom.wrapper.content.ChildElementSorter,java.util.Map$Entry)>"->"<java.util.AbstractMap$SimpleImmutableEntry: java.lang.Object getKey()>";
    "(38)<sortpom.wrapper.content.ChildElementSorter: java.lang.String lambda$compareTo$2(sortpom.wrapper.content.ChildElementSorter,java.util.Map$Entry)>"->"<java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry: java.lang.Object getKey()>";
    "(38)<sortpom.wrapper.content.ChildElementSorter: java.lang.String lambda$compareTo$2(sortpom.wrapper.content.ChildElementSorter,java.util.Map$Entry)>"->"<java.lang.ProcessEnvironment$StringEntry: java.lang.String getKey()>";
    "(38)<sortpom.wrapper.content.ChildElementSorter: java.lang.String lambda$compareTo$2(sortpom.wrapper.content.ChildElementSorter,java.util.Map$Entry)>"->"<java.util.HashMap$Node: java.lang.Object getKey()>";
    "(38)<sortpom.wrapper.content.ChildElementSorter: java.lang.String lambda$compareTo$2(sortpom.wrapper.content.ChildElementSorter,java.util.Map$Entry)>"->"<java.util.IdentityHashMap$EntryIterator$Entry: java.lang.Object getKey()>";
    "(38)<sortpom.wrapper.content.ChildElementSorter: java.lang.String lambda$compareTo$2(sortpom.wrapper.content.ChildElementSorter,java.util.Map$Entry)>"->"<java.util.KeyValueHolder: java.lang.Object getKey()>";
    "(38)<sortpom.wrapper.content.ChildElementSorter: java.lang.String lambda$compareTo$2(sortpom.wrapper.content.ChildElementSorter,java.util.Map$Entry)>"->"<java.util.concurrent.ConcurrentHashMap$MapEntry: java.lang.Object getKey()>";
    "(38)<sortpom.wrapper.content.ChildElementSorter: java.lang.String lambda$compareTo$2(sortpom.wrapper.content.ChildElementSorter,java.util.Map$Entry)>"->"<java.util.AbstractMap$SimpleEntry: java.lang.Object getKey()>";
    "(38)<sortpom.wrapper.content.ChildElementSorter: java.lang.String lambda$compareTo$2(sortpom.wrapper.content.ChildElementSorter,java.util.Map$Entry)>"->"<java.text.AttributeEntry: java.text.AttributedCharacterIterator$Attribute getKey()>";
    "(38)<sortpom.wrapper.content.ChildElementSorter: java.lang.String lambda$compareTo$2(sortpom.wrapper.content.ChildElementSorter,java.util.Map$Entry)>"->"<sun.util.PreHashedMap$2$1$1: java.lang.String getKey()>";
    "(38)<sortpom.wrapper.content.ChildElementSorter: java.lang.String lambda$compareTo$2(sortpom.wrapper.content.ChildElementSorter,java.util.Map$Entry)>"->"<java.util.EnumMap$EntryIterator$Entry: java.lang.Enum getKey()>";
    "<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>"
    "(38)<sortpom.wrapper.content.ChildElementSorter: java.lang.String lambda$compareTo$2(sortpom.wrapper.content.ChildElementSorter,java.util.Map$Entry)>"->"<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>";
    "(29)<sortpom.wrapper.content.ChildElementSorter: void lambda$new$1(org.jdom.Element)>"
    "<java.util.HashMap: java.lang.Object replace(java.lang.Object,java.lang.Object)>"
    "(29)<sortpom.wrapper.content.ChildElementSorter: void lambda$new$1(org.jdom.Element)>"->"<java.util.HashMap: java.lang.Object replace(java.lang.Object,java.lang.Object)>";
    "(26)<sortpom.wrapper.content.ChildElementSorter: void lambda$new$0(java.lang.String)>"
    "<java.lang.String: java.lang.String toUpperCase()>"
    "(26)<sortpom.wrapper.content.ChildElementSorter: void lambda$new$0(java.lang.String)>"->"<java.lang.String: java.lang.String toUpperCase()>";
    "<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>"
    "(26)<sortpom.wrapper.content.ChildElementSorter: void lambda$new$0(java.lang.String)>"->"<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>";
    "(17)<sortpom.wrapper.content.ChildElementSorter: void <clinit>()>"->"(32)<sortpom.wrapper.content.ChildElementSorter: void <init>()>";
    "(53)<sortpom.wrapper.content.Wrapper: java.lang.String toString(java.lang.String)>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(53)<sortpom.wrapper.content.Wrapper: java.lang.String toString(java.lang.String)>"->"<java.lang.StringBuilder: java.lang.String toString()>";
    "(14)<sortpom.wrapper.content.AlphabeticalSortedWrapper: void <init>(org.jdom.Element)>"->"<java.lang.Object: void <init>()>";
    "(30)<sortpom.wrapper.content.AlphabeticalSortedWrapper: boolean isBeforeAlphabeticalSortedWrapper(sortpom.wrapper.content.AlphabeticalSortedWrapper)>"
    "(25)<sortpom.wrapper.content.AlphabeticalSortedWrapper: boolean isBefore(sortpom.wrapper.content.Wrapper)>"->"(30)<sortpom.wrapper.content.AlphabeticalSortedWrapper: boolean isBeforeAlphabeticalSortedWrapper(sortpom.wrapper.content.AlphabeticalSortedWrapper)>";
    "(20)<sortpom.wrapper.content.AlphabeticalSortedWrapper: org.jdom.Element getContent()>"
    "(30)<sortpom.wrapper.content.AlphabeticalSortedWrapper: boolean isBeforeAlphabeticalSortedWrapper(sortpom.wrapper.content.AlphabeticalSortedWrapper)>"->"(20)<sortpom.wrapper.content.AlphabeticalSortedWrapper: org.jdom.Element getContent()>";
    "(30)<sortpom.wrapper.content.AlphabeticalSortedWrapper: boolean isBeforeAlphabeticalSortedWrapper(sortpom.wrapper.content.AlphabeticalSortedWrapper)>"->"(20)<sortpom.wrapper.content.AlphabeticalSortedWrapper: org.jdom.Element getContent()>";
    "(35)<sortpom.wrapper.content.AlphabeticalSortedWrapper: java.lang.String toString()>"
    "(35)<sortpom.wrapper.content.AlphabeticalSortedWrapper: java.lang.String toString()>"->"<java.lang.StringBuilder: void <init>()>";
    "(35)<sortpom.wrapper.content.AlphabeticalSortedWrapper: java.lang.String toString()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(35)<sortpom.wrapper.content.AlphabeticalSortedWrapper: java.lang.String toString()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>";
    "(35)<sortpom.wrapper.content.AlphabeticalSortedWrapper: java.lang.String toString()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(char)>";
    "(35)<sortpom.wrapper.content.AlphabeticalSortedWrapper: java.lang.String toString()>"->"<java.lang.StringBuilder: java.lang.String toString()>";
    "(11)<sortpom.wrapper.content.AlphabeticalSortedWrapper: org.jdom.Content getContent()>"->"(20)<sortpom.wrapper.content.AlphabeticalSortedWrapper: org.jdom.Element getContent()>";
    "(44)<sortpom.wrapper.WrapperFactoryImpl: void <init>(sortpom.util.FileUtil)>"
    "(44)<sortpom.wrapper.WrapperFactoryImpl: void <init>(sortpom.util.FileUtil)>"->"<java.lang.Object: void <init>()>";
    "(14)<sortpom.wrapper.ElementSortOrderMap: void <init>()>"
    "(44)<sortpom.wrapper.WrapperFactoryImpl: void <init>(sortpom.util.FileUtil)>"->"(14)<sortpom.wrapper.ElementSortOrderMap: void <init>()>";
    "(44)<sortpom.wrapper.WrapperFactoryImpl: void <init>(sortpom.util.FileUtil)>"->"(23)<sortpom.wrapper.ElementWrapperCreator: void <init>(sortpom.wrapper.ElementSortOrderMap)>";
    "(15)<sortpom.wrapper.TextWrapperCreator: void <init>()>"
    "(44)<sortpom.wrapper.WrapperFactoryImpl: void <init>(sortpom.util.FileUtil)>"->"(15)<sortpom.wrapper.TextWrapperCreator: void <init>()>";
    "(50)<sortpom.wrapper.WrapperFactoryImpl: void setup(sortpom.parameter.PluginParameters)>"
    "(28)<sortpom.wrapper.ElementWrapperCreator: void setup(sortpom.parameter.PluginParameters)>"
    "(50)<sortpom.wrapper.WrapperFactoryImpl: void setup(sortpom.parameter.PluginParameters)>"->"(28)<sortpom.wrapper.ElementWrapperCreator: void setup(sortpom.parameter.PluginParameters)>";
    "(19)<sortpom.wrapper.TextWrapperCreator: void setup(sortpom.parameter.PluginParameters)>"
    "(50)<sortpom.wrapper.WrapperFactoryImpl: void setup(sortpom.parameter.PluginParameters)>"->"(19)<sortpom.wrapper.TextWrapperCreator: void setup(sortpom.parameter.PluginParameters)>";
    "(56)<sortpom.wrapper.WrapperFactoryImpl: sortpom.wrapper.operation.HierarchyRootWrapper createFromRootElement(org.jdom.Element)>"
    "(63)<sortpom.wrapper.WrapperFactoryImpl: void initializeSortOrderMap()>"
    "(56)<sortpom.wrapper.WrapperFactoryImpl: sortpom.wrapper.operation.HierarchyRootWrapper createFromRootElement(org.jdom.Element)>"->"(63)<sortpom.wrapper.WrapperFactoryImpl: void initializeSortOrderMap()>";
    "(56)<sortpom.wrapper.WrapperFactoryImpl: sortpom.wrapper.operation.HierarchyRootWrapper createFromRootElement(org.jdom.Element)>"->"(97)<sortpom.wrapper.WrapperFactoryImpl: sortpom.wrapper.content.Wrapper create(org.jdom.Content)>";
    "(56)<sortpom.wrapper.WrapperFactoryImpl: sortpom.wrapper.operation.HierarchyRootWrapper createFromRootElement(org.jdom.Element)>"->"(12)<sortpom.wrapper.operation.HierarchyRootWrapper: void <init>(sortpom.wrapper.content.Wrapper)>";
    "(72)<sortpom.wrapper.WrapperFactoryImpl: org.jdom.Document createDocumentFromDefaultSortOrderFile()>"
    "(63)<sortpom.wrapper.WrapperFactoryImpl: void initializeSortOrderMap()>"->"(72)<sortpom.wrapper.WrapperFactoryImpl: org.jdom.Document createDocumentFromDefaultSortOrderFile()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"
    "(63)<sortpom.wrapper.WrapperFactoryImpl: void initializeSortOrderMap()>"->"(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>";
    "<java.lang.Throwable: java.lang.String getMessage()>"
    "(63)<sortpom.wrapper.WrapperFactoryImpl: void initializeSortOrderMap()>"->"<java.lang.Throwable: java.lang.String getMessage()>";
    "<java.nio.charset.MalformedInputException: java.lang.String getMessage()>"
    "(63)<sortpom.wrapper.WrapperFactoryImpl: void initializeSortOrderMap()>"->"<java.nio.charset.MalformedInputException: java.lang.String getMessage()>";
    "<java.util.DuplicateFormatFlagsException: java.lang.String getMessage()>"
    "(63)<sortpom.wrapper.WrapperFactoryImpl: void initializeSortOrderMap()>"->"<java.util.DuplicateFormatFlagsException: java.lang.String getMessage()>";
    "<java.util.MissingFormatWidthException: java.lang.String getMessage()>"
    "(63)<sortpom.wrapper.WrapperFactoryImpl: void initializeSortOrderMap()>"->"<java.util.MissingFormatWidthException: java.lang.String getMessage()>";
    "<java.nio.file.FileSystemException: java.lang.String getMessage()>"
    "(63)<sortpom.wrapper.WrapperFactoryImpl: void initializeSortOrderMap()>"->"<java.nio.file.FileSystemException: java.lang.String getMessage()>";
    "<java.io.WriteAbortedException: java.lang.String getMessage()>"
    "(63)<sortpom.wrapper.WrapperFactoryImpl: void initializeSortOrderMap()>"->"<java.io.WriteAbortedException: java.lang.String getMessage()>";
    "<java.util.FormatFlagsConversionMismatchException: java.lang.String getMessage()>"
    "(63)<sortpom.wrapper.WrapperFactoryImpl: void initializeSortOrderMap()>"->"<java.util.FormatFlagsConversionMismatchException: java.lang.String getMessage()>";
    "<jdk.internal.org.xml.sax.SAXException: java.lang.String getMessage()>"
    "(63)<sortpom.wrapper.WrapperFactoryImpl: void initializeSortOrderMap()>"->"<jdk.internal.org.xml.sax.SAXException: java.lang.String getMessage()>";
    "<java.nio.file.InvalidPathException: java.lang.String getMessage()>"
    "(63)<sortpom.wrapper.WrapperFactoryImpl: void initializeSortOrderMap()>"->"<java.nio.file.InvalidPathException: java.lang.String getMessage()>";
    "<java.util.IllegalFormatWidthException: java.lang.String getMessage()>"
    "(63)<sortpom.wrapper.WrapperFactoryImpl: void initializeSortOrderMap()>"->"<java.util.IllegalFormatWidthException: java.lang.String getMessage()>";
    "<java.util.UnknownFormatFlagsException: java.lang.String getMessage()>"
    "(63)<sortpom.wrapper.WrapperFactoryImpl: void initializeSortOrderMap()>"->"<java.util.UnknownFormatFlagsException: java.lang.String getMessage()>";
    "<java.net.URISyntaxException: java.lang.String getMessage()>"
    "(63)<sortpom.wrapper.WrapperFactoryImpl: void initializeSortOrderMap()>"->"<java.net.URISyntaxException: java.lang.String getMessage()>";
    "<java.util.IllegalFormatPrecisionException: java.lang.String getMessage()>"
    "(63)<sortpom.wrapper.WrapperFactoryImpl: void initializeSortOrderMap()>"->"<java.util.IllegalFormatPrecisionException: java.lang.String getMessage()>";
    "<java.util.regex.PatternSyntaxException: java.lang.String getMessage()>"
    "(63)<sortpom.wrapper.WrapperFactoryImpl: void initializeSortOrderMap()>"->"<java.util.regex.PatternSyntaxException: java.lang.String getMessage()>";
    "<java.util.MissingFormatArgumentException: java.lang.String getMessage()>"
    "(63)<sortpom.wrapper.WrapperFactoryImpl: void initializeSortOrderMap()>"->"<java.util.MissingFormatArgumentException: java.lang.String getMessage()>";
    "<java.io.InvalidClassException: java.lang.String getMessage()>"
    "(63)<sortpom.wrapper.WrapperFactoryImpl: void initializeSortOrderMap()>"->"<java.io.InvalidClassException: java.lang.String getMessage()>";
    "<java.util.IllegalFormatFlagsException: java.lang.String getMessage()>"
    "(63)<sortpom.wrapper.WrapperFactoryImpl: void initializeSortOrderMap()>"->"<java.util.IllegalFormatFlagsException: java.lang.String getMessage()>";
    "<java.util.UnknownFormatConversionException: java.lang.String getMessage()>"
    "(63)<sortpom.wrapper.WrapperFactoryImpl: void initializeSortOrderMap()>"->"<java.util.UnknownFormatConversionException: java.lang.String getMessage()>";
    "<java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>"
    "(63)<sortpom.wrapper.WrapperFactoryImpl: void initializeSortOrderMap()>"->"<java.nio.charset.UnmappableCharacterException: java.lang.String getMessage()>";
    "<java.util.IllegalFormatConversionException: java.lang.String getMessage()>"
    "(63)<sortpom.wrapper.WrapperFactoryImpl: void initializeSortOrderMap()>"->"<java.util.IllegalFormatConversionException: java.lang.String getMessage()>";
    "<java.util.IllegalFormatCodePointException: java.lang.String getMessage()>"
    "(63)<sortpom.wrapper.WrapperFactoryImpl: void initializeSortOrderMap()>"->"<java.util.IllegalFormatCodePointException: java.lang.String getMessage()>";
    "<sun.nio.fs.UnixException: java.lang.String getMessage()>"
    "(63)<sortpom.wrapper.WrapperFactoryImpl: void initializeSortOrderMap()>"->"<sun.nio.fs.UnixException: java.lang.String getMessage()>";
    "(11)<sortpom.exception.FailureException: void <init>(java.lang.String,java.lang.Throwable)>"
    "(63)<sortpom.wrapper.WrapperFactoryImpl: void initializeSortOrderMap()>"->"(11)<sortpom.exception.FailureException: void <init>(java.lang.String,java.lang.Throwable)>";
    "(72)<sortpom.wrapper.WrapperFactoryImpl: org.jdom.Document createDocumentFromDefaultSortOrderFile()>"->"(144)<sortpom.util.FileUtil: java.lang.String getDefaultSortOrderXml()>";
    "<java.io.StringReader: void <init>(java.lang.String)>"
    "(72)<sortpom.wrapper.WrapperFactoryImpl: org.jdom.Document createDocumentFromDefaultSortOrderFile()>"->"<java.io.StringReader: void <init>(java.lang.String)>";
    "<org.jdom.input.SAXBuilder: void <init>()>"
    "(72)<sortpom.wrapper.WrapperFactoryImpl: org.jdom.Document createDocumentFromDefaultSortOrderFile()>"->"<org.jdom.input.SAXBuilder: void <init>()>";
    "<org.jdom.input.SAXBuilder: org.jdom.Document build(java.io.Reader)>"
    "(72)<sortpom.wrapper.WrapperFactoryImpl: org.jdom.Document createDocumentFromDefaultSortOrderFile()>"->"<org.jdom.input.SAXBuilder: org.jdom.Document build(java.io.Reader)>";
    "<java.io.StringReader: void close()>"
    "(72)<sortpom.wrapper.WrapperFactoryImpl: org.jdom.Document createDocumentFromDefaultSortOrderFile()>"->"<java.io.StringReader: void close()>";
    "(72)<sortpom.wrapper.WrapperFactoryImpl: org.jdom.Document createDocumentFromDefaultSortOrderFile()>"->"<java.io.StringReader: void close()>";
    "<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>"
    "(72)<sortpom.wrapper.WrapperFactoryImpl: org.jdom.Document createDocumentFromDefaultSortOrderFile()>"->"<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"(25)<sortpom.wrapper.ElementSortOrderMap: void addElement(org.jdom.Element,int)>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"(115)<sortpom.wrapper.WrapperFactoryImpl: java.util.List castToChildElementList(org.jdom.Element)>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.ArrayList: java.util.Iterator iterator()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.lang.ProcessEnvironment$StringValues$1: boolean hasNext()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.lang.ProcessEnvironment$StringValues$1: java.lang.String next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.concurrent.LinkedBlockingQueue$Itr: boolean hasNext()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.concurrent.LinkedBlockingQueue$Itr: java.lang.Object next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: boolean hasNext()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1: java.util.Map$Entry next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr: boolean hasNext()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr: java.lang.Runnable next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.Arrays$ArrayItr: boolean hasNext()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.Arrays$ArrayItr: java.lang.Object next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.TreeMap$PrivateEntryIterator: boolean hasNext()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.TreeMap$KeyIterator: java.lang.Object next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.WeakHashMap$HashIterator: boolean hasNext()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.WeakHashMap$KeyIterator: java.lang.Object next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.Collections$CheckedMap$CheckedEntrySet$1: boolean hasNext()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.Collections$CheckedMap$CheckedEntrySet$1: java.util.Map$Entry next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.TreeMap$NavigableSubMap$SubMapIterator: boolean hasNext()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.TreeMap$NavigableSubMap$SubMapKeyIterator: java.lang.Object next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter: boolean hasNext()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapValueIterator: java.lang.Object next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.Collections$CheckedCollection$1: boolean hasNext()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.Collections$CheckedCollection$1: java.lang.Object next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.LinkedHashMap$LinkedHashIterator: boolean hasNext()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.LinkedHashMap$LinkedValueIterator: java.lang.Object next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.JumboEnumSet$EnumSetIterator: boolean hasNext()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.JumboEnumSet$EnumSetIterator: java.lang.Enum next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.ImmutableCollections$Set12$1: boolean hasNext()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.ImmutableCollections$Set12$1: java.lang.Object next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.Collections$1: boolean hasNext()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.Collections$1: java.lang.Object next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<sun.util.resources.ParallelListResourceBundle$KeySet$1: boolean hasNext()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<sun.util.resources.ParallelListResourceBundle$KeySet$1: java.lang.String next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.AbstractMap$2$1: boolean hasNext()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.AbstractMap$2$1: java.lang.Object next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.ArrayDeque$DeqIterator: boolean hasNext()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.ArrayDeque$DeqIterator: java.lang.Object next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.Vector$Itr: boolean hasNext()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.Vector$Itr: java.lang.Object next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.concurrent.ConcurrentHashMap$BaseIterator: boolean hasNext()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.concurrent.ConcurrentHashMap$ValueIterator: java.lang.Object next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.LinkedHashMap$LinkedEntryIterator: java.util.Map$Entry next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<sun.security.jca.ProviderList$ServiceList$1: boolean hasNext()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<sun.security.jca.ProviderList$ServiceList$1: java.security.Provider$Service next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.lang.ProcessEnvironment$StringKeySet$1: boolean hasNext()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.lang.ProcessEnvironment$StringKeySet$1: java.lang.String next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.TreeMap$EntryIterator: java.util.Map$Entry next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.EnumMap$EnumMapIterator: boolean hasNext()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.EnumMap$KeyIterator: java.lang.Enum next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.concurrent.ConcurrentHashMap$EntryIterator: java.util.Map$Entry next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<javax.security.auth.Subject$SecureSet$1: boolean hasNext()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<javax.security.auth.Subject$SecureSet$1: java.lang.Object next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.Collections$EmptyIterator: boolean hasNext()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.Collections$EmptyIterator: java.lang.Object next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator: java.lang.Object next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.concurrent.CopyOnWriteArrayList$COWIterator: boolean hasNext()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.concurrent.CopyOnWriteArrayList$COWIterator: java.lang.Object next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<sun.util.PreHashedMap$1$1: boolean hasNext()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<sun.util.PreHashedMap$1$1: java.lang.String next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.lang.invoke.AbstractConstantGroup$AsIterator: boolean hasNext()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.lang.invoke.AbstractConstantGroup$AsIterator: java.lang.Object next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.TreeMap$NavigableSubMap$SubMapEntryIterator: java.util.Map$Entry next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.concurrent.ConcurrentSkipListMap$Iter: boolean hasNext()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.concurrent.ConcurrentSkipListMap$EntryIterator: java.util.Map$Entry next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.HashMap$HashIterator: boolean hasNext()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.HashMap$KeyIterator: java.lang.Object next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.ImmutableCollections$SetN$SetNIterator: boolean hasNext()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.ImmutableCollections$SetN$SetNIterator: java.lang.Object next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.IdentityHashMap$IdentityHashMapIterator: boolean hasNext()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.IdentityHashMap$EntryIterator: java.util.Map$Entry next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.WeakHashMap$EntryIterator: java.util.Map$Entry next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.AbstractMap$1$1: boolean hasNext()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.AbstractMap$1$1: java.lang.Object next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.concurrent.ConcurrentSkipListMap$ValueIterator: java.lang.Object next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.concurrent.LinkedBlockingDeque$AbstractItr: boolean hasNext()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.concurrent.LinkedBlockingDeque$AbstractItr: java.lang.Object next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.TreeMap$ValueIterator: java.lang.Object next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: boolean hasNext()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator: java.lang.Object next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.ArrayList$Itr: boolean hasNext()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.ArrayList$Itr: java.lang.Object next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.IdentityHashMap$KeyIterator: java.lang.Object next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.ImmutableCollections$ListItr: boolean hasNext()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.ImmutableCollections$ListItr: java.lang.Object next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.WeakHashMap$ValueIterator: java.lang.Object next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.concurrent.ArrayBlockingQueue$Itr: boolean hasNext()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.concurrent.ArrayBlockingQueue$Itr: java.lang.Object next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.EnumMap$ValueIterator: java.lang.Object next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.IdentityHashMap$ValueIterator: java.lang.Object next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.lang.ProcessEnvironment$StringEntrySet$1: boolean hasNext()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.lang.ProcessEnvironment$StringEntrySet$1: java.util.Map$Entry next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.Hashtable$Enumerator: boolean hasNext()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.Hashtable$Enumerator: java.lang.Object next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapKeyIterator: java.lang.Object next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.LinkedHashMap$LinkedKeyIterator: java.lang.Object next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.HashMap$ValueIterator: java.lang.Object next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.concurrent.ConcurrentHashMap$KeyIterator: java.lang.Object next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.Collections$UnmodifiableCollection$1: boolean hasNext()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.Collections$UnmodifiableCollection$1: java.lang.Object next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.ImmutableCollections$MapN$MapNIterator: boolean hasNext()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.ImmutableCollections$MapN$MapNIterator: java.util.Map$Entry next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.concurrent.ConcurrentLinkedQueue$Itr: boolean hasNext()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.concurrent.ConcurrentLinkedQueue$Itr: java.lang.Object next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.HashMap$EntryIterator: java.util.Map$Entry next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.concurrent.ConcurrentSkipListMap$KeyIterator: java.lang.Object next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapEntryIterator: java.util.Map$Entry next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator: java.util.Map$Entry next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.EnumMap$EntryIterator: java.util.Map$Entry next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.RegularEnumSet$EnumSetIterator: boolean hasNext()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<java.util.RegularEnumSet$EnumSetIterator: java.lang.Enum next()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<sun.util.PreHashedMap$2$1: boolean hasNext()>";
    "(83)<sortpom.wrapper.WrapperFactoryImpl: void addElementsToSortOrderMap(org.jdom.Element,int)>"->"<sun.util.PreHashedMap$2$1: java.util.Map$Entry next()>";
    "(97)<sortpom.wrapper.WrapperFactoryImpl: sortpom.wrapper.content.Wrapper create(org.jdom.Content)>"->"(35)<sortpom.wrapper.ElementWrapperCreator: sortpom.wrapper.content.Wrapper createWrapper(org.jdom.Element)>";
    "(97)<sortpom.wrapper.WrapperFactoryImpl: sortpom.wrapper.content.Wrapper create(org.jdom.Content)>"->"(22)<sortpom.wrapper.content.UnsortedWrapper: void <init>(org.jdom.Content)>";
    "(97)<sortpom.wrapper.WrapperFactoryImpl: sortpom.wrapper.content.Wrapper create(org.jdom.Content)>"->"(23)<sortpom.wrapper.TextWrapperCreator: sortpom.wrapper.content.Wrapper createWrapper(org.jdom.Text)>";
    "(97)<sortpom.wrapper.WrapperFactoryImpl: sortpom.wrapper.content.Wrapper create(org.jdom.Content)>"->"(22)<sortpom.wrapper.content.UnsortedWrapper: void <init>(org.jdom.Content)>";
    "(115)<sortpom.wrapper.WrapperFactoryImpl: java.util.List castToChildElementList(org.jdom.Element)>"->"<java.util.ArrayList: void <init>(java.util.Collection)>";
    "(18)<sortpom.wrapper.ElementUtil: java.lang.String getDeepName(org.jdom.Element)>"->"<java.lang.StringBuilder: void <init>()>";
    "(18)<sortpom.wrapper.ElementUtil: java.lang.String getDeepName(org.jdom.Element)>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(18)<sortpom.wrapper.ElementUtil: java.lang.String getDeepName(org.jdom.Element)>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(char)>";
    "(18)<sortpom.wrapper.ElementUtil: java.lang.String getDeepName(org.jdom.Element)>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(18)<sortpom.wrapper.ElementUtil: java.lang.String getDeepName(org.jdom.Element)>"->"<java.lang.StringBuilder: java.lang.String toString()>";
    "(15)<sortpom.wrapper.TextWrapperCreator: void <init>()>"->"<java.lang.Object: void <init>()>";
    "(32)<sortpom.wrapper.TextWrapperCreator: boolean isSingleNewLine(org.jdom.Text)>"
    "(23)<sortpom.wrapper.TextWrapperCreator: sortpom.wrapper.content.Wrapper createWrapper(org.jdom.Text)>"->"(32)<sortpom.wrapper.TextWrapperCreator: boolean isSingleNewLine(org.jdom.Text)>";
    "(36)<sortpom.wrapper.TextWrapperCreator: boolean isBlankLineOrLines(org.jdom.Text)>"
    "(23)<sortpom.wrapper.TextWrapperCreator: sortpom.wrapper.content.Wrapper createWrapper(org.jdom.Text)>"->"(36)<sortpom.wrapper.TextWrapperCreator: boolean isBlankLineOrLines(org.jdom.Text)>";
    "(13)<sortpom.jdomcontent.NewlineText: void <init>()>"
    "(23)<sortpom.wrapper.TextWrapperCreator: sortpom.wrapper.content.Wrapper createWrapper(org.jdom.Text)>"->"(13)<sortpom.jdomcontent.NewlineText: void <init>()>";
    "(23)<sortpom.wrapper.TextWrapperCreator: sortpom.wrapper.content.Wrapper createWrapper(org.jdom.Text)>"->"(22)<sortpom.wrapper.content.UnsortedWrapper: void <init>(org.jdom.Content)>";
    "(23)<sortpom.wrapper.TextWrapperCreator: sortpom.wrapper.content.Wrapper createWrapper(org.jdom.Text)>"->"(22)<sortpom.wrapper.content.UnsortedWrapper: void <init>(org.jdom.Content)>";
    "(14)<sortpom.wrapper.ElementSortOrderMap: void <init>()>"->"<java.lang.Object: void <init>()>";
    "<java.util.HashMap: void <init>()>"
    "(14)<sortpom.wrapper.ElementSortOrderMap: void <init>()>"->"<java.util.HashMap: void <init>()>";
    "(25)<sortpom.wrapper.ElementSortOrderMap: void addElement(org.jdom.Element,int)>"->"<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>";
    "<java.util.HashMap: boolean containsKey(java.lang.Object)>"
    "(32)<sortpom.wrapper.ElementSortOrderMap: boolean containsElement(org.jdom.Element)>"->"<java.util.HashMap: boolean containsKey(java.lang.Object)>";
    "<java.util.HashMap: java.lang.Object get(java.lang.Object)>"
    "(38)<sortpom.wrapper.ElementSortOrderMap: int getSortOrder(org.jdom.Element)>"->"<java.util.HashMap: java.lang.Object get(java.lang.Object)>";
    "(38)<sortpom.wrapper.ElementSortOrderMap: int getSortOrder(org.jdom.Element)>"->"<java.lang.Integer: int intValue()>";
    "(19)<sortpom.parameter.IndentCharacters: void <init>(int)>"
    "(19)<sortpom.parameter.IndentCharacters: void <init>(int)>"->"<java.lang.Object: void <init>()>";
    "(29)<sortpom.parameter.IndentCharacters: java.lang.String getIndentCharacters()>"->"<java.lang.StringBuilder: void <init>()>";
    "(29)<sortpom.parameter.IndentCharacters: java.lang.String getIndentCharacters()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>"
    "(29)<sortpom.parameter.IndentCharacters: java.lang.String getIndentCharacters()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>";
    "(29)<sortpom.parameter.IndentCharacters: java.lang.String getIndentCharacters()>"->"<java.lang.StringBuilder: java.lang.String toString()>";
    "(15)<sortpom.exception.FailureException: void <init>(java.lang.String)>"
    "(29)<sortpom.parameter.IndentCharacters: java.lang.String getIndentCharacters()>"->"(15)<sortpom.exception.FailureException: void <init>(java.lang.String)>";
    "<java.lang.String: void <init>(char[])>"
    "(29)<sortpom.parameter.IndentCharacters: java.lang.String getIndentCharacters()>"->"<java.lang.String: void <init>(char[])>";
    "(21)<sortpom.parameter.LineSeparatorUtil: void <init>(java.lang.String)>"->"<java.lang.Object: void <init>()>";
    "(31)<sortpom.parameter.LineSeparatorUtil: boolean isIllegalString()>"
    "(21)<sortpom.parameter.LineSeparatorUtil: void <init>(java.lang.String)>"->"(31)<sortpom.parameter.LineSeparatorUtil: boolean isIllegalString()>";
    "<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>"
    "(21)<sortpom.parameter.LineSeparatorUtil: void <init>(java.lang.String)>"->"<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>";
    "(21)<sortpom.parameter.LineSeparatorUtil: void <init>(java.lang.String)>"->"<java.lang.StringBuilder: void <init>()>";
    "(21)<sortpom.parameter.LineSeparatorUtil: void <init>(java.lang.String)>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(21)<sortpom.parameter.LineSeparatorUtil: void <init>(java.lang.String)>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(21)<sortpom.parameter.LineSeparatorUtil: void <init>(java.lang.String)>"->"<java.lang.StringBuilder: java.lang.String toString()>";
    "(21)<sortpom.parameter.LineSeparatorUtil: void <init>(java.lang.String)>"->"(15)<sortpom.exception.FailureException: void <init>(java.lang.String)>";
    "(31)<sortpom.parameter.LineSeparatorUtil: boolean isIllegalString()>"->"<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>";
    "(31)<sortpom.parameter.LineSeparatorUtil: boolean isIllegalString()>"->"<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>";
    "(31)<sortpom.parameter.LineSeparatorUtil: boolean isIllegalString()>"->"<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>";
    "(80)<sortpom.parameter.PluginParameters$Builder: void <init>()>"
    "(80)<sortpom.parameter.PluginParameters$Builder: void <init>()>"->"<java.lang.Object: void <init>()>";
    "(108)<sortpom.parameter.PluginParameters$Builder: sortpom.parameter.PluginParameters$Builder setFormatting(java.lang.String,boolean,boolean)>"
    "(108)<sortpom.parameter.PluginParameters$Builder: sortpom.parameter.PluginParameters$Builder setFormatting(java.lang.String,boolean,boolean)>"->"(21)<sortpom.parameter.LineSeparatorUtil: void <init>(java.lang.String)>";
    "(116)<sortpom.parameter.PluginParameters$Builder: sortpom.parameter.PluginParameters$Builder setIndent(int,boolean)>"
    "(116)<sortpom.parameter.PluginParameters$Builder: sortpom.parameter.PluginParameters$Builder setIndent(int,boolean)>"->"(19)<sortpom.parameter.IndentCharacters: void <init>(int)>";
    "(116)<sortpom.parameter.PluginParameters$Builder: sortpom.parameter.PluginParameters$Builder setIndent(int,boolean)>"->"(29)<sortpom.parameter.IndentCharacters: java.lang.String getIndentCharacters()>";
    "(131)<sortpom.parameter.PluginParameters$Builder: sortpom.parameter.PluginParameters$Builder setSortEntities(java.lang.String,java.lang.String,boolean,boolean)>"
    "(23)<sortpom.parameter.DependencySortOrder: void <init>(java.lang.String)>"
    "(131)<sortpom.parameter.PluginParameters$Builder: sortpom.parameter.PluginParameters$Builder setSortEntities(java.lang.String,java.lang.String,boolean,boolean)>"->"(23)<sortpom.parameter.DependencySortOrder: void <init>(java.lang.String)>";
    "(131)<sortpom.parameter.PluginParameters$Builder: sortpom.parameter.PluginParameters$Builder setSortEntities(java.lang.String,java.lang.String,boolean,boolean)>"->"(23)<sortpom.parameter.DependencySortOrder: void <init>(java.lang.String)>";
    "(152)<sortpom.parameter.PluginParameters$Builder: sortpom.parameter.PluginParameters build()>"
    "(6)<sortpom.parameter.PluginParameters: void <init>(java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,sortpom.parameter.LineSeparatorUtil,boolean,boolean,java.lang.String,boolean,java.lang.String,java.lang.String,sortpom.parameter.DependencySortOrder,sortpom.parameter.DependencySortOrder,boolean,boolean,sortpom.parameter.VerifyFailType,boolean,boolean,sortpom.parameter.PluginParameters$1)>"
    "(152)<sortpom.parameter.PluginParameters$Builder: sortpom.parameter.PluginParameters build()>"->"(6)<sortpom.parameter.PluginParameters: void <init>(java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,sortpom.parameter.LineSeparatorUtil,boolean,boolean,java.lang.String,boolean,java.lang.String,java.lang.String,sortpom.parameter.DependencySortOrder,sortpom.parameter.DependencySortOrder,boolean,boolean,sortpom.parameter.VerifyFailType,boolean,boolean,sortpom.parameter.PluginParameters$1)>";
    "(59)<sortpom.parameter.PluginParameters$Builder: void <init>(sortpom.parameter.PluginParameters$1)>"
    "(59)<sortpom.parameter.PluginParameters$Builder: void <init>(sortpom.parameter.PluginParameters$1)>"->"(80)<sortpom.parameter.PluginParameters$Builder: void <init>()>";
    "(9)<sortpom.parameter.VerifyFailType: sortpom.parameter.VerifyFailType[] values()>"->"<java.lang.Object: java.lang.Object clone()>";
    "(9)<sortpom.parameter.VerifyFailType: void <init>(java.lang.String,int)>"
    "(9)<sortpom.parameter.VerifyFailType: void <init>(java.lang.String,int)>"->"<java.lang.Enum: void <init>(java.lang.String,int)>";
    "(13)<sortpom.parameter.VerifyFailType: sortpom.parameter.VerifyFailType fromString(java.lang.String)>"->"(15)<sortpom.exception.FailureException: void <init>(java.lang.String)>";
    "(13)<sortpom.parameter.VerifyFailType: sortpom.parameter.VerifyFailType fromString(java.lang.String)>"->"<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>";
    "(13)<sortpom.parameter.VerifyFailType: sortpom.parameter.VerifyFailType fromString(java.lang.String)>"->"<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>";
    "(13)<sortpom.parameter.VerifyFailType: sortpom.parameter.VerifyFailType fromString(java.lang.String)>"->"<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>";
    "(13)<sortpom.parameter.VerifyFailType: sortpom.parameter.VerifyFailType fromString(java.lang.String)>"->"<java.lang.StringBuilder: void <init>()>";
    "(13)<sortpom.parameter.VerifyFailType: sortpom.parameter.VerifyFailType fromString(java.lang.String)>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(13)<sortpom.parameter.VerifyFailType: sortpom.parameter.VerifyFailType fromString(java.lang.String)>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(13)<sortpom.parameter.VerifyFailType: sortpom.parameter.VerifyFailType fromString(java.lang.String)>"->"<java.lang.StringBuilder: java.lang.String toString()>";
    "(13)<sortpom.parameter.VerifyFailType: sortpom.parameter.VerifyFailType fromString(java.lang.String)>"->"(15)<sortpom.exception.FailureException: void <init>(java.lang.String)>";
    "(11)<sortpom.parameter.VerifyFailType: void <clinit>()>"->"(9)<sortpom.parameter.VerifyFailType: void <init>(java.lang.String,int)>";
    "(11)<sortpom.parameter.VerifyFailType: void <clinit>()>"->"(9)<sortpom.parameter.VerifyFailType: void <init>(java.lang.String,int)>";
    "(11)<sortpom.parameter.VerifyFailType: void <clinit>()>"->"(9)<sortpom.parameter.VerifyFailType: void <init>(java.lang.String,int)>";
    "(23)<sortpom.parameter.DependencySortOrder: void <init>(java.lang.String)>"->"<java.lang.Object: void <init>()>";
    "(35)<sortpom.parameter.DependencySortOrder: java.util.Collection getChildElementNames()>"->"(42)<sortpom.parameter.DependencySortOrder: java.lang.String[] parseChildElementNameList()>";
    "(62)<sortpom.parameter.DependencySortOrder: boolean isDeprecatedValueFalse()>"
    "(42)<sortpom.parameter.DependencySortOrder: java.lang.String[] parseChildElementNameList()>"->"(62)<sortpom.parameter.DependencySortOrder: boolean isDeprecatedValueFalse()>";
    "(57)<sortpom.parameter.DependencySortOrder: boolean isDeprecatedValueTrue()>"
    "(42)<sortpom.parameter.DependencySortOrder: java.lang.String[] parseChildElementNameList()>"->"(57)<sortpom.parameter.DependencySortOrder: boolean isDeprecatedValueTrue()>";
    "(42)<sortpom.parameter.DependencySortOrder: java.lang.String[] parseChildElementNameList()>"->"<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>";
    "(42)<sortpom.parameter.DependencySortOrder: java.lang.String[] parseChildElementNameList()>"->"<java.lang.String: boolean isEmpty()>";
    "<java.lang.String: java.lang.String[] split(java.lang.String)>"
    "(42)<sortpom.parameter.DependencySortOrder: java.lang.String[] parseChildElementNameList()>"->"<java.lang.String: java.lang.String[] split(java.lang.String)>";
    "(57)<sortpom.parameter.DependencySortOrder: boolean isDeprecatedValueTrue()>"->"<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>";
    "(62)<sortpom.parameter.DependencySortOrder: boolean isDeprecatedValueFalse()>"->"<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>";
    "(67)<sortpom.parameter.DependencySortOrder: boolean isNoSorting()>"->"(35)<sortpom.parameter.DependencySortOrder: java.util.Collection getChildElementNames()>";
    "<java.util.Collections$UnmodifiableCollection: boolean isEmpty()>"
    "(67)<sortpom.parameter.DependencySortOrder: boolean isNoSorting()>"->"<java.util.Collections$UnmodifiableCollection: boolean isEmpty()>";
    "(72)<sortpom.parameter.DependencySortOrder: java.lang.String toString()>"
    "(72)<sortpom.parameter.DependencySortOrder: java.lang.String toString()>"->"<java.lang.StringBuilder: void <init>()>";
    "(72)<sortpom.parameter.DependencySortOrder: java.lang.String toString()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(72)<sortpom.parameter.DependencySortOrder: java.lang.String toString()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>";
    "(72)<sortpom.parameter.DependencySortOrder: java.lang.String toString()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(char)>";
    "(72)<sortpom.parameter.DependencySortOrder: java.lang.String toString()>"->"<java.lang.StringBuilder: java.lang.String toString()>";
    "(31)<sortpom.parameter.PluginParameters: void <init>(java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,sortpom.parameter.LineSeparatorUtil,boolean,boolean,java.lang.String,boolean,java.lang.String,java.lang.String,sortpom.parameter.DependencySortOrder,sortpom.parameter.DependencySortOrder,boolean,boolean,sortpom.parameter.VerifyFailType,boolean,boolean)>"
    "(31)<sortpom.parameter.PluginParameters: void <init>(java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,sortpom.parameter.LineSeparatorUtil,boolean,boolean,java.lang.String,boolean,java.lang.String,java.lang.String,sortpom.parameter.DependencySortOrder,sortpom.parameter.DependencySortOrder,boolean,boolean,sortpom.parameter.VerifyFailType,boolean,boolean)>"->"<java.lang.Object: void <init>()>";
    "(55)<sortpom.parameter.PluginParameters: sortpom.parameter.PluginParameters$Builder builder()>"
    "(55)<sortpom.parameter.PluginParameters: sortpom.parameter.PluginParameters$Builder builder()>"->"(59)<sortpom.parameter.PluginParameters$Builder: void <init>(sortpom.parameter.PluginParameters$1)>";
    "(6)<sortpom.parameter.PluginParameters: void <init>(java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,sortpom.parameter.LineSeparatorUtil,boolean,boolean,java.lang.String,boolean,java.lang.String,java.lang.String,sortpom.parameter.DependencySortOrder,sortpom.parameter.DependencySortOrder,boolean,boolean,sortpom.parameter.VerifyFailType,boolean,boolean,sortpom.parameter.PluginParameters$1)>"->"(31)<sortpom.parameter.PluginParameters: void <init>(java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,sortpom.parameter.LineSeparatorUtil,boolean,boolean,java.lang.String,boolean,java.lang.String,java.lang.String,sortpom.parameter.DependencySortOrder,sortpom.parameter.DependencySortOrder,boolean,boolean,sortpom.parameter.VerifyFailType,boolean,boolean)>";
    "<java.lang.Enum: int ordinal()>"
    "(167)<sortpom.SortPomImpl$1: void <clinit>()>"->"<java.lang.Enum: int ordinal()>";
    "(167)<sortpom.SortPomImpl$1: void <clinit>()>"->"<java.lang.Enum: int ordinal()>";
    "(167)<sortpom.SortPomImpl$1: void <clinit>()>"->"<java.lang.Enum: int ordinal()>";
    "(48)<sortpom.SortPomImpl: void <init>()>"
    "(19)<sortpom.util.FileUtil: void <init>()>"
    "(48)<sortpom.SortPomImpl: void <init>()>"->"(19)<sortpom.util.FileUtil: void <init>()>";
    "(48)<sortpom.SortPomImpl: void <init>()>"->"(44)<sortpom.wrapper.WrapperFactoryImpl: void <init>(sortpom.util.FileUtil)>";
    "(26)<sortpom.XmlProcessor: void <init>(sortpom.wrapper.operation.WrapperFactory)>"
    "(48)<sortpom.SortPomImpl: void <init>()>"->"(26)<sortpom.XmlProcessor: void <init>(sortpom.wrapper.operation.WrapperFactory)>";
    "(12)<sortpom.processinstruction.XmlProcessingInstructionParser: void <init>()>"
    "(48)<sortpom.SortPomImpl: void <init>()>"->"(12)<sortpom.processinstruction.XmlProcessingInstructionParser: void <init>()>";
    "(19)<sortpom.XmlOutputGenerator: void <init>()>"
    "(48)<sortpom.SortPomImpl: void <init>()>"->"(19)<sortpom.XmlOutputGenerator: void <init>()>";
    "(57)<sortpom.SortPomImpl: void setup(sortpom.logger.SortPomLogger,sortpom.parameter.PluginParameters)>"
    "(37)<sortpom.util.FileUtil: void setup(sortpom.parameter.PluginParameters)>"
    "(57)<sortpom.SortPomImpl: void setup(sortpom.logger.SortPomLogger,sortpom.parameter.PluginParameters)>"->"(37)<sortpom.util.FileUtil: void setup(sortpom.parameter.PluginParameters)>";
    "(57)<sortpom.SortPomImpl: void setup(sortpom.logger.SortPomLogger,sortpom.parameter.PluginParameters)>"->"(50)<sortpom.wrapper.WrapperFactoryImpl: void setup(sortpom.parameter.PluginParameters)>";
    "(19)<sortpom.processinstruction.XmlProcessingInstructionParser: void setup(sortpom.logger.SortPomLogger)>"
    "(57)<sortpom.SortPomImpl: void setup(sortpom.logger.SortPomLogger,sortpom.parameter.PluginParameters)>"->"(19)<sortpom.processinstruction.XmlProcessingInstructionParser: void setup(sortpom.logger.SortPomLogger)>";
    "(28)<sortpom.XmlOutputGenerator: void setup(sortpom.parameter.PluginParameters)>"
    "(57)<sortpom.SortPomImpl: void setup(sortpom.logger.SortPomLogger,sortpom.parameter.PluginParameters)>"->"(28)<sortpom.XmlOutputGenerator: void setup(sortpom.parameter.PluginParameters)>";
    "(74)<sortpom.SortPomImpl: void warnAboutDeprecatedArguments(sortpom.logger.SortPomLogger,sortpom.parameter.PluginParameters)>"
    "(74)<sortpom.SortPomImpl: void warnAboutDeprecatedArguments(sortpom.logger.SortPomLogger,sortpom.parameter.PluginParameters)>"->"(57)<sortpom.parameter.DependencySortOrder: boolean isDeprecatedValueTrue()>";
    "(74)<sortpom.SortPomImpl: void warnAboutDeprecatedArguments(sortpom.logger.SortPomLogger,sortpom.parameter.PluginParameters)>"->"(62)<sortpom.parameter.DependencySortOrder: boolean isDeprecatedValueFalse()>";
    "(74)<sortpom.SortPomImpl: void warnAboutDeprecatedArguments(sortpom.logger.SortPomLogger,sortpom.parameter.PluginParameters)>"->"(57)<sortpom.parameter.DependencySortOrder: boolean isDeprecatedValueTrue()>";
    "(74)<sortpom.SortPomImpl: void warnAboutDeprecatedArguments(sortpom.logger.SortPomLogger,sortpom.parameter.PluginParameters)>"->"(62)<sortpom.parameter.DependencySortOrder: boolean isDeprecatedValueFalse()>";
    "(92)<sortpom.SortPomImpl: void sortPom()>"
    "(92)<sortpom.SortPomImpl: void sortPom()>"->"<java.lang.StringBuilder: void <init>()>";
    "(92)<sortpom.SortPomImpl: void sortPom()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(92)<sortpom.SortPomImpl: void sortPom()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(92)<sortpom.SortPomImpl: void sortPom()>"->"<java.lang.StringBuilder: java.lang.String toString()>";
    "(92)<sortpom.SortPomImpl: void sortPom()>"->"(83)<sortpom.util.FileUtil: java.lang.String getPomFileContent()>";
    "(24)<sortpom.processinstruction.XmlProcessingInstructionParser: void scanForIgnoredSections(java.lang.String)>"
    "(112)<sortpom.SortPomImpl: java.lang.String sortXml(java.lang.String)>"->"(24)<sortpom.processinstruction.XmlProcessingInstructionParser: void scanForIgnoredSections(java.lang.String)>";
    "(40)<sortpom.processinstruction.XmlProcessingInstructionParser: java.lang.String replaceIgnoredSections()>"
    "(112)<sortpom.SortPomImpl: java.lang.String sortXml(java.lang.String)>"->"(40)<sortpom.processinstruction.XmlProcessingInstructionParser: java.lang.String replaceIgnoredSections()>";
    "(45)<sortpom.XmlProcessor: void sortXml()>"
    "(112)<sortpom.SortPomImpl: java.lang.String sortXml(java.lang.String)>"->"(45)<sortpom.XmlProcessor: void sortXml()>";
    "(60)<sortpom.XmlProcessor: org.jdom.Document getNewDocument()>"
    "(112)<sortpom.SortPomImpl: java.lang.String sortXml(java.lang.String)>"->"(60)<sortpom.XmlProcessor: org.jdom.Document getNewDocument()>";
    "(41)<sortpom.XmlOutputGenerator: java.lang.String getSortedXml(org.jdom.Document)>"
    "(112)<sortpom.SortPomImpl: java.lang.String sortXml(java.lang.String)>"->"(41)<sortpom.XmlOutputGenerator: java.lang.String getSortedXml(org.jdom.Document)>";
    "(35)<sortpom.processinstruction.XmlProcessingInstructionParser: boolean existsIgnoredSections()>"
    "(112)<sortpom.SortPomImpl: java.lang.String sortXml(java.lang.String)>"->"(35)<sortpom.processinstruction.XmlProcessingInstructionParser: boolean existsIgnoredSections()>";
    "(48)<sortpom.processinstruction.XmlProcessingInstructionParser: java.lang.String revertIgnoredSections(java.lang.String)>"
    "(112)<sortpom.SortPomImpl: java.lang.String sortXml(java.lang.String)>"->"(48)<sortpom.processinstruction.XmlProcessingInstructionParser: java.lang.String revertIgnoredSections(java.lang.String)>";
    "(127)<sortpom.SortPomImpl: boolean pomFileIsSorted(java.lang.String,java.lang.String)>"
    "(127)<sortpom.SortPomImpl: boolean pomFileIsSorted(java.lang.String,java.lang.String)>"->"<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>";
    "(127)<sortpom.SortPomImpl: boolean pomFileIsSorted(java.lang.String,java.lang.String)>"->"<java.lang.String: boolean equals(java.lang.Object)>";
    "(138)<sortpom.SortPomImpl: void createBackupFile()>"->"<java.lang.String: int length()>";
    "(138)<sortpom.SortPomImpl: void createBackupFile()>"->"(15)<sortpom.exception.FailureException: void <init>(java.lang.String)>";
    "(50)<sortpom.util.FileUtil: void backupFile()>"
    "(138)<sortpom.SortPomImpl: void createBackupFile()>"->"(50)<sortpom.util.FileUtil: void backupFile()>";
    "(154)<sortpom.SortPomImpl: void saveSortedPomFile(java.lang.String)>"
    "(114)<sortpom.util.FileUtil: void savePomFile(java.lang.String)>"
    "(154)<sortpom.SortPomImpl: void saveSortedPomFile(java.lang.String)>"->"(114)<sortpom.util.FileUtil: void savePomFile(java.lang.String)>";
    "(154)<sortpom.SortPomImpl: void saveSortedPomFile(java.lang.String)>"->"<java.lang.StringBuilder: void <init>()>";
    "(154)<sortpom.SortPomImpl: void saveSortedPomFile(java.lang.String)>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(154)<sortpom.SortPomImpl: void saveSortedPomFile(java.lang.String)>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(154)<sortpom.SortPomImpl: void saveSortedPomFile(java.lang.String)>"->"<java.lang.StringBuilder: java.lang.String toString()>";
    "(162)<sortpom.SortPomImpl: void verifyPom()>"->"<java.lang.StringBuilder: void <init>()>";
    "(162)<sortpom.SortPomImpl: void verifyPom()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(162)<sortpom.SortPomImpl: void verifyPom()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(162)<sortpom.SortPomImpl: void verifyPom()>"->"<java.lang.StringBuilder: java.lang.String toString()>";
    "(162)<sortpom.SortPomImpl: void verifyPom()>"->"(44)<sortpom.util.XmlOrderedResult: boolean isOrdered()>";
    "(49)<sortpom.util.XmlOrderedResult: java.lang.String getErrorMessage()>"
    "(162)<sortpom.SortPomImpl: void verifyPom()>"->"(49)<sortpom.util.XmlOrderedResult: java.lang.String getErrorMessage()>";
    "(162)<sortpom.SortPomImpl: void verifyPom()>"->"(49)<sortpom.util.XmlOrderedResult: java.lang.String getErrorMessage()>";
    "(162)<sortpom.SortPomImpl: void verifyPom()>"->"(49)<sortpom.util.XmlOrderedResult: java.lang.String getErrorMessage()>";
    "(162)<sortpom.SortPomImpl: void verifyPom()>"->"<java.lang.Enum: int ordinal()>";
    "(162)<sortpom.SortPomImpl: void verifyPom()>"->"(15)<sortpom.exception.FailureException: void <init>(java.lang.String)>";
    "(189)<sortpom.SortPomImpl: void saveViolationFile(sortpom.util.XmlOrderedResult)>"->"<java.lang.StringBuilder: void <init>()>";
    "(189)<sortpom.SortPomImpl: void saveViolationFile(sortpom.util.XmlOrderedResult)>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "<java.io.File: void <init>(java.lang.String)>"
    "(189)<sortpom.SortPomImpl: void saveViolationFile(sortpom.util.XmlOrderedResult)>"->"<java.io.File: void <init>(java.lang.String)>";
    "<java.io.File: java.lang.String getAbsolutePath()>"
    "(189)<sortpom.SortPomImpl: void saveViolationFile(sortpom.util.XmlOrderedResult)>"->"<java.io.File: java.lang.String getAbsolutePath()>";
    "(189)<sortpom.SortPomImpl: void saveViolationFile(sortpom.util.XmlOrderedResult)>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(189)<sortpom.SortPomImpl: void saveViolationFile(sortpom.util.XmlOrderedResult)>"->"<java.lang.StringBuilder: java.lang.String toString()>";
    "(14)<sortpom.ViolationXmlProcessor: void <init>()>"
    "(189)<sortpom.SortPomImpl: void saveViolationFile(sortpom.util.XmlOrderedResult)>"->"(14)<sortpom.ViolationXmlProcessor: void <init>()>";
    "(189)<sortpom.SortPomImpl: void saveViolationFile(sortpom.util.XmlOrderedResult)>"->"(49)<sortpom.util.XmlOrderedResult: java.lang.String getErrorMessage()>";
    "(16)<sortpom.ViolationXmlProcessor: org.jdom.Document createViolationXmlContent(java.io.File,java.lang.String)>"
    "(189)<sortpom.SortPomImpl: void saveViolationFile(sortpom.util.XmlOrderedResult)>"->"(16)<sortpom.ViolationXmlProcessor: org.jdom.Document createViolationXmlContent(java.io.File,java.lang.String)>";
    "(189)<sortpom.SortPomImpl: void saveViolationFile(sortpom.util.XmlOrderedResult)>"->"(41)<sortpom.XmlOutputGenerator: java.lang.String getSortedXml(org.jdom.Document)>";
    "(189)<sortpom.SortPomImpl: void saveViolationFile(sortpom.util.XmlOrderedResult)>"->"(104)<sortpom.util.FileUtil: void saveViolationFile(java.lang.String)>";
    "(199)<sortpom.SortPomImpl: sortpom.util.XmlOrderedResult isPomElementsSorted()>"->"(83)<sortpom.util.FileUtil: java.lang.String getPomFileContent()>";
    "(199)<sortpom.SortPomImpl: sortpom.util.XmlOrderedResult isPomElementsSorted()>"->"(24)<sortpom.processinstruction.XmlProcessingInstructionParser: void scanForIgnoredSections(java.lang.String)>";
    "(199)<sortpom.SortPomImpl: sortpom.util.XmlOrderedResult isPomElementsSorted()>"->"(40)<sortpom.processinstruction.XmlProcessingInstructionParser: java.lang.String replaceIgnoredSections()>";
    "(199)<sortpom.SortPomImpl: sortpom.util.XmlOrderedResult isPomElementsSorted()>"->"(45)<sortpom.XmlProcessor: void sortXml()>";
    "(64)<sortpom.XmlProcessor: sortpom.util.XmlOrderedResult isXmlOrdered()>"
    "(199)<sortpom.SortPomImpl: sortpom.util.XmlOrderedResult isPomElementsSorted()>"->"(64)<sortpom.XmlProcessor: sortpom.util.XmlOrderedResult isXmlOrdered()>";
    "(210)<sortpom.SortPomImpl: void insertXmlInXmlProcessor(java.lang.String,java.util.function.Supplier)>"
    "<java.lang.String: byte[] getBytes(java.lang.String)>"
    "(210)<sortpom.SortPomImpl: void insertXmlInXmlProcessor(java.lang.String,java.util.function.Supplier)>"->"<java.lang.String: byte[] getBytes(java.lang.String)>";
    "<java.io.ByteArrayInputStream: void <init>(byte[])>"
    "(210)<sortpom.SortPomImpl: void insertXmlInXmlProcessor(java.lang.String,java.util.function.Supplier)>"->"<java.io.ByteArrayInputStream: void <init>(byte[])>";
    "(39)<sortpom.XmlProcessor: void setOriginalXml(java.io.InputStream)>"
    "(210)<sortpom.SortPomImpl: void insertXmlInXmlProcessor(java.lang.String,java.util.function.Supplier)>"->"(39)<sortpom.XmlProcessor: void setOriginalXml(java.io.InputStream)>";
    "<java.io.ByteArrayInputStream: void close()>"
    "(210)<sortpom.SortPomImpl: void insertXmlInXmlProcessor(java.lang.String,java.util.function.Supplier)>"->"<java.io.ByteArrayInputStream: void close()>";
    "(210)<sortpom.SortPomImpl: void insertXmlInXmlProcessor(java.lang.String,java.util.function.Supplier)>"->"<java.io.ByteArrayInputStream: void close()>";
    "(210)<sortpom.SortPomImpl: void insertXmlInXmlProcessor(java.lang.String,java.util.function.Supplier)>"->"<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>";
    "(210)<sortpom.SortPomImpl: void insertXmlInXmlProcessor(java.lang.String,java.util.function.Supplier)>"->"<java.lang.StringBuilder: void <init>()>";
    "(210)<sortpom.SortPomImpl: void insertXmlInXmlProcessor(java.lang.String,java.util.function.Supplier)>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "<sortpom.SortPomImpl$lambda_sortXml_0__10: java.lang.Object get()>"
    "(210)<sortpom.SortPomImpl: void insertXmlInXmlProcessor(java.lang.String,java.util.function.Supplier)>"->"<sortpom.SortPomImpl$lambda_sortXml_0__10: java.lang.Object get()>";
    "<sortpom.SortPomImpl$lambda_isPomElementsSorted_1__11: java.lang.Object get()>"
    "(210)<sortpom.SortPomImpl: void insertXmlInXmlProcessor(java.lang.String,java.util.function.Supplier)>"->"<sortpom.SortPomImpl$lambda_isPomElementsSorted_1__11: java.lang.Object get()>";
    "(210)<sortpom.SortPomImpl: void insertXmlInXmlProcessor(java.lang.String,java.util.function.Supplier)>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(210)<sortpom.SortPomImpl: void insertXmlInXmlProcessor(java.lang.String,java.util.function.Supplier)>"->"<java.lang.StringBuilder: java.lang.String toString()>";
    "(210)<sortpom.SortPomImpl: void insertXmlInXmlProcessor(java.lang.String,java.util.function.Supplier)>"->"(11)<sortpom.exception.FailureException: void <init>(java.lang.String,java.lang.Throwable)>";
    "(203)<sortpom.SortPomImpl: java.lang.String lambda$isPomElementsSorted$1()>"
    "(203)<sortpom.SortPomImpl: java.lang.String lambda$isPomElementsSorted$1()>"->"<java.lang.StringBuilder: void <init>()>";
    "(203)<sortpom.SortPomImpl: java.lang.String lambda$isPomElementsSorted$1()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(203)<sortpom.SortPomImpl: java.lang.String lambda$isPomElementsSorted$1()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(203)<sortpom.SortPomImpl: java.lang.String lambda$isPomElementsSorted$1()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(203)<sortpom.SortPomImpl: java.lang.String lambda$isPomElementsSorted$1()>"->"<java.lang.StringBuilder: java.lang.String toString()>";
    "(115)<sortpom.SortPomImpl: java.lang.String lambda$sortXml$0()>"
    "(115)<sortpom.SortPomImpl: java.lang.String lambda$sortXml$0()>"->"<java.lang.StringBuilder: void <init>()>";
    "(115)<sortpom.SortPomImpl: java.lang.String lambda$sortXml$0()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(115)<sortpom.SortPomImpl: java.lang.String lambda$sortXml$0()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(115)<sortpom.SortPomImpl: java.lang.String lambda$sortXml$0()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(115)<sortpom.SortPomImpl: java.lang.String lambda$sortXml$0()>"->"<java.lang.StringBuilder: java.lang.String toString()>";
    "(19)<sortpom.processinstruction.IgnoredSectionsStore: void <init>()>"->"<java.lang.Object: void <init>()>";
    "(19)<sortpom.processinstruction.IgnoredSectionsStore: void <init>()>"->"<java.util.ArrayList: void <init>()>";
    "<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>"
    "(23)<sortpom.processinstruction.IgnoredSectionsStore: java.lang.String replaceIgnoredSections(java.lang.String)>"->"<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>";
    "<java.lang.StringBuffer: void <init>()>"
    "(23)<sortpom.processinstruction.IgnoredSectionsStore: java.lang.String replaceIgnoredSections(java.lang.String)>"->"<java.lang.StringBuffer: void <init>()>";
    "<java.util.regex.Matcher: boolean find()>"
    "(23)<sortpom.processinstruction.IgnoredSectionsStore: java.lang.String replaceIgnoredSections(java.lang.String)>"->"<java.util.regex.Matcher: boolean find()>";
    "<java.util.regex.Matcher: java.lang.String group()>"
    "(23)<sortpom.processinstruction.IgnoredSectionsStore: java.lang.String replaceIgnoredSections(java.lang.String)>"->"<java.util.regex.Matcher: java.lang.String group()>";
    "<java.util.regex.Matcher: java.util.regex.Matcher appendReplacement(java.lang.StringBuffer,java.lang.String)>"
    "(23)<sortpom.processinstruction.IgnoredSectionsStore: java.lang.String replaceIgnoredSections(java.lang.String)>"->"<java.util.regex.Matcher: java.util.regex.Matcher appendReplacement(java.lang.StringBuffer,java.lang.String)>";
    "<java.util.regex.Matcher: java.lang.StringBuffer appendTail(java.lang.StringBuffer)>"
    "(23)<sortpom.processinstruction.IgnoredSectionsStore: java.lang.String replaceIgnoredSections(java.lang.String)>"->"<java.util.regex.Matcher: java.lang.StringBuffer appendTail(java.lang.StringBuffer)>";
    "(23)<sortpom.processinstruction.IgnoredSectionsStore: java.lang.String replaceIgnoredSections(java.lang.String)>"->"<java.util.ArrayList: boolean add(java.lang.Object)>";
    "<java.lang.StringBuffer: java.lang.String toString()>"
    "(23)<sortpom.processinstruction.IgnoredSectionsStore: java.lang.String replaceIgnoredSections(java.lang.String)>"->"<java.lang.StringBuffer: java.lang.String toString()>";
    "(39)<sortpom.processinstruction.IgnoredSectionsStore: java.lang.String revertIgnoredSections(java.lang.String)>"->"<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>";
    "(39)<sortpom.processinstruction.IgnoredSectionsStore: java.lang.String revertIgnoredSections(java.lang.String)>"->"<java.lang.StringBuffer: void <init>()>";
    "(39)<sortpom.processinstruction.IgnoredSectionsStore: java.lang.String revertIgnoredSections(java.lang.String)>"->"<java.util.regex.Matcher: boolean find()>";
    "<java.util.regex.Matcher: java.lang.String group(int)>"
    "(39)<sortpom.processinstruction.IgnoredSectionsStore: java.lang.String revertIgnoredSections(java.lang.String)>"->"<java.util.regex.Matcher: java.lang.String group(int)>";
    "(39)<sortpom.processinstruction.IgnoredSectionsStore: java.lang.String revertIgnoredSections(java.lang.String)>"->"<java.util.regex.Matcher: java.util.regex.Matcher appendReplacement(java.lang.StringBuffer,java.lang.String)>";
    "(39)<sortpom.processinstruction.IgnoredSectionsStore: java.lang.String revertIgnoredSections(java.lang.String)>"->"<java.util.regex.Matcher: java.lang.StringBuffer appendTail(java.lang.StringBuffer)>";
    "(39)<sortpom.processinstruction.IgnoredSectionsStore: java.lang.String revertIgnoredSections(java.lang.String)>"->"<java.util.ArrayList: java.lang.Object get(int)>";
    "<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>"
    "(39)<sortpom.processinstruction.IgnoredSectionsStore: java.lang.String revertIgnoredSections(java.lang.String)>"->"<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>";
    "(39)<sortpom.processinstruction.IgnoredSectionsStore: java.lang.String revertIgnoredSections(java.lang.String)>"->"<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>";
    "(39)<sortpom.processinstruction.IgnoredSectionsStore: java.lang.String revertIgnoredSections(java.lang.String)>"->"<java.lang.StringBuffer: java.lang.String toString()>";
    "(11)<sortpom.processinstruction.InstructionType: sortpom.processinstruction.InstructionType[] values()>"->"<java.lang.Object: java.lang.Object clone()>";
    "(11)<sortpom.processinstruction.InstructionType: void <init>(java.lang.String,int)>"
    "(11)<sortpom.processinstruction.InstructionType: void <init>(java.lang.String,int)>"->"<java.lang.Enum: void <init>(java.lang.String,int)>";
    "(28)<sortpom.processinstruction.InstructionType: boolean containsType(java.lang.String)>"->"<java.lang.Enum: java.lang.String name()>";
    "(28)<sortpom.processinstruction.InstructionType: boolean containsType(java.lang.String)>"->"<java.lang.Enum: java.lang.String name()>";
    "(32)<sortpom.processinstruction.InstructionType: boolean matches(java.lang.String)>"
    "(32)<sortpom.processinstruction.InstructionType: boolean matches(java.lang.String)>"->"<java.lang.Enum: java.lang.String name()>";
    "(13)<sortpom.processinstruction.InstructionType: void <clinit>()>"->"(11)<sortpom.processinstruction.InstructionType: void <init>(java.lang.String,int)>";
    "(13)<sortpom.processinstruction.InstructionType: void <clinit>()>"->"(11)<sortpom.processinstruction.InstructionType: void <init>(java.lang.String,int)>";
    "(13)<sortpom.processinstruction.InstructionType: void <clinit>()>"->"<java.lang.StringBuilder: void <init>()>";
    "(13)<sortpom.processinstruction.InstructionType: void <clinit>()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(13)<sortpom.processinstruction.InstructionType: void <clinit>()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>";
    "(13)<sortpom.processinstruction.InstructionType: void <clinit>()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(13)<sortpom.processinstruction.InstructionType: void <clinit>()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>";
    "(13)<sortpom.processinstruction.InstructionType: void <clinit>()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(13)<sortpom.processinstruction.InstructionType: void <clinit>()>"->"<java.lang.StringBuilder: java.lang.String toString()>";
    "(21)<sortpom.processinstruction.SortpomPiScanner: void <init>(sortpom.logger.SortPomLogger)>"->"<java.lang.Object: void <init>()>";
    "(27)<sortpom.processinstruction.SortpomPiScanner: void scan(java.lang.String)>"->"<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>";
    "(27)<sortpom.processinstruction.SortpomPiScanner: void scan(java.lang.String)>"->"<java.util.regex.Matcher: boolean find()>";
    "(27)<sortpom.processinstruction.SortpomPiScanner: void scan(java.lang.String)>"->"<java.util.regex.Matcher: java.lang.String group(int)>";
    "(27)<sortpom.processinstruction.SortpomPiScanner: void scan(java.lang.String)>"->"(39)<sortpom.processinstruction.SortpomPiScanner: void scanOneInstruction(java.lang.String)>";
    "(53)<sortpom.processinstruction.SortpomPiScanner: void addError(java.lang.String)>"
    "(27)<sortpom.processinstruction.SortpomPiScanner: void scan(java.lang.String)>"->"(53)<sortpom.processinstruction.SortpomPiScanner: void addError(java.lang.String)>";
    "(39)<sortpom.processinstruction.SortpomPiScanner: void scanOneInstruction(java.lang.String)>"->"(53)<sortpom.processinstruction.SortpomPiScanner: void addError(java.lang.String)>";
    "(39)<sortpom.processinstruction.SortpomPiScanner: void scanOneInstruction(java.lang.String)>"->"(53)<sortpom.processinstruction.SortpomPiScanner: void addError(java.lang.String)>";
    "(39)<sortpom.processinstruction.SortpomPiScanner: void scanOneInstruction(java.lang.String)>"->"(32)<sortpom.processinstruction.InstructionType: boolean matches(java.lang.String)>";
    "(39)<sortpom.processinstruction.SortpomPiScanner: void scanOneInstruction(java.lang.String)>"->"(21)<sortpom.processinstruction.InstructionType: sortpom.processinstruction.InstructionType next()>";
    "(12)<sortpom.processinstruction.XmlProcessingInstructionParser: void <init>()>"->"<java.lang.Object: void <init>()>";
    "(12)<sortpom.processinstruction.XmlProcessingInstructionParser: void <init>()>"->"(19)<sortpom.processinstruction.IgnoredSectionsStore: void <init>()>";
    "(24)<sortpom.processinstruction.XmlProcessingInstructionParser: void scanForIgnoredSections(java.lang.String)>"->"(21)<sortpom.processinstruction.SortpomPiScanner: void <init>(sortpom.logger.SortPomLogger)>";
    "(24)<sortpom.processinstruction.XmlProcessingInstructionParser: void scanForIgnoredSections(java.lang.String)>"->"(27)<sortpom.processinstruction.SortpomPiScanner: void scan(java.lang.String)>";
    "(60)<sortpom.processinstruction.SortpomPiScanner: boolean isScanError()>"
    "(24)<sortpom.processinstruction.XmlProcessingInstructionParser: void scanForIgnoredSections(java.lang.String)>"->"(60)<sortpom.processinstruction.SortpomPiScanner: boolean isScanError()>";
    "(64)<sortpom.processinstruction.SortpomPiScanner: java.lang.String getFirstError()>"
    "(24)<sortpom.processinstruction.XmlProcessingInstructionParser: void scanForIgnoredSections(java.lang.String)>"->"(64)<sortpom.processinstruction.SortpomPiScanner: java.lang.String getFirstError()>";
    "(69)<sortpom.processinstruction.SortpomPiScanner: boolean containsIgnoredSections()>"
    "(24)<sortpom.processinstruction.XmlProcessingInstructionParser: void scanForIgnoredSections(java.lang.String)>"->"(69)<sortpom.processinstruction.SortpomPiScanner: boolean containsIgnoredSections()>";
    "(24)<sortpom.processinstruction.XmlProcessingInstructionParser: void scanForIgnoredSections(java.lang.String)>"->"(15)<sortpom.exception.FailureException: void <init>(java.lang.String)>";
    "(40)<sortpom.processinstruction.XmlProcessingInstructionParser: java.lang.String replaceIgnoredSections()>"->"(23)<sortpom.processinstruction.IgnoredSectionsStore: java.lang.String replaceIgnoredSections(java.lang.String)>";
    "(48)<sortpom.processinstruction.XmlProcessingInstructionParser: java.lang.String revertIgnoredSections(java.lang.String)>"->"(39)<sortpom.processinstruction.IgnoredSectionsStore: java.lang.String revertIgnoredSections(java.lang.String)>";
    "(66)<sortpom.XmlOutputGenerator$PatchedXMLOutputter: void <init>(sortpom.util.StringLineSeparatorWriter,boolean)>"
    "<org.jdom.output.XMLOutputter: void <init>()>"
    "(66)<sortpom.XmlOutputGenerator$PatchedXMLOutputter: void <init>(sortpom.util.StringLineSeparatorWriter,boolean)>"->"<org.jdom.output.XMLOutputter: void <init>()>";
    "(86)<sortpom.XmlOutputGenerator$PatchedXMLOutputter: void clearIndentationForCurrentLine(java.io.Writer)>"
    "(70)<sortpom.util.StringLineSeparatorWriter: void clearLineBuffer()>"
    "(86)<sortpom.XmlOutputGenerator$PatchedXMLOutputter: void clearIndentationForCurrentLine(java.io.Writer)>"->"(70)<sortpom.util.StringLineSeparatorWriter: void clearLineBuffer()>";
    "(19)<sortpom.XmlOutputGenerator: void <init>()>"->"<java.lang.Object: void <init>()>";
    "(38)<sortpom.parameter.LineSeparatorUtil: java.lang.String toString()>"
    "(41)<sortpom.XmlOutputGenerator: java.lang.String getSortedXml(org.jdom.Document)>"->"(38)<sortpom.parameter.LineSeparatorUtil: java.lang.String toString()>";
    "(20)<sortpom.util.StringLineSeparatorWriter: void <init>(java.lang.String)>"
    "(41)<sortpom.XmlOutputGenerator: java.lang.String getSortedXml(org.jdom.Document)>"->"(20)<sortpom.util.StringLineSeparatorWriter: void <init>(java.lang.String)>";
    "(41)<sortpom.XmlOutputGenerator: java.lang.String getSortedXml(org.jdom.Document)>"->"(66)<sortpom.XmlOutputGenerator$PatchedXMLOutputter: void <init>(sortpom.util.StringLineSeparatorWriter,boolean)>";
    "(41)<sortpom.XmlOutputGenerator: java.lang.String getSortedXml(org.jdom.Document)>"->"(54)<sortpom.XmlOutputGenerator: org.jdom.output.Format createPrettyFormat()>";
    "<org.jdom.output.XMLOutputter: void setFormat(org.jdom.output.Format)>"
    "(41)<sortpom.XmlOutputGenerator: java.lang.String getSortedXml(org.jdom.Document)>"->"<org.jdom.output.XMLOutputter: void setFormat(org.jdom.output.Format)>";
    "<org.jdom.output.XMLOutputter: void output(org.jdom.Document,java.io.Writer)>"
    "(41)<sortpom.XmlOutputGenerator: java.lang.String getSortedXml(org.jdom.Document)>"->"<org.jdom.output.XMLOutputter: void output(org.jdom.Document,java.io.Writer)>";
    "(75)<sortpom.util.StringLineSeparatorWriter: java.lang.String toString()>"
    "(41)<sortpom.XmlOutputGenerator: java.lang.String getSortedXml(org.jdom.Document)>"->"(75)<sortpom.util.StringLineSeparatorWriter: java.lang.String toString()>";
    "(39)<sortpom.util.StringLineSeparatorWriter: void close()>"
    "(41)<sortpom.XmlOutputGenerator: java.lang.String getSortedXml(org.jdom.Document)>"->"(39)<sortpom.util.StringLineSeparatorWriter: void close()>";
    "(41)<sortpom.XmlOutputGenerator: java.lang.String getSortedXml(org.jdom.Document)>"->"(39)<sortpom.util.StringLineSeparatorWriter: void close()>";
    "(41)<sortpom.XmlOutputGenerator: java.lang.String getSortedXml(org.jdom.Document)>"->"<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>";
    "(41)<sortpom.XmlOutputGenerator: java.lang.String getSortedXml(org.jdom.Document)>"->"(11)<sortpom.exception.FailureException: void <init>(java.lang.String,java.lang.Throwable)>";
    "<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>"
    "(11)<sortpom.exception.FailureException: void <init>(java.lang.String,java.lang.Throwable)>"->"<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>";
    "<java.lang.RuntimeException: void <init>(java.lang.String)>"
    "(15)<sortpom.exception.FailureException: void <init>(java.lang.String)>"->"<java.lang.RuntimeException: void <init>(java.lang.String)>";
    "<java.io.Writer: void <init>()>"
    "(20)<sortpom.util.StringLineSeparatorWriter: void <init>(java.lang.String)>"->"<java.io.Writer: void <init>()>";
    "(20)<sortpom.util.StringLineSeparatorWriter: void <init>(java.lang.String)>"->"<java.lang.StringBuilder: void <init>()>";
    "<java.io.StringWriter: void <init>()>"
    "(20)<sortpom.util.StringLineSeparatorWriter: void <init>(java.lang.String)>"->"<java.io.StringWriter: void <init>()>";
    "(26)<sortpom.util.StringLineSeparatorWriter: void write(java.lang.String)>"
    "<java.lang.String: char[] toCharArray()>"
    "(26)<sortpom.util.StringLineSeparatorWriter: void write(java.lang.String)>"->"<java.lang.String: char[] toCharArray()>";
    "(60)<sortpom.util.StringLineSeparatorWriter: void writeCharacterBuffer()>"
    "(39)<sortpom.util.StringLineSeparatorWriter: void close()>"->"(60)<sortpom.util.StringLineSeparatorWriter: void writeCharacterBuffer()>";
    "(43)<sortpom.util.StringLineSeparatorWriter: void writeOneCharacter(char)>"
    "(43)<sortpom.util.StringLineSeparatorWriter: void writeOneCharacter(char)>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(char)>";
    "(60)<sortpom.util.StringLineSeparatorWriter: void writeCharacterBuffer()>"->"<java.lang.StringBuilder: java.lang.String toString()>";
    "<java.io.StringWriter: void write(java.lang.String)>"
    "(60)<sortpom.util.StringLineSeparatorWriter: void writeCharacterBuffer()>"->"<java.io.StringWriter: void write(java.lang.String)>";
    "(60)<sortpom.util.StringLineSeparatorWriter: void writeCharacterBuffer()>"->"(70)<sortpom.util.StringLineSeparatorWriter: void clearLineBuffer()>";
    "(65)<sortpom.util.StringLineSeparatorWriter: void writeLineSeparator()>"
    "(65)<sortpom.util.StringLineSeparatorWriter: void writeLineSeparator()>"->"<java.io.StringWriter: void write(java.lang.String)>";
    "<java.lang.StringBuilder: int length()>"
    "(70)<sortpom.util.StringLineSeparatorWriter: void clearLineBuffer()>"->"<java.lang.StringBuilder: int length()>";
    "<java.lang.StringBuilder: java.lang.StringBuilder delete(int,int)>"
    "(70)<sortpom.util.StringLineSeparatorWriter: void clearLineBuffer()>"->"<java.lang.StringBuilder: java.lang.StringBuilder delete(int,int)>";
    "(75)<sortpom.util.StringLineSeparatorWriter: java.lang.String toString()>"->"(60)<sortpom.util.StringLineSeparatorWriter: void writeCharacterBuffer()>";
    "<java.io.StringWriter: java.lang.String toString()>"
    "(75)<sortpom.util.StringLineSeparatorWriter: java.lang.String toString()>"->"<java.io.StringWriter: java.lang.String toString()>";
    "(84)<sortpom.util.StringLineSeparatorWriter: void write(char[])>"
    "(84)<sortpom.util.StringLineSeparatorWriter: void write(char[])>"->"<java.lang.UnsupportedOperationException: void <init>()>";
    "(92)<sortpom.util.StringLineSeparatorWriter: void write(java.lang.String,int,int)>"
    "(92)<sortpom.util.StringLineSeparatorWriter: void write(java.lang.String,int,int)>"->"<java.lang.UnsupportedOperationException: void <init>()>";
    "(100)<sortpom.util.StringLineSeparatorWriter: void write(char[],int,int)>"
    "(100)<sortpom.util.StringLineSeparatorWriter: void write(char[],int,int)>"->"<java.lang.UnsupportedOperationException: void <init>()>";
    "(14)<sortpom.util.FileAttributeUtil: void <init>()>"
    "(14)<sortpom.util.FileAttributeUtil: void <init>()>"->"<java.lang.Object: void <init>()>";
    "<sun.nio.fs.UnixFileAttributeViews$Basic: void setTimes(java.nio.file.attribute.FileTime,java.nio.file.attribute.FileTime,java.nio.file.attribute.FileTime)>"
    "(35)<sortpom.util.FileAttributeUtil: void setTimestamps(java.io.File,long)>"->"<sun.nio.fs.UnixFileAttributeViews$Basic: void setTimes(java.nio.file.attribute.FileTime,java.nio.file.attribute.FileTime,java.nio.file.attribute.FileTime)>";
    "(13)<sortpom.util.XmlOrderedResult: void <init>(boolean,java.lang.String)>"
    "(13)<sortpom.util.XmlOrderedResult: void <init>(boolean,java.lang.String)>"->"<java.lang.Object: void <init>()>";
    "(20)<sortpom.util.XmlOrderedResult: sortpom.util.XmlOrderedResult ordered()>"->"(13)<sortpom.util.XmlOrderedResult: void <init>(boolean,java.lang.String)>";
    "(25)<sortpom.util.XmlOrderedResult: sortpom.util.XmlOrderedResult nameDiffers(java.lang.String,java.lang.String)>"->"(13)<sortpom.util.XmlOrderedResult: void <init>(boolean,java.lang.String)>";
    "(31)<sortpom.util.XmlOrderedResult: sortpom.util.XmlOrderedResult childElementDiffers(java.lang.String,int,int)>"->"(13)<sortpom.util.XmlOrderedResult: void <init>(boolean,java.lang.String)>";
    "(38)<sortpom.util.XmlOrderedResult: sortpom.util.XmlOrderedResult textContentDiffers(java.lang.String,java.lang.String,java.lang.String)>"->"(13)<sortpom.util.XmlOrderedResult: void <init>(boolean,java.lang.String)>";
    "(17)<sortpom.util.UrlWrapper: void <init>(java.lang.String)>"
    "(17)<sortpom.util.UrlWrapper: void <init>(java.lang.String)>"->"<java.lang.Object: void <init>()>";
    "<java.net.URL: void <init>(java.lang.String)>"
    "(23)<sortpom.util.UrlWrapper: boolean isUrl()>"->"<java.net.URL: void <init>(java.lang.String)>";
    "(31)<sortpom.util.UrlWrapper: java.io.InputStream openStream()>"->"<java.net.URL: void <init>(java.lang.String)>";
    "<java.net.URL: java.io.InputStream openStream()>"
    "(31)<sortpom.util.UrlWrapper: java.io.InputStream openStream()>"->"<java.net.URL: java.io.InputStream openStream()>";
    "(19)<sortpom.util.FileUtil: void <init>()>"->"<java.lang.Object: void <init>()>";
    "(19)<sortpom.util.FileUtil: void <init>()>"->"(14)<sortpom.util.FileAttributeUtil: void <init>()>";
    "(50)<sortpom.util.FileUtil: void backupFile()>"->"(56)<sortpom.util.FileUtil: void createFileHandle()>";
    "(50)<sortpom.util.FileUtil: void backupFile()>"->"(62)<sortpom.util.FileUtil: void checkBackupFileAccess()>";
    "(50)<sortpom.util.FileUtil: void backupFile()>"->"(70)<sortpom.util.FileUtil: void createBackupFile()>";
    "(56)<sortpom.util.FileUtil: void createFileHandle()>"->"<java.lang.StringBuilder: void <init>()>";
    "(56)<sortpom.util.FileUtil: void createFileHandle()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(56)<sortpom.util.FileUtil: void createFileHandle()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(56)<sortpom.util.FileUtil: void createFileHandle()>"->"<java.lang.StringBuilder: java.lang.String toString()>";
    "(56)<sortpom.util.FileUtil: void createFileHandle()>"->"<java.io.File: void <init>(java.lang.String)>";
    "<java.io.File: java.nio.file.Path toPath()>"
    "(62)<sortpom.util.FileUtil: void checkBackupFileAccess()>"->"<java.io.File: java.nio.file.Path toPath()>";
    "(62)<sortpom.util.FileUtil: void checkBackupFileAccess()>"->"<java.lang.StringBuilder: void <init>()>";
    "(62)<sortpom.util.FileUtil: void checkBackupFileAccess()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(62)<sortpom.util.FileUtil: void checkBackupFileAccess()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(62)<sortpom.util.FileUtil: void checkBackupFileAccess()>"->"<java.lang.StringBuilder: java.lang.String toString()>";
    "(62)<sortpom.util.FileUtil: void checkBackupFileAccess()>"->"(11)<sortpom.exception.FailureException: void <init>(java.lang.String,java.lang.Throwable)>";
    "(70)<sortpom.util.FileUtil: void createBackupFile()>"->"<java.io.File: java.nio.file.Path toPath()>";
    "(70)<sortpom.util.FileUtil: void createBackupFile()>"->"<java.lang.StringBuilder: void <init>()>";
    "(70)<sortpom.util.FileUtil: void createBackupFile()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(70)<sortpom.util.FileUtil: void createBackupFile()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(70)<sortpom.util.FileUtil: void createBackupFile()>"->"<java.lang.StringBuilder: java.lang.String toString()>";
    "(70)<sortpom.util.FileUtil: void createBackupFile()>"->"(11)<sortpom.exception.FailureException: void <init>(java.lang.String,java.lang.Throwable)>";
    "<java.io.FileInputStream: void <init>(java.io.File)>"
    "(83)<sortpom.util.FileUtil: java.lang.String getPomFileContent()>"->"<java.io.FileInputStream: void <init>(java.io.File)>";
    "<java.io.FileInputStream: void close()>"
    "(83)<sortpom.util.FileUtil: java.lang.String getPomFileContent()>"->"<java.io.FileInputStream: void close()>";
    "(83)<sortpom.util.FileUtil: java.lang.String getPomFileContent()>"->"<java.io.FileInputStream: void close()>";
    "(83)<sortpom.util.FileUtil: java.lang.String getPomFileContent()>"->"<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>";
    "(83)<sortpom.util.FileUtil: java.lang.String getPomFileContent()>"->"<java.lang.StringBuilder: void <init>()>";
    "(83)<sortpom.util.FileUtil: java.lang.String getPomFileContent()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(83)<sortpom.util.FileUtil: java.lang.String getPomFileContent()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(83)<sortpom.util.FileUtil: java.lang.String getPomFileContent()>"->"<java.lang.StringBuilder: java.lang.String toString()>";
    "(83)<sortpom.util.FileUtil: java.lang.String getPomFileContent()>"->"(11)<sortpom.exception.FailureException: void <init>(java.lang.String,java.lang.Throwable)>";
    "(83)<sortpom.util.FileUtil: java.lang.String getPomFileContent()>"->"<java.lang.StringBuilder: void <init>()>";
    "(83)<sortpom.util.FileUtil: java.lang.String getPomFileContent()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(83)<sortpom.util.FileUtil: java.lang.String getPomFileContent()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(83)<sortpom.util.FileUtil: java.lang.String getPomFileContent()>"->"<java.lang.StringBuilder: java.lang.String toString()>";
    "(83)<sortpom.util.FileUtil: java.lang.String getPomFileContent()>"->"(11)<sortpom.exception.FailureException: void <init>(java.lang.String,java.lang.Throwable)>";
    "(95)<sortpom.util.FileUtil: void savePomfileTimestamp()>"
    "(83)<sortpom.util.FileUtil: java.lang.String getPomFileContent()>"->"(95)<sortpom.util.FileUtil: void savePomfileTimestamp()>";
    "(23)<sortpom.util.FileAttributeUtil: long getLastModifiedTimestamp(java.io.File)>"
    "(95)<sortpom.util.FileUtil: void savePomfileTimestamp()>"->"(23)<sortpom.util.FileAttributeUtil: long getLastModifiedTimestamp(java.io.File)>";
    "(95)<sortpom.util.FileUtil: void savePomfileTimestamp()>"->"<java.lang.StringBuilder: void <init>()>";
    "(95)<sortpom.util.FileUtil: void savePomfileTimestamp()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(95)<sortpom.util.FileUtil: void savePomfileTimestamp()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(95)<sortpom.util.FileUtil: void savePomfileTimestamp()>"->"<java.lang.StringBuilder: java.lang.String toString()>";
    "(95)<sortpom.util.FileUtil: void savePomfileTimestamp()>"->"(15)<sortpom.exception.FailureException: void <init>(java.lang.String)>";
    "(104)<sortpom.util.FileUtil: void saveViolationFile(java.lang.String)>"->"<java.io.File: void <init>(java.lang.String)>";
    "(104)<sortpom.util.FileUtil: void saveViolationFile(java.lang.String)>"->"<java.lang.StringBuilder: void <init>()>";
    "(104)<sortpom.util.FileUtil: void saveViolationFile(java.lang.String)>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(104)<sortpom.util.FileUtil: void saveViolationFile(java.lang.String)>"->"<java.io.File: java.lang.String getAbsolutePath()>";
    "(104)<sortpom.util.FileUtil: void saveViolationFile(java.lang.String)>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(104)<sortpom.util.FileUtil: void saveViolationFile(java.lang.String)>"->"<java.lang.StringBuilder: java.lang.String toString()>";
    "(104)<sortpom.util.FileUtil: void saveViolationFile(java.lang.String)>"->"(120)<sortpom.util.FileUtil: void saveFile(java.io.File,java.lang.String,java.lang.String)>";
    "(114)<sortpom.util.FileUtil: void savePomFile(java.lang.String)>"->"<java.lang.StringBuilder: void <init>()>";
    "(114)<sortpom.util.FileUtil: void savePomFile(java.lang.String)>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(114)<sortpom.util.FileUtil: void savePomFile(java.lang.String)>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(114)<sortpom.util.FileUtil: void savePomFile(java.lang.String)>"->"<java.lang.StringBuilder: java.lang.String toString()>";
    "(114)<sortpom.util.FileUtil: void savePomFile(java.lang.String)>"->"(120)<sortpom.util.FileUtil: void saveFile(java.io.File,java.lang.String,java.lang.String)>";
    "(129)<sortpom.util.FileUtil: void setPomfileTimestamp()>"
    "(114)<sortpom.util.FileUtil: void savePomFile(java.lang.String)>"->"(129)<sortpom.util.FileUtil: void setPomfileTimestamp()>";
    "<java.io.File: java.io.File getParentFile()>"
    "(120)<sortpom.util.FileUtil: void saveFile(java.io.File,java.lang.String,java.lang.String)>"->"<java.io.File: java.io.File getParentFile()>";
    "(120)<sortpom.util.FileUtil: void saveFile(java.io.File,java.lang.String,java.lang.String)>"->"<java.io.File: java.nio.file.Path toPath()>";
    "(120)<sortpom.util.FileUtil: void saveFile(java.io.File,java.lang.String,java.lang.String)>"->"<java.io.File: java.nio.file.Path toPath()>";
    "(120)<sortpom.util.FileUtil: void saveFile(java.io.File,java.lang.String,java.lang.String)>"->"<java.lang.String: byte[] getBytes(java.lang.String)>";
    "(120)<sortpom.util.FileUtil: void saveFile(java.io.File,java.lang.String,java.lang.String)>"->"(11)<sortpom.exception.FailureException: void <init>(java.lang.String,java.lang.Throwable)>";
    "(129)<sortpom.util.FileUtil: void setPomfileTimestamp()>"->"(35)<sortpom.util.FileAttributeUtil: void setTimestamps(java.io.File,long)>";
    "(129)<sortpom.util.FileUtil: void setPomfileTimestamp()>"->"<java.lang.StringBuilder: void <init>()>";
    "(129)<sortpom.util.FileUtil: void setPomfileTimestamp()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(129)<sortpom.util.FileUtil: void setPomfileTimestamp()>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(129)<sortpom.util.FileUtil: void setPomfileTimestamp()>"->"<java.lang.StringBuilder: java.lang.String toString()>";
    "(129)<sortpom.util.FileUtil: void setPomfileTimestamp()>"->"(11)<sortpom.exception.FailureException: void <init>(java.lang.String,java.lang.Throwable)>";
    "<sortpom.util.FileUtil$lambda_getDefaultSortOrderXml_0__12: java.lang.Object get()>"
    "(144)<sortpom.util.FileUtil: java.lang.String getDefaultSortOrderXml()>"->"<sortpom.util.FileUtil$lambda_getDefaultSortOrderXml_0__12: java.lang.Object get()>";
    "<java.io.BufferedInputStream: void close()>"
    "(144)<sortpom.util.FileUtil: java.lang.String getDefaultSortOrderXml()>"->"<java.io.BufferedInputStream: void close()>";
    "(144)<sortpom.util.FileUtil: java.lang.String getDefaultSortOrderXml()>"->"<java.io.BufferedInputStream: void close()>";
    "(144)<sortpom.util.FileUtil: java.lang.String getDefaultSortOrderXml()>"->"<java.io.FileInputStream: void close()>";
    "(144)<sortpom.util.FileUtil: java.lang.String getDefaultSortOrderXml()>"->"<java.io.FileInputStream: void close()>";
    "<java.util.zip.ZipFile$ZipFileInputStream: void close()>"
    "(144)<sortpom.util.FileUtil: java.lang.String getDefaultSortOrderXml()>"->"<java.util.zip.ZipFile$ZipFileInputStream: void close()>";
    "(144)<sortpom.util.FileUtil: java.lang.String getDefaultSortOrderXml()>"->"<java.util.zip.ZipFile$ZipFileInputStream: void close()>";
    "<sun.net.www.protocol.jar.JarURLConnection$JarURLInputStream: void close()>"
    "(144)<sortpom.util.FileUtil: java.lang.String getDefaultSortOrderXml()>"->"<sun.net.www.protocol.jar.JarURLConnection$JarURLInputStream: void close()>";
    "(144)<sortpom.util.FileUtil: java.lang.String getDefaultSortOrderXml()>"->"<sun.net.www.protocol.jar.JarURLConnection$JarURLInputStream: void close()>";
    "<java.util.zip.ZipFile$ZipFileInflaterInputStream: void close()>"
    "(144)<sortpom.util.FileUtil: java.lang.String getDefaultSortOrderXml()>"->"<java.util.zip.ZipFile$ZipFileInflaterInputStream: void close()>";
    "(144)<sortpom.util.FileUtil: java.lang.String getDefaultSortOrderXml()>"->"<java.util.zip.ZipFile$ZipFileInflaterInputStream: void close()>";
    "<sun.nio.ch.ChannelInputStream: void close()>"
    "(144)<sortpom.util.FileUtil: java.lang.String getDefaultSortOrderXml()>"->"<sun.nio.ch.ChannelInputStream: void close()>";
    "(144)<sortpom.util.FileUtil: java.lang.String getDefaultSortOrderXml()>"->"<sun.nio.ch.ChannelInputStream: void close()>";
    "<java.lang.ProcessImpl$DeferredCloseInputStream: void close()>"
    "(144)<sortpom.util.FileUtil: java.lang.String getDefaultSortOrderXml()>"->"<java.lang.ProcessImpl$DeferredCloseInputStream: void close()>";
    "(144)<sortpom.util.FileUtil: java.lang.String getDefaultSortOrderXml()>"->"<java.lang.ProcessImpl$DeferredCloseInputStream: void close()>";
    "<sun.net.www.MeteredStream: void close()>"
    "(144)<sortpom.util.FileUtil: java.lang.String getDefaultSortOrderXml()>"->"<sun.net.www.MeteredStream: void close()>";
    "(144)<sortpom.util.FileUtil: java.lang.String getDefaultSortOrderXml()>"->"<sun.net.www.MeteredStream: void close()>";
    "<sun.net.www.http.ChunkedInputStream: void close()>"
    "(144)<sortpom.util.FileUtil: java.lang.String getDefaultSortOrderXml()>"->"<sun.net.www.http.ChunkedInputStream: void close()>";
    "(144)<sortpom.util.FileUtil: java.lang.String getDefaultSortOrderXml()>"->"<sun.net.www.http.ChunkedInputStream: void close()>";
    "<java.io.InputStream: void close()>"
    "(144)<sortpom.util.FileUtil: java.lang.String getDefaultSortOrderXml()>"->"<java.io.InputStream: void close()>";
    "(144)<sortpom.util.FileUtil: java.lang.String getDefaultSortOrderXml()>"->"<java.io.InputStream: void close()>";
    "<sun.net.www.http.KeepAliveStream: void close()>"
    "(144)<sortpom.util.FileUtil: java.lang.String getDefaultSortOrderXml()>"->"<sun.net.www.http.KeepAliveStream: void close()>";
    "(144)<sortpom.util.FileUtil: java.lang.String getDefaultSortOrderXml()>"->"<sun.net.www.http.KeepAliveStream: void close()>";
    "<sun.net.www.protocol.http.HttpURLConnection$HttpInputStream: void close()>"
    "(144)<sortpom.util.FileUtil: java.lang.String getDefaultSortOrderXml()>"->"<sun.net.www.protocol.http.HttpURLConnection$HttpInputStream: void close()>";
    "(144)<sortpom.util.FileUtil: java.lang.String getDefaultSortOrderXml()>"->"<sun.net.www.protocol.http.HttpURLConnection$HttpInputStream: void close()>";
    "(144)<sortpom.util.FileUtil: java.lang.String getDefaultSortOrderXml()>"->"<java.io.ByteArrayInputStream: void close()>";
    "(144)<sortpom.util.FileUtil: java.lang.String getDefaultSortOrderXml()>"->"<java.io.ByteArrayInputStream: void close()>";
    "<sun.net.www.http.HttpCaptureInputStream: void close()>"
    "(144)<sortpom.util.FileUtil: java.lang.String getDefaultSortOrderXml()>"->"<sun.net.www.http.HttpCaptureInputStream: void close()>";
    "(144)<sortpom.util.FileUtil: java.lang.String getDefaultSortOrderXml()>"->"<sun.net.www.http.HttpCaptureInputStream: void close()>";
    "<java.util.jar.JarVerifier$VerifierStream: void close()>"
    "(144)<sortpom.util.FileUtil: java.lang.String getDefaultSortOrderXml()>"->"<java.util.jar.JarVerifier$VerifierStream: void close()>";
    "(144)<sortpom.util.FileUtil: java.lang.String getDefaultSortOrderXml()>"->"<java.util.jar.JarVerifier$VerifierStream: void close()>";
    "<sun.security.provider.FileInputStreamPool$UnclosableInputStream: void close()>"
    "(144)<sortpom.util.FileUtil: java.lang.String getDefaultSortOrderXml()>"->"<sun.security.provider.FileInputStreamPool$UnclosableInputStream: void close()>";
    "(144)<sortpom.util.FileUtil: java.lang.String getDefaultSortOrderXml()>"->"<sun.security.provider.FileInputStreamPool$UnclosableInputStream: void close()>";
    "(144)<sortpom.util.FileUtil: java.lang.String getDefaultSortOrderXml()>"->"<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>";
    "<java.io.FileInputStream: void <init>(java.lang.String)>"
    "(171)<sortpom.util.FileUtil: java.io.InputStream openCustomSortOrderFile()>"->"<java.io.FileInputStream: void <init>(java.lang.String)>";
    "<java.lang.Object: java.lang.Class getClass()>"
    "(171)<sortpom.util.FileUtil: java.io.InputStream openCustomSortOrderFile()>"->"<java.lang.Object: java.lang.Class getClass()>";
    "<java.lang.Class: java.lang.ClassLoader getClassLoader()>"
    "(171)<sortpom.util.FileUtil: java.io.InputStream openCustomSortOrderFile()>"->"<java.lang.Class: java.lang.ClassLoader getClassLoader()>";
    "<java.io.IOException: void <init>(java.lang.String)>"
    "(171)<sortpom.util.FileUtil: java.io.InputStream openCustomSortOrderFile()>"->"<java.io.IOException: void <init>(java.lang.String)>";
    "(171)<sortpom.util.FileUtil: java.io.InputStream openCustomSortOrderFile()>"->"<java.net.URL: java.io.InputStream openStream()>";
    "(171)<sortpom.util.FileUtil: java.io.InputStream openCustomSortOrderFile()>"->"<java.io.File: void <init>(java.lang.String)>";
    "(171)<sortpom.util.FileUtil: java.io.InputStream openCustomSortOrderFile()>"->"<java.io.File: java.lang.String getAbsolutePath()>";
    "<java.io.FileNotFoundException: void <init>(java.lang.String)>"
    "(171)<sortpom.util.FileUtil: java.io.InputStream openCustomSortOrderFile()>"->"<java.io.FileNotFoundException: void <init>(java.lang.String)>";
    "(190)<sortpom.util.FileUtil: java.io.InputStream getPredefinedSortOrder(java.lang.String)>"->"<java.lang.Object: java.lang.Class getClass()>";
    "<java.util.Optional: java.util.Optional map(java.util.function.Function)>"
    "(190)<sortpom.util.FileUtil: java.io.InputStream getPredefinedSortOrder(java.lang.String)>"->"<java.util.Optional: java.util.Optional map(java.util.function.Function)>";
    "(190)<sortpom.util.FileUtil: java.io.InputStream getPredefinedSortOrder(java.lang.String)>"->"<java.util.Optional: java.util.Optional map(java.util.function.Function)>";
    "<java.util.Optional: java.lang.Object orElseThrow(java.util.function.Supplier)>"
    "(190)<sortpom.util.FileUtil: java.io.InputStream getPredefinedSortOrder(java.lang.String)>"->"<java.util.Optional: java.lang.Object orElseThrow(java.util.function.Supplier)>";
    "(190)<sortpom.util.FileUtil: java.io.InputStream getPredefinedSortOrder(java.lang.String)>"->"<java.net.URL: java.io.InputStream openStream()>";
    "(194)<sortpom.util.FileUtil: java.lang.IllegalArgumentException lambda$getPredefinedSortOrder$2(java.lang.String)>"->"<java.lang.StringBuilder: void <init>()>";
    "(194)<sortpom.util.FileUtil: java.lang.IllegalArgumentException lambda$getPredefinedSortOrder$2(java.lang.String)>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(194)<sortpom.util.FileUtil: java.lang.IllegalArgumentException lambda$getPredefinedSortOrder$2(java.lang.String)>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(194)<sortpom.util.FileUtil: java.lang.IllegalArgumentException lambda$getPredefinedSortOrder$2(java.lang.String)>"->"<java.lang.StringBuilder: java.lang.String toString()>";
    "<java.lang.IllegalArgumentException: void <init>(java.lang.String)>"
    "(194)<sortpom.util.FileUtil: java.lang.IllegalArgumentException lambda$getPredefinedSortOrder$2(java.lang.String)>"->"<java.lang.IllegalArgumentException: void <init>(java.lang.String)>";
    "(192)<sortpom.util.FileUtil: java.net.URL lambda$getPredefinedSortOrder$1(java.lang.String,java.lang.ClassLoader)>"->"<java.lang.StringBuilder: void <init>()>";
    "(192)<sortpom.util.FileUtil: java.net.URL lambda$getPredefinedSortOrder$1(java.lang.String,java.lang.ClassLoader)>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(192)<sortpom.util.FileUtil: java.net.URL lambda$getPredefinedSortOrder$1(java.lang.String,java.lang.ClassLoader)>"->"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>";
    "(192)<sortpom.util.FileUtil: java.net.URL lambda$getPredefinedSortOrder$1(java.lang.String,java.lang.ClassLoader)>"->"<java.lang.StringBuilder: java.lang.String toString()>";
    "<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>"
    "(192)<sortpom.util.FileUtil: java.net.URL lambda$getPredefinedSortOrder$1(java.lang.String,java.lang.ClassLoader)>"->"<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>";
    "(146)<sortpom.util.FileUtil: java.io.InputStream lambda$getDefaultSortOrderXml$0()>"
    "(146)<sortpom.util.FileUtil: java.io.InputStream lambda$getDefaultSortOrderXml$0()>"->"(17)<sortpom.util.UrlWrapper: void <init>(java.lang.String)>";
    "(146)<sortpom.util.FileUtil: java.io.InputStream lambda$getDefaultSortOrderXml$0()>"->"(23)<sortpom.util.UrlWrapper: boolean isUrl()>";
    "(146)<sortpom.util.FileUtil: java.io.InputStream lambda$getDefaultSortOrderXml$0()>"->"(31)<sortpom.util.UrlWrapper: java.io.InputStream openStream()>";
    "(146)<sortpom.util.FileUtil: java.io.InputStream lambda$getDefaultSortOrderXml$0()>"->"(171)<sortpom.util.FileUtil: java.io.InputStream openCustomSortOrderFile()>";
    "(146)<sortpom.util.FileUtil: java.io.InputStream lambda$getDefaultSortOrderXml$0()>"->"(190)<sortpom.util.FileUtil: java.io.InputStream getPredefinedSortOrder(java.lang.String)>";
    "(146)<sortpom.util.FileUtil: java.io.InputStream lambda$getDefaultSortOrderXml$0()>"->"(190)<sortpom.util.FileUtil: java.io.InputStream getPredefinedSortOrder(java.lang.String)>";
    "<org.jdom.Comment: void <init>()>"
    "(13)<sortpom.jdomcontent.NewlineText: void <init>()>"->"<org.jdom.Comment: void <init>()>";
    "(14)<sortpom.ViolationXmlProcessor: void <init>()>"->"<java.lang.Object: void <init>()>";
    "<org.jdom.Element: void <init>(java.lang.String)>"
    "(16)<sortpom.ViolationXmlProcessor: org.jdom.Document createViolationXmlContent(java.io.File,java.lang.String)>"->"<org.jdom.Element: void <init>(java.lang.String)>";
    "(16)<sortpom.ViolationXmlProcessor: org.jdom.Document createViolationXmlContent(java.io.File,java.lang.String)>"->"<org.jdom.Element: void <init>(java.lang.String)>";
    "(16)<sortpom.ViolationXmlProcessor: org.jdom.Document createViolationXmlContent(java.io.File,java.lang.String)>"->"<org.jdom.Element: void <init>(java.lang.String)>";
    "<org.jdom.Document: void <init>(org.jdom.Element)>"
    "(16)<sortpom.ViolationXmlProcessor: org.jdom.Document createViolationXmlContent(java.io.File,java.lang.String)>"->"<org.jdom.Document: void <init>(org.jdom.Element)>";
    "(26)<sortpom.XmlProcessor: void <init>(sortpom.wrapper.operation.WrapperFactory)>"->"<java.lang.Object: void <init>()>";
    "(39)<sortpom.XmlProcessor: void setOriginalXml(java.io.InputStream)>"->"<org.jdom.input.SAXBuilder: void <init>()>";
    "(45)<sortpom.XmlProcessor: void sortXml()>"->"(56)<sortpom.wrapper.WrapperFactoryImpl: sortpom.wrapper.operation.HierarchyRootWrapper createFromRootElement(org.jdom.Element)>";
    "(45)<sortpom.XmlProcessor: void sortXml()>"->"(17)<sortpom.wrapper.operation.HierarchyRootWrapper: void createWrappedStructure(sortpom.wrapper.operation.WrapperFactory)>";
    "(45)<sortpom.XmlProcessor: void sortXml()>"->"(37)<sortpom.wrapper.operation.HierarchyRootWrapper: void detachStructure()>";
    "(45)<sortpom.XmlProcessor: void sortXml()>"->"(22)<sortpom.wrapper.operation.HierarchyRootWrapper: void sortStructureAttributes()>";
    "(45)<sortpom.XmlProcessor: void sortXml()>"->"(27)<sortpom.wrapper.operation.HierarchyRootWrapper: void sortStructureElements()>";
    "(45)<sortpom.XmlProcessor: void sortXml()>"->"(32)<sortpom.wrapper.operation.HierarchyRootWrapper: void connectXmlStructure()>";
    "(45)<sortpom.XmlProcessor: void sortXml()>"->"(42)<sortpom.wrapper.operation.HierarchyRootWrapper: sortpom.wrapper.content.Wrapper getElementContent()>";
    "(45)<sortpom.XmlProcessor: void sortXml()>"->"(11)<sortpom.wrapper.content.AlphabeticalSortedWrapper: org.jdom.Content getContent()>";
    "(45)<sortpom.XmlProcessor: void sortXml()>"->"(11)<sortpom.wrapper.content.SortedWrapper: org.jdom.Content getContent()>";
    "(45)<sortpom.XmlProcessor: void sortXml()>"->"(11)<sortpom.wrapper.content.SingleNewlineInTextWrapper: org.jdom.Content getContent()>";
    "(45)<sortpom.XmlProcessor: void sortXml()>"->"(29)<sortpom.wrapper.content.UnsortedWrapper: org.jdom.Content getContent()>";
    "(64)<sortpom.XmlProcessor: sortpom.util.XmlOrderedResult isXmlOrdered()>"->"(16)<sortpom.verify.ElementComparator: void <init>(org.jdom.Element,org.jdom.Element)>";
    "(64)<sortpom.XmlProcessor: sortpom.util.XmlOrderedResult isXmlOrdered()>"->"(27)<sortpom.verify.ElementComparator: sortpom.util.XmlOrderedResult isElementOrdered()>";
    "<sortpom.wrapper.operation.SortAttributesOperation$detach__1: void <init>()>"
    "<sortpom.wrapper.operation.SortAttributesOperation$detach__1: java.util.function.Consumer bootstrap$()>"->"<sortpom.wrapper.operation.SortAttributesOperation$detach__1: void <init>()>";
    "<sortpom.wrapper.operation.SortAttributesOperation$detach__1: void <init>()>"->"<java.lang.Object: void <init>()>";
    "<sortpom.wrapper.operation.SortAttributesOperation$getName__2: void <init>()>"
    "<sortpom.wrapper.operation.SortAttributesOperation$getName__2: java.util.function.Function bootstrap$()>"->"<sortpom.wrapper.operation.SortAttributesOperation$getName__2: void <init>()>";
    "<sortpom.wrapper.operation.SortAttributesOperation$getName__2: void <init>()>"->"<java.lang.Object: void <init>()>";
    "<sortpom.wrapper.operation.HierarchyWrapper$processOtherContent__3: void <init>(sortpom.wrapper.operation.HierarchyWrapperOperation)>"
    "<sortpom.wrapper.operation.HierarchyWrapper$processOtherContent__3: java.util.function.Consumer bootstrap$(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<sortpom.wrapper.operation.HierarchyWrapper$processOtherContent__3: void <init>(sortpom.wrapper.operation.HierarchyWrapperOperation)>";
    "<sortpom.wrapper.operation.HierarchyWrapper$processOtherContent__3: void <init>(sortpom.wrapper.operation.HierarchyWrapperOperation)>"->"<java.lang.Object: void <init>()>";
    "<sortpom.wrapper.operation.HierarchyWrapper$processOtherContent__3: void accept(java.lang.Object)>"
    "<sortpom.wrapper.operation.HierarchyWrapper$processOtherContent__3: void accept(java.lang.Object)>"->"(29)<sortpom.wrapper.operation.GetContentStructureOperation: void processOtherContent(sortpom.wrapper.content.Wrapper)>";
    "<sortpom.wrapper.operation.HierarchyWrapper$processOtherContent__3: void accept(java.lang.Object)>"->"(44)<sortpom.wrapper.operation.ToStringOperation: void processOtherContent(sortpom.wrapper.content.Wrapper)>";
    "(25)<sortpom.wrapper.operation.HierarchyWrapperOperation: void processOtherContent(sortpom.wrapper.content.Wrapper)>"
    "<sortpom.wrapper.operation.HierarchyWrapper$processOtherContent__3: void accept(java.lang.Object)>"->"(25)<sortpom.wrapper.operation.HierarchyWrapperOperation: void processOtherContent(sortpom.wrapper.content.Wrapper)>";
    "<sortpom.wrapper.operation.HierarchyWrapper$processOtherContent__3: void accept(java.lang.Object)>"->"(18)<sortpom.wrapper.operation.DetachOperation: void processOtherContent(sortpom.wrapper.content.Wrapper)>";
    "<sortpom.wrapper.content.ChildElementSorter$lambda_new_0__4: void <init>(sortpom.wrapper.content.ChildElementSorter)>"
    "<sortpom.wrapper.content.ChildElementSorter$lambda_new_0__4: java.util.function.Consumer bootstrap$(sortpom.wrapper.content.ChildElementSorter)>"->"<sortpom.wrapper.content.ChildElementSorter$lambda_new_0__4: void <init>(sortpom.wrapper.content.ChildElementSorter)>";
    "<sortpom.wrapper.content.ChildElementSorter$lambda_new_0__4: void <init>(sortpom.wrapper.content.ChildElementSorter)>"->"<java.lang.Object: void <init>()>";
    "<sortpom.wrapper.content.ChildElementSorter$lambda_new_0__4: void accept(java.lang.Object)>"
    "<sortpom.wrapper.content.ChildElementSorter$lambda_new_0__4: void accept(java.lang.Object)>"->"(26)<sortpom.wrapper.content.ChildElementSorter: void lambda$new$0(java.lang.String)>";
    "<sortpom.wrapper.content.ChildElementSorter$lambda_new_1__5: void <init>(sortpom.wrapper.content.ChildElementSorter)>"
    "<sortpom.wrapper.content.ChildElementSorter$lambda_new_1__5: java.util.function.Consumer bootstrap$(sortpom.wrapper.content.ChildElementSorter)>"->"<sortpom.wrapper.content.ChildElementSorter$lambda_new_1__5: void <init>(sortpom.wrapper.content.ChildElementSorter)>";
    "<sortpom.wrapper.content.ChildElementSorter$lambda_new_1__5: void <init>(sortpom.wrapper.content.ChildElementSorter)>"->"<java.lang.Object: void <init>()>";
    "<sortpom.wrapper.content.ChildElementSorter$lambda_new_1__5: void accept(java.lang.Object)>"
    "<sortpom.wrapper.content.ChildElementSorter$lambda_new_1__5: void accept(java.lang.Object)>"->"(29)<sortpom.wrapper.content.ChildElementSorter: void lambda$new$1(org.jdom.Element)>";
    "<sortpom.wrapper.content.ChildElementSorter$lambda_compareTo_2__6: void <init>(sortpom.wrapper.content.ChildElementSorter)>"
    "<sortpom.wrapper.content.ChildElementSorter$lambda_compareTo_2__6: java.util.function.Function bootstrap$(sortpom.wrapper.content.ChildElementSorter)>"->"<sortpom.wrapper.content.ChildElementSorter$lambda_compareTo_2__6: void <init>(sortpom.wrapper.content.ChildElementSorter)>";
    "<sortpom.wrapper.content.ChildElementSorter$lambda_compareTo_2__6: void <init>(sortpom.wrapper.content.ChildElementSorter)>"->"<java.lang.Object: void <init>()>";
    "<sortpom.wrapper.content.ChildElementSorter$lambda_compareTo_3__7: void <init>(sortpom.wrapper.content.ChildElementSorter,java.util.function.Function)>"
    "<sortpom.wrapper.content.ChildElementSorter$lambda_compareTo_3__7: java.util.function.Function bootstrap$(sortpom.wrapper.content.ChildElementSorter,java.util.function.Function)>"->"<sortpom.wrapper.content.ChildElementSorter$lambda_compareTo_3__7: void <init>(sortpom.wrapper.content.ChildElementSorter,java.util.function.Function)>";
    "<sortpom.wrapper.content.ChildElementSorter$lambda_compareTo_3__7: void <init>(sortpom.wrapper.content.ChildElementSorter,java.util.function.Function)>"->"<java.lang.Object: void <init>()>";
    "<sortpom.wrapper.content.ChildElementSorter$lambda_compareTo_3__7: java.lang.Object apply(java.lang.Object)>"
    "<sortpom.wrapper.content.ChildElementSorter$lambda_compareTo_3__7: java.lang.Object apply(java.lang.Object)>"->"(40)<sortpom.wrapper.content.ChildElementSorter: java.lang.Integer lambda$compareTo$3(java.util.function.Function,java.util.Map$Entry)>";
    "<sortpom.wrapper.content.ChildElementSorter$lambda_compareTo_4__8: void <init>()>"
    "<sortpom.wrapper.content.ChildElementSorter$lambda_compareTo_4__8: java.util.function.Predicate bootstrap$()>"->"<sortpom.wrapper.content.ChildElementSorter$lambda_compareTo_4__8: void <init>()>";
    "<sortpom.wrapper.content.ChildElementSorter$lambda_compareTo_4__8: void <init>()>"->"<java.lang.Object: void <init>()>";
    "<sortpom.wrapper.content.ChildElementSorter$lambda_setEmptyPluginGroupIdValue_5__9: void <init>(java.lang.String)>"
    "<sortpom.wrapper.content.ChildElementSorter$lambda_setEmptyPluginGroupIdValue_5__9: java.util.function.BiFunction bootstrap$(java.lang.String)>"->"<sortpom.wrapper.content.ChildElementSorter$lambda_setEmptyPluginGroupIdValue_5__9: void <init>(java.lang.String)>";
    "<sortpom.wrapper.content.ChildElementSorter$lambda_setEmptyPluginGroupIdValue_5__9: void <init>(java.lang.String)>"->"<java.lang.Object: void <init>()>";
    "<sortpom.SortPomImpl$lambda_sortXml_0__10: void <init>(sortpom.SortPomImpl)>"
    "<sortpom.SortPomImpl$lambda_sortXml_0__10: java.util.function.Supplier bootstrap$(sortpom.SortPomImpl)>"->"<sortpom.SortPomImpl$lambda_sortXml_0__10: void <init>(sortpom.SortPomImpl)>";
    "<sortpom.SortPomImpl$lambda_sortXml_0__10: void <init>(sortpom.SortPomImpl)>"->"<java.lang.Object: void <init>()>";
    "<sortpom.SortPomImpl$lambda_isPomElementsSorted_1__11: void <init>(sortpom.SortPomImpl)>"
    "<sortpom.SortPomImpl$lambda_isPomElementsSorted_1__11: java.util.function.Supplier bootstrap$(sortpom.SortPomImpl)>"->"<sortpom.SortPomImpl$lambda_isPomElementsSorted_1__11: void <init>(sortpom.SortPomImpl)>";
    "<sortpom.SortPomImpl$lambda_isPomElementsSorted_1__11: void <init>(sortpom.SortPomImpl)>"->"<java.lang.Object: void <init>()>";
    "<sortpom.util.FileUtil$lambda_getDefaultSortOrderXml_0__12: void <init>(sortpom.util.FileUtil)>"
    "<sortpom.util.FileUtil$lambda_getDefaultSortOrderXml_0__12: sortpom.util.CheckedSupplier bootstrap$(sortpom.util.FileUtil)>"->"<sortpom.util.FileUtil$lambda_getDefaultSortOrderXml_0__12: void <init>(sortpom.util.FileUtil)>";
    "<sortpom.util.FileUtil$lambda_getDefaultSortOrderXml_0__12: void <init>(sortpom.util.FileUtil)>"->"<java.lang.Object: void <init>()>";
    "<sortpom.util.FileUtil$lambda_getDefaultSortOrderXml_0__12: java.lang.Object get()>"->"(146)<sortpom.util.FileUtil: java.io.InputStream lambda$getDefaultSortOrderXml$0()>";
    "<sortpom.util.FileUtil$getClassLoader__13: void <init>()>"
    "<sortpom.util.FileUtil$getClassLoader__13: java.util.function.Function bootstrap$()>"->"<sortpom.util.FileUtil$getClassLoader__13: void <init>()>";
    "<sortpom.util.FileUtil$getClassLoader__13: void <init>()>"->"<java.lang.Object: void <init>()>";
    "<sortpom.util.FileUtil$getClassLoader__13: java.lang.Object apply(java.lang.Object)>"
    "<sortpom.util.FileUtil$getClassLoader__13: java.lang.Object apply(java.lang.Object)>"->"<java.lang.Class: java.lang.ClassLoader getClassLoader()>";
    "<sortpom.util.FileUtil$lambda_getPredefinedSortOrder_1__14: void <init>(java.lang.String)>"
    "<sortpom.util.FileUtil$lambda_getPredefinedSortOrder_1__14: java.util.function.Function bootstrap$(java.lang.String)>"->"<sortpom.util.FileUtil$lambda_getPredefinedSortOrder_1__14: void <init>(java.lang.String)>";
    "<sortpom.util.FileUtil$lambda_getPredefinedSortOrder_1__14: void <init>(java.lang.String)>"->"<java.lang.Object: void <init>()>";
    "<sortpom.util.FileUtil$lambda_getPredefinedSortOrder_2__15: void <init>(java.lang.String)>"
    "<sortpom.util.FileUtil$lambda_getPredefinedSortOrder_2__15: java.util.function.Supplier bootstrap$(java.lang.String)>"->"<sortpom.util.FileUtil$lambda_getPredefinedSortOrder_2__15: void <init>(java.lang.String)>";
    "<sortpom.util.FileUtil$lambda_getPredefinedSortOrder_2__15: void <init>(java.lang.String)>"->"<java.lang.Object: void <init>()>";
}
