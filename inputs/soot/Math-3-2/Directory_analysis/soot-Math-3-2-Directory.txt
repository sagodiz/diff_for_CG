org.apache.commons.math3.exception.ConvergenceException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[]) org.apache.commons.math3.exception.MathIllegalStateException()
org.apache.commons.math3.exception.ConvergenceException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[]) org.apache.commons.math3.exception.util.ExceptionContext.addMessage(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])
org.apache.commons.math3.exception.ConvergenceException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[]) org.apache.commons.math3.exception.MathIllegalStateException.getContext()
org.apache.commons.math3.dfp.Dfp.rint() java.lang.Object.clinit()
org.apache.commons.math3.dfp.Dfp.rint() org.apache.commons.math3.dfp.Dfp.trunc(org.apache.commons.math3.dfp.DfpField$RoundingMode)
org.apache.commons.math3.dfp.Dfp.rint() org.apache.commons.math3.dfp.DfpField$RoundingMode.clinit()
org.apache.commons.math3.analysis.function.HarmonicOscillator.access$000(double,double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.HarmonicOscillator.access$000(double,double) org.apache.commons.math3.analysis.function.HarmonicOscillator.value(double,double)
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getGeometricMean() org.apache.commons.math3.stat.descriptive.SummaryStatistics.getGeometricMean()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.increment(double) org.apache.commons.math3.stat.descriptive.moment.Skewness.increment(double)
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.increment(double) org.apache.commons.math3.stat.descriptive.moment.Kurtosis.increment(double)
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.increment(double) org.apache.commons.math3.stat.descriptive.moment.SecondMoment.increment(double)
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.increment(double) org.apache.commons.math3.stat.descriptive.summary.Sum.increment(double)
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.increment(double) org.apache.commons.math3.stat.descriptive.moment.GeometricMean.increment(double)
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.increment(double) org.apache.commons.math3.stat.descriptive.summary.SumOfSquares.increment(double)
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.increment(double) org.apache.commons.math3.stat.descriptive.moment.FourthMoment.increment(double)
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.increment(double) org.apache.commons.math3.stat.descriptive.rank.Max.increment(double)
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.increment(double) org.apache.commons.math3.stat.descriptive.summary.SumOfLogs.increment(double)
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.increment(double) org.apache.commons.math3.stat.descriptive.moment.Variance.increment(double)
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.increment(double) org.apache.commons.math3.stat.descriptive.rank.Min.increment(double)
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.increment(double) org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.increment(double)
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.increment(double) org.apache.commons.math3.stat.descriptive.summary.Product.increment(double)
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.increment(double) org.apache.commons.math3.stat.descriptive.moment.Mean.increment(double)
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.increment(double) org.apache.commons.math3.stat.descriptive.moment.ThirdMoment.increment(double)
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.increment(double) org.apache.commons.math3.stat.descriptive.moment.FirstMoment.increment(double)
org.apache.commons.math3.distribution.ParetoDistribution.cumulativeProbability(double,double) org.apache.commons.math3.distribution.AbstractRealDistribution.probability(double,double)
org.apache.commons.math3.geometry.euclidean.threed.Plane.setNormal(org.apache.commons.math3.geometry.euclidean.threed.Vector3D) org.apache.commons.math3.geometry.euclidean.threed.Vector3D(double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
org.apache.commons.math3.geometry.euclidean.threed.Plane.setNormal(org.apache.commons.math3.geometry.euclidean.threed.Vector3D) java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.threed.Plane.setNormal(org.apache.commons.math3.geometry.euclidean.threed.Vector3D) org.apache.commons.math3.geometry.euclidean.threed.Vector3D.clinit()
org.apache.commons.math3.geometry.euclidean.threed.Plane.setNormal(org.apache.commons.math3.geometry.euclidean.threed.Vector3D) java.lang.Throwable.clinit()
org.apache.commons.math3.geometry.euclidean.threed.Plane.setNormal(org.apache.commons.math3.geometry.euclidean.threed.Vector3D) org.apache.commons.math3.exception.MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])
org.apache.commons.math3.geometry.euclidean.threed.Plane.setNormal(org.apache.commons.math3.geometry.euclidean.threed.Vector3D) org.apache.commons.math3.exception.util.LocalizedFormats.clinit()
org.apache.commons.math3.geometry.euclidean.threed.Plane.setNormal(org.apache.commons.math3.geometry.euclidean.threed.Vector3D) org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getNorm()
org.apache.commons.math3.fraction.BigFraction.toString() java.lang.Object.clinit()
org.apache.commons.math3.fraction.BigFraction.toString() java.lang.StringBuilder()
org.apache.commons.math3.fraction.BigFraction.toString() java.lang.StringBuilder.append(java.lang.String)
org.apache.commons.math3.fraction.BigFraction.toString() java.lang.StringBuilder.append(java.lang.Object)
org.apache.commons.math3.fraction.BigFraction.toString() java.math.BigInteger.equals(java.lang.Object)
org.apache.commons.math3.fraction.BigFraction.toString() java.math.BigInteger.toString()
org.apache.commons.math3.fraction.BigFraction.toString() java.lang.StringBuilder.toString()
org.apache.commons.math3.fraction.BigFraction.toString() java.math.BigInteger.clinit()
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.computeObjectiveValue(double[]) org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapter.value(double[])
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.computeObjectiveValue(double[]) org.apache.commons.math3.analysis.FunctionUtils$16.value(double[])
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.computeObjectiveValue(double[]) org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$1.value(double[])
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.computeObjectiveValue(double[]) org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[])
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.computeObjectiveValue(double[]) org.apache.commons.math3.optimization.direct.SimplexOptimizer$1.value(double[])
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.computeObjectiveValue(double[]) org.apache.commons.math3.optim.nonlinear.scalar.LeastSquaresConverter.value(double[])
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.computeObjectiveValue(double[]) org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.value(double[])
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.computeObjectiveValue(double[]) org.apache.commons.math3.analysis.FunctionUtils$17.value(double[])
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.computeObjectiveValue(double[]) org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.value(double[])
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.computeObjectiveValue(double[]) org.apache.commons.math3.optim.linear.LinearObjectiveFunction.value(double[])
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.computeObjectiveValue(double[]) org.apache.commons.math3.analysis.FunctionUtils$11.value(double[])
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.computeObjectiveValue(double[]) org.apache.commons.math3.optimization.LeastSquaresConverter.value(double[])
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.computeObjectiveValue(double[]) org.apache.commons.math3.optim.BaseOptimizer.incrementEvaluationCount()
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.computeObjectiveValue(double[]) org.apache.commons.math3.analysis.FunctionUtils$16$1.value(double[])
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.computeObjectiveValue(double[]) org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapter.value(double[])
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(int,int) java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(int,int) org.apache.commons.math3.analysis.differentiation.DSCompiler.getCompiler(int,int)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(int,int) org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DSCompiler)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(int,int) org.apache.commons.math3.analysis.differentiation.DSCompiler.clinit()
org.apache.commons.math3.util.MultidimensionalCounter$Iterator.next() java.lang.Object.clinit()
org.apache.commons.math3.util.MultidimensionalCounter$Iterator.next() org.apache.commons.math3.util.MultidimensionalCounter$Iterator.next()
org.apache.commons.math3.util.MultidimensionalCounter$Iterator.next() org.apache.commons.math3.util.MultidimensionalCounter.access$100(org.apache.commons.math3.util.MultidimensionalCounter)
org.apache.commons.math3.util.MultidimensionalCounter$Iterator.next() java.lang.Integer.clinit()
org.apache.commons.math3.util.MultidimensionalCounter$Iterator.next() org.apache.commons.math3.util.MultidimensionalCounter.access$200(org.apache.commons.math3.util.MultidimensionalCounter)
org.apache.commons.math3.util.MultidimensionalCounter$Iterator.next() java.lang.Integer.valueOf(int)
org.apache.commons.math3.optim.linear.SimplexTableau.equals(java.lang.Object) java.util.Collections$CheckedList.equals(java.lang.Object)
org.apache.commons.math3.optim.linear.SimplexTableau.equals(java.lang.Object) java.util.Collections$EmptyList.equals(java.lang.Object)
org.apache.commons.math3.optim.linear.SimplexTableau.equals(java.lang.Object) java.lang.Object.equals(java.lang.Object)
org.apache.commons.math3.optim.linear.SimplexTableau.equals(java.lang.Object) java.util.Collections$UnmodifiableList.equals(java.lang.Object)
org.apache.commons.math3.optim.linear.SimplexTableau.equals(java.lang.Object) org.apache.commons.math3.optim.linear.LinearObjectiveFunction.equals(java.lang.Object)
org.apache.commons.math3.optim.linear.SimplexTableau.equals(java.lang.Object) java.util.concurrent.CopyOnWriteArrayList.equals(java.lang.Object)
org.apache.commons.math3.optim.linear.SimplexTableau.equals(java.lang.Object) java.util.AbstractList.equals(java.lang.Object)
org.apache.commons.math3.optim.linear.SimplexTableau.equals(java.lang.Object) org.apache.commons.math3.linear.AbstractRealMatrix.equals(java.lang.Object)
org.apache.commons.math3.optim.linear.SimplexTableau.equals(java.lang.Object) java.util.Collections$SynchronizedList.equals(java.lang.Object)
org.apache.commons.math3.optim.linear.SimplexTableau.equals(java.lang.Object) java.util.Vector.equals(java.lang.Object)
org.apache.commons.math3.fraction.BigFractionFormat.parseNextBigInteger(java.lang.String,java.text.ParsePosition) java.lang.Character.clinit()
org.apache.commons.math3.fraction.BigFractionFormat.parseNextBigInteger(java.lang.String,java.text.ParsePosition) java.lang.Object.clinit()
org.apache.commons.math3.fraction.BigFractionFormat.parseNextBigInteger(java.lang.String,java.text.ParsePosition) java.lang.Character.isDigit(char)
org.apache.commons.math3.fraction.BigFractionFormat.parseNextBigInteger(java.lang.String,java.text.ParsePosition) java.lang.String.charAt(int)
org.apache.commons.math3.fraction.BigFractionFormat.parseNextBigInteger(java.lang.String,java.text.ParsePosition) java.text.ParsePosition.setErrorIndex(int)
org.apache.commons.math3.fraction.BigFractionFormat.parseNextBigInteger(java.lang.String,java.text.ParsePosition) java.lang.String.substring(int,int)
org.apache.commons.math3.fraction.BigFractionFormat.parseNextBigInteger(java.lang.String,java.text.ParsePosition) java.text.ParsePosition.getIndex()
org.apache.commons.math3.fraction.BigFractionFormat.parseNextBigInteger(java.lang.String,java.text.ParsePosition) java.math.BigInteger(java.lang.String)
org.apache.commons.math3.fraction.BigFractionFormat.parseNextBigInteger(java.lang.String,java.text.ParsePosition) java.lang.String.length()
org.apache.commons.math3.fraction.BigFractionFormat.parseNextBigInteger(java.lang.String,java.text.ParsePosition) java.text.ParsePosition.setIndex(int)
org.apache.commons.math3.fraction.BigFractionFormat.parseNextBigInteger(java.lang.String,java.text.ParsePosition) java.math.BigInteger.clinit()
org.apache.commons.math3.geometry.partitioning.RegionFactory$UnionMerger(org.apache.commons.math3.geometry.partitioning.RegionFactory,org.apache.commons.math3.geometry.partitioning.RegionFactory$1) org.apache.commons.math3.geometry.partitioning.RegionFactory$UnionMerger(org.apache.commons.math3.geometry.partitioning.RegionFactory)
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) sun.util.PreHashedMap$1$1.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.SubList.size()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.Collections$UnmodifiableCollection.size()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) javax.security.auth.Subject$SecureSet$1.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) org.apache.commons.math3.linear.RealVector$SparseEntryIterator.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.Collections$SingletonList.iterator()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.concurrent.CopyOnWriteArrayList$COWIterator.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) sun.net.www.MessageHeader$HeaderIterator.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) sun.util.PreHashedMap$2$1.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.Arrays$ArrayList.size()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) org.apache.commons.math3.util.MultidimensionalCounter$Iterator.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) sun.net.www.HeaderParser$ParserIterator.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.concurrent.ArrayBlockingQueue$Itr.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) javax.imageio.ImageIO$ImageWriterIterator.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.AbstractSequentialList.iterator()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.JumboEnumSet$EnumSetIterator.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.LinkedList$ListItr.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.ServiceLoader$LazyIterator.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) sun.nio.fs.UnixFileSystem$FileStoreIterator.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.concurrent.DelayQueue$Itr.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) javax.imageio.spi.PartialOrderIterator.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.TreeMap$NavigableSubMap$SubMapKeyIterator.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.concurrent.ConcurrentHashMap$ValueIterator.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.LinkedList$DescendingIterator.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.JumboEnumSet$EnumSetIterator.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.concurrent.ConcurrentHashMap$KeyIterator.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.concurrent.DelayQueue$Itr.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.LinkedList$DescendingIterator.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) sun.util.PreHashedMap$2$1.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) sun.awt.util.IdentityArrayList.size()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.LinkedList.size()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric.value(double,double[])
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.WeakHashMap$HashIterator.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.LinkedHashMap$EntryIterator.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.IdentityHashMap$KeyIterator.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) org.apache.commons.math3.fitting.GaussianFitter$1.value(double,double[])
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.IdentityHashMap$ValueIterator.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.Collections$CopiesList.size()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.ArrayList$SubList.iterator()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.AbstractMap$1$1.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) org.apache.commons.math3.linear.RealVector$2$2.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) com.sun.imageio.plugins.jpeg.ImageTypeIterator.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) org.apache.commons.math3.analysis.function.Logit$Parametric.value(double,double[])
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) javax.imageio.spi.FilterIterator.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.ArrayDeque$DescendingIterator.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.Hashtable$Enumerator.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) org.apache.commons.math3.linear.RealVector$1.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.Collections$CheckedCollection.size()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.HashMap$EntryIterator.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.Collections$CheckedMap$CheckedEntrySet$1.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) org.apache.commons.math3.util.MultidimensionalCounter$Iterator.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) javax.security.auth.Subject$SecureSet$1.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.concurrent.CopyOnWriteArrayList$COWSubList.iterator()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) org.apache.commons.math3.fitting.GaussianCurveFitter$1.value(double,double[])
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) org.apache.commons.math3.analysis.function.Gaussian$Parametric.value(double,double[])
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) org.apache.commons.math3.analysis.function.Logistic$Parametric.value(double,double[])
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.Collections$UnmodifiableList$1.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.Collections$SynchronizedCollection.size()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) sun.nio.cs.FastCharsetProvider$1.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.concurrent.ArrayBlockingQueue$Itr.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.Collections$CheckedList$1.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.Vector$Itr.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.ArrayList$SubList$1.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.Collections$UnmodifiableCollection.iterator()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.HashMap$ValueIterator.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) sun.misc.SoftCache$EntrySet$1.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.ArrayList$SubList$1.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.concurrent.CopyOnWriteArrayList$COWIterator.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.concurrent.ConcurrentHashMap$HashIterator.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.ArrayList$SubList.size()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.IdentityHashMap$IdentityHashMapIterator.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.lang.ProcessEnvironment$StringEntrySet$1.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) sun.net.www.HeaderParser$ParserIterator.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.concurrent.LinkedBlockingDeque$AbstractItr.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) sun.nio.cs.FastCharsetProvider$1.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) sun.nio.fs.AbstractPath$1.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.EnumMap$KeyIterator.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) org.apache.commons.math3.fitting.WeightedObservedPoint.getX()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) sun.security.jca.ProviderList$ServiceList.size()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.LinkedList$ListItr.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.Collections$EmptyIterator.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.concurrent.CopyOnWriteArrayList.size()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.Scanner.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) javax.imageio.spi.FilterIterator.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.Collections$CheckedCollection$1.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.ArrayDeque$DescendingIterator.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.concurrent.ConcurrentHashMap$EntryIterator.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) org.apache.commons.math3.util.CombinatoricsUtils$SingletonIterator.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.LinkedHashMap$KeyIterator.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.concurrent.LinkedBlockingQueue$Itr.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) org.apache.commons.math3.linear.RealVector$2$2.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.Collections$CheckedList$1.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.ArrayList.iterator()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) javax.imageio.ImageIO$ImageWriterIterator.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.Collections$EmptyList.iterator()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.Collections$1.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) org.apache.commons.math3.util.CombinatoricsUtils$LexicographicCombinationIterator.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.concurrent.LinkedBlockingDeque$AbstractItr.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.concurrent.ConcurrentLinkedQueue$Itr.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.ArrayDeque$DeqIterator.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.LinkedHashMap$LinkedHashIterator.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.concurrent.LinkedBlockingQueue$Itr.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.lang.ProcessEnvironment$StringEntrySet$1.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) sun.util.PreHashedMap$1$1.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.WeakHashMap$EntryIterator.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.lang.ProcessEnvironment$StringValues$1.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) javax.print.MimeType$ParameterMapEntrySetIterator.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.AbstractMap$1$1.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) sun.awt.util.IdentityLinkedList$DescendingIterator.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.lang.ProcessEnvironment$StringKeySet$1.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.concurrent.CopyOnWriteArrayList$COWSubList.size()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) javax.imageio.ImageIO$ImageReaderIterator.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.TreeMap$DescendingKeyIterator.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) javax.imageio.ImageIO$ImageReaderIterator.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.TreeMap$PrivateEntryIterator.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) sun.misc.Service$LazyIterator.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.Scanner.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.WeakHashMap$ValueIterator.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) org.apache.commons.math3.linear.RealVector$SparseEntryIterator.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.IdentityHashMap$EntryIterator.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.Collections$CheckedCollection.iterator()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.PriorityQueue$Itr.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.Hashtable$Enumerator.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.RegularEnumSet$EnumSetIterator.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) javax.print.MimeType$ParameterMapEntrySetIterator.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.WeakHashMap$KeyIterator.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) sun.awt.util.IdentityLinkedList.size()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.Collections$CheckedMap$CheckedEntrySet$1.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) sun.security.jca.ProviderList$ServiceList.iterator()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.SubList$1.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.AbstractList.iterator()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.Collections$SynchronizedCollection.iterator()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.Collections$EmptyIterator.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.LinkedHashMap$ValueIterator.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.ServiceLoader$1.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.TreeMap$NavigableSubMap$SubMapEntryIterator.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.TreeMap$ValueIterator.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.Collections$EmptyList.size()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) org.apache.commons.math3.util.CombinatoricsUtils$LexicographicCombinationIterator.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.AbstractMap$2$1.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.EnumMap$ValueIterator.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.lang.ProcessEnvironment$StringValues$1.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) sun.nio.fs.AbstractPath$1.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) sun.security.jca.ProviderList$3.size()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.SubList.iterator()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.TreeMap$EntryIterator.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) org.apache.commons.math3.linear.RealVector$1.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) org.apache.commons.math3.util.CombinatoricsUtils$SingletonIterator.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) sun.awt.util.IdentityLinkedList$ListItr.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.EnumMap$EntryIterator.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.Collections$UnmodifiableList$1.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) org.apache.commons.math3.linear.RealVector$2$1.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.ArrayList$Itr.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.nio.charset.Charset$1.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.Collections$UnmodifiableCollection$1.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) org.apache.commons.math3.optimization.fitting.GaussianFitter$1.value(double,double[])
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) com.sun.imageio.plugins.jpeg.ImageTypeIterator.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) org.apache.commons.math3.fitting.CurveFitter.access$000(org.apache.commons.math3.fitting.CurveFitter)
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.TreeMap$KeyIterator.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.SubList$1.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.lang.ProcessEnvironment$StringKeySet$1.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.Collections$UnmodifiableCollection$1.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.RegularEnumSet$EnumSetIterator.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) sun.misc.SoftCache$EntrySet$1.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.HashMap$KeyIterator.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) sun.security.jca.ProviderList$ServiceList$1.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.Collections$SingletonList.size()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.PriorityQueue$Itr.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.Collections$1.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.ArrayList$Itr.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.EnumMap$EnumMapIterator.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) org.apache.commons.math3.analysis.function.Sigmoid$Parametric.value(double,double[])
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.AbstractMap$2$1.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.ServiceLoader$1.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) javax.imageio.ImageIO$ImageTranscoderIterator.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction.access$100(org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction)
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) sun.security.jca.ProviderList$ServiceList$1.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.ServiceLoader$LazyIterator.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.Vector$Itr.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.ArrayDeque$DeqIterator.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.lang.Object.clinit()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.Vector.size()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) org.apache.commons.math3.analysis.function.HarmonicOscillator$Parametric.value(double,double[])
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.Collections$CheckedCollection$1.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.AbstractList$Itr.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) sun.misc.Service$LazyIterator.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.nio.charset.Charset$1.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.ArrayList.size()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.concurrent.ConcurrentLinkedQueue$Itr.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) sun.net.www.MessageHeader$HeaderIterator.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) sun.nio.fs.UnixFileSystem$FileStoreIterator.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) sun.awt.util.IdentityLinkedList$DescendingIterator.next()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) sun.awt.util.IdentityLinkedList$ListItr.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) javax.imageio.spi.PartialOrderIterator.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.Vector.iterator()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.TreeMap$NavigableSubMap$SubMapIterator.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.concurrent.CopyOnWriteArrayList.iterator()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) javax.imageio.ImageIO$ImageTranscoderIterator.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.AbstractList$Itr.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) java.util.HashMap$HashIterator.hasNext()
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[]) org.apache.commons.math3.linear.RealVector$2$1.hasNext()
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.function.Sqrt.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.function.Ulp.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.function.Acos.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.function.Asin.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.function.Rint.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.function.Gaussian.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.function.Tan.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.ode.events.EventState$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.function.Sinc.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.FunctionUtils$7.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.function.Sin.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.function.Log1p.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.function.Identity.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.FunctionUtils$3.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.function.Signum.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.distribution.AbstractRealDistribution$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.function.Exp.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.function.Logit.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.function.Acosh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.FunctionUtils$2.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.function.Log10.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.FunctionUtils$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.FunctionUtils$12.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.FunctionUtils$8.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.function.Constant.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.function.Atan.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.function.Logistic.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.function.Sinh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.function.Cosh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.function.Floor.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.function.Expm1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.function.Power.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.function.Cbrt.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.optimization.direct.PowellOptimizer$LineSearch$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.function.HarmonicOscillator.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.function.Asinh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.FunctionUtils$4.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.FunctionUtils$6.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.function.StepFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.function.Minus.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.FunctionUtils$13.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.function.Tanh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.FunctionUtils$9.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.function.Cos.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.function.Atanh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.FunctionUtils$10.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.function.Log.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.function.Sigmoid.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.function.Inverse.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.FunctionUtils$5.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.function.Abs.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.FunctionUtils$15.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.function.Ceil.value(double)
org.apache.commons.math3.analysis.FunctionUtils$7.value(double) org.apache.commons.math3.analysis.FunctionUtils$14.value(double)
org.apache.commons.math3.linear.RealMatrixFormat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat) java.text.NumberFormat.setGroupingUsed(boolean)
org.apache.commons.math3.linear.RealMatrixFormat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat) java.lang.Object()
org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.derivative() org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.polynomialSplineDerivative()
org.apache.commons.math3.linear.BlockRealMatrix.operate(double[]) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.linear.BlockRealMatrix.operate(double[]) java.lang.Object.clinit()
org.apache.commons.math3.linear.BlockRealMatrix.operate(double[]) org.apache.commons.math3.exception.DimensionMismatchException(int,int)
org.apache.commons.math3.linear.BlockRealMatrix.operate(double[]) java.lang.Throwable.clinit()
org.apache.commons.math3.linear.BlockRealMatrix.operate(double[]) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.linear.BlockRealMatrix.operate(double[]) org.apache.commons.math3.util.FastMath.min(int,int)
org.apache.commons.math3.optim.AbstractOptimizer$MaxIterCallback.trigger(int) java.lang.Object.clinit()
org.apache.commons.math3.optim.AbstractOptimizer$MaxIterCallback.trigger(int) java.lang.Integer.clinit()
org.apache.commons.math3.optim.AbstractOptimizer$MaxIterCallback.trigger(int) java.lang.Throwable.clinit()
org.apache.commons.math3.optim.AbstractOptimizer$MaxIterCallback.trigger(int) org.apache.commons.math3.exception.TooManyIterationsException(java.lang.Number)
org.apache.commons.math3.optim.AbstractOptimizer$MaxIterCallback.trigger(int) java.lang.Integer.valueOf(int)
org.apache.commons.math3.util.MathUtils.checkNotNull(java.lang.Object,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[]) java.lang.Object.clinit()
org.apache.commons.math3.util.MathUtils.checkNotNull(java.lang.Object,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[]) java.lang.Throwable.clinit()
org.apache.commons.math3.util.MathUtils.checkNotNull(java.lang.Object,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[]) org.apache.commons.math3.exception.NullArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.toString() org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.toString()
org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region) org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region)
org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator.clinit() java.lang.Object.clinit()
org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator.clinit() org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator.clinit()
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.value() org.apache.commons.math3.util.OpenIntToDoubleHashMap.access$300(org.apache.commons.math3.util.OpenIntToDoubleHashMap)
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.value() java.lang.Object.clinit()
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.value() java.lang.Throwable.clinit()
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.value() java.util.NoSuchElementException()
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.value() org.apache.commons.math3.util.OpenIntToDoubleHashMap.access$100(org.apache.commons.math3.util.OpenIntToDoubleHashMap)
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.value() java.util.ConcurrentModificationException()
org.apache.commons.math3.util.Precision.equalsIncludingNaN(double,double) java.lang.Object.clinit()
org.apache.commons.math3.util.Precision.equalsIncludingNaN(double,double) java.lang.Double.isNaN(double)
org.apache.commons.math3.util.Precision.equalsIncludingNaN(double,double) org.apache.commons.math3.util.Precision.equals(double,double,int)
org.apache.commons.math3.util.Precision.equalsIncludingNaN(double,double) org.apache.commons.math3.util.Precision.clinit()
org.apache.commons.math3.util.Precision.equalsIncludingNaN(double,double) java.lang.Double.clinit()
org.apache.commons.math3.dfp.DfpDec.getDecimalDigits() org.apache.commons.math3.dfp.Dfp.getRadixDigits()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.sqrt() org.apache.commons.math3.analysis.differentiation.DerivativeStructure.rootN(int)
org.apache.commons.math3.fraction.BigFraction(java.math.BigInteger) org.apache.commons.math3.fraction.BigFraction(java.math.BigInteger,java.math.BigInteger)
org.apache.commons.math3.fraction.BigFraction(java.math.BigInteger) java.lang.Object.clinit()
org.apache.commons.math3.fraction.BigFraction(java.math.BigInteger) java.math.BigInteger.clinit()
org.apache.commons.math3.fraction.AbstractFormat.format(long,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.fraction.BigFractionFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)
org.apache.commons.math3.fraction.AbstractFormat.format(long,java.lang.StringBuffer,java.text.FieldPosition) java.lang.Object.clinit()
org.apache.commons.math3.fraction.AbstractFormat.format(long,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.fraction.FractionFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)
org.apache.commons.math3.fraction.AbstractFormat.format(long,java.lang.StringBuffer,java.text.FieldPosition) java.text.NumberFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)
org.apache.commons.math3.fraction.AbstractFormat.format(long,java.lang.StringBuffer,java.text.FieldPosition) java.lang.Long.valueOf(long)
org.apache.commons.math3.fraction.AbstractFormat.format(long,java.lang.StringBuffer,java.text.FieldPosition) java.lang.Long.clinit()
org.apache.commons.math3.distribution.AbstractRealDistribution(org.apache.commons.math3.random.RandomGenerator) java.lang.Object.clinit()
org.apache.commons.math3.distribution.AbstractRealDistribution(org.apache.commons.math3.random.RandomGenerator) org.apache.commons.math3.random.RandomDataImpl()
org.apache.commons.math3.distribution.AbstractRealDistribution(org.apache.commons.math3.random.RandomGenerator) java.lang.Object()
org.apache.commons.math3.geometry.euclidean.threed.SubPlane.buildNew(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region) java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.threed.SubPlane.buildNew(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region) org.apache.commons.math3.geometry.euclidean.threed.SubPlane(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region)
org.apache.commons.math3.geometry.euclidean.threed.Plane(org.apache.commons.math3.geometry.euclidean.threed.Plane) java.lang.Object()
org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormat.format(org.apache.commons.math3.geometry.Vector,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.geometry.euclidean.twod.Vector2D.getX()
org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormat.format(org.apache.commons.math3.geometry.Vector,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.geometry.euclidean.twod.Vector2D.getY()
org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormat.format(org.apache.commons.math3.geometry.Vector,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.geometry.VectorFormat.format(java.lang.StringBuffer,java.text.FieldPosition,double[])
org.apache.commons.math3.ode.events.Transformer$1(java.lang.String,int) org.apache.commons.math3.ode.events.Transformer(java.lang.String,int,org.apache.commons.math3.ode.events.Transformer$1)
org.apache.commons.math3.random.EmpiricalDistribution.kB(int) sun.security.jca.ProviderList$3.get(int)
org.apache.commons.math3.random.EmpiricalDistribution.kB(int) java.util.concurrent.CopyOnWriteArrayList.get(int)
org.apache.commons.math3.random.EmpiricalDistribution.kB(int) java.util.Collections$CheckedList.get(int)
org.apache.commons.math3.random.EmpiricalDistribution.kB(int) org.apache.commons.math3.random.EmpiricalDistribution.getUpperBounds()
org.apache.commons.math3.random.EmpiricalDistribution.kB(int) java.util.Collections$SynchronizedList.get(int)
org.apache.commons.math3.random.EmpiricalDistribution.kB(int) java.util.LinkedList.get(int)
org.apache.commons.math3.random.EmpiricalDistribution.kB(int) org.apache.commons.math3.distribution.ParetoDistribution.cumulativeProbability(double,double)
org.apache.commons.math3.random.EmpiricalDistribution.kB(int) sun.security.jca.ProviderList$ServiceList.get(int)
org.apache.commons.math3.random.EmpiricalDistribution.kB(int) org.apache.commons.math3.distribution.AbstractRealDistribution.cumulativeProbability(double,double)
org.apache.commons.math3.random.EmpiricalDistribution.kB(int) java.util.Collections$CopiesList.get(int)
org.apache.commons.math3.random.EmpiricalDistribution.kB(int) java.util.Collections$SingletonList.get(int)
org.apache.commons.math3.random.EmpiricalDistribution.kB(int) java.util.ArrayList.get(int)
org.apache.commons.math3.random.EmpiricalDistribution.kB(int) java.util.concurrent.CopyOnWriteArrayList$COWSubList.get(int)
org.apache.commons.math3.random.EmpiricalDistribution.kB(int) java.util.Arrays$ArrayList.get(int)
org.apache.commons.math3.random.EmpiricalDistribution.kB(int) org.apache.commons.math3.random.EmpiricalDistribution.getKernel(org.apache.commons.math3.stat.descriptive.SummaryStatistics)
org.apache.commons.math3.random.EmpiricalDistribution.kB(int) org.apache.commons.math3.distribution.LogNormalDistribution.cumulativeProbability(double,double)
org.apache.commons.math3.random.EmpiricalDistribution.kB(int) sun.awt.util.IdentityLinkedList.get(int)
org.apache.commons.math3.random.EmpiricalDistribution.kB(int) org.apache.commons.math3.distribution.NormalDistribution.cumulativeProbability(double,double)
org.apache.commons.math3.random.EmpiricalDistribution.kB(int) java.util.Collections$EmptyList.get(int)
org.apache.commons.math3.random.EmpiricalDistribution.kB(int) java.util.Vector.get(int)
org.apache.commons.math3.random.EmpiricalDistribution.kB(int) java.util.Collections$UnmodifiableList.get(int)
org.apache.commons.math3.random.EmpiricalDistribution.kB(int) sun.awt.util.IdentityArrayList.get(int)
org.apache.commons.math3.random.EmpiricalDistribution.kB(int) java.util.ArrayList$SubList.get(int)
org.apache.commons.math3.random.EmpiricalDistribution.kB(int) java.util.SubList.get(int)
org.apache.commons.math3.analysis.function.Inverse.derivative() org.apache.commons.math3.analysis.function.Cbrt.derivative()
org.apache.commons.math3.analysis.function.Inverse.derivative() org.apache.commons.math3.analysis.function.Minus.derivative()
org.apache.commons.math3.analysis.function.Inverse.derivative() org.apache.commons.math3.analysis.function.Tanh.derivative()
org.apache.commons.math3.analysis.function.Inverse.derivative() org.apache.commons.math3.analysis.FunctionUtils.toDifferentiableUnivariateFunction(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction)
org.apache.commons.math3.analysis.function.Inverse.derivative() org.apache.commons.math3.analysis.function.Expm1.derivative()
org.apache.commons.math3.analysis.function.Inverse.derivative() org.apache.commons.math3.analysis.function.Power.derivative()
org.apache.commons.math3.analysis.function.Inverse.derivative() org.apache.commons.math3.analysis.function.Logit.derivative()
org.apache.commons.math3.analysis.function.Inverse.derivative() org.apache.commons.math3.analysis.function.Sinc.derivative()
org.apache.commons.math3.analysis.function.Inverse.derivative() org.apache.commons.math3.analysis.function.Constant.derivative()
org.apache.commons.math3.analysis.function.Inverse.derivative() org.apache.commons.math3.analysis.function.Log10.derivative()
org.apache.commons.math3.analysis.function.Inverse.derivative() org.apache.commons.math3.analysis.function.Sigmoid.derivative()
org.apache.commons.math3.analysis.function.Inverse.derivative() org.apache.commons.math3.analysis.function.Acosh.derivative()
org.apache.commons.math3.analysis.function.Inverse.derivative() org.apache.commons.math3.analysis.function.Exp.derivative()
org.apache.commons.math3.analysis.function.Inverse.derivative() org.apache.commons.math3.analysis.function.Sinh.derivative()
org.apache.commons.math3.analysis.function.Inverse.derivative() java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Inverse.derivative() org.apache.commons.math3.analysis.polynomials.PolynomialFunction.derivative()
org.apache.commons.math3.analysis.function.Inverse.derivative() org.apache.commons.math3.analysis.function.Gaussian.derivative()
org.apache.commons.math3.analysis.function.Inverse.derivative() org.apache.commons.math3.analysis.function.Atanh.derivative()
org.apache.commons.math3.analysis.function.Inverse.derivative() org.apache.commons.math3.analysis.function.Sqrt.derivative()
org.apache.commons.math3.analysis.function.Inverse.derivative() org.apache.commons.math3.analysis.FunctionUtils$3.derivative()
org.apache.commons.math3.analysis.function.Inverse.derivative() org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.derivative()
org.apache.commons.math3.analysis.function.Inverse.derivative() org.apache.commons.math3.analysis.function.Log1p.derivative()
org.apache.commons.math3.analysis.function.Inverse.derivative() org.apache.commons.math3.analysis.function.Asin.derivative()
org.apache.commons.math3.analysis.function.Inverse.derivative() org.apache.commons.math3.analysis.function.Cos.derivative()
org.apache.commons.math3.analysis.function.Inverse.derivative() org.apache.commons.math3.analysis.function.Asinh.derivative()
org.apache.commons.math3.analysis.function.Inverse.derivative() org.apache.commons.math3.analysis.function.Tan.derivative()
org.apache.commons.math3.analysis.function.Inverse.derivative() org.apache.commons.math3.analysis.FunctionUtils$6.derivative()
org.apache.commons.math3.analysis.function.Inverse.derivative() org.apache.commons.math3.analysis.function.Log.derivative()
org.apache.commons.math3.analysis.function.Inverse.derivative() org.apache.commons.math3.analysis.function.Atan.derivative()
org.apache.commons.math3.analysis.function.Inverse.derivative() org.apache.commons.math3.analysis.function.Acos.derivative()
org.apache.commons.math3.analysis.function.Inverse.derivative() org.apache.commons.math3.analysis.FunctionUtils$14.derivative()
org.apache.commons.math3.analysis.function.Inverse.derivative() org.apache.commons.math3.analysis.function.Identity.derivative()
org.apache.commons.math3.analysis.function.Inverse.derivative() org.apache.commons.math3.analysis.function.Cosh.derivative()
org.apache.commons.math3.analysis.function.Inverse.derivative() org.apache.commons.math3.analysis.FunctionUtils$9.derivative()
org.apache.commons.math3.analysis.function.Inverse.derivative() org.apache.commons.math3.analysis.function.Logistic.derivative()
org.apache.commons.math3.analysis.function.Inverse.derivative() org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative()
org.apache.commons.math3.analysis.function.Inverse.derivative() org.apache.commons.math3.analysis.function.Inverse.derivative()
org.apache.commons.math3.analysis.function.Inverse.derivative() org.apache.commons.math3.analysis.function.Sin.derivative()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.toString() org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getStandardDeviation()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.toString() org.apache.commons.math3.stat.descriptive.SummaryStatistics.getStandardDeviation()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.toString() org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getSumsq()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.toString() org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getMean()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.toString() org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getGeometricMean()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.toString() org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSumsq()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.toString() java.lang.StringBuilder.append(long)
org.apache.commons.math3.stat.descriptive.SummaryStatistics.toString() java.lang.StringBuilder.toString()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.toString() org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSumOfLogs()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.toString() java.lang.Object.clinit()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.toString() java.lang.StringBuilder.append(double)
org.apache.commons.math3.stat.descriptive.SummaryStatistics.toString() java.lang.StringBuilder()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.toString() org.apache.commons.math3.stat.descriptive.SummaryStatistics.getVariance()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.toString() org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMax()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.toString() org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getMax()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.toString() org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMean()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.toString() org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getMin()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.toString() java.lang.StringBuilder.append(java.lang.String)
org.apache.commons.math3.stat.descriptive.SummaryStatistics.toString() org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getN()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.toString() org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMin()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.toString() org.apache.commons.math3.stat.descriptive.SummaryStatistics.getN()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.toString() org.apache.commons.math3.stat.descriptive.SummaryStatistics.getGeometricMean()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.toString() org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getVariance()
org.apache.commons.math3.exception.util.LocalizedFormats.clinit() java.lang.Object.clinit()
org.apache.commons.math3.exception.util.LocalizedFormats.clinit() org.apache.commons.math3.exception.util.LocalizedFormats.clinit()
org.apache.commons.math3.exception.util.LocalizedFormats.clinit() org.apache.commons.math3.exception.util.LocalizedFormats(java.lang.String,int,java.lang.String)
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.buildNew(org.apache.commons.math3.geometry.partitioning.BSPTree) java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.buildNew(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet(org.apache.commons.math3.geometry.partitioning.BSPTree)
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.buildNew(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.buildNew(org.apache.commons.math3.geometry.partitioning.BSPTree)
org.apache.commons.math3.ode.ExpandableStatefulODE.getSecondaryMappers() sun.security.jca.ProviderList$3.get(int)
org.apache.commons.math3.ode.ExpandableStatefulODE.getSecondaryMappers() java.util.Collections$SynchronizedCollection.size()
org.apache.commons.math3.ode.ExpandableStatefulODE.getSecondaryMappers() java.util.concurrent.CopyOnWriteArrayList.get(int)
org.apache.commons.math3.ode.ExpandableStatefulODE.getSecondaryMappers() java.util.SubList.size()
org.apache.commons.math3.ode.ExpandableStatefulODE.getSecondaryMappers() sun.security.jca.ProviderList$ServiceList.size()
org.apache.commons.math3.ode.ExpandableStatefulODE.getSecondaryMappers() java.util.Collections$CheckedList.get(int)
org.apache.commons.math3.ode.ExpandableStatefulODE.getSecondaryMappers() java.util.Collections$UnmodifiableCollection.size()
org.apache.commons.math3.ode.ExpandableStatefulODE.getSecondaryMappers() java.util.concurrent.CopyOnWriteArrayList.size()
org.apache.commons.math3.ode.ExpandableStatefulODE.getSecondaryMappers() java.util.LinkedList.size()
org.apache.commons.math3.ode.ExpandableStatefulODE.getSecondaryMappers() java.util.Collections$SynchronizedList.get(int)
org.apache.commons.math3.ode.ExpandableStatefulODE.getSecondaryMappers() java.util.Collections$CopiesList.get(int)
org.apache.commons.math3.ode.ExpandableStatefulODE.getSecondaryMappers() java.util.Collections$SingletonList.get(int)
org.apache.commons.math3.ode.ExpandableStatefulODE.getSecondaryMappers() java.util.Collections$EmptyList.size()
org.apache.commons.math3.ode.ExpandableStatefulODE.getSecondaryMappers() java.util.Arrays$ArrayList.size()
org.apache.commons.math3.ode.ExpandableStatefulODE.getSecondaryMappers() java.util.ArrayList.get(int)
org.apache.commons.math3.ode.ExpandableStatefulODE.getSecondaryMappers() java.util.Vector.size()
org.apache.commons.math3.ode.ExpandableStatefulODE.getSecondaryMappers() java.lang.Object.clinit()
org.apache.commons.math3.ode.ExpandableStatefulODE.getSecondaryMappers() java.util.concurrent.CopyOnWriteArrayList$COWSubList.get(int)
org.apache.commons.math3.ode.ExpandableStatefulODE.getSecondaryMappers() java.util.Arrays$ArrayList.get(int)
org.apache.commons.math3.ode.ExpandableStatefulODE.getSecondaryMappers() java.util.Collections$CopiesList.size()
org.apache.commons.math3.ode.ExpandableStatefulODE.getSecondaryMappers() sun.security.jca.ProviderList$3.size()
org.apache.commons.math3.ode.ExpandableStatefulODE.getSecondaryMappers() java.util.Vector.get(int)
org.apache.commons.math3.ode.ExpandableStatefulODE.getSecondaryMappers() sun.awt.util.IdentityArrayList.get(int)
org.apache.commons.math3.ode.ExpandableStatefulODE.getSecondaryMappers() java.util.concurrent.CopyOnWriteArrayList$COWSubList.size()
org.apache.commons.math3.ode.ExpandableStatefulODE.getSecondaryMappers() java.util.ArrayList$SubList.get(int)
org.apache.commons.math3.ode.ExpandableStatefulODE.getSecondaryMappers() org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent.access$000(org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent)
org.apache.commons.math3.ode.ExpandableStatefulODE.getSecondaryMappers() java.util.SubList.get(int)
org.apache.commons.math3.ode.ExpandableStatefulODE.getSecondaryMappers() java.util.ArrayList.size()
org.apache.commons.math3.ode.ExpandableStatefulODE.getSecondaryMappers() java.util.LinkedList.get(int)
org.apache.commons.math3.ode.ExpandableStatefulODE.getSecondaryMappers() java.util.Collections$SingletonList.size()
org.apache.commons.math3.ode.ExpandableStatefulODE.getSecondaryMappers() java.util.Collections$CheckedCollection.size()
org.apache.commons.math3.ode.ExpandableStatefulODE.getSecondaryMappers() sun.security.jca.ProviderList$ServiceList.get(int)
org.apache.commons.math3.ode.ExpandableStatefulODE.getSecondaryMappers() java.util.ArrayList$SubList.size()
org.apache.commons.math3.ode.ExpandableStatefulODE.getSecondaryMappers() sun.awt.util.IdentityLinkedList.get(int)
org.apache.commons.math3.ode.ExpandableStatefulODE.getSecondaryMappers() java.util.Collections$EmptyList.get(int)
org.apache.commons.math3.ode.ExpandableStatefulODE.getSecondaryMappers() java.util.Collections$UnmodifiableList.get(int)
org.apache.commons.math3.ode.ExpandableStatefulODE.getSecondaryMappers() sun.awt.util.IdentityLinkedList.size()
org.apache.commons.math3.ode.ExpandableStatefulODE.getSecondaryMappers() sun.awt.util.IdentityArrayList.size()
org.apache.commons.math3.optim.linear.SimplexTableau.hashCode() java.lang.Boolean.clinit()
org.apache.commons.math3.optim.linear.SimplexTableau.hashCode() java.lang.Boolean.hashCode()
org.apache.commons.math3.optim.linear.SimplexTableau.hashCode() java.util.Collections$CheckedList.hashCode()
org.apache.commons.math3.optim.linear.SimplexTableau.hashCode() org.apache.commons.math3.optim.linear.LinearObjectiveFunction.hashCode()
org.apache.commons.math3.optim.linear.SimplexTableau.hashCode() java.lang.Boolean.valueOf(boolean)
org.apache.commons.math3.optim.linear.SimplexTableau.hashCode() java.lang.Object.hashCode()
org.apache.commons.math3.optim.linear.SimplexTableau.hashCode() java.util.AbstractList.hashCode()
org.apache.commons.math3.optim.linear.SimplexTableau.hashCode() java.util.Collections$SynchronizedList.hashCode()
org.apache.commons.math3.optim.linear.SimplexTableau.hashCode() java.util.Vector.hashCode()
org.apache.commons.math3.optim.linear.SimplexTableau.hashCode() java.util.concurrent.CopyOnWriteArrayList.hashCode()
org.apache.commons.math3.optim.linear.SimplexTableau.hashCode() java.lang.Object.clinit()
org.apache.commons.math3.optim.linear.SimplexTableau.hashCode() java.lang.Double.valueOf(double)
org.apache.commons.math3.optim.linear.SimplexTableau.hashCode() java.util.Collections$EmptyList.hashCode()
org.apache.commons.math3.optim.linear.SimplexTableau.hashCode() java.lang.Double.clinit()
org.apache.commons.math3.optim.linear.SimplexTableau.hashCode() java.lang.Double.hashCode()
org.apache.commons.math3.optim.linear.SimplexTableau.hashCode() org.apache.commons.math3.linear.AbstractRealMatrix.hashCode()
org.apache.commons.math3.optim.linear.SimplexTableau.hashCode() java.util.Collections$UnmodifiableList.hashCode()
org.apache.commons.math3.stat.clustering.EuclideanDoublePoint.hashCode() java.lang.Object.clinit()
org.apache.commons.math3.stat.clustering.EuclideanDoublePoint.hashCode() java.util.Arrays.hashCode(double[])
org.apache.commons.math3.stat.clustering.EuclideanDoublePoint.hashCode() java.util.Arrays.clinit()
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.equals(java.lang.Object) org.apache.commons.math3.geometry.euclidean.threed.Vector3D.isNaN()
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerBoundMapper.unboundedToBounded(double) java.lang.Object.clinit()
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerBoundMapper.unboundedToBounded(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerBoundMapper.unboundedToBounded(double) org.apache.commons.math3.util.FastMath.exp(double)
org.apache.commons.math3.util.FastMathCalc.checkLen(int,int) java.lang.Object.clinit()
org.apache.commons.math3.util.FastMathCalc.checkLen(int,int) org.apache.commons.math3.exception.DimensionMismatchException(int,int)
org.apache.commons.math3.util.FastMathCalc.checkLen(int,int) java.lang.Throwable.clinit()
org.apache.commons.math3.util.FastMathCalc.checkLen(int,int) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.encode(int) org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.getBit(int,int)
org.apache.commons.math3.optimization.direct.SimplexOptimizer$2.compare(org.apache.commons.math3.optimization.PointValuePair,org.apache.commons.math3.optimization.PointValuePair) java.lang.Object.clinit()
org.apache.commons.math3.optimization.direct.SimplexOptimizer$2.compare(org.apache.commons.math3.optimization.PointValuePair,org.apache.commons.math3.optimization.PointValuePair) java.lang.Double.compare(double,double)
org.apache.commons.math3.optimization.direct.SimplexOptimizer$2.compare(org.apache.commons.math3.optimization.PointValuePair,org.apache.commons.math3.optimization.PointValuePair) java.lang.Double.doubleValue()
org.apache.commons.math3.optimization.direct.SimplexOptimizer$2.compare(org.apache.commons.math3.optimization.PointValuePair,org.apache.commons.math3.optimization.PointValuePair) java.lang.Double.clinit()
org.apache.commons.math3.optimization.direct.SimplexOptimizer$2.compare(org.apache.commons.math3.optimization.PointValuePair,org.apache.commons.math3.optimization.PointValuePair) org.apache.commons.math3.util.Pair.getValue()
org.apache.commons.math3.fraction.Fraction.compareTo(java.lang.Object) org.apache.commons.math3.fraction.Fraction.compareTo(org.apache.commons.math3.fraction.Fraction)
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.hashCode() org.apache.commons.math3.stat.descriptive.SummaryStatistics.hashCode()
org.apache.commons.math3.linear.RealVector.checkVectorDimensions(int) org.apache.commons.math3.linear.RealVector$2.getDimension()
org.apache.commons.math3.linear.RealVector.checkVectorDimensions(int) java.lang.Object.clinit()
org.apache.commons.math3.linear.RealVector.checkVectorDimensions(int) org.apache.commons.math3.exception.DimensionMismatchException(int,int)
org.apache.commons.math3.linear.RealVector.checkVectorDimensions(int) org.apache.commons.math3.linear.OpenMapRealVector.getDimension()
org.apache.commons.math3.linear.RealVector.checkVectorDimensions(int) java.lang.Throwable.clinit()
org.apache.commons.math3.linear.RealVector.checkVectorDimensions(int) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.linear.RealVector.checkVectorDimensions(int) org.apache.commons.math3.linear.ArrayRealVector.getDimension()
org.apache.commons.math3.optim.linear.LinearObjectiveFunction.hashCode() java.lang.Object.clinit()
org.apache.commons.math3.optim.linear.LinearObjectiveFunction.hashCode() org.apache.commons.math3.linear.OpenMapRealVector.hashCode()
org.apache.commons.math3.optim.linear.LinearObjectiveFunction.hashCode() org.apache.commons.math3.linear.RealVector.hashCode()
org.apache.commons.math3.optim.linear.LinearObjectiveFunction.hashCode() java.lang.Double.valueOf(double)
org.apache.commons.math3.optim.linear.LinearObjectiveFunction.hashCode() org.apache.commons.math3.linear.ArrayRealVector.hashCode()
org.apache.commons.math3.optim.linear.LinearObjectiveFunction.hashCode() java.lang.Double.clinit()
org.apache.commons.math3.optim.linear.LinearObjectiveFunction.hashCode() java.lang.Double.hashCode()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getN() org.apache.commons.math3.stat.descriptive.moment.Variance.getN()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getN() org.apache.commons.math3.stat.descriptive.summary.SumOfLogs.getN()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getN() org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getN()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getN() org.apache.commons.math3.stat.descriptive.rank.Max.getN()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getN() org.apache.commons.math3.stat.descriptive.summary.Sum.getN()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getN() org.apache.commons.math3.stat.descriptive.moment.Kurtosis.getN()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getN() org.apache.commons.math3.stat.descriptive.moment.Skewness.getN()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getN() org.apache.commons.math3.stat.descriptive.summary.Product.getN()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getN() org.apache.commons.math3.stat.descriptive.moment.Mean.getN()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getN() org.apache.commons.math3.stat.descriptive.rank.Min.getN()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getN() org.apache.commons.math3.stat.descriptive.summary.SumOfSquares.getN()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getN() org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.getN()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getN() org.apache.commons.math3.stat.descriptive.moment.SecondMoment.getN()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getN() org.apache.commons.math3.stat.descriptive.moment.FirstMoment.getN()
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Sqrt.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Ulp.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Acos.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Asin.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Rint.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Gaussian.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Tan.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.ode.events.EventState$1.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Sinc.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.FunctionUtils$7.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Sin.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Log1p.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Identity.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.FunctionUtils$3.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Signum.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.distribution.AbstractRealDistribution$1.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Exp.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Logit.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Acosh.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.FunctionUtils$2.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator$1.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Log10.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.FunctionUtils$1.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.FunctionUtils$12.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.FunctionUtils$8.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Constant.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Atan.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Logistic.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Sinh.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Cosh.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Floor.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Expm1.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Power.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Cbrt.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.optimization.direct.PowellOptimizer$LineSearch$1.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.HarmonicOscillator.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Asinh.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.FunctionUtils$4.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.FunctionUtils$6.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.StepFunction.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Minus.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.FunctionUtils$13.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Tanh.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.FunctionUtils$9.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Cos.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Atanh.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.FunctionUtils$10.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Log.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Sigmoid.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Inverse.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.FunctionUtils$5.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch$1.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Abs.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.FunctionUtils$15.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Ceil.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.FunctionUtils$14.value(double)
org.apache.commons.math3.linear.RealVector$2$1.remove() org.apache.commons.math3.exception.MathUnsupportedOperationException()
org.apache.commons.math3.linear.RealVector$2$1.remove() java.lang.Object.clinit()
org.apache.commons.math3.linear.RealVector$2$1.remove() java.lang.Throwable.clinit()
org.apache.commons.math3.stat.descriptive.moment.Skewness.getN() org.apache.commons.math3.stat.descriptive.moment.SecondMoment.getN()
org.apache.commons.math3.analysis.function.HarmonicOscillator.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.compose(double[])
org.apache.commons.math3.analysis.function.HarmonicOscillator.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.HarmonicOscillator.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.function.HarmonicOscillator.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getOrder()
org.apache.commons.math3.analysis.function.HarmonicOscillator.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.util.FastMath.cos(double)
org.apache.commons.math3.analysis.function.HarmonicOscillator.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.util.FastMath.sin(double)
org.apache.commons.math3.analysis.function.HarmonicOscillator.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getValue()
org.apache.commons.math3.util.FastMath$ExpFracTable.access$300() java.lang.Object.clinit()
org.apache.commons.math3.util.FastMath$ExpFracTable.access$300() org.apache.commons.math3.util.FastMath$ExpFracTable.clinit()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.getTree(boolean) java.lang.Object.clinit()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.getTree(boolean) org.apache.commons.math3.geometry.partitioning.BSPTree.getCut()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.getTree(boolean) org.apache.commons.math3.geometry.partitioning.BSPTree.getAttribute()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.getTree(boolean) org.apache.commons.math3.geometry.partitioning.BSPTree.visit(org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor)
org.apache.commons.math3.geometry.partitioning.AbstractRegion.getTree(boolean) org.apache.commons.math3.geometry.partitioning.AbstractRegion$BoundaryBuilder(org.apache.commons.math3.geometry.partitioning.AbstractRegion$1)
org.apache.commons.math3.ode.events.Transformer$5(java.lang.String,int) org.apache.commons.math3.ode.events.Transformer(java.lang.String,int,org.apache.commons.math3.ode.events.Transformer$1)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.log1p() java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.log1p() org.apache.commons.math3.analysis.differentiation.DSCompiler.log1p(double[],int,double[],int)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.log1p() org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DSCompiler)
org.apache.commons.math3.stat.descriptive.summary.Sum.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.test(double[],int,int,boolean)
org.apache.commons.math3.geometry.euclidean.twod.SubLine(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region) org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Sqrt.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Acos.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Tanh.derivative()
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Power.derivative()
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Asin.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Constant.derivative()
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Gaussian.derivative()
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.ode.events.EventState$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.FunctionUtils$7.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Sin.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.derivative()
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.FunctionUtils$3.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Exp.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.FunctionUtils$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.FunctionUtils$12.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getFreeParameters()
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Inverse.derivative()
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.FunctionUtils$8.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Atan.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Constant.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Minus.derivative()
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Floor.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Log10.derivative()
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Sinh.derivative()
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.HarmonicOscillator.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.FunctionUtils$6.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Atanh.derivative()
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.StepFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.FunctionUtils$13.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.FunctionUtils$3.derivative()
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Log1p.derivative()
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Atanh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Cos.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.FunctionUtils$10.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.lang.Integer.valueOf(int)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Cos.derivative()
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Asinh.derivative()
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.lang.Integer.clinit()
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Sigmoid.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.FunctionUtils$6.derivative()
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Acos.derivative()
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.FunctionUtils$14.derivative()
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Logistic.derivative()
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative()
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Abs.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.FunctionUtils$14.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Cbrt.derivative()
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Ulp.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Rint.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Sigmoid.derivative()
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Gaussian.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Tan.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.polynomials.PolynomialFunction.derivative()
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Sqrt.derivative()
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Sinc.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Log1p.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Identity.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Signum.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.exception.NumberIsTooLargeException(java.lang.Number,java.lang.Number,boolean)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.distribution.AbstractRealDistribution$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Logit.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Acosh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Atan.derivative()
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.FunctionUtils$2.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Identity.derivative()
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.FunctionUtils$9.derivative()
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Log10.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure(int,int,double[])
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure(int,int,double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Logistic.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Sinh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Cosh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Expm1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Expm1.derivative()
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Power.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Logit.derivative()
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Sinc.derivative()
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Cbrt.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Acosh.derivative()
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Exp.derivative()
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.optimization.direct.PowellOptimizer$LineSearch$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.lang.Object.clinit()
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getOrder()
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Asinh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.FunctionUtils$4.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Minus.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Tanh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getPartialDerivative(int[])
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.FunctionUtils$9.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getValue()
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Asin.derivative()
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Log.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Tan.derivative()
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.lang.Throwable.clinit()
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Log.derivative()
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Inverse.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Cosh.derivative()
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.FunctionUtils$5.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.FunctionUtils$15.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Ceil.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Sin.derivative()
org.apache.commons.math3.analysis.function.Sigmoid.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.compose(double[])
org.apache.commons.math3.analysis.function.Sigmoid.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Sigmoid.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.function.Sigmoid.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getOrder()
org.apache.commons.math3.analysis.function.Sigmoid.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.util.Arrays.fill(double[],int,int,double)
org.apache.commons.math3.analysis.function.Sigmoid.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.util.FastMath.exp(double)
org.apache.commons.math3.analysis.function.Sigmoid.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getValue()
org.apache.commons.math3.analysis.function.Sigmoid.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.util.Arrays.clinit()
org.apache.commons.math3.analysis.function.Sigmoid.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.lang.Double.clinit()
org.apache.commons.math3.analysis.function.Sigmoid.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.lang.Double.isInfinite(double)
org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer$1.compare(java.lang.Object,java.lang.Object) org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer$1.compare(org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair,org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.asinh() java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.asinh() org.apache.commons.math3.analysis.differentiation.DSCompiler.asinh(double[],int,double[],int)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.asinh() org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DSCompiler)
org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat.format(org.apache.commons.math3.geometry.Vector,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getZ()
org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat.format(org.apache.commons.math3.geometry.Vector,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getX()
org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat.format(org.apache.commons.math3.geometry.Vector,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.geometry.VectorFormat.format(java.lang.StringBuffer,java.text.FieldPosition,double[])
org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat.format(org.apache.commons.math3.geometry.Vector,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getY()
org.apache.commons.math3.dfp.DfpField$RoundingMode.clinit() java.lang.Object.clinit()
org.apache.commons.math3.dfp.DfpField$RoundingMode.clinit() org.apache.commons.math3.dfp.DfpField$RoundingMode(java.lang.String,int)
org.apache.commons.math3.dfp.DfpField$RoundingMode.clinit() org.apache.commons.math3.dfp.DfpField$RoundingMode.clinit()
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback.trigger(int) java.lang.Object.clinit()
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback.trigger(int) java.lang.Integer.clinit()
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback.trigger(int) java.lang.Throwable.clinit()
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback.trigger(int) org.apache.commons.math3.exception.TooManyEvaluationsException(java.lang.Number)
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback.trigger(int) java.lang.Integer.valueOf(int)
org.apache.commons.math3.geometry.euclidean.threed.Plane.toSubSpace(org.apache.commons.math3.geometry.Vector) java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.threed.Plane.toSubSpace(org.apache.commons.math3.geometry.Vector) org.apache.commons.math3.geometry.euclidean.oned.Vector1D.dotProduct(org.apache.commons.math3.geometry.Vector)
org.apache.commons.math3.geometry.euclidean.threed.Plane.toSubSpace(org.apache.commons.math3.geometry.Vector) org.apache.commons.math3.geometry.euclidean.threed.Vector3D.dotProduct(org.apache.commons.math3.geometry.Vector)
org.apache.commons.math3.geometry.euclidean.threed.Plane.toSubSpace(org.apache.commons.math3.geometry.Vector) org.apache.commons.math3.geometry.euclidean.twod.Vector2D.clinit()
org.apache.commons.math3.geometry.euclidean.threed.Plane.toSubSpace(org.apache.commons.math3.geometry.Vector) org.apache.commons.math3.geometry.euclidean.twod.Vector2D(double,double)
org.apache.commons.math3.geometry.euclidean.threed.Plane.toSubSpace(org.apache.commons.math3.geometry.Vector) org.apache.commons.math3.geometry.euclidean.twod.Vector2D.dotProduct(org.apache.commons.math3.geometry.Vector)
org.apache.commons.math3.analysis.function.Asinh.derivative() org.apache.commons.math3.analysis.function.Cbrt.derivative()
org.apache.commons.math3.analysis.function.Asinh.derivative() org.apache.commons.math3.analysis.function.Minus.derivative()
org.apache.commons.math3.analysis.function.Asinh.derivative() org.apache.commons.math3.analysis.function.Tanh.derivative()
org.apache.commons.math3.analysis.function.Asinh.derivative() org.apache.commons.math3.analysis.FunctionUtils.toDifferentiableUnivariateFunction(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction)
org.apache.commons.math3.analysis.function.Asinh.derivative() org.apache.commons.math3.analysis.function.Expm1.derivative()
org.apache.commons.math3.analysis.function.Asinh.derivative() org.apache.commons.math3.analysis.function.Power.derivative()
org.apache.commons.math3.analysis.function.Asinh.derivative() org.apache.commons.math3.analysis.function.Logit.derivative()
org.apache.commons.math3.analysis.function.Asinh.derivative() org.apache.commons.math3.analysis.function.Sinc.derivative()
org.apache.commons.math3.analysis.function.Asinh.derivative() org.apache.commons.math3.analysis.function.Constant.derivative()
org.apache.commons.math3.analysis.function.Asinh.derivative() org.apache.commons.math3.analysis.function.Log10.derivative()
org.apache.commons.math3.analysis.function.Asinh.derivative() org.apache.commons.math3.analysis.function.Sigmoid.derivative()
org.apache.commons.math3.analysis.function.Asinh.derivative() org.apache.commons.math3.analysis.function.Acosh.derivative()
org.apache.commons.math3.analysis.function.Asinh.derivative() org.apache.commons.math3.analysis.function.Exp.derivative()
org.apache.commons.math3.analysis.function.Asinh.derivative() org.apache.commons.math3.analysis.function.Sinh.derivative()
org.apache.commons.math3.analysis.function.Asinh.derivative() java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Asinh.derivative() org.apache.commons.math3.analysis.polynomials.PolynomialFunction.derivative()
org.apache.commons.math3.analysis.function.Asinh.derivative() org.apache.commons.math3.analysis.function.Gaussian.derivative()
org.apache.commons.math3.analysis.function.Asinh.derivative() org.apache.commons.math3.analysis.function.Atanh.derivative()
org.apache.commons.math3.analysis.function.Asinh.derivative() org.apache.commons.math3.analysis.function.Sqrt.derivative()
org.apache.commons.math3.analysis.function.Asinh.derivative() org.apache.commons.math3.analysis.FunctionUtils$3.derivative()
org.apache.commons.math3.analysis.function.Asinh.derivative() org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.derivative()
org.apache.commons.math3.analysis.function.Asinh.derivative() org.apache.commons.math3.analysis.function.Log1p.derivative()
org.apache.commons.math3.analysis.function.Asinh.derivative() org.apache.commons.math3.analysis.function.Asin.derivative()
org.apache.commons.math3.analysis.function.Asinh.derivative() org.apache.commons.math3.analysis.function.Cos.derivative()
org.apache.commons.math3.analysis.function.Asinh.derivative() org.apache.commons.math3.analysis.function.Asinh.derivative()
org.apache.commons.math3.analysis.function.Asinh.derivative() org.apache.commons.math3.analysis.function.Tan.derivative()
org.apache.commons.math3.analysis.function.Asinh.derivative() org.apache.commons.math3.analysis.FunctionUtils$6.derivative()
org.apache.commons.math3.analysis.function.Asinh.derivative() org.apache.commons.math3.analysis.function.Log.derivative()
org.apache.commons.math3.analysis.function.Asinh.derivative() org.apache.commons.math3.analysis.function.Atan.derivative()
org.apache.commons.math3.analysis.function.Asinh.derivative() org.apache.commons.math3.analysis.function.Acos.derivative()
org.apache.commons.math3.analysis.function.Asinh.derivative() org.apache.commons.math3.analysis.FunctionUtils$14.derivative()
org.apache.commons.math3.analysis.function.Asinh.derivative() org.apache.commons.math3.analysis.function.Identity.derivative()
org.apache.commons.math3.analysis.function.Asinh.derivative() org.apache.commons.math3.analysis.function.Cosh.derivative()
org.apache.commons.math3.analysis.function.Asinh.derivative() org.apache.commons.math3.analysis.FunctionUtils$9.derivative()
org.apache.commons.math3.analysis.function.Asinh.derivative() org.apache.commons.math3.analysis.function.Logistic.derivative()
org.apache.commons.math3.analysis.function.Asinh.derivative() org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative()
org.apache.commons.math3.analysis.function.Asinh.derivative() org.apache.commons.math3.analysis.function.Inverse.derivative()
org.apache.commons.math3.analysis.function.Asinh.derivative() org.apache.commons.math3.analysis.function.Sin.derivative()
org.apache.commons.math3.fraction.BigFraction(java.math.BigInteger,java.math.BigInteger) java.lang.Object.clinit()
org.apache.commons.math3.fraction.BigFraction(java.math.BigInteger,java.math.BigInteger) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.fraction.BigFraction(java.math.BigInteger,java.math.BigInteger) java.lang.Throwable.clinit()
org.apache.commons.math3.fraction.BigFraction(java.math.BigInteger,java.math.BigInteger) java.math.BigInteger.divide(java.math.BigInteger)
org.apache.commons.math3.fraction.BigFraction(java.math.BigInteger,java.math.BigInteger) org.apache.commons.math3.exception.ZeroException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])
org.apache.commons.math3.fraction.BigFraction(java.math.BigInteger,java.math.BigInteger) java.math.BigInteger.equals(java.lang.Object)
org.apache.commons.math3.fraction.BigFraction(java.math.BigInteger,java.math.BigInteger) org.apache.commons.math3.exception.util.LocalizedFormats.clinit()
org.apache.commons.math3.fraction.BigFraction(java.math.BigInteger,java.math.BigInteger) java.math.BigInteger.gcd(java.math.BigInteger)
org.apache.commons.math3.fraction.BigFraction(java.math.BigInteger,java.math.BigInteger) java.math.BigInteger.compareTo(java.math.BigInteger)
org.apache.commons.math3.fraction.BigFraction(java.math.BigInteger,java.math.BigInteger) java.math.BigInteger.clinit()
org.apache.commons.math3.fraction.BigFraction(java.math.BigInteger,java.math.BigInteger) java.math.BigInteger.negate()
org.apache.commons.math3.fraction.BigFraction(java.math.BigInteger,java.math.BigInteger) java.lang.Number()
org.apache.commons.math3.fraction.BigFraction(java.math.BigInteger,java.math.BigInteger) org.apache.commons.math3.util.MathUtils.checkNotNull(java.lang.Object,org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])
org.apache.commons.math3.util.OpenIntToFieldHashMap$Iterator.value() java.lang.Object.clinit()
org.apache.commons.math3.util.OpenIntToFieldHashMap$Iterator.value() java.lang.Throwable.clinit()
org.apache.commons.math3.util.OpenIntToFieldHashMap$Iterator.value() org.apache.commons.math3.util.OpenIntToFieldHashMap.access$100(org.apache.commons.math3.util.OpenIntToFieldHashMap)
org.apache.commons.math3.util.OpenIntToFieldHashMap$Iterator.value() java.util.NoSuchElementException()
org.apache.commons.math3.util.OpenIntToFieldHashMap$Iterator.value() org.apache.commons.math3.util.OpenIntToFieldHashMap.access$300(org.apache.commons.math3.util.OpenIntToFieldHashMap)
org.apache.commons.math3.util.OpenIntToFieldHashMap$Iterator.value() java.util.ConcurrentModificationException()
org.apache.commons.math3.analysis.function.Pow.value(double,double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Pow.value(double,double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.function.Pow.value(double,double) org.apache.commons.math3.util.FastMath.pow(double,double)
org.apache.commons.math3.geometry.VectorFormat(java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat) java.lang.String.trim()
org.apache.commons.math3.geometry.VectorFormat(java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat) java.lang.Object()
org.apache.commons.math3.random.SynchronizedRandomGenerator.nextInt() org.apache.commons.math3.random.SynchronizedRandomGenerator.nextInt()
org.apache.commons.math3.random.SynchronizedRandomGenerator.nextInt() org.apache.commons.math3.random.RandomAdaptor.nextInt()
org.apache.commons.math3.random.SynchronizedRandomGenerator.nextInt() org.apache.commons.math3.random.BitsStreamGenerator.nextInt()
org.apache.commons.math3.random.SynchronizedRandomGenerator.nextInt() java.util.Random.nextInt()
org.apache.commons.math3.random.SynchronizedRandomGenerator.nextInt() org.apache.commons.math3.random.RandomGeneratorFactory$1.nextInt()
org.apache.commons.math3.optim.linear.LinearConstraint.equals(java.lang.Object) org.apache.commons.math3.linear.ArrayRealVector.equals(java.lang.Object)
org.apache.commons.math3.optim.linear.LinearConstraint.equals(java.lang.Object) org.apache.commons.math3.linear.RealVector.equals(java.lang.Object)
org.apache.commons.math3.optim.linear.LinearConstraint.equals(java.lang.Object) org.apache.commons.math3.linear.OpenMapRealVector.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.getBit(int,int) java.lang.Object.clinit()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.getBit(int,int) org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.exponent(long)
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.getBit(int,int) java.lang.Double.clinit()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.getBit(int,int) java.lang.Double.doubleToLongBits(double)
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.getBit(int,int) org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.sign(long)
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.getBit(int,int) org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.mantissa(long)
org.apache.commons.math3.analysis.FunctionUtils$14.derivative() org.apache.commons.math3.analysis.FunctionUtils$14$1(org.apache.commons.math3.analysis.FunctionUtils$14)
org.apache.commons.math3.analysis.FunctionUtils$14.derivative() java.lang.Object.clinit()
org.apache.commons.math3.linear.SparseFieldVector.getEntry(int) org.apache.commons.math3.util.OpenIntToFieldHashMap.get(int)
org.apache.commons.math3.linear.SparseFieldVector.getEntry(int) org.apache.commons.math3.linear.SparseFieldVector.checkIndex(int)
org.apache.commons.math3.util.MultidimensionalCounter$Iterator.hasNext() java.lang.Object.clinit()
org.apache.commons.math3.util.MultidimensionalCounter$Iterator.hasNext() org.apache.commons.math3.util.MultidimensionalCounter.access$000(org.apache.commons.math3.util.MultidimensionalCounter)
org.apache.commons.math3.util.MultidimensionalCounter$Iterator.hasNext() org.apache.commons.math3.util.MultidimensionalCounter.access$200(org.apache.commons.math3.util.MultidimensionalCounter)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Acos.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Tanh.derivative()
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Sqrt.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Power.derivative()
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Asin.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Constant.derivative()
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Gaussian.derivative()
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.ode.events.EventState$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$7.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Sin.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.derivative()
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$3.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Exp.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$12.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Inverse.derivative()
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$8.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Constant.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Atan.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Minus.derivative()
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Floor.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Log10.derivative()
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Sinh.derivative()
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.HarmonicOscillator.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$6.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Atanh.derivative()
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.StepFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$13.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$3.derivative()
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Log1p.derivative()
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Cos.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Atanh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$10.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Cos.derivative()
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Asinh.derivative()
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Sigmoid.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$6.derivative()
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Acos.derivative()
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$14.derivative()
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Logistic.derivative()
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative()
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Abs.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$14.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Cbrt.derivative()
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Ulp.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Sigmoid.derivative()
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Rint.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Gaussian.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Tan.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunction.derivative()
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Sqrt.derivative()
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Sinc.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Log1p.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Identity.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Signum.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.distribution.AbstractRealDistribution$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Logit.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Acosh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Atan.derivative()
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$2.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Identity.derivative()
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$9.derivative()
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Log10.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Logistic.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Sinh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Cosh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Expm1.derivative()
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Expm1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Logit.derivative()
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Sinc.derivative()
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Power.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Acosh.derivative()
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Exp.derivative()
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Cbrt.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.optimization.direct.PowellOptimizer$LineSearch$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$4.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Asinh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Minus.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Tanh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$9.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Asin.derivative()
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Log.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Tan.derivative()
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Log.derivative()
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Inverse.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Cosh.derivative()
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$5.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Ceil.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$15.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double) org.apache.commons.math3.analysis.function.Sin.derivative()
org.apache.commons.math3.dfp.Dfp.dfp2string() java.lang.String.clinit()
org.apache.commons.math3.dfp.Dfp.dfp2string() java.lang.Object.clinit()
org.apache.commons.math3.dfp.Dfp.dfp2string() java.lang.String(char[],int,int)
org.apache.commons.math3.fraction.ProperBigFractionFormat.format(org.apache.commons.math3.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition) java.text.FieldPosition.setBeginIndex(int)
org.apache.commons.math3.fraction.ProperBigFractionFormat.format(org.apache.commons.math3.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.fraction.FractionFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)
org.apache.commons.math3.fraction.ProperBigFractionFormat.format(org.apache.commons.math3.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.fraction.ProperBigFractionFormat.getWholeFormat()
org.apache.commons.math3.fraction.ProperBigFractionFormat.format(org.apache.commons.math3.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.fraction.BigFraction.getNumerator()
org.apache.commons.math3.fraction.ProperBigFractionFormat.format(org.apache.commons.math3.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition) java.math.BigInteger.divide(java.math.BigInteger)
org.apache.commons.math3.fraction.ProperBigFractionFormat.format(org.apache.commons.math3.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.fraction.AbstractFormat.getDenominatorFormat()
org.apache.commons.math3.fraction.ProperBigFractionFormat.format(org.apache.commons.math3.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition) java.text.FieldPosition.setEndIndex(int)
org.apache.commons.math3.fraction.ProperBigFractionFormat.format(org.apache.commons.math3.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition) java.math.BigInteger.equals(java.lang.Object)
org.apache.commons.math3.fraction.ProperBigFractionFormat.format(org.apache.commons.math3.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition) java.lang.StringBuffer.append(char)
org.apache.commons.math3.fraction.ProperBigFractionFormat.format(org.apache.commons.math3.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition) java.math.BigInteger.compareTo(java.math.BigInteger)
org.apache.commons.math3.fraction.ProperBigFractionFormat.format(org.apache.commons.math3.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition) java.math.BigInteger.clinit()
org.apache.commons.math3.fraction.ProperBigFractionFormat.format(org.apache.commons.math3.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.fraction.BigFraction.getDenominator()
org.apache.commons.math3.fraction.ProperBigFractionFormat.format(org.apache.commons.math3.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.fraction.AbstractFormat.getNumeratorFormat()
org.apache.commons.math3.fraction.ProperBigFractionFormat.format(org.apache.commons.math3.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.fraction.BigFractionFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)
org.apache.commons.math3.fraction.ProperBigFractionFormat.format(org.apache.commons.math3.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition) java.lang.Object.clinit()
org.apache.commons.math3.fraction.ProperBigFractionFormat.format(org.apache.commons.math3.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition) java.text.NumberFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)
org.apache.commons.math3.fraction.ProperBigFractionFormat.format(org.apache.commons.math3.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition) java.math.BigInteger.remainder(java.math.BigInteger)
org.apache.commons.math3.fraction.ProperBigFractionFormat.format(org.apache.commons.math3.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition) java.lang.StringBuffer.append(java.lang.String)
org.apache.commons.math3.fraction.ProperBigFractionFormat.format(org.apache.commons.math3.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition) java.text.DecimalFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)
org.apache.commons.math3.fraction.ProperBigFractionFormat.format(org.apache.commons.math3.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition) java.math.BigInteger.negate()
org.apache.commons.math3.analysis.FunctionUtils$17.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure[]) org.apache.commons.math3.exception.NumberIsTooLargeException(java.lang.Number,java.lang.Number,boolean)
org.apache.commons.math3.analysis.FunctionUtils$17.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure[]) org.apache.commons.math3.exception.DimensionMismatchException(int,int)
org.apache.commons.math3.analysis.FunctionUtils$17.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure[]) org.apache.commons.math3.fitting.AbstractCurveFitter$TheoreticalValuesFunction$1.value(double[])
org.apache.commons.math3.analysis.FunctionUtils$17.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure[]) java.lang.Throwable.clinit()
org.apache.commons.math3.analysis.FunctionUtils$17.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure[]) java.lang.Integer.clinit()
org.apache.commons.math3.analysis.FunctionUtils$17.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure[]) org.apache.commons.math3.analysis.FunctionUtils$16.value(double[])
org.apache.commons.math3.analysis.FunctionUtils$17.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure[]) org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[])
org.apache.commons.math3.analysis.FunctionUtils$17.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure[]) org.apache.commons.math3.analysis.FunctionUtils$18.value(double[])
org.apache.commons.math3.analysis.FunctionUtils$17.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure[]) org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[])
org.apache.commons.math3.analysis.FunctionUtils$17.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure[]) org.apache.commons.math3.analysis.differentiation.GradientFunction.value(double[])
org.apache.commons.math3.analysis.FunctionUtils$17.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure[]) java.lang.Object.clinit()
org.apache.commons.math3.analysis.FunctionUtils$17.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure[]) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getOrder()
org.apache.commons.math3.analysis.FunctionUtils$17.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure[]) org.apache.commons.math3.analysis.FunctionUtils$16.gradient()
org.apache.commons.math3.analysis.FunctionUtils$17.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure[]) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.analysis.FunctionUtils$17.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure[]) org.apache.commons.math3.analysis.FunctionUtils$19.value(double[])
org.apache.commons.math3.analysis.FunctionUtils$17.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure[]) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getPartialDerivative(int[])
org.apache.commons.math3.analysis.FunctionUtils$17.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure[]) org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[])
org.apache.commons.math3.analysis.FunctionUtils$17.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure[]) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getFreeParameters()
org.apache.commons.math3.analysis.FunctionUtils$17.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure[]) org.apache.commons.math3.analysis.differentiation.DerivativeStructure(int,int,double[])
org.apache.commons.math3.analysis.FunctionUtils$17.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure[]) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getValue()
org.apache.commons.math3.analysis.FunctionUtils$17.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure[]) org.apache.commons.math3.analysis.FunctionUtils$16$2.value(double[])
org.apache.commons.math3.analysis.FunctionUtils$17.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure[]) java.lang.Integer.valueOf(int)
org.apache.commons.math3.util.Precision.clinit() java.lang.Object.clinit()
org.apache.commons.math3.util.Precision.clinit() org.apache.commons.math3.util.Precision.clinit()
org.apache.commons.math3.util.Precision.clinit() java.lang.Double.clinit()
org.apache.commons.math3.util.Precision.clinit() java.lang.Double.longBitsToDouble(long)
org.apache.commons.math3.analysis.function.Cosh.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.cosh()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() sun.text.CompactByteArray.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.awt.geom.AffineTransform.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() sun.security.krb5.internal.KerberosTime.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.util.Hashtable.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() sun.security.krb5.internal.Ticket.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() sun.text.IntHashtable.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() sun.security.util.BitArray.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() com.sun.imageio.plugins.jpeg.DHTMarkerSegment$Htable.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.util.SimpleTimeZone.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.util.IdentityHashMap.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.util.JapaneseImperialCalendar.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() sun.security.krb5.internal.ETypeInfo.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() sun.text.normalizer.NormalizerBase.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.util.Locale.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() sun.security.krb5.internal.TicketFlags.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() sun.java2d.SunGraphics2D.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() sun.security.provider.MD4.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() javax.swing.tree.DefaultTreeSelectionModel.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.awt.print.Paper.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.text.MessageFormat.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.lang.Object.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() javax.swing.text.SimpleAttributeSet.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() javax.swing.ArrayTable.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.text.SimpleDateFormat.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() sun.java2d.loops.FontInfo.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() sun.security.krb5.PrincipalName.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.awt.PageAttributes.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() com.sun.imageio.plugins.png.PNGMetadata.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.util.GregorianCalendar.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() com.sun.imageio.plugins.jpeg.SOFMarkerSegment.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.util.Vector.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() javax.swing.text.ElementIterator.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.net.HttpCookie.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.awt.datatransfer.MimeType.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.awt.RenderingHints.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.text.DateFormatSymbols.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.util.HashSet.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() sun.util.calendar.ImmutableGregorianDate.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() javax.sound.midi.MetaMessage.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() sun.font.FontLineMetrics.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() sun.font.StandardGlyphVector.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.text.AttributedString$AttributedStringIterator.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.text.RuleBasedBreakIterator.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() javax.swing.text.Segment.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.awt.ImageCapabilities.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() sun.security.krb5.internal.LastReqEntry.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() javax.swing.text.StyleContext$SmallAttributeSet.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.text.RuleBasedCollator.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.text.RuleBasedBreakIterator$SafeCharIterator.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() javax.swing.text.ElementIterator$StackItem.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$ICCMarkerSegment.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.awt.geom.Line2D.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() org.apache.commons.math3.util.FastMathLiteralArrays.clinit()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.util.ResourceBundle$CacheKey.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumbJPEG.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() sun.security.krb5.internal.ETypeInfo2.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.awt.font.TextMeasurer.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.util.LinkedList.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() sun.font.AttributeValues.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() javax.swing.text.StyledEditorKit$1.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.util.ArrayDeque.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() javax.swing.text.GlyphView.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.awt.datatransfer.DataFlavor.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() sun.security.krb5.internal.PAData.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() javax.swing.AbstractAction.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() sun.text.normalizer.ReplaceableUCharacterIterator.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.util.concurrent.CopyOnWriteArrayList.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumb.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.awt.geom.Point2D.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() javax.swing.text.html.OptionListModel.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() sun.security.krb5.internal.AuthorizationDataEntry.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() javax.swing.text.EditorKit.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() javax.swing.text.StyledEditorKit.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() com.sun.imageio.plugins.jpeg.DQTMarkerSegment.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.util.JumboEnumSet.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() sun.security.krb5.internal.HostAddresses.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() javax.crypto.Mac.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() javax.naming.Reference.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() com.sun.imageio.plugins.jpeg.SOSMarkerSegment.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.util.jar.Manifest.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() sun.security.krb5.EncryptedData.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.text.NumberFormat.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() sun.net.ProgressSource.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.util.EnumSet.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() sun.net.www.protocol.http.AuthenticationInfo.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.awt.datatransfer.MimeTypeParameterList.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.util.regex.Pattern$CharPropertyNames$CloneableProperty.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.security.SignatureSpi.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() sun.security.x509.GeneralSubtrees.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.util.ArrayList.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() com.sun.imageio.plugins.jpeg.DHTMarkerSegment.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() javax.naming.CompositeName.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.awt.font.CharArrayIterator.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.security.Signature$Delegate.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.util.TreeSet.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.util.Hashtable$Entry.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.awt.image.ImageFilter.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() com.sun.imageio.plugins.jpeg.SOSMarkerSegment$ScanComponentSpec.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.awt.geom.Path2D$Float.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() sun.security.krb5.EncryptionKey.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.text.DecimalFormat.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.awt.BufferCapabilities.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.awt.image.Kernel.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.util.Date.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.awt.Insets.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() sun.net.www.MimeEntry.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() sun.util.calendar.CalendarDate.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.awt.print.PageFormat.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() com.sun.imageio.plugins.jpeg.SOFMarkerSegment$ComponentSpec.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.util.EnumMap.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() sun.security.krb5.internal.AuthorizationData.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFExtensionMarkerSegment.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.awt.geom.QuadCurve2D.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() sun.security.krb5.internal.crypto.crc32.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.util.zip.ZipEntry.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.security.MessageDigest$Delegate.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() sun.util.calendar.ZoneInfo.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() sun.text.normalizer.CharacterIteratorWrapper.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.lang.Object.clinit()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.text.DecimalFormatSymbols.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.awt.font.TextLayout.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() javax.swing.DefaultListSelectionModel.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.text.DigitList.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() javax.print.attribute.EnumSyntax.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() javax.sound.midi.ShortMessage.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.awt.geom.CubicCurve2D.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.text.ChoiceFormat.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.lang.Thread.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() com.sun.imageio.plugins.jpeg.MarkerSegment.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.awt.image.renderable.RenderContext.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() sun.security.krb5.Realm.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() com.sun.imageio.plugins.jpeg.DQTMarkerSegment$Qtable.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.awt.JobAttributes.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() com.sun.imageio.plugins.jpeg.JPEGMetadata.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.text.StringCharacterIterator.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.awt.geom.Dimension2D.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() sun.security.x509.NameConstraintsExtension.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.awt.geom.Area.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.util.jar.Attributes.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() sun.security.krb5.internal.HostAddress.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.util.TreeMap.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.awt.geom.Path2D$Double.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.text.BreakIterator.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.util.BitSet.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.lang.Enum.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.util.AbstractMap.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() javax.swing.tree.DefaultMutableTreeNode.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.awt.geom.RectangularShape.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() sun.security.provider.PolicyParser$GrantEntry.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() java.util.HashMap.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB() javax.swing.text.html.HTMLEditorKit.clone()
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.clinit() org.apache.commons.math3.geometry.euclidean.oned.Vector1D(double)
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.clinit() java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.clinit() org.apache.commons.math3.geometry.euclidean.oned.Vector1D.clinit()
org.apache.commons.math3.geometry.VectorFormat.format(java.lang.StringBuffer,java.text.FieldPosition,double[]) java.text.FieldPosition.setBeginIndex(int)
org.apache.commons.math3.geometry.VectorFormat.format(java.lang.StringBuffer,java.text.FieldPosition,double[]) java.lang.Object.clinit()
org.apache.commons.math3.geometry.VectorFormat.format(java.lang.StringBuffer,java.text.FieldPosition,double[]) java.text.FieldPosition.setEndIndex(int)
org.apache.commons.math3.geometry.VectorFormat.format(java.lang.StringBuffer,java.text.FieldPosition,double[]) java.lang.StringBuffer.append(java.lang.String)
org.apache.commons.math3.geometry.VectorFormat.format(java.lang.StringBuffer,java.text.FieldPosition,double[]) org.apache.commons.math3.util.CompositeFormat.formatDouble(double,java.text.NumberFormat,java.lang.StringBuffer,java.text.FieldPosition)
org.apache.commons.math3.fraction.Fraction(double,double,int) org.apache.commons.math3.fraction.Fraction(double,double,int,int)
org.apache.commons.math3.geometry.partitioning.AbstractRegion(org.apache.commons.math3.geometry.partitioning.BSPTree) java.lang.Object()
org.apache.commons.math3.distribution.TDistribution.cumulativeProbability(double) java.lang.Object.clinit()
org.apache.commons.math3.distribution.TDistribution.cumulativeProbability(double) org.apache.commons.math3.special.Beta.regularizedBeta(double,double,double)
org.apache.commons.math3.distribution.TDistribution.cumulativeProbability(double) org.apache.commons.math3.special.Beta.clinit()
org.apache.commons.math3.util.FastMathCalc.printarray(java.io.PrintStream,java.lang.String,int,double[][]) org.apache.commons.math3.util.FastMathCalc.checkLen(int,int)
org.apache.commons.math3.util.FastMathCalc.printarray(java.io.PrintStream,java.lang.String,int,double[][]) java.io.PrintStream.print(java.lang.String)
org.apache.commons.math3.util.FastMathCalc.printarray(java.io.PrintStream,java.lang.String,int,double[][]) java.io.PrintStream.println(java.lang.String)
org.apache.commons.math3.util.FastMathCalc.printarray(java.io.PrintStream,java.lang.String,int,double[][]) java.lang.Object.clinit()
org.apache.commons.math3.util.FastMathCalc.printarray(java.io.PrintStream,java.lang.String,int,double[][]) java.lang.StringBuilder()
org.apache.commons.math3.util.FastMathCalc.printarray(java.io.PrintStream,java.lang.String,int,double[][]) java.io.PrintStream.printf(java.lang.String,java.lang.Object[])
org.apache.commons.math3.util.FastMathCalc.printarray(java.io.PrintStream,java.lang.String,int,double[][]) org.apache.commons.math3.util.FastMathCalc.format(double)
org.apache.commons.math3.util.FastMathCalc.printarray(java.io.PrintStream,java.lang.String,int,double[][]) org.apache.commons.math3.util.FastMathCalc.clinit()
org.apache.commons.math3.util.FastMathCalc.printarray(java.io.PrintStream,java.lang.String,int,double[][]) java.lang.StringBuilder.append(java.lang.String)
org.apache.commons.math3.util.FastMathCalc.printarray(java.io.PrintStream,java.lang.String,int,double[][]) java.lang.StringBuilder.toString()
org.apache.commons.math3.util.FastMathCalc.printarray(java.io.PrintStream,java.lang.String,int,double[][]) java.lang.StringBuilder.append(int)
org.apache.commons.math3.geometry.partitioning.RegionFactory$XorMerger.merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean,boolean) org.apache.commons.math3.geometry.partitioning.BSPTree.insertInTree(org.apache.commons.math3.geometry.partitioning.BSPTree,boolean)
org.apache.commons.math3.geometry.partitioning.RegionFactory$XorMerger.merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean,boolean) java.lang.Object.clinit()
org.apache.commons.math3.geometry.partitioning.RegionFactory$XorMerger.merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean,boolean) java.lang.Boolean.booleanValue()
org.apache.commons.math3.geometry.partitioning.RegionFactory$XorMerger.merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean,boolean) org.apache.commons.math3.geometry.partitioning.BSPTree.getAttribute()
org.apache.commons.math3.geometry.partitioning.RegionFactory$XorMerger.merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean,boolean) org.apache.commons.math3.geometry.partitioning.RegionFactory.access$500(org.apache.commons.math3.geometry.partitioning.RegionFactory,org.apache.commons.math3.geometry.partitioning.BSPTree)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator.evaluate(org.apache.commons.math3.analysis.differentiation.DerivativeStructure,double,double[]) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.multiply(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator.evaluate(org.apache.commons.math3.analysis.differentiation.DerivativeStructure,double,double[]) java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator.evaluate(org.apache.commons.math3.analysis.differentiation.DerivativeStructure,double,double[]) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getOrder()
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator.evaluate(org.apache.commons.math3.analysis.differentiation.DerivativeStructure,double,double[]) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.add(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator.evaluate(org.apache.commons.math3.analysis.differentiation.DerivativeStructure,double,double[]) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives()
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator.evaluate(org.apache.commons.math3.analysis.differentiation.DerivativeStructure,double,double[]) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getFreeParameters()
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator.evaluate(org.apache.commons.math3.analysis.differentiation.DerivativeStructure,double,double[]) org.apache.commons.math3.analysis.differentiation.DerivativeStructure(int,int,double[])
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator.evaluate(org.apache.commons.math3.analysis.differentiation.DerivativeStructure,double,double[]) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getValue()
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator.evaluate(org.apache.commons.math3.analysis.differentiation.DerivativeStructure,double,double[]) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.multiply(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator.evaluate(org.apache.commons.math3.analysis.differentiation.DerivativeStructure,double,double[]) org.apache.commons.math3.analysis.differentiation.DerivativeStructure(int,int,double)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.log() java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.log() org.apache.commons.math3.analysis.differentiation.DSCompiler.log(double[],int,double[],int)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.log() org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DSCompiler)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getSmallest() org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.getSmallest()
org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator.writeExternal(java.io.ObjectOutput) java.io.ObjectOutputStream.writeDouble(double)
org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator.writeExternal(java.io.ObjectOutput) org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.writeBaseExternal(java.io.ObjectOutput)
org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator.writeExternal(java.io.ObjectOutput) java.io.ObjectOutputStream.writeInt(int)
org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.get(int[]) java.lang.Object.clinit()
org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.get(int[]) org.apache.commons.math3.exception.DimensionMismatchException(int,int)
org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.get(int[]) java.lang.Throwable.clinit()
org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.get(int[]) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor$BoundaryProjector.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(java.util.Collection)
org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor$BoundaryProjector.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices()
org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor$BoundaryProjector.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.geometry.euclidean.twod.Line(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double)
org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor$BoundaryProjector.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.geometry.partitioning.RegionFactory.union(org.apache.commons.math3.geometry.partitioning.Region,org.apache.commons.math3.geometry.partitioning.Region)
org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor$BoundaryProjector.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.ArrayList.add(java.lang.Object)
org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor$BoundaryProjector.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor.access$200(org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor)
org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor$BoundaryProjector.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor$BoundaryProjector.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.geometry.euclidean.twod.Line(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)
org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor$BoundaryProjector.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.geometry.euclidean.threed.SubPlane.split(org.apache.commons.math3.geometry.partitioning.Hyperplane)
org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor$BoundaryProjector.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.getHyperplane()
org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor$BoundaryProjector.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.geometry.euclidean.twod.Vector2D.clinit()
org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor$BoundaryProjector.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.getRemainingRegion()
org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor$BoundaryProjector.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor$BoundaryProjector.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.geometry.euclidean.twod.Line.wholeHyperplane()
org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor$BoundaryProjector.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.ArrayList.clinit()
org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor$BoundaryProjector.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor.access$100(org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor)
org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor$BoundaryProjector.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.geometry.euclidean.twod.Line.getAngle()
org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor$BoundaryProjector.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.geometry.euclidean.threed.Plane.toSpace(org.apache.commons.math3.geometry.Vector)
org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor$BoundaryProjector.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.geometry.euclidean.threed.Plane.getNormal()
org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor$BoundaryProjector.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.geometry.partitioning.RegionFactory()
org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor$BoundaryProjector.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.geometry.euclidean.threed.Vector3D.dotProduct(org.apache.commons.math3.geometry.Vector)
org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor$BoundaryProjector.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor.access$000(org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor)
org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor$BoundaryProjector.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.util.FastMath.abs(double)
org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor$BoundaryProjector.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.geometry.euclidean.twod.Vector2D(double,double)
org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor$BoundaryProjector.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.geometry.euclidean.twod.SubLine.split(org.apache.commons.math3.geometry.partitioning.Hyperplane)
org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor$BoundaryProjector.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint.split(org.apache.commons.math3.geometry.partitioning.Hyperplane)
org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor$BoundaryProjector.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane.getPlus()
org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor$BoundaryProjector.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.ArrayList()
org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor$BoundaryProjector.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane.getMinus()
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getMax() org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getMax()
org.apache.commons.math3.special.Gamma.gamma(double) java.lang.Object.clinit()
org.apache.commons.math3.special.Gamma.gamma(double) org.apache.commons.math3.util.FastMath.rint(double)
org.apache.commons.math3.special.Gamma.gamma(double) org.apache.commons.math3.special.Gamma.lanczos(double)
org.apache.commons.math3.special.Gamma.gamma(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.special.Gamma.gamma(double) org.apache.commons.math3.util.FastMath.pow(double,double)
org.apache.commons.math3.special.Gamma.gamma(double) org.apache.commons.math3.special.Gamma.clinit()
org.apache.commons.math3.special.Gamma.gamma(double) org.apache.commons.math3.util.FastMath.exp(double)
org.apache.commons.math3.special.Gamma.gamma(double) org.apache.commons.math3.util.FastMath.sin(double)
org.apache.commons.math3.special.Gamma.gamma(double) org.apache.commons.math3.util.FastMath.abs(double)
org.apache.commons.math3.special.Gamma.gamma(double) org.apache.commons.math3.special.Gamma.invGamma1pm1(double)
org.apache.commons.math3.util.MathUtils.checkNotNull(java.lang.Object) java.lang.Object.clinit()
org.apache.commons.math3.util.MathUtils.checkNotNull(java.lang.Object) java.lang.Throwable.clinit()
org.apache.commons.math3.util.MathUtils.checkNotNull(java.lang.Object) org.apache.commons.math3.exception.NullArgumentException()
org.apache.commons.math3.ode.events.Transformer(java.lang.String,int) java.lang.Enum(java.lang.String,int)
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.append(java.lang.StringBuilder,double[],java.lang.String,java.lang.String,java.lang.String) java.lang.StringBuilder.append(double)
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.append(java.lang.StringBuilder,double[],java.lang.String,java.lang.String,java.lang.String) java.lang.StringBuilder.append(java.lang.String)
org.apache.commons.math3.random.RandomGeneratorFactory$1.setSeed(long) java.util.Random.setSeed(long)
org.apache.commons.math3.random.RandomGeneratorFactory$1.setSeed(long) org.apache.commons.math3.random.RandomAdaptor.setSeed(long)
org.apache.commons.math3.random.RandomGeneratorFactory$1.setSeed(long) java.util.concurrent.ThreadLocalRandom.setSeed(long)
org.apache.commons.math3.random.RandomGeneratorFactory$1.setSeed(long) java.security.SecureRandom.setSeed(long)
org.apache.commons.math3.analysis.FunctionUtils$16$2(org.apache.commons.math3.analysis.FunctionUtils$16) java.lang.Object()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.tanh() java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.tanh() org.apache.commons.math3.analysis.differentiation.DSCompiler.tanh(double[],int,double[],int)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.tanh() org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DSCompiler)
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getVariance() org.apache.commons.math3.stat.descriptive.moment.FirstMoment.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getVariance() org.apache.commons.math3.stat.descriptive.rank.Max.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getVariance() org.apache.commons.math3.stat.descriptive.summary.SumOfLogs.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getVariance() org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getVariance() org.apache.commons.math3.stat.descriptive.summary.SumOfSquares.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getVariance() org.apache.commons.math3.stat.descriptive.rank.Min.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getVariance() org.apache.commons.math3.stat.descriptive.moment.ThirdMoment.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getVariance() org.apache.commons.math3.stat.descriptive.moment.SecondMoment.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getVariance() org.apache.commons.math3.stat.descriptive.moment.FourthMoment.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getVariance() org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getVariance() org.apache.commons.math3.stat.descriptive.moment.Mean.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getVariance() org.apache.commons.math3.stat.descriptive.moment.Skewness.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getVariance() org.apache.commons.math3.stat.descriptive.moment.Kurtosis.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getVariance() org.apache.commons.math3.stat.descriptive.moment.Variance.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getVariance() org.apache.commons.math3.stat.descriptive.summary.Product.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getVariance() org.apache.commons.math3.stat.descriptive.summary.Sum.getResult()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) java.io.ObjectStreamField.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) java.nio.IntBuffer.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) javax.swing.TimerQueue$DelayedTimer.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) sun.security.krb5.KrbServiceLocator$SrvRecord.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) javax.swing.DefaultRowSorter$Row.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) java.nio.DoubleBuffer.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) sun.swing.text.TextComponentPrintable$IntegerSegment.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) java.lang.ProcessEnvironment$Value.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) java.net.URI.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) java.lang.Enum.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) java.io.File.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) java.util.Calendar.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization$DataRow.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) org.apache.commons.math3.fraction.BigFraction.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) java.lang.Boolean.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) java.text.RuleBasedCollationKey.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) java.lang.String.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) java.nio.CharBuffer.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) java.nio.file.attribute.FileTime.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.access$100(org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) javax.naming.CompositeName.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) java.lang.Double.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) sun.nio.fs.UnixPath.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) java.math.BigDecimal.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) java.math.BigInteger.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) org.apache.commons.math3.util.BigReal.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ComparableSegment.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) java.lang.Integer.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) java.nio.FloatBuffer.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) java.lang.Long.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) org.apache.commons.math3.fraction.Fraction.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) java.lang.Character.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) sun.awt.shell.ShellFolder.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) org.apache.commons.math3.stat.ranking.NaturalRanking$IntDoublePair.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) sun.security.x509.X509CRLImpl$X509IssuerSerial.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) org.apache.commons.math3.util.Decimal64.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) java.lang.Object.clinit()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) java.nio.LongBuffer.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) sun.awt.OSInfo$WindowsVersion.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) javax.swing.JDesktopPane$ComponentPosition.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) java.nio.ByteBuffer.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.access$200(org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) java.util.Date.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) java.nio.file.attribute.FileTime$DaysAndNanos.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) java.lang.ProcessEnvironment$Variable.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) sun.security.x509.X509CRLEntryImpl.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) java.lang.Byte.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) java.nio.ShortBuffer.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.access$000(org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) java.lang.Short.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) java.nio.charset.Charset.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable) java.lang.Float.compareTo(java.lang.Object)
org.apache.commons.math3.random.RandomDataGenerator() java.lang.Object()
org.apache.commons.math3.analysis.function.Inverse.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.reciprocal()
org.apache.commons.math3.random.RandomGeneratorFactory$1.nextBoolean() java.util.Random.nextBoolean()
org.apache.commons.math3.random.RandomGeneratorFactory$1.nextBoolean() org.apache.commons.math3.random.RandomAdaptor.nextBoolean()
org.apache.commons.math3.exception.util.ExceptionContext.buildMessage(java.util.Locale,java.lang.String) sun.security.jca.ProviderList$3.get(int)
org.apache.commons.math3.exception.util.ExceptionContext.buildMessage(java.util.Locale,java.lang.String) java.util.Collections$SynchronizedCollection.size()
org.apache.commons.math3.exception.util.ExceptionContext.buildMessage(java.util.Locale,java.lang.String) java.util.concurrent.CopyOnWriteArrayList.get(int)
org.apache.commons.math3.exception.util.ExceptionContext.buildMessage(java.util.Locale,java.lang.String) java.util.SubList.size()
org.apache.commons.math3.exception.util.ExceptionContext.buildMessage(java.util.Locale,java.lang.String) sun.security.jca.ProviderList$ServiceList.size()
org.apache.commons.math3.exception.util.ExceptionContext.buildMessage(java.util.Locale,java.lang.String) java.util.Collections$CheckedList.get(int)
org.apache.commons.math3.exception.util.ExceptionContext.buildMessage(java.util.Locale,java.lang.String) java.util.Collections$UnmodifiableCollection.size()
org.apache.commons.math3.exception.util.ExceptionContext.buildMessage(java.util.Locale,java.lang.String) java.util.concurrent.CopyOnWriteArrayList.size()
org.apache.commons.math3.exception.util.ExceptionContext.buildMessage(java.util.Locale,java.lang.String) java.util.LinkedList.size()
org.apache.commons.math3.exception.util.ExceptionContext.buildMessage(java.util.Locale,java.lang.String) java.util.Collections$SynchronizedList.get(int)
org.apache.commons.math3.exception.util.ExceptionContext.buildMessage(java.util.Locale,java.lang.String) java.util.Collections$CopiesList.get(int)
org.apache.commons.math3.exception.util.ExceptionContext.buildMessage(java.util.Locale,java.lang.String) java.util.Collections$SingletonList.get(int)
org.apache.commons.math3.exception.util.ExceptionContext.buildMessage(java.util.Locale,java.lang.String) java.util.Collections$EmptyList.size()
org.apache.commons.math3.exception.util.ExceptionContext.buildMessage(java.util.Locale,java.lang.String) java.util.Arrays$ArrayList.size()
org.apache.commons.math3.exception.util.ExceptionContext.buildMessage(java.util.Locale,java.lang.String) java.util.ArrayList.get(int)
org.apache.commons.math3.exception.util.ExceptionContext.buildMessage(java.util.Locale,java.lang.String) org.apache.commons.math3.exception.util.LocalizedFormats.getLocalizedString(java.util.Locale)
org.apache.commons.math3.exception.util.ExceptionContext.buildMessage(java.util.Locale,java.lang.String) java.util.Vector.size()
org.apache.commons.math3.exception.util.ExceptionContext.buildMessage(java.util.Locale,java.lang.String) java.lang.Object.clinit()
org.apache.commons.math3.exception.util.ExceptionContext.buildMessage(java.util.Locale,java.lang.String) java.text.MessageFormat(java.lang.String,java.util.Locale)
org.apache.commons.math3.exception.util.ExceptionContext.buildMessage(java.util.Locale,java.lang.String) java.util.concurrent.CopyOnWriteArrayList$COWSubList.get(int)
org.apache.commons.math3.exception.util.ExceptionContext.buildMessage(java.util.Locale,java.lang.String) java.util.Arrays$ArrayList.get(int)
org.apache.commons.math3.exception.util.ExceptionContext.buildMessage(java.util.Locale,java.lang.String) java.lang.StringBuilder()
org.apache.commons.math3.exception.util.ExceptionContext.buildMessage(java.util.Locale,java.lang.String) java.util.Collections$CopiesList.size()
org.apache.commons.math3.exception.util.ExceptionContext.buildMessage(java.util.Locale,java.lang.String) sun.security.jca.ProviderList$3.size()
org.apache.commons.math3.exception.util.ExceptionContext.buildMessage(java.util.Locale,java.lang.String) java.util.Vector.get(int)
org.apache.commons.math3.exception.util.ExceptionContext.buildMessage(java.util.Locale,java.lang.String) sun.awt.util.IdentityArrayList.get(int)
org.apache.commons.math3.exception.util.ExceptionContext.buildMessage(java.util.Locale,java.lang.String) java.util.concurrent.CopyOnWriteArrayList$COWSubList.size()
org.apache.commons.math3.exception.util.ExceptionContext.buildMessage(java.util.Locale,java.lang.String) org.apache.commons.math3.exception.util.DummyLocalizable.getLocalizedString(java.util.Locale)
org.apache.commons.math3.exception.util.ExceptionContext.buildMessage(java.util.Locale,java.lang.String) java.util.ArrayList$SubList.get(int)
org.apache.commons.math3.exception.util.ExceptionContext.buildMessage(java.util.Locale,java.lang.String) java.util.SubList.get(int)
org.apache.commons.math3.exception.util.ExceptionContext.buildMessage(java.util.Locale,java.lang.String) java.text.MessageFormat.clinit()
org.apache.commons.math3.exception.util.ExceptionContext.buildMessage(java.util.Locale,java.lang.String) java.util.ArrayList.size()
org.apache.commons.math3.exception.util.ExceptionContext.buildMessage(java.util.Locale,java.lang.String) java.text.Format.format(java.lang.Object)
org.apache.commons.math3.exception.util.ExceptionContext.buildMessage(java.util.Locale,java.lang.String) java.util.LinkedList.get(int)
org.apache.commons.math3.exception.util.ExceptionContext.buildMessage(java.util.Locale,java.lang.String) java.util.Collections$SingletonList.size()
org.apache.commons.math3.exception.util.ExceptionContext.buildMessage(java.util.Locale,java.lang.String) java.util.Collections$CheckedCollection.size()
org.apache.commons.math3.exception.util.ExceptionContext.buildMessage(java.util.Locale,java.lang.String) sun.security.jca.ProviderList$ServiceList.get(int)
org.apache.commons.math3.exception.util.ExceptionContext.buildMessage(java.util.Locale,java.lang.String) java.lang.StringBuilder.toString()
org.apache.commons.math3.exception.util.ExceptionContext.buildMessage(java.util.Locale,java.lang.String) java.util.ArrayList$SubList.size()
org.apache.commons.math3.exception.util.ExceptionContext.buildMessage(java.util.Locale,java.lang.String) sun.awt.util.IdentityLinkedList.get(int)
org.apache.commons.math3.exception.util.ExceptionContext.buildMessage(java.util.Locale,java.lang.String) java.lang.StringBuilder.append(java.lang.String)
org.apache.commons.math3.exception.util.ExceptionContext.buildMessage(java.util.Locale,java.lang.String) java.util.Collections$EmptyList.get(int)
org.apache.commons.math3.exception.util.ExceptionContext.buildMessage(java.util.Locale,java.lang.String) java.util.Collections$UnmodifiableList.get(int)
org.apache.commons.math3.exception.util.ExceptionContext.buildMessage(java.util.Locale,java.lang.String) sun.awt.util.IdentityLinkedList.size()
org.apache.commons.math3.exception.util.ExceptionContext.buildMessage(java.util.Locale,java.lang.String) sun.awt.util.IdentityArrayList.size()
org.apache.commons.math3.exception.MathIllegalStateException.getLocalizedMessage() org.apache.commons.math3.exception.util.ExceptionContext.getLocalizedMessage()
org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormat.getInstance(java.util.Locale) org.apache.commons.math3.util.CompositeFormat.getDefaultNumberFormat(java.util.Locale)
org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormat.getInstance(java.util.Locale) java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormat.getInstance(java.util.Locale) org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormat(java.text.NumberFormat)
org.apache.commons.math3.stat.descriptive.moment.ThirdMoment.clear() org.apache.commons.math3.stat.descriptive.moment.SecondMoment.clear()
org.apache.commons.math3.util.MathArrays.linearCombination(double,double,double,double,double,double) java.lang.Object.clinit()
org.apache.commons.math3.util.MathArrays.linearCombination(double,double,double,double,double,double) java.lang.Double.isNaN(double)
org.apache.commons.math3.util.MathArrays.linearCombination(double,double,double,double,double,double) java.lang.Double.clinit()
org.apache.commons.math3.distribution.AbstractRealDistribution$1.value(double) org.apache.commons.math3.distribution.CauchyDistribution.cumulativeProbability(double)
org.apache.commons.math3.distribution.AbstractRealDistribution$1.value(double) org.apache.commons.math3.distribution.ChiSquaredDistribution.cumulativeProbability(double)
org.apache.commons.math3.distribution.AbstractRealDistribution$1.value(double) org.apache.commons.math3.distribution.TDistribution.cumulativeProbability(double)
org.apache.commons.math3.distribution.AbstractRealDistribution$1.value(double) org.apache.commons.math3.distribution.WeibullDistribution.cumulativeProbability(double)
org.apache.commons.math3.distribution.AbstractRealDistribution$1.value(double) org.apache.commons.math3.distribution.NormalDistribution.cumulativeProbability(double)
org.apache.commons.math3.distribution.AbstractRealDistribution$1.value(double) org.apache.commons.math3.distribution.ExponentialDistribution.cumulativeProbability(double)
org.apache.commons.math3.distribution.AbstractRealDistribution$1.value(double) org.apache.commons.math3.distribution.BetaDistribution.cumulativeProbability(double)
org.apache.commons.math3.distribution.AbstractRealDistribution$1.value(double) org.apache.commons.math3.distribution.ParetoDistribution.cumulativeProbability(double)
org.apache.commons.math3.distribution.AbstractRealDistribution$1.value(double) org.apache.commons.math3.distribution.LevyDistribution.cumulativeProbability(double)
org.apache.commons.math3.distribution.AbstractRealDistribution$1.value(double) org.apache.commons.math3.distribution.TriangularDistribution.cumulativeProbability(double)
org.apache.commons.math3.distribution.AbstractRealDistribution$1.value(double) org.apache.commons.math3.distribution.LogNormalDistribution.cumulativeProbability(double)
org.apache.commons.math3.distribution.AbstractRealDistribution$1.value(double) org.apache.commons.math3.distribution.GammaDistribution.cumulativeProbability(double)
org.apache.commons.math3.distribution.AbstractRealDistribution$1.value(double) org.apache.commons.math3.distribution.FDistribution.cumulativeProbability(double)
org.apache.commons.math3.distribution.AbstractRealDistribution$1.value(double) org.apache.commons.math3.distribution.UniformRealDistribution.cumulativeProbability(double)
org.apache.commons.math3.distribution.AbstractRealDistribution$1.value(double) org.apache.commons.math3.random.EmpiricalDistribution.cumulativeProbability(double)
org.apache.commons.math3.distribution.AbstractRealDistribution$1.value(double) org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double)
org.apache.commons.math3.analysis.function.Max.value(double,double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Max.value(double,double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.function.Max.value(double,double) org.apache.commons.math3.util.FastMath.max(double,double)
org.apache.commons.math3.analysis.FunctionUtils$2.value(double) org.apache.commons.math3.analysis.function.Logistic.value(double)
org.apache.commons.math3.analysis.FunctionUtils$2.value(double) org.apache.commons.math3.analysis.function.Sinh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$2.value(double) org.apache.commons.math3.analysis.function.Acos.value(double)
org.apache.commons.math3.analysis.FunctionUtils$2.value(double) org.apache.commons.math3.analysis.function.Cosh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$2.value(double) org.apache.commons.math3.analysis.function.Sqrt.value(double)
org.apache.commons.math3.analysis.FunctionUtils$2.value(double) org.apache.commons.math3.analysis.function.Expm1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$2.value(double) org.apache.commons.math3.analysis.function.Power.value(double)
org.apache.commons.math3.analysis.FunctionUtils$2.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$2.value(double) org.apache.commons.math3.analysis.function.Asin.value(double)
org.apache.commons.math3.analysis.FunctionUtils$2.value(double) org.apache.commons.math3.analysis.function.Gaussian.value(double)
org.apache.commons.math3.analysis.FunctionUtils$2.value(double) org.apache.commons.math3.analysis.function.Cbrt.value(double)
org.apache.commons.math3.analysis.FunctionUtils$2.value(double) org.apache.commons.math3.analysis.function.Tan.value(double)
org.apache.commons.math3.analysis.FunctionUtils$2.value(double) org.apache.commons.math3.analysis.function.HarmonicOscillator.value(double)
org.apache.commons.math3.analysis.FunctionUtils$2.value(double) org.apache.commons.math3.analysis.function.Asinh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$2.value(double) org.apache.commons.math3.analysis.function.Minus.value(double)
org.apache.commons.math3.analysis.FunctionUtils$2.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$2.value(double) org.apache.commons.math3.analysis.function.Tanh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$2.value(double) org.apache.commons.math3.analysis.function.Sinc.value(double)
org.apache.commons.math3.analysis.FunctionUtils$2.value(double) org.apache.commons.math3.analysis.function.Log1p.value(double)
org.apache.commons.math3.analysis.FunctionUtils$2.value(double) org.apache.commons.math3.analysis.function.Sin.value(double)
org.apache.commons.math3.analysis.FunctionUtils$2.value(double) org.apache.commons.math3.analysis.function.Atanh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$2.value(double) org.apache.commons.math3.analysis.function.Cos.value(double)
org.apache.commons.math3.analysis.FunctionUtils$2.value(double) org.apache.commons.math3.analysis.function.Identity.value(double)
org.apache.commons.math3.analysis.FunctionUtils$2.value(double) org.apache.commons.math3.analysis.function.Log.value(double)
org.apache.commons.math3.analysis.FunctionUtils$2.value(double) org.apache.commons.math3.analysis.function.Exp.value(double)
org.apache.commons.math3.analysis.FunctionUtils$2.value(double) org.apache.commons.math3.analysis.function.Sigmoid.value(double)
org.apache.commons.math3.analysis.FunctionUtils$2.value(double) org.apache.commons.math3.analysis.function.Logit.value(double)
org.apache.commons.math3.analysis.FunctionUtils$2.value(double) org.apache.commons.math3.analysis.function.Acosh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$2.value(double) org.apache.commons.math3.analysis.function.Inverse.value(double)
org.apache.commons.math3.analysis.FunctionUtils$2.value(double) org.apache.commons.math3.analysis.FunctionUtils$2.value(double)
org.apache.commons.math3.analysis.FunctionUtils$2.value(double) org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$2.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.value(double)
org.apache.commons.math3.analysis.FunctionUtils$2.value(double) org.apache.commons.math3.analysis.FunctionUtils$5.value(double)
org.apache.commons.math3.analysis.FunctionUtils$2.value(double) org.apache.commons.math3.analysis.function.Log10.value(double)
org.apache.commons.math3.analysis.FunctionUtils$2.value(double) org.apache.commons.math3.analysis.FunctionUtils$15.value(double)
org.apache.commons.math3.analysis.FunctionUtils$2.value(double) org.apache.commons.math3.analysis.FunctionUtils$8.value(double)
org.apache.commons.math3.analysis.FunctionUtils$2.value(double) org.apache.commons.math3.analysis.function.Atan.value(double)
org.apache.commons.math3.analysis.FunctionUtils$2.value(double) org.apache.commons.math3.analysis.function.Constant.value(double)
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.evaluate(double[],int,int) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.summary.SumOfLogs.evaluate(double[],int,int)
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.moment.Variance.evaluate(double[],int,int)
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.summary.Product.evaluate(double[],int,int)
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.moment.GeometricMean.evaluate(double[],int,int)
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.summary.SumOfSquares.evaluate(double[],int,int)
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.rank.Min.evaluate(double[],int,int)
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.moment.Kurtosis.evaluate(double[],int,int)
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.evaluate(double[],int,int)
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.moment.Skewness.evaluate(double[],int,int)
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.evaluate(double[],int,int) java.lang.Object.clinit()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.summary.Sum.evaluate(double[],int,int)
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.rank.Max.evaluate(double[],int,int)
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.moment.Mean.evaluate(double[],int,int)
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.evaluate(double[],int,int) org.apache.commons.math3.util.FastMath.exp(double)
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate(double[],int,int)
org.apache.commons.math3.analysis.function.Identity.derivative() org.apache.commons.math3.analysis.function.Constant(double)
org.apache.commons.math3.analysis.function.Identity.derivative() java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Identity.derivative() org.apache.commons.math3.analysis.function.Identity.derivative()
org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1.compare(org.apache.commons.math3.optim.PointVectorValuePair,org.apache.commons.math3.optim.PointVectorValuePair) java.lang.Object.clinit()
org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1.compare(org.apache.commons.math3.optim.PointVectorValuePair,org.apache.commons.math3.optim.PointVectorValuePair) java.lang.Double.compare(double,double)
org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1.compare(org.apache.commons.math3.optim.PointVectorValuePair,org.apache.commons.math3.optim.PointVectorValuePair) org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1.weightedResidual(org.apache.commons.math3.optim.PointVectorValuePair)
org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1.compare(org.apache.commons.math3.optim.PointVectorValuePair,org.apache.commons.math3.optim.PointVectorValuePair) java.lang.Double.clinit()
org.apache.commons.math3.dfp.Dfp.add(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.Dfp.newInstance(org.apache.commons.math3.dfp.Dfp)
org.apache.commons.math3.dfp.Dfp.add(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.DfpField.getRadixDigits()
org.apache.commons.math3.dfp.Dfp.add(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.Dfp.compare(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)
org.apache.commons.math3.dfp.Dfp.add(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.DfpDec.round(int)
org.apache.commons.math3.dfp.Dfp.add(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.Dfp.shiftRight()
org.apache.commons.math3.dfp.Dfp.add(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.DfpDec.newInstance(org.apache.commons.math3.dfp.Dfp)
org.apache.commons.math3.dfp.Dfp.add(org.apache.commons.math3.dfp.Dfp) java.lang.Object.clinit()
org.apache.commons.math3.dfp.Dfp.add(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.Dfp.round(int)
org.apache.commons.math3.dfp.Dfp.add(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.Dfp.dotrap(int,java.lang.String,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)
org.apache.commons.math3.dfp.Dfp.add(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.DfpField.setIEEEFlagsBits(int)
org.apache.commons.math3.dfp.Dfp.add(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.Dfp.shiftLeft()
org.apache.commons.math3.dfp.Dfp.add(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.Dfp.getZero()
org.apache.commons.math3.dfp.Dfp.add(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.Dfp.complement(int)
org.apache.commons.math3.dfp.Dfp.add(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.Dfp.isNaN()
org.apache.commons.math3.dfp.Dfp.add(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.Dfp.align(int)
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.compareTo(org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple) org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.encode(int)
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.compareTo(org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple) java.lang.Object.clinit()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.compareTo(org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.compareTo(org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple) org.apache.commons.math3.util.FastMath.min(int,int)
org.apache.commons.math3.ode.ParameterJacobianWrapper.isSupported(java.lang.String) org.apache.commons.math3.ode.ParameterizedWrapper.isSupported(java.lang.String)
org.apache.commons.math3.stat.descriptive.moment.SemiVariance.evaluate(double[],double,org.apache.commons.math3.stat.descriptive.moment.SemiVariance$Direction,boolean,int,int) org.apache.commons.math3.stat.descriptive.moment.SemiVariance$Direction.getDirection()
org.apache.commons.math3.stat.descriptive.moment.SemiVariance.evaluate(double[],double,org.apache.commons.math3.stat.descriptive.moment.SemiVariance$Direction,boolean,int,int) org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.test(double[],int,int)
org.apache.commons.math3.analysis.FunctionUtils$5.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Sinh.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$5.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Tanh.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$5.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Minus.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$5.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.add(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$5.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Asinh.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$5.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Atan.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$5.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.HarmonicOscillator.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$5.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Sin.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$5.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Power.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$5.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Cbrt.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$5.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Logistic.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$5.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$5.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Sigmoid.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$5.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$5.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Inverse.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$5.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$5.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$5.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.FunctionUtils$2.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$5.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Sinc.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$5.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Cos.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$5.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Log1p.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$5.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Acosh.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$5.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Atanh.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$5.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Log10.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$5.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Tan.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$5.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Sqrt.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$5.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Asin.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$5.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Gaussian.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$5.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Constant.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$5.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$5.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Acos.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$5.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Expm1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$5.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Identity.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$5.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.FunctionUtils$5.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$5.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Exp.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$5.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Logit.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$5.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Cosh.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$5.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.FunctionUtils$8.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$5.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Log.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ComparableSegment.compareTo(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ComparableSegment) org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.compareTo(org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple)
org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator.writeExternal(java.io.ObjectOutput) java.io.ObjectOutputStream.writeObject(java.lang.Object)
org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator.writeExternal(java.io.ObjectOutput) java.io.ObjectOutputStream.writeDouble(double)
org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator.writeExternal(java.io.ObjectOutput) org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.writeBaseExternal(java.io.ObjectOutput)
org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator.writeExternal(java.io.ObjectOutput) java.io.ObjectOutputStream.writeBoolean(boolean)
org.apache.commons.math3.util.BigReal.compareTo(java.lang.Object) org.apache.commons.math3.util.BigReal.compareTo(org.apache.commons.math3.util.BigReal)
org.apache.commons.math3.exception.util.ExceptionContext(java.lang.Throwable) java.lang.Object.clinit()
org.apache.commons.math3.exception.util.ExceptionContext(java.lang.Throwable) java.util.ArrayList.clinit()
org.apache.commons.math3.exception.util.ExceptionContext(java.lang.Throwable) java.util.HashMap.clinit()
org.apache.commons.math3.exception.util.ExceptionContext(java.lang.Throwable) java.util.ArrayList()
org.apache.commons.math3.exception.util.ExceptionContext(java.lang.Throwable) java.util.HashMap()
org.apache.commons.math3.exception.util.ExceptionContext(java.lang.Throwable) java.lang.Object()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) sun.util.PreHashedMap$1$1.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Acos.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) javax.security.auth.Subject$SecureSet$1.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.linear.RealVector$SparseEntryIterator.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.concurrent.CopyOnWriteArrayList$COWIterator.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) sun.net.www.MessageHeader$HeaderIterator.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) sun.util.PreHashedMap$2$1.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.linear.RealVector$2$UnmodifiableEntry.setValue(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.util.MultidimensionalCounter$Iterator.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) sun.net.www.HeaderParser$ParserIterator.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.concurrent.ArrayBlockingQueue$Itr.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.ode.events.EventState$1.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.FunctionUtils$7.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Sin.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) javax.imageio.ImageIO$ImageWriterIterator.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.JumboEnumSet$EnumSetIterator.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.LinkedList$ListItr.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.ServiceLoader$LazyIterator.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) sun.nio.fs.UnixFileSystem$FileStoreIterator.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.concurrent.DelayQueue$Itr.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) javax.imageio.spi.PartialOrderIterator.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.TreeMap$NavigableSubMap$SubMapKeyIterator.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.concurrent.ConcurrentHashMap$ValueIterator.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.LinkedList$DescendingIterator.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.FunctionUtils$1.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.JumboEnumSet$EnumSetIterator.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.concurrent.ConcurrentHashMap$KeyIterator.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.concurrent.DelayQueue$Itr.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.LinkedList$DescendingIterator.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.FunctionUtils$8.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) sun.util.PreHashedMap$2$1.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Constant.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Atan.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.WeakHashMap$HashIterator.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.IdentityHashMap$KeyIterator.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.LinkedHashMap$EntryIterator.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.IdentityHashMap$ValueIterator.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.FunctionUtils$6.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.AbstractMap$1$1.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.linear.RealVector$2$2.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) com.sun.imageio.plugins.jpeg.ImageTypeIterator.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) javax.imageio.spi.FilterIterator.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.ArrayDeque$DescendingIterator.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Sigmoid.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.Hashtable$Enumerator.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.linear.RealVector$1.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.HashMap$EntryIterator.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.Collections$CheckedMap$CheckedEntrySet$1.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.util.MultidimensionalCounter$Iterator.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) javax.security.auth.Subject$SecureSet$1.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.Collections$UnmodifiableList$1.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Abs.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.FunctionUtils$14.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) sun.nio.cs.FastCharsetProvider$1.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Ulp.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.concurrent.ArrayBlockingQueue$Itr.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.Vector$Itr.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.Collections$CheckedList$1.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Gaussian.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.ArrayList$SubList$1.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Sinc.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.HashMap$ValueIterator.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Identity.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) sun.misc.SoftCache$EntrySet$1.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.ArrayList$SubList$1.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.distribution.AbstractRealDistribution$1.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.concurrent.CopyOnWriteArrayList$COWIterator.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.FunctionUtils$2.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.concurrent.ConcurrentHashMap$HashIterator.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.IdentityHashMap$IdentityHashMapIterator.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.lang.ProcessEnvironment$StringEntrySet$1.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) sun.net.www.HeaderParser$ParserIterator.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.concurrent.LinkedBlockingDeque$AbstractItr.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) sun.nio.cs.FastCharsetProvider$1.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) sun.nio.fs.AbstractPath$1.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.EnumMap$KeyIterator.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Sinh.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.LinkedList$ListItr.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.Collections$EmptyIterator.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.Scanner.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) javax.imageio.spi.FilterIterator.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.Collections$CheckedCollection$1.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.ArrayDeque$DescendingIterator.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.concurrent.ConcurrentHashMap$EntryIterator.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Asinh.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.util.CombinatoricsUtils$SingletonIterator.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.LinkedHashMap$KeyIterator.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Tanh.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.concurrent.LinkedBlockingQueue$Itr.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.linear.RealVector$2$2.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.Collections$CheckedList$1.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) javax.imageio.ImageIO$ImageWriterIterator.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.linear.RealVector$2$UnmodifiableEntry.getValue()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Log.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.Collections$1.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.util.CombinatoricsUtils$LexicographicCombinationIterator.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.concurrent.ConcurrentLinkedQueue$Itr.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.concurrent.LinkedBlockingDeque$AbstractItr.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.ArrayDeque$DeqIterator.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.LinkedHashMap$LinkedHashIterator.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.concurrent.LinkedBlockingQueue$Itr.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Inverse.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch$1.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.lang.ProcessEnvironment$StringEntrySet$1.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.linear.RealVector$Entry.setValue(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) sun.util.PreHashedMap$1$1.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.linear.RealVector$Entry.getValue()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.FunctionUtils$15.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.lang.ProcessEnvironment$StringValues$1.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.WeakHashMap$EntryIterator.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) javax.print.MimeType$ParameterMapEntrySetIterator.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Sqrt.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Asin.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.AbstractMap$1$1.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.lang.ProcessEnvironment$StringKeySet$1.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) sun.awt.util.IdentityLinkedList$DescendingIterator.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) javax.imageio.ImageIO$ImageReaderIterator.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.TreeMap$DescendingKeyIterator.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.TreeMap$PrivateEntryIterator.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) javax.imageio.ImageIO$ImageReaderIterator.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.FunctionUtils$3.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) sun.misc.Service$LazyIterator.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Exp.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.Scanner.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.WeakHashMap$ValueIterator.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.linear.RealVector$SparseEntryIterator.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.IdentityHashMap$EntryIterator.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.PriorityQueue$Itr.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.Hashtable$Enumerator.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.FunctionUtils$12.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.RegularEnumSet$EnumSetIterator.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) javax.print.MimeType$ParameterMapEntrySetIterator.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.WeakHashMap$KeyIterator.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.Collections$CheckedMap$CheckedEntrySet$1.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.SubList$1.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Floor.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.Collections$EmptyIterator.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.LinkedHashMap$ValueIterator.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.linear.RealVector.iterator()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.ServiceLoader$1.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.TreeMap$ValueIterator.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.TreeMap$NavigableSubMap$SubMapEntryIterator.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.util.CombinatoricsUtils$LexicographicCombinationIterator.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.AbstractMap$2$1.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.EnumMap$ValueIterator.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.HarmonicOscillator.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.StepFunction.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.lang.ProcessEnvironment$StringValues$1.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) sun.nio.fs.AbstractPath$1.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.FunctionUtils$13.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Atanh.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Cos.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.FunctionUtils$10.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.TreeMap$EntryIterator.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.linear.RealVector$1.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.util.CombinatoricsUtils$SingletonIterator.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) sun.awt.util.IdentityLinkedList$ListItr.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.EnumMap$EntryIterator.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.Collections$UnmodifiableList$1.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.linear.RealVector$2$1.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.ArrayList$Itr.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.nio.charset.Charset$1.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.Collections$UnmodifiableCollection$1.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) com.sun.imageio.plugins.jpeg.ImageTypeIterator.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Rint.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.TreeMap$KeyIterator.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Tan.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.linear.OpenMapRealVector$OpenMapEntry.getValue()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.SubList$1.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.lang.ProcessEnvironment$StringKeySet$1.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Log1p.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.Collections$UnmodifiableCollection$1.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.RegularEnumSet$EnumSetIterator.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) sun.misc.SoftCache$EntrySet$1.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.HashMap$KeyIterator.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) sun.security.jca.ProviderList$ServiceList$1.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Signum.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.PriorityQueue$Itr.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.Collections$1.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Logit.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.ArrayList$Itr.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Acosh.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator$1.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.EnumMap$EnumMapIterator.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.AbstractMap$2$1.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Log10.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.ServiceLoader$1.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) javax.imageio.ImageIO$ImageTranscoderIterator.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Logistic.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) sun.security.jca.ProviderList$ServiceList$1.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Cosh.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Expm1.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Power.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.ServiceLoader$LazyIterator.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.Vector$Itr.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.ArrayDeque$DeqIterator.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Cbrt.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.optimization.direct.PowellOptimizer$LineSearch$1.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.linear.OpenMapRealVector$OpenMapEntry.setValue(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.FunctionUtils$4.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Minus.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.Collections$CheckedCollection$1.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.FunctionUtils$9.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.AbstractList$Itr.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) sun.misc.Service$LazyIterator.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.nio.charset.Charset$1.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) sun.net.www.MessageHeader$HeaderIterator.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.concurrent.ConcurrentLinkedQueue$Itr.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) sun.nio.fs.UnixFileSystem$FileStoreIterator.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) sun.awt.util.IdentityLinkedList$DescendingIterator.next()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) sun.awt.util.IdentityLinkedList$ListItr.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) javax.imageio.spi.PartialOrderIterator.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.FunctionUtils$5.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.TreeMap$NavigableSubMap$SubMapIterator.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.linear.RealVector$2.iterator()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) javax.imageio.ImageIO$ImageTranscoderIterator.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Ceil.value(double)
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.HashMap$HashIterator.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.util.AbstractList$Itr.hasNext()
org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.linear.RealVector$2$1.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.hashCode() java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.hashCode() org.apache.commons.math3.geometry.euclidean.oned.Vector1D.isNaN()
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.hashCode() org.apache.commons.math3.util.MathUtils.hash(double)
org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region) java.lang.Object()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSum()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getSumsq()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getMean()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getGeometricMean()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSumsq()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.equals(java.lang.Object) org.apache.commons.math3.util.Precision.equalsIncludingNaN(double,double)
org.apache.commons.math3.stat.descriptive.SummaryStatistics.equals(java.lang.Object) org.apache.commons.math3.util.Precision.equalsIncludingNaN(float,float)
org.apache.commons.math3.stat.descriptive.SummaryStatistics.equals(java.lang.Object) java.lang.Object.clinit()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getSum()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.SummaryStatistics.getVariance()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMax()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.equals(java.lang.Object) org.apache.commons.math3.util.Precision.clinit()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getMax()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMean()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getMin()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getN()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMin()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.SummaryStatistics.getN()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.SummaryStatistics.getGeometricMean()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getVariance()
org.apache.commons.math3.distribution.EnumeratedDistribution.getPmf() sun.security.jca.ProviderList$3.get(int)
org.apache.commons.math3.distribution.EnumeratedDistribution.getPmf() java.util.concurrent.CopyOnWriteArrayList.get(int)
org.apache.commons.math3.distribution.EnumeratedDistribution.getPmf() java.util.Collections$CheckedList.get(int)
org.apache.commons.math3.distribution.EnumeratedDistribution.getPmf() java.util.ArrayList.clinit()
org.apache.commons.math3.distribution.EnumeratedDistribution.getPmf() org.apache.commons.math3.util.Pair(java.lang.Object,java.lang.Object)
org.apache.commons.math3.distribution.EnumeratedDistribution.getPmf() java.util.ArrayList(int)
org.apache.commons.math3.distribution.EnumeratedDistribution.getPmf() java.util.Collections$SynchronizedList.get(int)
org.apache.commons.math3.distribution.EnumeratedDistribution.getPmf() java.util.LinkedList.get(int)
org.apache.commons.math3.distribution.EnumeratedDistribution.getPmf() sun.security.jca.ProviderList$ServiceList.get(int)
org.apache.commons.math3.distribution.EnumeratedDistribution.getPmf() java.util.Collections$CopiesList.get(int)
org.apache.commons.math3.distribution.EnumeratedDistribution.getPmf() java.util.Collections$SingletonList.get(int)
org.apache.commons.math3.distribution.EnumeratedDistribution.getPmf() java.util.ArrayList.add(java.lang.Object)
org.apache.commons.math3.distribution.EnumeratedDistribution.getPmf() java.util.ArrayList.get(int)
org.apache.commons.math3.distribution.EnumeratedDistribution.getPmf() java.lang.Object.clinit()
org.apache.commons.math3.distribution.EnumeratedDistribution.getPmf() java.util.concurrent.CopyOnWriteArrayList$COWSubList.get(int)
org.apache.commons.math3.distribution.EnumeratedDistribution.getPmf() java.util.Arrays$ArrayList.get(int)
org.apache.commons.math3.distribution.EnumeratedDistribution.getPmf() java.lang.Double.valueOf(double)
org.apache.commons.math3.distribution.EnumeratedDistribution.getPmf() sun.awt.util.IdentityLinkedList.get(int)
org.apache.commons.math3.distribution.EnumeratedDistribution.getPmf() java.util.Collections$EmptyList.get(int)
org.apache.commons.math3.distribution.EnumeratedDistribution.getPmf() java.util.Vector.get(int)
org.apache.commons.math3.distribution.EnumeratedDistribution.getPmf() sun.awt.util.IdentityArrayList.get(int)
org.apache.commons.math3.distribution.EnumeratedDistribution.getPmf() java.lang.Double.clinit()
org.apache.commons.math3.distribution.EnumeratedDistribution.getPmf() java.util.Collections$UnmodifiableList.get(int)
org.apache.commons.math3.distribution.EnumeratedDistribution.getPmf() java.util.ArrayList$SubList.get(int)
org.apache.commons.math3.distribution.EnumeratedDistribution.getPmf() java.util.SubList.get(int)
org.apache.commons.math3.stat.Frequency.hashCode() java.util.AbstractMap.hashCode()
org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction(double[],org.apache.commons.math3.analysis.polynomials.PolynomialFunction[]) org.apache.commons.math3.exception.DimensionMismatchException(int,int)
org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction(double[],org.apache.commons.math3.analysis.polynomials.PolynomialFunction[]) java.lang.Throwable.clinit()
org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction(double[],org.apache.commons.math3.analysis.polynomials.PolynomialFunction[]) java.lang.Integer.clinit()
org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction(double[],org.apache.commons.math3.analysis.polynomials.PolynomialFunction[]) java.lang.System.clinit()
org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction(double[],org.apache.commons.math3.analysis.polynomials.PolynomialFunction[]) java.lang.Object.clinit()
org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction(double[],org.apache.commons.math3.analysis.polynomials.PolynomialFunction[]) org.apache.commons.math3.util.MathArrays.checkOrder(double[])
org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction(double[],org.apache.commons.math3.analysis.polynomials.PolynomialFunction[]) org.apache.commons.math3.exception.NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)
org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction(double[],org.apache.commons.math3.analysis.polynomials.PolynomialFunction[]) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction(double[],org.apache.commons.math3.analysis.polynomials.PolynomialFunction[]) java.lang.System.arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction(double[],org.apache.commons.math3.analysis.polynomials.PolynomialFunction[]) org.apache.commons.math3.exception.NullArgumentException()
org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction(double[],org.apache.commons.math3.analysis.polynomials.PolynomialFunction[]) org.apache.commons.math3.exception.util.LocalizedFormats.clinit()
org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction(double[],org.apache.commons.math3.analysis.polynomials.PolynomialFunction[]) java.lang.Integer.valueOf(int)
org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction(double[],org.apache.commons.math3.analysis.polynomials.PolynomialFunction[]) java.lang.Object()
org.apache.commons.math3.util.FastMath$lnMant.access$400() java.lang.Object.clinit()
org.apache.commons.math3.util.FastMath$lnMant.access$400() org.apache.commons.math3.util.FastMath$lnMant.clinit()
org.apache.commons.math3.util.FastMath.expm1(double) java.lang.Object.clinit()
org.apache.commons.math3.util.FastMath.expm1(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.util.FastMath.expm1(double) org.apache.commons.math3.util.FastMath.expm1(double,double[])
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.access$000(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer,double[]) org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.computeObjectiveValue(double[])
org.apache.commons.math3.util.FastMath.min(double,double) java.lang.Object.clinit()
org.apache.commons.math3.util.FastMath.min(double,double) java.lang.Double.doubleToRawLongBits(double)
org.apache.commons.math3.util.FastMath.min(double,double) java.lang.Double.clinit()
org.apache.commons.math3.stat.descriptive.rank.Percentile.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.rank.Percentile.evaluate(double[],int,int,double)
org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix(java.lang.Object) java.lang.Object()
org.apache.commons.math3.linear.RealVector.mapMultiplyToSelf(double) org.apache.commons.math3.analysis.FunctionUtils.fix2ndArgument(org.apache.commons.math3.analysis.BivariateFunction,double)
org.apache.commons.math3.linear.RealVector.mapMultiplyToSelf(double) java.lang.Object.clinit()
org.apache.commons.math3.linear.RealVector.mapMultiplyToSelf(double) org.apache.commons.math3.analysis.function.Multiply()
org.apache.commons.math3.linear.RealVector.mapMultiplyToSelf(double) org.apache.commons.math3.linear.RealVector$2.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)
org.apache.commons.math3.linear.RealVector.mapMultiplyToSelf(double) org.apache.commons.math3.linear.RealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)
org.apache.commons.math3.linear.RealVector.mapMultiplyToSelf(double) org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)
org.apache.commons.math3.util.CombinatoricsUtils$SingletonIterator.next() java.lang.Object.clinit()
org.apache.commons.math3.util.CombinatoricsUtils$SingletonIterator.next() org.apache.commons.math3.util.CombinatoricsUtils$SingletonIterator.next()
org.apache.commons.math3.util.CombinatoricsUtils$SingletonIterator.next() java.lang.Throwable.clinit()
org.apache.commons.math3.util.CombinatoricsUtils$SingletonIterator.next() java.util.NoSuchElementException()
org.apache.commons.math3.util.FastMath.scalb(double,int) java.lang.Object.clinit()
org.apache.commons.math3.util.FastMath.scalb(double,int) java.lang.Double.isNaN(double)
org.apache.commons.math3.util.FastMath.scalb(double,int) java.lang.Double.doubleToRawLongBits(double)
org.apache.commons.math3.util.FastMath.scalb(double,int) java.lang.Double.clinit()
org.apache.commons.math3.util.FastMath.scalb(double,int) java.lang.Double.isInfinite(double)
org.apache.commons.math3.util.FastMath.scalb(double,int) java.lang.Double.longBitsToDouble(long)
org.apache.commons.math3.random.MersenneTwister.setSeed(int) org.apache.commons.math3.random.BitsStreamGenerator.clear()
org.apache.commons.math3.stat.Frequency.getCount(long) java.lang.Object.clinit()
org.apache.commons.math3.stat.Frequency.getCount(long) org.apache.commons.math3.stat.Frequency.getCount(java.lang.Comparable)
org.apache.commons.math3.stat.Frequency.getCount(long) java.lang.Long.valueOf(long)
org.apache.commons.math3.stat.Frequency.getCount(long) java.lang.Long.clinit()
org.apache.commons.math3.stat.descriptive.moment.Mean.getN() org.apache.commons.math3.stat.descriptive.moment.SecondMoment.getN()
org.apache.commons.math3.stat.descriptive.moment.Mean.getN() org.apache.commons.math3.stat.descriptive.moment.FirstMoment.getN()
org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex.equals(java.lang.Object) java.lang.Object.clinit()
org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex.equals(java.lang.Object) java.lang.Double.compare(double,double)
org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex.equals(java.lang.Object) java.lang.Double.clinit()
org.apache.commons.math3.linear.RealVector$2$2.next() sun.nio.cs.FastCharsetProvider$1.next()
org.apache.commons.math3.linear.RealVector$2$2.next() sun.util.PreHashedMap$1$1.next()
org.apache.commons.math3.linear.RealVector$2$2.next() javax.security.auth.Subject$SecureSet$1.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator.next()
org.apache.commons.math3.linear.RealVector$2$2.next() sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.AbstractMap$1$1.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.concurrent.CopyOnWriteArrayList$COWIterator.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.Vector$Itr.next()
org.apache.commons.math3.linear.RealVector$2$2.next() sun.net.www.MessageHeader$HeaderIterator.next()
org.apache.commons.math3.linear.RealVector$2$2.next() sun.util.PreHashedMap$2$1.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.TreeMap$KeyIterator.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.ArrayList$SubList$1.next()
org.apache.commons.math3.linear.RealVector$2$2.next() org.apache.commons.math3.util.MultidimensionalCounter$Iterator.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.concurrent.ArrayBlockingQueue$Itr.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.lang.ProcessEnvironment$StringKeySet$1.next()
org.apache.commons.math3.linear.RealVector$2$2.next() org.apache.commons.math3.linear.OpenMapRealVector$OpenMapEntry.getIndex()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.HashMap$ValueIterator.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.TreeMap$DescendingKeyIterator.next()
org.apache.commons.math3.linear.RealVector$2$2.next() javax.imageio.ImageIO$ImageReaderIterator.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.JumboEnumSet$EnumSetIterator.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.HashMap$KeyIterator.next()
org.apache.commons.math3.linear.RealVector$2$2.next() org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.next()
org.apache.commons.math3.linear.RealVector$2$2.next() sun.misc.SoftCache$EntrySet$1.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.ServiceLoader$LazyIterator.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.next()
org.apache.commons.math3.linear.RealVector$2$2.next() sun.misc.Service$LazyIterator.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.WeakHashMap$ValueIterator.next()
org.apache.commons.math3.linear.RealVector$2$2.next() org.apache.commons.math3.linear.RealVector$SparseEntryIterator.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.IdentityHashMap$EntryIterator.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.ArrayList$Itr.next()
org.apache.commons.math3.linear.RealVector$2$2.next() javax.imageio.spi.PartialOrderIterator.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.TreeMap$NavigableSubMap$SubMapKeyIterator.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.concurrent.ConcurrentHashMap$ValueIterator.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.PriorityQueue$Itr.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.AbstractMap$2$1.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.concurrent.ConcurrentHashMap$KeyIterator.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.ServiceLoader$1.next()
org.apache.commons.math3.linear.RealVector$2$2.next() javax.imageio.ImageIO$ImageTranscoderIterator.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.RegularEnumSet$EnumSetIterator.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.concurrent.DelayQueue$Itr.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.LinkedList$DescendingIterator.next()
org.apache.commons.math3.linear.RealVector$2$2.next() sun.net.www.HeaderParser$ParserIterator.next()
org.apache.commons.math3.linear.RealVector$2$2.next() javax.print.MimeType$ParameterMapEntrySetIterator.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.WeakHashMap$KeyIterator.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.concurrent.LinkedBlockingDeque$AbstractItr.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.Collections$CheckedMap$CheckedEntrySet$1.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.EnumMap$KeyIterator.next()
org.apache.commons.math3.linear.RealVector$2$2.next() sun.nio.fs.AbstractPath$1.next()
org.apache.commons.math3.linear.RealVector$2$2.next() sun.security.jca.ProviderList$ServiceList$1.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.SubList$1.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.LinkedList$ListItr.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.Collections$EmptyIterator.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.LinkedHashMap$ValueIterator.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.TreeMap$NavigableSubMap$SubMapEntryIterator.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.TreeMap$ValueIterator.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.Scanner.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.ArrayDeque$DeqIterator.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.LinkedHashMap$EntryIterator.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.IdentityHashMap$KeyIterator.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.ArrayDeque$DescendingIterator.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.EnumMap$ValueIterator.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.concurrent.ConcurrentHashMap$EntryIterator.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.IdentityHashMap$ValueIterator.next()
org.apache.commons.math3.linear.RealVector$2$2.next() org.apache.commons.math3.util.CombinatoricsUtils$SingletonIterator.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.Collections$CheckedCollection$1.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.LinkedHashMap$KeyIterator.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.AbstractList$Itr.next()
org.apache.commons.math3.linear.RealVector$2$2.next() org.apache.commons.math3.linear.RealVector$2$2.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.Collections$CheckedList$1.next()
org.apache.commons.math3.linear.RealVector$2$2.next() com.sun.imageio.plugins.jpeg.ImageTypeIterator.next()
org.apache.commons.math3.linear.RealVector$2$2.next() javax.imageio.ImageIO$ImageWriterIterator.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.TreeMap$EntryIterator.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next()
org.apache.commons.math3.linear.RealVector$2$2.next() org.apache.commons.math3.linear.RealVector$1.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.nio.charset.Charset$1.next()
org.apache.commons.math3.linear.RealVector$2$2.next() javax.imageio.spi.FilterIterator.next()
org.apache.commons.math3.linear.RealVector$2$2.next() sun.nio.fs.UnixFileSystem$FileStoreIterator.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.Collections$1.next()
org.apache.commons.math3.linear.RealVector$2$2.next() org.apache.commons.math3.util.CombinatoricsUtils$LexicographicCombinationIterator.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.concurrent.ConcurrentLinkedQueue$Itr.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.Hashtable$Enumerator.next()
org.apache.commons.math3.linear.RealVector$2$2.next() org.apache.commons.math3.linear.RealVector$Entry.getIndex()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.HashMap$EntryIterator.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.concurrent.LinkedBlockingQueue$Itr.next()
org.apache.commons.math3.linear.RealVector$2$2.next() sun.awt.util.IdentityLinkedList$DescendingIterator.next()
org.apache.commons.math3.linear.RealVector$2$2.next() sun.awt.util.IdentityLinkedList$ListItr.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.EnumMap$EntryIterator.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.lang.ProcessEnvironment$StringEntrySet$1.next()
org.apache.commons.math3.linear.RealVector$2$2.next() org.apache.commons.math3.linear.RealVector$2$1.next()
org.apache.commons.math3.linear.RealVector$2$2.next() org.apache.commons.math3.linear.RealVector$Entry.setIndex(int)
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.Collections$UnmodifiableList$1.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.WeakHashMap$EntryIterator.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.util.Collections$UnmodifiableCollection$1.next()
org.apache.commons.math3.linear.RealVector$2$2.next() java.lang.ProcessEnvironment$StringValues$1.next()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() sun.text.CompactByteArray.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.awt.geom.AffineTransform.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() sun.security.krb5.internal.KerberosTime.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.util.Hashtable.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() sun.security.krb5.internal.Ticket.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() sun.text.IntHashtable.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() sun.security.util.BitArray.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() com.sun.imageio.plugins.jpeg.DHTMarkerSegment$Htable.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.util.SimpleTimeZone.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.util.IdentityHashMap.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.util.JapaneseImperialCalendar.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() sun.security.krb5.internal.ETypeInfo.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() sun.text.normalizer.NormalizerBase.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.util.Locale.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() sun.security.krb5.internal.TicketFlags.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() sun.java2d.SunGraphics2D.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() sun.security.provider.MD4.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() javax.swing.tree.DefaultTreeSelectionModel.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.awt.print.Paper.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.text.MessageFormat.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.lang.Object.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() javax.swing.text.SimpleAttributeSet.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() javax.swing.ArrayTable.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.text.SimpleDateFormat.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() sun.java2d.loops.FontInfo.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() sun.security.krb5.PrincipalName.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.awt.PageAttributes.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() com.sun.imageio.plugins.png.PNGMetadata.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.util.GregorianCalendar.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() com.sun.imageio.plugins.jpeg.SOFMarkerSegment.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.util.Vector.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() org.apache.commons.math3.util.MathArrays$OrderDirection.clinit()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() javax.swing.text.ElementIterator.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.net.HttpCookie.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.awt.datatransfer.MimeType.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.awt.RenderingHints.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.text.DateFormatSymbols.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.util.HashSet.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() sun.util.calendar.ImmutableGregorianDate.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() javax.sound.midi.MetaMessage.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() sun.font.FontLineMetrics.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() sun.font.StandardGlyphVector.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.text.AttributedString$AttributedStringIterator.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.text.RuleBasedBreakIterator.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() javax.swing.text.Segment.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.awt.ImageCapabilities.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() sun.security.krb5.internal.LastReqEntry.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() javax.swing.text.StyleContext$SmallAttributeSet.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.text.RuleBasedCollator.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.text.RuleBasedBreakIterator$SafeCharIterator.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() javax.swing.text.ElementIterator$StackItem.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$ICCMarkerSegment.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.awt.geom.Line2D.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.util.ResourceBundle$CacheKey.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumbJPEG.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() sun.security.krb5.internal.ETypeInfo2.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.awt.font.TextMeasurer.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.util.LinkedList.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() sun.font.AttributeValues.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() javax.swing.text.StyledEditorKit$1.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.util.ArrayDeque.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() javax.swing.text.GlyphView.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.awt.datatransfer.DataFlavor.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() sun.security.krb5.internal.PAData.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() javax.swing.AbstractAction.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() sun.text.normalizer.ReplaceableUCharacterIterator.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.util.concurrent.CopyOnWriteArrayList.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumb.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.awt.geom.Point2D.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() javax.swing.text.html.OptionListModel.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() sun.security.krb5.internal.AuthorizationDataEntry.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() javax.swing.text.EditorKit.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() javax.swing.text.StyledEditorKit.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() com.sun.imageio.plugins.jpeg.DQTMarkerSegment.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.util.JumboEnumSet.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() sun.security.krb5.internal.HostAddresses.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() javax.crypto.Mac.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() javax.naming.Reference.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() com.sun.imageio.plugins.jpeg.SOSMarkerSegment.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.util.jar.Manifest.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() sun.security.krb5.EncryptedData.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.text.NumberFormat.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() sun.net.ProgressSource.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.util.EnumSet.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() sun.net.www.protocol.http.AuthenticationInfo.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.awt.datatransfer.MimeTypeParameterList.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.util.regex.Pattern$CharPropertyNames$CloneableProperty.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.security.SignatureSpi.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() sun.security.x509.GeneralSubtrees.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.util.ArrayList.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() com.sun.imageio.plugins.jpeg.DHTMarkerSegment.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() javax.naming.CompositeName.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.awt.font.CharArrayIterator.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.security.Signature$Delegate.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.util.TreeSet.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.util.Hashtable$Entry.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.awt.image.ImageFilter.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() com.sun.imageio.plugins.jpeg.SOSMarkerSegment$ScanComponentSpec.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.awt.geom.Path2D$Float.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() sun.security.krb5.EncryptionKey.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.text.DecimalFormat.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.awt.BufferCapabilities.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.awt.image.Kernel.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.util.Date.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.awt.Insets.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() sun.net.www.MimeEntry.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() sun.util.calendar.CalendarDate.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.awt.print.PageFormat.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() com.sun.imageio.plugins.jpeg.SOFMarkerSegment$ComponentSpec.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.util.EnumMap.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() sun.security.krb5.internal.AuthorizationData.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFExtensionMarkerSegment.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.awt.geom.QuadCurve2D.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() sun.security.krb5.internal.crypto.crc32.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.util.zip.ZipEntry.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.security.MessageDigest$Delegate.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() sun.util.calendar.ZoneInfo.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() sun.text.normalizer.CharacterIteratorWrapper.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.lang.Object.clinit()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.text.DecimalFormatSymbols.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.awt.font.TextLayout.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() javax.swing.DefaultListSelectionModel.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.text.DigitList.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() javax.print.attribute.EnumSyntax.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() javax.sound.midi.ShortMessage.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.awt.geom.CubicCurve2D.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.text.ChoiceFormat.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.lang.Thread.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() com.sun.imageio.plugins.jpeg.MarkerSegment.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.awt.image.renderable.RenderContext.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() sun.security.krb5.Realm.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() com.sun.imageio.plugins.jpeg.DQTMarkerSegment$Qtable.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.awt.JobAttributes.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() com.sun.imageio.plugins.jpeg.JPEGMetadata.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.text.StringCharacterIterator.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.awt.geom.Dimension2D.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() sun.security.x509.NameConstraintsExtension.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.awt.geom.Area.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.util.jar.Attributes.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() sun.security.krb5.internal.HostAddress.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.util.TreeMap.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.awt.geom.Path2D$Double.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.text.BreakIterator.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.util.BitSet.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.lang.Enum.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.util.AbstractMap.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() javax.swing.tree.DefaultMutableTreeNode.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.awt.geom.RectangularShape.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() sun.security.provider.PolicyParser$GrantEntry.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() java.util.HashMap.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.clone()
org.apache.commons.math3.util.MathArrays$OrderDirection.values() javax.swing.text.html.HTMLEditorKit.clone()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) sun.util.PreHashedMap$1$1.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) javax.print.MimeType$ParameterMapEntrySetIterator.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) javax.security.auth.Subject$SecureSet$1.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.AbstractMap$1$1.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) org.apache.commons.math3.linear.RealVector$SparseEntryIterator.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.Collections$SingletonList.iterator()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.concurrent.CopyOnWriteArrayList$COWIterator.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) sun.net.www.MessageHeader$HeaderIterator.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) sun.util.PreHashedMap$2$1.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) org.apache.commons.math3.util.MultidimensionalCounter$Iterator.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) sun.net.www.HeaderParser$ParserIterator.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.concurrent.ArrayBlockingQueue$Itr.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) sun.awt.util.IdentityLinkedList$DescendingIterator.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.lang.ProcessEnvironment$StringKeySet$1.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.TreeMap$DescendingKeyIterator.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) javax.imageio.ImageIO$ImageReaderIterator.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) javax.imageio.ImageIO$ImageWriterIterator.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.JumboEnumSet$EnumSetIterator.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.AbstractSequentialList.iterator()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) javax.imageio.ImageIO$ImageReaderIterator.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.TreeMap$PrivateEntryIterator.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.LinkedList$ListItr.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) sun.misc.Service$LazyIterator.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.ServiceLoader$LazyIterator.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.Scanner.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.WeakHashMap$ValueIterator.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) sun.nio.fs.UnixFileSystem$FileStoreIterator.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) org.apache.commons.math3.linear.RealVector$SparseEntryIterator.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.IdentityHashMap$EntryIterator.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.concurrent.DelayQueue$Itr.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) javax.imageio.spi.PartialOrderIterator.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.TreeMap$NavigableSubMap$SubMapKeyIterator.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.Collections$CheckedCollection.iterator()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.concurrent.ConcurrentHashMap$ValueIterator.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.PriorityQueue$Itr.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.LinkedList$DescendingIterator.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.Hashtable$Enumerator.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.JumboEnumSet$EnumSetIterator.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.concurrent.ConcurrentHashMap$KeyIterator.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.RegularEnumSet$EnumSetIterator.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.LinkedList$DescendingIterator.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.concurrent.DelayQueue$Itr.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) javax.print.MimeType$ParameterMapEntrySetIterator.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.WeakHashMap$KeyIterator.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.Collections$CheckedMap$CheckedEntrySet$1.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) sun.util.PreHashedMap$2$1.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) sun.security.jca.ProviderList$ServiceList.iterator()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.SubList$1.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.AbstractList.iterator()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.Collections$EmptyIterator.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.Collections$SynchronizedCollection.iterator()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.LinkedHashMap$ValueIterator.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.ServiceLoader$1.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.TreeMap$NavigableSubMap$SubMapEntryIterator.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.TreeMap$ValueIterator.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.WeakHashMap$HashIterator.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.LinkedHashMap$EntryIterator.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.IdentityHashMap$KeyIterator.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) org.apache.commons.math3.util.CombinatoricsUtils$LexicographicCombinationIterator.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.AbstractMap$2$1.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.EnumMap$ValueIterator.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.IdentityHashMap$ValueIterator.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) sun.nio.fs.AbstractPath$1.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.lang.ProcessEnvironment$StringValues$1.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.ArrayList$SubList.iterator()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.AbstractMap$1$1.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) org.apache.commons.math3.linear.RealVector$2$2.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) com.sun.imageio.plugins.jpeg.ImageTypeIterator.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.SubList.iterator()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.TreeMap$EntryIterator.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) org.apache.commons.math3.linear.RealVector$1.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) javax.imageio.spi.FilterIterator.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) org.apache.commons.math3.util.CombinatoricsUtils$SingletonIterator.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.ArrayDeque$DescendingIterator.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.Hashtable$Enumerator.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) org.apache.commons.math3.optimization.PointVectorValuePair.getValue()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) org.apache.commons.math3.linear.RealVector$1.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.HashMap$EntryIterator.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) sun.awt.util.IdentityLinkedList$ListItr.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.Collections$CheckedMap$CheckedEntrySet$1.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) org.apache.commons.math3.util.MultidimensionalCounter$Iterator.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) javax.security.auth.Subject$SecureSet$1.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.concurrent.CopyOnWriteArrayList$COWSubList.iterator()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.EnumMap$EntryIterator.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.Collections$UnmodifiableList$1.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) org.apache.commons.math3.linear.RealVector$2$1.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.lang.Double.doubleValue()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.ArrayList$Itr.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.Collections$UnmodifiableList$1.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.nio.charset.Charset$1.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.Collections$UnmodifiableCollection$1.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) sun.nio.cs.FastCharsetProvider$1.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.concurrent.ArrayBlockingQueue$Itr.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) com.sun.imageio.plugins.jpeg.ImageTypeIterator.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.Vector$Itr.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.Collections$CheckedList$1.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) org.apache.commons.math3.util.Pair.getValue()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.TreeMap$KeyIterator.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.ArrayList$SubList$1.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.Collections$UnmodifiableCollection.iterator()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.SubList$1.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.lang.ProcessEnvironment$StringKeySet$1.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.HashMap$ValueIterator.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.Collections$UnmodifiableCollection$1.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) sun.misc.SoftCache$EntrySet$1.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.RegularEnumSet$EnumSetIterator.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.HashMap$KeyIterator.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) sun.misc.SoftCache$EntrySet$1.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) sun.security.jca.ProviderList$ServiceList$1.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.ArrayList$SubList$1.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.concurrent.CopyOnWriteArrayList$COWIterator.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.PriorityQueue$Itr.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.Collections$1.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.ArrayList$Itr.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.concurrent.ConcurrentHashMap$HashIterator.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.EnumMap$EnumMapIterator.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.IdentityHashMap$IdentityHashMapIterator.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.AbstractMap$2$1.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.lang.ProcessEnvironment$StringEntrySet$1.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) org.apache.commons.math3.util.Pair.getKey()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.ServiceLoader$1.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) javax.imageio.ImageIO$ImageTranscoderIterator.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) sun.net.www.HeaderParser$ParserIterator.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.concurrent.LinkedBlockingDeque$AbstractItr.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) sun.nio.cs.FastCharsetProvider$1.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) org.apache.commons.math3.distribution.EnumeratedDistribution.getPmf()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.EnumMap$KeyIterator.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) sun.nio.fs.AbstractPath$1.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) sun.security.jca.ProviderList$ServiceList$1.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.LinkedList$ListItr.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.Collections$EmptyIterator.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.ServiceLoader$LazyIterator.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.ArrayDeque$DeqIterator.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.Scanner.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.Vector$Itr.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.Collections$CheckedCollection$1.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) javax.imageio.spi.FilterIterator.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.ArrayDeque$DescendingIterator.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.concurrent.ConcurrentHashMap$EntryIterator.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) org.apache.commons.math3.util.CombinatoricsUtils$SingletonIterator.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.Collections$CheckedCollection$1.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.LinkedHashMap$KeyIterator.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.AbstractList$Itr.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) org.apache.commons.math3.linear.RealVector$2$2.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.concurrent.LinkedBlockingQueue$Itr.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) org.apache.commons.math3.optim.PointVectorValuePair.getValue()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.Collections$CheckedList$1.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.ArrayList.iterator()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) javax.imageio.ImageIO$ImageWriterIterator.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) sun.misc.Service$LazyIterator.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.nio.charset.Charset$1.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.Collections$EmptyList.iterator()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.concurrent.ConcurrentLinkedQueue$Itr.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) sun.net.www.MessageHeader$HeaderIterator.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.Collections$1.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) sun.nio.fs.UnixFileSystem$FileStoreIterator.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) org.apache.commons.math3.util.CombinatoricsUtils$LexicographicCombinationIterator.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.concurrent.LinkedBlockingDeque$AbstractItr.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.concurrent.ConcurrentLinkedQueue$Itr.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.ArrayDeque$DeqIterator.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.LinkedHashMap$LinkedHashIterator.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.concurrent.LinkedBlockingQueue$Itr.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) sun.awt.util.IdentityLinkedList$DescendingIterator.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) sun.awt.util.IdentityLinkedList$ListItr.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) javax.imageio.spi.PartialOrderIterator.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.Vector.iterator()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.lang.ProcessEnvironment$StringEntrySet$1.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.TreeMap$NavigableSubMap$SubMapIterator.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) sun.util.PreHashedMap$1$1.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.concurrent.CopyOnWriteArrayList.iterator()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) javax.imageio.ImageIO$ImageTranscoderIterator.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.AbstractList$Itr.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.HashMap$HashIterator.hasNext()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.util.WeakHashMap$EntryIterator.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) java.lang.ProcessEnvironment$StringValues$1.next()
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double) org.apache.commons.math3.linear.RealVector$2$1.hasNext()
org.apache.commons.math3.analysis.FunctionUtils$3$1(org.apache.commons.math3.analysis.FunctionUtils$3) java.lang.Object()
org.apache.commons.math3.analysis.function.Asin.derivative() org.apache.commons.math3.analysis.function.Cbrt.derivative()
org.apache.commons.math3.analysis.function.Asin.derivative() org.apache.commons.math3.analysis.function.Minus.derivative()
org.apache.commons.math3.analysis.function.Asin.derivative() org.apache.commons.math3.analysis.function.Tanh.derivative()
org.apache.commons.math3.analysis.function.Asin.derivative() org.apache.commons.math3.analysis.FunctionUtils.toDifferentiableUnivariateFunction(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction)
org.apache.commons.math3.analysis.function.Asin.derivative() org.apache.commons.math3.analysis.function.Expm1.derivative()
org.apache.commons.math3.analysis.function.Asin.derivative() org.apache.commons.math3.analysis.function.Power.derivative()
org.apache.commons.math3.analysis.function.Asin.derivative() org.apache.commons.math3.analysis.function.Logit.derivative()
org.apache.commons.math3.analysis.function.Asin.derivative() org.apache.commons.math3.analysis.function.Sinc.derivative()
org.apache.commons.math3.analysis.function.Asin.derivative() org.apache.commons.math3.analysis.function.Constant.derivative()
org.apache.commons.math3.analysis.function.Asin.derivative() org.apache.commons.math3.analysis.function.Log10.derivative()
org.apache.commons.math3.analysis.function.Asin.derivative() org.apache.commons.math3.analysis.function.Sigmoid.derivative()
org.apache.commons.math3.analysis.function.Asin.derivative() org.apache.commons.math3.analysis.function.Acosh.derivative()
org.apache.commons.math3.analysis.function.Asin.derivative() org.apache.commons.math3.analysis.function.Exp.derivative()
org.apache.commons.math3.analysis.function.Asin.derivative() org.apache.commons.math3.analysis.function.Sinh.derivative()
org.apache.commons.math3.analysis.function.Asin.derivative() java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Asin.derivative() org.apache.commons.math3.analysis.polynomials.PolynomialFunction.derivative()
org.apache.commons.math3.analysis.function.Asin.derivative() org.apache.commons.math3.analysis.function.Gaussian.derivative()
org.apache.commons.math3.analysis.function.Asin.derivative() org.apache.commons.math3.analysis.function.Atanh.derivative()
org.apache.commons.math3.analysis.function.Asin.derivative() org.apache.commons.math3.analysis.function.Sqrt.derivative()
org.apache.commons.math3.analysis.function.Asin.derivative() org.apache.commons.math3.analysis.FunctionUtils$3.derivative()
org.apache.commons.math3.analysis.function.Asin.derivative() org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.derivative()
org.apache.commons.math3.analysis.function.Asin.derivative() org.apache.commons.math3.analysis.function.Log1p.derivative()
org.apache.commons.math3.analysis.function.Asin.derivative() org.apache.commons.math3.analysis.function.Asin.derivative()
org.apache.commons.math3.analysis.function.Asin.derivative() org.apache.commons.math3.analysis.function.Cos.derivative()
org.apache.commons.math3.analysis.function.Asin.derivative() org.apache.commons.math3.analysis.function.Asinh.derivative()
org.apache.commons.math3.analysis.function.Asin.derivative() org.apache.commons.math3.analysis.function.Tan.derivative()
org.apache.commons.math3.analysis.function.Asin.derivative() org.apache.commons.math3.analysis.FunctionUtils$6.derivative()
org.apache.commons.math3.analysis.function.Asin.derivative() org.apache.commons.math3.analysis.function.Log.derivative()
org.apache.commons.math3.analysis.function.Asin.derivative() org.apache.commons.math3.analysis.function.Atan.derivative()
org.apache.commons.math3.analysis.function.Asin.derivative() org.apache.commons.math3.analysis.function.Acos.derivative()
org.apache.commons.math3.analysis.function.Asin.derivative() org.apache.commons.math3.analysis.FunctionUtils$14.derivative()
org.apache.commons.math3.analysis.function.Asin.derivative() org.apache.commons.math3.analysis.function.Identity.derivative()
org.apache.commons.math3.analysis.function.Asin.derivative() org.apache.commons.math3.analysis.function.Cosh.derivative()
org.apache.commons.math3.analysis.function.Asin.derivative() org.apache.commons.math3.analysis.FunctionUtils$9.derivative()
org.apache.commons.math3.analysis.function.Asin.derivative() org.apache.commons.math3.analysis.function.Logistic.derivative()
org.apache.commons.math3.analysis.function.Asin.derivative() org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative()
org.apache.commons.math3.analysis.function.Asin.derivative() org.apache.commons.math3.analysis.function.Inverse.derivative()
org.apache.commons.math3.analysis.function.Asin.derivative() org.apache.commons.math3.analysis.function.Sin.derivative()
org.apache.commons.math3.analysis.FunctionUtils$14$1(org.apache.commons.math3.analysis.FunctionUtils$14) java.lang.Object()
org.apache.commons.math3.linear.ArrayRealVector(double[]) sun.text.CompactByteArray.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.awt.geom.AffineTransform.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) sun.security.krb5.internal.KerberosTime.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.util.Hashtable.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) sun.security.krb5.internal.Ticket.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) sun.text.IntHashtable.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) sun.security.util.BitArray.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) com.sun.imageio.plugins.jpeg.DHTMarkerSegment$Htable.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.util.SimpleTimeZone.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.util.IdentityHashMap.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.util.JapaneseImperialCalendar.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) sun.security.krb5.internal.ETypeInfo.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) sun.text.normalizer.NormalizerBase.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.util.Locale.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) sun.security.krb5.internal.TicketFlags.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) sun.java2d.SunGraphics2D.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) sun.security.provider.MD4.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) javax.swing.tree.DefaultTreeSelectionModel.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.awt.print.Paper.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.text.MessageFormat.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.lang.Object.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) javax.swing.text.SimpleAttributeSet.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) javax.swing.ArrayTable.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.text.SimpleDateFormat.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) sun.java2d.loops.FontInfo.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) sun.security.krb5.PrincipalName.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.awt.PageAttributes.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) com.sun.imageio.plugins.png.PNGMetadata.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.util.GregorianCalendar.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) com.sun.imageio.plugins.jpeg.SOFMarkerSegment.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.util.Vector.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) javax.swing.text.ElementIterator.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.net.HttpCookie.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.awt.datatransfer.MimeType.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.awt.RenderingHints.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.text.DateFormatSymbols.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.util.HashSet.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) sun.util.calendar.ImmutableGregorianDate.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) javax.sound.midi.MetaMessage.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) sun.font.FontLineMetrics.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) sun.font.StandardGlyphVector.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.text.AttributedString$AttributedStringIterator.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.text.RuleBasedBreakIterator.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) javax.swing.text.Segment.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.awt.ImageCapabilities.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) sun.security.krb5.internal.LastReqEntry.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) javax.swing.text.StyleContext$SmallAttributeSet.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.text.RuleBasedCollator.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.text.RuleBasedBreakIterator$SafeCharIterator.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) javax.swing.text.ElementIterator$StackItem.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$ICCMarkerSegment.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.awt.geom.Line2D.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.util.ResourceBundle$CacheKey.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumbJPEG.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) sun.security.krb5.internal.ETypeInfo2.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.awt.font.TextMeasurer.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.util.LinkedList.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) sun.font.AttributeValues.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) javax.swing.text.StyledEditorKit$1.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.util.ArrayDeque.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) javax.swing.text.GlyphView.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.awt.datatransfer.DataFlavor.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) sun.security.krb5.internal.PAData.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) javax.swing.AbstractAction.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) sun.text.normalizer.ReplaceableUCharacterIterator.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.util.concurrent.CopyOnWriteArrayList.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumb.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.awt.geom.Point2D.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) javax.swing.text.html.OptionListModel.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) sun.security.krb5.internal.AuthorizationDataEntry.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) javax.swing.text.EditorKit.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) javax.swing.text.StyledEditorKit.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) com.sun.imageio.plugins.jpeg.DQTMarkerSegment.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.util.JumboEnumSet.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) sun.security.krb5.internal.HostAddresses.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) javax.crypto.Mac.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) javax.naming.Reference.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) com.sun.imageio.plugins.jpeg.SOSMarkerSegment.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.util.jar.Manifest.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) sun.security.krb5.EncryptedData.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.text.NumberFormat.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) sun.net.ProgressSource.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.util.EnumSet.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) sun.net.www.protocol.http.AuthenticationInfo.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.awt.datatransfer.MimeTypeParameterList.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.util.regex.Pattern$CharPropertyNames$CloneableProperty.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.security.SignatureSpi.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) sun.security.x509.GeneralSubtrees.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.util.ArrayList.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) com.sun.imageio.plugins.jpeg.DHTMarkerSegment.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) javax.naming.CompositeName.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.awt.font.CharArrayIterator.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.security.Signature$Delegate.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.util.TreeSet.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.util.Hashtable$Entry.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.awt.image.ImageFilter.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) org.apache.commons.math3.linear.RealVector()
org.apache.commons.math3.linear.ArrayRealVector(double[]) com.sun.imageio.plugins.jpeg.SOSMarkerSegment$ScanComponentSpec.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.awt.geom.Path2D$Float.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) sun.security.krb5.EncryptionKey.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.text.DecimalFormat.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.awt.BufferCapabilities.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.awt.image.Kernel.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.util.Date.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.awt.Insets.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) sun.net.www.MimeEntry.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) sun.util.calendar.CalendarDate.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.awt.print.PageFormat.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) com.sun.imageio.plugins.jpeg.SOFMarkerSegment$ComponentSpec.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.util.EnumMap.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) sun.security.krb5.internal.AuthorizationData.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFExtensionMarkerSegment.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.awt.geom.QuadCurve2D.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) sun.security.krb5.internal.crypto.crc32.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.util.zip.ZipEntry.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.security.MessageDigest$Delegate.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) sun.util.calendar.ZoneInfo.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) sun.text.normalizer.CharacterIteratorWrapper.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.text.DecimalFormatSymbols.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.awt.font.TextLayout.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) javax.swing.DefaultListSelectionModel.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.text.DigitList.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) javax.print.attribute.EnumSyntax.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) javax.sound.midi.ShortMessage.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.awt.geom.CubicCurve2D.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.text.ChoiceFormat.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.lang.Thread.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) com.sun.imageio.plugins.jpeg.MarkerSegment.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.awt.image.renderable.RenderContext.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) sun.security.krb5.Realm.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) com.sun.imageio.plugins.jpeg.DQTMarkerSegment$Qtable.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.awt.JobAttributes.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) com.sun.imageio.plugins.jpeg.JPEGMetadata.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.text.StringCharacterIterator.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.awt.geom.Dimension2D.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) sun.security.x509.NameConstraintsExtension.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.awt.geom.Area.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.util.jar.Attributes.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) sun.security.krb5.internal.HostAddress.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.util.TreeMap.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.awt.geom.Path2D$Double.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.text.BreakIterator.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.util.BitSet.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.lang.Enum.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.util.AbstractMap.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) javax.swing.tree.DefaultMutableTreeNode.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.awt.geom.RectangularShape.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) sun.security.provider.PolicyParser$GrantEntry.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) java.util.HashMap.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[]) javax.swing.text.html.HTMLEditorKit.clone()
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getPercentile(double) java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object[])
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getPercentile(double) java.lang.Throwable.clinit()
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getPercentile(double) java.lang.Class.getMethod(java.lang.String,java.lang.Class[])
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getPercentile(double) java.lang.Object.clinit()
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getPercentile(double) org.apache.commons.math3.exception.MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getPercentile(double) java.lang.reflect.InvocationTargetException.getCause()
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getPercentile(double) java.lang.Double.valueOf(double)
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getPercentile(double) java.lang.IllegalStateException(java.lang.Throwable)
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getPercentile(double) org.apache.commons.math3.exception.util.LocalizedFormats.clinit()
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getPercentile(double) java.lang.Object.getClass()
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getPercentile(double) org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics.apply(org.apache.commons.math3.stat.descriptive.UnivariateStatistic)
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getPercentile(double) java.lang.Double.clinit()
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getPercentile(double) org.apache.commons.math3.stat.descriptive.rank.Percentile.setQuantile(double)
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getPercentile(double) java.lang.Class.getName()
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getPercentile(double) java.lang.Class.clinit()
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getPercentile(double) org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.apply(org.apache.commons.math3.stat.descriptive.UnivariateStatistic)
org.apache.commons.math3.util.FastMath.tan(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.util.FastMath.tan(double) java.lang.Object.clinit()
org.apache.commons.math3.util.FastMath.tan(double) org.apache.commons.math3.util.FastMath$CodyWaite.getRemB()
org.apache.commons.math3.util.FastMath.tan(double) org.apache.commons.math3.util.FastMath.tanQ(double,double,boolean)
org.apache.commons.math3.util.FastMath.tan(double) org.apache.commons.math3.util.FastMath$CodyWaite.getK()
org.apache.commons.math3.util.FastMath.tan(double) java.lang.Double.doubleToRawLongBits(double)
org.apache.commons.math3.util.FastMath.tan(double) org.apache.commons.math3.util.FastMath.reducePayneHanek(double,double[])
org.apache.commons.math3.util.FastMath.tan(double) java.lang.Double.clinit()
org.apache.commons.math3.util.FastMath.tan(double) org.apache.commons.math3.util.FastMath$CodyWaite(double)
org.apache.commons.math3.util.FastMath.tan(double) org.apache.commons.math3.util.FastMath$CodyWaite.getRemA()
org.apache.commons.math3.fraction.BigFraction(int) org.apache.commons.math3.fraction.BigFraction(java.math.BigInteger,java.math.BigInteger)
org.apache.commons.math3.fraction.BigFraction(int) java.lang.Object.clinit()
org.apache.commons.math3.fraction.BigFraction(int) java.math.BigInteger.valueOf(long)
org.apache.commons.math3.fraction.BigFraction(int) java.math.BigInteger.clinit()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.moment.Variance.getN()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.rank.Max.getResult()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.summary.SumOfLogs.getResult()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.getResult()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getN()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.rank.Max.getN()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.moment.Kurtosis.getN()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.summary.Sum.getN()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.summary.SumOfSquares.getResult()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.moment.Skewness.getN()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.moment.SecondMoment.getResult()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.moment.FourthMoment.getResult()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.moment.Mean.getResult()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.moment.Skewness.getResult()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.equals(java.lang.Object) java.lang.Object.clinit()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.moment.Mean.getN()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.summary.Product.getResult()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.summary.SumOfSquares.getN()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.getN()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.moment.SecondMoment.getN()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.moment.FirstMoment.getN()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.moment.FirstMoment.getResult()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.summary.SumOfLogs.getN()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.rank.Min.getResult()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.equals(java.lang.Object) org.apache.commons.math3.util.Precision.equalsIncludingNaN(double,double)
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.moment.ThirdMoment.getResult()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.summary.Product.getN()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getResult()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.moment.Kurtosis.getResult()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.moment.Variance.getResult()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.equals(java.lang.Object) org.apache.commons.math3.util.Precision.equalsIncludingNaN(float,float)
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.rank.Min.getN()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.equals(java.lang.Object) org.apache.commons.math3.util.Precision.clinit()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.summary.Sum.getResult()
org.apache.commons.math3.linear.OpenMapRealVector.getEntry(int) org.apache.commons.math3.linear.RealVector.checkIndex(int)
org.apache.commons.math3.linear.OpenMapRealVector.getEntry(int) org.apache.commons.math3.util.OpenIntToDoubleHashMap.get(int)
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch$1.value(double) java.lang.Object.clinit()
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch$1.value(double) org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.clinit()
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch$1.value(double) org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.access$000(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer,double[])
org.apache.commons.math3.linear.Array2DRowRealMatrix(int,int) org.apache.commons.math3.linear.AbstractRealMatrix(int,int)
org.apache.commons.math3.special.Gamma.regularizedGammaP(double,double,double,int) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.special.Gamma.regularizedGammaP(double,double,double,int) org.apache.commons.math3.special.Gamma.regularizedGammaQ(double,double,double,int)
org.apache.commons.math3.special.Gamma.regularizedGammaP(double,double,double,int) java.lang.Throwable.clinit()
org.apache.commons.math3.special.Gamma.regularizedGammaP(double,double,double,int) java.lang.Integer.clinit()
org.apache.commons.math3.special.Gamma.regularizedGammaP(double,double,double,int) java.lang.Double.isInfinite(double)
org.apache.commons.math3.special.Gamma.regularizedGammaP(double,double,double,int) org.apache.commons.math3.special.Gamma.logGamma(double)
org.apache.commons.math3.special.Gamma.regularizedGammaP(double,double,double,int) org.apache.commons.math3.util.FastMath.abs(double)
org.apache.commons.math3.special.Gamma.regularizedGammaP(double,double,double,int) org.apache.commons.math3.exception.MaxCountExceededException(java.lang.Number)
org.apache.commons.math3.special.Gamma.regularizedGammaP(double,double,double,int) java.lang.Object.clinit()
org.apache.commons.math3.special.Gamma.regularizedGammaP(double,double,double,int) java.lang.Double.isNaN(double)
org.apache.commons.math3.special.Gamma.regularizedGammaP(double,double,double,int) org.apache.commons.math3.special.Gamma.clinit()
org.apache.commons.math3.special.Gamma.regularizedGammaP(double,double,double,int) org.apache.commons.math3.util.FastMath.exp(double)
org.apache.commons.math3.special.Gamma.regularizedGammaP(double,double,double,int) java.lang.Double.clinit()
org.apache.commons.math3.special.Gamma.regularizedGammaP(double,double,double,int) org.apache.commons.math3.util.FastMath.log(double)
org.apache.commons.math3.special.Gamma.regularizedGammaP(double,double,double,int) java.lang.Integer.valueOf(int)
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Comparable,java.lang.Comparable) java.io.ObjectStreamField.compareTo(java.lang.Object)
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Comparable,java.lang.Comparable) org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex.compareTo(java.lang.Object)
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Comparable,java.lang.Comparable) java.nio.IntBuffer.compareTo(java.lang.Object)
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Comparable,java.lang.Comparable) javax.swing.TimerQueue$DelayedTimer.compareTo(java.lang.Object)
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Comparable,java.lang.Comparable) sun.security.krb5.KrbServiceLocator$SrvRecord.compareTo(java.lang.Object)
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Comparable,java.lang.Comparable) javax.swing.DefaultRowSorter$Row.compareTo(java.lang.Object)
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Comparable,java.lang.Comparable) sun.swing.text.TextComponentPrintable$IntegerSegment.compareTo(java.lang.Object)
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Comparable,java.lang.Comparable) java.nio.DoubleBuffer.compareTo(java.lang.Object)
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Comparable,java.lang.Comparable) java.lang.ProcessEnvironment$Value.compareTo(java.lang.Object)
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Comparable,java.lang.Comparable) java.net.URI.compareTo(java.lang.Object)
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Comparable,java.lang.Comparable) java.lang.Enum.compareTo(java.lang.Object)
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Comparable,java.lang.Comparable) java.io.File.compareTo(java.lang.Object)
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Comparable,java.lang.Comparable) java.util.Calendar.compareTo(java.lang.Object)
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Comparable,java.lang.Comparable) org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization$DataRow.compareTo(java.lang.Object)
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Comparable,java.lang.Comparable) org.apache.commons.math3.fraction.BigFraction.compareTo(java.lang.Object)
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Comparable,java.lang.Comparable) java.lang.Boolean.compareTo(java.lang.Object)
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Comparable,java.lang.Comparable) java.lang.String.compareTo(java.lang.Object)
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Comparable,java.lang.Comparable) java.text.RuleBasedCollationKey.compareTo(java.lang.Object)
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Comparable,java.lang.Comparable) java.nio.CharBuffer.compareTo(java.lang.Object)
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Comparable,java.lang.Comparable) java.nio.file.attribute.FileTime.compareTo(java.lang.Object)
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Comparable,java.lang.Comparable) javax.naming.CompositeName.compareTo(java.lang.Object)
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Comparable,java.lang.Comparable) java.lang.Double.compareTo(java.lang.Object)
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Comparable,java.lang.Comparable) sun.nio.fs.UnixPath.compareTo(java.lang.Object)
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Comparable,java.lang.Comparable) java.math.BigDecimal.compareTo(java.lang.Object)
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Comparable,java.lang.Comparable) java.math.BigInteger.compareTo(java.lang.Object)
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Comparable,java.lang.Comparable) org.apache.commons.math3.util.BigReal.compareTo(java.lang.Object)
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Comparable,java.lang.Comparable) org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ComparableSegment.compareTo(java.lang.Object)
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Comparable,java.lang.Comparable) java.lang.Integer.compareTo(java.lang.Object)
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Comparable,java.lang.Comparable) java.nio.FloatBuffer.compareTo(java.lang.Object)
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Comparable,java.lang.Comparable) java.lang.Long.compareTo(java.lang.Object)
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Comparable,java.lang.Comparable) org.apache.commons.math3.fraction.Fraction.compareTo(java.lang.Object)
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Comparable,java.lang.Comparable) java.lang.Character.compareTo(java.lang.Object)
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Comparable,java.lang.Comparable) sun.awt.shell.ShellFolder.compareTo(java.lang.Object)
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Comparable,java.lang.Comparable) org.apache.commons.math3.stat.ranking.NaturalRanking$IntDoublePair.compareTo(java.lang.Object)
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Comparable,java.lang.Comparable) sun.security.x509.X509CRLImpl$X509IssuerSerial.compareTo(java.lang.Object)
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Comparable,java.lang.Comparable) org.apache.commons.math3.util.Decimal64.compareTo(java.lang.Object)
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Comparable,java.lang.Comparable) java.nio.LongBuffer.compareTo(java.lang.Object)
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Comparable,java.lang.Comparable) java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.compareTo(java.lang.Object)
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Comparable,java.lang.Comparable) sun.awt.OSInfo$WindowsVersion.compareTo(java.lang.Object)
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Comparable,java.lang.Comparable) org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex.compareTo(java.lang.Object)
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Comparable,java.lang.Comparable) org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.compareTo(java.lang.Object)
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Comparable,java.lang.Comparable) javax.swing.JDesktopPane$ComponentPosition.compareTo(java.lang.Object)
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Comparable,java.lang.Comparable) java.nio.ByteBuffer.compareTo(java.lang.Object)
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Comparable,java.lang.Comparable) java.util.Date.compareTo(java.lang.Object)
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Comparable,java.lang.Comparable) java.nio.file.attribute.FileTime$DaysAndNanos.compareTo(java.lang.Object)
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Comparable,java.lang.Comparable) java.lang.ProcessEnvironment$Variable.compareTo(java.lang.Object)
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Comparable,java.lang.Comparable) sun.security.x509.X509CRLEntryImpl.compareTo(java.lang.Object)
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Comparable,java.lang.Comparable) java.lang.Byte.compareTo(java.lang.Object)
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Comparable,java.lang.Comparable) java.nio.ShortBuffer.compareTo(java.lang.Object)
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Comparable,java.lang.Comparable) java.lang.Short.compareTo(java.lang.Object)
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Comparable,java.lang.Comparable) java.nio.charset.Charset.compareTo(java.lang.Object)
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Comparable,java.lang.Comparable) java.lang.Float.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.AbstractRegion$2(org.apache.commons.math3.geometry.partitioning.AbstractRegion) java.lang.Object()
org.apache.commons.math3.ode.events.Transformer$4(java.lang.String,int) org.apache.commons.math3.ode.events.Transformer(java.lang.String,int,org.apache.commons.math3.ode.events.Transformer$1)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.expm1() java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.expm1() org.apache.commons.math3.analysis.differentiation.DSCompiler.expm1(double[],int,double[],int)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.expm1() org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DSCompiler)
org.apache.commons.math3.util.FastMath.main(java.lang.String[]) org.apache.commons.math3.util.FastMath$ExpIntTable.access$000()
org.apache.commons.math3.util.FastMath.main(java.lang.String[]) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.util.FastMath.main(java.lang.String[]) org.apache.commons.math3.util.FastMath$lnMant.clinit()
org.apache.commons.math3.util.FastMath.main(java.lang.String[]) org.apache.commons.math3.util.FastMath$ExpIntTable.clinit()
org.apache.commons.math3.util.FastMath.main(java.lang.String[]) org.apache.commons.math3.util.FastMath$ExpIntTable.access$100()
org.apache.commons.math3.util.FastMath.main(java.lang.String[]) org.apache.commons.math3.util.FastMath$lnMant.access$400()
org.apache.commons.math3.util.FastMath.main(java.lang.String[]) org.apache.commons.math3.util.FastMathCalc.printarray(java.io.PrintStream,java.lang.String,int,double[])
org.apache.commons.math3.util.FastMath.main(java.lang.String[]) org.apache.commons.math3.util.FastMathCalc.printarray(java.io.PrintStream,java.lang.String,int,double[][])
org.apache.commons.math3.util.FastMath.main(java.lang.String[]) org.apache.commons.math3.util.FastMath$ExpFracTable.clinit()
org.apache.commons.math3.util.FastMath.main(java.lang.String[]) org.apache.commons.math3.util.FastMath$ExpFracTable.access$300()
org.apache.commons.math3.util.FastMath.main(java.lang.String[]) java.lang.System.clinit()
org.apache.commons.math3.util.FastMath.main(java.lang.String[]) java.lang.Object.clinit()
org.apache.commons.math3.util.FastMath.main(java.lang.String[]) org.apache.commons.math3.util.FastMathCalc.clinit()
org.apache.commons.math3.util.FastMath.main(java.lang.String[]) org.apache.commons.math3.util.FastMath$ExpFracTable.access$200()
org.apache.commons.math3.stat.descriptive.moment.Variance.getN() org.apache.commons.math3.stat.descriptive.moment.SecondMoment.getN()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.partitioning.AbstractRegion(org.apache.commons.math3.geometry.partitioning.BSPTree)
org.apache.commons.math3.analysis.function.Tanh.derivative() org.apache.commons.math3.analysis.function.Cbrt.derivative()
org.apache.commons.math3.analysis.function.Tanh.derivative() org.apache.commons.math3.analysis.function.Minus.derivative()
org.apache.commons.math3.analysis.function.Tanh.derivative() org.apache.commons.math3.analysis.function.Tanh.derivative()
org.apache.commons.math3.analysis.function.Tanh.derivative() org.apache.commons.math3.analysis.FunctionUtils.toDifferentiableUnivariateFunction(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction)
org.apache.commons.math3.analysis.function.Tanh.derivative() org.apache.commons.math3.analysis.function.Expm1.derivative()
org.apache.commons.math3.analysis.function.Tanh.derivative() org.apache.commons.math3.analysis.function.Power.derivative()
org.apache.commons.math3.analysis.function.Tanh.derivative() org.apache.commons.math3.analysis.function.Logit.derivative()
org.apache.commons.math3.analysis.function.Tanh.derivative() org.apache.commons.math3.analysis.function.Sinc.derivative()
org.apache.commons.math3.analysis.function.Tanh.derivative() org.apache.commons.math3.analysis.function.Constant.derivative()
org.apache.commons.math3.analysis.function.Tanh.derivative() org.apache.commons.math3.analysis.function.Log10.derivative()
org.apache.commons.math3.analysis.function.Tanh.derivative() org.apache.commons.math3.analysis.function.Sigmoid.derivative()
org.apache.commons.math3.analysis.function.Tanh.derivative() org.apache.commons.math3.analysis.function.Acosh.derivative()
org.apache.commons.math3.analysis.function.Tanh.derivative() org.apache.commons.math3.analysis.function.Exp.derivative()
org.apache.commons.math3.analysis.function.Tanh.derivative() org.apache.commons.math3.analysis.function.Sinh.derivative()
org.apache.commons.math3.analysis.function.Tanh.derivative() java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Tanh.derivative() org.apache.commons.math3.analysis.polynomials.PolynomialFunction.derivative()
org.apache.commons.math3.analysis.function.Tanh.derivative() org.apache.commons.math3.analysis.function.Gaussian.derivative()
org.apache.commons.math3.analysis.function.Tanh.derivative() org.apache.commons.math3.analysis.function.Atanh.derivative()
org.apache.commons.math3.analysis.function.Tanh.derivative() org.apache.commons.math3.analysis.function.Sqrt.derivative()
org.apache.commons.math3.analysis.function.Tanh.derivative() org.apache.commons.math3.analysis.FunctionUtils$3.derivative()
org.apache.commons.math3.analysis.function.Tanh.derivative() org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.derivative()
org.apache.commons.math3.analysis.function.Tanh.derivative() org.apache.commons.math3.analysis.function.Log1p.derivative()
org.apache.commons.math3.analysis.function.Tanh.derivative() org.apache.commons.math3.analysis.function.Asin.derivative()
org.apache.commons.math3.analysis.function.Tanh.derivative() org.apache.commons.math3.analysis.function.Cos.derivative()
org.apache.commons.math3.analysis.function.Tanh.derivative() org.apache.commons.math3.analysis.function.Asinh.derivative()
org.apache.commons.math3.analysis.function.Tanh.derivative() org.apache.commons.math3.analysis.function.Tan.derivative()
org.apache.commons.math3.analysis.function.Tanh.derivative() org.apache.commons.math3.analysis.FunctionUtils$6.derivative()
org.apache.commons.math3.analysis.function.Tanh.derivative() org.apache.commons.math3.analysis.function.Log.derivative()
org.apache.commons.math3.analysis.function.Tanh.derivative() org.apache.commons.math3.analysis.function.Atan.derivative()
org.apache.commons.math3.analysis.function.Tanh.derivative() org.apache.commons.math3.analysis.function.Acos.derivative()
org.apache.commons.math3.analysis.function.Tanh.derivative() org.apache.commons.math3.analysis.FunctionUtils$14.derivative()
org.apache.commons.math3.analysis.function.Tanh.derivative() org.apache.commons.math3.analysis.function.Identity.derivative()
org.apache.commons.math3.analysis.function.Tanh.derivative() org.apache.commons.math3.analysis.function.Cosh.derivative()
org.apache.commons.math3.analysis.function.Tanh.derivative() org.apache.commons.math3.analysis.FunctionUtils$9.derivative()
org.apache.commons.math3.analysis.function.Tanh.derivative() org.apache.commons.math3.analysis.function.Logistic.derivative()
org.apache.commons.math3.analysis.function.Tanh.derivative() org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative()
org.apache.commons.math3.analysis.function.Tanh.derivative() org.apache.commons.math3.analysis.function.Inverse.derivative()
org.apache.commons.math3.analysis.function.Tanh.derivative() org.apache.commons.math3.analysis.function.Sin.derivative()
org.apache.commons.math3.ode.AbstractIntegrator$1.compare(java.lang.Object,java.lang.Object) org.apache.commons.math3.ode.AbstractIntegrator$1.compare(org.apache.commons.math3.ode.events.EventState,org.apache.commons.math3.ode.events.EventState)
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$2.compare(java.lang.Object,java.lang.Object) org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$2.compare(org.apache.commons.math3.optim.PointValuePair,org.apache.commons.math3.optim.PointValuePair)
org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$5.value(double,double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$5.value(double,double) org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction.access$000(org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction,double[],double[],double[][])
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.insert(java.lang.Comparable) java.lang.Object.clinit()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.insert(java.lang.Comparable) org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node(org.apache.commons.math3.geometry.partitioning.utilities.AVLTree,java.lang.Comparable,org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.insert(java.lang.Comparable) org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable)
org.apache.commons.math3.linear.RealVector.mapMultiply(double) org.apache.commons.math3.linear.RealVector.mapMultiplyToSelf(double)
org.apache.commons.math3.linear.RealVector.mapMultiply(double) org.apache.commons.math3.linear.RealVector$2.copy()
org.apache.commons.math3.linear.RealVector.mapMultiply(double) org.apache.commons.math3.linear.ArrayRealVector.mapMultiplyToSelf(double)
org.apache.commons.math3.linear.RealVector.mapMultiply(double) org.apache.commons.math3.linear.OpenMapRealVector.copy()
org.apache.commons.math3.linear.RealVector.mapMultiply(double) org.apache.commons.math3.linear.ArrayRealVector.copy()
org.apache.commons.math3.linear.RealVector.mapMultiply(double) org.apache.commons.math3.linear.RealVector$2.mapMultiplyToSelf(double)
org.apache.commons.math3.analysis.function.Logit$Parametric.validateParameters(double[]) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Logit$Parametric.validateParameters(double[]) org.apache.commons.math3.exception.DimensionMismatchException(int,int)
org.apache.commons.math3.analysis.function.Logit$Parametric.validateParameters(double[]) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.analysis.function.Logit$Parametric.validateParameters(double[]) java.lang.Throwable.clinit()
org.apache.commons.math3.analysis.function.Logit$Parametric.validateParameters(double[]) org.apache.commons.math3.exception.NullArgumentException()
org.apache.commons.math3.dfp.DfpDec$1.clinit() java.lang.Object.clinit()
org.apache.commons.math3.dfp.DfpDec$1.clinit() java.lang.Enum.ordinal()
org.apache.commons.math3.dfp.DfpDec$1.clinit() org.apache.commons.math3.dfp.DfpDec$1.clinit()
org.apache.commons.math3.dfp.DfpDec$1.clinit() org.apache.commons.math3.dfp.DfpField$RoundingMode.values()
org.apache.commons.math3.dfp.DfpDec$1.clinit() org.apache.commons.math3.dfp.DfpField$RoundingMode.clinit()
org.apache.commons.math3.util.FastMath.exp(double,double,double[]) java.lang.Object.clinit()
org.apache.commons.math3.util.FastMath.exp(double,double,double[]) org.apache.commons.math3.util.FastMath$ExpIntTable.access$000()
org.apache.commons.math3.util.FastMath.exp(double,double,double[]) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.util.FastMath.exp(double,double,double[]) org.apache.commons.math3.util.FastMath$ExpIntTable.clinit()
org.apache.commons.math3.util.FastMath.exp(double,double,double[]) org.apache.commons.math3.util.FastMath$ExpIntTable.access$100()
org.apache.commons.math3.util.FastMath.exp(double,double,double[]) org.apache.commons.math3.util.FastMath$ExpFracTable.clinit()
org.apache.commons.math3.util.FastMath.exp(double,double,double[]) org.apache.commons.math3.util.FastMath$ExpFracTable.access$200()
org.apache.commons.math3.util.FastMath.exp(double,double,double[]) org.apache.commons.math3.util.FastMath.exp(double,double,double[])
org.apache.commons.math3.util.FastMath.exp(double,double,double[]) org.apache.commons.math3.util.FastMath$ExpFracTable.access$300()
org.apache.commons.math3.special.Gamma.invGamma1pm1(double) java.lang.Object.clinit()
org.apache.commons.math3.special.Gamma.invGamma1pm1(double) org.apache.commons.math3.exception.NumberIsTooLargeException(java.lang.Number,java.lang.Number,boolean)
org.apache.commons.math3.special.Gamma.invGamma1pm1(double) java.lang.Double.valueOf(double)
org.apache.commons.math3.special.Gamma.invGamma1pm1(double) org.apache.commons.math3.exception.NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)
org.apache.commons.math3.special.Gamma.invGamma1pm1(double) java.lang.Throwable.clinit()
org.apache.commons.math3.special.Gamma.invGamma1pm1(double) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.special.Gamma.invGamma1pm1(double) java.lang.Double.clinit()
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex.compareTo(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex) java.lang.Object.clinit()
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex.compareTo(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex) java.lang.Double.compare(double,double)
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex.compareTo(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex) java.lang.Double.clinit()
org.apache.commons.math3.util.CombinatoricsUtils$LexicographicCombinationIterator.remove() java.lang.Object.clinit()
org.apache.commons.math3.util.CombinatoricsUtils$LexicographicCombinationIterator.remove() java.lang.UnsupportedOperationException()
org.apache.commons.math3.util.CombinatoricsUtils$LexicographicCombinationIterator.remove() java.lang.Throwable.clinit()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.negate() java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.negate() org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DSCompiler)
org.apache.commons.math3.geometry.partitioning.AbstractRegion$BoundaryBuilder.visitOrder(org.apache.commons.math3.geometry.partitioning.BSPTree) java.lang.Object.clinit()
org.apache.commons.math3.geometry.partitioning.AbstractRegion$BoundaryBuilder.visitOrder(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.clinit()
org.apache.commons.math3.fraction.FractionConversionException(double,int) org.apache.commons.math3.exception.ConvergenceException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])
org.apache.commons.math3.fraction.FractionConversionException(double,int) java.lang.Object.clinit()
org.apache.commons.math3.fraction.FractionConversionException(double,int) java.lang.Double.valueOf(double)
org.apache.commons.math3.fraction.FractionConversionException(double,int) java.lang.Integer.clinit()
org.apache.commons.math3.fraction.FractionConversionException(double,int) org.apache.commons.math3.exception.util.LocalizedFormats.clinit()
org.apache.commons.math3.fraction.FractionConversionException(double,int) java.lang.Double.clinit()
org.apache.commons.math3.fraction.FractionConversionException(double,int) java.lang.Integer.valueOf(int)
org.apache.commons.math3.analysis.differentiation.DSCompiler.tanh(double[],int,double[],int) java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.tanh(double[],int,double[],int) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.tanh(double[],int,double[],int) org.apache.commons.math3.analysis.differentiation.DSCompiler.compose(double[],int,double[],double[],int)
org.apache.commons.math3.analysis.differentiation.DSCompiler.tanh(double[],int,double[],int) org.apache.commons.math3.util.FastMath.tanh(double)
org.apache.commons.math3.util.FastMath.copySign(double,double) java.lang.Object.clinit()
org.apache.commons.math3.util.FastMath.copySign(double,double) java.lang.Double.doubleToRawLongBits(double)
org.apache.commons.math3.util.FastMath.copySign(double,double) java.lang.Double.clinit()
org.apache.commons.math3.distribution.ChiSquaredDistribution.cumulativeProbability(double) org.apache.commons.math3.distribution.GammaDistribution.cumulativeProbability(double)
org.apache.commons.math3.analysis.FunctionUtils$3.value(double) org.apache.commons.math3.analysis.function.Logistic.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3.value(double) org.apache.commons.math3.analysis.function.Sinh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3.value(double) org.apache.commons.math3.analysis.function.Acos.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3.value(double) org.apache.commons.math3.analysis.function.Cosh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3.value(double) org.apache.commons.math3.analysis.function.Sqrt.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3.value(double) org.apache.commons.math3.analysis.function.Expm1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3.value(double) org.apache.commons.math3.analysis.function.Power.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3.value(double) org.apache.commons.math3.analysis.function.Asin.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3.value(double) org.apache.commons.math3.analysis.function.Gaussian.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3.value(double) org.apache.commons.math3.analysis.function.Cbrt.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3.value(double) org.apache.commons.math3.analysis.function.Tan.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3.value(double) org.apache.commons.math3.analysis.function.HarmonicOscillator.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3.value(double) org.apache.commons.math3.analysis.FunctionUtils$6.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3.value(double) org.apache.commons.math3.analysis.function.Asinh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3.value(double) org.apache.commons.math3.analysis.function.Minus.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3.value(double) org.apache.commons.math3.analysis.function.Tanh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3.value(double) org.apache.commons.math3.analysis.FunctionUtils$9.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3.value(double) org.apache.commons.math3.analysis.function.Sinc.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3.value(double) org.apache.commons.math3.analysis.function.Log1p.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3.value(double) org.apache.commons.math3.analysis.function.Sin.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3.value(double) org.apache.commons.math3.analysis.function.Atanh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3.value(double) org.apache.commons.math3.analysis.function.Cos.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3.value(double) org.apache.commons.math3.analysis.function.Identity.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3.value(double) org.apache.commons.math3.analysis.FunctionUtils$3.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3.value(double) org.apache.commons.math3.analysis.function.Log.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3.value(double) org.apache.commons.math3.analysis.function.Exp.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3.value(double) org.apache.commons.math3.analysis.function.Sigmoid.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3.value(double) org.apache.commons.math3.analysis.function.Logit.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3.value(double) org.apache.commons.math3.analysis.function.Acosh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3.value(double) org.apache.commons.math3.analysis.function.Inverse.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3.value(double) org.apache.commons.math3.analysis.function.Log10.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3.value(double) org.apache.commons.math3.analysis.FunctionUtils$14.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3.value(double) org.apache.commons.math3.analysis.function.Atan.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3.value(double) org.apache.commons.math3.analysis.function.Constant.value(double)
org.apache.commons.math3.stat.descriptive.moment.Skewness.increment(double) org.apache.commons.math3.stat.descriptive.moment.FourthMoment.increment(double)
org.apache.commons.math3.stat.descriptive.moment.Skewness.increment(double) org.apache.commons.math3.stat.descriptive.moment.ThirdMoment.increment(double)
org.apache.commons.math3.distribution.LogNormalDistribution.clinit() org.apache.commons.math3.distribution.LogNormalDistribution.clinit()
org.apache.commons.math3.distribution.LogNormalDistribution.clinit() java.lang.Object.clinit()
org.apache.commons.math3.distribution.LogNormalDistribution.clinit() org.apache.commons.math3.util.FastMath.sqrt(double)
org.apache.commons.math3.distribution.LogNormalDistribution.clinit() org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.util.FastMath.log1p(double) java.lang.Object.clinit()
org.apache.commons.math3.util.FastMath.log1p(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.util.FastMath.log1p(double) java.lang.Double.clinit()
org.apache.commons.math3.util.FastMath.log1p(double) org.apache.commons.math3.util.FastMath.log(double,double[])
org.apache.commons.math3.util.FastMath.log1p(double) java.lang.Double.isInfinite(double)
org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization$DataRow.compareTo(java.lang.Object) org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization$DataRow.compareTo(org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization$DataRow)
org.apache.commons.math3.linear.ArrayRealVector.getNorm() java.lang.Object.clinit()
org.apache.commons.math3.linear.ArrayRealVector.getNorm() org.apache.commons.math3.util.FastMath.sqrt(double)
org.apache.commons.math3.linear.ArrayRealVector.getNorm() org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.function.Exp.value(double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Exp.value(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.function.Exp.value(double) org.apache.commons.math3.util.FastMath.exp(double)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.tan() java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.tan() org.apache.commons.math3.analysis.differentiation.DSCompiler.tan(double[],int,double[],int)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.tan() org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DSCompiler)
org.apache.commons.math3.ode.JacobianMatrices$MainStateJacobianWrapper.computeDerivatives(double,double[],double[]) org.apache.commons.math3.ode.MultistepIntegrator$1.computeDerivatives(double,double[],double[])
org.apache.commons.math3.ode.JacobianMatrices$MainStateJacobianWrapper.computeDerivatives(double,double[],double[]) org.apache.commons.math3.ode.JacobianMatrices$MainStateJacobianWrapper.computeDerivatives(double,double[],double[])
org.apache.commons.math3.ode.JacobianMatrices$MainStateJacobianWrapper.computeDerivatives(double,double[],double[]) org.apache.commons.math3.ode.FirstOrderConverter.computeDerivatives(double,double[],double[])
org.apache.commons.math3.dfp.DfpField$RoundingMode(java.lang.String,int) java.lang.Enum(java.lang.String,int)
org.apache.commons.math3.geometry.euclidean.threed.Plane.getOffset(org.apache.commons.math3.geometry.euclidean.threed.Plane) org.apache.commons.math3.geometry.euclidean.threed.Plane.sameOrientationAs(org.apache.commons.math3.geometry.partitioning.Hyperplane)
org.apache.commons.math3.linear.ArrayRealVector.getEntry(int) org.apache.commons.math3.exception.OutOfRangeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number)
org.apache.commons.math3.linear.ArrayRealVector.getEntry(int) java.lang.Object.clinit()
org.apache.commons.math3.linear.ArrayRealVector.getEntry(int) java.lang.Throwable.clinit()
org.apache.commons.math3.linear.ArrayRealVector.getEntry(int) java.lang.Integer.clinit()
org.apache.commons.math3.linear.ArrayRealVector.getEntry(int) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.linear.ArrayRealVector.getEntry(int) org.apache.commons.math3.exception.util.LocalizedFormats.clinit()
org.apache.commons.math3.linear.ArrayRealVector.getEntry(int) org.apache.commons.math3.linear.ArrayRealVector.getDimension()
org.apache.commons.math3.linear.ArrayRealVector.getEntry(int) java.lang.Integer.valueOf(int)
org.apache.commons.math3.random.RandomAdaptor.setSeed(long) java.util.Random.setSeed(long)
org.apache.commons.math3.random.RandomAdaptor.setSeed(long) org.apache.commons.math3.random.MersenneTwister.setSeed(long)
org.apache.commons.math3.random.RandomAdaptor.setSeed(long) org.apache.commons.math3.random.RandomGeneratorFactory$1.setSeed(long)
org.apache.commons.math3.random.RandomAdaptor.setSeed(long) org.apache.commons.math3.random.RandomAdaptor.setSeed(long)
org.apache.commons.math3.random.RandomAdaptor.setSeed(long) org.apache.commons.math3.random.SynchronizedRandomGenerator.setSeed(long)
org.apache.commons.math3.random.RandomAdaptor.setSeed(long) org.apache.commons.math3.random.ISAACRandom.setSeed(long)
org.apache.commons.math3.random.RandomAdaptor.setSeed(long) org.apache.commons.math3.random.AbstractWell.setSeed(long)
org.apache.commons.math3.analysis.differentiation.DSCompiler.asinh(double[],int,double[],int) java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.asinh(double[],int,double[],int) org.apache.commons.math3.util.FastMath.sqrt(double)
org.apache.commons.math3.analysis.differentiation.DSCompiler.asinh(double[],int,double[],int) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.asinh(double[],int,double[],int) org.apache.commons.math3.util.FastMath.asinh(double)
org.apache.commons.math3.analysis.differentiation.DSCompiler.asinh(double[],int,double[],int) org.apache.commons.math3.analysis.differentiation.DSCompiler.compose(double[],int,double[],double[],int)
org.apache.commons.math3.util.MathArrays$OrderDirection.clinit() java.lang.Object.clinit()
org.apache.commons.math3.util.MathArrays$OrderDirection.clinit() org.apache.commons.math3.util.MathArrays$OrderDirection(java.lang.String,int)
org.apache.commons.math3.util.MathArrays$OrderDirection.clinit() org.apache.commons.math3.util.MathArrays$OrderDirection.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.pow(double[],int,int,double[],int) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.pow(double[],int,int,double[],int) java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.pow(double[],int,int,double[],int) org.apache.commons.math3.util.FastMath.pow(double,int)
org.apache.commons.math3.analysis.differentiation.DSCompiler.pow(double[],int,int,double[],int) org.apache.commons.math3.analysis.differentiation.DSCompiler.getSize()
org.apache.commons.math3.analysis.differentiation.DSCompiler.pow(double[],int,int,double[],int) java.util.Arrays.fill(double[],int,int,double)
org.apache.commons.math3.analysis.differentiation.DSCompiler.pow(double[],int,int,double[],int) org.apache.commons.math3.analysis.differentiation.DSCompiler.compose(double[],int,double[],double[],int)
org.apache.commons.math3.analysis.differentiation.DSCompiler.pow(double[],int,int,double[],int) java.util.Arrays.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.pow(double[],int,int,double[],int) org.apache.commons.math3.util.FastMath.min(int,int)
org.apache.commons.math3.analysis.function.Gaussian.access$000(double,double,double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Gaussian.access$000(double,double,double) org.apache.commons.math3.analysis.function.Gaussian.value(double,double,double)
org.apache.commons.math3.exception.MathIllegalStateException.getMessage() org.apache.commons.math3.exception.util.ExceptionContext.getMessage()
org.apache.commons.math3.stat.clustering.EuclideanDoublePoint.toString() java.lang.Object.clinit()
org.apache.commons.math3.stat.clustering.EuclideanDoublePoint.toString() java.util.Arrays.clinit()
org.apache.commons.math3.stat.clustering.EuclideanDoublePoint.toString() java.util.Arrays.toString(double[])
org.apache.commons.math3.complex.Complex.toString() java.lang.Object.clinit()
org.apache.commons.math3.complex.Complex.toString() java.lang.StringBuilder.append(double)
org.apache.commons.math3.complex.Complex.toString() java.lang.StringBuilder()
org.apache.commons.math3.complex.Complex.toString() java.lang.StringBuilder.append(java.lang.String)
org.apache.commons.math3.complex.Complex.toString() java.lang.StringBuilder.toString()
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getMax() org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics.apply(org.apache.commons.math3.stat.descriptive.UnivariateStatistic)
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getMax() org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.apply(org.apache.commons.math3.stat.descriptive.UnivariateStatistic)
org.apache.commons.math3.geometry.euclidean.oned.Vector1D(double) java.lang.Object()
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.unboundedToBounded(double[]) org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.unboundedToBounded(double[]) org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$UpperBoundMapper.unboundedToBounded(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.unboundedToBounded(double[]) org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerBoundMapper.unboundedToBounded(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.unboundedToBounded(double[]) org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$NoBoundsMapper.unboundedToBounded(double)
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.getInterpolatedState() org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.evaluateCompleteInterpolatedState()
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.getInterpolatedState() org.apache.commons.math3.ode.EquationsMapper.extractEquationData(double[],double[])
org.apache.commons.math3.ode.events.Transformer$4.transformed(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.ode.events.Transformer$4.transformed(double) java.lang.Object.clinit()
org.apache.commons.math3.ode.events.Transformer$4.transformed(double) org.apache.commons.math3.util.Precision.clinit()
org.apache.commons.math3.ode.events.Transformer$4.transformed(double) org.apache.commons.math3.util.FastMath.min(double,double)
org.apache.commons.math3.util.Pair(java.lang.Object,java.lang.Object) java.lang.Object()
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.isNaN() java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.isNaN() org.apache.commons.math3.util.Decimal64.getReal()
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.isNaN() java.lang.Double.isNaN(double)
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.isNaN() org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getReal()
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.isNaN() org.apache.commons.math3.dfp.Dfp.getReal()
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.isNaN() java.lang.Double.clinit()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.equals(java.lang.Object) org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.compareTo(org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple)
org.apache.commons.math3.util.CompositeFormat.formatDouble(double,java.text.NumberFormat,java.lang.StringBuffer,java.text.FieldPosition) java.text.DecimalFormat.format(double,java.lang.StringBuffer,java.text.FieldPosition)
org.apache.commons.math3.util.CompositeFormat.formatDouble(double,java.text.NumberFormat,java.lang.StringBuffer,java.text.FieldPosition) java.lang.StringBuffer.append(double)
org.apache.commons.math3.util.CompositeFormat.formatDouble(double,java.text.NumberFormat,java.lang.StringBuffer,java.text.FieldPosition) java.lang.Object.clinit()
org.apache.commons.math3.util.CompositeFormat.formatDouble(double,java.text.NumberFormat,java.lang.StringBuffer,java.text.FieldPosition) java.lang.Double.isNaN(double)
org.apache.commons.math3.util.CompositeFormat.formatDouble(double,java.text.NumberFormat,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.fraction.AbstractFormat.format(double,java.lang.StringBuffer,java.text.FieldPosition)
org.apache.commons.math3.util.CompositeFormat.formatDouble(double,java.text.NumberFormat,java.lang.StringBuffer,java.text.FieldPosition) java.lang.Double.clinit()
org.apache.commons.math3.util.CompositeFormat.formatDouble(double,java.text.NumberFormat,java.lang.StringBuffer,java.text.FieldPosition) java.lang.StringBuffer.append(char)
org.apache.commons.math3.util.CompositeFormat.formatDouble(double,java.text.NumberFormat,java.lang.StringBuffer,java.text.FieldPosition) java.lang.Double.isInfinite(double)
org.apache.commons.math3.util.CompositeFormat.formatDouble(double,java.text.NumberFormat,java.lang.StringBuffer,java.text.FieldPosition) java.text.ChoiceFormat.format(double,java.lang.StringBuffer,java.text.FieldPosition)
org.apache.commons.math3.stat.descriptive.summary.Product.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.test(double[],int,int,boolean)
org.apache.commons.math3.util.FastMath.doubleHighPart(double) java.lang.Object.clinit()
org.apache.commons.math3.util.FastMath.doubleHighPart(double) org.apache.commons.math3.util.Precision.clinit()
org.apache.commons.math3.util.FastMath.doubleHighPart(double) java.lang.Double.clinit()
org.apache.commons.math3.util.FastMath.doubleHighPart(double) java.lang.Double.doubleToRawLongBits(double)
org.apache.commons.math3.util.FastMath.doubleHighPart(double) java.lang.Double.longBitsToDouble(long)
org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat(java.text.NumberFormat) org.apache.commons.math3.geometry.VectorFormat(java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.partitioning.BSPTree.getAttribute()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.partitioning.BoundaryAttribute.getPlusOutside()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.partitioning.BoundaryAttribute.getPlusInside()
org.apache.commons.math3.fraction.BigFractionFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) java.math.BigDecimal.doubleValue()
org.apache.commons.math3.fraction.BigFractionFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) java.lang.Long.doubleValue()
org.apache.commons.math3.fraction.BigFractionFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) java.lang.Throwable.clinit()
org.apache.commons.math3.fraction.BigFractionFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) java.lang.Byte.doubleValue()
org.apache.commons.math3.fraction.BigFractionFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.fraction.BigFraction.clinit()
org.apache.commons.math3.fraction.BigFractionFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.fraction.BigFraction.doubleValue()
org.apache.commons.math3.fraction.BigFractionFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.util.Decimal64.doubleValue()
org.apache.commons.math3.fraction.BigFractionFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) java.math.BigInteger.doubleValue()
org.apache.commons.math3.fraction.BigFractionFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.fraction.BigFraction(double)
org.apache.commons.math3.fraction.BigFractionFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) java.lang.Short.doubleValue()
org.apache.commons.math3.fraction.BigFractionFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) java.lang.Object.clinit()
org.apache.commons.math3.fraction.BigFractionFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.fraction.BigFraction(java.math.BigInteger)
org.apache.commons.math3.fraction.BigFractionFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.fraction.Fraction.doubleValue()
org.apache.commons.math3.fraction.BigFractionFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) java.util.concurrent.atomic.AtomicInteger.doubleValue()
org.apache.commons.math3.fraction.BigFractionFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.fraction.ProperBigFractionFormat.format(org.apache.commons.math3.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition)
org.apache.commons.math3.fraction.BigFractionFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) java.lang.Double.doubleValue()
org.apache.commons.math3.fraction.BigFractionFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.exception.util.LocalizedFormats.clinit()
org.apache.commons.math3.fraction.BigFractionFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.fraction.BigFractionFormat.format(org.apache.commons.math3.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition)
org.apache.commons.math3.fraction.BigFractionFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) java.lang.Float.doubleValue()
org.apache.commons.math3.fraction.BigFractionFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) java.util.concurrent.atomic.AtomicLong.doubleValue()
org.apache.commons.math3.fraction.BigFractionFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) java.lang.Integer.doubleValue()
org.apache.commons.math3.fraction.BigFractionFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.exception.MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])
org.apache.commons.math3.linear.SparseFieldVector.equals(java.lang.Object) org.apache.commons.math3.fraction.BigFraction.equals(java.lang.Object)
org.apache.commons.math3.linear.SparseFieldVector.equals(java.lang.Object) org.apache.commons.math3.util.OpenIntToFieldHashMap$Iterator.value()
org.apache.commons.math3.linear.SparseFieldVector.equals(java.lang.Object) org.apache.commons.math3.util.Decimal64.equals(java.lang.Object)
org.apache.commons.math3.linear.SparseFieldVector.equals(java.lang.Object) org.apache.commons.math3.dfp.Dfp.equals(java.lang.Object)
org.apache.commons.math3.linear.SparseFieldVector.equals(java.lang.Object) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.equals(java.lang.Object)
org.apache.commons.math3.linear.SparseFieldVector.equals(java.lang.Object) org.apache.commons.math3.linear.SparseFieldVector.getEntry(int)
org.apache.commons.math3.linear.SparseFieldVector.equals(java.lang.Object) org.apache.commons.math3.util.OpenIntToFieldHashMap$Iterator.advance()
org.apache.commons.math3.linear.SparseFieldVector.equals(java.lang.Object) org.apache.commons.math3.util.OpenIntToFieldHashMap$Iterator.key()
org.apache.commons.math3.linear.SparseFieldVector.equals(java.lang.Object) org.apache.commons.math3.linear.SparseFieldVector.getEntries()
org.apache.commons.math3.linear.SparseFieldVector.equals(java.lang.Object) org.apache.commons.math3.util.OpenIntToFieldHashMap.iterator()
org.apache.commons.math3.linear.SparseFieldVector.equals(java.lang.Object) org.apache.commons.math3.fraction.Fraction.equals(java.lang.Object)
org.apache.commons.math3.linear.SparseFieldVector.equals(java.lang.Object) java.lang.Object.equals(java.lang.Object)
org.apache.commons.math3.linear.SparseFieldVector.equals(java.lang.Object) org.apache.commons.math3.complex.Complex.equals(java.lang.Object)
org.apache.commons.math3.linear.SparseFieldVector.equals(java.lang.Object) org.apache.commons.math3.util.BigReal.equals(java.lang.Object)
org.apache.commons.math3.linear.SparseFieldVector.equals(java.lang.Object) org.apache.commons.math3.util.OpenIntToFieldHashMap$Iterator.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.getSize() org.apache.commons.math3.geometry.partitioning.AbstractRegion.getSize()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.DfpField,int) org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.DfpField,long)
org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance.getResult() java.lang.Object.clinit()
org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance.getResult() org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry(int,int,double)
org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance.getResult() org.apache.commons.math3.linear.MatrixUtils.clinit()
org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance.getResult() org.apache.commons.math3.linear.BlockRealMatrix.setEntry(int,int,double)
org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance.getResult() org.apache.commons.math3.linear.DiagonalMatrix.setEntry(int,int,double)
org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance.getResult() org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(int,int)
org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance.getResult() org.apache.commons.math3.linear.OpenMapRealMatrix.setEntry(int,int,double)
org.apache.commons.math3.analysis.function.StepFunction.value(double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.StepFunction.value(double) java.util.Arrays.binarySearch(double[],double)
org.apache.commons.math3.analysis.function.StepFunction.value(double) java.util.Arrays.clinit()
org.apache.commons.math3.exception.NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean) java.lang.Object.clinit()
org.apache.commons.math3.exception.NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean) org.apache.commons.math3.exception.NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)
org.apache.commons.math3.exception.NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean) org.apache.commons.math3.exception.util.LocalizedFormats.clinit()
org.apache.commons.math3.analysis.FunctionUtils$13.value(double) org.apache.commons.math3.analysis.function.Pow.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$13.value(double) org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$13.value(double) org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$5.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$13.value(double) org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$2.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$13.value(double) org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$4.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$13.value(double) org.apache.commons.math3.analysis.function.Max.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$13.value(double) org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$13.value(double) org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$1.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$13.value(double) org.apache.commons.math3.analysis.function.Atan2.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$13.value(double) org.apache.commons.math3.analysis.function.Min.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$13.value(double) org.apache.commons.math3.analysis.function.Multiply.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$13.value(double) org.apache.commons.math3.analysis.function.Subtract.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$13.value(double) org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$3.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$13.value(double) org.apache.commons.math3.analysis.function.Divide.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$13.value(double) org.apache.commons.math3.analysis.function.Add.value(double,double)
org.apache.commons.math3.analysis.function.Log1p.derivative() org.apache.commons.math3.analysis.function.Cbrt.derivative()
org.apache.commons.math3.analysis.function.Log1p.derivative() org.apache.commons.math3.analysis.function.Minus.derivative()
org.apache.commons.math3.analysis.function.Log1p.derivative() org.apache.commons.math3.analysis.function.Tanh.derivative()
org.apache.commons.math3.analysis.function.Log1p.derivative() org.apache.commons.math3.analysis.FunctionUtils.toDifferentiableUnivariateFunction(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction)
org.apache.commons.math3.analysis.function.Log1p.derivative() org.apache.commons.math3.analysis.function.Expm1.derivative()
org.apache.commons.math3.analysis.function.Log1p.derivative() org.apache.commons.math3.analysis.function.Power.derivative()
org.apache.commons.math3.analysis.function.Log1p.derivative() org.apache.commons.math3.analysis.function.Logit.derivative()
org.apache.commons.math3.analysis.function.Log1p.derivative() org.apache.commons.math3.analysis.function.Sinc.derivative()
org.apache.commons.math3.analysis.function.Log1p.derivative() org.apache.commons.math3.analysis.function.Constant.derivative()
org.apache.commons.math3.analysis.function.Log1p.derivative() org.apache.commons.math3.analysis.function.Log10.derivative()
org.apache.commons.math3.analysis.function.Log1p.derivative() org.apache.commons.math3.analysis.function.Sigmoid.derivative()
org.apache.commons.math3.analysis.function.Log1p.derivative() org.apache.commons.math3.analysis.function.Acosh.derivative()
org.apache.commons.math3.analysis.function.Log1p.derivative() org.apache.commons.math3.analysis.function.Exp.derivative()
org.apache.commons.math3.analysis.function.Log1p.derivative() org.apache.commons.math3.analysis.function.Sinh.derivative()
org.apache.commons.math3.analysis.function.Log1p.derivative() java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Log1p.derivative() org.apache.commons.math3.analysis.polynomials.PolynomialFunction.derivative()
org.apache.commons.math3.analysis.function.Log1p.derivative() org.apache.commons.math3.analysis.function.Gaussian.derivative()
org.apache.commons.math3.analysis.function.Log1p.derivative() org.apache.commons.math3.analysis.function.Atanh.derivative()
org.apache.commons.math3.analysis.function.Log1p.derivative() org.apache.commons.math3.analysis.function.Sqrt.derivative()
org.apache.commons.math3.analysis.function.Log1p.derivative() org.apache.commons.math3.analysis.FunctionUtils$3.derivative()
org.apache.commons.math3.analysis.function.Log1p.derivative() org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.derivative()
org.apache.commons.math3.analysis.function.Log1p.derivative() org.apache.commons.math3.analysis.function.Log1p.derivative()
org.apache.commons.math3.analysis.function.Log1p.derivative() org.apache.commons.math3.analysis.function.Asin.derivative()
org.apache.commons.math3.analysis.function.Log1p.derivative() org.apache.commons.math3.analysis.function.Cos.derivative()
org.apache.commons.math3.analysis.function.Log1p.derivative() org.apache.commons.math3.analysis.function.Asinh.derivative()
org.apache.commons.math3.analysis.function.Log1p.derivative() org.apache.commons.math3.analysis.function.Tan.derivative()
org.apache.commons.math3.analysis.function.Log1p.derivative() org.apache.commons.math3.analysis.FunctionUtils$6.derivative()
org.apache.commons.math3.analysis.function.Log1p.derivative() org.apache.commons.math3.analysis.function.Log.derivative()
org.apache.commons.math3.analysis.function.Log1p.derivative() org.apache.commons.math3.analysis.function.Atan.derivative()
org.apache.commons.math3.analysis.function.Log1p.derivative() org.apache.commons.math3.analysis.function.Acos.derivative()
org.apache.commons.math3.analysis.function.Log1p.derivative() org.apache.commons.math3.analysis.FunctionUtils$14.derivative()
org.apache.commons.math3.analysis.function.Log1p.derivative() org.apache.commons.math3.analysis.function.Identity.derivative()
org.apache.commons.math3.analysis.function.Log1p.derivative() org.apache.commons.math3.analysis.function.Cosh.derivative()
org.apache.commons.math3.analysis.function.Log1p.derivative() org.apache.commons.math3.analysis.FunctionUtils$9.derivative()
org.apache.commons.math3.analysis.function.Log1p.derivative() org.apache.commons.math3.analysis.function.Logistic.derivative()
org.apache.commons.math3.analysis.function.Log1p.derivative() org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative()
org.apache.commons.math3.analysis.function.Log1p.derivative() org.apache.commons.math3.analysis.function.Inverse.derivative()
org.apache.commons.math3.analysis.function.Log1p.derivative() org.apache.commons.math3.analysis.function.Sin.derivative()
org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.SubHyperplane) java.lang.Object()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.compareTo(java.lang.Object) org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.compareTo(org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple)
org.apache.commons.math3.analysis.function.Atanh.value(double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Atanh.value(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.function.Atanh.value(double) org.apache.commons.math3.util.FastMath.atanh(double)
org.apache.commons.math3.ode.FirstOrderConverter.computeDerivatives(double,double[],double[]) java.lang.Object.clinit()
org.apache.commons.math3.ode.FirstOrderConverter.computeDerivatives(double,double[],double[]) java.lang.System.arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org.apache.commons.math3.ode.FirstOrderConverter.computeDerivatives(double,double[],double[]) java.lang.System.clinit()
org.apache.commons.math3.util.MathUtils.hash(double[]) java.lang.Object.clinit()
org.apache.commons.math3.util.MathUtils.hash(double[]) java.util.Arrays.hashCode(double[])
org.apache.commons.math3.util.MathUtils.hash(double[]) java.util.Arrays.clinit()
org.apache.commons.math3.analysis.FunctionUtils$2.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Sinh.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$2.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Tanh.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$2.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Minus.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$2.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Asinh.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$2.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Atan.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$2.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.HarmonicOscillator.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$2.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Sin.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$2.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Power.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$2.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Cbrt.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$2.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Logistic.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$2.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$2.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Sigmoid.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$2.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$2.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Inverse.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$2.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$2.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$2.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.FunctionUtils$2.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$2.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Sinc.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$2.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Cos.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$2.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Log1p.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$2.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Acosh.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$2.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Atanh.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$2.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Log10.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$2.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Tan.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$2.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Sqrt.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$2.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Asin.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$2.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Gaussian.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$2.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Constant.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$2.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$2.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Acos.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$2.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Expm1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$2.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Identity.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$2.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.FunctionUtils$5.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$2.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Exp.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$2.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Logit.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$2.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Cosh.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$2.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.FunctionUtils$8.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$2.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Log.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapter.value(double[]) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapter.value(double[]) org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapter.value(double[])
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapter.value(double[]) org.apache.commons.math3.analysis.FunctionUtils$16.value(double[])
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapter.value(double[]) org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$1.value(double[])
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapter.value(double[]) org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[])
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapter.value(double[]) org.apache.commons.math3.optimization.direct.SimplexOptimizer$1.value(double[])
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapter.value(double[]) org.apache.commons.math3.optim.nonlinear.scalar.LeastSquaresConverter.value(double[])
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapter.value(double[]) org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.value(double[])
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapter.value(double[]) org.apache.commons.math3.util.FastMath.sqrt(double)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapter.value(double[]) java.lang.Object.clinit()
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapter.value(double[]) org.apache.commons.math3.analysis.FunctionUtils$17.value(double[])
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapter.value(double[]) org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.value(double[])
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapter.value(double[]) org.apache.commons.math3.optim.linear.LinearObjectiveFunction.value(double[])
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapter.value(double[]) org.apache.commons.math3.analysis.FunctionUtils$11.value(double[])
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapter.value(double[]) org.apache.commons.math3.optimization.LeastSquaresConverter.value(double[])
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapter.value(double[]) org.apache.commons.math3.analysis.FunctionUtils$16$1.value(double[])
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapter.value(double[]) org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapter.value(double[])
org.apache.commons.math3.analysis.differentiation.DSCompiler.compileLowerIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler) java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.compileLowerIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler) org.apache.commons.math3.analysis.differentiation.DSCompiler.getSize()
org.apache.commons.math3.analysis.differentiation.DSCompiler.compileLowerIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler) java.lang.System.arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org.apache.commons.math3.analysis.differentiation.DSCompiler.compileLowerIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler) java.lang.System.clinit()
org.apache.commons.math3.linear.RealVector$2.copy() org.apache.commons.math3.linear.RealVector$2.copy()
org.apache.commons.math3.linear.RealVector$2.copy() org.apache.commons.math3.linear.OpenMapRealVector.copy()
org.apache.commons.math3.linear.RealVector$2.copy() org.apache.commons.math3.linear.ArrayRealVector.copy()
org.apache.commons.math3.analysis.function.Log10.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.log10()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) sun.text.CompactByteArray.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.awt.geom.AffineTransform.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) sun.security.krb5.internal.KerberosTime.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.util.Hashtable.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) sun.security.krb5.internal.Ticket.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) sun.text.IntHashtable.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) sun.security.util.BitArray.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) com.sun.imageio.plugins.jpeg.DHTMarkerSegment$Htable.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.util.SimpleTimeZone.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.util.IdentityHashMap.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.util.JapaneseImperialCalendar.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) sun.security.krb5.internal.ETypeInfo.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) sun.text.normalizer.NormalizerBase.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.util.Locale.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) sun.security.krb5.internal.TicketFlags.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) sun.java2d.SunGraphics2D.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) sun.security.provider.MD4.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) javax.swing.tree.DefaultTreeSelectionModel.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.awt.print.Paper.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.text.MessageFormat.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.lang.Object.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) javax.swing.text.SimpleAttributeSet.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) javax.swing.ArrayTable.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.text.SimpleDateFormat.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) sun.java2d.loops.FontInfo.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) sun.security.krb5.PrincipalName.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.awt.PageAttributes.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) com.sun.imageio.plugins.png.PNGMetadata.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.util.GregorianCalendar.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) com.sun.imageio.plugins.jpeg.SOFMarkerSegment.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.util.Vector.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) javax.swing.text.ElementIterator.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.net.HttpCookie.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.awt.datatransfer.MimeType.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.awt.RenderingHints.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.text.DateFormatSymbols.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.util.HashSet.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) sun.util.calendar.ImmutableGregorianDate.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) javax.sound.midi.MetaMessage.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) sun.font.FontLineMetrics.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) sun.font.StandardGlyphVector.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.text.AttributedString$AttributedStringIterator.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.text.RuleBasedBreakIterator.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) javax.swing.text.Segment.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.awt.ImageCapabilities.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) sun.security.krb5.internal.LastReqEntry.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) javax.swing.text.StyleContext$SmallAttributeSet.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.text.RuleBasedCollator.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.text.RuleBasedBreakIterator$SafeCharIterator.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) javax.swing.text.ElementIterator$StackItem.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$ICCMarkerSegment.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.awt.geom.Line2D.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.util.ResourceBundle$CacheKey.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumbJPEG.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) sun.security.krb5.internal.ETypeInfo2.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.awt.font.TextMeasurer.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.util.LinkedList.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) sun.font.AttributeValues.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) javax.swing.text.StyledEditorKit$1.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.util.ArrayDeque.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) javax.swing.text.GlyphView.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.awt.datatransfer.DataFlavor.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) sun.security.krb5.internal.PAData.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) javax.swing.AbstractAction.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) sun.text.normalizer.ReplaceableUCharacterIterator.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.util.concurrent.CopyOnWriteArrayList.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumb.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.awt.geom.Point2D.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) javax.swing.text.html.OptionListModel.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) sun.security.krb5.internal.AuthorizationDataEntry.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) javax.swing.text.EditorKit.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) javax.swing.text.StyledEditorKit.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) com.sun.imageio.plugins.jpeg.DQTMarkerSegment.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.util.JumboEnumSet.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) sun.security.krb5.internal.HostAddresses.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) javax.crypto.Mac.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) javax.naming.Reference.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) com.sun.imageio.plugins.jpeg.SOSMarkerSegment.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.util.jar.Manifest.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) sun.security.krb5.EncryptedData.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.text.NumberFormat.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) sun.net.ProgressSource.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.util.EnumSet.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) sun.net.www.protocol.http.AuthenticationInfo.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.awt.datatransfer.MimeTypeParameterList.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.util.regex.Pattern$CharPropertyNames$CloneableProperty.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.security.SignatureSpi.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) sun.security.x509.GeneralSubtrees.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.util.ArrayList.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) com.sun.imageio.plugins.jpeg.DHTMarkerSegment.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) javax.naming.CompositeName.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.awt.font.CharArrayIterator.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.security.Signature$Delegate.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.util.TreeSet.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.util.Hashtable$Entry.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.awt.image.ImageFilter.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) org.apache.commons.math3.linear.RealVector()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) com.sun.imageio.plugins.jpeg.SOSMarkerSegment$ScanComponentSpec.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.awt.geom.Path2D$Float.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) sun.security.krb5.EncryptionKey.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.text.DecimalFormat.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.awt.BufferCapabilities.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.awt.image.Kernel.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.util.Date.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.awt.Insets.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) sun.net.www.MimeEntry.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) sun.util.calendar.CalendarDate.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.awt.print.PageFormat.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) com.sun.imageio.plugins.jpeg.SOFMarkerSegment$ComponentSpec.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.util.EnumMap.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) sun.security.krb5.internal.AuthorizationData.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFExtensionMarkerSegment.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.awt.geom.QuadCurve2D.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) sun.security.krb5.internal.crypto.crc32.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.util.zip.ZipEntry.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.security.MessageDigest$Delegate.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) sun.util.calendar.ZoneInfo.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) sun.text.normalizer.CharacterIteratorWrapper.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.text.DecimalFormatSymbols.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.awt.font.TextLayout.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) javax.swing.DefaultListSelectionModel.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.text.DigitList.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) javax.print.attribute.EnumSyntax.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) javax.sound.midi.ShortMessage.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.awt.geom.CubicCurve2D.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.text.ChoiceFormat.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.lang.Thread.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) com.sun.imageio.plugins.jpeg.MarkerSegment.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.awt.image.renderable.RenderContext.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) sun.security.krb5.Realm.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) com.sun.imageio.plugins.jpeg.DQTMarkerSegment$Qtable.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.awt.JobAttributes.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) com.sun.imageio.plugins.jpeg.JPEGMetadata.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.text.StringCharacterIterator.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.awt.geom.Dimension2D.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) sun.security.x509.NameConstraintsExtension.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.awt.geom.Area.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.util.jar.Attributes.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) sun.security.krb5.internal.HostAddress.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.util.TreeMap.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.awt.geom.Path2D$Double.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.text.BreakIterator.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.util.BitSet.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.lang.Enum.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.util.AbstractMap.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) javax.swing.tree.DefaultMutableTreeNode.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.awt.geom.RectangularShape.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) sun.security.provider.PolicyParser$GrantEntry.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) java.util.HashMap.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.clone()
org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean) javax.swing.text.html.HTMLEditorKit.clone()
org.apache.commons.math3.linear.RealVector$2.getEntry(int) org.apache.commons.math3.linear.ArrayRealVector.getEntry(int)
org.apache.commons.math3.linear.RealVector$2.getEntry(int) org.apache.commons.math3.linear.OpenMapRealVector.getEntry(int)
org.apache.commons.math3.linear.RealVector$2.getEntry(int) org.apache.commons.math3.linear.RealVector$2.getEntry(int)
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getSum() org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getResults(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getMin() org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getResults(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])
org.apache.commons.math3.random.ISAACRandom.isaac() org.apache.commons.math3.random.ISAACRandom.isaac2()
org.apache.commons.math3.special.Gamma.logGamma(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.special.Gamma.logGamma(double) java.lang.Object.clinit()
org.apache.commons.math3.special.Gamma.logGamma(double) org.apache.commons.math3.special.Gamma.lanczos(double)
org.apache.commons.math3.special.Gamma.logGamma(double) java.lang.Double.isNaN(double)
org.apache.commons.math3.special.Gamma.logGamma(double) org.apache.commons.math3.special.Gamma.clinit()
org.apache.commons.math3.special.Gamma.logGamma(double) org.apache.commons.math3.util.FastMath.floor(double)
org.apache.commons.math3.special.Gamma.logGamma(double) java.lang.Double.clinit()
org.apache.commons.math3.special.Gamma.logGamma(double) org.apache.commons.math3.util.FastMath.log(double)
org.apache.commons.math3.special.Gamma.logGamma(double) org.apache.commons.math3.special.Gamma.logGamma1p(double)
org.apache.commons.math3.geometry.partitioning.AbstractRegion.isEmpty(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.partitioning.BSPTree.getCut()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.isEmpty(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.partitioning.AbstractRegion.isEmpty(org.apache.commons.math3.geometry.partitioning.BSPTree)
org.apache.commons.math3.geometry.partitioning.AbstractRegion.isEmpty(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.partitioning.BSPTree.getPlus()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.isEmpty(org.apache.commons.math3.geometry.partitioning.BSPTree) java.lang.Boolean.booleanValue()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.isEmpty(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.partitioning.BSPTree.getMinus()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.isEmpty(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.partitioning.BSPTree.getAttribute()
org.apache.commons.math3.analysis.function.Logistic.derivative() org.apache.commons.math3.analysis.function.Cbrt.derivative()
org.apache.commons.math3.analysis.function.Logistic.derivative() org.apache.commons.math3.analysis.function.Minus.derivative()
org.apache.commons.math3.analysis.function.Logistic.derivative() org.apache.commons.math3.analysis.function.Tanh.derivative()
org.apache.commons.math3.analysis.function.Logistic.derivative() org.apache.commons.math3.analysis.FunctionUtils.toDifferentiableUnivariateFunction(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction)
org.apache.commons.math3.analysis.function.Logistic.derivative() org.apache.commons.math3.analysis.function.Expm1.derivative()
org.apache.commons.math3.analysis.function.Logistic.derivative() org.apache.commons.math3.analysis.function.Power.derivative()
org.apache.commons.math3.analysis.function.Logistic.derivative() org.apache.commons.math3.analysis.function.Logit.derivative()
org.apache.commons.math3.analysis.function.Logistic.derivative() org.apache.commons.math3.analysis.function.Sinc.derivative()
org.apache.commons.math3.analysis.function.Logistic.derivative() org.apache.commons.math3.analysis.function.Constant.derivative()
org.apache.commons.math3.analysis.function.Logistic.derivative() org.apache.commons.math3.analysis.function.Log10.derivative()
org.apache.commons.math3.analysis.function.Logistic.derivative() org.apache.commons.math3.analysis.function.Sigmoid.derivative()
org.apache.commons.math3.analysis.function.Logistic.derivative() org.apache.commons.math3.analysis.function.Acosh.derivative()
org.apache.commons.math3.analysis.function.Logistic.derivative() org.apache.commons.math3.analysis.function.Exp.derivative()
org.apache.commons.math3.analysis.function.Logistic.derivative() org.apache.commons.math3.analysis.function.Sinh.derivative()
org.apache.commons.math3.analysis.function.Logistic.derivative() java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Logistic.derivative() org.apache.commons.math3.analysis.polynomials.PolynomialFunction.derivative()
org.apache.commons.math3.analysis.function.Logistic.derivative() org.apache.commons.math3.analysis.function.Gaussian.derivative()
org.apache.commons.math3.analysis.function.Logistic.derivative() org.apache.commons.math3.analysis.function.Atanh.derivative()
org.apache.commons.math3.analysis.function.Logistic.derivative() org.apache.commons.math3.analysis.function.Sqrt.derivative()
org.apache.commons.math3.analysis.function.Logistic.derivative() org.apache.commons.math3.analysis.FunctionUtils$3.derivative()
org.apache.commons.math3.analysis.function.Logistic.derivative() org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.derivative()
org.apache.commons.math3.analysis.function.Logistic.derivative() org.apache.commons.math3.analysis.function.Log1p.derivative()
org.apache.commons.math3.analysis.function.Logistic.derivative() org.apache.commons.math3.analysis.function.Asin.derivative()
org.apache.commons.math3.analysis.function.Logistic.derivative() org.apache.commons.math3.analysis.function.Cos.derivative()
org.apache.commons.math3.analysis.function.Logistic.derivative() org.apache.commons.math3.analysis.function.Asinh.derivative()
org.apache.commons.math3.analysis.function.Logistic.derivative() org.apache.commons.math3.analysis.function.Tan.derivative()
org.apache.commons.math3.analysis.function.Logistic.derivative() org.apache.commons.math3.analysis.FunctionUtils$6.derivative()
org.apache.commons.math3.analysis.function.Logistic.derivative() org.apache.commons.math3.analysis.function.Log.derivative()
org.apache.commons.math3.analysis.function.Logistic.derivative() org.apache.commons.math3.analysis.function.Atan.derivative()
org.apache.commons.math3.analysis.function.Logistic.derivative() org.apache.commons.math3.analysis.function.Acos.derivative()
org.apache.commons.math3.analysis.function.Logistic.derivative() org.apache.commons.math3.analysis.FunctionUtils$14.derivative()
org.apache.commons.math3.analysis.function.Logistic.derivative() org.apache.commons.math3.analysis.function.Identity.derivative()
org.apache.commons.math3.analysis.function.Logistic.derivative() org.apache.commons.math3.analysis.function.Cosh.derivative()
org.apache.commons.math3.analysis.function.Logistic.derivative() org.apache.commons.math3.analysis.FunctionUtils$9.derivative()
org.apache.commons.math3.analysis.function.Logistic.derivative() org.apache.commons.math3.analysis.function.Logistic.derivative()
org.apache.commons.math3.analysis.function.Logistic.derivative() org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative()
org.apache.commons.math3.analysis.function.Logistic.derivative() org.apache.commons.math3.analysis.function.Inverse.derivative()
org.apache.commons.math3.analysis.function.Logistic.derivative() org.apache.commons.math3.analysis.function.Sin.derivative()
org.apache.commons.math3.stat.ranking.NaturalRanking$IntDoublePair.compareTo(org.apache.commons.math3.stat.ranking.NaturalRanking$IntDoublePair) java.lang.Object.clinit()
org.apache.commons.math3.stat.ranking.NaturalRanking$IntDoublePair.compareTo(org.apache.commons.math3.stat.ranking.NaturalRanking$IntDoublePair) java.lang.Double.compare(double,double)
org.apache.commons.math3.stat.ranking.NaturalRanking$IntDoublePair.compareTo(org.apache.commons.math3.stat.ranking.NaturalRanking$IntDoublePair) java.lang.Double.clinit()
org.apache.commons.math3.dfp.Dfp.dotrap(int,java.lang.String,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.Dfp.newInstance(org.apache.commons.math3.dfp.Dfp)
org.apache.commons.math3.dfp.Dfp.dotrap(int,java.lang.String,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.Dfp.getZero()
org.apache.commons.math3.dfp.Dfp.dotrap(int,java.lang.String,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.Dfp.trap(int,java.lang.String,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)
org.apache.commons.math3.dfp.Dfp.dotrap(int,java.lang.String,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.DfpDec.newInstance(org.apache.commons.math3.dfp.Dfp)
org.apache.commons.math3.fraction.Fraction.intValue() org.apache.commons.math3.fraction.Fraction.doubleValue()
org.apache.commons.math3.fraction.Fraction.floatValue() org.apache.commons.math3.fraction.Fraction.doubleValue()
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.evaluate(double[],double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.evaluate(double[],double) java.lang.Throwable.clinit()
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.evaluate(double[],double) org.apache.commons.math3.exception.NoDataException(org.apache.commons.math3.exception.util.Localizable)
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.evaluate(double[],double) org.apache.commons.math3.exception.util.LocalizedFormats.clinit()
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.evaluate(double[],double) org.apache.commons.math3.util.MathUtils.checkNotNull(java.lang.Object)
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$FacetsContributionVisitor.visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.partitioning.BSPTree.getAttribute()
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$FacetsContributionVisitor.visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$FacetsContributionVisitor.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean)
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$FacetsContributionVisitor.visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.partitioning.BoundaryAttribute.getPlusOutside()
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$FacetsContributionVisitor.visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.partitioning.BoundaryAttribute.getPlusInside()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.subtract(double) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.add(double)
org.apache.commons.math3.linear.ArrayRealVector.isNaN() java.lang.Object.clinit()
org.apache.commons.math3.linear.ArrayRealVector.isNaN() java.lang.Double.isNaN(double)
org.apache.commons.math3.linear.ArrayRealVector.isNaN() java.lang.Double.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.log1p(double[],int,double[],int) java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.log1p(double[],int,double[],int) org.apache.commons.math3.util.FastMath.log1p(double)
org.apache.commons.math3.analysis.differentiation.DSCompiler.log1p(double[],int,double[],int) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.log1p(double[],int,double[],int) org.apache.commons.math3.analysis.differentiation.DSCompiler.compose(double[],int,double[],double[],int)
org.apache.commons.math3.linear.RealLinearOperator() java.lang.Object()
org.apache.commons.math3.util.Incrementor$1.trigger(int) org.apache.commons.math3.exception.MaxCountExceededException(java.lang.Number)
org.apache.commons.math3.util.Incrementor$1.trigger(int) java.lang.Object.clinit()
org.apache.commons.math3.util.Incrementor$1.trigger(int) java.lang.Integer.clinit()
org.apache.commons.math3.util.Incrementor$1.trigger(int) java.lang.Throwable.clinit()
org.apache.commons.math3.util.Incrementor$1.trigger(int) java.lang.Integer.valueOf(int)
org.apache.commons.math3.fraction.FractionFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) java.math.BigDecimal.doubleValue()
org.apache.commons.math3.fraction.FractionFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) java.lang.Long.doubleValue()
org.apache.commons.math3.fraction.FractionFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) java.lang.Throwable.clinit()
org.apache.commons.math3.fraction.FractionFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) java.lang.Byte.doubleValue()
org.apache.commons.math3.fraction.FractionFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.fraction.BigFraction.doubleValue()
org.apache.commons.math3.fraction.FractionFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.fraction.ProperFractionFormat.format(org.apache.commons.math3.fraction.Fraction,java.lang.StringBuffer,java.text.FieldPosition)
org.apache.commons.math3.fraction.FractionFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.util.Decimal64.doubleValue()
org.apache.commons.math3.fraction.FractionFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) java.math.BigInteger.doubleValue()
org.apache.commons.math3.fraction.FractionFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) java.lang.Short.doubleValue()
org.apache.commons.math3.fraction.FractionFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.fraction.Fraction(double)
org.apache.commons.math3.fraction.FractionFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) java.lang.Object.clinit()
org.apache.commons.math3.fraction.FractionFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.fraction.Fraction.doubleValue()
org.apache.commons.math3.fraction.FractionFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.fraction.FractionFormat.format(org.apache.commons.math3.fraction.Fraction,java.lang.StringBuffer,java.text.FieldPosition)
org.apache.commons.math3.fraction.FractionFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) java.util.concurrent.atomic.AtomicInteger.doubleValue()
org.apache.commons.math3.fraction.FractionFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) java.lang.Double.doubleValue()
org.apache.commons.math3.fraction.FractionFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.fraction.Fraction.clinit()
org.apache.commons.math3.fraction.FractionFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.exception.util.LocalizedFormats.clinit()
org.apache.commons.math3.fraction.FractionFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) java.lang.Float.doubleValue()
org.apache.commons.math3.fraction.FractionFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) java.util.concurrent.atomic.AtomicLong.doubleValue()
org.apache.commons.math3.fraction.FractionFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) java.lang.Integer.doubleValue()
org.apache.commons.math3.fraction.FractionFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.exception.MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])
org.apache.commons.math3.stat.descriptive.moment.SemiVariance.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.moment.Mean()
org.apache.commons.math3.stat.descriptive.moment.SemiVariance.evaluate(double[],int,int) java.lang.Object.clinit()
org.apache.commons.math3.stat.descriptive.moment.SemiVariance.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.moment.SemiVariance.evaluate(double[],double,org.apache.commons.math3.stat.descriptive.moment.SemiVariance$Direction,boolean,int,int)
org.apache.commons.math3.stat.descriptive.moment.SemiVariance.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.moment.Mean.evaluate(double[],int,int)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.lang.Character$Subset.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.text.AttributeEntry.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.security.krb5.internal.HostAddresses.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.util.Locale.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() javax.imageio.ImageTypeSpecifier.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.security.spec.EllipticCurve.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.awt.geom.RoundRectangle2D.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.awt.im.InputMethodLocator.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.util.AbstractMap$SimpleImmutableEntry.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.lang.ProcessEnvironment$StringEntrySet.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.io.File.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.lang.Enum.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() javax.swing.text.TabStop.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() org.apache.commons.math3.geometry.euclidean.twod.Vector2D.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.security.krb5.PrincipalName.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.security.krb5.internal.rcache.AuthTime.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() org.apache.commons.math3.optim.linear.SimplexTableau.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.util.AbstractList.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.util.locale.LocaleExtensions.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.awt.SunHints$Value.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.swing.text.TextComponentPrintable$IntegerSegment.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.util.Collections$SynchronizedList.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.security.x509.CertificateExtensions.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.security.x509.OIDName.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.awt.font.TransformAttribute.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.security.BasicPermission.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() javax.security.auth.PrivateCredentialPermission.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() javax.imageio.ImageTypeSpecifier$Banded.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.text.IntHashtable.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.font.FontStrikeDesc.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.security.x509.AccessDescription.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.text.ChoiceFormat.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.security.x509.GeneralNames.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.net.InterfaceAddress.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.awt.image.SinglePixelPackedSampleModel.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.lang.ProcessEnvironment$Variable.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() org.apache.commons.math3.complex.Complex.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.math.MathContext.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.text.MessageFormat.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.awt.font.TextLayout.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.security.x509.GeneralSubtree.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.misc.SoftCache$Entry.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() org.apache.commons.math3.stat.Frequency.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() org.apache.commons.math3.geometry.euclidean.threed.Vector3D.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.util.Collections$ReverseComparator2.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.util.jar.Manifest.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.text.DecimalFormatSymbols.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.net.Inet4Address.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.security.jca.ProviderConfig.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.util.Collections$SynchronizedMap.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.awt.RenderingHints.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.text.DecimalFormat.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.nio.fs.UnixUserPrincipals$User.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.lang.Long.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.security.util.ObjectIdentifier.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() javax.naming.NameImpl.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.security.x509.GeneralName.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.util.IdentityHashMap$EntryIterator$Entry.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.lang.reflect.WeakCache$LookupValue.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.security.x509.AVA.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.util.HashMap$Entry.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.security.spec.ECFieldFp.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.font.GlyphLayout$LayoutEngineKey.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.security.krb5.Checksum.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.awt.font.FontRenderContext.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.util.locale.BaseLocale$Key.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.util.Collections$UnmodifiableList.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() org.apache.commons.math3.optim.linear.LinearConstraint.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.lang.reflect.Proxy$Key2.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() org.apache.commons.math3.stat.clustering.EuclideanDoublePoint.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.security.x509.RDN.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.security.cert.X509CRL.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.awt.Font.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() javax.security.auth.kerberos.KeyTab.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.awt.Insets.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() javax.print.attribute.standard.MediaSize.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.text.DateFormatSymbols.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.net.InetSocketAddress.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.security.UnresolvedPermission.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.nio.charset.Charset.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.font.CoreMetrics.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.awt.AlphaComposite.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.awt.image.ComponentColorModel.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() org.apache.commons.math3.linear.AbstractRealMatrix.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.awt.image.ComponentSampleModel.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.net.InetSocketAddress$InetSocketAddressHolder.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() javax.swing.text.SimpleAttributeSet.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.util.Vector.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.lang.ProcessEnvironment$StringEntry.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.java2d.loops.SurfaceType.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.awt.geom.Rectangle2D.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.nio.ch.SocketOptionRegistry$RegistryKey.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.util.Collections$EmptyMap.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.util.Collections$SynchronizedSet.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() javax.security.auth.kerberos.KerberosPrincipal.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.lang.ProcessBuilder$Redirect.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.util.calendar.ZoneInfo.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.awt.geom.Ellipse2D.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.awt.Point.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.lang.ProcessEnvironment$Value.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() javax.security.auth.kerberos.KerberosKey.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() javax.swing.text.TabSet.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() javax.swing.KeyboardManager$ComponentKeyStrokePair.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.net.InetAddress.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.lang.reflect.Constructor.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.security.cert.CertPath.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.math.BigDecimal.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.util.Collections$CheckedList.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.text.AttributedCharacterIterator$Attribute.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() org.apache.commons.math3.linear.AbstractFieldMatrix.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() org.apache.commons.math3.linear.RealVector.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.lang.ProcessEnvironment$StringValues.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.util.ResourceBundle$CacheKey.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.text.CompactByteArray.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.lang.Short.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.security.x509.Extension.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.util.WeakHashMap$Entry.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.awt.geom.Point2D.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ComparableSegment.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.awt.JobAttributes.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.util.jar.JarVerifier$VerifierCodeSource.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.util.GregorianCalendar.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.reflect.generics.reflectiveObjects.WildcardTypeImpl.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.security.x509.X500Name.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.security.x509.IPAddressName.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.font.PhysicalFont.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() javax.print.DocFlavor.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.font.GlyphLayout$SDCache$SDKey.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() org.apache.commons.math3.stat.descriptive.SummaryStatistics.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() javax.swing.text.StyleContext$FontKey.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.security.x509.EDIPartyName.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() org.apache.commons.math3.stat.clustering.EuclideanIntegerPoint.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.security.x509.GeneralSubtrees.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.security.cert.X509CRLEntry.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.swing.SwingUtilities2$LSBCacheEntry.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() javax.print.attribute.AttributeSetUtilities$UnmodifiableAttributeSet.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.nio.ByteBuffer.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.util.calendar.Era.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.net.Proxy.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.security.Timestamp.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() javax.swing.text.html.HTML$UnknownTag.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() org.apache.commons.math3.analysis.differentiation.DerivativeStructure.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.util.PropertyPermission.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.util.Collections$CheckedMap.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.util.JumboEnumSet.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.text.RuleBasedCollationKey.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.nio.file.attribute.FileTime.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.security.x509.URIName.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.text.AttributedString$AttributedStringIterator.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.lang.Character.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() org.apache.commons.math3.stat.descriptive.moment.VectorialMean.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.util.EnumMap.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() javax.swing.tree.TreePath.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() org.apache.commons.math3.util.Pair.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() javax.swing.RowSorter$SortKey.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.security.x509.KeyIdentifier.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.security.spec.ECPoint.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.security.x509.DistributionPoint.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.font.StandardGlyphVector.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.util.AbstractMap$SimpleEntry.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.util.AbstractSet.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.text.FieldPosition.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.text.ParsePosition.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() org.apache.commons.math3.optim.linear.LinearObjectiveFunction.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.beans.PropertyDescriptor.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.security.AccessControlContext.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.security.x509.CRLExtensions.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.util.locale.BaseLocale.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.awt.datatransfer.MimeType.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.util.Hashtable.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.util.Collections$UnmodifiableMap.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.nio.fs.UnixPath.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.text.StringCharacterIterator.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() org.apache.commons.math3.optimization.linear.SimplexTableau.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() javax.imageio.ImageTypeSpecifier$Interleaved.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.security.x509.AlgorithmId.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() org.apache.commons.math3.fraction.Fraction.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.util.AbstractMap.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() org.apache.commons.math3.geometry.euclidean.oned.Vector1D.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() org.apache.commons.math3.util.ResizableDoubleArray.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() javax.print.attribute.standard.Media.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.util.Date.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.util.Hashtable$Entry.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.security.util.DerInputBuffer.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.security.spec.ECFieldF2m.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() javax.sound.midi.Sequencer$SyncMode.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.net.www.http.KeepAliveKey.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.io.ObjectStreamClass$WeakClassKey.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.misc.ProxyGenerator$ConstantPool$IndirectEntry.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.security.krb5.internal.KerberosTime.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.util.BitSet.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() javax.sound.sampled.AudioFormat$Encoding.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.security.x509.RFC822Name.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.text.PatternEntry.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() com.sun.java.swing.plaf.windows.XPStyle$Skin.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.util.jar.Attributes.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.beans.IndexedPropertyDescriptor.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.awt.datatransfer.MimeTypeParameterList.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() org.apache.commons.math3.linear.ArrayRealVector.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.text.RuleBasedBreakIterator.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.net.Inet6Address$Inet6AddressHolder.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.nio.IntBuffer.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.lang.String.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.java2d.loops.CompositeType.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.util.jar.Attributes$Name.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() javax.swing.text.SimpleAttributeSet$EmptyAttributeSet.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.util.SimpleTimeZone.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() javax.naming.RefAddr.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() javax.naming.Reference.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.security.util.Cache$EqualByteArray.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.security.util.BitArray.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.io.FilePermission.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.util.concurrent.CopyOnWriteArrayList.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.security.x509.DNSName.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.lang.reflect.Method.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.security.pkcs.PKCS8Key.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() javax.print.attribute.AttributeSetUtilities$SynchronizedAttributeSet.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.security.x509.CertificatePolicyId.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.security.x509.DistributionPointName.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() javax.swing.text.StyleContext$SmallAttributeSet.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() javax.security.auth.x500.X500Principal.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.reflect.misc.MethodUtil$Signature.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.awt.DisplayMode.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.security.CodeSigner.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() org.apache.commons.math3.util.BigReal.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.text.DigitList.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() javax.security.auth.Subject.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.net.URI.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.security.x509.X509Key.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.text.SimpleDateFormat.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.lang.StackTraceElement.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.util.Collections$SetFromMap.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.math.BigInteger.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.awt.image.PackedColorModel.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.security.provider.PolicyParser$PrincipalEntry.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.util.BuddhistCalendar.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() org.apache.commons.math3.linear.SparseFieldVector.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() javax.naming.CompositeName.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.awt.AWTKeyStroke.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.security.AllPermission.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() org.apache.commons.math3.util.DefaultTransformer.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.awt.PageAttributes.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.text.NumberFormat.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.net.SocketPermission.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization$DataRow.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.awt.datatransfer.DataFlavor.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() javax.print.attribute.standard.MediaPrintableArea.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.nio.DoubleBuffer.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.lang.Float.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.lang.reflect.Field.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.util.EnumMap$EntryIterator$Entry.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.awt.RenderingHints$Key.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.util.IdentityHashMap.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.security.CodeSource.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() javax.print.MimeType.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.nio.LongBuffer.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() javax.sound.sampled.AudioFileFormat$Type.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.awt.image.MultiPixelPackedSampleModel.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.font.AttributeValues.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.security.krb5.KrbException.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.font.FontDesignMetrics$MetricsKey.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.util.JapaneseImperialCalendar.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() javax.crypto.spec.SecretKeySpec.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.lang.reflect.WeakCache$CacheValue.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.util.calendar.CalendarDate.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.security.krb5.internal.KRBError.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.security.util.DerValue.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() org.apache.commons.math3.analysis.polynomials.PolynomialFunction.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.security.krb5.internal.HostAddress.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.nio.fs.UnixFileKey.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.awt.Rectangle.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.nio.file.attribute.FileTime$DaysAndNanos.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$JacobiKey.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.lang.Thread$WeakClassKey.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.net.URL.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() org.apache.commons.math3.complex.Quaternion.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.net.HttpCookie.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() org.apache.commons.math3.linear.ArrayFieldVector.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.nio.ShortBuffer.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.security.x509.X509CRLImpl$X509IssuerSerial.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() javax.security.auth.kerberos.KeyImpl.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() javax.sound.sampled.LineEvent$Type.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() javax.sound.sampled.Control$Type.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.net.NetworkInterface.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.awt.geom.Arc2D.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() javax.print.attribute.HashAttributeSet.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics$AggregatingSummaryStatistics.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.util.Collections$CheckedMap$CheckedEntrySet.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.security.provider.PolicyFile$SelfPermission.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.java2d.pipe.Region.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.nio.CharBuffer.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.lang.Object.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.util.RegularEnumSet.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.awt.MenuShortcut.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.util.Locale$LocaleKey.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() javax.swing.text.DefaultCaret.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.awt.font.NumericShaper.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.util.Collections$CheckedSet.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.awt.image.ColorModel.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.lang.Integer.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() org.apache.commons.math3.fraction.BigFraction.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.awt.Dimension.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.reflect.generics.reflectiveObjects.TypeVariableImpl.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() org.apache.commons.math3.util.Decimal64.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() org.apache.commons.math3.optimization.linear.LinearObjectiveFunction.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.security.x509.X509CertInfo.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.awt.BasicStroke.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() org.apache.commons.math3.dfp.Dfp.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() javax.print.MimeType$ParameterMapEntry.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.awt.OSInfo$WindowsVersion.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.awt.Color.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() javax.sound.sampled.Mixer$Info.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.security.Provider$UString.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.lang.reflect.Proxy$KeyX.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.nio.FloatBuffer.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.text.RuleBasedCollator.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() org.apache.commons.math3.linear.OpenMapRealVector.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.security.krb5.Realm.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.font.Decoration$DecorationImpl.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.lang.Byte.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.lang.Double.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.security.cert.Certificate.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.lang.Boolean.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.security.x509.PolicyInformation.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.misc.Signal.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() com.sun.beans.WildcardTypeImpl.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.util.Collections$EmptyList.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.awt.font.TextHitInfo.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.nio.ch.FileKey.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.font.FontLineMetrics.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() org.apache.commons.math3.optimization.linear.LinearConstraint.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() org.apache.commons.math3.ml.clustering.DoublePoint.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.net.Inet6Address.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.security.x509.OtherName.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.util.PreHashedMap$2$1$1.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.util.TreeMap$Entry.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() javax.sound.midi.MidiDevice$Info.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.util.Collections$UnmodifiableSet.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.lang.reflect.Proxy$Key1.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.security.provider.PolicyParser$PermissionEntry.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.io.ObjectStreamClass$FieldReflectorKey.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.nio.ch.Util$2.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.lang.reflect.WeakCache$CacheKey.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.awt.geom.AffineTransform.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() sun.util.calendar.ImmutableGregorianDate.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.condense() java.security.Provider$ServiceKey.equals(java.lang.Object)
org.apache.commons.math3.geometry.euclidean.twod.SubLine.buildNew(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region) java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.twod.SubLine.buildNew(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region) org.apache.commons.math3.geometry.euclidean.twod.SubLine(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region)
org.apache.commons.math3.linear.RealVector.hashCode() org.apache.commons.math3.exception.MathUnsupportedOperationException()
org.apache.commons.math3.linear.RealVector.hashCode() java.lang.Object.clinit()
org.apache.commons.math3.linear.RealVector.hashCode() java.lang.Throwable.clinit()
org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$2.value(double,double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$2.value(double,double) org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction.access$000(org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction,double[],double[],double[][])
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.DfpField,long) java.lang.Object.clinit()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.DfpField,long) org.apache.commons.math3.dfp.DfpField.getRadixDigits()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.DfpField,long) java.lang.System.arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.DfpField,long) java.lang.Object()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.DfpField,long) java.lang.System.clinit()
org.apache.commons.math3.geometry.partitioning.BSPTree.split(org.apache.commons.math3.geometry.partitioning.SubHyperplane) java.lang.Enum.ordinal()
org.apache.commons.math3.geometry.partitioning.BSPTree.split(org.apache.commons.math3.geometry.partitioning.SubHyperplane) org.apache.commons.math3.geometry.partitioning.BSPTree.condense()
org.apache.commons.math3.geometry.partitioning.BSPTree.split(org.apache.commons.math3.geometry.partitioning.SubHyperplane) org.apache.commons.math3.geometry.partitioning.BSPTree.split(org.apache.commons.math3.geometry.partitioning.SubHyperplane)
org.apache.commons.math3.geometry.partitioning.BSPTree.split(org.apache.commons.math3.geometry.partitioning.SubHyperplane) org.apache.commons.math3.geometry.partitioning.BSPTree$1.clinit()
org.apache.commons.math3.geometry.partitioning.BSPTree.split(org.apache.commons.math3.geometry.partitioning.SubHyperplane) org.apache.commons.math3.geometry.euclidean.twod.Line.sameOrientationAs(org.apache.commons.math3.geometry.partitioning.Hyperplane)
org.apache.commons.math3.geometry.partitioning.BSPTree.split(org.apache.commons.math3.geometry.partitioning.SubHyperplane) org.apache.commons.math3.geometry.partitioning.BSPTree.copySelf()
org.apache.commons.math3.geometry.partitioning.BSPTree.split(org.apache.commons.math3.geometry.partitioning.SubHyperplane) org.apache.commons.math3.geometry.euclidean.threed.SubPlane.side(org.apache.commons.math3.geometry.partitioning.Hyperplane)
org.apache.commons.math3.geometry.partitioning.BSPTree.split(org.apache.commons.math3.geometry.partitioning.SubHyperplane) org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.sameOrientationAs(org.apache.commons.math3.geometry.partitioning.Hyperplane)
org.apache.commons.math3.geometry.partitioning.BSPTree.split(org.apache.commons.math3.geometry.partitioning.SubHyperplane) org.apache.commons.math3.geometry.euclidean.twod.SubLine.side(org.apache.commons.math3.geometry.partitioning.Hyperplane)
org.apache.commons.math3.geometry.partitioning.BSPTree.split(org.apache.commons.math3.geometry.partitioning.SubHyperplane) java.lang.Object.clinit()
org.apache.commons.math3.geometry.partitioning.BSPTree.split(org.apache.commons.math3.geometry.partitioning.SubHyperplane) org.apache.commons.math3.geometry.partitioning.Side.clinit()
org.apache.commons.math3.geometry.partitioning.BSPTree.split(org.apache.commons.math3.geometry.partitioning.SubHyperplane) org.apache.commons.math3.geometry.euclidean.twod.SubLine.split(org.apache.commons.math3.geometry.partitioning.Hyperplane)
org.apache.commons.math3.geometry.partitioning.BSPTree.split(org.apache.commons.math3.geometry.partitioning.SubHyperplane) org.apache.commons.math3.geometry.partitioning.BSPTree(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.split(org.apache.commons.math3.geometry.partitioning.SubHyperplane) org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint.split(org.apache.commons.math3.geometry.partitioning.Hyperplane)
org.apache.commons.math3.geometry.partitioning.BSPTree.split(org.apache.commons.math3.geometry.partitioning.SubHyperplane) org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane.getPlus()
org.apache.commons.math3.geometry.partitioning.BSPTree.split(org.apache.commons.math3.geometry.partitioning.SubHyperplane) org.apache.commons.math3.geometry.euclidean.threed.SubPlane.split(org.apache.commons.math3.geometry.partitioning.Hyperplane)
org.apache.commons.math3.geometry.partitioning.BSPTree.split(org.apache.commons.math3.geometry.partitioning.SubHyperplane) org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.getHyperplane()
org.apache.commons.math3.geometry.partitioning.BSPTree.split(org.apache.commons.math3.geometry.partitioning.SubHyperplane) org.apache.commons.math3.geometry.partitioning.BSPTree(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.split(org.apache.commons.math3.geometry.partitioning.SubHyperplane) org.apache.commons.math3.geometry.euclidean.threed.Plane.sameOrientationAs(org.apache.commons.math3.geometry.partitioning.Hyperplane)
org.apache.commons.math3.geometry.partitioning.BSPTree.split(org.apache.commons.math3.geometry.partitioning.SubHyperplane) org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.copySelf()
org.apache.commons.math3.geometry.partitioning.BSPTree.split(org.apache.commons.math3.geometry.partitioning.SubHyperplane) org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint.side(org.apache.commons.math3.geometry.partitioning.Hyperplane)
org.apache.commons.math3.geometry.partitioning.BSPTree.split(org.apache.commons.math3.geometry.partitioning.SubHyperplane) org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane.getMinus()
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.clinit() java.lang.Object.clinit()
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.clinit() org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.clinit() org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.clinit()
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.clinit() org.apache.commons.math3.util.FastMath.ulp(double)
org.apache.commons.math3.analysis.differentiation.DSCompiler.acos(double[],int,double[],int) java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.acos(double[],int,double[],int) org.apache.commons.math3.util.FastMath.sqrt(double)
org.apache.commons.math3.analysis.differentiation.DSCompiler.acos(double[],int,double[],int) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.acos(double[],int,double[],int) org.apache.commons.math3.analysis.differentiation.DSCompiler.compose(double[],int,double[],double[],int)
org.apache.commons.math3.analysis.differentiation.DSCompiler.acos(double[],int,double[],int) org.apache.commons.math3.util.FastMath.acos(double)
org.apache.commons.math3.exception.NotStrictlyPositiveException(java.lang.Number) java.lang.Object.clinit()
org.apache.commons.math3.exception.NotStrictlyPositiveException(java.lang.Number) org.apache.commons.math3.exception.NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)
org.apache.commons.math3.exception.NotStrictlyPositiveException(java.lang.Number) java.lang.Throwable.clinit()
org.apache.commons.math3.exception.NotStrictlyPositiveException(java.lang.Number) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.derivative() org.apache.commons.math3.analysis.polynomials.PolynomialFunction.polynomialDerivative()
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.writeBaseExternal(java.io.ObjectOutput) java.lang.Object.clinit()
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.writeBaseExternal(java.io.ObjectOutput) java.io.ObjectOutputStream.writeObject(java.lang.Object)
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.writeBaseExternal(java.io.ObjectOutput) java.io.ObjectOutputStream.writeDouble(double)
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.writeBaseExternal(java.io.ObjectOutput) java.lang.Throwable.clinit()
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.writeBaseExternal(java.io.ObjectOutput) java.io.ObjectOutputStream.writeBoolean(boolean)
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.writeBaseExternal(java.io.ObjectOutput) java.io.ObjectOutputStream.writeInt(int)
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.writeBaseExternal(java.io.ObjectOutput) java.lang.ThrowableCause(java.lang.Throwable)
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.writeBaseExternal(java.io.ObjectOutput) java.io.IOException(java.lang.String)
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.writeBaseExternal(java.io.ObjectOutput) java.io.ObjectOutputStream.write(int)
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.writeBaseExternal(java.io.ObjectOutput) org.apache.commons.math3.exception.MathIllegalStateException.getLocalizedMessage()
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.writeBaseExternal(java.io.ObjectOutput) org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.finalizeStep()
org.apache.commons.math3.analysis.differentiation.DSCompiler.pow(double[],int,double,double[],int) java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.pow(double[],int,double,double[],int) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.pow(double[],int,double,double[],int) org.apache.commons.math3.util.FastMath.pow(double,double)
org.apache.commons.math3.analysis.differentiation.DSCompiler.pow(double[],int,double,double[],int) org.apache.commons.math3.analysis.differentiation.DSCompiler.compose(double[],int,double[],double[],int)
org.apache.commons.math3.analysis.function.Log1p.value(double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Log1p.value(double) org.apache.commons.math3.util.FastMath.log1p(double)
org.apache.commons.math3.analysis.function.Log1p.value(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.distribution.NormalDistribution.cumulativeProbability(double,double) org.apache.commons.math3.distribution.NormalDistribution.probability(double,double)
org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.getN() org.apache.commons.math3.stat.descriptive.moment.Variance.getN()
org.apache.commons.math3.geometry.euclidean.twod.Line.toSpace(org.apache.commons.math3.geometry.Vector) java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.twod.Line.toSpace(org.apache.commons.math3.geometry.Vector) org.apache.commons.math3.geometry.euclidean.oned.Vector1D.getX()
org.apache.commons.math3.geometry.euclidean.twod.Line.toSpace(org.apache.commons.math3.geometry.Vector) org.apache.commons.math3.geometry.euclidean.twod.Vector2D.clinit()
org.apache.commons.math3.geometry.euclidean.twod.Line.toSpace(org.apache.commons.math3.geometry.Vector) org.apache.commons.math3.geometry.euclidean.twod.Vector2D(double,double)
org.apache.commons.math3.special.Erf.erf(double) java.lang.Object.clinit()
org.apache.commons.math3.special.Erf.erf(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.special.Erf.erf(double) org.apache.commons.math3.special.Gamma.clinit()
org.apache.commons.math3.special.Erf.erf(double) org.apache.commons.math3.special.Gamma.regularizedGammaP(double,double,double,int)
org.apache.commons.math3.special.Erf.erf(double) org.apache.commons.math3.util.FastMath.abs(double)
org.apache.commons.math3.util.MathArrays.linearCombination(double,double,double,double) java.lang.Object.clinit()
org.apache.commons.math3.util.MathArrays.linearCombination(double,double,double,double) java.lang.Double.isNaN(double)
org.apache.commons.math3.util.MathArrays.linearCombination(double,double,double,double) java.lang.Double.clinit()
org.apache.commons.math3.stat.descriptive.moment.Variance.clear() org.apache.commons.math3.stat.descriptive.moment.SecondMoment.clear()
org.apache.commons.math3.stat.descriptive.moment.Variance.clear() org.apache.commons.math3.stat.descriptive.moment.FourthMoment.clear()
org.apache.commons.math3.stat.descriptive.moment.Variance.clear() org.apache.commons.math3.stat.descriptive.moment.ThirdMoment.clear()
org.apache.commons.math3.geometry.partitioning.RegionFactory$NodesCleaner(org.apache.commons.math3.geometry.partitioning.RegionFactory) java.lang.Object()
org.apache.commons.math3.exception.MaxCountExceededException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[]) java.lang.Object.clinit()
org.apache.commons.math3.exception.MaxCountExceededException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[]) org.apache.commons.math3.exception.MathIllegalStateException()
org.apache.commons.math3.exception.MaxCountExceededException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[]) org.apache.commons.math3.exception.util.ExceptionContext.addMessage(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])
org.apache.commons.math3.exception.MaxCountExceededException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[]) org.apache.commons.math3.exception.MathIllegalStateException.getContext()
org.apache.commons.math3.analysis.differentiation.DSCompiler.atan(double[],int,double[],int) java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.atan(double[],int,double[],int) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.atan(double[],int,double[],int) org.apache.commons.math3.analysis.differentiation.DSCompiler.compose(double[],int,double[],double[],int)
org.apache.commons.math3.analysis.differentiation.DSCompiler.atan(double[],int,double[],int) org.apache.commons.math3.util.FastMath.atan(double)
org.apache.commons.math3.dfp.Dfp.dfp2sci() java.lang.String.clinit()
org.apache.commons.math3.dfp.Dfp.dfp2sci() java.lang.Object.clinit()
org.apache.commons.math3.dfp.Dfp.dfp2sci() java.lang.String(char[],int,int)
org.apache.commons.math3.analysis.function.Logit.value(double) org.apache.commons.math3.analysis.function.Logit.value(double,double,double)
org.apache.commons.math3.analysis.function.Logit.value(double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Atan.derivative() org.apache.commons.math3.analysis.function.Cbrt.derivative()
org.apache.commons.math3.analysis.function.Atan.derivative() org.apache.commons.math3.analysis.function.Minus.derivative()
org.apache.commons.math3.analysis.function.Atan.derivative() org.apache.commons.math3.analysis.function.Tanh.derivative()
org.apache.commons.math3.analysis.function.Atan.derivative() org.apache.commons.math3.analysis.FunctionUtils.toDifferentiableUnivariateFunction(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction)
org.apache.commons.math3.analysis.function.Atan.derivative() org.apache.commons.math3.analysis.function.Expm1.derivative()
org.apache.commons.math3.analysis.function.Atan.derivative() org.apache.commons.math3.analysis.function.Power.derivative()
org.apache.commons.math3.analysis.function.Atan.derivative() org.apache.commons.math3.analysis.function.Logit.derivative()
org.apache.commons.math3.analysis.function.Atan.derivative() org.apache.commons.math3.analysis.function.Sinc.derivative()
org.apache.commons.math3.analysis.function.Atan.derivative() org.apache.commons.math3.analysis.function.Constant.derivative()
org.apache.commons.math3.analysis.function.Atan.derivative() org.apache.commons.math3.analysis.function.Log10.derivative()
org.apache.commons.math3.analysis.function.Atan.derivative() org.apache.commons.math3.analysis.function.Sigmoid.derivative()
org.apache.commons.math3.analysis.function.Atan.derivative() org.apache.commons.math3.analysis.function.Acosh.derivative()
org.apache.commons.math3.analysis.function.Atan.derivative() org.apache.commons.math3.analysis.function.Exp.derivative()
org.apache.commons.math3.analysis.function.Atan.derivative() org.apache.commons.math3.analysis.function.Sinh.derivative()
org.apache.commons.math3.analysis.function.Atan.derivative() java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Atan.derivative() org.apache.commons.math3.analysis.polynomials.PolynomialFunction.derivative()
org.apache.commons.math3.analysis.function.Atan.derivative() org.apache.commons.math3.analysis.function.Gaussian.derivative()
org.apache.commons.math3.analysis.function.Atan.derivative() org.apache.commons.math3.analysis.function.Atanh.derivative()
org.apache.commons.math3.analysis.function.Atan.derivative() org.apache.commons.math3.analysis.function.Sqrt.derivative()
org.apache.commons.math3.analysis.function.Atan.derivative() org.apache.commons.math3.analysis.FunctionUtils$3.derivative()
org.apache.commons.math3.analysis.function.Atan.derivative() org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.derivative()
org.apache.commons.math3.analysis.function.Atan.derivative() org.apache.commons.math3.analysis.function.Log1p.derivative()
org.apache.commons.math3.analysis.function.Atan.derivative() org.apache.commons.math3.analysis.function.Asin.derivative()
org.apache.commons.math3.analysis.function.Atan.derivative() org.apache.commons.math3.analysis.function.Cos.derivative()
org.apache.commons.math3.analysis.function.Atan.derivative() org.apache.commons.math3.analysis.function.Asinh.derivative()
org.apache.commons.math3.analysis.function.Atan.derivative() org.apache.commons.math3.analysis.function.Tan.derivative()
org.apache.commons.math3.analysis.function.Atan.derivative() org.apache.commons.math3.analysis.FunctionUtils$6.derivative()
org.apache.commons.math3.analysis.function.Atan.derivative() org.apache.commons.math3.analysis.function.Log.derivative()
org.apache.commons.math3.analysis.function.Atan.derivative() org.apache.commons.math3.analysis.function.Atan.derivative()
org.apache.commons.math3.analysis.function.Atan.derivative() org.apache.commons.math3.analysis.function.Acos.derivative()
org.apache.commons.math3.analysis.function.Atan.derivative() org.apache.commons.math3.analysis.FunctionUtils$14.derivative()
org.apache.commons.math3.analysis.function.Atan.derivative() org.apache.commons.math3.analysis.function.Identity.derivative()
org.apache.commons.math3.analysis.function.Atan.derivative() org.apache.commons.math3.analysis.function.Cosh.derivative()
org.apache.commons.math3.analysis.function.Atan.derivative() org.apache.commons.math3.analysis.FunctionUtils$9.derivative()
org.apache.commons.math3.analysis.function.Atan.derivative() org.apache.commons.math3.analysis.function.Logistic.derivative()
org.apache.commons.math3.analysis.function.Atan.derivative() org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative()
org.apache.commons.math3.analysis.function.Atan.derivative() org.apache.commons.math3.analysis.function.Inverse.derivative()
org.apache.commons.math3.analysis.function.Atan.derivative() org.apache.commons.math3.analysis.function.Sin.derivative()
org.apache.commons.math3.dfp.DfpDec(org.apache.commons.math3.dfp.DfpField,int) org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.DfpField,int)
org.apache.commons.math3.geometry.partitioning.BoundarySizeVisitor.visitOrder(org.apache.commons.math3.geometry.partitioning.BSPTree) java.lang.Object.clinit()
org.apache.commons.math3.geometry.partitioning.BoundarySizeVisitor.visitOrder(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.clinit()
org.apache.commons.math3.analysis.FunctionUtils$9.derivative() java.lang.Object.clinit()
org.apache.commons.math3.analysis.FunctionUtils$9.derivative() org.apache.commons.math3.analysis.FunctionUtils$9$1(org.apache.commons.math3.analysis.FunctionUtils$9)
org.apache.commons.math3.geometry.partitioning.BSPTree.insertInTree(org.apache.commons.math3.geometry.partitioning.BSPTree,boolean) org.apache.commons.math3.geometry.euclidean.twod.SubLine.split(org.apache.commons.math3.geometry.partitioning.Hyperplane)
org.apache.commons.math3.geometry.partitioning.BSPTree.insertInTree(org.apache.commons.math3.geometry.partitioning.BSPTree,boolean) org.apache.commons.math3.geometry.partitioning.BSPTree.condense()
org.apache.commons.math3.geometry.partitioning.BSPTree.insertInTree(org.apache.commons.math3.geometry.partitioning.BSPTree,boolean) org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint.split(org.apache.commons.math3.geometry.partitioning.Hyperplane)
org.apache.commons.math3.geometry.partitioning.BSPTree.insertInTree(org.apache.commons.math3.geometry.partitioning.BSPTree,boolean) org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane.getPlus()
org.apache.commons.math3.geometry.partitioning.BSPTree.insertInTree(org.apache.commons.math3.geometry.partitioning.BSPTree,boolean) org.apache.commons.math3.geometry.euclidean.threed.SubPlane.split(org.apache.commons.math3.geometry.partitioning.Hyperplane)
org.apache.commons.math3.geometry.partitioning.BSPTree.insertInTree(org.apache.commons.math3.geometry.partitioning.BSPTree,boolean) org.apache.commons.math3.geometry.partitioning.BSPTree.chopOffMinus(org.apache.commons.math3.geometry.partitioning.Hyperplane)
org.apache.commons.math3.geometry.partitioning.BSPTree.insertInTree(org.apache.commons.math3.geometry.partitioning.BSPTree,boolean) org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.getHyperplane()
org.apache.commons.math3.geometry.partitioning.BSPTree.insertInTree(org.apache.commons.math3.geometry.partitioning.BSPTree,boolean) org.apache.commons.math3.geometry.partitioning.BSPTree.chopOffPlus(org.apache.commons.math3.geometry.partitioning.Hyperplane)
org.apache.commons.math3.geometry.partitioning.BSPTree.insertInTree(org.apache.commons.math3.geometry.partitioning.BSPTree,boolean) org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane.getMinus()
org.apache.commons.math3.exception.MathIllegalNumberException.clinit() java.lang.Object.clinit()
org.apache.commons.math3.exception.MathIllegalNumberException.clinit() org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.exception.MathIllegalNumberException.clinit() java.lang.Throwable.clinit()
org.apache.commons.math3.exception.MathIllegalNumberException.clinit() java.lang.Integer.clinit()
org.apache.commons.math3.exception.MathIllegalNumberException.clinit() java.lang.Integer.valueOf(int)
org.apache.commons.math3.dfp.DfpMath.pow(org.apache.commons.math3.dfp.Dfp,int) org.apache.commons.math3.dfp.Dfp.divide(org.apache.commons.math3.dfp.Dfp)
org.apache.commons.math3.dfp.DfpMath.pow(org.apache.commons.math3.dfp.Dfp,int) org.apache.commons.math3.dfp.Dfp.multiply(org.apache.commons.math3.dfp.Dfp)
org.apache.commons.math3.dfp.DfpMath.pow(org.apache.commons.math3.dfp.Dfp,int) java.lang.Object.clinit()
org.apache.commons.math3.dfp.DfpMath.pow(org.apache.commons.math3.dfp.Dfp,int) org.apache.commons.math3.dfp.Dfp.newInstance(org.apache.commons.math3.dfp.Dfp)
org.apache.commons.math3.dfp.DfpMath.pow(org.apache.commons.math3.dfp.Dfp,int) org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp)
org.apache.commons.math3.dfp.DfpMath.pow(org.apache.commons.math3.dfp.Dfp,int) org.apache.commons.math3.dfp.Dfp.getOne()
org.apache.commons.math3.dfp.DfpMath.pow(org.apache.commons.math3.dfp.Dfp,int) org.apache.commons.math3.dfp.DfpDec.newInstance(org.apache.commons.math3.dfp.Dfp)
org.apache.commons.math3.geometry.partitioning.RegionFactory$NodesCleaner.visitOrder(org.apache.commons.math3.geometry.partitioning.BSPTree) java.lang.Object.clinit()
org.apache.commons.math3.geometry.partitioning.RegionFactory$NodesCleaner.visitOrder(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.clinit()
org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor$BoundaryProjector.visitOrder(org.apache.commons.math3.geometry.partitioning.BSPTree) java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor$BoundaryProjector.visitOrder(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.clinit()
org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction.access$000(org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction,double[],double[],double[][]) org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction.apply(double[],double[],double[][])
org.apache.commons.math3.util.FastMath.atan2(double,double) java.lang.Object.clinit()
org.apache.commons.math3.util.FastMath.atan2(double,double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.util.FastMath.atan2(double,double) java.lang.Double.clinit()
org.apache.commons.math3.util.FastMath.atan2(double,double) java.lang.Double.isInfinite(double)
org.apache.commons.math3.util.FastMath.atan2(double,double) org.apache.commons.math3.util.FastMath.copySign(double,double)
org.apache.commons.math3.util.FastMath.atan2(double,double) org.apache.commons.math3.util.FastMath.atan(double,double,boolean)
org.apache.commons.math3.util.FastMath.atan2(double,double) org.apache.commons.math3.util.FastMath.doubleHighPart(double)
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$FacetsContributionVisitor.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.geometry.partitioning.AbstractRegion.getBarycenter()
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$FacetsContributionVisitor.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.access$300(org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet,org.apache.commons.math3.geometry.Vector)
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$FacetsContributionVisitor.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.access$500(org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet,org.apache.commons.math3.geometry.Vector)
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$FacetsContributionVisitor.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.geometry.euclidean.threed.Plane.getNormal()
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$FacetsContributionVisitor.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.geometry.euclidean.threed.Plane.toSpace(org.apache.commons.math3.geometry.Vector)
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$FacetsContributionVisitor.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.geometry.euclidean.threed.Vector3D.dotProduct(org.apache.commons.math3.geometry.Vector)
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$FacetsContributionVisitor.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.access$200(org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet,double)
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$FacetsContributionVisitor.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.lang.Double.isInfinite(double)
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$FacetsContributionVisitor.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.geometry.partitioning.AbstractRegion.getSize()
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$FacetsContributionVisitor.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.access$400(org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet,double)
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$FacetsContributionVisitor.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$FacetsContributionVisitor.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.geometry.euclidean.threed.Vector3D.clinit()
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$FacetsContributionVisitor.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.geometry.euclidean.threed.Vector3D(double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$FacetsContributionVisitor.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.getHyperplane()
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$FacetsContributionVisitor.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.lang.Double.clinit()
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$FacetsContributionVisitor.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.getRemainingRegion()
org.apache.commons.math3.analysis.function.Sigmoid.access$000(double,double,double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Sigmoid.access$000(double,double,double) org.apache.commons.math3.analysis.function.Sigmoid.value(double,double,double)
org.apache.commons.math3.util.FastMath.tanh(double) java.lang.Object.clinit()
org.apache.commons.math3.util.FastMath.tanh(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.util.FastMath.tanh(double) org.apache.commons.math3.util.FastMath.exp(double,double,double[])
org.apache.commons.math3.util.FastMath.tanh(double) org.apache.commons.math3.util.FastMath.expm1(double,double[])
org.apache.commons.math3.util.MultidimensionalCounter.getCount(int[]) org.apache.commons.math3.exception.OutOfRangeException(java.lang.Number,java.lang.Number,java.lang.Number)
org.apache.commons.math3.util.MultidimensionalCounter.getCount(int[]) java.lang.Object.clinit()
org.apache.commons.math3.util.MultidimensionalCounter.getCount(int[]) org.apache.commons.math3.exception.DimensionMismatchException(int,int)
org.apache.commons.math3.util.MultidimensionalCounter.getCount(int[]) java.lang.Throwable.clinit()
org.apache.commons.math3.util.MultidimensionalCounter.getCount(int[]) java.lang.Integer.clinit()
org.apache.commons.math3.util.MultidimensionalCounter.getCount(int[]) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.util.MultidimensionalCounter.getCount(int[]) java.lang.Integer.valueOf(int)
org.apache.commons.math3.stat.descriptive.moment.Kurtosis.increment(double) org.apache.commons.math3.stat.descriptive.moment.FourthMoment.increment(double)
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getMean() org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getMean()
org.apache.commons.math3.special.Gamma.regularizedGammaQ(double,double,double,int) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.special.Gamma.regularizedGammaQ(double,double,double,int) java.lang.Object.clinit()
org.apache.commons.math3.special.Gamma.regularizedGammaQ(double,double,double,int) org.apache.commons.math3.util.ContinuedFraction.evaluate(double,double,int)
org.apache.commons.math3.special.Gamma.regularizedGammaQ(double,double,double,int) java.lang.Double.isNaN(double)
org.apache.commons.math3.special.Gamma.regularizedGammaQ(double,double,double,int) org.apache.commons.math3.special.Gamma.clinit()
org.apache.commons.math3.special.Gamma.regularizedGammaQ(double,double,double,int) org.apache.commons.math3.special.Gamma$1(double)
org.apache.commons.math3.special.Gamma.regularizedGammaQ(double,double,double,int) org.apache.commons.math3.util.FastMath.exp(double)
org.apache.commons.math3.special.Gamma.regularizedGammaQ(double,double,double,int) org.apache.commons.math3.special.Gamma.regularizedGammaP(double,double,double,int)
org.apache.commons.math3.special.Gamma.regularizedGammaQ(double,double,double,int) java.lang.Double.clinit()
org.apache.commons.math3.special.Gamma.regularizedGammaQ(double,double,double,int) org.apache.commons.math3.util.FastMath.log(double)
org.apache.commons.math3.special.Gamma.regularizedGammaQ(double,double,double,int) org.apache.commons.math3.special.Gamma.logGamma(double)
org.apache.commons.math3.util.Decimal64.equals(java.lang.Object) java.lang.Object.clinit()
org.apache.commons.math3.util.Decimal64.equals(java.lang.Object) java.lang.Double.clinit()
org.apache.commons.math3.util.Decimal64.equals(java.lang.Object) java.lang.Double.doubleToLongBits(double)
org.apache.commons.math3.exception.MathIllegalStateException() org.apache.commons.math3.exception.MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])
org.apache.commons.math3.exception.MathIllegalStateException() java.lang.Object.clinit()
org.apache.commons.math3.exception.MathIllegalStateException() org.apache.commons.math3.exception.util.LocalizedFormats.clinit()
org.apache.commons.math3.analysis.function.Expm1.derivative() org.apache.commons.math3.analysis.function.Cbrt.derivative()
org.apache.commons.math3.analysis.function.Expm1.derivative() org.apache.commons.math3.analysis.function.Minus.derivative()
org.apache.commons.math3.analysis.function.Expm1.derivative() org.apache.commons.math3.analysis.function.Tanh.derivative()
org.apache.commons.math3.analysis.function.Expm1.derivative() org.apache.commons.math3.analysis.FunctionUtils.toDifferentiableUnivariateFunction(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction)
org.apache.commons.math3.analysis.function.Expm1.derivative() org.apache.commons.math3.analysis.function.Expm1.derivative()
org.apache.commons.math3.analysis.function.Expm1.derivative() org.apache.commons.math3.analysis.function.Power.derivative()
org.apache.commons.math3.analysis.function.Expm1.derivative() org.apache.commons.math3.analysis.function.Logit.derivative()
org.apache.commons.math3.analysis.function.Expm1.derivative() org.apache.commons.math3.analysis.function.Sinc.derivative()
org.apache.commons.math3.analysis.function.Expm1.derivative() org.apache.commons.math3.analysis.function.Constant.derivative()
org.apache.commons.math3.analysis.function.Expm1.derivative() org.apache.commons.math3.analysis.function.Log10.derivative()
org.apache.commons.math3.analysis.function.Expm1.derivative() org.apache.commons.math3.analysis.function.Sigmoid.derivative()
org.apache.commons.math3.analysis.function.Expm1.derivative() org.apache.commons.math3.analysis.function.Acosh.derivative()
org.apache.commons.math3.analysis.function.Expm1.derivative() org.apache.commons.math3.analysis.function.Exp.derivative()
org.apache.commons.math3.analysis.function.Expm1.derivative() org.apache.commons.math3.analysis.function.Sinh.derivative()
org.apache.commons.math3.analysis.function.Expm1.derivative() java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Expm1.derivative() org.apache.commons.math3.analysis.polynomials.PolynomialFunction.derivative()
org.apache.commons.math3.analysis.function.Expm1.derivative() org.apache.commons.math3.analysis.function.Gaussian.derivative()
org.apache.commons.math3.analysis.function.Expm1.derivative() org.apache.commons.math3.analysis.function.Atanh.derivative()
org.apache.commons.math3.analysis.function.Expm1.derivative() org.apache.commons.math3.analysis.function.Sqrt.derivative()
org.apache.commons.math3.analysis.function.Expm1.derivative() org.apache.commons.math3.analysis.FunctionUtils$3.derivative()
org.apache.commons.math3.analysis.function.Expm1.derivative() org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.derivative()
org.apache.commons.math3.analysis.function.Expm1.derivative() org.apache.commons.math3.analysis.function.Log1p.derivative()
org.apache.commons.math3.analysis.function.Expm1.derivative() org.apache.commons.math3.analysis.function.Asin.derivative()
org.apache.commons.math3.analysis.function.Expm1.derivative() org.apache.commons.math3.analysis.function.Cos.derivative()
org.apache.commons.math3.analysis.function.Expm1.derivative() org.apache.commons.math3.analysis.function.Asinh.derivative()
org.apache.commons.math3.analysis.function.Expm1.derivative() org.apache.commons.math3.analysis.function.Tan.derivative()
org.apache.commons.math3.analysis.function.Expm1.derivative() org.apache.commons.math3.analysis.FunctionUtils$6.derivative()
org.apache.commons.math3.analysis.function.Expm1.derivative() org.apache.commons.math3.analysis.function.Log.derivative()
org.apache.commons.math3.analysis.function.Expm1.derivative() org.apache.commons.math3.analysis.function.Atan.derivative()
org.apache.commons.math3.analysis.function.Expm1.derivative() org.apache.commons.math3.analysis.function.Acos.derivative()
org.apache.commons.math3.analysis.function.Expm1.derivative() org.apache.commons.math3.analysis.FunctionUtils$14.derivative()
org.apache.commons.math3.analysis.function.Expm1.derivative() org.apache.commons.math3.analysis.function.Identity.derivative()
org.apache.commons.math3.analysis.function.Expm1.derivative() org.apache.commons.math3.analysis.function.Cosh.derivative()
org.apache.commons.math3.analysis.function.Expm1.derivative() org.apache.commons.math3.analysis.FunctionUtils$9.derivative()
org.apache.commons.math3.analysis.function.Expm1.derivative() org.apache.commons.math3.analysis.function.Logistic.derivative()
org.apache.commons.math3.analysis.function.Expm1.derivative() org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative()
org.apache.commons.math3.analysis.function.Expm1.derivative() org.apache.commons.math3.analysis.function.Inverse.derivative()
org.apache.commons.math3.analysis.function.Expm1.derivative() org.apache.commons.math3.analysis.function.Sin.derivative()
org.apache.commons.math3.analysis.function.Expm1.value(double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Expm1.value(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.function.Expm1.value(double) org.apache.commons.math3.util.FastMath.expm1(double)
org.apache.commons.math3.util.MathArrays$Position.values() sun.text.CompactByteArray.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.awt.geom.AffineTransform.clone()
org.apache.commons.math3.util.MathArrays$Position.values() sun.security.krb5.internal.KerberosTime.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.util.Hashtable.clone()
org.apache.commons.math3.util.MathArrays$Position.values() sun.security.krb5.internal.Ticket.clone()
org.apache.commons.math3.util.MathArrays$Position.values() sun.text.IntHashtable.clone()
org.apache.commons.math3.util.MathArrays$Position.values() sun.security.util.BitArray.clone()
org.apache.commons.math3.util.MathArrays$Position.values() com.sun.imageio.plugins.jpeg.DHTMarkerSegment$Htable.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.util.SimpleTimeZone.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.util.IdentityHashMap.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.util.JapaneseImperialCalendar.clone()
org.apache.commons.math3.util.MathArrays$Position.values() sun.security.krb5.internal.ETypeInfo.clone()
org.apache.commons.math3.util.MathArrays$Position.values() sun.text.normalizer.NormalizerBase.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.util.Locale.clone()
org.apache.commons.math3.util.MathArrays$Position.values() sun.security.krb5.internal.TicketFlags.clone()
org.apache.commons.math3.util.MathArrays$Position.values() sun.java2d.SunGraphics2D.clone()
org.apache.commons.math3.util.MathArrays$Position.values() sun.security.provider.MD4.clone()
org.apache.commons.math3.util.MathArrays$Position.values() javax.swing.tree.DefaultTreeSelectionModel.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.awt.print.Paper.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.text.MessageFormat.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.lang.Object.clone()
org.apache.commons.math3.util.MathArrays$Position.values() javax.swing.text.SimpleAttributeSet.clone()
org.apache.commons.math3.util.MathArrays$Position.values() javax.swing.ArrayTable.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.text.SimpleDateFormat.clone()
org.apache.commons.math3.util.MathArrays$Position.values() sun.java2d.loops.FontInfo.clone()
org.apache.commons.math3.util.MathArrays$Position.values() sun.security.krb5.PrincipalName.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.awt.PageAttributes.clone()
org.apache.commons.math3.util.MathArrays$Position.values() com.sun.imageio.plugins.png.PNGMetadata.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.util.GregorianCalendar.clone()
org.apache.commons.math3.util.MathArrays$Position.values() com.sun.imageio.plugins.jpeg.SOFMarkerSegment.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.util.Vector.clone()
org.apache.commons.math3.util.MathArrays$Position.values() javax.swing.text.ElementIterator.clone()
org.apache.commons.math3.util.MathArrays$Position.values() org.apache.commons.math3.util.MathArrays$Position.clinit()
org.apache.commons.math3.util.MathArrays$Position.values() java.net.HttpCookie.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.awt.datatransfer.MimeType.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.awt.RenderingHints.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.text.DateFormatSymbols.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.util.HashSet.clone()
org.apache.commons.math3.util.MathArrays$Position.values() sun.util.calendar.ImmutableGregorianDate.clone()
org.apache.commons.math3.util.MathArrays$Position.values() javax.sound.midi.MetaMessage.clone()
org.apache.commons.math3.util.MathArrays$Position.values() sun.font.FontLineMetrics.clone()
org.apache.commons.math3.util.MathArrays$Position.values() sun.font.StandardGlyphVector.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.text.AttributedString$AttributedStringIterator.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.text.RuleBasedBreakIterator.clone()
org.apache.commons.math3.util.MathArrays$Position.values() javax.swing.text.Segment.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.awt.ImageCapabilities.clone()
org.apache.commons.math3.util.MathArrays$Position.values() sun.security.krb5.internal.LastReqEntry.clone()
org.apache.commons.math3.util.MathArrays$Position.values() javax.swing.text.StyleContext$SmallAttributeSet.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.text.RuleBasedCollator.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.text.RuleBasedBreakIterator$SafeCharIterator.clone()
org.apache.commons.math3.util.MathArrays$Position.values() javax.swing.text.ElementIterator$StackItem.clone()
org.apache.commons.math3.util.MathArrays$Position.values() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$ICCMarkerSegment.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.awt.geom.Line2D.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.util.ResourceBundle$CacheKey.clone()
org.apache.commons.math3.util.MathArrays$Position.values() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumbJPEG.clone()
org.apache.commons.math3.util.MathArrays$Position.values() sun.security.krb5.internal.ETypeInfo2.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.awt.font.TextMeasurer.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.util.LinkedList.clone()
org.apache.commons.math3.util.MathArrays$Position.values() sun.font.AttributeValues.clone()
org.apache.commons.math3.util.MathArrays$Position.values() javax.swing.text.StyledEditorKit$1.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.util.ArrayDeque.clone()
org.apache.commons.math3.util.MathArrays$Position.values() javax.swing.text.GlyphView.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.awt.datatransfer.DataFlavor.clone()
org.apache.commons.math3.util.MathArrays$Position.values() sun.security.krb5.internal.PAData.clone()
org.apache.commons.math3.util.MathArrays$Position.values() javax.swing.AbstractAction.clone()
org.apache.commons.math3.util.MathArrays$Position.values() sun.text.normalizer.ReplaceableUCharacterIterator.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.util.concurrent.CopyOnWriteArrayList.clone()
org.apache.commons.math3.util.MathArrays$Position.values() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumb.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.awt.geom.Point2D.clone()
org.apache.commons.math3.util.MathArrays$Position.values() javax.swing.text.html.OptionListModel.clone()
org.apache.commons.math3.util.MathArrays$Position.values() sun.security.krb5.internal.AuthorizationDataEntry.clone()
org.apache.commons.math3.util.MathArrays$Position.values() javax.swing.text.EditorKit.clone()
org.apache.commons.math3.util.MathArrays$Position.values() javax.swing.text.StyledEditorKit.clone()
org.apache.commons.math3.util.MathArrays$Position.values() com.sun.imageio.plugins.jpeg.DQTMarkerSegment.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.util.JumboEnumSet.clone()
org.apache.commons.math3.util.MathArrays$Position.values() sun.security.krb5.internal.HostAddresses.clone()
org.apache.commons.math3.util.MathArrays$Position.values() javax.crypto.Mac.clone()
org.apache.commons.math3.util.MathArrays$Position.values() javax.naming.Reference.clone()
org.apache.commons.math3.util.MathArrays$Position.values() com.sun.imageio.plugins.jpeg.SOSMarkerSegment.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.util.jar.Manifest.clone()
org.apache.commons.math3.util.MathArrays$Position.values() sun.security.krb5.EncryptedData.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.text.NumberFormat.clone()
org.apache.commons.math3.util.MathArrays$Position.values() sun.net.ProgressSource.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.util.EnumSet.clone()
org.apache.commons.math3.util.MathArrays$Position.values() sun.net.www.protocol.http.AuthenticationInfo.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.awt.datatransfer.MimeTypeParameterList.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.util.regex.Pattern$CharPropertyNames$CloneableProperty.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.security.SignatureSpi.clone()
org.apache.commons.math3.util.MathArrays$Position.values() sun.security.x509.GeneralSubtrees.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.util.ArrayList.clone()
org.apache.commons.math3.util.MathArrays$Position.values() com.sun.imageio.plugins.jpeg.DHTMarkerSegment.clone()
org.apache.commons.math3.util.MathArrays$Position.values() javax.naming.CompositeName.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.awt.font.CharArrayIterator.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.security.Signature$Delegate.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.util.TreeSet.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.util.Hashtable$Entry.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.awt.image.ImageFilter.clone()
org.apache.commons.math3.util.MathArrays$Position.values() com.sun.imageio.plugins.jpeg.SOSMarkerSegment$ScanComponentSpec.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.awt.geom.Path2D$Float.clone()
org.apache.commons.math3.util.MathArrays$Position.values() sun.security.krb5.EncryptionKey.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.text.DecimalFormat.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.awt.BufferCapabilities.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.awt.image.Kernel.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.util.Date.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.awt.Insets.clone()
org.apache.commons.math3.util.MathArrays$Position.values() sun.net.www.MimeEntry.clone()
org.apache.commons.math3.util.MathArrays$Position.values() sun.util.calendar.CalendarDate.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.awt.print.PageFormat.clone()
org.apache.commons.math3.util.MathArrays$Position.values() com.sun.imageio.plugins.jpeg.SOFMarkerSegment$ComponentSpec.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.util.EnumMap.clone()
org.apache.commons.math3.util.MathArrays$Position.values() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.clone()
org.apache.commons.math3.util.MathArrays$Position.values() sun.security.krb5.internal.AuthorizationData.clone()
org.apache.commons.math3.util.MathArrays$Position.values() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFExtensionMarkerSegment.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.awt.geom.QuadCurve2D.clone()
org.apache.commons.math3.util.MathArrays$Position.values() sun.security.krb5.internal.crypto.crc32.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.util.zip.ZipEntry.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.security.MessageDigest$Delegate.clone()
org.apache.commons.math3.util.MathArrays$Position.values() sun.util.calendar.ZoneInfo.clone()
org.apache.commons.math3.util.MathArrays$Position.values() sun.text.normalizer.CharacterIteratorWrapper.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.lang.Object.clinit()
org.apache.commons.math3.util.MathArrays$Position.values() java.text.DecimalFormatSymbols.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.awt.font.TextLayout.clone()
org.apache.commons.math3.util.MathArrays$Position.values() javax.swing.DefaultListSelectionModel.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.text.DigitList.clone()
org.apache.commons.math3.util.MathArrays$Position.values() javax.print.attribute.EnumSyntax.clone()
org.apache.commons.math3.util.MathArrays$Position.values() javax.sound.midi.ShortMessage.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.awt.geom.CubicCurve2D.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.text.ChoiceFormat.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.lang.Thread.clone()
org.apache.commons.math3.util.MathArrays$Position.values() com.sun.imageio.plugins.jpeg.MarkerSegment.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.awt.image.renderable.RenderContext.clone()
org.apache.commons.math3.util.MathArrays$Position.values() sun.security.krb5.Realm.clone()
org.apache.commons.math3.util.MathArrays$Position.values() com.sun.imageio.plugins.jpeg.DQTMarkerSegment$Qtable.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.awt.JobAttributes.clone()
org.apache.commons.math3.util.MathArrays$Position.values() com.sun.imageio.plugins.jpeg.JPEGMetadata.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.text.StringCharacterIterator.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.awt.geom.Dimension2D.clone()
org.apache.commons.math3.util.MathArrays$Position.values() sun.security.x509.NameConstraintsExtension.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.awt.geom.Area.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.util.jar.Attributes.clone()
org.apache.commons.math3.util.MathArrays$Position.values() sun.security.krb5.internal.HostAddress.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.util.TreeMap.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.awt.geom.Path2D$Double.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.text.BreakIterator.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.util.BitSet.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.lang.Enum.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.util.AbstractMap.clone()
org.apache.commons.math3.util.MathArrays$Position.values() javax.swing.tree.DefaultMutableTreeNode.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.awt.geom.RectangularShape.clone()
org.apache.commons.math3.util.MathArrays$Position.values() sun.security.provider.PolicyParser$GrantEntry.clone()
org.apache.commons.math3.util.MathArrays$Position.values() java.util.HashMap.clone()
org.apache.commons.math3.util.MathArrays$Position.values() org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.clone()
org.apache.commons.math3.util.MathArrays$Position.values() javax.swing.text.html.HTMLEditorKit.clone()
org.apache.commons.math3.util.MathArrays$Position(java.lang.String,int) java.lang.Enum(java.lang.String,int)
org.apache.commons.math3.ode.events.FilterType$3.clinit() java.lang.Object.clinit()
org.apache.commons.math3.ode.events.FilterType$3.clinit() java.lang.Enum.ordinal()
org.apache.commons.math3.ode.events.FilterType$3.clinit() org.apache.commons.math3.ode.events.FilterType$3.clinit()
org.apache.commons.math3.ode.events.FilterType$3.clinit() org.apache.commons.math3.ode.events.Transformer.values()
org.apache.commons.math3.ode.events.FilterType$3.clinit() org.apache.commons.math3.ode.events.Transformer.clinit()
org.apache.commons.math3.linear.OpenMapRealVector.equals(java.lang.Object) java.lang.Object.clinit()
org.apache.commons.math3.linear.OpenMapRealVector.equals(java.lang.Object) org.apache.commons.math3.linear.OpenMapRealVector.getEntry(int)
org.apache.commons.math3.linear.OpenMapRealVector.equals(java.lang.Object) org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.hasNext()
org.apache.commons.math3.linear.OpenMapRealVector.equals(java.lang.Object) org.apache.commons.math3.linear.OpenMapRealVector.getEntries()
org.apache.commons.math3.linear.OpenMapRealVector.equals(java.lang.Object) org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.value()
org.apache.commons.math3.linear.OpenMapRealVector.equals(java.lang.Object) java.lang.Double.clinit()
org.apache.commons.math3.linear.OpenMapRealVector.equals(java.lang.Object) org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.key()
org.apache.commons.math3.linear.OpenMapRealVector.equals(java.lang.Object) org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.advance()
org.apache.commons.math3.linear.OpenMapRealVector.equals(java.lang.Object) java.lang.Double.doubleToLongBits(double)
org.apache.commons.math3.linear.OpenMapRealVector.equals(java.lang.Object) org.apache.commons.math3.util.OpenIntToDoubleHashMap.iterator()
org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.clear() org.apache.commons.math3.stat.descriptive.moment.Variance.clear()
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.orthogonal() org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.orthogonal() java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.orthogonal() org.apache.commons.math3.util.FastMath.sqrt(double)
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.orthogonal() org.apache.commons.math3.geometry.euclidean.threed.Vector3D.clinit()
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.orthogonal() java.lang.Throwable.clinit()
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.orthogonal() org.apache.commons.math3.geometry.euclidean.threed.Vector3D(double,double,double)
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.orthogonal() org.apache.commons.math3.exception.MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.orthogonal() org.apache.commons.math3.exception.util.LocalizedFormats.clinit()
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.orthogonal() org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getNorm()
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.orthogonal() org.apache.commons.math3.util.FastMath.abs(double)
org.apache.commons.math3.ode.AbstractIntegrator$1.compare(org.apache.commons.math3.ode.events.EventState,org.apache.commons.math3.ode.events.EventState) java.lang.Object.clinit()
org.apache.commons.math3.ode.AbstractIntegrator$1.compare(org.apache.commons.math3.ode.events.EventState,org.apache.commons.math3.ode.events.EventState) java.lang.Double.compare(double,double)
org.apache.commons.math3.ode.AbstractIntegrator$1.compare(org.apache.commons.math3.ode.events.EventState,org.apache.commons.math3.ode.events.EventState) java.lang.Double.clinit()
org.apache.commons.math3.ode.AbstractIntegrator$1.compare(org.apache.commons.math3.ode.events.EventState,org.apache.commons.math3.ode.events.EventState) org.apache.commons.math3.ode.events.EventState.getEventTime()
org.apache.commons.math3.analysis.function.Cbrt.value(double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Cbrt.value(double) org.apache.commons.math3.util.FastMath.cbrt(double)
org.apache.commons.math3.analysis.function.Cbrt.value(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.random.BitsStreamGenerator.nextBytes(byte[]) org.apache.commons.math3.random.Well512a.next(int)
org.apache.commons.math3.random.BitsStreamGenerator.nextBytes(byte[]) org.apache.commons.math3.random.ISAACRandom.next(int)
org.apache.commons.math3.random.BitsStreamGenerator.nextBytes(byte[]) org.apache.commons.math3.random.Well1024a.next(int)
org.apache.commons.math3.random.BitsStreamGenerator.nextBytes(byte[]) org.apache.commons.math3.random.Well44497b.next(int)
org.apache.commons.math3.random.BitsStreamGenerator.nextBytes(byte[]) org.apache.commons.math3.random.Well19937c.next(int)
org.apache.commons.math3.random.BitsStreamGenerator.nextBytes(byte[]) org.apache.commons.math3.random.MersenneTwister.next(int)
org.apache.commons.math3.random.BitsStreamGenerator.nextBytes(byte[]) org.apache.commons.math3.random.Well44497a.next(int)
org.apache.commons.math3.random.BitsStreamGenerator.nextBytes(byte[]) org.apache.commons.math3.random.Well19937a.next(int)
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.buildNew(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.buildNew(org.apache.commons.math3.geometry.partitioning.BSPTree)
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.buildNew(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet(org.apache.commons.math3.geometry.partitioning.BSPTree)
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.buildNew(org.apache.commons.math3.geometry.partitioning.BSPTree) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Cbrt.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.cbrt()
org.apache.commons.math3.util.FastMath.pow(double,double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.util.FastMath.pow(double,double) java.lang.Object.clinit()
org.apache.commons.math3.util.FastMath.pow(double,double) org.apache.commons.math3.util.FastMath.pow(double,double)
org.apache.commons.math3.util.FastMath.pow(double,double) java.lang.Double.doubleToRawLongBits(double)
org.apache.commons.math3.util.FastMath.pow(double,double) java.lang.Double.clinit()
org.apache.commons.math3.util.FastMath.pow(double,double) org.apache.commons.math3.util.FastMath.log(double,double[])
org.apache.commons.math3.util.FastMath.pow(double,double) java.lang.Double.isInfinite(double)
org.apache.commons.math3.util.FastMath.pow(double,double) org.apache.commons.math3.util.FastMath.exp(double,double,double[])
org.apache.commons.math3.linear.RealVector$Entry(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVector$Entry.setIndex(int)
org.apache.commons.math3.linear.RealVector$Entry(org.apache.commons.math3.linear.RealVector) java.lang.Object()
org.apache.commons.math3.linear.OpenMapRealMatrix.getEntry(int,int) java.lang.Object.clinit()
org.apache.commons.math3.linear.OpenMapRealMatrix.getEntry(int,int) org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(org.apache.commons.math3.linear.AnyMatrix,int)
org.apache.commons.math3.linear.OpenMapRealMatrix.getEntry(int,int) org.apache.commons.math3.linear.MatrixUtils.clinit()
org.apache.commons.math3.linear.OpenMapRealMatrix.getEntry(int,int) org.apache.commons.math3.util.OpenIntToDoubleHashMap.get(int)
org.apache.commons.math3.linear.OpenMapRealMatrix.getEntry(int,int) org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(org.apache.commons.math3.linear.AnyMatrix,int)
org.apache.commons.math3.linear.OpenMapRealMatrix.getEntry(int,int) org.apache.commons.math3.linear.OpenMapRealMatrix.computeKey(int,int)
org.apache.commons.math3.util.ResizableDoubleArray.hashCode() java.lang.Object.clinit()
org.apache.commons.math3.util.ResizableDoubleArray.hashCode() java.lang.Double.valueOf(double)
org.apache.commons.math3.util.ResizableDoubleArray.hashCode() java.lang.Enum.hashCode()
org.apache.commons.math3.util.ResizableDoubleArray.hashCode() java.util.Arrays.hashCode(double[])
org.apache.commons.math3.util.ResizableDoubleArray.hashCode() java.util.Arrays.clinit()
org.apache.commons.math3.util.ResizableDoubleArray.hashCode() java.util.Arrays.hashCode(int[])
org.apache.commons.math3.util.ResizableDoubleArray.hashCode() java.lang.Double.clinit()
org.apache.commons.math3.util.ResizableDoubleArray.hashCode() java.lang.Double.hashCode()
org.apache.commons.math3.dfp.Dfp.hashCode() java.lang.Object.clinit()
org.apache.commons.math3.dfp.Dfp.hashCode() java.util.Arrays.hashCode(int[])
org.apache.commons.math3.dfp.Dfp.hashCode() java.util.Arrays.clinit()
org.apache.commons.math3.random.ISAACRandom.setSeed(long) org.apache.commons.math3.random.ISAACRandom.setSeed(int[])
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getPartialDerivative(int[]) org.apache.commons.math3.analysis.differentiation.DSCompiler.getPartialDerivativeIndex(int[])
org.apache.commons.math3.analysis.FunctionUtils$9.value(double) org.apache.commons.math3.analysis.function.Logistic.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9.value(double) org.apache.commons.math3.analysis.function.Sinh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9.value(double) org.apache.commons.math3.analysis.function.Acos.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9.value(double) org.apache.commons.math3.analysis.function.Cosh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9.value(double) org.apache.commons.math3.analysis.function.Sqrt.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9.value(double) org.apache.commons.math3.analysis.function.Expm1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9.value(double) org.apache.commons.math3.analysis.function.Power.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9.value(double) org.apache.commons.math3.analysis.function.Asin.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9.value(double) org.apache.commons.math3.analysis.function.Gaussian.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9.value(double) org.apache.commons.math3.analysis.function.Cbrt.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9.value(double) org.apache.commons.math3.analysis.function.Tan.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9.value(double) org.apache.commons.math3.analysis.function.HarmonicOscillator.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9.value(double) org.apache.commons.math3.analysis.FunctionUtils$6.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9.value(double) org.apache.commons.math3.analysis.function.Asinh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9.value(double) org.apache.commons.math3.analysis.function.Minus.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9.value(double) org.apache.commons.math3.analysis.function.Tanh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9.value(double) org.apache.commons.math3.analysis.FunctionUtils$9.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9.value(double) org.apache.commons.math3.analysis.function.Sinc.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9.value(double) org.apache.commons.math3.analysis.function.Log1p.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9.value(double) org.apache.commons.math3.analysis.function.Sin.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9.value(double) org.apache.commons.math3.analysis.function.Atanh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9.value(double) org.apache.commons.math3.analysis.function.Cos.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9.value(double) org.apache.commons.math3.analysis.function.Identity.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9.value(double) org.apache.commons.math3.analysis.FunctionUtils$3.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9.value(double) org.apache.commons.math3.analysis.function.Log.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9.value(double) org.apache.commons.math3.analysis.function.Exp.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9.value(double) org.apache.commons.math3.analysis.function.Sigmoid.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9.value(double) org.apache.commons.math3.analysis.function.Logit.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9.value(double) org.apache.commons.math3.analysis.function.Acosh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9.value(double) org.apache.commons.math3.analysis.function.Inverse.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9.value(double) org.apache.commons.math3.analysis.function.Log10.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9.value(double) org.apache.commons.math3.analysis.FunctionUtils$14.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9.value(double) org.apache.commons.math3.analysis.function.Atan.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9.value(double) org.apache.commons.math3.analysis.function.Constant.value(double)
org.apache.commons.math3.geometry.partitioning.BSPTree(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,java.lang.Object) java.lang.Object()
org.apache.commons.math3.dfp.Dfp.greaterThan(org.apache.commons.math3.dfp.Dfp) java.lang.Object.clinit()
org.apache.commons.math3.dfp.Dfp.greaterThan(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.Dfp.newInstance(org.apache.commons.math3.dfp.Dfp)
org.apache.commons.math3.dfp.Dfp.greaterThan(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.Dfp.dotrap(int,java.lang.String,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)
org.apache.commons.math3.dfp.Dfp.greaterThan(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.DfpField.getRadixDigits()
org.apache.commons.math3.dfp.Dfp.greaterThan(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.Dfp.compare(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)
org.apache.commons.math3.dfp.Dfp.greaterThan(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.DfpField.setIEEEFlagsBits(int)
org.apache.commons.math3.dfp.Dfp.greaterThan(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.Dfp.getZero()
org.apache.commons.math3.dfp.Dfp.greaterThan(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.Dfp.isNaN()
org.apache.commons.math3.dfp.Dfp.greaterThan(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.DfpDec.newInstance(org.apache.commons.math3.dfp.Dfp)
org.apache.commons.math3.geometry.euclidean.threed.Plane.copySelf() java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.threed.Plane.copySelf() org.apache.commons.math3.geometry.euclidean.threed.Plane(org.apache.commons.math3.geometry.euclidean.threed.Plane)
org.apache.commons.math3.geometry.euclidean.threed.Plane.copySelf() org.apache.commons.math3.geometry.euclidean.threed.Plane.copySelf()
org.apache.commons.math3.stat.descriptive.moment.SecondMoment.getN() org.apache.commons.math3.stat.descriptive.moment.FirstMoment.getN()
org.apache.commons.math3.fitting.GaussianCurveFitter$ParameterGuesser$1.compare(java.lang.Object,java.lang.Object) org.apache.commons.math3.fitting.GaussianCurveFitter$ParameterGuesser$1.compare(org.apache.commons.math3.fitting.WeightedObservedPoint,org.apache.commons.math3.fitting.WeightedObservedPoint)
org.apache.commons.math3.util.FastMath$ExpFracTable.access$200() java.lang.Object.clinit()
org.apache.commons.math3.util.FastMath$ExpFracTable.access$200() org.apache.commons.math3.util.FastMath$ExpFracTable.clinit()
org.apache.commons.math3.exception.MathIllegalArgumentException.getLocalizedMessage() org.apache.commons.math3.exception.util.ExceptionContext.getLocalizedMessage()
org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics.toString() org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.toString()
org.apache.commons.math3.analysis.function.Acosh.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.acosh()
org.apache.commons.math3.optimization.general.AbstractScalarDifferentiableOptimizer.computeObjectiveGradient(double[]) org.apache.commons.math3.analysis.differentiation.GradientFunction.value(double[])
org.apache.commons.math3.optimization.general.AbstractScalarDifferentiableOptimizer.computeObjectiveGradient(double[]) org.apache.commons.math3.fitting.AbstractCurveFitter$TheoreticalValuesFunction$1.value(double[])
org.apache.commons.math3.optimization.general.AbstractScalarDifferentiableOptimizer.computeObjectiveGradient(double[]) org.apache.commons.math3.analysis.FunctionUtils$19.value(double[])
org.apache.commons.math3.optimization.general.AbstractScalarDifferentiableOptimizer.computeObjectiveGradient(double[]) org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[])
org.apache.commons.math3.optimization.general.AbstractScalarDifferentiableOptimizer.computeObjectiveGradient(double[]) org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[])
org.apache.commons.math3.optimization.general.AbstractScalarDifferentiableOptimizer.computeObjectiveGradient(double[]) org.apache.commons.math3.analysis.FunctionUtils$16$2.value(double[])
org.apache.commons.math3.optimization.general.AbstractScalarDifferentiableOptimizer.computeObjectiveGradient(double[]) org.apache.commons.math3.analysis.FunctionUtils$18.value(double[])
org.apache.commons.math3.optimization.general.AbstractScalarDifferentiableOptimizer.computeObjectiveGradient(double[]) org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[])
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.polynomialDerivative() java.lang.Object.clinit()
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.polynomialDerivative() org.apache.commons.math3.analysis.polynomials.PolynomialFunction(double[])
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.polynomialDerivative() org.apache.commons.math3.analysis.polynomials.PolynomialFunction.differentiate(double[])
org.apache.commons.math3.geometry.partitioning.AbstractRegion$2.visitOrder(org.apache.commons.math3.geometry.partitioning.BSPTree) java.lang.Object.clinit()
org.apache.commons.math3.geometry.partitioning.AbstractRegion$2.visitOrder(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.clinit()
org.apache.commons.math3.optim.PointVectorValuePair.getValueRef() org.apache.commons.math3.util.Pair.getValue()
org.apache.commons.math3.stat.descriptive.rank.Max.increment(double) java.lang.Object.clinit()
org.apache.commons.math3.stat.descriptive.rank.Max.increment(double) java.lang.Double.isNaN(double)
org.apache.commons.math3.stat.descriptive.rank.Max.increment(double) java.lang.Double.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.compileDerivativesIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler) java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.compileDerivativesIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler) java.lang.System.arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org.apache.commons.math3.analysis.differentiation.DSCompiler.compileDerivativesIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler) java.lang.System.clinit()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.atan() java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.atan() org.apache.commons.math3.analysis.differentiation.DSCompiler.atan(double[],int,double[],int)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.atan() org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DSCompiler)
org.apache.commons.math3.analysis.FunctionUtils$5.value(double) org.apache.commons.math3.analysis.function.Logistic.value(double)
org.apache.commons.math3.analysis.FunctionUtils$5.value(double) org.apache.commons.math3.analysis.function.Sinh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$5.value(double) org.apache.commons.math3.analysis.function.Acos.value(double)
org.apache.commons.math3.analysis.FunctionUtils$5.value(double) org.apache.commons.math3.analysis.function.Cosh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$5.value(double) org.apache.commons.math3.analysis.function.Sqrt.value(double)
org.apache.commons.math3.analysis.FunctionUtils$5.value(double) org.apache.commons.math3.analysis.function.Expm1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$5.value(double) org.apache.commons.math3.analysis.function.Power.value(double)
org.apache.commons.math3.analysis.FunctionUtils$5.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$5.value(double) org.apache.commons.math3.analysis.function.Asin.value(double)
org.apache.commons.math3.analysis.FunctionUtils$5.value(double) org.apache.commons.math3.analysis.function.Gaussian.value(double)
org.apache.commons.math3.analysis.FunctionUtils$5.value(double) org.apache.commons.math3.analysis.function.Cbrt.value(double)
org.apache.commons.math3.analysis.FunctionUtils$5.value(double) org.apache.commons.math3.analysis.function.Tan.value(double)
org.apache.commons.math3.analysis.FunctionUtils$5.value(double) org.apache.commons.math3.analysis.function.HarmonicOscillator.value(double)
org.apache.commons.math3.analysis.FunctionUtils$5.value(double) org.apache.commons.math3.analysis.function.Asinh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$5.value(double) org.apache.commons.math3.analysis.function.Minus.value(double)
org.apache.commons.math3.analysis.FunctionUtils$5.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$5.value(double) org.apache.commons.math3.analysis.function.Tanh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$5.value(double) org.apache.commons.math3.analysis.function.Sinc.value(double)
org.apache.commons.math3.analysis.FunctionUtils$5.value(double) org.apache.commons.math3.analysis.function.Log1p.value(double)
org.apache.commons.math3.analysis.FunctionUtils$5.value(double) org.apache.commons.math3.analysis.function.Sin.value(double)
org.apache.commons.math3.analysis.FunctionUtils$5.value(double) org.apache.commons.math3.analysis.function.Atanh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$5.value(double) org.apache.commons.math3.analysis.function.Cos.value(double)
org.apache.commons.math3.analysis.FunctionUtils$5.value(double) org.apache.commons.math3.analysis.function.Identity.value(double)
org.apache.commons.math3.analysis.FunctionUtils$5.value(double) org.apache.commons.math3.analysis.function.Log.value(double)
org.apache.commons.math3.analysis.FunctionUtils$5.value(double) org.apache.commons.math3.analysis.function.Exp.value(double)
org.apache.commons.math3.analysis.FunctionUtils$5.value(double) org.apache.commons.math3.analysis.function.Sigmoid.value(double)
org.apache.commons.math3.analysis.FunctionUtils$5.value(double) org.apache.commons.math3.analysis.function.Logit.value(double)
org.apache.commons.math3.analysis.FunctionUtils$5.value(double) org.apache.commons.math3.analysis.function.Acosh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$5.value(double) org.apache.commons.math3.analysis.function.Inverse.value(double)
org.apache.commons.math3.analysis.FunctionUtils$5.value(double) org.apache.commons.math3.analysis.FunctionUtils$2.value(double)
org.apache.commons.math3.analysis.FunctionUtils$5.value(double) org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$5.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.value(double)
org.apache.commons.math3.analysis.FunctionUtils$5.value(double) org.apache.commons.math3.analysis.FunctionUtils$5.value(double)
org.apache.commons.math3.analysis.FunctionUtils$5.value(double) org.apache.commons.math3.analysis.function.Log10.value(double)
org.apache.commons.math3.analysis.FunctionUtils$5.value(double) org.apache.commons.math3.analysis.FunctionUtils$15.value(double)
org.apache.commons.math3.analysis.FunctionUtils$5.value(double) org.apache.commons.math3.analysis.FunctionUtils$8.value(double)
org.apache.commons.math3.analysis.FunctionUtils$5.value(double) org.apache.commons.math3.analysis.function.Atan.value(double)
org.apache.commons.math3.analysis.FunctionUtils$5.value(double) org.apache.commons.math3.analysis.function.Constant.value(double)
org.apache.commons.math3.util.BigReal.compareTo(org.apache.commons.math3.util.BigReal) java.math.BigDecimal.compareTo(java.math.BigDecimal)
org.apache.commons.math3.analysis.FunctionUtils$19.value(double[]) org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[])
org.apache.commons.math3.analysis.FunctionUtils$19.value(double[]) org.apache.commons.math3.analysis.FunctionUtils$18.value(double[])
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getStandardDeviation() org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getStandardDeviation()
org.apache.commons.math3.geometry.partitioning.RegionFactory$NodesCleaner(org.apache.commons.math3.geometry.partitioning.RegionFactory,org.apache.commons.math3.geometry.partitioning.RegionFactory$1) org.apache.commons.math3.geometry.partitioning.RegionFactory$NodesCleaner(org.apache.commons.math3.geometry.partitioning.RegionFactory)
org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator.computeInterpolatedStateAndDerivatives(double,double) java.lang.Object.clinit()
org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator.computeInterpolatedStateAndDerivatives(double,double) java.lang.System.arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator.computeInterpolatedStateAndDerivatives(double,double) java.lang.System.clinit()
org.apache.commons.math3.linear.ArrayRealVector.checkVectorDimensions(int) java.lang.Object.clinit()
org.apache.commons.math3.linear.ArrayRealVector.checkVectorDimensions(int) org.apache.commons.math3.exception.DimensionMismatchException(int,int)
org.apache.commons.math3.linear.ArrayRealVector.checkVectorDimensions(int) java.lang.Throwable.clinit()
org.apache.commons.math3.linear.ArrayRealVector.checkVectorDimensions(int) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.clone() org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix(java.lang.Object)
org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.clone() java.lang.reflect.Array.newInstance(java.lang.Class,int[])
org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.clone() java.lang.Object.clinit()
org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.clone() org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.clone(org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix)
org.apache.commons.math3.analysis.function.Ceil.value(double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Ceil.value(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.function.Ceil.value(double) org.apache.commons.math3.util.FastMath.ceil(double)
org.apache.commons.math3.linear.RealVector$2$1.hasNext() javax.print.MimeType$ParameterMapEntrySetIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() java.util.concurrent.ArrayBlockingQueue$Itr.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() org.apache.commons.math3.linear.RealVector$SparseEntryIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() com.sun.imageio.plugins.jpeg.ImageTypeIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() java.util.Collections$CheckedList$1.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() java.util.SubList$1.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() sun.net.www.HeaderParser$ParserIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() java.lang.ProcessEnvironment$StringKeySet$1.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() sun.awt.util.IdentityLinkedList$DescendingIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() java.util.Collections$UnmodifiableCollection$1.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() sun.misc.SoftCache$EntrySet$1.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() javax.imageio.ImageIO$ImageWriterIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() java.util.TreeMap$PrivateEntryIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() javax.imageio.ImageIO$ImageReaderIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() java.util.RegularEnumSet$EnumSetIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() java.util.LinkedList$ListItr.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() sun.security.jca.ProviderList$ServiceList$1.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() java.util.ArrayList$SubList$1.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() java.util.Scanner.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() sun.nio.fs.UnixFileSystem$FileStoreIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() java.util.concurrent.CopyOnWriteArrayList$COWIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() java.util.PriorityQueue$Itr.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() java.util.concurrent.DelayQueue$Itr.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() java.util.Collections$1.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() java.util.concurrent.ConcurrentHashMap$HashIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() java.util.EnumMap$EnumMapIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() java.util.LinkedList$DescendingIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() java.util.IdentityHashMap$IdentityHashMapIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() java.lang.ProcessEnvironment$StringEntrySet$1.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() java.util.Hashtable$Enumerator.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() java.util.JumboEnumSet$EnumSetIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() sun.util.PreHashedMap$2$1.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() sun.nio.cs.FastCharsetProvider$1.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() java.util.Collections$EmptyIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() java.util.ServiceLoader$1.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() java.util.ServiceLoader$LazyIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() java.util.WeakHashMap$HashIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() java.util.Vector$Itr.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() javax.imageio.spi.FilterIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() java.util.Collections$CheckedCollection$1.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() org.apache.commons.math3.util.CombinatoricsUtils$LexicographicCombinationIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() java.util.AbstractMap$2$1.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() java.lang.ProcessEnvironment$StringValues$1.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() sun.nio.fs.AbstractPath$1.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() java.util.AbstractMap$1$1.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() org.apache.commons.math3.linear.RealVector$2$2.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() java.util.concurrent.LinkedBlockingQueue$Itr.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() sun.misc.Service$LazyIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() sun.net.www.MessageHeader$HeaderIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() java.util.concurrent.ConcurrentLinkedQueue$Itr.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() java.util.ArrayDeque$DescendingIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() org.apache.commons.math3.util.CombinatoricsUtils$SingletonIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() java.util.concurrent.LinkedBlockingDeque$AbstractItr.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() org.apache.commons.math3.linear.RealVector$1.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() java.util.ArrayDeque$DeqIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() java.util.LinkedHashMap$LinkedHashIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() java.util.Collections$CheckedMap$CheckedEntrySet$1.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() org.apache.commons.math3.util.MultidimensionalCounter$Iterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() javax.security.auth.Subject$SecureSet$1.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() sun.awt.util.IdentityLinkedList$ListItr.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() javax.imageio.spi.PartialOrderIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() java.util.TreeMap$NavigableSubMap$SubMapIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() java.util.Collections$UnmodifiableList$1.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() java.util.ArrayList$Itr.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() sun.util.PreHashedMap$1$1.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() java.nio.charset.Charset$1.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() javax.imageio.ImageIO$ImageTranscoderIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() java.util.HashMap$HashIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() java.util.AbstractList$Itr.hasNext()
org.apache.commons.math3.linear.RealVector$2$1.hasNext() org.apache.commons.math3.linear.RealVector$2$1.hasNext()
org.apache.commons.math3.random.MersenneTwister.clinit() java.lang.Object.clinit()
org.apache.commons.math3.random.MersenneTwister.clinit() org.apache.commons.math3.random.MersenneTwister.clinit()
org.apache.commons.math3.geometry.partitioning.RegionFactory$UnionMerger(org.apache.commons.math3.geometry.partitioning.RegionFactory) java.lang.Object()
org.apache.commons.math3.analysis.function.Minus.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.negate()
org.apache.commons.math3.stat.Frequency.toString() sun.util.PreHashedMap$1$1.next()
org.apache.commons.math3.stat.Frequency.toString() org.apache.commons.math3.stat.Frequency.getCount(java.lang.Comparable)
org.apache.commons.math3.stat.Frequency.toString() java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator.next()
org.apache.commons.math3.stat.Frequency.toString() javax.security.auth.Subject$SecureSet$1.next()
org.apache.commons.math3.stat.Frequency.toString() sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator.next()
org.apache.commons.math3.stat.Frequency.toString() org.apache.commons.math3.linear.RealVector$SparseEntryIterator.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.util.concurrent.CopyOnWriteArrayList$COWIterator.next()
org.apache.commons.math3.stat.Frequency.toString() sun.net.www.MessageHeader$HeaderIterator.next()
org.apache.commons.math3.stat.Frequency.toString() sun.util.PreHashedMap$2$1.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator.next()
org.apache.commons.math3.stat.Frequency.toString() java.lang.StringBuilder.append(long)
org.apache.commons.math3.stat.Frequency.toString() java.util.Hashtable$EntrySet.iterator()
org.apache.commons.math3.stat.Frequency.toString() org.apache.commons.math3.util.MultidimensionalCounter$Iterator.next()
org.apache.commons.math3.stat.Frequency.toString() sun.net.www.HeaderParser$ParserIterator.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.util.concurrent.ArrayBlockingQueue$Itr.next()
org.apache.commons.math3.stat.Frequency.toString() javax.print.MimeType$ParameterMapEntrySet.iterator()
org.apache.commons.math3.stat.Frequency.toString() javax.imageio.ImageIO$ImageWriterIterator.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.util.JumboEnumSet$EnumSetIterator.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.LinkedList$ListItr.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.util.ServiceLoader$LazyIterator.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.Hashtable$KeySet.iterator()
org.apache.commons.math3.stat.Frequency.toString() sun.nio.fs.UnixFileSystem$FileStoreIterator.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.util.concurrent.DelayQueue$Itr.hasNext()
org.apache.commons.math3.stat.Frequency.toString() javax.imageio.spi.PartialOrderIterator.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.TreeMap$NavigableSubMap$SubMapKeyIterator.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.concurrent.ConcurrentHashMap$ValueIterator.next()
org.apache.commons.math3.stat.Frequency.toString() sun.util.PreHashedMap$2.iterator()
org.apache.commons.math3.stat.Frequency.toString() java.util.LinkedList$DescendingIterator.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.util.EnumMap$EntrySet.iterator()
org.apache.commons.math3.stat.Frequency.toString() java.util.JumboEnumSet$EnumSetIterator.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator()
org.apache.commons.math3.stat.Frequency.toString() java.util.concurrent.ConcurrentHashMap$KeyIterator.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.concurrent.DelayQueue$Itr.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.LinkedList$DescendingIterator.next()
org.apache.commons.math3.stat.Frequency.toString() sun.util.PreHashedMap$1.iterator()
org.apache.commons.math3.stat.Frequency.toString() java.util.JumboEnumSet.iterator()
org.apache.commons.math3.stat.Frequency.toString() sun.util.PreHashedMap$2$1.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.util.TreeMap.keySet()
org.apache.commons.math3.stat.Frequency.toString() org.apache.commons.math3.stat.Frequency.getPct(java.lang.Comparable)
org.apache.commons.math3.stat.Frequency.toString() java.util.RegularEnumSet.iterator()
org.apache.commons.math3.stat.Frequency.toString() java.util.WeakHashMap$HashIterator.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.util.LinkedHashMap$EntryIterator.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.IdentityHashMap$KeyIterator.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.IdentityHashMap$ValueIterator.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.AbstractMap$1$1.hasNext()
org.apache.commons.math3.stat.Frequency.toString() org.apache.commons.math3.linear.RealVector$2$2.hasNext()
org.apache.commons.math3.stat.Frequency.toString() com.sun.imageio.plugins.jpeg.ImageTypeIterator.next()
org.apache.commons.math3.stat.Frequency.toString() javax.imageio.spi.FilterIterator.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.ArrayDeque$DescendingIterator.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.util.EnumMap$KeySet.iterator()
org.apache.commons.math3.stat.Frequency.toString() java.util.Hashtable$Enumerator.next()
org.apache.commons.math3.stat.Frequency.toString() org.apache.commons.math3.linear.RealVector$1.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.util.HashMap$EntryIterator.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.Collections$CheckedMap$CheckedEntrySet$1.hasNext()
org.apache.commons.math3.stat.Frequency.toString() org.apache.commons.math3.util.MultidimensionalCounter$Iterator.hasNext()
org.apache.commons.math3.stat.Frequency.toString() javax.security.auth.Subject$SecureSet$1.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.lang.ProcessEnvironment$StringKeySet.iterator()
org.apache.commons.math3.stat.Frequency.toString() java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator.hasNext()
org.apache.commons.math3.stat.Frequency.toString() org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.util.Collections$UnmodifiableList$1.next()
org.apache.commons.math3.stat.Frequency.toString() sun.nio.cs.FastCharsetProvider$1.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.concurrent.ArrayBlockingQueue$Itr.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.util.Collections$CheckedList$1.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.util.Vector$Itr.next()
org.apache.commons.math3.stat.Frequency.toString() java.lang.StringBuilder.append(java.lang.Object)
org.apache.commons.math3.stat.Frequency.toString() java.util.ArrayList$SubList$1.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.Collections$UnmodifiableCollection.iterator()
org.apache.commons.math3.stat.Frequency.toString() java.util.Collections$EmptySet.iterator()
org.apache.commons.math3.stat.Frequency.toString() java.util.HashMap$ValueIterator.next()
org.apache.commons.math3.stat.Frequency.toString() sun.misc.SoftCache$EntrySet$1.hasNext()
org.apache.commons.math3.stat.Frequency.toString() org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.ArrayList$SubList$1.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.util.concurrent.CopyOnWriteArrayList$COWIterator.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.lang.StringBuilder.toString()
org.apache.commons.math3.stat.Frequency.toString() java.util.concurrent.ConcurrentHashMap$HashIterator.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.IdentityHashMap$IdentityHashMapIterator.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.lang.ProcessEnvironment$StringEntrySet$1.hasNext()
org.apache.commons.math3.stat.Frequency.toString() javax.security.auth.Subject$SecureSet.iterator()
org.apache.commons.math3.stat.Frequency.toString() sun.nio.ch.Util$2.iterator()
org.apache.commons.math3.stat.Frequency.toString() sun.net.www.HeaderParser$ParserIterator.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.concurrent.LinkedBlockingDeque$AbstractItr.next()
org.apache.commons.math3.stat.Frequency.toString() sun.misc.SoftCache$EntrySet.iterator()
org.apache.commons.math3.stat.Frequency.toString() sun.nio.cs.FastCharsetProvider$1.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.util.EnumMap$KeyIterator.next()
org.apache.commons.math3.stat.Frequency.toString() sun.nio.fs.AbstractPath$1.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.LinkedList$ListItr.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.Collections$EmptyIterator.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.util.Scanner.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.Collections$CheckedCollection$1.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.text.NumberFormat.clinit()
org.apache.commons.math3.stat.Frequency.toString() javax.imageio.spi.FilterIterator.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.util.ArrayDeque$DescendingIterator.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.concurrent.ConcurrentHashMap$EntryIterator.next()
org.apache.commons.math3.stat.Frequency.toString() org.apache.commons.math3.util.CombinatoricsUtils$SingletonIterator.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.LinkedHashMap$KeyIterator.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.concurrent.LinkedBlockingQueue$Itr.hasNext()
org.apache.commons.math3.stat.Frequency.toString() org.apache.commons.math3.linear.RealVector$2$2.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.Collections$CheckedList$1.next()
org.apache.commons.math3.stat.Frequency.toString() javax.imageio.ImageIO$ImageWriterIterator.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.Collections$1.next()
org.apache.commons.math3.stat.Frequency.toString() org.apache.commons.math3.util.CombinatoricsUtils$LexicographicCombinationIterator.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.concurrent.LinkedBlockingDeque$AbstractItr.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.util.concurrent.ConcurrentLinkedQueue$Itr.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.ArrayDeque$DeqIterator.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.util.LinkedHashMap$LinkedHashIterator.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.util.concurrent.LinkedBlockingQueue$Itr.next()
org.apache.commons.math3.stat.Frequency.toString() java.lang.ProcessEnvironment$StringEntrySet$1.next()
org.apache.commons.math3.stat.Frequency.toString() sun.util.PreHashedMap$1$1.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.util.TreeMap$DescendingSubMap$DescendingEntrySetView.iterator()
org.apache.commons.math3.stat.Frequency.toString() java.util.AbstractMap$1.iterator()
org.apache.commons.math3.stat.Frequency.toString() java.util.WeakHashMap$EntryIterator.next()
org.apache.commons.math3.stat.Frequency.toString() java.lang.ProcessEnvironment$StringValues$1.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.HashMap$EntrySet.iterator()
org.apache.commons.math3.stat.Frequency.toString() javax.print.MimeType$ParameterMapEntrySetIterator.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.util.AbstractMap$1$1.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.IdentityHashMap$KeySet.iterator()
org.apache.commons.math3.stat.Frequency.toString() sun.awt.util.IdentityLinkedList$DescendingIterator.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.lang.ProcessEnvironment$StringKeySet$1.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.TreeMap$DescendingKeyIterator.next()
org.apache.commons.math3.stat.Frequency.toString() javax.imageio.ImageIO$ImageReaderIterator.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.concurrent.ConcurrentHashMap$EntrySet.iterator()
org.apache.commons.math3.stat.Frequency.toString() javax.imageio.ImageIO$ImageReaderIterator.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.util.TreeMap$PrivateEntryIterator.hasNext()
org.apache.commons.math3.stat.Frequency.toString() sun.misc.Service$LazyIterator.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.Scanner.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.util.WeakHashMap$ValueIterator.next()
org.apache.commons.math3.stat.Frequency.toString() org.apache.commons.math3.linear.RealVector$SparseEntryIterator.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.IdentityHashMap$EntryIterator.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.concurrent.ConcurrentHashMap$KeySet.iterator()
org.apache.commons.math3.stat.Frequency.toString() java.util.Collections$CheckedCollection.iterator()
org.apache.commons.math3.stat.Frequency.toString() java.util.HashSet.iterator()
org.apache.commons.math3.stat.Frequency.toString() java.util.PriorityQueue$Itr.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.Hashtable$Enumerator.hasNext()
org.apache.commons.math3.stat.Frequency.toString() org.apache.commons.math3.stat.Frequency.getCumPct(java.lang.Comparable)
org.apache.commons.math3.stat.Frequency.toString() java.util.RegularEnumSet$EnumSetIterator.next()
org.apache.commons.math3.stat.Frequency.toString() javax.print.MimeType$ParameterMapEntrySetIterator.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.WeakHashMap$KeyIterator.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.Collections$CheckedMap$CheckedEntrySet$1.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.SubList$1.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.Collections$SynchronizedCollection.iterator()
org.apache.commons.math3.stat.Frequency.toString() java.util.Collections$EmptyIterator.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.LinkedHashMap$ValueIterator.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.ServiceLoader$1.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.util.TreeMap$NavigableSubMap$SubMapEntryIterator.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.TreeMap$ValueIterator.next()
org.apache.commons.math3.stat.Frequency.toString() org.apache.commons.math3.util.CombinatoricsUtils$LexicographicCombinationIterator.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.util.AbstractMap$2$1.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.util.EnumMap$ValueIterator.next()
org.apache.commons.math3.stat.Frequency.toString() java.lang.StringBuilder()
org.apache.commons.math3.stat.Frequency.toString() sun.nio.fs.AbstractPath$1.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.lang.ProcessEnvironment$StringValues$1.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.util.Collections$CheckedMap$CheckedEntrySet.iterator()
org.apache.commons.math3.stat.Frequency.toString() java.util.Collections$SetFromMap.iterator()
org.apache.commons.math3.stat.Frequency.toString() java.util.WeakHashMap$KeySet.iterator()
org.apache.commons.math3.stat.Frequency.toString() java.util.TreeMap$EntryIterator.next()
org.apache.commons.math3.stat.Frequency.toString() org.apache.commons.math3.linear.RealVector$1.next()
org.apache.commons.math3.stat.Frequency.toString() org.apache.commons.math3.util.CombinatoricsUtils$SingletonIterator.hasNext()
org.apache.commons.math3.stat.Frequency.toString() javax.imageio.spi.PartiallyOrderedSet.iterator()
org.apache.commons.math3.stat.Frequency.toString() sun.awt.util.IdentityLinkedList$ListItr.next()
org.apache.commons.math3.stat.Frequency.toString() javax.security.auth.Subject$ClassSet.iterator()
org.apache.commons.math3.stat.Frequency.toString() java.util.EnumMap$EntryIterator.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.Collections$UnmodifiableList$1.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.text.NumberFormat.getPercentInstance()
org.apache.commons.math3.stat.Frequency.toString() org.apache.commons.math3.linear.RealVector$2$1.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.IdentityHashMap$EntrySet.iterator()
org.apache.commons.math3.stat.Frequency.toString() java.util.ArrayList$Itr.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.nio.charset.Charset$1.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.text.NumberFormat.format(double)
org.apache.commons.math3.stat.Frequency.toString() java.util.Collections$UnmodifiableCollection$1.next()
org.apache.commons.math3.stat.Frequency.toString() com.sun.imageio.plugins.jpeg.ImageTypeIterator.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.util.TreeMap$KeyIterator.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.SubList$1.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.lang.StringBuilder.append(char)
org.apache.commons.math3.stat.Frequency.toString() java.lang.ProcessEnvironment$StringKeySet$1.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.util.Collections$UnmodifiableCollection$1.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.util.RegularEnumSet$EnumSetIterator.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.util.TreeSet.iterator()
org.apache.commons.math3.stat.Frequency.toString() java.util.HashMap$KeyIterator.next()
org.apache.commons.math3.stat.Frequency.toString() sun.misc.SoftCache$EntrySet$1.next()
org.apache.commons.math3.stat.Frequency.toString() sun.security.jca.ProviderList$ServiceList$1.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.PriorityQueue$Itr.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.util.Collections$1.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.util.ArrayList$Itr.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.EnumMap$EnumMapIterator.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.util.AbstractMap$2$1.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.ServiceLoader$1.next()
org.apache.commons.math3.stat.Frequency.toString() java.lang.ProcessEnvironment$StringEntrySet.iterator()
org.apache.commons.math3.stat.Frequency.toString() javax.imageio.ImageIO$ImageTranscoderIterator.next()
org.apache.commons.math3.stat.Frequency.toString() java.lang.StringBuilder.append(java.lang.String)
org.apache.commons.math3.stat.Frequency.toString() sun.security.jca.ProviderList$ServiceList$1.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.ServiceLoader$LazyIterator.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.util.Vector$Itr.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.util.ArrayDeque$DeqIterator.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.Collections$SingletonSet.iterator()
org.apache.commons.math3.stat.Frequency.toString() java.lang.Object.clinit()
org.apache.commons.math3.stat.Frequency.toString() java.util.TreeMap$AscendingSubMap$AscendingEntrySetView.iterator()
org.apache.commons.math3.stat.Frequency.toString() java.util.Collections$CheckedCollection$1.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.AbstractList$Itr.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.util.TreeMap$KeySet.iterator()
org.apache.commons.math3.stat.Frequency.toString() sun.misc.Service$LazyIterator.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.util.TreeMap$EntrySet.iterator()
org.apache.commons.math3.stat.Frequency.toString() java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next()
org.apache.commons.math3.stat.Frequency.toString() java.nio.charset.Charset$1.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.concurrent.ConcurrentLinkedQueue$Itr.hasNext()
org.apache.commons.math3.stat.Frequency.toString() sun.net.www.MessageHeader$HeaderIterator.hasNext()
org.apache.commons.math3.stat.Frequency.toString() sun.nio.fs.UnixFileSystem$FileStoreIterator.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.HashMap$KeySet.iterator()
org.apache.commons.math3.stat.Frequency.toString() sun.awt.util.IdentityLinkedList$DescendingIterator.next()
org.apache.commons.math3.stat.Frequency.toString() java.util.WeakHashMap$EntrySet.iterator()
org.apache.commons.math3.stat.Frequency.toString() sun.awt.util.IdentityLinkedList$ListItr.hasNext()
org.apache.commons.math3.stat.Frequency.toString() javax.imageio.spi.PartialOrderIterator.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.util.TreeMap$NavigableSubMap$SubMapIterator.hasNext()
org.apache.commons.math3.stat.Frequency.toString() sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator.hasNext()
org.apache.commons.math3.stat.Frequency.toString() javax.imageio.ImageIO$ImageTranscoderIterator.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.util.AbstractList$Itr.hasNext()
org.apache.commons.math3.stat.Frequency.toString() java.util.HashMap$HashIterator.hasNext()
org.apache.commons.math3.stat.Frequency.toString() org.apache.commons.math3.linear.RealVector$2$1.hasNext()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(int,int,int,double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(int,int,int,double) org.apache.commons.math3.exception.NumberIsTooLargeException(java.lang.Number,java.lang.Number,boolean)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(int,int,int,double) org.apache.commons.math3.analysis.differentiation.DSCompiler.getSize()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(int,int,int,double) java.lang.Throwable.clinit()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(int,int,int,double) java.lang.Integer.clinit()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(int,int,int,double) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(int,int,int,double) org.apache.commons.math3.analysis.differentiation.DSCompiler.getCompiler(int,int)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(int,int,int,double) org.apache.commons.math3.analysis.differentiation.DerivativeStructure(int,int,double)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(int,int,int,double) java.lang.Integer.valueOf(int)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(int,int,int,double) org.apache.commons.math3.analysis.differentiation.DSCompiler.clinit()
org.apache.commons.math3.stat.Frequency.getCount(java.lang.Comparable) java.lang.Long.longValue()
org.apache.commons.math3.stat.Frequency.getCount(java.lang.Comparable) org.apache.commons.math3.stat.Frequency.getCount(long)
org.apache.commons.math3.stat.Frequency.getCount(java.lang.Comparable) java.lang.Integer.longValue()
org.apache.commons.math3.stat.Frequency.getCount(java.lang.Comparable) java.util.TreeMap.get(java.lang.Object)
org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.equals(java.lang.Object) java.lang.Object.clinit()
org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.equals(java.lang.Object) org.apache.commons.math3.util.Precision.equalsIncludingNaN(float,float)
org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.getSum()
org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.getMax()
org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.getVariance()
org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.getN()
org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.equals(java.lang.Object) org.apache.commons.math3.util.Precision.clinit()
org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.equals(java.lang.Object) org.apache.commons.math3.util.Precision.equalsIncludingNaN(double,double)
org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.getMin()
org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.getMean()
org.apache.commons.math3.optimization.fitting.GaussianFitter$ParameterGuesser$1.compare(java.lang.Object,java.lang.Object) org.apache.commons.math3.optimization.fitting.GaussianFitter$ParameterGuesser$1.compare(org.apache.commons.math3.optimization.fitting.WeightedObservedPoint,org.apache.commons.math3.optimization.fitting.WeightedObservedPoint)
org.apache.commons.math3.fitting.GaussianFitter$ParameterGuesser$1.compare(org.apache.commons.math3.fitting.WeightedObservedPoint,org.apache.commons.math3.fitting.WeightedObservedPoint) org.apache.commons.math3.fitting.WeightedObservedPoint.getX()
org.apache.commons.math3.fitting.GaussianFitter$ParameterGuesser$1.compare(org.apache.commons.math3.fitting.WeightedObservedPoint,org.apache.commons.math3.fitting.WeightedObservedPoint) org.apache.commons.math3.fitting.WeightedObservedPoint.getY()
org.apache.commons.math3.fitting.GaussianFitter$ParameterGuesser$1.compare(org.apache.commons.math3.fitting.WeightedObservedPoint,org.apache.commons.math3.fitting.WeightedObservedPoint) org.apache.commons.math3.fitting.WeightedObservedPoint.getWeight()
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$FacetsContributionVisitor.visitOrder(org.apache.commons.math3.geometry.partitioning.BSPTree) java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$FacetsContributionVisitor.visitOrder(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.clinit()
org.apache.commons.math3.linear.AbstractFieldMatrix.checkRowIndex(int) org.apache.commons.math3.exception.OutOfRangeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number)
org.apache.commons.math3.linear.AbstractFieldMatrix.checkRowIndex(int) java.lang.Object.clinit()
org.apache.commons.math3.linear.AbstractFieldMatrix.checkRowIndex(int) org.apache.commons.math3.linear.SparseFieldMatrix.getRowDimension()
org.apache.commons.math3.linear.AbstractFieldMatrix.checkRowIndex(int) java.lang.Throwable.clinit()
org.apache.commons.math3.linear.AbstractFieldMatrix.checkRowIndex(int) java.lang.Integer.clinit()
org.apache.commons.math3.linear.AbstractFieldMatrix.checkRowIndex(int) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.linear.AbstractFieldMatrix.checkRowIndex(int) org.apache.commons.math3.linear.Array2DRowFieldMatrix.getRowDimension()
org.apache.commons.math3.linear.AbstractFieldMatrix.checkRowIndex(int) org.apache.commons.math3.linear.BlockFieldMatrix.getRowDimension()
org.apache.commons.math3.linear.AbstractFieldMatrix.checkRowIndex(int) org.apache.commons.math3.exception.util.LocalizedFormats.clinit()
org.apache.commons.math3.linear.AbstractFieldMatrix.checkRowIndex(int) java.lang.Integer.valueOf(int)
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() sun.text.CompactByteArray.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.awt.geom.AffineTransform.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() sun.security.krb5.internal.KerberosTime.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.util.Hashtable.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() sun.security.krb5.internal.Ticket.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() sun.text.IntHashtable.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() sun.security.util.BitArray.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() com.sun.imageio.plugins.jpeg.DHTMarkerSegment$Htable.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.util.SimpleTimeZone.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.util.IdentityHashMap.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.util.JapaneseImperialCalendar.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() sun.security.krb5.internal.ETypeInfo.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() sun.text.normalizer.NormalizerBase.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.util.Locale.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() sun.security.krb5.internal.TicketFlags.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() sun.java2d.SunGraphics2D.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() sun.security.provider.MD4.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() javax.swing.tree.DefaultTreeSelectionModel.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.awt.print.Paper.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.text.MessageFormat.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.lang.Object.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() javax.swing.text.SimpleAttributeSet.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() javax.swing.ArrayTable.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.text.SimpleDateFormat.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() sun.java2d.loops.FontInfo.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() sun.security.krb5.PrincipalName.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.awt.PageAttributes.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() com.sun.imageio.plugins.png.PNGMetadata.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.util.GregorianCalendar.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() com.sun.imageio.plugins.jpeg.SOFMarkerSegment.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.util.Vector.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() javax.swing.text.ElementIterator.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.net.HttpCookie.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.awt.datatransfer.MimeType.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.awt.RenderingHints.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.text.DateFormatSymbols.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.util.HashSet.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() sun.util.calendar.ImmutableGregorianDate.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() javax.sound.midi.MetaMessage.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() sun.font.FontLineMetrics.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() sun.font.StandardGlyphVector.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.text.AttributedString$AttributedStringIterator.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.text.RuleBasedBreakIterator.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() javax.swing.text.Segment.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.awt.ImageCapabilities.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() sun.security.krb5.internal.LastReqEntry.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() javax.swing.text.StyleContext$SmallAttributeSet.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.text.RuleBasedCollator.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.text.RuleBasedBreakIterator$SafeCharIterator.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() javax.swing.text.ElementIterator$StackItem.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$ICCMarkerSegment.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.awt.geom.Line2D.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() org.apache.commons.math3.util.FastMathLiteralArrays.clinit()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.util.ResourceBundle$CacheKey.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumbJPEG.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() sun.security.krb5.internal.ETypeInfo2.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.awt.font.TextMeasurer.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.util.LinkedList.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() sun.font.AttributeValues.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() javax.swing.text.StyledEditorKit$1.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.util.ArrayDeque.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() javax.swing.text.GlyphView.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.awt.datatransfer.DataFlavor.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() sun.security.krb5.internal.PAData.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() javax.swing.AbstractAction.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() sun.text.normalizer.ReplaceableUCharacterIterator.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.util.concurrent.CopyOnWriteArrayList.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumb.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.awt.geom.Point2D.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() javax.swing.text.html.OptionListModel.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() sun.security.krb5.internal.AuthorizationDataEntry.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() javax.swing.text.EditorKit.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() javax.swing.text.StyledEditorKit.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() com.sun.imageio.plugins.jpeg.DQTMarkerSegment.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.util.JumboEnumSet.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() sun.security.krb5.internal.HostAddresses.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() javax.crypto.Mac.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() javax.naming.Reference.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() com.sun.imageio.plugins.jpeg.SOSMarkerSegment.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.util.jar.Manifest.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() sun.security.krb5.EncryptedData.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.text.NumberFormat.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() sun.net.ProgressSource.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.util.EnumSet.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() sun.net.www.protocol.http.AuthenticationInfo.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.awt.datatransfer.MimeTypeParameterList.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.util.regex.Pattern$CharPropertyNames$CloneableProperty.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.security.SignatureSpi.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() sun.security.x509.GeneralSubtrees.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.util.ArrayList.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() com.sun.imageio.plugins.jpeg.DHTMarkerSegment.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() javax.naming.CompositeName.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.awt.font.CharArrayIterator.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.security.Signature$Delegate.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.util.TreeSet.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.util.Hashtable$Entry.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.awt.image.ImageFilter.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() com.sun.imageio.plugins.jpeg.SOSMarkerSegment$ScanComponentSpec.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.awt.geom.Path2D$Float.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() sun.security.krb5.EncryptionKey.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.text.DecimalFormat.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.awt.BufferCapabilities.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.awt.image.Kernel.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.util.Date.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.awt.Insets.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() sun.net.www.MimeEntry.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() sun.util.calendar.CalendarDate.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.awt.print.PageFormat.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() com.sun.imageio.plugins.jpeg.SOFMarkerSegment$ComponentSpec.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.util.EnumMap.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() sun.security.krb5.internal.AuthorizationData.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFExtensionMarkerSegment.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.awt.geom.QuadCurve2D.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() sun.security.krb5.internal.crypto.crc32.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.util.zip.ZipEntry.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.security.MessageDigest$Delegate.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() sun.util.calendar.ZoneInfo.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() sun.text.normalizer.CharacterIteratorWrapper.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.lang.Object.clinit()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.text.DecimalFormatSymbols.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.awt.font.TextLayout.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() javax.swing.DefaultListSelectionModel.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.text.DigitList.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() javax.print.attribute.EnumSyntax.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() javax.sound.midi.ShortMessage.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.awt.geom.CubicCurve2D.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.text.ChoiceFormat.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.lang.Thread.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() com.sun.imageio.plugins.jpeg.MarkerSegment.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.awt.image.renderable.RenderContext.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() sun.security.krb5.Realm.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() com.sun.imageio.plugins.jpeg.DQTMarkerSegment$Qtable.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.awt.JobAttributes.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() com.sun.imageio.plugins.jpeg.JPEGMetadata.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.text.StringCharacterIterator.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.awt.geom.Dimension2D.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() sun.security.x509.NameConstraintsExtension.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.awt.geom.Area.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.util.jar.Attributes.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() sun.security.krb5.internal.HostAddress.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.util.TreeMap.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.awt.geom.Path2D$Double.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.text.BreakIterator.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.util.BitSet.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.lang.Enum.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.util.AbstractMap.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() javax.swing.tree.DefaultMutableTreeNode.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.awt.geom.RectangularShape.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() sun.security.provider.PolicyParser$GrantEntry.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() java.util.HashMap.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant() javax.swing.text.html.HTMLEditorKit.clone()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSumOfLogs() org.apache.commons.math3.stat.descriptive.moment.FirstMoment.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSumOfLogs() org.apache.commons.math3.stat.descriptive.rank.Max.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSumOfLogs() org.apache.commons.math3.stat.descriptive.summary.SumOfLogs.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSumOfLogs() org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSumOfLogs() org.apache.commons.math3.stat.descriptive.summary.SumOfSquares.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSumOfLogs() org.apache.commons.math3.stat.descriptive.rank.Min.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSumOfLogs() org.apache.commons.math3.stat.descriptive.moment.ThirdMoment.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSumOfLogs() org.apache.commons.math3.stat.descriptive.moment.SecondMoment.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSumOfLogs() org.apache.commons.math3.stat.descriptive.moment.FourthMoment.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSumOfLogs() org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSumOfLogs() org.apache.commons.math3.stat.descriptive.moment.Mean.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSumOfLogs() org.apache.commons.math3.stat.descriptive.moment.Skewness.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSumOfLogs() org.apache.commons.math3.stat.descriptive.moment.Kurtosis.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSumOfLogs() org.apache.commons.math3.stat.descriptive.moment.Variance.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSumOfLogs() org.apache.commons.math3.stat.descriptive.summary.Product.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSumOfLogs() org.apache.commons.math3.stat.descriptive.summary.Sum.getResult()
org.apache.commons.math3.linear.RealVectorFormat(java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat) java.lang.String.trim()
org.apache.commons.math3.linear.RealVectorFormat(java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat) java.lang.Object()
org.apache.commons.math3.util.ContinuedFraction.evaluate(double,double,int) org.apache.commons.math3.exception.ConvergenceException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])
org.apache.commons.math3.util.ContinuedFraction.evaluate(double,double,int) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.util.ContinuedFraction.evaluate(double,double,int) org.apache.commons.math3.special.Beta$1.getB(int,double)
org.apache.commons.math3.util.ContinuedFraction.evaluate(double,double,int) java.lang.Integer.clinit()
org.apache.commons.math3.util.ContinuedFraction.evaluate(double,double,int) java.lang.Throwable.clinit()
org.apache.commons.math3.util.ContinuedFraction.evaluate(double,double,int) org.apache.commons.math3.special.Beta$1.getA(int,double)
org.apache.commons.math3.util.ContinuedFraction.evaluate(double,double,int) org.apache.commons.math3.exception.MaxCountExceededException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])
org.apache.commons.math3.util.ContinuedFraction.evaluate(double,double,int) org.apache.commons.math3.special.Gamma$1.getB(int,double)
org.apache.commons.math3.util.ContinuedFraction.evaluate(double,double,int) java.lang.Double.isInfinite(double)
org.apache.commons.math3.util.ContinuedFraction.evaluate(double,double,int) org.apache.commons.math3.util.FastMath.abs(double)
org.apache.commons.math3.util.ContinuedFraction.evaluate(double,double,int) java.lang.Object.clinit()
org.apache.commons.math3.util.ContinuedFraction.evaluate(double,double,int) java.lang.Double.isNaN(double)
org.apache.commons.math3.util.ContinuedFraction.evaluate(double,double,int) java.lang.Double.valueOf(double)
org.apache.commons.math3.util.ContinuedFraction.evaluate(double,double,int) org.apache.commons.math3.util.Precision.equals(double,double,double)
org.apache.commons.math3.util.ContinuedFraction.evaluate(double,double,int) org.apache.commons.math3.util.Precision.clinit()
org.apache.commons.math3.util.ContinuedFraction.evaluate(double,double,int) org.apache.commons.math3.special.Gamma$1.getA(int,double)
org.apache.commons.math3.util.ContinuedFraction.evaluate(double,double,int) org.apache.commons.math3.exception.util.LocalizedFormats.clinit()
org.apache.commons.math3.util.ContinuedFraction.evaluate(double,double,int) java.lang.Double.clinit()
org.apache.commons.math3.util.ContinuedFraction.evaluate(double,double,int) java.lang.Integer.valueOf(int)
org.apache.commons.math3.analysis.function.Gaussian.derivative() org.apache.commons.math3.analysis.function.Cbrt.derivative()
org.apache.commons.math3.analysis.function.Gaussian.derivative() org.apache.commons.math3.analysis.function.Minus.derivative()
org.apache.commons.math3.analysis.function.Gaussian.derivative() org.apache.commons.math3.analysis.function.Tanh.derivative()
org.apache.commons.math3.analysis.function.Gaussian.derivative() org.apache.commons.math3.analysis.FunctionUtils.toDifferentiableUnivariateFunction(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction)
org.apache.commons.math3.analysis.function.Gaussian.derivative() org.apache.commons.math3.analysis.function.Expm1.derivative()
org.apache.commons.math3.analysis.function.Gaussian.derivative() org.apache.commons.math3.analysis.function.Power.derivative()
org.apache.commons.math3.analysis.function.Gaussian.derivative() org.apache.commons.math3.analysis.function.Logit.derivative()
org.apache.commons.math3.analysis.function.Gaussian.derivative() org.apache.commons.math3.analysis.function.Sinc.derivative()
org.apache.commons.math3.analysis.function.Gaussian.derivative() org.apache.commons.math3.analysis.function.Constant.derivative()
org.apache.commons.math3.analysis.function.Gaussian.derivative() org.apache.commons.math3.analysis.function.Log10.derivative()
org.apache.commons.math3.analysis.function.Gaussian.derivative() org.apache.commons.math3.analysis.function.Sigmoid.derivative()
org.apache.commons.math3.analysis.function.Gaussian.derivative() org.apache.commons.math3.analysis.function.Acosh.derivative()
org.apache.commons.math3.analysis.function.Gaussian.derivative() org.apache.commons.math3.analysis.function.Exp.derivative()
org.apache.commons.math3.analysis.function.Gaussian.derivative() org.apache.commons.math3.analysis.function.Sinh.derivative()
org.apache.commons.math3.analysis.function.Gaussian.derivative() java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Gaussian.derivative() org.apache.commons.math3.analysis.polynomials.PolynomialFunction.derivative()
org.apache.commons.math3.analysis.function.Gaussian.derivative() org.apache.commons.math3.analysis.function.Gaussian.derivative()
org.apache.commons.math3.analysis.function.Gaussian.derivative() org.apache.commons.math3.analysis.function.Atanh.derivative()
org.apache.commons.math3.analysis.function.Gaussian.derivative() org.apache.commons.math3.analysis.function.Sqrt.derivative()
org.apache.commons.math3.analysis.function.Gaussian.derivative() org.apache.commons.math3.analysis.FunctionUtils$3.derivative()
org.apache.commons.math3.analysis.function.Gaussian.derivative() org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.derivative()
org.apache.commons.math3.analysis.function.Gaussian.derivative() org.apache.commons.math3.analysis.function.Log1p.derivative()
org.apache.commons.math3.analysis.function.Gaussian.derivative() org.apache.commons.math3.analysis.function.Asin.derivative()
org.apache.commons.math3.analysis.function.Gaussian.derivative() org.apache.commons.math3.analysis.function.Cos.derivative()
org.apache.commons.math3.analysis.function.Gaussian.derivative() org.apache.commons.math3.analysis.function.Asinh.derivative()
org.apache.commons.math3.analysis.function.Gaussian.derivative() org.apache.commons.math3.analysis.function.Tan.derivative()
org.apache.commons.math3.analysis.function.Gaussian.derivative() org.apache.commons.math3.analysis.FunctionUtils$6.derivative()
org.apache.commons.math3.analysis.function.Gaussian.derivative() org.apache.commons.math3.analysis.function.Log.derivative()
org.apache.commons.math3.analysis.function.Gaussian.derivative() org.apache.commons.math3.analysis.function.Atan.derivative()
org.apache.commons.math3.analysis.function.Gaussian.derivative() org.apache.commons.math3.analysis.function.Acos.derivative()
org.apache.commons.math3.analysis.function.Gaussian.derivative() org.apache.commons.math3.analysis.FunctionUtils$14.derivative()
org.apache.commons.math3.analysis.function.Gaussian.derivative() org.apache.commons.math3.analysis.function.Identity.derivative()
org.apache.commons.math3.analysis.function.Gaussian.derivative() org.apache.commons.math3.analysis.function.Cosh.derivative()
org.apache.commons.math3.analysis.function.Gaussian.derivative() org.apache.commons.math3.analysis.FunctionUtils$9.derivative()
org.apache.commons.math3.analysis.function.Gaussian.derivative() org.apache.commons.math3.analysis.function.Logistic.derivative()
org.apache.commons.math3.analysis.function.Gaussian.derivative() org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative()
org.apache.commons.math3.analysis.function.Gaussian.derivative() org.apache.commons.math3.analysis.function.Inverse.derivative()
org.apache.commons.math3.analysis.function.Gaussian.derivative() org.apache.commons.math3.analysis.function.Sin.derivative()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ComparableSegment(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double,double) java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ComparableSegment(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double,double) org.apache.commons.math3.geometry.euclidean.twod.Vector2D.getX()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ComparableSegment(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double,double) org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[])
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ComparableSegment(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double,double) org.apache.commons.math3.geometry.euclidean.twod.Segment(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Line)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ComparableSegment(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double,double) org.apache.commons.math3.geometry.euclidean.twod.Vector2D.getY()
org.apache.commons.math3.geometry.euclidean.twod.Segment(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Line) java.lang.Object()
org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics.getStandardDeviation() org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getStandardDeviation()
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.hashCode() java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.hashCode() org.apache.commons.math3.geometry.euclidean.twod.Vector2D.isNaN()
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.hashCode() org.apache.commons.math3.util.MathUtils.hash(double)
org.apache.commons.math3.util.FastMathCalc.format(double) java.lang.Object.clinit()
org.apache.commons.math3.util.FastMathCalc.format(double) java.lang.StringBuilder()
org.apache.commons.math3.util.FastMathCalc.format(double) java.lang.Double.toString(double)
org.apache.commons.math3.util.FastMathCalc.format(double) java.lang.StringBuilder.append(java.lang.String)
org.apache.commons.math3.util.FastMathCalc.format(double) java.lang.Double.clinit()
org.apache.commons.math3.util.FastMathCalc.format(double) java.lang.StringBuilder.toString()
org.apache.commons.math3.geometry.euclidean.threed.Plane.intersection(org.apache.commons.math3.geometry.euclidean.threed.Plane,org.apache.commons.math3.geometry.euclidean.threed.Plane,org.apache.commons.math3.geometry.euclidean.threed.Plane) java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.threed.Plane.intersection(org.apache.commons.math3.geometry.euclidean.threed.Plane,org.apache.commons.math3.geometry.euclidean.threed.Plane,org.apache.commons.math3.geometry.euclidean.threed.Plane) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.geometry.euclidean.threed.Plane.intersection(org.apache.commons.math3.geometry.euclidean.threed.Plane,org.apache.commons.math3.geometry.euclidean.threed.Plane,org.apache.commons.math3.geometry.euclidean.threed.Plane) org.apache.commons.math3.geometry.euclidean.threed.Vector3D.clinit()
org.apache.commons.math3.geometry.euclidean.threed.Plane.intersection(org.apache.commons.math3.geometry.euclidean.threed.Plane,org.apache.commons.math3.geometry.euclidean.threed.Plane,org.apache.commons.math3.geometry.euclidean.threed.Plane) org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getZ()
org.apache.commons.math3.geometry.euclidean.threed.Plane.intersection(org.apache.commons.math3.geometry.euclidean.threed.Plane,org.apache.commons.math3.geometry.euclidean.threed.Plane,org.apache.commons.math3.geometry.euclidean.threed.Plane) org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getX()
org.apache.commons.math3.geometry.euclidean.threed.Plane.intersection(org.apache.commons.math3.geometry.euclidean.threed.Plane,org.apache.commons.math3.geometry.euclidean.threed.Plane,org.apache.commons.math3.geometry.euclidean.threed.Plane) org.apache.commons.math3.geometry.euclidean.threed.Vector3D(double,double,double)
org.apache.commons.math3.geometry.euclidean.threed.Plane.intersection(org.apache.commons.math3.geometry.euclidean.threed.Plane,org.apache.commons.math3.geometry.euclidean.threed.Plane,org.apache.commons.math3.geometry.euclidean.threed.Plane) org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getY()
org.apache.commons.math3.geometry.euclidean.threed.Plane.intersection(org.apache.commons.math3.geometry.euclidean.threed.Plane,org.apache.commons.math3.geometry.euclidean.threed.Plane,org.apache.commons.math3.geometry.euclidean.threed.Plane) org.apache.commons.math3.util.FastMath.abs(double)
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getMin() org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMin()
org.apache.commons.math3.analysis.function.Sin.value(double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Sin.value(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.function.Sin.value(double) org.apache.commons.math3.util.FastMath.sin(double)
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.clinit() java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.clinit() org.apache.commons.math3.geometry.euclidean.twod.Vector2D.clinit()
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.clinit() org.apache.commons.math3.geometry.euclidean.twod.Vector2D(double,double)
org.apache.commons.math3.geometry.euclidean.twod.Line(org.apache.commons.math3.geometry.euclidean.twod.Line) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.geometry.euclidean.twod.Line(org.apache.commons.math3.geometry.euclidean.twod.Line) java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.twod.Line(org.apache.commons.math3.geometry.euclidean.twod.Line) org.apache.commons.math3.util.FastMath.cos(double)
org.apache.commons.math3.geometry.euclidean.twod.Line(org.apache.commons.math3.geometry.euclidean.twod.Line) org.apache.commons.math3.util.FastMath.sin(double)
org.apache.commons.math3.geometry.euclidean.twod.Line(org.apache.commons.math3.geometry.euclidean.twod.Line) org.apache.commons.math3.util.MathUtils.normalizeAngle(double,double)
org.apache.commons.math3.geometry.euclidean.twod.Line(org.apache.commons.math3.geometry.euclidean.twod.Line) java.lang.Object()
org.apache.commons.math3.linear.ArrayRealVector.setEntry(int,double) org.apache.commons.math3.linear.RealVector.checkIndex(int)
org.apache.commons.math3.linear.RealVector$2.mapMultiply(double) org.apache.commons.math3.linear.RealVector$2.mapMultiply(double)
org.apache.commons.math3.linear.RealVector$2.mapMultiply(double) org.apache.commons.math3.linear.RealVector.mapMultiply(double)
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSum() org.apache.commons.math3.stat.descriptive.moment.FirstMoment.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSum() org.apache.commons.math3.stat.descriptive.rank.Max.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSum() org.apache.commons.math3.stat.descriptive.summary.SumOfLogs.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSum() org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSum() org.apache.commons.math3.stat.descriptive.summary.SumOfSquares.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSum() org.apache.commons.math3.stat.descriptive.rank.Min.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSum() org.apache.commons.math3.stat.descriptive.moment.ThirdMoment.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSum() org.apache.commons.math3.stat.descriptive.moment.SecondMoment.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSum() org.apache.commons.math3.stat.descriptive.moment.FourthMoment.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSum() org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSum() org.apache.commons.math3.stat.descriptive.moment.Mean.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSum() org.apache.commons.math3.stat.descriptive.moment.Skewness.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSum() org.apache.commons.math3.stat.descriptive.moment.Kurtosis.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSum() org.apache.commons.math3.stat.descriptive.moment.Variance.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSum() org.apache.commons.math3.stat.descriptive.summary.Product.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSum() org.apache.commons.math3.stat.descriptive.summary.Sum.getResult()
org.apache.commons.math3.exception.DimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,int,int) java.lang.Object.clinit()
org.apache.commons.math3.exception.DimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,int,int) java.lang.Integer.clinit()
org.apache.commons.math3.exception.DimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,int,int) org.apache.commons.math3.exception.MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])
org.apache.commons.math3.exception.DimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,int,int) java.lang.Integer.valueOf(int)
org.apache.commons.math3.special.Erf.erf(double,double) org.apache.commons.math3.special.Erf.erfc(double)
org.apache.commons.math3.special.Erf.erf(double,double) java.lang.Object.clinit()
org.apache.commons.math3.special.Erf.erf(double,double) org.apache.commons.math3.special.Erf.erf(double)
org.apache.commons.math3.special.Erf.erf(double,double) org.apache.commons.math3.special.Erf.erf(double,double)
org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.toString() java.lang.StringBuffer.append(double)
org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.toString() org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.getSum()
org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.toString() java.lang.StringBuffer.clinit()
org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.toString() org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.getStandardDeviation()
org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.toString() java.lang.StringBuffer.toString()
org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.toString() org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.getN()
org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.toString() java.lang.StringBuffer()
org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.toString() org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.getMin()
org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.toString() java.lang.StringBuffer.append(long)
org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.toString() java.lang.Object.clinit()
org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.toString() org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.getMax()
org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.toString() org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.getVariance()
org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.toString() java.lang.StringBuffer.append(java.lang.String)
org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.toString() org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.getMean()
org.apache.commons.math3.stat.descriptive.moment.Variance.evaluate(double[],double,int,int) org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.test(double[],int,int)
org.apache.commons.math3.geometry.euclidean.twod.Line.reset(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.geometry.euclidean.twod.Line.reset(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double) java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.twod.Line.reset(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double) org.apache.commons.math3.geometry.euclidean.twod.Vector2D.getX()
org.apache.commons.math3.geometry.euclidean.twod.Line.reset(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double) org.apache.commons.math3.util.FastMath.cos(double)
org.apache.commons.math3.geometry.euclidean.twod.Line.reset(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double) org.apache.commons.math3.util.FastMath.sin(double)
org.apache.commons.math3.geometry.euclidean.twod.Line.reset(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double) org.apache.commons.math3.geometry.euclidean.twod.Vector2D.getY()
org.apache.commons.math3.geometry.euclidean.twod.Line.reset(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double) org.apache.commons.math3.util.MathUtils.normalizeAngle(double,double)
org.apache.commons.math3.fraction.BigFraction(double) java.lang.Object.clinit()
org.apache.commons.math3.fraction.BigFraction(double) java.lang.Double.isNaN(double)
org.apache.commons.math3.fraction.BigFraction(double) java.lang.Throwable.clinit()
org.apache.commons.math3.fraction.BigFraction(double) java.math.BigInteger.valueOf(long)
org.apache.commons.math3.fraction.BigFraction(double) java.math.BigInteger.flipBit(int)
org.apache.commons.math3.fraction.BigFraction(double) java.math.BigInteger.multiply(java.math.BigInteger)
org.apache.commons.math3.fraction.BigFraction(double) org.apache.commons.math3.exception.util.LocalizedFormats.clinit()
org.apache.commons.math3.fraction.BigFraction(double) java.lang.Double.clinit()
org.apache.commons.math3.fraction.BigFraction(double) java.lang.Double.isInfinite(double)
org.apache.commons.math3.fraction.BigFraction(double) java.lang.Double.doubleToLongBits(double)
org.apache.commons.math3.fraction.BigFraction(double) java.math.BigInteger.clinit()
org.apache.commons.math3.fraction.BigFraction(double) org.apache.commons.math3.exception.MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])
org.apache.commons.math3.fraction.BigFraction(double) java.lang.Number()
org.apache.commons.math3.util.FastMath.abs(double) java.lang.Object.clinit()
org.apache.commons.math3.util.FastMath.abs(double) java.lang.Double.doubleToRawLongBits(double)
org.apache.commons.math3.util.FastMath.abs(double) java.lang.Double.clinit()
org.apache.commons.math3.util.FastMath.abs(double) java.lang.Double.longBitsToDouble(long)
org.apache.commons.math3.util.Precision.equalsIncludingNaN(float,float) org.apache.commons.math3.util.Precision.equals(float,float,int)
org.apache.commons.math3.util.Precision.equalsIncludingNaN(float,float) java.lang.Object.clinit()
org.apache.commons.math3.util.Precision.equalsIncludingNaN(float,float) java.lang.Float.isNaN(float)
org.apache.commons.math3.util.Precision.equalsIncludingNaN(float,float) java.lang.Float.clinit()
org.apache.commons.math3.util.Precision.equalsIncludingNaN(float,float) org.apache.commons.math3.util.Precision.clinit()
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.function.Sqrt.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.function.Ulp.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.function.Acos.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.function.Asin.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.function.Rint.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.function.Gaussian.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.function.Tan.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.ode.events.EventState$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.function.Sinc.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$7.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.function.Sin.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.function.Log1p.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.function.Identity.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$3.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.function.Signum.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.distribution.AbstractRealDistribution$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.function.Exp.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.function.Logit.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.function.Acosh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$2.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.function.Log10.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$12.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$8.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.function.Constant.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.function.Atan.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.function.Logistic.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.function.Sinh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.function.Cosh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.function.Floor.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.function.Expm1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.function.Power.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.function.Cbrt.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.optimization.direct.PowellOptimizer$LineSearch$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.function.HarmonicOscillator.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.function.Asinh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$4.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$6.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.function.StepFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.function.Minus.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$13.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.function.Tanh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$9.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.function.Cos.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.function.Atanh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$10.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.function.Log.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.function.Sigmoid.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.function.Inverse.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$5.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.function.Abs.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$15.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.function.Ceil.value(double)
org.apache.commons.math3.analysis.FunctionUtils$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$14.value(double)
org.apache.commons.math3.exception.TooManyEvaluationsException(java.lang.Number) org.apache.commons.math3.exception.MaxCountExceededException(java.lang.Number)
org.apache.commons.math3.exception.TooManyEvaluationsException(java.lang.Number) java.lang.Object.clinit()
org.apache.commons.math3.exception.TooManyEvaluationsException(java.lang.Number) org.apache.commons.math3.exception.util.ExceptionContext.addMessage(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])
org.apache.commons.math3.exception.TooManyEvaluationsException(java.lang.Number) org.apache.commons.math3.exception.util.LocalizedFormats.clinit()
org.apache.commons.math3.exception.TooManyEvaluationsException(java.lang.Number) org.apache.commons.math3.exception.MathIllegalStateException.getContext()
org.apache.commons.math3.util.MathArrays$Position.clinit() java.lang.Object.clinit()
org.apache.commons.math3.util.MathArrays$Position.clinit() org.apache.commons.math3.util.MathArrays$Position(java.lang.String,int)
org.apache.commons.math3.util.MathArrays$Position.clinit() org.apache.commons.math3.util.MathArrays$Position.clinit()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.side(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.twod.Line.wholeHyperplane()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.side(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.threed.Plane.wholeHyperplane()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.side(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.partitioning.Side.clinit()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.side(org.apache.commons.math3.geometry.partitioning.Hyperplane) java.lang.Object.clinit()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.side(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.partitioning.AbstractRegion$Sides.minusFound()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.side(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.partitioning.AbstractRegion$Sides.plusFound()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.side(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.partitioning.AbstractRegion.recurseSides(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.AbstractRegion$Sides)
org.apache.commons.math3.geometry.partitioning.AbstractRegion.side(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.wholeHyperplane()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.side(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.partitioning.AbstractRegion$Sides()
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.differentiate(double[]) java.lang.Object.clinit()
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.differentiate(double[]) java.lang.Throwable.clinit()
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.differentiate(double[]) org.apache.commons.math3.exception.NoDataException(org.apache.commons.math3.exception.util.Localizable)
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.differentiate(double[]) org.apache.commons.math3.exception.util.LocalizedFormats.clinit()
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.differentiate(double[]) org.apache.commons.math3.util.MathUtils.checkNotNull(java.lang.Object)
org.apache.commons.math3.analysis.FunctionUtils$8.value(double) org.apache.commons.math3.analysis.function.Logistic.value(double)
org.apache.commons.math3.analysis.FunctionUtils$8.value(double) org.apache.commons.math3.analysis.function.Sinh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$8.value(double) org.apache.commons.math3.analysis.function.Acos.value(double)
org.apache.commons.math3.analysis.FunctionUtils$8.value(double) org.apache.commons.math3.analysis.function.Cosh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$8.value(double) org.apache.commons.math3.analysis.function.Sqrt.value(double)
org.apache.commons.math3.analysis.FunctionUtils$8.value(double) org.apache.commons.math3.analysis.function.Expm1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$8.value(double) org.apache.commons.math3.analysis.function.Power.value(double)
org.apache.commons.math3.analysis.FunctionUtils$8.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$8.value(double) org.apache.commons.math3.analysis.function.Asin.value(double)
org.apache.commons.math3.analysis.FunctionUtils$8.value(double) org.apache.commons.math3.analysis.function.Gaussian.value(double)
org.apache.commons.math3.analysis.FunctionUtils$8.value(double) org.apache.commons.math3.analysis.function.Cbrt.value(double)
org.apache.commons.math3.analysis.FunctionUtils$8.value(double) org.apache.commons.math3.analysis.function.Tan.value(double)
org.apache.commons.math3.analysis.FunctionUtils$8.value(double) org.apache.commons.math3.analysis.function.HarmonicOscillator.value(double)
org.apache.commons.math3.analysis.FunctionUtils$8.value(double) org.apache.commons.math3.analysis.function.Asinh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$8.value(double) org.apache.commons.math3.analysis.function.Minus.value(double)
org.apache.commons.math3.analysis.FunctionUtils$8.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$8.value(double) org.apache.commons.math3.analysis.function.Tanh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$8.value(double) org.apache.commons.math3.analysis.function.Sinc.value(double)
org.apache.commons.math3.analysis.FunctionUtils$8.value(double) org.apache.commons.math3.analysis.function.Log1p.value(double)
org.apache.commons.math3.analysis.FunctionUtils$8.value(double) org.apache.commons.math3.analysis.function.Sin.value(double)
org.apache.commons.math3.analysis.FunctionUtils$8.value(double) org.apache.commons.math3.analysis.function.Atanh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$8.value(double) org.apache.commons.math3.analysis.function.Cos.value(double)
org.apache.commons.math3.analysis.FunctionUtils$8.value(double) org.apache.commons.math3.analysis.function.Identity.value(double)
org.apache.commons.math3.analysis.FunctionUtils$8.value(double) org.apache.commons.math3.analysis.function.Log.value(double)
org.apache.commons.math3.analysis.FunctionUtils$8.value(double) org.apache.commons.math3.analysis.function.Exp.value(double)
org.apache.commons.math3.analysis.FunctionUtils$8.value(double) org.apache.commons.math3.analysis.function.Sigmoid.value(double)
org.apache.commons.math3.analysis.FunctionUtils$8.value(double) org.apache.commons.math3.analysis.function.Logit.value(double)
org.apache.commons.math3.analysis.FunctionUtils$8.value(double) org.apache.commons.math3.analysis.function.Acosh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$8.value(double) org.apache.commons.math3.analysis.function.Inverse.value(double)
org.apache.commons.math3.analysis.FunctionUtils$8.value(double) org.apache.commons.math3.analysis.FunctionUtils$2.value(double)
org.apache.commons.math3.analysis.FunctionUtils$8.value(double) org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$8.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.value(double)
org.apache.commons.math3.analysis.FunctionUtils$8.value(double) org.apache.commons.math3.analysis.FunctionUtils$5.value(double)
org.apache.commons.math3.analysis.FunctionUtils$8.value(double) org.apache.commons.math3.analysis.function.Log10.value(double)
org.apache.commons.math3.analysis.FunctionUtils$8.value(double) org.apache.commons.math3.analysis.FunctionUtils$15.value(double)
org.apache.commons.math3.analysis.FunctionUtils$8.value(double) org.apache.commons.math3.analysis.FunctionUtils$8.value(double)
org.apache.commons.math3.analysis.FunctionUtils$8.value(double) org.apache.commons.math3.analysis.function.Atan.value(double)
org.apache.commons.math3.analysis.FunctionUtils$8.value(double) org.apache.commons.math3.analysis.function.Constant.value(double)
org.apache.commons.math3.util.OpenIntToDoubleHashMap.findInsertionIndex(int) java.lang.Object.clinit()
org.apache.commons.math3.util.OpenIntToDoubleHashMap.findInsertionIndex(int) org.apache.commons.math3.util.OpenIntToDoubleHashMap.findInsertionIndex(int[],byte[],int,int)
org.apache.commons.math3.ode.ParameterJacobianWrapper.computeParameterJacobian(double,double[],double[],java.lang.String,double[]) sun.util.PreHashedMap.get(java.lang.Object)
org.apache.commons.math3.ode.ParameterJacobianWrapper.computeParameterJacobian(double,double[],double[],java.lang.String,double[]) javax.swing.UIDefaults.get(java.lang.Object)
org.apache.commons.math3.ode.ParameterJacobianWrapper.computeParameterJacobian(double,double[],double[],java.lang.String,double[]) org.apache.commons.math3.ode.ParameterizedWrapper.setParameter(java.lang.String,double)
org.apache.commons.math3.ode.ParameterJacobianWrapper.computeParameterJacobian(double,double[],double[],java.lang.String,double[]) java.util.TreeMap$NavigableSubMap.get(java.lang.Object)
org.apache.commons.math3.ode.ParameterJacobianWrapper.computeParameterJacobian(double,double[],double[],java.lang.String,double[]) org.apache.commons.math3.ode.MultistepIntegrator$1.computeDerivatives(double,double[],double[])
org.apache.commons.math3.ode.ParameterJacobianWrapper.computeParameterJacobian(double,double[],double[],java.lang.String,double[]) org.apache.commons.math3.ode.JacobianMatrices$MainStateJacobianWrapper.getDimension()
org.apache.commons.math3.ode.ParameterJacobianWrapper.computeParameterJacobian(double,double[],double[],java.lang.String,double[]) javax.swing.UIDefaults$TextAndMnemonicHashMap.get(java.lang.Object)
org.apache.commons.math3.ode.ParameterJacobianWrapper.computeParameterJacobian(double,double[],double[],java.lang.String,double[]) java.util.EnumMap.get(java.lang.Object)
org.apache.commons.math3.ode.ParameterJacobianWrapper.computeParameterJacobian(double,double[],double[],java.lang.String,double[]) sun.misc.SoftCache.get(java.lang.Object)
org.apache.commons.math3.ode.ParameterJacobianWrapper.computeParameterJacobian(double,double[],double[],java.lang.String,double[]) java.util.Collections$SynchronizedMap.get(java.lang.Object)
org.apache.commons.math3.ode.ParameterJacobianWrapper.computeParameterJacobian(double,double[],double[],java.lang.String,double[]) java.awt.RenderingHints.get(java.lang.Object)
org.apache.commons.math3.ode.ParameterJacobianWrapper.computeParameterJacobian(double,double[],double[],java.lang.String,double[]) javax.swing.MultiUIDefaults.get(java.lang.Object)
org.apache.commons.math3.ode.ParameterJacobianWrapper.computeParameterJacobian(double,double[],double[],java.lang.String,double[]) java.util.AbstractMap.get(java.lang.Object)
org.apache.commons.math3.ode.ParameterJacobianWrapper.computeParameterJacobian(double,double[],double[],java.lang.String,double[]) java.lang.Object.clinit()
org.apache.commons.math3.ode.ParameterJacobianWrapper.computeParameterJacobian(double,double[],double[],java.lang.String,double[]) java.util.WeakHashMap.get(java.lang.Object)
org.apache.commons.math3.ode.ParameterJacobianWrapper.computeParameterJacobian(double,double[],double[],java.lang.String,double[]) java.util.Collections$UnmodifiableMap.get(java.lang.Object)
org.apache.commons.math3.ode.ParameterJacobianWrapper.computeParameterJacobian(double,double[],double[],java.lang.String,double[]) org.apache.commons.math3.ode.FirstOrderConverter.computeDerivatives(double,double[],double[])
org.apache.commons.math3.ode.ParameterJacobianWrapper.computeParameterJacobian(double,double[],double[],java.lang.String,double[]) java.util.TreeMap.get(java.lang.Object)
org.apache.commons.math3.ode.ParameterJacobianWrapper.computeParameterJacobian(double,double[],double[],java.lang.String,double[]) java.util.Collections$SingletonMap.get(java.lang.Object)
org.apache.commons.math3.ode.ParameterJacobianWrapper.computeParameterJacobian(double,double[],double[],java.lang.String,double[]) java.util.concurrent.ConcurrentHashMap.get(java.lang.Object)
org.apache.commons.math3.ode.ParameterJacobianWrapper.computeParameterJacobian(double,double[],double[],java.lang.String,double[]) java.lang.ProcessEnvironment$StringEnvironment.get(java.lang.Object)
org.apache.commons.math3.ode.ParameterJacobianWrapper.computeParameterJacobian(double,double[],double[],java.lang.String,double[]) java.util.jar.Attributes.get(java.lang.Object)
org.apache.commons.math3.ode.ParameterJacobianWrapper.computeParameterJacobian(double,double[],double[],java.lang.String,double[]) java.util.Collections$CheckedMap.get(java.lang.Object)
org.apache.commons.math3.ode.ParameterJacobianWrapper.computeParameterJacobian(double,double[],double[],java.lang.String,double[]) java.util.IdentityHashMap.get(java.lang.Object)
org.apache.commons.math3.ode.ParameterJacobianWrapper.computeParameterJacobian(double,double[],double[],java.lang.String,double[]) org.apache.commons.math3.ode.JacobianMatrices$MainStateJacobianWrapper.computeDerivatives(double,double[],double[])
org.apache.commons.math3.ode.ParameterJacobianWrapper.computeParameterJacobian(double,double[],double[],java.lang.String,double[]) org.apache.commons.math3.ode.MultistepIntegrator$1.getDimension()
org.apache.commons.math3.ode.ParameterJacobianWrapper.computeParameterJacobian(double,double[],double[],java.lang.String,double[]) java.util.HashMap.get(java.lang.Object)
org.apache.commons.math3.ode.ParameterJacobianWrapper.computeParameterJacobian(double,double[],double[],java.lang.String,double[]) java.security.Provider.get(java.lang.Object)
org.apache.commons.math3.ode.ParameterJacobianWrapper.computeParameterJacobian(double,double[],double[],java.lang.String,double[]) java.util.LinkedHashMap.get(java.lang.Object)
org.apache.commons.math3.ode.ParameterJacobianWrapper.computeParameterJacobian(double,double[],double[],java.lang.String,double[]) org.apache.commons.math3.ode.FirstOrderConverter.getDimension()
org.apache.commons.math3.ode.ParameterJacobianWrapper.computeParameterJacobian(double,double[],double[],java.lang.String,double[]) java.util.Hashtable.get(java.lang.Object)
org.apache.commons.math3.ode.ParameterJacobianWrapper.computeParameterJacobian(double,double[],double[],java.lang.String,double[]) java.lang.Double.doubleValue()
org.apache.commons.math3.ode.ParameterJacobianWrapper.computeParameterJacobian(double,double[],double[],java.lang.String,double[]) java.text.AttributedString$AttributeMap.get(java.lang.Object)
org.apache.commons.math3.ode.ParameterJacobianWrapper.computeParameterJacobian(double,double[],double[],java.lang.String,double[]) java.util.Arrays.fill(double[],int,int,double)
org.apache.commons.math3.ode.ParameterJacobianWrapper.computeParameterJacobian(double,double[],double[],java.lang.String,double[]) org.apache.commons.math3.ode.ParameterizedWrapper.isSupported(java.lang.String)
org.apache.commons.math3.ode.ParameterJacobianWrapper.computeParameterJacobian(double,double[],double[],java.lang.String,double[]) java.util.Arrays.clinit()
org.apache.commons.math3.ode.ParameterJacobianWrapper.computeParameterJacobian(double,double[],double[],java.lang.String,double[]) java.util.Collections$EmptyMap.get(java.lang.Object)
org.apache.commons.math3.ode.ParameterJacobianWrapper.computeParameterJacobian(double,double[],double[],java.lang.String,double[]) org.apache.commons.math3.ode.ParameterizedWrapper.getParameter(java.lang.String)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.rebalanceLeftShrunk() java.lang.Object.clinit()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.rebalanceLeftShrunk() java.lang.Enum.ordinal()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.rebalanceLeftShrunk() org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.rotateCW()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.rebalanceLeftShrunk() org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.clinit()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.rebalanceLeftShrunk() org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.rotateCCW()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.rebalanceLeftShrunk() org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$1.clinit()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.rebalanceRightGrown() java.lang.Object.clinit()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.rebalanceRightGrown() java.lang.Enum.ordinal()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.rebalanceRightGrown() org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.rotateCW()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.rebalanceRightGrown() org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.clinit()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.rebalanceRightGrown() org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.rotateCCW()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.rebalanceRightGrown() org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$1.clinit()
org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor$BoundaryProjector.visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.partitioning.BSPTree.getAttribute()
org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor$BoundaryProjector.visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.partitioning.BoundaryAttribute.getPlusOutside()
org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor$BoundaryProjector.visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor$BoundaryProjector.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean)
org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor$BoundaryProjector.visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.partitioning.BoundaryAttribute.getPlusInside()
org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.getResult() org.apache.commons.math3.stat.descriptive.moment.Variance.getResult()
org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.getResult() java.lang.Object.clinit()
org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.getResult() org.apache.commons.math3.util.FastMath.sqrt(double)
org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.getResult() org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.dfp.Dfp.multiply(int) org.apache.commons.math3.dfp.Dfp.multiply(org.apache.commons.math3.dfp.Dfp)
org.apache.commons.math3.dfp.Dfp.multiply(int) org.apache.commons.math3.dfp.DfpDec.newInstance(int)
org.apache.commons.math3.dfp.Dfp.multiply(int) org.apache.commons.math3.dfp.Dfp.multiplyFast(int)
org.apache.commons.math3.dfp.Dfp.multiply(int) org.apache.commons.math3.dfp.Dfp.newInstance(int)
org.apache.commons.math3.fraction.ProperFractionFormat.format(org.apache.commons.math3.fraction.Fraction,java.lang.StringBuffer,java.text.FieldPosition) java.lang.Math.abs(int)
org.apache.commons.math3.fraction.ProperFractionFormat.format(org.apache.commons.math3.fraction.Fraction,java.lang.StringBuffer,java.text.FieldPosition) java.text.FieldPosition.setBeginIndex(int)
org.apache.commons.math3.fraction.ProperFractionFormat.format(org.apache.commons.math3.fraction.Fraction,java.lang.StringBuffer,java.text.FieldPosition) java.text.DecimalFormat.format(long,java.lang.StringBuffer,java.text.FieldPosition)
org.apache.commons.math3.fraction.ProperFractionFormat.format(org.apache.commons.math3.fraction.Fraction,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.fraction.Fraction.getNumerator()
org.apache.commons.math3.fraction.ProperFractionFormat.format(org.apache.commons.math3.fraction.Fraction,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.fraction.ProperFractionFormat.getWholeFormat()
org.apache.commons.math3.fraction.ProperFractionFormat.format(org.apache.commons.math3.fraction.Fraction,java.lang.StringBuffer,java.text.FieldPosition) java.text.ChoiceFormat.format(long,java.lang.StringBuffer,java.text.FieldPosition)
org.apache.commons.math3.fraction.ProperFractionFormat.format(org.apache.commons.math3.fraction.Fraction,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.fraction.AbstractFormat.getDenominatorFormat()
org.apache.commons.math3.fraction.ProperFractionFormat.format(org.apache.commons.math3.fraction.Fraction,java.lang.StringBuffer,java.text.FieldPosition) java.text.FieldPosition.setEndIndex(int)
org.apache.commons.math3.fraction.ProperFractionFormat.format(org.apache.commons.math3.fraction.Fraction,java.lang.StringBuffer,java.text.FieldPosition) java.lang.StringBuffer.append(char)
org.apache.commons.math3.fraction.ProperFractionFormat.format(org.apache.commons.math3.fraction.Fraction,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.fraction.AbstractFormat.getNumeratorFormat()
org.apache.commons.math3.fraction.ProperFractionFormat.format(org.apache.commons.math3.fraction.Fraction,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.fraction.AbstractFormat.format(long,java.lang.StringBuffer,java.text.FieldPosition)
org.apache.commons.math3.fraction.ProperFractionFormat.format(org.apache.commons.math3.fraction.Fraction,java.lang.StringBuffer,java.text.FieldPosition) java.lang.Object.clinit()
org.apache.commons.math3.fraction.ProperFractionFormat.format(org.apache.commons.math3.fraction.Fraction,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.fraction.Fraction.getDenominator()
org.apache.commons.math3.fraction.ProperFractionFormat.format(org.apache.commons.math3.fraction.Fraction,java.lang.StringBuffer,java.text.FieldPosition) java.lang.Math.clinit()
org.apache.commons.math3.fraction.ProperFractionFormat.format(org.apache.commons.math3.fraction.Fraction,java.lang.StringBuffer,java.text.FieldPosition) java.lang.StringBuffer.append(java.lang.String)
org.apache.commons.math3.analysis.function.Log10.derivative() org.apache.commons.math3.analysis.function.Cbrt.derivative()
org.apache.commons.math3.analysis.function.Log10.derivative() org.apache.commons.math3.analysis.function.Minus.derivative()
org.apache.commons.math3.analysis.function.Log10.derivative() org.apache.commons.math3.analysis.function.Tanh.derivative()
org.apache.commons.math3.analysis.function.Log10.derivative() org.apache.commons.math3.analysis.FunctionUtils.toDifferentiableUnivariateFunction(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction)
org.apache.commons.math3.analysis.function.Log10.derivative() org.apache.commons.math3.analysis.function.Expm1.derivative()
org.apache.commons.math3.analysis.function.Log10.derivative() org.apache.commons.math3.analysis.function.Power.derivative()
org.apache.commons.math3.analysis.function.Log10.derivative() org.apache.commons.math3.analysis.function.Logit.derivative()
org.apache.commons.math3.analysis.function.Log10.derivative() org.apache.commons.math3.analysis.function.Sinc.derivative()
org.apache.commons.math3.analysis.function.Log10.derivative() org.apache.commons.math3.analysis.function.Constant.derivative()
org.apache.commons.math3.analysis.function.Log10.derivative() org.apache.commons.math3.analysis.function.Log10.derivative()
org.apache.commons.math3.analysis.function.Log10.derivative() org.apache.commons.math3.analysis.function.Sigmoid.derivative()
org.apache.commons.math3.analysis.function.Log10.derivative() org.apache.commons.math3.analysis.function.Acosh.derivative()
org.apache.commons.math3.analysis.function.Log10.derivative() org.apache.commons.math3.analysis.function.Exp.derivative()
org.apache.commons.math3.analysis.function.Log10.derivative() org.apache.commons.math3.analysis.function.Sinh.derivative()
org.apache.commons.math3.analysis.function.Log10.derivative() java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Log10.derivative() org.apache.commons.math3.analysis.polynomials.PolynomialFunction.derivative()
org.apache.commons.math3.analysis.function.Log10.derivative() org.apache.commons.math3.analysis.function.Gaussian.derivative()
org.apache.commons.math3.analysis.function.Log10.derivative() org.apache.commons.math3.analysis.function.Atanh.derivative()
org.apache.commons.math3.analysis.function.Log10.derivative() org.apache.commons.math3.analysis.function.Sqrt.derivative()
org.apache.commons.math3.analysis.function.Log10.derivative() org.apache.commons.math3.analysis.FunctionUtils$3.derivative()
org.apache.commons.math3.analysis.function.Log10.derivative() org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.derivative()
org.apache.commons.math3.analysis.function.Log10.derivative() org.apache.commons.math3.analysis.function.Log1p.derivative()
org.apache.commons.math3.analysis.function.Log10.derivative() org.apache.commons.math3.analysis.function.Asin.derivative()
org.apache.commons.math3.analysis.function.Log10.derivative() org.apache.commons.math3.analysis.function.Cos.derivative()
org.apache.commons.math3.analysis.function.Log10.derivative() org.apache.commons.math3.analysis.function.Asinh.derivative()
org.apache.commons.math3.analysis.function.Log10.derivative() org.apache.commons.math3.analysis.function.Tan.derivative()
org.apache.commons.math3.analysis.function.Log10.derivative() org.apache.commons.math3.analysis.FunctionUtils$6.derivative()
org.apache.commons.math3.analysis.function.Log10.derivative() org.apache.commons.math3.analysis.function.Log.derivative()
org.apache.commons.math3.analysis.function.Log10.derivative() org.apache.commons.math3.analysis.function.Atan.derivative()
org.apache.commons.math3.analysis.function.Log10.derivative() org.apache.commons.math3.analysis.function.Acos.derivative()
org.apache.commons.math3.analysis.function.Log10.derivative() org.apache.commons.math3.analysis.FunctionUtils$14.derivative()
org.apache.commons.math3.analysis.function.Log10.derivative() org.apache.commons.math3.analysis.function.Identity.derivative()
org.apache.commons.math3.analysis.function.Log10.derivative() org.apache.commons.math3.analysis.function.Cosh.derivative()
org.apache.commons.math3.analysis.function.Log10.derivative() org.apache.commons.math3.analysis.FunctionUtils$9.derivative()
org.apache.commons.math3.analysis.function.Log10.derivative() org.apache.commons.math3.analysis.function.Logistic.derivative()
org.apache.commons.math3.analysis.function.Log10.derivative() org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative()
org.apache.commons.math3.analysis.function.Log10.derivative() org.apache.commons.math3.analysis.function.Inverse.derivative()
org.apache.commons.math3.analysis.function.Log10.derivative() org.apache.commons.math3.analysis.function.Sin.derivative()
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator.writeExternal(java.io.ObjectOutput) java.io.ObjectOutputStream.writeDouble(double)
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator.writeExternal(java.io.ObjectOutput) org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.writeBaseExternal(java.io.ObjectOutput)
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator.writeExternal(java.io.ObjectOutput) java.io.ObjectOutputStream.writeInt(int)
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSumsq() org.apache.commons.math3.stat.descriptive.moment.FirstMoment.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSumsq() org.apache.commons.math3.stat.descriptive.rank.Max.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSumsq() org.apache.commons.math3.stat.descriptive.summary.SumOfLogs.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSumsq() org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSumsq() org.apache.commons.math3.stat.descriptive.summary.SumOfSquares.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSumsq() org.apache.commons.math3.stat.descriptive.rank.Min.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSumsq() org.apache.commons.math3.stat.descriptive.moment.ThirdMoment.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSumsq() org.apache.commons.math3.stat.descriptive.moment.SecondMoment.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSumsq() org.apache.commons.math3.stat.descriptive.moment.FourthMoment.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSumsq() org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSumsq() org.apache.commons.math3.stat.descriptive.moment.Mean.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSumsq() org.apache.commons.math3.stat.descriptive.moment.Skewness.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSumsq() org.apache.commons.math3.stat.descriptive.moment.Kurtosis.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSumsq() org.apache.commons.math3.stat.descriptive.moment.Variance.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSumsq() org.apache.commons.math3.stat.descriptive.summary.Product.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSumsq() org.apache.commons.math3.stat.descriptive.summary.Sum.getResult()
org.apache.commons.math3.analysis.function.Sigmoid$Parametric.validateParameters(double[]) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Sigmoid$Parametric.validateParameters(double[]) org.apache.commons.math3.exception.DimensionMismatchException(int,int)
org.apache.commons.math3.analysis.function.Sigmoid$Parametric.validateParameters(double[]) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.analysis.function.Sigmoid$Parametric.validateParameters(double[]) java.lang.Throwable.clinit()
org.apache.commons.math3.analysis.function.Sigmoid$Parametric.validateParameters(double[]) org.apache.commons.math3.exception.NullArgumentException()
org.apache.commons.math3.util.FastMath.expm1(double,double[]) java.lang.Object.clinit()
org.apache.commons.math3.util.FastMath.expm1(double,double[]) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.util.FastMath.expm1(double,double[]) org.apache.commons.math3.util.FastMath$ExpFracTable.clinit()
org.apache.commons.math3.util.FastMath.expm1(double,double[]) org.apache.commons.math3.util.FastMath$ExpFracTable.access$200()
org.apache.commons.math3.util.FastMath.expm1(double,double[]) org.apache.commons.math3.util.FastMath.exp(double,double,double[])
org.apache.commons.math3.util.FastMath.expm1(double,double[]) org.apache.commons.math3.util.FastMath$ExpFracTable.access$300()
org.apache.commons.math3.analysis.function.HarmonicOscillator.value(double,double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.HarmonicOscillator.value(double,double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.function.HarmonicOscillator.value(double,double) org.apache.commons.math3.util.FastMath.cos(double)
org.apache.commons.math3.analysis.function.Sinh.derivative() java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Sinh.derivative() org.apache.commons.math3.analysis.function.Sinh.derivative()
org.apache.commons.math3.analysis.function.Sinh.derivative() org.apache.commons.math3.analysis.function.Cosh()
org.apache.commons.math3.analysis.FunctionUtils$6.value(double) org.apache.commons.math3.analysis.function.Logistic.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6.value(double) org.apache.commons.math3.analysis.function.Sinh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6.value(double) org.apache.commons.math3.analysis.function.Acos.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6.value(double) org.apache.commons.math3.analysis.function.Cosh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6.value(double) org.apache.commons.math3.analysis.function.Sqrt.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6.value(double) org.apache.commons.math3.analysis.function.Expm1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6.value(double) org.apache.commons.math3.analysis.function.Power.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6.value(double) org.apache.commons.math3.analysis.function.Asin.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6.value(double) org.apache.commons.math3.analysis.function.Gaussian.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6.value(double) org.apache.commons.math3.analysis.function.Cbrt.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6.value(double) org.apache.commons.math3.analysis.function.Tan.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6.value(double) org.apache.commons.math3.analysis.function.HarmonicOscillator.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6.value(double) org.apache.commons.math3.analysis.FunctionUtils$6.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6.value(double) org.apache.commons.math3.analysis.function.Asinh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6.value(double) org.apache.commons.math3.analysis.function.Minus.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6.value(double) org.apache.commons.math3.analysis.function.Tanh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6.value(double) org.apache.commons.math3.analysis.FunctionUtils$9.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6.value(double) org.apache.commons.math3.analysis.function.Sinc.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6.value(double) org.apache.commons.math3.analysis.function.Log1p.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6.value(double) org.apache.commons.math3.analysis.function.Sin.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6.value(double) org.apache.commons.math3.analysis.function.Atanh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6.value(double) org.apache.commons.math3.analysis.function.Cos.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6.value(double) org.apache.commons.math3.analysis.function.Identity.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6.value(double) org.apache.commons.math3.analysis.FunctionUtils$3.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6.value(double) org.apache.commons.math3.analysis.function.Log.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6.value(double) org.apache.commons.math3.analysis.function.Exp.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6.value(double) org.apache.commons.math3.analysis.function.Sigmoid.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6.value(double) org.apache.commons.math3.analysis.function.Logit.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6.value(double) org.apache.commons.math3.analysis.function.Acosh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6.value(double) org.apache.commons.math3.analysis.function.Inverse.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6.value(double) org.apache.commons.math3.analysis.function.Log10.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6.value(double) org.apache.commons.math3.analysis.FunctionUtils$14.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6.value(double) org.apache.commons.math3.analysis.function.Atan.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6.value(double) org.apache.commons.math3.analysis.function.Constant.value(double)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.pow(double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.pow(double) org.apache.commons.math3.analysis.differentiation.DSCompiler.pow(double[],int,double,double[],int)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.pow(double) org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DSCompiler)
org.apache.commons.math3.geometry.euclidean.threed.SubPlane.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(org.apache.commons.math3.geometry.partitioning.BSPTree)
org.apache.commons.math3.geometry.euclidean.threed.SubPlane.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.threed.Line.toSpace(org.apache.commons.math3.geometry.Vector)
org.apache.commons.math3.geometry.euclidean.threed.SubPlane.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.partitioning.BSPTree.getMinus()
org.apache.commons.math3.geometry.euclidean.threed.SubPlane.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.partitioning.BSPTree.split(org.apache.commons.math3.geometry.partitioning.SubHyperplane)
org.apache.commons.math3.geometry.euclidean.threed.SubPlane.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.threed.Plane.intersection(org.apache.commons.math3.geometry.euclidean.threed.Plane)
org.apache.commons.math3.geometry.euclidean.threed.SubPlane.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.partitioning.AbstractRegion.getTree(boolean)
org.apache.commons.math3.geometry.euclidean.threed.SubPlane.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.threed.SubPlane.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.twod.Line(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)
org.apache.commons.math3.geometry.euclidean.threed.SubPlane.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.threed.SubPlane(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region)
org.apache.commons.math3.geometry.euclidean.threed.SubPlane.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.threed.Line.getDirection()
org.apache.commons.math3.geometry.euclidean.threed.SubPlane.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.getHyperplane()
org.apache.commons.math3.geometry.euclidean.threed.SubPlane.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.partitioning.BSPTree(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,java.lang.Object)
org.apache.commons.math3.geometry.euclidean.threed.SubPlane.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.SubHyperplane)
org.apache.commons.math3.geometry.euclidean.threed.SubPlane.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.threed.Plane.copySelf()
org.apache.commons.math3.geometry.euclidean.threed.SubPlane.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.getRemainingRegion()
org.apache.commons.math3.geometry.euclidean.threed.SubPlane.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.threed.Plane.toSubSpace(org.apache.commons.math3.geometry.Vector)
org.apache.commons.math3.geometry.euclidean.threed.SubPlane.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) java.lang.Boolean.clinit()
org.apache.commons.math3.geometry.euclidean.threed.SubPlane.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.threed.Vector3D.crossProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
org.apache.commons.math3.geometry.euclidean.threed.SubPlane.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.twod.Line.wholeHyperplane()
org.apache.commons.math3.geometry.euclidean.threed.SubPlane.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.threed.Plane.getNormal()
org.apache.commons.math3.geometry.euclidean.threed.SubPlane.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.threed.Vector3D.dotProduct(org.apache.commons.math3.geometry.Vector)
org.apache.commons.math3.geometry.euclidean.threed.SubPlane.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.threed.Plane.getOffset(org.apache.commons.math3.geometry.euclidean.threed.Plane)
org.apache.commons.math3.geometry.euclidean.threed.SubPlane.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.threed.Vector3D.clinit()
org.apache.commons.math3.geometry.euclidean.threed.SubPlane.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.partitioning.AbstractRegion.isEmpty(org.apache.commons.math3.geometry.partitioning.BSPTree)
org.apache.commons.math3.geometry.euclidean.threed.SubPlane.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.partitioning.BSPTree(java.lang.Object)
org.apache.commons.math3.geometry.euclidean.threed.SubPlane.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.partitioning.BSPTree.getPlus()
org.apache.commons.math3.geometry.euclidean.threed.SubPlane.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.oned.Vector1D.clinit()
org.apache.commons.math3.analysis.function.Atanh.derivative() org.apache.commons.math3.analysis.function.Cbrt.derivative()
org.apache.commons.math3.analysis.function.Atanh.derivative() org.apache.commons.math3.analysis.function.Minus.derivative()
org.apache.commons.math3.analysis.function.Atanh.derivative() org.apache.commons.math3.analysis.function.Tanh.derivative()
org.apache.commons.math3.analysis.function.Atanh.derivative() org.apache.commons.math3.analysis.FunctionUtils.toDifferentiableUnivariateFunction(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction)
org.apache.commons.math3.analysis.function.Atanh.derivative() org.apache.commons.math3.analysis.function.Expm1.derivative()
org.apache.commons.math3.analysis.function.Atanh.derivative() org.apache.commons.math3.analysis.function.Power.derivative()
org.apache.commons.math3.analysis.function.Atanh.derivative() org.apache.commons.math3.analysis.function.Logit.derivative()
org.apache.commons.math3.analysis.function.Atanh.derivative() org.apache.commons.math3.analysis.function.Sinc.derivative()
org.apache.commons.math3.analysis.function.Atanh.derivative() org.apache.commons.math3.analysis.function.Constant.derivative()
org.apache.commons.math3.analysis.function.Atanh.derivative() org.apache.commons.math3.analysis.function.Log10.derivative()
org.apache.commons.math3.analysis.function.Atanh.derivative() org.apache.commons.math3.analysis.function.Sigmoid.derivative()
org.apache.commons.math3.analysis.function.Atanh.derivative() org.apache.commons.math3.analysis.function.Acosh.derivative()
org.apache.commons.math3.analysis.function.Atanh.derivative() org.apache.commons.math3.analysis.function.Exp.derivative()
org.apache.commons.math3.analysis.function.Atanh.derivative() org.apache.commons.math3.analysis.function.Sinh.derivative()
org.apache.commons.math3.analysis.function.Atanh.derivative() java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Atanh.derivative() org.apache.commons.math3.analysis.polynomials.PolynomialFunction.derivative()
org.apache.commons.math3.analysis.function.Atanh.derivative() org.apache.commons.math3.analysis.function.Gaussian.derivative()
org.apache.commons.math3.analysis.function.Atanh.derivative() org.apache.commons.math3.analysis.function.Atanh.derivative()
org.apache.commons.math3.analysis.function.Atanh.derivative() org.apache.commons.math3.analysis.function.Sqrt.derivative()
org.apache.commons.math3.analysis.function.Atanh.derivative() org.apache.commons.math3.analysis.FunctionUtils$3.derivative()
org.apache.commons.math3.analysis.function.Atanh.derivative() org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.derivative()
org.apache.commons.math3.analysis.function.Atanh.derivative() org.apache.commons.math3.analysis.function.Log1p.derivative()
org.apache.commons.math3.analysis.function.Atanh.derivative() org.apache.commons.math3.analysis.function.Asin.derivative()
org.apache.commons.math3.analysis.function.Atanh.derivative() org.apache.commons.math3.analysis.function.Cos.derivative()
org.apache.commons.math3.analysis.function.Atanh.derivative() org.apache.commons.math3.analysis.function.Asinh.derivative()
org.apache.commons.math3.analysis.function.Atanh.derivative() org.apache.commons.math3.analysis.function.Tan.derivative()
org.apache.commons.math3.analysis.function.Atanh.derivative() org.apache.commons.math3.analysis.FunctionUtils$6.derivative()
org.apache.commons.math3.analysis.function.Atanh.derivative() org.apache.commons.math3.analysis.function.Log.derivative()
org.apache.commons.math3.analysis.function.Atanh.derivative() org.apache.commons.math3.analysis.function.Atan.derivative()
org.apache.commons.math3.analysis.function.Atanh.derivative() org.apache.commons.math3.analysis.function.Acos.derivative()
org.apache.commons.math3.analysis.function.Atanh.derivative() org.apache.commons.math3.analysis.FunctionUtils$14.derivative()
org.apache.commons.math3.analysis.function.Atanh.derivative() org.apache.commons.math3.analysis.function.Identity.derivative()
org.apache.commons.math3.analysis.function.Atanh.derivative() org.apache.commons.math3.analysis.function.Cosh.derivative()
org.apache.commons.math3.analysis.function.Atanh.derivative() org.apache.commons.math3.analysis.FunctionUtils$9.derivative()
org.apache.commons.math3.analysis.function.Atanh.derivative() org.apache.commons.math3.analysis.function.Logistic.derivative()
org.apache.commons.math3.analysis.function.Atanh.derivative() org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative()
org.apache.commons.math3.analysis.function.Atanh.derivative() org.apache.commons.math3.analysis.function.Inverse.derivative()
org.apache.commons.math3.analysis.function.Atanh.derivative() org.apache.commons.math3.analysis.function.Sin.derivative()
org.apache.commons.math3.stat.descriptive.moment.Variance() org.apache.commons.math3.stat.descriptive.moment.SecondMoment()
org.apache.commons.math3.stat.descriptive.moment.Variance() java.lang.Object.clinit()
org.apache.commons.math3.stat.descriptive.moment.Variance() org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.sinh() java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.sinh() org.apache.commons.math3.analysis.differentiation.DSCompiler.sinh(double[],int,double[],int)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.sinh() org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DSCompiler)
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex.compareTo(java.lang.Object) org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex.compareTo(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex)
org.apache.commons.math3.geometry.euclidean.twod.Line(double,double,double,double) java.lang.Object()
org.apache.commons.math3.analysis.function.Logit$Parametric.value(double,double[]) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Logit$Parametric.value(double,double[]) org.apache.commons.math3.analysis.function.Logit.access$000(double,double,double)
org.apache.commons.math3.analysis.function.Logit$Parametric.value(double,double[]) org.apache.commons.math3.analysis.function.Logit$Parametric.validateParameters(double[])
org.apache.commons.math3.fraction.Fraction(double,double,int,int) org.apache.commons.math3.util.FastMath.abs(long)
org.apache.commons.math3.fraction.Fraction(double,double,int,int) java.lang.Object.clinit()
org.apache.commons.math3.fraction.Fraction(double,double,int,int) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.fraction.Fraction(double,double,int,int) org.apache.commons.math3.util.FastMath.floor(double)
org.apache.commons.math3.fraction.Fraction(double,double,int,int) java.lang.Throwable.clinit()
org.apache.commons.math3.fraction.Fraction(double,double,int,int) org.apache.commons.math3.fraction.FractionConversionException(double,int)
org.apache.commons.math3.fraction.Fraction(double,double,int,int) org.apache.commons.math3.fraction.FractionConversionException(double,long,long)
org.apache.commons.math3.fraction.Fraction(double,double,int,int) java.lang.Number()
org.apache.commons.math3.fraction.Fraction(double,double,int,int) org.apache.commons.math3.util.FastMath.abs(double)
org.apache.commons.math3.analysis.FunctionUtils.fix2ndArgument(org.apache.commons.math3.analysis.BivariateFunction,double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.FunctionUtils.fix2ndArgument(org.apache.commons.math3.analysis.BivariateFunction,double) org.apache.commons.math3.analysis.FunctionUtils$13(org.apache.commons.math3.analysis.BivariateFunction,double)
org.apache.commons.math3.analysis.differentiation.DSCompiler.exp(double[],int,double[],int) java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.exp(double[],int,double[],int) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.exp(double[],int,double[],int) java.util.Arrays.fill(double[],double)
org.apache.commons.math3.analysis.differentiation.DSCompiler.exp(double[],int,double[],int) org.apache.commons.math3.analysis.differentiation.DSCompiler.compose(double[],int,double[],double[],int)
org.apache.commons.math3.analysis.differentiation.DSCompiler.exp(double[],int,double[],int) org.apache.commons.math3.util.FastMath.exp(double)
org.apache.commons.math3.analysis.differentiation.DSCompiler.exp(double[],int,double[],int) java.util.Arrays.clinit()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node(org.apache.commons.math3.geometry.partitioning.utilities.AVLTree,java.lang.Comparable,org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node) java.lang.Object.clinit()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node(org.apache.commons.math3.geometry.partitioning.utilities.AVLTree,java.lang.Comparable,org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node) org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.clinit()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node(org.apache.commons.math3.geometry.partitioning.utilities.AVLTree,java.lang.Comparable,org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node) java.lang.Object()
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.toString() org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getMax()
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.toString() org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getN()
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.toString() org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getStandardDeviation()
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.toString() org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getSkewness()
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.toString() org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getPercentile(double)
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.toString() org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getKurtosis()
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.toString() java.lang.StringBuilder.append(long)
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.toString() java.lang.StringBuilder.toString()
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.toString() org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getMean()
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.toString() org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics.getN()
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.toString() java.lang.Object.clinit()
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.toString() org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getMin()
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.toString() java.lang.StringBuilder.append(double)
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.toString() java.lang.StringBuilder()
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.toString() org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics.getStandardDeviation()
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.toString() java.lang.StringBuilder.append(java.lang.String)
org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.clone(org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix) org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.set(org.apache.commons.math3.complex.Complex,int[])
org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.clone(org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix) java.lang.Object.clinit()
org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.clone(org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix) java.lang.System.arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.clone(org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix) org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.get(int[])
org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.clone(org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix) java.lang.System.clinit()
org.apache.commons.math3.geometry.partitioning.AbstractRegion$1.compare(java.lang.Object,java.lang.Object) org.apache.commons.math3.geometry.partitioning.AbstractRegion$1.compare(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.SubHyperplane)
org.apache.commons.math3.util.FastMath$CodyWaite(double) java.lang.Object()
org.apache.commons.math3.exception.MaxCountExceededException(java.lang.Number) java.lang.Object.clinit()
org.apache.commons.math3.exception.MaxCountExceededException(java.lang.Number) org.apache.commons.math3.exception.MaxCountExceededException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])
org.apache.commons.math3.exception.MaxCountExceededException(java.lang.Number) org.apache.commons.math3.exception.util.LocalizedFormats.clinit()
org.apache.commons.math3.ode.events.EventFilter.g(double,double[]) org.apache.commons.math3.ode.events.Transformer$5.transformed(double)
org.apache.commons.math3.ode.events.EventFilter.g(double,double[]) java.lang.Object.clinit()
org.apache.commons.math3.ode.events.EventFilter.g(double,double[]) org.apache.commons.math3.ode.events.FilterType$2.selectTransformer(org.apache.commons.math3.ode.events.Transformer,double,boolean)
org.apache.commons.math3.ode.events.EventFilter.g(double,double[]) org.apache.commons.math3.ode.events.Transformer$4.transformed(double)
org.apache.commons.math3.ode.events.EventFilter.g(double,double[]) org.apache.commons.math3.ode.events.Transformer$1.transformed(double)
org.apache.commons.math3.ode.events.EventFilter.g(double,double[]) org.apache.commons.math3.ode.events.Transformer$3.transformed(double)
org.apache.commons.math3.ode.events.EventFilter.g(double,double[]) java.lang.System.arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org.apache.commons.math3.ode.events.EventFilter.g(double,double[]) org.apache.commons.math3.ode.events.EventFilter.g(double,double[])
org.apache.commons.math3.ode.events.EventFilter.g(double,double[]) org.apache.commons.math3.ode.events.Transformer$2.transformed(double)
org.apache.commons.math3.ode.events.EventFilter.g(double,double[]) org.apache.commons.math3.ode.events.FilterType$1.selectTransformer(org.apache.commons.math3.ode.events.Transformer,double,boolean)
org.apache.commons.math3.ode.events.EventFilter.g(double,double[]) java.lang.System.clinit()
org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.hasNext() org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.hasNext()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() sun.text.CompactByteArray.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.awt.geom.AffineTransform.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() sun.security.krb5.internal.KerberosTime.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.util.Hashtable.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() sun.security.krb5.internal.Ticket.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() sun.text.IntHashtable.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() sun.security.util.BitArray.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() com.sun.imageio.plugins.jpeg.DHTMarkerSegment$Htable.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.util.SimpleTimeZone.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.util.IdentityHashMap.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.util.JapaneseImperialCalendar.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() sun.security.krb5.internal.ETypeInfo.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() sun.text.normalizer.NormalizerBase.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.util.Locale.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() sun.security.krb5.internal.TicketFlags.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() sun.java2d.SunGraphics2D.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() sun.security.provider.MD4.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() javax.swing.tree.DefaultTreeSelectionModel.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.awt.print.Paper.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.text.MessageFormat.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.lang.Object.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() javax.swing.text.SimpleAttributeSet.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() javax.swing.ArrayTable.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.text.SimpleDateFormat.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() sun.java2d.loops.FontInfo.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() sun.security.krb5.PrincipalName.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.awt.PageAttributes.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() com.sun.imageio.plugins.png.PNGMetadata.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.util.GregorianCalendar.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() com.sun.imageio.plugins.jpeg.SOFMarkerSegment.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.util.Vector.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() javax.swing.text.ElementIterator.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.net.HttpCookie.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.awt.datatransfer.MimeType.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.awt.RenderingHints.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.text.DateFormatSymbols.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.util.HashSet.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() sun.util.calendar.ImmutableGregorianDate.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() javax.sound.midi.MetaMessage.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() sun.font.FontLineMetrics.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() sun.font.StandardGlyphVector.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.text.AttributedString$AttributedStringIterator.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.text.RuleBasedBreakIterator.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() javax.swing.text.Segment.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.awt.ImageCapabilities.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() sun.security.krb5.internal.LastReqEntry.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() javax.swing.text.StyleContext$SmallAttributeSet.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.text.RuleBasedCollator.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.text.RuleBasedBreakIterator$SafeCharIterator.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() javax.swing.text.ElementIterator$StackItem.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$ICCMarkerSegment.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.awt.geom.Line2D.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.util.ResourceBundle$CacheKey.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumbJPEG.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() sun.security.krb5.internal.ETypeInfo2.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.awt.font.TextMeasurer.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.util.LinkedList.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() sun.font.AttributeValues.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() javax.swing.text.StyledEditorKit$1.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.util.ArrayDeque.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() javax.swing.text.GlyphView.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.awt.datatransfer.DataFlavor.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() sun.security.krb5.internal.PAData.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() javax.swing.AbstractAction.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() sun.text.normalizer.ReplaceableUCharacterIterator.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.util.concurrent.CopyOnWriteArrayList.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumb.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.awt.geom.Point2D.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() javax.swing.text.html.OptionListModel.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() sun.security.krb5.internal.AuthorizationDataEntry.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() javax.swing.text.EditorKit.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() javax.swing.text.StyledEditorKit.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() com.sun.imageio.plugins.jpeg.DQTMarkerSegment.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.util.JumboEnumSet.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() sun.security.krb5.internal.HostAddresses.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() javax.crypto.Mac.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() javax.naming.Reference.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() com.sun.imageio.plugins.jpeg.SOSMarkerSegment.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.util.jar.Manifest.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() sun.security.krb5.EncryptedData.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.text.NumberFormat.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() sun.net.ProgressSource.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.util.EnumSet.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() sun.net.www.protocol.http.AuthenticationInfo.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.awt.datatransfer.MimeTypeParameterList.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.clinit()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.util.regex.Pattern$CharPropertyNames$CloneableProperty.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.security.SignatureSpi.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() sun.security.x509.GeneralSubtrees.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.util.ArrayList.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() com.sun.imageio.plugins.jpeg.DHTMarkerSegment.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() javax.naming.CompositeName.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.awt.font.CharArrayIterator.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.security.Signature$Delegate.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.util.TreeSet.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.util.Hashtable$Entry.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.awt.image.ImageFilter.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() com.sun.imageio.plugins.jpeg.SOSMarkerSegment$ScanComponentSpec.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.awt.geom.Path2D$Float.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() sun.security.krb5.EncryptionKey.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.text.DecimalFormat.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.awt.BufferCapabilities.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.awt.image.Kernel.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.util.Date.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.awt.Insets.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() sun.net.www.MimeEntry.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() sun.util.calendar.CalendarDate.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.awt.print.PageFormat.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() com.sun.imageio.plugins.jpeg.SOFMarkerSegment$ComponentSpec.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.util.EnumMap.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() sun.security.krb5.internal.AuthorizationData.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFExtensionMarkerSegment.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.awt.geom.QuadCurve2D.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() sun.security.krb5.internal.crypto.crc32.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.util.zip.ZipEntry.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.security.MessageDigest$Delegate.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() sun.util.calendar.ZoneInfo.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() sun.text.normalizer.CharacterIteratorWrapper.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.lang.Object.clinit()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.text.DecimalFormatSymbols.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.awt.font.TextLayout.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() javax.swing.DefaultListSelectionModel.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.text.DigitList.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() javax.print.attribute.EnumSyntax.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() javax.sound.midi.ShortMessage.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.awt.geom.CubicCurve2D.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.text.ChoiceFormat.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.lang.Thread.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() com.sun.imageio.plugins.jpeg.MarkerSegment.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.awt.image.renderable.RenderContext.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() sun.security.krb5.Realm.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() com.sun.imageio.plugins.jpeg.DQTMarkerSegment$Qtable.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.awt.JobAttributes.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() com.sun.imageio.plugins.jpeg.JPEGMetadata.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.text.StringCharacterIterator.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.awt.geom.Dimension2D.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() sun.security.x509.NameConstraintsExtension.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.awt.geom.Area.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.util.jar.Attributes.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() sun.security.krb5.internal.HostAddress.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.util.TreeMap.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.awt.geom.Path2D$Double.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.text.BreakIterator.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.util.BitSet.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.lang.Enum.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.util.AbstractMap.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() javax.swing.tree.DefaultMutableTreeNode.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.awt.geom.RectangularShape.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() sun.security.provider.PolicyParser$GrantEntry.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() java.util.HashMap.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.clone()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values() javax.swing.text.html.HTMLEditorKit.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.followLoop(org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node,org.apache.commons.math3.geometry.partitioning.utilities.AVLTree) java.util.ArrayList.clinit()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.followLoop(org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node,org.apache.commons.math3.geometry.partitioning.utilities.AVLTree) java.util.ArrayList.size()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.followLoop(org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node,org.apache.commons.math3.geometry.partitioning.utilities.AVLTree) java.lang.Throwable.clinit()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.followLoop(org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node,org.apache.commons.math3.geometry.partitioning.utilities.AVLTree) org.apache.commons.math3.geometry.euclidean.twod.Segment.getEnd()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.followLoop(org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node,org.apache.commons.math3.geometry.partitioning.utilities.AVLTree) java.util.ArrayList.add(java.lang.Object)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.followLoop(org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node,org.apache.commons.math3.geometry.partitioning.utilities.AVLTree) org.apache.commons.math3.geometry.euclidean.twod.Vector2D.distance(org.apache.commons.math3.geometry.Vector)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.followLoop(org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node,org.apache.commons.math3.geometry.partitioning.utilities.AVLTree) org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.getNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.followLoop(org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node,org.apache.commons.math3.geometry.partitioning.utilities.AVLTree) org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.delete()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.followLoop(org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node,org.apache.commons.math3.geometry.partitioning.utilities.AVLTree) java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.followLoop(org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node,org.apache.commons.math3.geometry.partitioning.utilities.AVLTree) org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ComparableSegment(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double,double)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.followLoop(org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node,org.apache.commons.math3.geometry.partitioning.utilities.AVLTree) org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(java.lang.Comparable)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.followLoop(org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node,org.apache.commons.math3.geometry.partitioning.utilities.AVLTree) org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ComparableSegment.compareTo(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ComparableSegment)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.followLoop(org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node,org.apache.commons.math3.geometry.partitioning.utilities.AVLTree) java.util.ArrayList()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.followLoop(org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node,org.apache.commons.math3.geometry.partitioning.utilities.AVLTree) org.apache.commons.math3.exception.MathInternalError()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.followLoop(org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node,org.apache.commons.math3.geometry.partitioning.utilities.AVLTree) org.apache.commons.math3.geometry.euclidean.twod.Segment.getStart()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.followLoop(org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node,org.apache.commons.math3.geometry.partitioning.utilities.AVLTree) org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.getElement()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.rebalanceLeftGrown() java.lang.Object.clinit()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.rebalanceLeftGrown() java.lang.Enum.ordinal()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.rebalanceLeftGrown() org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.rotateCW()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.rebalanceLeftGrown() org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.clinit()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.rebalanceLeftGrown() org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.rotateCCW()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.rebalanceLeftGrown() org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$1.clinit()
org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint.side(org.apache.commons.math3.geometry.partitioning.Hyperplane) java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint.side(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.partitioning.Side.clinit()
org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint.side(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.twod.Line.getOffset(org.apache.commons.math3.geometry.Vector)
org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint.side(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.getLocation()
org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint.side(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.getHyperplane()
org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint.side(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.getOffset(org.apache.commons.math3.geometry.Vector)
org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint.side(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.threed.Plane.getOffset(org.apache.commons.math3.geometry.Vector)
org.apache.commons.math3.stat.clustering.EuclideanIntegerPoint.toString() java.lang.Object.clinit()
org.apache.commons.math3.stat.clustering.EuclideanIntegerPoint.toString() java.util.Arrays.toString(int[])
org.apache.commons.math3.stat.clustering.EuclideanIntegerPoint.toString() java.util.Arrays.clinit()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.cos() java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.cos() org.apache.commons.math3.analysis.differentiation.DSCompiler.cos(double[],int,double[],int)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.cos() org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DSCompiler)
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.toString() org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getMean()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.toString() org.apache.commons.math3.linear.AbstractRealMatrix.toString()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.toString() java.lang.Object.toString()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.toString() java.lang.StringBuilder.append(long)
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.toString() org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getMax()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.toString() org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getSumLog()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.toString() java.lang.System.clinit()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.toString() org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.append(java.lang.StringBuilder,double[],java.lang.String,java.lang.String,java.lang.String)
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.toString() java.lang.Object.clinit()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.toString() java.lang.StringBuilder()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.toString() org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getSumLog()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.toString() org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getCovariance()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.toString() org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getN()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.toString() org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getGeometricMean()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.toString() org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getGeometricMean()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.toString() org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getCovariance()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.toString() org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getSumSq()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.toString() org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getMin()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.toString() java.lang.StringBuilder.toString()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.toString() org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getMin()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.toString() java.lang.System.getProperty(java.lang.String)
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.toString() org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getMax()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.toString() org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getMean()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.toString() org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getSumSq()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.toString() org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getStandardDeviation()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.toString() java.lang.StringBuilder.append(java.lang.String)
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.toString() org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getN()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.toString() org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getStandardDeviation()
org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator.readExternal(java.io.ObjectInput) org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.setInterpolatedTime(double)
org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator.readExternal(java.io.ObjectInput) java.io.ObjectInputStream.readObject()
org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator.readExternal(java.io.ObjectInput) java.io.ObjectInputStream.readDouble()
org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator.readExternal(java.io.ObjectInput) org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.readBaseExternal(java.io.ObjectInput)
org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator.readExternal(java.io.ObjectInput) java.io.ObjectInputStream.readBoolean()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getStandardDeviation() java.lang.Object.clinit()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getStandardDeviation() org.apache.commons.math3.util.FastMath.sqrt(double)
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getStandardDeviation() org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getStandardDeviation() org.apache.commons.math3.stat.descriptive.SummaryStatistics.getVariance()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getStandardDeviation() org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getN()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getStandardDeviation() org.apache.commons.math3.stat.descriptive.SummaryStatistics.getN()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getStandardDeviation() org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getVariance()
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction.value(double,double) org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction.value(double,double)
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction.value(double,double) org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction.searchIndex(double,double[])
org.apache.commons.math3.linear.AbstractRealMatrix.equals(java.lang.Object) org.apache.commons.math3.linear.OpenMapRealMatrix.getEntry(int,int)
org.apache.commons.math3.linear.AbstractRealMatrix.equals(java.lang.Object) org.apache.commons.math3.linear.BlockRealMatrix.getEntry(int,int)
org.apache.commons.math3.linear.AbstractRealMatrix.equals(java.lang.Object) org.apache.commons.math3.linear.BlockRealMatrix.getColumnDimension()
org.apache.commons.math3.linear.AbstractRealMatrix.equals(java.lang.Object) org.apache.commons.math3.linear.BlockRealMatrix.getRowDimension()
org.apache.commons.math3.linear.AbstractRealMatrix.equals(java.lang.Object) org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry(int,int)
org.apache.commons.math3.linear.AbstractRealMatrix.equals(java.lang.Object) org.apache.commons.math3.linear.DiagonalMatrix.getEntry(int,int)
org.apache.commons.math3.linear.AbstractRealMatrix.equals(java.lang.Object) org.apache.commons.math3.linear.OpenMapRealMatrix.getRowDimension()
org.apache.commons.math3.linear.AbstractRealMatrix.equals(java.lang.Object) org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension()
org.apache.commons.math3.linear.AbstractRealMatrix.equals(java.lang.Object) org.apache.commons.math3.linear.DiagonalMatrix.getRowDimension()
org.apache.commons.math3.linear.AbstractRealMatrix.equals(java.lang.Object) org.apache.commons.math3.linear.OpenMapRealMatrix.getColumnDimension()
org.apache.commons.math3.linear.AbstractRealMatrix.equals(java.lang.Object) org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension()
org.apache.commons.math3.linear.AbstractRealMatrix.equals(java.lang.Object) org.apache.commons.math3.linear.DiagonalMatrix.getColumnDimension()
org.apache.commons.math3.exception.NotStrictlyPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number) java.lang.Object.clinit()
org.apache.commons.math3.exception.NotStrictlyPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number) org.apache.commons.math3.exception.NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)
org.apache.commons.math3.exception.NotStrictlyPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number) java.lang.Throwable.clinit()
org.apache.commons.math3.exception.NotStrictlyPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.analysis.function.Gaussian.value(double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Gaussian.value(double) org.apache.commons.math3.analysis.function.Gaussian.value(double,double,double)
org.apache.commons.math3.linear.AbstractFieldMatrix.checkColumnIndex(int) org.apache.commons.math3.exception.OutOfRangeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number)
org.apache.commons.math3.linear.AbstractFieldMatrix.checkColumnIndex(int) org.apache.commons.math3.linear.SparseFieldMatrix.getColumnDimension()
org.apache.commons.math3.linear.AbstractFieldMatrix.checkColumnIndex(int) java.lang.Object.clinit()
org.apache.commons.math3.linear.AbstractFieldMatrix.checkColumnIndex(int) java.lang.Throwable.clinit()
org.apache.commons.math3.linear.AbstractFieldMatrix.checkColumnIndex(int) java.lang.Integer.clinit()
org.apache.commons.math3.linear.AbstractFieldMatrix.checkColumnIndex(int) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.linear.AbstractFieldMatrix.checkColumnIndex(int) org.apache.commons.math3.linear.Array2DRowFieldMatrix.getColumnDimension()
org.apache.commons.math3.linear.AbstractFieldMatrix.checkColumnIndex(int) org.apache.commons.math3.exception.util.LocalizedFormats.clinit()
org.apache.commons.math3.linear.AbstractFieldMatrix.checkColumnIndex(int) org.apache.commons.math3.linear.BlockFieldMatrix.getColumnDimension()
org.apache.commons.math3.linear.AbstractFieldMatrix.checkColumnIndex(int) java.lang.Integer.valueOf(int)
org.apache.commons.math3.linear.DiagonalMatrix.ensureZero(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.linear.DiagonalMatrix.ensureZero(double) java.lang.Object.clinit()
org.apache.commons.math3.linear.DiagonalMatrix.ensureZero(double) org.apache.commons.math3.util.Precision.equals(double,double,int)
org.apache.commons.math3.linear.DiagonalMatrix.ensureZero(double) org.apache.commons.math3.exception.NumberIsTooLargeException(java.lang.Number,java.lang.Number,boolean)
org.apache.commons.math3.linear.DiagonalMatrix.ensureZero(double) java.lang.Double.valueOf(double)
org.apache.commons.math3.linear.DiagonalMatrix.ensureZero(double) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.linear.DiagonalMatrix.ensureZero(double) java.lang.Throwable.clinit()
org.apache.commons.math3.linear.DiagonalMatrix.ensureZero(double) java.lang.Integer.clinit()
org.apache.commons.math3.linear.DiagonalMatrix.ensureZero(double) org.apache.commons.math3.util.Precision.clinit()
org.apache.commons.math3.linear.DiagonalMatrix.ensureZero(double) java.lang.Double.clinit()
org.apache.commons.math3.linear.DiagonalMatrix.ensureZero(double) java.lang.Integer.valueOf(int)
org.apache.commons.math3.linear.DiagonalMatrix.ensureZero(double) org.apache.commons.math3.util.FastMath.abs(double)
org.apache.commons.math3.analysis.function.Sqrt.derivative() org.apache.commons.math3.analysis.function.Cbrt.derivative()
org.apache.commons.math3.analysis.function.Sqrt.derivative() org.apache.commons.math3.analysis.function.Minus.derivative()
org.apache.commons.math3.analysis.function.Sqrt.derivative() org.apache.commons.math3.analysis.function.Tanh.derivative()
org.apache.commons.math3.analysis.function.Sqrt.derivative() org.apache.commons.math3.analysis.FunctionUtils.toDifferentiableUnivariateFunction(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction)
org.apache.commons.math3.analysis.function.Sqrt.derivative() org.apache.commons.math3.analysis.function.Expm1.derivative()
org.apache.commons.math3.analysis.function.Sqrt.derivative() org.apache.commons.math3.analysis.function.Power.derivative()
org.apache.commons.math3.analysis.function.Sqrt.derivative() org.apache.commons.math3.analysis.function.Logit.derivative()
org.apache.commons.math3.analysis.function.Sqrt.derivative() org.apache.commons.math3.analysis.function.Sinc.derivative()
org.apache.commons.math3.analysis.function.Sqrt.derivative() org.apache.commons.math3.analysis.function.Constant.derivative()
org.apache.commons.math3.analysis.function.Sqrt.derivative() org.apache.commons.math3.analysis.function.Log10.derivative()
org.apache.commons.math3.analysis.function.Sqrt.derivative() org.apache.commons.math3.analysis.function.Sigmoid.derivative()
org.apache.commons.math3.analysis.function.Sqrt.derivative() org.apache.commons.math3.analysis.function.Acosh.derivative()
org.apache.commons.math3.analysis.function.Sqrt.derivative() org.apache.commons.math3.analysis.function.Exp.derivative()
org.apache.commons.math3.analysis.function.Sqrt.derivative() org.apache.commons.math3.analysis.function.Sinh.derivative()
org.apache.commons.math3.analysis.function.Sqrt.derivative() java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Sqrt.derivative() org.apache.commons.math3.analysis.polynomials.PolynomialFunction.derivative()
org.apache.commons.math3.analysis.function.Sqrt.derivative() org.apache.commons.math3.analysis.function.Gaussian.derivative()
org.apache.commons.math3.analysis.function.Sqrt.derivative() org.apache.commons.math3.analysis.function.Atanh.derivative()
org.apache.commons.math3.analysis.function.Sqrt.derivative() org.apache.commons.math3.analysis.function.Sqrt.derivative()
org.apache.commons.math3.analysis.function.Sqrt.derivative() org.apache.commons.math3.analysis.FunctionUtils$3.derivative()
org.apache.commons.math3.analysis.function.Sqrt.derivative() org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.derivative()
org.apache.commons.math3.analysis.function.Sqrt.derivative() org.apache.commons.math3.analysis.function.Log1p.derivative()
org.apache.commons.math3.analysis.function.Sqrt.derivative() org.apache.commons.math3.analysis.function.Asin.derivative()
org.apache.commons.math3.analysis.function.Sqrt.derivative() org.apache.commons.math3.analysis.function.Cos.derivative()
org.apache.commons.math3.analysis.function.Sqrt.derivative() org.apache.commons.math3.analysis.function.Asinh.derivative()
org.apache.commons.math3.analysis.function.Sqrt.derivative() org.apache.commons.math3.analysis.function.Tan.derivative()
org.apache.commons.math3.analysis.function.Sqrt.derivative() org.apache.commons.math3.analysis.FunctionUtils$6.derivative()
org.apache.commons.math3.analysis.function.Sqrt.derivative() org.apache.commons.math3.analysis.function.Log.derivative()
org.apache.commons.math3.analysis.function.Sqrt.derivative() org.apache.commons.math3.analysis.function.Atan.derivative()
org.apache.commons.math3.analysis.function.Sqrt.derivative() org.apache.commons.math3.analysis.function.Acos.derivative()
org.apache.commons.math3.analysis.function.Sqrt.derivative() org.apache.commons.math3.analysis.FunctionUtils$14.derivative()
org.apache.commons.math3.analysis.function.Sqrt.derivative() org.apache.commons.math3.analysis.function.Identity.derivative()
org.apache.commons.math3.analysis.function.Sqrt.derivative() org.apache.commons.math3.analysis.function.Cosh.derivative()
org.apache.commons.math3.analysis.function.Sqrt.derivative() org.apache.commons.math3.analysis.FunctionUtils$9.derivative()
org.apache.commons.math3.analysis.function.Sqrt.derivative() org.apache.commons.math3.analysis.function.Logistic.derivative()
org.apache.commons.math3.analysis.function.Sqrt.derivative() org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative()
org.apache.commons.math3.analysis.function.Sqrt.derivative() org.apache.commons.math3.analysis.function.Inverse.derivative()
org.apache.commons.math3.analysis.function.Sqrt.derivative() org.apache.commons.math3.analysis.function.Sin.derivative()
org.apache.commons.math3.distribution.GammaDistribution.cumulativeProbability(double) org.apache.commons.math3.special.Gamma.regularizedGammaP(double,double)
org.apache.commons.math3.distribution.GammaDistribution.cumulativeProbability(double) java.lang.Object.clinit()
org.apache.commons.math3.distribution.GammaDistribution.cumulativeProbability(double) org.apache.commons.math3.special.Gamma.clinit()
org.apache.commons.math3.geometry.euclidean.twod.Line.toSubSpace(org.apache.commons.math3.geometry.Vector) org.apache.commons.math3.geometry.euclidean.oned.Vector1D(double)
org.apache.commons.math3.geometry.euclidean.twod.Line.toSubSpace(org.apache.commons.math3.geometry.Vector) java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.twod.Line.toSubSpace(org.apache.commons.math3.geometry.Vector) org.apache.commons.math3.geometry.euclidean.twod.Vector2D.getX()
org.apache.commons.math3.geometry.euclidean.twod.Line.toSubSpace(org.apache.commons.math3.geometry.Vector) org.apache.commons.math3.geometry.euclidean.twod.Vector2D.getY()
org.apache.commons.math3.geometry.euclidean.twod.Line.toSubSpace(org.apache.commons.math3.geometry.Vector) org.apache.commons.math3.geometry.euclidean.oned.Vector1D.clinit()
org.apache.commons.math3.stat.descriptive.moment.Skewness.clear() org.apache.commons.math3.stat.descriptive.moment.FourthMoment.clear()
org.apache.commons.math3.stat.descriptive.moment.Skewness.clear() org.apache.commons.math3.stat.descriptive.moment.ThirdMoment.clear()
org.apache.commons.math3.fraction.ProperFractionFormat.parse(java.lang.String,java.text.ParsePosition) java.lang.Float.intValue()
org.apache.commons.math3.fraction.ProperFractionFormat.parse(java.lang.String,java.text.ParsePosition) java.lang.Math.abs(int)
org.apache.commons.math3.fraction.ProperFractionFormat.parse(java.lang.String,java.text.ParsePosition) java.math.BigDecimal.intValue()
org.apache.commons.math3.fraction.ProperFractionFormat.parse(java.lang.String,java.text.ParsePosition) org.apache.commons.math3.fraction.ProperFractionFormat.getWholeFormat()
org.apache.commons.math3.fraction.ProperFractionFormat.parse(java.lang.String,java.text.ParsePosition) org.apache.commons.math3.fraction.BigFractionFormat.parse(java.lang.String,java.text.ParsePosition)
org.apache.commons.math3.fraction.ProperFractionFormat.parse(java.lang.String,java.text.ParsePosition) java.text.ParsePosition.setErrorIndex(int)
org.apache.commons.math3.fraction.ProperFractionFormat.parse(java.lang.String,java.text.ParsePosition) java.math.BigInteger.intValue()
org.apache.commons.math3.fraction.ProperFractionFormat.parse(java.lang.String,java.text.ParsePosition) org.apache.commons.math3.fraction.ProperBigFractionFormat.parse(java.lang.String,java.text.ParsePosition)
org.apache.commons.math3.fraction.ProperFractionFormat.parse(java.lang.String,java.text.ParsePosition) java.text.NumberFormat.clinit()
org.apache.commons.math3.fraction.ProperFractionFormat.parse(java.lang.String,java.text.ParsePosition) java.text.ParsePosition.setIndex(int)
org.apache.commons.math3.fraction.ProperFractionFormat.parse(java.lang.String,java.text.ParsePosition) java.text.DecimalFormat.parse(java.lang.String,java.text.ParsePosition)
org.apache.commons.math3.fraction.ProperFractionFormat.parse(java.lang.String,java.text.ParsePosition) org.apache.commons.math3.util.MathUtils.copySign(int,int)
org.apache.commons.math3.fraction.ProperFractionFormat.parse(java.lang.String,java.text.ParsePosition) java.lang.Object.clinit()
org.apache.commons.math3.fraction.ProperFractionFormat.parse(java.lang.String,java.text.ParsePosition) java.lang.Short.intValue()
org.apache.commons.math3.fraction.ProperFractionFormat.parse(java.lang.String,java.text.ParsePosition) org.apache.commons.math3.fraction.BigFraction.intValue()
org.apache.commons.math3.fraction.ProperFractionFormat.parse(java.lang.String,java.text.ParsePosition) java.util.concurrent.atomic.AtomicLong.intValue()
org.apache.commons.math3.fraction.ProperFractionFormat.parse(java.lang.String,java.text.ParsePosition) java.lang.Math.clinit()
org.apache.commons.math3.fraction.ProperFractionFormat.parse(java.lang.String,java.text.ParsePosition) java.text.ParsePosition.getIndex()
org.apache.commons.math3.fraction.ProperFractionFormat.parse(java.lang.String,java.text.ParsePosition) org.apache.commons.math3.fraction.ProperFractionFormat.parse(java.lang.String,java.text.ParsePosition)
org.apache.commons.math3.fraction.ProperFractionFormat.parse(java.lang.String,java.text.ParsePosition) org.apache.commons.math3.fraction.AbstractFormat.parseNextCharacter(java.lang.String,java.text.ParsePosition)
org.apache.commons.math3.fraction.ProperFractionFormat.parse(java.lang.String,java.text.ParsePosition) org.apache.commons.math3.fraction.AbstractFormat.parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition)
org.apache.commons.math3.fraction.ProperFractionFormat.parse(java.lang.String,java.text.ParsePosition) org.apache.commons.math3.util.Decimal64.intValue()
org.apache.commons.math3.fraction.ProperFractionFormat.parse(java.lang.String,java.text.ParsePosition) java.util.concurrent.atomic.AtomicInteger.intValue()
org.apache.commons.math3.fraction.ProperFractionFormat.parse(java.lang.String,java.text.ParsePosition) java.lang.Byte.intValue()
org.apache.commons.math3.fraction.ProperFractionFormat.parse(java.lang.String,java.text.ParsePosition) java.lang.Long.intValue()
org.apache.commons.math3.fraction.ProperFractionFormat.parse(java.lang.String,java.text.ParsePosition) org.apache.commons.math3.fraction.Fraction(int,int)
org.apache.commons.math3.fraction.ProperFractionFormat.parse(java.lang.String,java.text.ParsePosition) org.apache.commons.math3.fraction.AbstractFormat.getDenominatorFormat()
org.apache.commons.math3.fraction.ProperFractionFormat.parse(java.lang.String,java.text.ParsePosition) org.apache.commons.math3.fraction.AbstractFormat.getNumeratorFormat()
org.apache.commons.math3.fraction.ProperFractionFormat.parse(java.lang.String,java.text.ParsePosition) org.apache.commons.math3.fraction.FractionFormat.parse(java.lang.String,java.text.ParsePosition)
org.apache.commons.math3.fraction.ProperFractionFormat.parse(java.lang.String,java.text.ParsePosition) java.text.ChoiceFormat.parse(java.lang.String,java.text.ParsePosition)
org.apache.commons.math3.fraction.ProperFractionFormat.parse(java.lang.String,java.text.ParsePosition) org.apache.commons.math3.fraction.Fraction.intValue()
org.apache.commons.math3.fraction.ProperFractionFormat.parse(java.lang.String,java.text.ParsePosition) org.apache.commons.math3.fraction.Fraction.clinit()
org.apache.commons.math3.fraction.ProperFractionFormat.parse(java.lang.String,java.text.ParsePosition) java.lang.Double.intValue()
org.apache.commons.math3.fraction.ProperFractionFormat.parse(java.lang.String,java.text.ParsePosition) java.lang.Integer.intValue()
org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator.doFinalize() org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.getGlobalPreviousTime()
org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator.doFinalize() org.apache.commons.math3.ode.AbstractIntegrator.computeDerivatives(double,double[],double[])
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$1.clinit() java.lang.Object.clinit()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$1.clinit() java.lang.Enum.ordinal()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$1.clinit() org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$1.clinit() org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.clinit()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$1.clinit() org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$1.clinit()
org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics.apply(org.apache.commons.math3.stat.descriptive.UnivariateStatistic) org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.apply(org.apache.commons.math3.stat.descriptive.UnivariateStatistic)
org.apache.commons.math3.util.FastMath.log(double) java.lang.Object.clinit()
org.apache.commons.math3.util.FastMath.log(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.util.FastMath.log(double) org.apache.commons.math3.util.FastMath.log(double,double[])
org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.test(double[],int,int) org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.test(double[],int,int,boolean)
org.apache.commons.math3.optimization.direct.SimplexOptimizer$2.compare(java.lang.Object,java.lang.Object) org.apache.commons.math3.optimization.direct.SimplexOptimizer$2.compare(org.apache.commons.math3.optimization.PointValuePair,org.apache.commons.math3.optimization.PointValuePair)
org.apache.commons.math3.geometry.euclidean.twod.Line.wholeHyperplane() org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet()
org.apache.commons.math3.geometry.euclidean.twod.Line.wholeHyperplane() org.apache.commons.math3.geometry.euclidean.twod.Line.wholeHyperplane()
org.apache.commons.math3.geometry.euclidean.twod.Line.wholeHyperplane() java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.twod.Line.wholeHyperplane() org.apache.commons.math3.geometry.euclidean.twod.SubLine(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region)
org.apache.commons.math3.linear.RealVector.equals(java.lang.Object) org.apache.commons.math3.exception.MathUnsupportedOperationException()
org.apache.commons.math3.linear.RealVector.equals(java.lang.Object) java.lang.Object.clinit()
org.apache.commons.math3.linear.RealVector.equals(java.lang.Object) java.lang.Throwable.clinit()
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.access$300(org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet,org.apache.commons.math3.geometry.Vector) org.apache.commons.math3.geometry.partitioning.AbstractRegion.setBarycenter(org.apache.commons.math3.geometry.Vector)
org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance.equals(java.lang.Object) java.util.Arrays.equals(double[],double[])
org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance.equals(java.lang.Object) java.lang.Object.clinit()
org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance.equals(java.lang.Object) java.util.Arrays.clinit()
org.apache.commons.math3.ode.nonstiff.GillStepInterpolator.clinit() java.lang.Object.clinit()
org.apache.commons.math3.ode.nonstiff.GillStepInterpolator.clinit() org.apache.commons.math3.util.FastMath.sqrt(double)
org.apache.commons.math3.ode.nonstiff.GillStepInterpolator.clinit() org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.ode.nonstiff.GillStepInterpolator.clinit() org.apache.commons.math3.ode.nonstiff.GillStepInterpolator.clinit()
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.evaluateCompleteInterpolatedState() org.apache.commons.math3.ode.nonstiff.GillStepInterpolator.computeInterpolatedStateAndDerivatives(double,double)
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.evaluateCompleteInterpolatedState() org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator.computeInterpolatedStateAndDerivatives(double,double)
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.evaluateCompleteInterpolatedState() org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolator.computeInterpolatedStateAndDerivatives(double,double)
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.evaluateCompleteInterpolatedState() org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolator.computeInterpolatedStateAndDerivatives(double,double)
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.evaluateCompleteInterpolatedState() org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator.computeInterpolatedStateAndDerivatives(double,double)
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.evaluateCompleteInterpolatedState() org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator.computeInterpolatedStateAndDerivatives(double,double)
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.evaluateCompleteInterpolatedState() org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator.computeInterpolatedStateAndDerivatives(double,double)
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.evaluateCompleteInterpolatedState() org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator.computeInterpolatedStateAndDerivatives(double,double)
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.evaluateCompleteInterpolatedState() org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator.computeInterpolatedStateAndDerivatives(double,double)
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.evaluateCompleteInterpolatedState() org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolator.computeInterpolatedStateAndDerivatives(double,double)
org.apache.commons.math3.linear.RealMatrixFormat.format(org.apache.commons.math3.linear.RealMatrix,java.lang.StringBuffer,java.text.FieldPosition) java.text.FieldPosition.setBeginIndex(int)
org.apache.commons.math3.linear.RealMatrixFormat.format(org.apache.commons.math3.linear.RealMatrix,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.linear.BlockRealMatrix.getColumnDimension()
org.apache.commons.math3.linear.RealMatrixFormat.format(org.apache.commons.math3.linear.RealMatrix,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.linear.DiagonalMatrix.getEntry(int,int)
org.apache.commons.math3.linear.RealMatrixFormat.format(org.apache.commons.math3.linear.RealMatrix,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.linear.OpenMapRealMatrix.getRowDimension()
org.apache.commons.math3.linear.RealMatrixFormat.format(org.apache.commons.math3.linear.RealMatrix,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.linear.DiagonalMatrix.getRowDimension()
org.apache.commons.math3.linear.RealMatrixFormat.format(org.apache.commons.math3.linear.RealMatrix,java.lang.StringBuffer,java.text.FieldPosition) java.text.FieldPosition.setEndIndex(int)
org.apache.commons.math3.linear.RealMatrixFormat.format(org.apache.commons.math3.linear.RealMatrix,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.util.CompositeFormat.formatDouble(double,java.text.NumberFormat,java.lang.StringBuffer,java.text.FieldPosition)
org.apache.commons.math3.linear.RealMatrixFormat.format(org.apache.commons.math3.linear.RealMatrix,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.linear.OpenMapRealMatrix.getColumnDimension()
org.apache.commons.math3.linear.RealMatrixFormat.format(org.apache.commons.math3.linear.RealMatrix,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension()
org.apache.commons.math3.linear.RealMatrixFormat.format(org.apache.commons.math3.linear.RealMatrix,java.lang.StringBuffer,java.text.FieldPosition) java.lang.Object.clinit()
org.apache.commons.math3.linear.RealMatrixFormat.format(org.apache.commons.math3.linear.RealMatrix,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.linear.BlockRealMatrix.getEntry(int,int)
org.apache.commons.math3.linear.RealMatrixFormat.format(org.apache.commons.math3.linear.RealMatrix,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.linear.OpenMapRealMatrix.getEntry(int,int)
org.apache.commons.math3.linear.RealMatrixFormat.format(org.apache.commons.math3.linear.RealMatrix,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.linear.BlockRealMatrix.getRowDimension()
org.apache.commons.math3.linear.RealMatrixFormat.format(org.apache.commons.math3.linear.RealMatrix,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry(int,int)
org.apache.commons.math3.linear.RealMatrixFormat.format(org.apache.commons.math3.linear.RealMatrix,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension()
org.apache.commons.math3.linear.RealMatrixFormat.format(org.apache.commons.math3.linear.RealMatrix,java.lang.StringBuffer,java.text.FieldPosition) java.lang.StringBuffer.append(java.lang.String)
org.apache.commons.math3.linear.RealMatrixFormat.format(org.apache.commons.math3.linear.RealMatrix,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.linear.DiagonalMatrix.getColumnDimension()
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$UpperBoundMapper.unboundedToBounded(double) java.lang.Object.clinit()
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$UpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$UpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.util.FastMath.exp(double)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ComparableSegment.equals(java.lang.Object) org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ComparableSegment.compareTo(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ComparableSegment)
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.access$400(org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet,double) org.apache.commons.math3.geometry.partitioning.AbstractRegion.setSize(double)
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.partitioning.AbstractRegion(org.apache.commons.math3.geometry.partitioning.BSPTree)
org.apache.commons.math3.analysis.function.Gaussian.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.compose(double[])
org.apache.commons.math3.analysis.function.Gaussian.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Gaussian.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.function.Gaussian.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getOrder()
org.apache.commons.math3.analysis.function.Gaussian.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.util.Arrays.fill(double[],double)
org.apache.commons.math3.analysis.function.Gaussian.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.util.Precision.clinit()
org.apache.commons.math3.analysis.function.Gaussian.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.util.FastMath.exp(double)
org.apache.commons.math3.analysis.function.Gaussian.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getValue()
org.apache.commons.math3.analysis.function.Gaussian.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.util.Arrays.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler) org.apache.commons.math3.analysis.differentiation.DSCompiler.compileSizes(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler)
org.apache.commons.math3.analysis.differentiation.DSCompiler(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler) org.apache.commons.math3.analysis.differentiation.DSCompiler.compileDerivativesIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler)
org.apache.commons.math3.analysis.differentiation.DSCompiler(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler) java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler) org.apache.commons.math3.analysis.differentiation.DSCompiler.compileCompositionIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler,int[][],int[][])
org.apache.commons.math3.analysis.differentiation.DSCompiler(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler) org.apache.commons.math3.analysis.differentiation.DSCompiler.compileMultiplicationIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler,int[])
org.apache.commons.math3.analysis.differentiation.DSCompiler(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler) java.lang.Object()
org.apache.commons.math3.analysis.differentiation.DSCompiler(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler) org.apache.commons.math3.analysis.differentiation.DSCompiler.compileLowerIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler)
org.apache.commons.math3.analysis.differentiation.DSCompiler(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler) org.apache.commons.math3.analysis.differentiation.DSCompiler.clinit()
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$UpperBoundMapper.unboundedToBounded(double) java.lang.Object.clinit()
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$UpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$UpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.util.FastMath.exp(double)
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.verifyInputArray(double[],double[]) java.lang.Object.clinit()
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.verifyInputArray(double[],double[]) org.apache.commons.math3.exception.DimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,int,int)
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.verifyInputArray(double[],double[]) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.verifyInputArray(double[],double[]) java.lang.Throwable.clinit()
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.verifyInputArray(double[],double[]) org.apache.commons.math3.exception.NoDataException(org.apache.commons.math3.exception.util.Localizable)
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.verifyInputArray(double[],double[]) org.apache.commons.math3.exception.util.LocalizedFormats.clinit()
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.verifyInputArray(double[],double[]) org.apache.commons.math3.util.MathUtils.checkNotNull(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.RegionFactory$DifferenceMerger.merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean,boolean) org.apache.commons.math3.geometry.partitioning.BSPTree.insertInTree(org.apache.commons.math3.geometry.partitioning.BSPTree,boolean)
org.apache.commons.math3.geometry.partitioning.RegionFactory$DifferenceMerger.merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean,boolean) java.lang.Object.clinit()
org.apache.commons.math3.geometry.partitioning.RegionFactory$DifferenceMerger.merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean,boolean) java.lang.Boolean.booleanValue()
org.apache.commons.math3.geometry.partitioning.RegionFactory$DifferenceMerger.merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean,boolean) org.apache.commons.math3.geometry.partitioning.BSPTree.getAttribute()
org.apache.commons.math3.geometry.partitioning.RegionFactory$DifferenceMerger.merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean,boolean) org.apache.commons.math3.geometry.partitioning.RegionFactory.access$500(org.apache.commons.math3.geometry.partitioning.RegionFactory,org.apache.commons.math3.geometry.partitioning.BSPTree)
org.apache.commons.math3.exception.TooManyIterationsException(java.lang.Number) org.apache.commons.math3.exception.MaxCountExceededException(java.lang.Number)
org.apache.commons.math3.exception.TooManyIterationsException(java.lang.Number) java.lang.Object.clinit()
org.apache.commons.math3.exception.TooManyIterationsException(java.lang.Number) org.apache.commons.math3.exception.util.ExceptionContext.addMessage(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])
org.apache.commons.math3.exception.TooManyIterationsException(java.lang.Number) org.apache.commons.math3.exception.util.LocalizedFormats.clinit()
org.apache.commons.math3.exception.TooManyIterationsException(java.lang.Number) org.apache.commons.math3.exception.MathIllegalStateException.getContext()
org.apache.commons.math3.dfp.Dfp.lessThan(org.apache.commons.math3.dfp.Dfp) java.lang.Object.clinit()
org.apache.commons.math3.dfp.Dfp.lessThan(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.Dfp.newInstance(org.apache.commons.math3.dfp.Dfp)
org.apache.commons.math3.dfp.Dfp.lessThan(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.Dfp.dotrap(int,java.lang.String,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)
org.apache.commons.math3.dfp.Dfp.lessThan(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.DfpField.getRadixDigits()
org.apache.commons.math3.dfp.Dfp.lessThan(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.Dfp.compare(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)
org.apache.commons.math3.dfp.Dfp.lessThan(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.DfpField.setIEEEFlagsBits(int)
org.apache.commons.math3.dfp.Dfp.lessThan(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.Dfp.getZero()
org.apache.commons.math3.dfp.Dfp.lessThan(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.Dfp.isNaN()
org.apache.commons.math3.dfp.Dfp.lessThan(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.DfpDec.newInstance(org.apache.commons.math3.dfp.Dfp)
org.apache.commons.math3.dfp.Dfp.multiplyFast(int) org.apache.commons.math3.dfp.Dfp.newInstance(org.apache.commons.math3.dfp.Dfp)
org.apache.commons.math3.dfp.Dfp.multiplyFast(int) org.apache.commons.math3.dfp.Dfp.round(int)
org.apache.commons.math3.dfp.Dfp.multiplyFast(int) org.apache.commons.math3.dfp.Dfp.dotrap(int,java.lang.String,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)
org.apache.commons.math3.dfp.Dfp.multiplyFast(int) org.apache.commons.math3.dfp.DfpDec.round(int)
org.apache.commons.math3.dfp.Dfp.multiplyFast(int) org.apache.commons.math3.dfp.DfpField.setIEEEFlagsBits(int)
org.apache.commons.math3.dfp.Dfp.multiplyFast(int) org.apache.commons.math3.dfp.Dfp.getZero()
org.apache.commons.math3.dfp.Dfp.multiplyFast(int) org.apache.commons.math3.dfp.Dfp.shiftRight()
org.apache.commons.math3.dfp.Dfp.multiplyFast(int) org.apache.commons.math3.dfp.Dfp.isNaN()
org.apache.commons.math3.dfp.Dfp.multiplyFast(int) org.apache.commons.math3.dfp.DfpDec.newInstance(org.apache.commons.math3.dfp.Dfp)
org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer$1.compare(org.apache.commons.math3.optimization.PointValuePair,org.apache.commons.math3.optimization.PointValuePair) java.lang.Object.clinit()
org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer$1.compare(org.apache.commons.math3.optimization.PointValuePair,org.apache.commons.math3.optimization.PointValuePair) java.lang.Double.compare(double,double)
org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer$1.compare(org.apache.commons.math3.optimization.PointValuePair,org.apache.commons.math3.optimization.PointValuePair) org.apache.commons.math3.optimization.GoalType.clinit()
org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer$1.compare(org.apache.commons.math3.optimization.PointValuePair,org.apache.commons.math3.optimization.PointValuePair) java.lang.Double.doubleValue()
org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer$1.compare(org.apache.commons.math3.optimization.PointValuePair,org.apache.commons.math3.optimization.PointValuePair) java.lang.Double.clinit()
org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer$1.compare(org.apache.commons.math3.optimization.PointValuePair,org.apache.commons.math3.optimization.PointValuePair) org.apache.commons.math3.util.Pair.getValue()
org.apache.commons.math3.ode.nonstiff.GillStepInterpolator.computeInterpolatedStateAndDerivatives(double,double) java.lang.Object.clinit()
org.apache.commons.math3.ode.nonstiff.GillStepInterpolator.computeInterpolatedStateAndDerivatives(double,double) org.apache.commons.math3.ode.nonstiff.GillStepInterpolator.clinit()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() sun.util.PreHashedMap$1$1.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() javax.security.auth.Subject$SecureSet$1.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() org.apache.commons.math3.linear.RealVector$SparseEntryIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.Collections$SingletonList.iterator()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.concurrent.CopyOnWriteArrayList$COWIterator.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() sun.net.www.MessageHeader$HeaderIterator.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() sun.util.PreHashedMap$2$1.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.lang.Double.isInfinite(double)
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() org.apache.commons.math3.geometry.euclidean.oned.Interval.getSize()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() org.apache.commons.math3.util.MultidimensionalCounter$Iterator.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() sun.net.www.HeaderParser$ParserIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.getHyperplane()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.concurrent.ArrayBlockingQueue$Itr.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() javax.imageio.ImageIO$ImageWriterIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.AbstractSequentialList.iterator()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.JumboEnumSet$EnumSetIterator.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.LinkedList$ListItr.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.ServiceLoader$LazyIterator.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() sun.nio.fs.UnixFileSystem$FileStoreIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.concurrent.DelayQueue$Itr.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() javax.imageio.spi.PartialOrderIterator.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.TreeMap$NavigableSubMap$SubMapKeyIterator.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.concurrent.ConcurrentHashMap$ValueIterator.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.LinkedList$DescendingIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.JumboEnumSet$EnumSetIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.concurrent.ConcurrentHashMap$KeyIterator.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.concurrent.DelayQueue$Itr.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.LinkedList$DescendingIterator.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() sun.util.PreHashedMap$2$1.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.WeakHashMap$HashIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.LinkedHashMap$EntryIterator.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.IdentityHashMap$KeyIterator.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() org.apache.commons.math3.geometry.partitioning.AbstractRegion.getTree(boolean)
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() org.apache.commons.math3.geometry.partitioning.AbstractRegion.setSize(double)
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.IdentityHashMap$ValueIterator.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.ArrayList$SubList.iterator()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.AbstractMap$1$1.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() org.apache.commons.math3.linear.RealVector$2$2.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() com.sun.imageio.plugins.jpeg.ImageTypeIterator.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() javax.imageio.spi.FilterIterator.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.ArrayDeque$DescendingIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() org.apache.commons.math3.geometry.partitioning.AbstractRegion.setBarycenter(org.apache.commons.math3.geometry.Vector)
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.Hashtable$Enumerator.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() org.apache.commons.math3.linear.RealVector$1.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.HashMap$EntryIterator.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.Collections$CheckedMap$CheckedEntrySet$1.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() org.apache.commons.math3.util.MultidimensionalCounter$Iterator.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() javax.security.auth.Subject$SecureSet$1.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.concurrent.CopyOnWriteArrayList$COWSubList.iterator()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() org.apache.commons.math3.util.Precision.clinit()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.Collections$UnmodifiableList$1.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() org.apache.commons.math3.geometry.euclidean.oned.Vector1D.clinit()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() sun.nio.cs.FastCharsetProvider$1.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.concurrent.ArrayBlockingQueue$Itr.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.Collections$CheckedList$1.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.Vector$Itr.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.ArrayList$SubList$1.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.Collections$UnmodifiableCollection.iterator()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() org.apache.commons.math3.geometry.partitioning.BSPTree.getCut()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.HashMap$ValueIterator.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() sun.misc.SoftCache$EntrySet$1.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.ArrayList$SubList$1.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.lang.Boolean.booleanValue()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.concurrent.CopyOnWriteArrayList$COWIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.concurrent.ConcurrentHashMap$HashIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.IdentityHashMap$IdentityHashMapIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.lang.ProcessEnvironment$StringEntrySet$1.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.lang.Double.clinit()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() sun.net.www.HeaderParser$ParserIterator.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.concurrent.LinkedBlockingDeque$AbstractItr.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() sun.nio.cs.FastCharsetProvider$1.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() sun.nio.fs.AbstractPath$1.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.EnumMap$KeyIterator.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.LinkedList$ListItr.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.Collections$EmptyIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.Scanner.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() javax.imageio.spi.FilterIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.Collections$CheckedCollection$1.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.ArrayDeque$DescendingIterator.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.concurrent.ConcurrentHashMap$EntryIterator.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() org.apache.commons.math3.util.CombinatoricsUtils$SingletonIterator.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.LinkedHashMap$KeyIterator.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.concurrent.LinkedBlockingQueue$Itr.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() org.apache.commons.math3.linear.RealVector$2$2.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.Collections$CheckedList$1.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.ArrayList.iterator()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() javax.imageio.ImageIO$ImageWriterIterator.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.Collections$EmptyList.iterator()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.Collections$1.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() org.apache.commons.math3.util.CombinatoricsUtils$LexicographicCombinationIterator.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.concurrent.LinkedBlockingDeque$AbstractItr.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.concurrent.ConcurrentLinkedQueue$Itr.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.ArrayDeque$DeqIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.LinkedHashMap$LinkedHashIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.concurrent.LinkedBlockingQueue$Itr.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.lang.ProcessEnvironment$StringEntrySet$1.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() sun.util.PreHashedMap$1$1.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.lang.ProcessEnvironment$StringValues$1.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.WeakHashMap$EntryIterator.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() javax.print.MimeType$ParameterMapEntrySetIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.AbstractMap$1$1.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() sun.awt.util.IdentityLinkedList$DescendingIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.lang.ProcessEnvironment$StringKeySet$1.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() javax.imageio.ImageIO$ImageReaderIterator.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.TreeMap$DescendingKeyIterator.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.TreeMap$PrivateEntryIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() javax.imageio.ImageIO$ImageReaderIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() sun.misc.Service$LazyIterator.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.Scanner.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.WeakHashMap$ValueIterator.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() org.apache.commons.math3.linear.RealVector$SparseEntryIterator.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.IdentityHashMap$EntryIterator.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.Collections$CheckedCollection.iterator()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.PriorityQueue$Itr.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.getLocation()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.Hashtable$Enumerator.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.RegularEnumSet$EnumSetIterator.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() javax.print.MimeType$ParameterMapEntrySetIterator.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.WeakHashMap$KeyIterator.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.Collections$CheckedMap$CheckedEntrySet$1.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() sun.security.jca.ProviderList$ServiceList.iterator()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() org.apache.commons.math3.geometry.euclidean.oned.Vector1D(double)
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.SubList$1.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.AbstractList.iterator()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.Collections$SynchronizedCollection.iterator()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.Collections$EmptyIterator.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.LinkedHashMap$ValueIterator.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.ServiceLoader$1.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.TreeMap$ValueIterator.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.TreeMap$NavigableSubMap$SubMapEntryIterator.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() org.apache.commons.math3.util.CombinatoricsUtils$LexicographicCombinationIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.AbstractMap$2$1.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.EnumMap$ValueIterator.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.lang.ProcessEnvironment$StringValues$1.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() sun.nio.fs.AbstractPath$1.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.SubList.iterator()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.TreeMap$EntryIterator.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() org.apache.commons.math3.linear.RealVector$1.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() org.apache.commons.math3.util.CombinatoricsUtils$SingletonIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() sun.awt.util.IdentityLinkedList$ListItr.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.EnumMap$EntryIterator.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.Collections$UnmodifiableList$1.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() org.apache.commons.math3.linear.RealVector$2$1.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.ArrayList$Itr.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.nio.charset.Charset$1.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.Collections$UnmodifiableCollection$1.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() com.sun.imageio.plugins.jpeg.ImageTypeIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.asList()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() org.apache.commons.math3.geometry.euclidean.oned.Interval.getBarycenter()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.TreeMap$KeyIterator.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.SubList$1.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.lang.ProcessEnvironment$StringKeySet$1.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.Collections$UnmodifiableCollection$1.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.RegularEnumSet$EnumSetIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() sun.misc.SoftCache$EntrySet$1.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.HashMap$KeyIterator.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() sun.security.jca.ProviderList$ServiceList$1.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.PriorityQueue$Itr.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.Collections$1.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.ArrayList$Itr.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.EnumMap$EnumMapIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.AbstractMap$2$1.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.ServiceLoader$1.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() javax.imageio.ImageIO$ImageTranscoderIterator.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() sun.security.jca.ProviderList$ServiceList$1.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.ServiceLoader$LazyIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.Vector$Itr.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.ArrayDeque$DeqIterator.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.Collections$CheckedCollection$1.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.AbstractList$Itr.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() sun.misc.Service$LazyIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.nio.charset.Charset$1.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() sun.net.www.MessageHeader$HeaderIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.concurrent.ConcurrentLinkedQueue$Itr.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() sun.nio.fs.UnixFileSystem$FileStoreIterator.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() org.apache.commons.math3.geometry.partitioning.BSPTree.getAttribute()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() sun.awt.util.IdentityLinkedList$DescendingIterator.next()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() sun.awt.util.IdentityLinkedList$ListItr.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() javax.imageio.spi.PartialOrderIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.Vector.iterator()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.TreeMap$NavigableSubMap$SubMapIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() javax.imageio.ImageIO$ImageTranscoderIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.concurrent.CopyOnWriteArrayList.iterator()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.HashMap$HashIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() java.util.AbstractList$Itr.hasNext()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties() org.apache.commons.math3.linear.RealVector$2$1.hasNext()
org.apache.commons.math3.util.MathArrays$OrderDirection(java.lang.String,int) java.lang.Enum(java.lang.String,int)
org.apache.commons.math3.util.OpenIntToFieldHashMap$Iterator(org.apache.commons.math3.util.OpenIntToFieldHashMap) java.lang.Object.clinit()
org.apache.commons.math3.util.OpenIntToFieldHashMap$Iterator(org.apache.commons.math3.util.OpenIntToFieldHashMap) org.apache.commons.math3.util.OpenIntToFieldHashMap.access$100(org.apache.commons.math3.util.OpenIntToFieldHashMap)
org.apache.commons.math3.util.OpenIntToFieldHashMap$Iterator(org.apache.commons.math3.util.OpenIntToFieldHashMap) org.apache.commons.math3.util.OpenIntToFieldHashMap$Iterator.advance()
org.apache.commons.math3.util.OpenIntToFieldHashMap$Iterator(org.apache.commons.math3.util.OpenIntToFieldHashMap) java.lang.Object()
org.apache.commons.math3.analysis.function.Logit.derivative() org.apache.commons.math3.analysis.function.Cbrt.derivative()
org.apache.commons.math3.analysis.function.Logit.derivative() org.apache.commons.math3.analysis.function.Minus.derivative()
org.apache.commons.math3.analysis.function.Logit.derivative() org.apache.commons.math3.analysis.function.Tanh.derivative()
org.apache.commons.math3.analysis.function.Logit.derivative() org.apache.commons.math3.analysis.FunctionUtils.toDifferentiableUnivariateFunction(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction)
org.apache.commons.math3.analysis.function.Logit.derivative() org.apache.commons.math3.analysis.function.Expm1.derivative()
org.apache.commons.math3.analysis.function.Logit.derivative() org.apache.commons.math3.analysis.function.Power.derivative()
org.apache.commons.math3.analysis.function.Logit.derivative() org.apache.commons.math3.analysis.function.Logit.derivative()
org.apache.commons.math3.analysis.function.Logit.derivative() org.apache.commons.math3.analysis.function.Sinc.derivative()
org.apache.commons.math3.analysis.function.Logit.derivative() org.apache.commons.math3.analysis.function.Constant.derivative()
org.apache.commons.math3.analysis.function.Logit.derivative() org.apache.commons.math3.analysis.function.Log10.derivative()
org.apache.commons.math3.analysis.function.Logit.derivative() org.apache.commons.math3.analysis.function.Sigmoid.derivative()
org.apache.commons.math3.analysis.function.Logit.derivative() org.apache.commons.math3.analysis.function.Acosh.derivative()
org.apache.commons.math3.analysis.function.Logit.derivative() org.apache.commons.math3.analysis.function.Exp.derivative()
org.apache.commons.math3.analysis.function.Logit.derivative() org.apache.commons.math3.analysis.function.Sinh.derivative()
org.apache.commons.math3.analysis.function.Logit.derivative() java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Logit.derivative() org.apache.commons.math3.analysis.polynomials.PolynomialFunction.derivative()
org.apache.commons.math3.analysis.function.Logit.derivative() org.apache.commons.math3.analysis.function.Gaussian.derivative()
org.apache.commons.math3.analysis.function.Logit.derivative() org.apache.commons.math3.analysis.function.Atanh.derivative()
org.apache.commons.math3.analysis.function.Logit.derivative() org.apache.commons.math3.analysis.function.Sqrt.derivative()
org.apache.commons.math3.analysis.function.Logit.derivative() org.apache.commons.math3.analysis.FunctionUtils$3.derivative()
org.apache.commons.math3.analysis.function.Logit.derivative() org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.derivative()
org.apache.commons.math3.analysis.function.Logit.derivative() org.apache.commons.math3.analysis.function.Log1p.derivative()
org.apache.commons.math3.analysis.function.Logit.derivative() org.apache.commons.math3.analysis.function.Asin.derivative()
org.apache.commons.math3.analysis.function.Logit.derivative() org.apache.commons.math3.analysis.function.Cos.derivative()
org.apache.commons.math3.analysis.function.Logit.derivative() org.apache.commons.math3.analysis.function.Asinh.derivative()
org.apache.commons.math3.analysis.function.Logit.derivative() org.apache.commons.math3.analysis.function.Tan.derivative()
org.apache.commons.math3.analysis.function.Logit.derivative() org.apache.commons.math3.analysis.FunctionUtils$6.derivative()
org.apache.commons.math3.analysis.function.Logit.derivative() org.apache.commons.math3.analysis.function.Log.derivative()
org.apache.commons.math3.analysis.function.Logit.derivative() org.apache.commons.math3.analysis.function.Atan.derivative()
org.apache.commons.math3.analysis.function.Logit.derivative() org.apache.commons.math3.analysis.function.Acos.derivative()
org.apache.commons.math3.analysis.function.Logit.derivative() org.apache.commons.math3.analysis.FunctionUtils$14.derivative()
org.apache.commons.math3.analysis.function.Logit.derivative() org.apache.commons.math3.analysis.function.Identity.derivative()
org.apache.commons.math3.analysis.function.Logit.derivative() org.apache.commons.math3.analysis.function.Cosh.derivative()
org.apache.commons.math3.analysis.function.Logit.derivative() org.apache.commons.math3.analysis.FunctionUtils$9.derivative()
org.apache.commons.math3.analysis.function.Logit.derivative() org.apache.commons.math3.analysis.function.Logistic.derivative()
org.apache.commons.math3.analysis.function.Logit.derivative() org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative()
org.apache.commons.math3.analysis.function.Logit.derivative() org.apache.commons.math3.analysis.function.Inverse.derivative()
org.apache.commons.math3.analysis.function.Logit.derivative() org.apache.commons.math3.analysis.function.Sin.derivative()
org.apache.commons.math3.dfp.Dfp.getTwo() org.apache.commons.math3.dfp.DfpField.getTwo()
org.apache.commons.math3.geometry.partitioning.AbstractRegion$1(org.apache.commons.math3.geometry.partitioning.AbstractRegion) java.lang.Object()
org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer$1.compare(java.lang.Object,java.lang.Object) org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer$1.compare(org.apache.commons.math3.optim.PointValuePair,org.apache.commons.math3.optim.PointValuePair)
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) sun.util.PreHashedMap$1$1.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) javax.security.auth.Subject$SecureSet$1.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) org.apache.commons.math3.linear.RealVector$SparseEntryIterator.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.Collections$SingletonList.iterator()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.concurrent.CopyOnWriteArrayList$COWIterator.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) sun.net.www.MessageHeader$HeaderIterator.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) sun.util.PreHashedMap$2$1.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) org.apache.commons.math3.linear.OpenMapRealVector.subtract(org.apache.commons.math3.linear.RealVector)
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.Hashtable$EntrySet.iterator()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) org.apache.commons.math3.util.MultidimensionalCounter$Iterator.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) sun.net.www.HeaderParser$ParserIterator.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.concurrent.ArrayBlockingQueue$Itr.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) javax.print.MimeType$ParameterMapEntrySet.iterator()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) sun.util.PreHashedMap$2$1$1.getValue()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) javax.imageio.ImageIO$ImageWriterIterator.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.AbstractSequentialList.iterator()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.JumboEnumSet$EnumSetIterator.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.LinkedList$ListItr.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.ServiceLoader$LazyIterator.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.Hashtable$KeySet.iterator()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) sun.nio.fs.UnixFileSystem$FileStoreIterator.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) org.apache.commons.math3.util.FastMath.ulp(double)
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.concurrent.DelayQueue$Itr.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) javax.imageio.spi.PartialOrderIterator.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.lang.ProcessEnvironment$StringEnvironment.entrySet()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.TreeMap$NavigableSubMap$SubMapKeyIterator.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.concurrent.ConcurrentHashMap$ValueIterator.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) org.apache.commons.math3.util.FastMath.abs(double)
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) sun.util.PreHashedMap$2.iterator()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.EnumMap$EntrySet.iterator()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.LinkedList$DescendingIterator.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.EnumMap$EntryIterator$Entry.getKey()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.JumboEnumSet$EnumSetIterator.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.concurrent.ConcurrentHashMap$KeyIterator.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.concurrent.DelayQueue$Itr.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.LinkedList$DescendingIterator.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.JumboEnumSet.iterator()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) sun.util.PreHashedMap$1.iterator()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) sun.util.PreHashedMap$2$1.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.AbstractMap$SimpleImmutableEntry.getValue()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.RegularEnumSet.iterator()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.WeakHashMap$HashIterator.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.IdentityHashMap.entrySet()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.Collections$UnmodifiableMap.entrySet()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.IdentityHashMap$KeyIterator.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.LinkedHashMap$EntryIterator.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.IdentityHashMap$ValueIterator.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector)
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.ArrayList$SubList.iterator()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.jar.Attributes.entrySet()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.AbstractMap$1$1.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) org.apache.commons.math3.linear.RealVector$2$2.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.lang.ProcessEnvironment$StringEntry.getKey()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) com.sun.imageio.plugins.jpeg.ImageTypeIterator.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) javax.imageio.spi.FilterIterator.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.ArrayDeque$DescendingIterator.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.EnumMap$KeySet.iterator()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.Hashtable$Enumerator.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) org.apache.commons.math3.linear.RealVector$1.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.HashMap$EntryIterator.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.Collections$CheckedMap$CheckedEntrySet$1.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) org.apache.commons.math3.util.MultidimensionalCounter$Iterator.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) javax.security.auth.Subject$SecureSet$1.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.concurrent.CopyOnWriteArrayList$COWSubList.iterator()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) sun.misc.SoftCache$Entry.getKey()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.lang.ProcessEnvironment$StringKeySet.iterator()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.lang.Double.doubleValue()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.Collections$UnmodifiableList$1.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.Collections$SynchronizedMap.entrySet()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) sun.nio.cs.FastCharsetProvider$1.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.EnumMap.entrySet()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.concurrent.ArrayBlockingQueue$Itr.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.Collections$CheckedList$1.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.Vector$Itr.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) sun.util.PreHashedMap$2$1$1.getKey()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.ArrayList$SubList$1.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.Collections$UnmodifiableCollection.iterator()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry.getKey()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.Collections$EmptySet.iterator()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.Collections$SingletonMap.entrySet()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.security.Provider.entrySet()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.WeakHashMap$Entry.getValue()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.HashMap$ValueIterator.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) sun.misc.SoftCache$EntrySet$1.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.ArrayList$SubList$1.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.HashMap$Entry.getKey()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.concurrent.CopyOnWriteArrayList$COWIterator.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) javax.print.MimeType$ParameterMapEntry.getKey()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.TreeMap$DescendingSubMap.entrySet()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.concurrent.ConcurrentHashMap$HashIterator.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.IdentityHashMap$IdentityHashMapIterator.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.lang.ProcessEnvironment$StringEntrySet$1.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) javax.security.auth.Subject$SecureSet.iterator()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) sun.nio.ch.Util$2.iterator()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) sun.net.www.HeaderParser$ParserIterator.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.concurrent.LinkedBlockingDeque$AbstractItr.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) sun.misc.SoftCache$EntrySet.iterator()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) sun.nio.cs.FastCharsetProvider$1.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) sun.nio.fs.AbstractPath$1.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.EnumMap$KeyIterator.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.LinkedList$ListItr.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.Collections$EmptyMap.entrySet()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.Collections$EmptyIterator.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.Hashtable$Entry.getValue()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry.getValue()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.Scanner.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) javax.imageio.spi.FilterIterator.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.Collections$CheckedCollection$1.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) sun.misc.SoftCache.entrySet()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.ArrayDeque$DescendingIterator.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.concurrent.ConcurrentHashMap$EntryIterator.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.cosAngle(org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector)
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) org.apache.commons.math3.util.CombinatoricsUtils$SingletonIterator.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.LinkedHashMap$KeyIterator.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.concurrent.LinkedBlockingQueue$Itr.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) org.apache.commons.math3.linear.RealVector$2$2.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.Collections$CheckedList$1.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.ArrayList.iterator()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) javax.imageio.ImageIO$ImageWriterIterator.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.Collections$EmptyList.iterator()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) org.apache.commons.math3.linear.ArrayRealVector(double[])
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.Collections$1.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) org.apache.commons.math3.linear.ArrayRealVector.clinit()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) org.apache.commons.math3.util.CombinatoricsUtils$LexicographicCombinationIterator.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.concurrent.LinkedBlockingDeque$AbstractItr.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.concurrent.ConcurrentLinkedQueue$Itr.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.ArrayDeque$DeqIterator.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.LinkedHashMap$LinkedHashIterator.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.concurrent.LinkedBlockingQueue$Itr.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.lang.ProcessEnvironment$StringEntrySet$1.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction$MicrosphereSurfaceElement.store(double,java.util.Map$Entry)
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) sun.misc.SoftCache$Entry.getValue()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) sun.util.PreHashedMap$1$1.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.WeakHashMap$Entry.getKey()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.TreeMap$DescendingSubMap$DescendingEntrySetView.iterator()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.AbstractMap$1.iterator()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.lang.ProcessEnvironment$StringValues$1.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.WeakHashMap$EntryIterator.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.HashMap$EntrySet.iterator()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) javax.print.MimeType$ParameterMapEntrySetIterator.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) org.apache.commons.math3.linear.RealVector$2.subtract(org.apache.commons.math3.linear.RealVector)
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.WeakHashMap.entrySet()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.concurrent.ConcurrentHashMap.entrySet()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.AbstractMap$1$1.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.Hashtable$Entry.getKey()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) org.apache.commons.math3.linear.RealVector.getNorm()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.IdentityHashMap$KeySet.iterator()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.lang.ProcessEnvironment$StringEntrySet$2.getValue()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.AbstractMap$SimpleImmutableEntry.getKey()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) sun.awt.util.IdentityLinkedList$DescendingIterator.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.lang.ProcessEnvironment$StringKeySet$1.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) javax.imageio.ImageIO$ImageReaderIterator.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.TreeMap$DescendingKeyIterator.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.concurrent.ConcurrentHashMap$EntrySet.iterator()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.TreeMap$PrivateEntryIterator.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) javax.imageio.ImageIO$ImageReaderIterator.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) org.apache.commons.math3.linear.ArrayRealVector.getNorm()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) sun.misc.Service$LazyIterator.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.Scanner.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.WeakHashMap$ValueIterator.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) org.apache.commons.math3.linear.RealVector$SparseEntryIterator.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.IdentityHashMap$EntryIterator.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.concurrent.ConcurrentHashMap$KeySet.iterator()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.Collections$CheckedCollection.iterator()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.text.AttributeEntry.getValue()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.HashSet.iterator()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.PriorityQueue$Itr.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.Hashtable$Enumerator.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.RegularEnumSet$EnumSetIterator.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.text.AttributedString$AttributeMap.entrySet()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) javax.print.MimeType$ParameterMapEntrySetIterator.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.WeakHashMap$KeyIterator.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.Collections$CheckedMap$CheckedEntrySet$1.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) sun.security.jca.ProviderList$ServiceList.iterator()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.SubList$1.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.IdentityHashMap$EntryIterator$Entry.getKey()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.AbstractList.iterator()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.Collections$SynchronizedCollection.iterator()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.Collections$EmptyIterator.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.LinkedHashMap$ValueIterator.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.ServiceLoader$1.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.TreeMap$ValueIterator.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.TreeMap$NavigableSubMap$SubMapEntryIterator.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) org.apache.commons.math3.util.CombinatoricsUtils$LexicographicCombinationIterator.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.AbstractMap$2$1.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.EnumMap$ValueIterator.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.lang.ProcessEnvironment$StringValues$1.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) sun.nio.fs.AbstractPath$1.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction$MicrosphereSurfaceElement.normal()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.Collections$CheckedMap$CheckedEntrySet.iterator()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.getValue()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.WeakHashMap$KeySet.iterator()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.Collections$SetFromMap.iterator()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.TreeMap$AscendingSubMap.entrySet()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.SubList.iterator()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.TreeMap$EntryIterator.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) org.apache.commons.math3.linear.RealVector$1.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.IdentityHashMap$EntryIterator$Entry.getValue()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.getKey()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) org.apache.commons.math3.util.CombinatoricsUtils$SingletonIterator.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.lang.ProcessEnvironment$StringEntry.getValue()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) sun.font.AttributeMap.entrySet()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.Hashtable.entrySet()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) javax.imageio.spi.PartiallyOrderedSet.iterator()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) sun.awt.util.IdentityLinkedList$ListItr.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) javax.security.auth.Subject$ClassSet.iterator()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.EnumMap$EntryIterator.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.Collections$UnmodifiableList$1.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) org.apache.commons.math3.linear.RealVector$2$1.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.IdentityHashMap$EntrySet.iterator()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.ArrayList$Itr.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction$MicrosphereSurfaceElement.reset()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.nio.charset.Charset$1.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.Collections$CheckedMap.entrySet()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.Collections$UnmodifiableCollection$1.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.text.AttributeEntry.getKey()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.TreeMap.entrySet()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) com.sun.imageio.plugins.jpeg.ImageTypeIterator.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector)
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.EnumMap$EntryIterator$Entry.getValue()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.TreeMap$KeyIterator.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.SubList$1.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.lang.ProcessEnvironment$StringKeySet$1.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.Collections$UnmodifiableCollection$1.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.TreeMap$SubMap.entrySet()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.HashMap$Entry.getValue()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.TreeSet.iterator()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.RegularEnumSet$EnumSetIterator.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) sun.misc.SoftCache$EntrySet$1.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.HashMap$KeyIterator.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) sun.security.jca.ProviderList$ServiceList$1.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.TreeMap$Entry.getKey()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.PriorityQueue$Itr.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.Collections$1.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.ArrayList$Itr.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) org.apache.commons.math3.linear.RealVector$2.getNorm()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.EnumMap$EnumMapIterator.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.AbstractMap$2$1.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.ServiceLoader$1.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.lang.ProcessEnvironment$StringEntrySet.iterator()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) javax.imageio.ImageIO$ImageTranscoderIterator.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.HashMap.entrySet()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) sun.security.jca.ProviderList$ServiceList$1.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.ServiceLoader$LazyIterator.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.Vector$Itr.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.ArrayDeque$DeqIterator.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.Collections$SingletonSet.iterator()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.lang.Object.clinit()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) javax.print.MimeType$ParameterMapEntry.getValue()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) org.apache.commons.math3.util.FastMath.pow(double,double)
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.AbstractMap$SimpleEntry.getKey()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.lang.ProcessEnvironment$StringEntrySet$2.getKey()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.TreeMap$AscendingSubMap$AscendingEntrySetView.iterator()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.Collections$CheckedCollection$1.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.AbstractList$Itr.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.TreeMap$KeySet.iterator()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction$MicrosphereSurfaceElement.sample()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.TreeMap$EntrySet.iterator()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) sun.misc.Service$LazyIterator.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.nio.charset.Charset$1.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) sun.net.www.MessageHeader$HeaderIterator.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.concurrent.ConcurrentLinkedQueue$Itr.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) sun.nio.fs.UnixFileSystem$FileStoreIterator.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction$MicrosphereSurfaceElement.illumination()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) sun.util.PreHashedMap.entrySet()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.HashMap$KeySet.iterator()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) sun.awt.util.IdentityLinkedList$DescendingIterator.next()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.WeakHashMap$EntrySet.iterator()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.awt.RenderingHints.entrySet()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.AbstractMap$SimpleEntry.getValue()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) sun.awt.util.IdentityLinkedList$ListItr.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.Vector.iterator()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) javax.imageio.spi.PartialOrderIterator.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) javax.swing.MultiUIDefaults.entrySet()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.TreeMap$NavigableSubMap$SubMapIterator.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.TreeMap$Entry.getValue()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) javax.print.MimeType$ParameterMap.entrySet()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) javax.imageio.ImageIO$ImageTranscoderIterator.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.concurrent.CopyOnWriteArrayList.iterator()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.HashMap$HashIterator.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) java.util.AbstractList$Itr.hasNext()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[]) org.apache.commons.math3.linear.RealVector$2$1.hasNext()
org.apache.commons.math3.ode.AbstractIntegrator.computeDerivatives(double,double[],double[]) org.apache.commons.math3.util.Incrementor.incrementCount()
org.apache.commons.math3.ode.AbstractIntegrator.computeDerivatives(double,double[],double[]) org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[])
org.apache.commons.math3.linear.BlockFieldMatrix.getEntry(int,int) org.apache.commons.math3.linear.BlockFieldMatrix.blockWidth(int)
org.apache.commons.math3.linear.BlockFieldMatrix.getEntry(int,int) org.apache.commons.math3.linear.AbstractFieldMatrix.checkRowIndex(int)
org.apache.commons.math3.linear.BlockFieldMatrix.getEntry(int,int) org.apache.commons.math3.linear.AbstractFieldMatrix.checkColumnIndex(int)
org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.hashCode() java.lang.Object.clinit()
org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.hashCode() org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.getSum()
org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.hashCode() org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.getMax()
org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.hashCode() org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.getVariance()
org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.hashCode() org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.getN()
org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.hashCode() org.apache.commons.math3.util.MathUtils.hash(double)
org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.hashCode() org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.getMin()
org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.hashCode() org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.getMean()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getOrder() org.apache.commons.math3.analysis.differentiation.DSCompiler.getOrder()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.cosAngle(org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVector.getNorm()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.cosAngle(org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVector.dotProduct(org.apache.commons.math3.linear.RealVector)
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.cosAngle(org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.ArrayRealVector.getNorm()
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.cosAngle(org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVector$2.dotProduct(org.apache.commons.math3.linear.RealVector)
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.cosAngle(org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.ArrayRealVector.dotProduct(org.apache.commons.math3.linear.RealVector)
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.cosAngle(org.apache.commons.math3.linear.RealVector,org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVector$2.getNorm()
org.apache.commons.math3.analysis.function.Logistic.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.multiply(double)
org.apache.commons.math3.analysis.function.Logistic.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.pow(double)
org.apache.commons.math3.analysis.function.Logistic.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.exp()
org.apache.commons.math3.analysis.function.Logistic.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.negate()
org.apache.commons.math3.analysis.function.Logistic.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.reciprocal()
org.apache.commons.math3.analysis.function.Logistic.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.add(double)
org.apache.commons.math3.analysis.function.Asinh.value(double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Asinh.value(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.function.Asinh.value(double) org.apache.commons.math3.util.FastMath.asinh(double)
org.apache.commons.math3.exception.NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean) java.lang.Object.clinit()
org.apache.commons.math3.exception.NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean) org.apache.commons.math3.exception.MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])
org.apache.commons.math3.geometry.euclidean.threed.Vector3D(double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D) java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.threed.Vector3D(double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D) org.apache.commons.math3.util.MathArrays.linearCombination(double,double,double,double)
org.apache.commons.math3.geometry.euclidean.threed.Vector3D(double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D) java.lang.Object()
org.apache.commons.math3.dfp.Dfp.subtract(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.Dfp.add(org.apache.commons.math3.dfp.Dfp)
org.apache.commons.math3.dfp.Dfp.subtract(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.Dfp.negate()
org.apache.commons.math3.fraction.BigFraction.intValue() java.math.BigInteger.divide(java.math.BigInteger)
org.apache.commons.math3.fraction.BigFraction.intValue() java.math.BigInteger.intValue()
org.apache.commons.math3.optimization.fitting.GaussianFitter$ParameterGuesser$1.compare(org.apache.commons.math3.optimization.fitting.WeightedObservedPoint,org.apache.commons.math3.optimization.fitting.WeightedObservedPoint) org.apache.commons.math3.optimization.fitting.WeightedObservedPoint.getY()
org.apache.commons.math3.optimization.fitting.GaussianFitter$ParameterGuesser$1.compare(org.apache.commons.math3.optimization.fitting.WeightedObservedPoint,org.apache.commons.math3.optimization.fitting.WeightedObservedPoint) org.apache.commons.math3.optimization.fitting.WeightedObservedPoint.getWeight()
org.apache.commons.math3.optimization.fitting.GaussianFitter$ParameterGuesser$1.compare(org.apache.commons.math3.optimization.fitting.WeightedObservedPoint,org.apache.commons.math3.optimization.fitting.WeightedObservedPoint) org.apache.commons.math3.optimization.fitting.WeightedObservedPoint.getX()
org.apache.commons.math3.analysis.function.Logistic$Parametric.validateParameters(double[]) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Logistic$Parametric.validateParameters(double[]) org.apache.commons.math3.exception.DimensionMismatchException(int,int)
org.apache.commons.math3.analysis.function.Logistic$Parametric.validateParameters(double[]) java.lang.Double.valueOf(double)
org.apache.commons.math3.analysis.function.Logistic$Parametric.validateParameters(double[]) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.analysis.function.Logistic$Parametric.validateParameters(double[]) java.lang.Throwable.clinit()
org.apache.commons.math3.analysis.function.Logistic$Parametric.validateParameters(double[]) org.apache.commons.math3.exception.NullArgumentException()
org.apache.commons.math3.analysis.function.Logistic$Parametric.validateParameters(double[]) org.apache.commons.math3.exception.NotStrictlyPositiveException(java.lang.Number)
org.apache.commons.math3.analysis.function.Logistic$Parametric.validateParameters(double[]) java.lang.Double.clinit()
org.apache.commons.math3.stat.descriptive.rank.Percentile.setQuantile(double) org.apache.commons.math3.exception.OutOfRangeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number)
org.apache.commons.math3.stat.descriptive.rank.Percentile.setQuantile(double) java.lang.Object.clinit()
org.apache.commons.math3.stat.descriptive.rank.Percentile.setQuantile(double) java.lang.Double.valueOf(double)
org.apache.commons.math3.stat.descriptive.rank.Percentile.setQuantile(double) java.lang.Throwable.clinit()
org.apache.commons.math3.stat.descriptive.rank.Percentile.setQuantile(double) java.lang.Integer.clinit()
org.apache.commons.math3.stat.descriptive.rank.Percentile.setQuantile(double) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.stat.descriptive.rank.Percentile.setQuantile(double) org.apache.commons.math3.exception.util.LocalizedFormats.clinit()
org.apache.commons.math3.stat.descriptive.rank.Percentile.setQuantile(double) java.lang.Double.clinit()
org.apache.commons.math3.stat.descriptive.rank.Percentile.setQuantile(double) java.lang.Integer.valueOf(int)
org.apache.commons.math3.util.OpenIntToDoubleHashMap(org.apache.commons.math3.util.OpenIntToDoubleHashMap) java.lang.Object.clinit()
org.apache.commons.math3.util.OpenIntToDoubleHashMap(org.apache.commons.math3.util.OpenIntToDoubleHashMap) java.lang.System.arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org.apache.commons.math3.util.OpenIntToDoubleHashMap(org.apache.commons.math3.util.OpenIntToDoubleHashMap) java.lang.Object()
org.apache.commons.math3.util.OpenIntToDoubleHashMap(org.apache.commons.math3.util.OpenIntToDoubleHashMap) java.lang.System.clinit()
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.toString(double) java.lang.String.endsWith(java.lang.String)
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.toString(double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.toString(double) java.lang.Double.toString(double)
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.toString(double) java.lang.String.substring(int,int)
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.toString(double) java.lang.Double.clinit()
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.toString(double) java.lang.String.length()
org.apache.commons.math3.special.Beta.regularizedBeta(double,double,double) java.lang.Object.clinit()
org.apache.commons.math3.special.Beta.regularizedBeta(double,double,double) org.apache.commons.math3.special.Beta.regularizedBeta(double,double,double,double,int)
org.apache.commons.math3.special.Beta.regularizedBeta(double,double,double) org.apache.commons.math3.special.Beta.clinit()
org.apache.commons.math3.random.RandomDataGeneratorRan() java.lang.Object.clinit()
org.apache.commons.math3.random.RandomDataGeneratorRan() org.apache.commons.math3.random.Well19937c(long)
org.apache.commons.math3.random.RandomDataGeneratorRan() java.lang.System.currentTimeMillis()
org.apache.commons.math3.random.RandomDataGeneratorRan() java.lang.System.clinit()
org.apache.commons.math3.random.RandomDataGeneratorRan() java.lang.System.identityHashCode(java.lang.Object)
org.apache.commons.math3.geometry.euclidean.threed.Plane(org.apache.commons.math3.geometry.euclidean.threed.Vector3D) org.apache.commons.math3.geometry.euclidean.threed.Plane.setFrame()
org.apache.commons.math3.geometry.euclidean.threed.Plane(org.apache.commons.math3.geometry.euclidean.threed.Vector3D) org.apache.commons.math3.geometry.euclidean.threed.Plane.setNormal(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
org.apache.commons.math3.geometry.euclidean.threed.Plane(org.apache.commons.math3.geometry.euclidean.threed.Vector3D) java.lang.Object()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.DfpField,java.lang.String) org.apache.commons.math3.dfp.DfpField.getRadixDigits()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.DfpField,java.lang.String) org.apache.commons.math3.dfp.Dfp.round(int)
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.DfpField,java.lang.String) java.lang.String.equals(java.lang.Object)
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.DfpField,java.lang.String) java.lang.String.charAt(int)
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.DfpField,java.lang.String) java.lang.String.substring(int)
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.DfpField,java.lang.String) org.apache.commons.math3.dfp.Dfp.getRadixDigits()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.DfpField,java.lang.String) java.lang.String.substring(int,int)
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.DfpField,java.lang.String) java.lang.String.indexOf(java.lang.String)
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.DfpField,java.lang.String) org.apache.commons.math3.dfp.DfpDec.round(int)
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.DfpField,java.lang.String) java.lang.String.length()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.DfpField,java.lang.String) java.lang.Object()
org.apache.commons.math3.analysis.differentiation.DSCompiler.sinh(double[],int,double[],int) java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.sinh(double[],int,double[],int) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.sinh(double[],int,double[],int) org.apache.commons.math3.util.FastMath.cosh(double)
org.apache.commons.math3.analysis.differentiation.DSCompiler.sinh(double[],int,double[],int) org.apache.commons.math3.util.FastMath.sinh(double)
org.apache.commons.math3.analysis.differentiation.DSCompiler.sinh(double[],int,double[],int) org.apache.commons.math3.analysis.differentiation.DSCompiler.compose(double[],int,double[],double[],int)
org.apache.commons.math3.ode.events.EventState$LocalMaxCountExceededException(org.apache.commons.math3.exception.MaxCountExceededException) java.lang.RuntimeException()
org.apache.commons.math3.linear.RealVector$2$UnmodifiableEntry.getValue() org.apache.commons.math3.linear.ArrayRealVector.getEntry(int)
org.apache.commons.math3.linear.RealVector$2$UnmodifiableEntry.getValue() org.apache.commons.math3.linear.OpenMapRealVector.getEntry(int)
org.apache.commons.math3.linear.RealVector$2$UnmodifiableEntry.getValue() org.apache.commons.math3.linear.RealVector$Entry.getIndex()
org.apache.commons.math3.linear.RealVector$2$UnmodifiableEntry.getValue() org.apache.commons.math3.linear.RealVector$2.getEntry(int)
org.apache.commons.math3.dfp.Dfp.newInstance(org.apache.commons.math3.dfp.Dfp) java.lang.Object.clinit()
org.apache.commons.math3.dfp.Dfp.newInstance(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.Dfp.newInstance(org.apache.commons.math3.dfp.Dfp)
org.apache.commons.math3.dfp.Dfp.newInstance(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.Dfp.dotrap(int,java.lang.String,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)
org.apache.commons.math3.dfp.Dfp.newInstance(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.DfpField.getRadixDigits()
org.apache.commons.math3.dfp.Dfp.newInstance(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp)
org.apache.commons.math3.dfp.Dfp.newInstance(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.DfpField.setIEEEFlagsBits(int)
org.apache.commons.math3.dfp.Dfp.newInstance(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.Dfp.getZero()
org.apache.commons.math3.dfp.Dfp.newInstance(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.DfpDec.newInstance(org.apache.commons.math3.dfp.Dfp)
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getGeometricMean() org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getGeometricMean()
org.apache.commons.math3.linear.DiagonalMatrix.multiply(org.apache.commons.math3.linear.DiagonalMatrix) java.lang.Object.clinit()
org.apache.commons.math3.linear.DiagonalMatrix.multiply(org.apache.commons.math3.linear.DiagonalMatrix) org.apache.commons.math3.linear.MatrixUtils.checkMultiplicationCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix)
org.apache.commons.math3.linear.DiagonalMatrix.multiply(org.apache.commons.math3.linear.DiagonalMatrix) org.apache.commons.math3.linear.AbstractRealMatrix.clinit()
org.apache.commons.math3.linear.DiagonalMatrix.multiply(org.apache.commons.math3.linear.DiagonalMatrix) org.apache.commons.math3.linear.MatrixUtils.clinit()
org.apache.commons.math3.linear.DiagonalMatrix.multiply(org.apache.commons.math3.linear.DiagonalMatrix) org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean)
org.apache.commons.math3.linear.DiagonalMatrix.multiply(org.apache.commons.math3.linear.DiagonalMatrix) org.apache.commons.math3.linear.DiagonalMatrix.getRowDimension()
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.access$500(org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet,org.apache.commons.math3.geometry.Vector) org.apache.commons.math3.geometry.partitioning.AbstractRegion.setBarycenter(org.apache.commons.math3.geometry.Vector)
org.apache.commons.math3.geometry.partitioning.AbstractRegion$BoundaryBuilder.characterize(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.SubHyperplane[]) java.lang.Enum.ordinal()
org.apache.commons.math3.geometry.partitioning.AbstractRegion$BoundaryBuilder.characterize(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.SubHyperplane[]) org.apache.commons.math3.geometry.partitioning.AbstractRegion$BoundaryBuilder.characterize(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.SubHyperplane[])
org.apache.commons.math3.geometry.partitioning.AbstractRegion$BoundaryBuilder.characterize(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.SubHyperplane[]) java.lang.Throwable.clinit()
org.apache.commons.math3.geometry.partitioning.AbstractRegion$BoundaryBuilder.characterize(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.SubHyperplane[]) org.apache.commons.math3.geometry.partitioning.BSPTree.getMinus()
org.apache.commons.math3.geometry.partitioning.AbstractRegion$BoundaryBuilder.characterize(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.SubHyperplane[]) java.lang.Boolean.booleanValue()
org.apache.commons.math3.geometry.partitioning.AbstractRegion$BoundaryBuilder.characterize(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.SubHyperplane[]) org.apache.commons.math3.geometry.partitioning.BSPTree.getAttribute()
org.apache.commons.math3.geometry.partitioning.AbstractRegion$BoundaryBuilder.characterize(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.SubHyperplane[]) org.apache.commons.math3.geometry.euclidean.threed.SubPlane.side(org.apache.commons.math3.geometry.partitioning.Hyperplane)
org.apache.commons.math3.geometry.partitioning.AbstractRegion$BoundaryBuilder.characterize(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.SubHyperplane[]) org.apache.commons.math3.geometry.euclidean.twod.SubLine.side(org.apache.commons.math3.geometry.partitioning.Hyperplane)
org.apache.commons.math3.geometry.partitioning.AbstractRegion$BoundaryBuilder.characterize(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.SubHyperplane[]) org.apache.commons.math3.geometry.euclidean.twod.SubLine.split(org.apache.commons.math3.geometry.partitioning.Hyperplane)
org.apache.commons.math3.geometry.partitioning.AbstractRegion$BoundaryBuilder.characterize(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.SubHyperplane[]) java.lang.Object.clinit()
org.apache.commons.math3.geometry.partitioning.AbstractRegion$BoundaryBuilder.characterize(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.SubHyperplane[]) org.apache.commons.math3.geometry.partitioning.BSPTree.getCut()
org.apache.commons.math3.geometry.partitioning.AbstractRegion$BoundaryBuilder.characterize(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.SubHyperplane[]) org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint.split(org.apache.commons.math3.geometry.partitioning.Hyperplane)
org.apache.commons.math3.geometry.partitioning.AbstractRegion$BoundaryBuilder.characterize(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.SubHyperplane[]) org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.reunite(org.apache.commons.math3.geometry.partitioning.SubHyperplane)
org.apache.commons.math3.geometry.partitioning.AbstractRegion$BoundaryBuilder.characterize(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.SubHyperplane[]) org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane.getPlus()
org.apache.commons.math3.geometry.partitioning.AbstractRegion$BoundaryBuilder.characterize(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.SubHyperplane[]) org.apache.commons.math3.geometry.euclidean.threed.SubPlane.split(org.apache.commons.math3.geometry.partitioning.Hyperplane)
org.apache.commons.math3.geometry.partitioning.AbstractRegion$BoundaryBuilder.characterize(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.SubHyperplane[]) org.apache.commons.math3.geometry.partitioning.BSPTree.getPlus()
org.apache.commons.math3.geometry.partitioning.AbstractRegion$BoundaryBuilder.characterize(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.SubHyperplane[]) org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.getHyperplane()
org.apache.commons.math3.geometry.partitioning.AbstractRegion$BoundaryBuilder.characterize(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.SubHyperplane[]) org.apache.commons.math3.exception.MathInternalError()
org.apache.commons.math3.geometry.partitioning.AbstractRegion$BoundaryBuilder.characterize(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.SubHyperplane[]) org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint.side(org.apache.commons.math3.geometry.partitioning.Hyperplane)
org.apache.commons.math3.geometry.partitioning.AbstractRegion$BoundaryBuilder.characterize(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.SubHyperplane[]) org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane.getMinus()
org.apache.commons.math3.geometry.partitioning.AbstractRegion$BoundaryBuilder.characterize(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.SubHyperplane[]) org.apache.commons.math3.geometry.partitioning.AbstractRegion$3.clinit()
org.apache.commons.math3.special.Beta.logBeta(double,double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.special.Beta.logBeta(double,double) org.apache.commons.math3.util.FastMath.log1p(double)
org.apache.commons.math3.special.Beta.logBeta(double,double) org.apache.commons.math3.util.FastMath.floor(double)
org.apache.commons.math3.special.Beta.logBeta(double,double) org.apache.commons.math3.special.Beta.logGammaSum(double,double)
org.apache.commons.math3.special.Beta.logBeta(double,double) org.apache.commons.math3.util.FastMath.min(double,double)
org.apache.commons.math3.special.Beta.logBeta(double,double) org.apache.commons.math3.special.Gamma.gamma(double)
org.apache.commons.math3.special.Beta.logBeta(double,double) org.apache.commons.math3.special.Beta.logGammaMinusLogGammaSum(double,double)
org.apache.commons.math3.special.Beta.logBeta(double,double) org.apache.commons.math3.special.Gamma.logGamma(double)
org.apache.commons.math3.special.Beta.logBeta(double,double) java.lang.Object.clinit()
org.apache.commons.math3.special.Beta.logBeta(double,double) java.lang.Double.isNaN(double)
org.apache.commons.math3.special.Beta.logBeta(double,double) org.apache.commons.math3.special.Gamma.clinit()
org.apache.commons.math3.special.Beta.logBeta(double,double) org.apache.commons.math3.special.Beta.sumDeltaMinusDeltaSum(double,double)
org.apache.commons.math3.special.Beta.logBeta(double,double) java.lang.Double.clinit()
org.apache.commons.math3.special.Beta.logBeta(double,double) org.apache.commons.math3.util.FastMath.log(double)
org.apache.commons.math3.special.Beta.logBeta(double,double) org.apache.commons.math3.special.Beta.clinit()
org.apache.commons.math3.special.Beta.logBeta(double,double) org.apache.commons.math3.util.FastMath.max(double,double)
org.apache.commons.math3.stat.Frequency$NaturalComparator(org.apache.commons.math3.stat.Frequency$1) org.apache.commons.math3.stat.Frequency$NaturalComparator()
org.apache.commons.math3.geometry.partitioning.RegionFactory() java.lang.Object.clinit()
org.apache.commons.math3.geometry.partitioning.RegionFactory() org.apache.commons.math3.geometry.partitioning.RegionFactory$NodesCleaner(org.apache.commons.math3.geometry.partitioning.RegionFactory,org.apache.commons.math3.geometry.partitioning.RegionFactory$1)
org.apache.commons.math3.geometry.partitioning.RegionFactory() java.lang.Object()
org.apache.commons.math3.util.MathUtils.hash(double) java.lang.Object.clinit()
org.apache.commons.math3.util.MathUtils.hash(double) java.lang.Double(double)
org.apache.commons.math3.util.MathUtils.hash(double) java.lang.Double.clinit()
org.apache.commons.math3.util.MathUtils.hash(double) java.lang.Double.hashCode()
org.apache.commons.math3.analysis.differentiation.DSCompiler.convertIndex(int,int,int[][],int,int,int[][]) java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.convertIndex(int,int,int[][],int,int,int[][]) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.convertIndex(int,int,int[][],int,int,int[][]) java.lang.System.arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org.apache.commons.math3.analysis.differentiation.DSCompiler.convertIndex(int,int,int[][],int,int,int[][]) org.apache.commons.math3.util.FastMath.min(int,int)
org.apache.commons.math3.analysis.differentiation.DSCompiler.convertIndex(int,int,int[][],int,int,int[][]) org.apache.commons.math3.analysis.differentiation.DSCompiler.getPartialDerivativeIndex(int,int,int[][],int[])
org.apache.commons.math3.analysis.differentiation.DSCompiler.convertIndex(int,int,int[][],int,int,int[][]) java.lang.System.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.convertIndex(int,int,int[][],int,int,int[][]) org.apache.commons.math3.analysis.differentiation.DSCompiler.clinit()
org.apache.commons.math3.stat.descriptive.summary.SumOfSquares.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.test(double[],int,int,boolean)
org.apache.commons.math3.random.AbstractWell(int,int,int,int,long) org.apache.commons.math3.random.AbstractWell(int,int,int,int,int[])
org.apache.commons.math3.optim.nonlinear.scalar.GoalType(java.lang.String,int) java.lang.Enum(java.lang.String,int)
org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry(int,int,double) java.lang.Object.clinit()
org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry(int,int,double) org.apache.commons.math3.linear.MatrixUtils.clinit()
org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry(int,int,double) org.apache.commons.math3.linear.MatrixUtils.checkMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int,int)
org.apache.commons.math3.stat.descriptive.moment.Variance.increment(double) org.apache.commons.math3.stat.descriptive.moment.SecondMoment.increment(double)
org.apache.commons.math3.stat.descriptive.moment.Variance.increment(double) org.apache.commons.math3.stat.descriptive.moment.FourthMoment.increment(double)
org.apache.commons.math3.stat.descriptive.moment.Variance.increment(double) org.apache.commons.math3.stat.descriptive.moment.ThirdMoment.increment(double)
org.apache.commons.math3.util.FastMath.exp(double) java.lang.Object.clinit()
org.apache.commons.math3.util.FastMath.exp(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.util.FastMath.exp(double) org.apache.commons.math3.util.FastMath.exp(double,double,double[])
org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$3.value(double,double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$3.value(double,double) org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction.access$000(org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction,double[],double[],double[][])
org.apache.commons.math3.dfp.Dfp.newInstance(int) java.lang.Object.clinit()
org.apache.commons.math3.dfp.Dfp.newInstance(int) org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.DfpField,int)
org.apache.commons.math3.dfp.Dfp.newInstance(int) org.apache.commons.math3.dfp.Dfp.getField()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.Collections$SynchronizedCollection.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.concurrent.ConcurrentHashMap$Values.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.SubList.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.concurrent.ArrayBlockingQueue.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.TreeSet(java.util.Comparator)
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.HashMap$KeySet.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.Collections$UnmodifiableCollection.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.HashSet.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.WeakHashMap$EntrySet.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.Collections$CheckedMap$CheckedEntrySet.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) org.apache.commons.math3.geometry.partitioning.BSPTree.visit(org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor)
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.Arrays$ArrayList.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) sun.util.PreHashedMap$1.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) javax.print.MimeType$ParameterMapEntrySet.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection)
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.TreeMap$Values.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.concurrent.LinkedBlockingQueue.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.concurrent.CopyOnWriteArrayList$COWSubList.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.concurrent.LinkedBlockingDeque.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.HashMap$EntrySet.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.JumboEnumSet.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) javax.security.auth.Subject$SecureSet.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.concurrent.DelayQueue.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) javax.security.auth.Subject$ClassSet.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.Hashtable$EntrySet.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.AbstractMap$1.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.Collections$SingletonList.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.WeakHashMap$Values.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) sun.nio.ch.Util$2.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.TreeSet.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.Collections$EmptySet.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.ArrayList$SubList.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.lang.ProcessEnvironment$StringValues.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) sun.util.PreHashedMap$2.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.TreeMap$NavigableSubMap$EntrySetView.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.Collections$SingletonSet.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.IdentityHashMap$Values.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) sun.awt.util.IdentityLinkedList.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.Hashtable$KeySet.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) sun.awt.util.IdentityArrayList.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) sun.security.jca.ProviderList$ServiceList.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.PriorityQueue.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.HashMap$Values.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.TreeMap$EntrySet.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.concurrent.CopyOnWriteArrayList.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.LinkedList.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.TreeMap$KeySet.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) org.apache.commons.math3.geometry.partitioning.AbstractRegion$1(org.apache.commons.math3.geometry.partitioning.AbstractRegion)
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.EnumMap$Values.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.Collections$SetFromMap.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.Collections$EmptyList.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.IdentityHashMap$EntrySet.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.RegularEnumSet.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.AbstractMap$2.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.Vector.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.lang.Object.clinit()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.Collections$CopiesList.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.TreeSet.addAll(java.util.Collection)
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) sun.security.jca.ProviderList$3.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.lang.ProcessEnvironment$StringEntrySet.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.lang.Object()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.lang.Boolean.clinit()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) org.apache.commons.math3.geometry.partitioning.BSPTree()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.ArrayList.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.EnumMap$KeySet.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.concurrent.ConcurrentHashMap$KeySet.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.concurrent.SynchronousQueue.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.Collections$CheckedCollection.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.Hashtable$ValueCollection.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.concurrent.ConcurrentLinkedQueue.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) javax.imageio.spi.PartiallyOrderedSet.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.TreeSet.clinit()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.WeakHashMap$KeySet.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.ArrayDeque.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) org.apache.commons.math3.geometry.partitioning.BSPTree(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.EnumMap$EntrySet.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) sun.misc.SoftCache$EntrySet.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.concurrent.ConcurrentHashMap$EntrySet.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) org.apache.commons.math3.geometry.partitioning.AbstractRegion$2(org.apache.commons.math3.geometry.partitioning.AbstractRegion)
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.IdentityHashMap$KeySet.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.util.Collections$AsLIFOQueue.size()
org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection) java.lang.ProcessEnvironment$StringKeySet.size()
org.apache.commons.math3.linear.Array2DRowRealMatrix.operate(double[]) java.lang.Object.clinit()
org.apache.commons.math3.linear.Array2DRowRealMatrix.operate(double[]) org.apache.commons.math3.exception.DimensionMismatchException(int,int)
org.apache.commons.math3.linear.Array2DRowRealMatrix.operate(double[]) java.lang.Throwable.clinit()
org.apache.commons.math3.linear.Array2DRowRealMatrix.operate(double[]) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.linear.Array2DRowRealMatrix.operate(double[]) org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension()
org.apache.commons.math3.linear.Array2DRowRealMatrix.operate(double[]) org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension()
org.apache.commons.math3.linear.RealVector$2.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector)
org.apache.commons.math3.linear.RealVector$2.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVector$2.subtract(org.apache.commons.math3.linear.RealVector)
org.apache.commons.math3.linear.RealVector$2.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector)
org.apache.commons.math3.linear.RealVector$2.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.OpenMapRealVector.subtract(org.apache.commons.math3.linear.RealVector)
org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1.weightedResidual(org.apache.commons.math3.optim.PointVectorValuePair) org.apache.commons.math3.linear.RealVector.dotProduct(org.apache.commons.math3.linear.RealVector)
org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1.weightedResidual(org.apache.commons.math3.optim.PointVectorValuePair) java.lang.Object.clinit()
org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1.weightedResidual(org.apache.commons.math3.optim.PointVectorValuePair) org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector)
org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1.weightedResidual(org.apache.commons.math3.optim.PointVectorValuePair) org.apache.commons.math3.linear.RealVector$2.dotProduct(org.apache.commons.math3.linear.RealVector)
org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1.weightedResidual(org.apache.commons.math3.optim.PointVectorValuePair) org.apache.commons.math3.linear.RealVector$2.subtract(org.apache.commons.math3.linear.RealVector)
org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1.weightedResidual(org.apache.commons.math3.optim.PointVectorValuePair) org.apache.commons.math3.linear.ArrayRealVector.clinit()
org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1.weightedResidual(org.apache.commons.math3.optim.PointVectorValuePair) org.apache.commons.math3.linear.AbstractRealMatrix.operate(org.apache.commons.math3.linear.RealVector)
org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1.weightedResidual(org.apache.commons.math3.optim.PointVectorValuePair) org.apache.commons.math3.linear.ArrayRealVector.dotProduct(org.apache.commons.math3.linear.RealVector)
org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1.weightedResidual(org.apache.commons.math3.optim.PointVectorValuePair) org.apache.commons.math3.linear.ArrayRealVector(double[],boolean)
org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1.weightedResidual(org.apache.commons.math3.optim.PointVectorValuePair) org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector)
org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1.weightedResidual(org.apache.commons.math3.optim.PointVectorValuePair) org.apache.commons.math3.linear.OpenMapRealVector.subtract(org.apache.commons.math3.linear.RealVector)
org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1.weightedResidual(org.apache.commons.math3.optim.PointVectorValuePair) org.apache.commons.math3.optim.PointVectorValuePair.getValueRef()
org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator.readExternal(java.io.ObjectInput) org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.setInterpolatedTime(double)
org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator.readExternal(java.io.ObjectInput) java.io.ObjectInputStream.readInt()
org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator.readExternal(java.io.ObjectInput) java.io.ObjectInputStream.readDouble()
org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator.readExternal(java.io.ObjectInput) org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.readBaseExternal(java.io.ObjectInput)
org.apache.commons.math3.analysis.FunctionUtils$18.value(double[]) org.apache.commons.math3.analysis.FunctionUtils$19.value(double[])
org.apache.commons.math3.analysis.FunctionUtils$18.value(double[]) org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[])
org.apache.commons.math3.util.OpenIntToFieldHashMap$Iterator.key() java.lang.Object.clinit()
org.apache.commons.math3.util.OpenIntToFieldHashMap$Iterator.key() java.lang.Throwable.clinit()
org.apache.commons.math3.util.OpenIntToFieldHashMap$Iterator.key() org.apache.commons.math3.util.OpenIntToFieldHashMap.access$100(org.apache.commons.math3.util.OpenIntToFieldHashMap)
org.apache.commons.math3.util.OpenIntToFieldHashMap$Iterator.key() org.apache.commons.math3.util.OpenIntToFieldHashMap.access$200(org.apache.commons.math3.util.OpenIntToFieldHashMap)
org.apache.commons.math3.util.OpenIntToFieldHashMap$Iterator.key() java.util.NoSuchElementException()
org.apache.commons.math3.util.OpenIntToFieldHashMap$Iterator.key() java.util.ConcurrentModificationException()
org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics.getN() org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getN()
org.apache.commons.math3.geometry.euclidean.threed.SubPlane(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region) org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region)
org.apache.commons.math3.random.ISAACRandom.next(int) org.apache.commons.math3.random.ISAACRandom.isaac()
org.apache.commons.math3.distribution.LogNormalDistribution.cumulativeProbability(double) org.apache.commons.math3.distribution.LogNormalDistribution.clinit()
org.apache.commons.math3.distribution.LogNormalDistribution.cumulativeProbability(double) java.lang.Object.clinit()
org.apache.commons.math3.distribution.LogNormalDistribution.cumulativeProbability(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.distribution.LogNormalDistribution.cumulativeProbability(double) org.apache.commons.math3.special.Erf.erf(double)
org.apache.commons.math3.distribution.LogNormalDistribution.cumulativeProbability(double) org.apache.commons.math3.util.FastMath.log(double)
org.apache.commons.math3.distribution.LogNormalDistribution.cumulativeProbability(double) org.apache.commons.math3.util.FastMath.abs(double)
org.apache.commons.math3.analysis.function.Sigmoid.value(double,double,double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Sigmoid.value(double,double,double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.function.Sigmoid.value(double,double,double) org.apache.commons.math3.util.FastMath.exp(double)
org.apache.commons.math3.fraction.FractionConversionException(double,long,long) org.apache.commons.math3.exception.ConvergenceException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])
org.apache.commons.math3.fraction.FractionConversionException(double,long,long) java.lang.Object.clinit()
org.apache.commons.math3.fraction.FractionConversionException(double,long,long) java.lang.Double.valueOf(double)
org.apache.commons.math3.fraction.FractionConversionException(double,long,long) java.lang.Long.valueOf(long)
org.apache.commons.math3.fraction.FractionConversionException(double,long,long) org.apache.commons.math3.exception.util.LocalizedFormats.clinit()
org.apache.commons.math3.fraction.FractionConversionException(double,long,long) java.lang.Double.clinit()
org.apache.commons.math3.fraction.FractionConversionException(double,long,long) java.lang.Long.clinit()
org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormat.getInstance() java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormat.getInstance() java.util.Locale.clinit()
org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormat.getInstance() java.util.Locale.getDefault()
org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormat.getInstance() org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormat.getInstance(java.util.Locale)
org.apache.commons.math3.dfp.Dfp.negate() org.apache.commons.math3.dfp.Dfp.newInstance(org.apache.commons.math3.dfp.Dfp)
org.apache.commons.math3.dfp.Dfp.negate() org.apache.commons.math3.dfp.DfpDec.newInstance(org.apache.commons.math3.dfp.Dfp)
org.apache.commons.math3.linear.MatrixUtils.checkMultiplicationCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix) org.apache.commons.math3.exception.DimensionMismatchException(int,int)
org.apache.commons.math3.linear.MatrixUtils.checkMultiplicationCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix) org.apache.commons.math3.linear.BlockRealMatrix.getColumnDimension()
org.apache.commons.math3.linear.MatrixUtils.checkMultiplicationCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix) java.lang.Throwable.clinit()
org.apache.commons.math3.linear.MatrixUtils.checkMultiplicationCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix) org.apache.commons.math3.linear.Array2DRowFieldMatrix.getRowDimension()
org.apache.commons.math3.linear.MatrixUtils.checkMultiplicationCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix) org.apache.commons.math3.linear.BlockFieldMatrix.getRowDimension()
org.apache.commons.math3.linear.MatrixUtils.checkMultiplicationCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix) org.apache.commons.math3.linear.OpenMapRealMatrix.getRowDimension()
org.apache.commons.math3.linear.MatrixUtils.checkMultiplicationCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix) org.apache.commons.math3.linear.Array2DRowFieldMatrix.getColumnDimension()
org.apache.commons.math3.linear.MatrixUtils.checkMultiplicationCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix) org.apache.commons.math3.linear.DiagonalMatrix.getRowDimension()
org.apache.commons.math3.linear.MatrixUtils.checkMultiplicationCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix) org.apache.commons.math3.linear.OpenMapRealMatrix.getColumnDimension()
org.apache.commons.math3.linear.MatrixUtils.checkMultiplicationCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix) org.apache.commons.math3.linear.BlockFieldMatrix.getColumnDimension()
org.apache.commons.math3.linear.MatrixUtils.checkMultiplicationCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix) org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension()
org.apache.commons.math3.linear.MatrixUtils.checkMultiplicationCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix) java.lang.Object.clinit()
org.apache.commons.math3.linear.MatrixUtils.checkMultiplicationCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix) org.apache.commons.math3.linear.SparseFieldMatrix.getColumnDimension()
org.apache.commons.math3.linear.MatrixUtils.checkMultiplicationCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix) org.apache.commons.math3.linear.SparseFieldMatrix.getRowDimension()
org.apache.commons.math3.linear.MatrixUtils.checkMultiplicationCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix) org.apache.commons.math3.linear.BlockRealMatrix.getRowDimension()
org.apache.commons.math3.linear.MatrixUtils.checkMultiplicationCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.linear.MatrixUtils.checkMultiplicationCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix) org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension()
org.apache.commons.math3.linear.MatrixUtils.checkMultiplicationCompatible(org.apache.commons.math3.linear.AnyMatrix,org.apache.commons.math3.linear.AnyMatrix) org.apache.commons.math3.linear.DiagonalMatrix.getColumnDimension()
org.apache.commons.math3.ml.clustering.DoublePoint.hashCode() java.lang.Object.clinit()
org.apache.commons.math3.ml.clustering.DoublePoint.hashCode() java.util.Arrays.hashCode(double[])
org.apache.commons.math3.ml.clustering.DoublePoint.hashCode() java.util.Arrays.clinit()
org.apache.commons.math3.optimization.direct.SimplexOptimizer$1.value(double[]) org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.computeObjectiveValue(double[])
org.apache.commons.math3.util.MathArrays$1.compare(org.apache.commons.math3.util.Pair,org.apache.commons.math3.util.Pair) org.apache.commons.math3.util.Pair.getKey()
org.apache.commons.math3.util.MathArrays$1.compare(org.apache.commons.math3.util.Pair,org.apache.commons.math3.util.Pair) java.lang.Double.compareTo(java.lang.Double)
org.apache.commons.math3.linear.RealVector.dotProduct(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVector$2.getDimension()
org.apache.commons.math3.linear.RealVector.dotProduct(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.ArrayRealVector.getEntry(int)
org.apache.commons.math3.linear.RealVector.dotProduct(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.OpenMapRealVector.getEntry(int)
org.apache.commons.math3.linear.RealVector.dotProduct(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.ArrayRealVector.checkVectorDimensions(org.apache.commons.math3.linear.RealVector)
org.apache.commons.math3.linear.RealVector.dotProduct(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.OpenMapRealVector.getDimension()
org.apache.commons.math3.linear.RealVector.dotProduct(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVector$2.getEntry(int)
org.apache.commons.math3.linear.RealVector.dotProduct(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.ArrayRealVector.getDimension()
org.apache.commons.math3.linear.RealVector.dotProduct(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVector.checkVectorDimensions(org.apache.commons.math3.linear.RealVector)
org.apache.commons.math3.util.Precision.equals(double,double,int) org.apache.commons.math3.util.FastMath.abs(long)
org.apache.commons.math3.util.Precision.equals(double,double,int) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.util.Precision.equals(double,double,int) java.lang.Object.clinit()
org.apache.commons.math3.util.Precision.equals(double,double,int) java.lang.Double.isNaN(double)
org.apache.commons.math3.util.Precision.equals(double,double,int) java.lang.Double.clinit()
org.apache.commons.math3.util.Precision.equals(double,double,int) java.lang.Double.doubleToLongBits(double)
org.apache.commons.math3.distribution.AbstractRealDistribution.probability(double,double) org.apache.commons.math3.distribution.ChiSquaredDistribution.cumulativeProbability(double)
org.apache.commons.math3.distribution.AbstractRealDistribution.probability(double,double) org.apache.commons.math3.distribution.CauchyDistribution.cumulativeProbability(double)
org.apache.commons.math3.distribution.AbstractRealDistribution.probability(double,double) org.apache.commons.math3.distribution.NormalDistribution.cumulativeProbability(double)
org.apache.commons.math3.distribution.AbstractRealDistribution.probability(double,double) org.apache.commons.math3.distribution.TDistribution.cumulativeProbability(double)
org.apache.commons.math3.distribution.AbstractRealDistribution.probability(double,double) org.apache.commons.math3.distribution.WeibullDistribution.cumulativeProbability(double)
org.apache.commons.math3.distribution.AbstractRealDistribution.probability(double,double) java.lang.Throwable.clinit()
org.apache.commons.math3.distribution.AbstractRealDistribution.probability(double,double) org.apache.commons.math3.distribution.ExponentialDistribution.cumulativeProbability(double)
org.apache.commons.math3.distribution.AbstractRealDistribution.probability(double,double) org.apache.commons.math3.exception.NumberIsTooLargeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)
org.apache.commons.math3.distribution.AbstractRealDistribution.probability(double,double) org.apache.commons.math3.distribution.BetaDistribution.cumulativeProbability(double)
org.apache.commons.math3.distribution.AbstractRealDistribution.probability(double,double) org.apache.commons.math3.distribution.ParetoDistribution.cumulativeProbability(double)
org.apache.commons.math3.distribution.AbstractRealDistribution.probability(double,double) java.lang.Object.clinit()
org.apache.commons.math3.distribution.AbstractRealDistribution.probability(double,double) org.apache.commons.math3.distribution.LevyDistribution.cumulativeProbability(double)
org.apache.commons.math3.distribution.AbstractRealDistribution.probability(double,double) org.apache.commons.math3.distribution.TriangularDistribution.cumulativeProbability(double)
org.apache.commons.math3.distribution.AbstractRealDistribution.probability(double,double) java.lang.Double.valueOf(double)
org.apache.commons.math3.distribution.AbstractRealDistribution.probability(double,double) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.distribution.AbstractRealDistribution.probability(double,double) org.apache.commons.math3.distribution.LogNormalDistribution.cumulativeProbability(double)
org.apache.commons.math3.distribution.AbstractRealDistribution.probability(double,double) org.apache.commons.math3.distribution.GammaDistribution.cumulativeProbability(double)
org.apache.commons.math3.distribution.AbstractRealDistribution.probability(double,double) org.apache.commons.math3.distribution.UniformRealDistribution.cumulativeProbability(double)
org.apache.commons.math3.distribution.AbstractRealDistribution.probability(double,double) org.apache.commons.math3.distribution.FDistribution.cumulativeProbability(double)
org.apache.commons.math3.distribution.AbstractRealDistribution.probability(double,double) org.apache.commons.math3.exception.util.LocalizedFormats.clinit()
org.apache.commons.math3.distribution.AbstractRealDistribution.probability(double,double) java.lang.Double.clinit()
org.apache.commons.math3.distribution.AbstractRealDistribution.probability(double,double) org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double)
org.apache.commons.math3.distribution.AbstractRealDistribution.probability(double,double) org.apache.commons.math3.random.EmpiricalDistribution.cumulativeProbability(double)
org.apache.commons.math3.util.FastMath.tanQ(double,double,boolean) java.lang.Object.clinit()
org.apache.commons.math3.util.FastMath.tanQ(double,double,boolean) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.util.FastMath.tanQ(double,double,boolean) org.apache.commons.math3.util.FastMath.polyCosine(double)
org.apache.commons.math3.util.FastMath.tanQ(double,double,boolean) org.apache.commons.math3.util.FastMath.polySine(double)
org.apache.commons.math3.util.MathArrays.equals(double[],double[]) java.lang.Object.clinit()
org.apache.commons.math3.util.MathArrays.equals(double[],double[]) org.apache.commons.math3.util.Precision.equals(double,double)
org.apache.commons.math3.util.MathArrays.equals(double[],double[]) org.apache.commons.math3.util.Precision.clinit()
org.apache.commons.math3.dfp.Dfp.round(int) java.lang.Object.clinit()
org.apache.commons.math3.dfp.Dfp.round(int) java.lang.Enum.ordinal()
org.apache.commons.math3.dfp.Dfp.round(int) org.apache.commons.math3.dfp.DfpField.setIEEEFlagsBits(int)
org.apache.commons.math3.dfp.Dfp.round(int) org.apache.commons.math3.dfp.Dfp$1.clinit()
org.apache.commons.math3.dfp.Dfp.round(int) org.apache.commons.math3.dfp.Dfp.shiftRight()
org.apache.commons.math3.dfp.Dfp.round(int) org.apache.commons.math3.dfp.DfpField.getRoundingMode()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getFreeParameters() org.apache.commons.math3.analysis.differentiation.DSCompiler.getFreeParameters()
org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.test(double[],int,int,boolean) java.lang.Object.clinit()
org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.test(double[],int,int,boolean) org.apache.commons.math3.exception.NotPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)
org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.test(double[],int,int,boolean) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.test(double[],int,int,boolean) java.lang.Integer.clinit()
org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.test(double[],int,int,boolean) java.lang.Throwable.clinit()
org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.test(double[],int,int,boolean) org.apache.commons.math3.exception.util.LocalizedFormats.clinit()
org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.test(double[],int,int,boolean) org.apache.commons.math3.exception.NullArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])
org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.test(double[],int,int,boolean) org.apache.commons.math3.exception.NumberIsTooLargeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)
org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.test(double[],int,int,boolean) java.lang.Integer.valueOf(int)
org.apache.commons.math3.geometry.partitioning.AbstractRegion$BoundaryBuilder.visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree) java.lang.Object.clinit()
org.apache.commons.math3.geometry.partitioning.AbstractRegion$BoundaryBuilder.visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.partitioning.BSPTree.getCut()
org.apache.commons.math3.geometry.partitioning.AbstractRegion$BoundaryBuilder.visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.partitioning.BSPTree.getPlus()
org.apache.commons.math3.geometry.partitioning.AbstractRegion$BoundaryBuilder.visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.partitioning.BoundaryAttribute(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.SubHyperplane)
org.apache.commons.math3.geometry.partitioning.AbstractRegion$BoundaryBuilder.visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.partitioning.AbstractRegion$BoundaryBuilder.characterize(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.SubHyperplane[])
org.apache.commons.math3.geometry.partitioning.AbstractRegion$BoundaryBuilder.visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.partitioning.BSPTree.getMinus()
org.apache.commons.math3.geometry.partitioning.AbstractRegion$BoundaryBuilder.visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree) java.lang.reflect.Array.newInstance(java.lang.Class,int)
org.apache.commons.math3.geometry.partitioning.AbstractRegion$BoundaryBuilder.visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.partitioning.BSPTree.setAttribute(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.AbstractRegion$BoundaryBuilder.visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.isEmpty()
org.apache.commons.math3.geometry.partitioning.AbstractRegion$BoundaryBuilder.visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.copySelf()
org.apache.commons.math3.analysis.FunctionUtils$16$2.value(double[]) java.lang.Object.clinit()
org.apache.commons.math3.analysis.FunctionUtils$16$2.value(double[]) org.apache.commons.math3.analysis.differentiation.DerivativeStructure(int,int,int,double)
org.apache.commons.math3.analysis.FunctionUtils$16$2.value(double[]) org.apache.commons.math3.analysis.FunctionUtils$17.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure[])
org.apache.commons.math3.analysis.FunctionUtils$16$2.value(double[]) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getPartialDerivative(int[])
org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1.compare(java.lang.Object,java.lang.Object) org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1.compare(org.apache.commons.math3.optim.PointVectorValuePair,org.apache.commons.math3.optim.PointVectorValuePair)
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.toString() java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.toString() org.apache.commons.math3.geometry.VectorFormat.format(org.apache.commons.math3.geometry.Vector)
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.toString() org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormat.getInstance()
org.apache.commons.math3.util.BigReal.equals(java.lang.Object) java.math.BigDecimal.equals(java.lang.Object)
org.apache.commons.math3.stat.Frequency.valuesIterator() java.util.HashMap$EntrySet.iterator()
org.apache.commons.math3.stat.Frequency.valuesIterator() java.util.TreeMap.keySet()
org.apache.commons.math3.stat.Frequency.valuesIterator() java.util.Collections$SynchronizedCollection.iterator()
org.apache.commons.math3.stat.Frequency.valuesIterator() java.util.RegularEnumSet.iterator()
org.apache.commons.math3.stat.Frequency.valuesIterator() java.util.Collections$SingletonSet.iterator()
org.apache.commons.math3.stat.Frequency.valuesIterator() java.util.Hashtable$EntrySet.iterator()
org.apache.commons.math3.stat.Frequency.valuesIterator() java.util.Collections$UnmodifiableCollection.iterator()
org.apache.commons.math3.stat.Frequency.valuesIterator() java.util.IdentityHashMap$KeySet.iterator()
org.apache.commons.math3.stat.Frequency.valuesIterator() java.util.Collections$EmptySet.iterator()
org.apache.commons.math3.stat.Frequency.valuesIterator() java.util.TreeMap$AscendingSubMap$AscendingEntrySetView.iterator()
org.apache.commons.math3.stat.Frequency.valuesIterator() javax.print.MimeType$ParameterMapEntrySet.iterator()
org.apache.commons.math3.stat.Frequency.valuesIterator() java.util.Collections$CheckedMap$CheckedEntrySet.iterator()
org.apache.commons.math3.stat.Frequency.valuesIterator() java.util.WeakHashMap$KeySet.iterator()
org.apache.commons.math3.stat.Frequency.valuesIterator() java.util.Collections$SetFromMap.iterator()
org.apache.commons.math3.stat.Frequency.valuesIterator() java.util.TreeMap$KeySet.iterator()
org.apache.commons.math3.stat.Frequency.valuesIterator() java.util.concurrent.ConcurrentHashMap$EntrySet.iterator()
org.apache.commons.math3.stat.Frequency.valuesIterator() java.util.TreeSet.iterator()
org.apache.commons.math3.stat.Frequency.valuesIterator() java.util.TreeMap$EntrySet.iterator()
org.apache.commons.math3.stat.Frequency.valuesIterator() java.util.EnumMap$KeySet.iterator()
org.apache.commons.math3.stat.Frequency.valuesIterator() java.util.Hashtable$KeySet.iterator()
org.apache.commons.math3.stat.Frequency.valuesIterator() java.util.HashMap$KeySet.iterator()
org.apache.commons.math3.stat.Frequency.valuesIterator() java.util.concurrent.ConcurrentHashMap$KeySet.iterator()
org.apache.commons.math3.stat.Frequency.valuesIterator() javax.imageio.spi.PartiallyOrderedSet.iterator()
org.apache.commons.math3.stat.Frequency.valuesIterator() java.util.WeakHashMap$EntrySet.iterator()
org.apache.commons.math3.stat.Frequency.valuesIterator() java.util.Collections$CheckedCollection.iterator()
org.apache.commons.math3.stat.Frequency.valuesIterator() javax.security.auth.Subject$ClassSet.iterator()
org.apache.commons.math3.stat.Frequency.valuesIterator() java.util.HashSet.iterator()
org.apache.commons.math3.stat.Frequency.valuesIterator() sun.util.PreHashedMap$2.iterator()
org.apache.commons.math3.stat.Frequency.valuesIterator() java.util.EnumMap$EntrySet.iterator()
org.apache.commons.math3.stat.Frequency.valuesIterator() java.lang.ProcessEnvironment$StringKeySet.iterator()
org.apache.commons.math3.stat.Frequency.valuesIterator() java.util.IdentityHashMap$EntrySet.iterator()
org.apache.commons.math3.stat.Frequency.valuesIterator() java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator()
org.apache.commons.math3.stat.Frequency.valuesIterator() java.util.TreeMap$DescendingSubMap$DescendingEntrySetView.iterator()
org.apache.commons.math3.stat.Frequency.valuesIterator() javax.security.auth.Subject$SecureSet.iterator()
org.apache.commons.math3.stat.Frequency.valuesIterator() java.lang.ProcessEnvironment$StringEntrySet.iterator()
org.apache.commons.math3.stat.Frequency.valuesIterator() sun.nio.ch.Util$2.iterator()
org.apache.commons.math3.stat.Frequency.valuesIterator() java.util.JumboEnumSet.iterator()
org.apache.commons.math3.stat.Frequency.valuesIterator() sun.misc.SoftCache$EntrySet.iterator()
org.apache.commons.math3.stat.Frequency.valuesIterator() sun.util.PreHashedMap$1.iterator()
org.apache.commons.math3.stat.Frequency.valuesIterator() java.util.AbstractMap$1.iterator()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.moment.SecondMoment.clear()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.rank.Max.getResult()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.summary.SumOfLogs.getResult()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.getResult()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.summary.Sum.clear()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.summary.SumOfSquares.getResult()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.moment.GeometricMean.clear()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.clear()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.moment.SecondMoment.getResult()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.moment.FourthMoment.getResult()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.moment.Mean.getResult()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.moment.Skewness.getResult()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.summary.Product.getResult()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.summary.Product.clear()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.moment.FourthMoment.clear()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.moment.Skewness.clear()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.incrementAll(double[],int,int)
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.test(double[],int,int)
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.moment.ThirdMoment.clear()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.moment.Mean.clear()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.moment.FirstMoment.getResult()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.moment.FirstMoment.clear()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.moment.Variance.clear()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.rank.Min.getResult()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.moment.ThirdMoment.getResult()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.summary.SumOfSquares.clear()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getResult()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.rank.Min.clear()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.moment.Kurtosis.getResult()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.rank.Max.clear()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.moment.Variance.getResult()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.summary.SumOfLogs.clear()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.moment.Kurtosis.clear()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.summary.Sum.getResult()
org.apache.commons.math3.distribution.CauchyDistribution.cumulativeProbability(double) java.lang.Object.clinit()
org.apache.commons.math3.distribution.CauchyDistribution.cumulativeProbability(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.distribution.CauchyDistribution.cumulativeProbability(double) org.apache.commons.math3.util.FastMath.atan(double)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet() org.apache.commons.math3.geometry.partitioning.AbstractRegion()
org.apache.commons.math3.analysis.function.Cos() java.lang.Object()
org.apache.commons.math3.linear.AbstractRealMatrix.toString() java.lang.Object.clinit()
org.apache.commons.math3.linear.AbstractRealMatrix.toString() java.lang.StringBuilder()
org.apache.commons.math3.linear.AbstractRealMatrix.toString() org.apache.commons.math3.linear.AbstractRealMatrix.clinit()
org.apache.commons.math3.linear.AbstractRealMatrix.toString() org.apache.commons.math3.linear.RealMatrixFormat.format(org.apache.commons.math3.linear.RealMatrix)
org.apache.commons.math3.linear.AbstractRealMatrix.toString() java.lang.String.lastIndexOf(int)
org.apache.commons.math3.linear.AbstractRealMatrix.toString() java.lang.String.substring(int)
org.apache.commons.math3.linear.AbstractRealMatrix.toString() java.lang.StringBuilder.append(java.lang.String)
org.apache.commons.math3.linear.AbstractRealMatrix.toString() java.lang.Object.getClass()
org.apache.commons.math3.linear.AbstractRealMatrix.toString() java.lang.Class.getName()
org.apache.commons.math3.linear.AbstractRealMatrix.toString() java.lang.StringBuilder.toString()
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getMean() org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMean()
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.hashCode() org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.hashCode()
org.apache.commons.math3.util.FastMath.ceil(double) java.lang.Object.clinit()
org.apache.commons.math3.util.FastMath.ceil(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.util.FastMath.ceil(double) org.apache.commons.math3.util.FastMath.floor(double)
org.apache.commons.math3.util.FastMath.acosh(double) java.lang.Object.clinit()
org.apache.commons.math3.util.FastMath.acosh(double) org.apache.commons.math3.util.FastMath.sqrt(double)
org.apache.commons.math3.util.FastMath.acosh(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.util.FastMath.acosh(double) org.apache.commons.math3.util.FastMath.log(double)
org.apache.commons.math3.geometry.euclidean.threed.Plane.wholeHyperplane() org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet()
org.apache.commons.math3.geometry.euclidean.threed.Plane.wholeHyperplane() java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.threed.Plane.wholeHyperplane() org.apache.commons.math3.geometry.euclidean.threed.Plane.wholeHyperplane()
org.apache.commons.math3.geometry.euclidean.threed.Plane.wholeHyperplane() org.apache.commons.math3.geometry.euclidean.threed.SubPlane(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region)
org.apache.commons.math3.analysis.FunctionUtils$17.value(double[]) org.apache.commons.math3.analysis.FunctionUtils$16.value(double[])
org.apache.commons.math3.distribution.ParetoDistribution.cumulativeProbability(double) java.lang.Object.clinit()
org.apache.commons.math3.distribution.ParetoDistribution.cumulativeProbability(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.distribution.ParetoDistribution.cumulativeProbability(double) org.apache.commons.math3.util.FastMath.pow(double,double)
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.getInterpolatedSecondaryState(int) org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.evaluateCompleteInterpolatedState()
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.getInterpolatedSecondaryState(int) org.apache.commons.math3.ode.EquationsMapper.extractEquationData(double[],double[])
org.apache.commons.math3.analysis.function.HarmonicOscillator.value(double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.HarmonicOscillator.value(double) org.apache.commons.math3.analysis.function.HarmonicOscillator.value(double,double)
org.apache.commons.math3.analysis.differentiation.DSCompiler.atanh(double[],int,double[],int) java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.atanh(double[],int,double[],int) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.atanh(double[],int,double[],int) org.apache.commons.math3.analysis.differentiation.DSCompiler.compose(double[],int,double[],double[],int)
org.apache.commons.math3.analysis.differentiation.DSCompiler.atanh(double[],int,double[],int) org.apache.commons.math3.util.FastMath.atanh(double)
org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization$DataRow.equals(java.lang.Object) java.lang.Object.clinit()
org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization$DataRow.equals(java.lang.Object) org.apache.commons.math3.util.MathArrays.equals(double[],double[])
org.apache.commons.math3.util.FastMath.sinQ(double,double) java.lang.Object.clinit()
org.apache.commons.math3.util.FastMath.sinQ(double,double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.util.FastMath.sinQ(double,double) org.apache.commons.math3.util.FastMath.polyCosine(double)
org.apache.commons.math3.util.FastMath.sinQ(double,double) org.apache.commons.math3.util.FastMath.polySine(double)
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMin() org.apache.commons.math3.stat.descriptive.moment.FirstMoment.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMin() org.apache.commons.math3.stat.descriptive.rank.Max.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMin() org.apache.commons.math3.stat.descriptive.summary.SumOfLogs.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMin() org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMin() org.apache.commons.math3.stat.descriptive.summary.SumOfSquares.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMin() org.apache.commons.math3.stat.descriptive.rank.Min.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMin() org.apache.commons.math3.stat.descriptive.moment.ThirdMoment.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMin() org.apache.commons.math3.stat.descriptive.moment.SecondMoment.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMin() org.apache.commons.math3.stat.descriptive.moment.FourthMoment.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMin() org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMin() org.apache.commons.math3.stat.descriptive.moment.Mean.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMin() org.apache.commons.math3.stat.descriptive.moment.Skewness.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMin() org.apache.commons.math3.stat.descriptive.moment.Kurtosis.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMin() org.apache.commons.math3.stat.descriptive.moment.Variance.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMin() org.apache.commons.math3.stat.descriptive.summary.Product.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMin() org.apache.commons.math3.stat.descriptive.summary.Sum.getResult()
org.apache.commons.math3.stat.descriptive.moment.Mean.increment(double) org.apache.commons.math3.stat.descriptive.moment.SecondMoment.increment(double)
org.apache.commons.math3.stat.descriptive.moment.Mean.increment(double) org.apache.commons.math3.stat.descriptive.moment.FourthMoment.increment(double)
org.apache.commons.math3.stat.descriptive.moment.Mean.increment(double) org.apache.commons.math3.stat.descriptive.moment.ThirdMoment.increment(double)
org.apache.commons.math3.stat.descriptive.moment.Mean.increment(double) org.apache.commons.math3.stat.descriptive.moment.FirstMoment.increment(double)
org.apache.commons.math3.geometry.partitioning.AbstractRegion$Sides() java.lang.Object()
org.apache.commons.math3.random.RandomAdaptor.nextBoolean() java.util.Random.nextBoolean()
org.apache.commons.math3.random.RandomAdaptor.nextBoolean() org.apache.commons.math3.random.RandomGeneratorFactory$1.nextBoolean()
org.apache.commons.math3.random.RandomAdaptor.nextBoolean() org.apache.commons.math3.random.SynchronizedRandomGenerator.nextBoolean()
org.apache.commons.math3.random.RandomAdaptor.nextBoolean() org.apache.commons.math3.random.RandomAdaptor.nextBoolean()
org.apache.commons.math3.random.RandomAdaptor.nextBoolean() org.apache.commons.math3.random.BitsStreamGenerator.nextBoolean()
org.apache.commons.math3.linear.RealVector$2$1(org.apache.commons.math3.linear.RealVector$2,java.util.Iterator) java.lang.Object.clinit()
org.apache.commons.math3.linear.RealVector$2$1(org.apache.commons.math3.linear.RealVector$2,java.util.Iterator) org.apache.commons.math3.linear.RealVector$2$UnmodifiableEntry(org.apache.commons.math3.linear.RealVector$2)
org.apache.commons.math3.linear.RealVector$2$1(org.apache.commons.math3.linear.RealVector$2,java.util.Iterator) java.lang.Object()
org.apache.commons.math3.geometry.euclidean.threed.Vector3D(double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D) java.lang.Object()
org.apache.commons.math3.random.MersenneTwister.setSeed(long) org.apache.commons.math3.random.MersenneTwister.setSeed(int[])
org.apache.commons.math3.fitting.GaussianCurveFitter$ParameterGuesser$1.compare(org.apache.commons.math3.fitting.WeightedObservedPoint,org.apache.commons.math3.fitting.WeightedObservedPoint) org.apache.commons.math3.fitting.WeightedObservedPoint.getX()
org.apache.commons.math3.fitting.GaussianCurveFitter$ParameterGuesser$1.compare(org.apache.commons.math3.fitting.WeightedObservedPoint,org.apache.commons.math3.fitting.WeightedObservedPoint) org.apache.commons.math3.fitting.WeightedObservedPoint.getY()
org.apache.commons.math3.fitting.GaussianCurveFitter$ParameterGuesser$1.compare(org.apache.commons.math3.fitting.WeightedObservedPoint,org.apache.commons.math3.fitting.WeightedObservedPoint) org.apache.commons.math3.fitting.WeightedObservedPoint.getWeight()
org.apache.commons.math3.fraction.BigFraction.compareTo(org.apache.commons.math3.fraction.BigFraction) java.math.BigInteger.multiply(java.math.BigInteger)
org.apache.commons.math3.fraction.BigFraction.compareTo(org.apache.commons.math3.fraction.BigFraction) java.math.BigInteger.compareTo(java.math.BigInteger)
org.apache.commons.math3.special.Beta.logGammaSum(double,double) org.apache.commons.math3.exception.OutOfRangeException(java.lang.Number,java.lang.Number,java.lang.Number)
org.apache.commons.math3.special.Beta.logGammaSum(double,double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.special.Beta.logGammaSum(double,double) java.lang.Object.clinit()
org.apache.commons.math3.special.Beta.logGammaSum(double,double) org.apache.commons.math3.util.FastMath.log1p(double)
org.apache.commons.math3.special.Beta.logGammaSum(double,double) org.apache.commons.math3.special.Gamma.clinit()
org.apache.commons.math3.special.Beta.logGammaSum(double,double) java.lang.Double.valueOf(double)
org.apache.commons.math3.special.Beta.logGammaSum(double,double) java.lang.Throwable.clinit()
org.apache.commons.math3.special.Beta.logGammaSum(double,double) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.special.Beta.logGammaSum(double,double) java.lang.Double.clinit()
org.apache.commons.math3.special.Beta.logGammaSum(double,double) org.apache.commons.math3.util.FastMath.log(double)
org.apache.commons.math3.special.Beta.logGammaSum(double,double) org.apache.commons.math3.special.Gamma.logGamma1p(double)
org.apache.commons.math3.dfp.DfpDec(org.apache.commons.math3.dfp.DfpField,long) org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.DfpField,long)
org.apache.commons.math3.linear.OpenMapRealVector.copy() org.apache.commons.math3.linear.OpenMapRealVector(org.apache.commons.math3.linear.OpenMapRealVector)
org.apache.commons.math3.linear.OpenMapRealVector.copy() java.lang.Object.clinit()
org.apache.commons.math3.linear.OpenMapRealVector.copy() org.apache.commons.math3.linear.OpenMapRealVector.copy()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.rebalanceRightShrunk() java.lang.Object.clinit()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.rebalanceRightShrunk() java.lang.Enum.ordinal()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.rebalanceRightShrunk() org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.rotateCW()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.rebalanceRightShrunk() org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.clinit()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.rebalanceRightShrunk() org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.rotateCCW()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.rebalanceRightShrunk() org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$1.clinit()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getMax() org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getResults(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])
org.apache.commons.math3.analysis.function.Constant(double) java.lang.Object()
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Object,java.lang.Object) org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Comparable,java.lang.Comparable)
org.apache.commons.math3.stat.descriptive.rank.Max.evaluate(double[],int,int) java.lang.Object.clinit()
org.apache.commons.math3.stat.descriptive.rank.Max.evaluate(double[],int,int) java.lang.Double.isNaN(double)
org.apache.commons.math3.stat.descriptive.rank.Max.evaluate(double[],int,int) java.lang.Double.clinit()
org.apache.commons.math3.stat.descriptive.rank.Max.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.test(double[],int,int)
org.apache.commons.math3.ode.events.Transformer$3(java.lang.String,int) org.apache.commons.math3.ode.events.Transformer(java.lang.String,int,org.apache.commons.math3.ode.events.Transformer$1)
org.apache.commons.math3.linear.RealVector$2$1.next() sun.nio.cs.FastCharsetProvider$1.next()
org.apache.commons.math3.linear.RealVector$2$1.next() sun.util.PreHashedMap$1$1.next()
org.apache.commons.math3.linear.RealVector$2$1.next() javax.security.auth.Subject$SecureSet$1.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator.next()
org.apache.commons.math3.linear.RealVector$2$1.next() sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.AbstractMap$1$1.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.concurrent.CopyOnWriteArrayList$COWIterator.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.Vector$Itr.next()
org.apache.commons.math3.linear.RealVector$2$1.next() sun.net.www.MessageHeader$HeaderIterator.next()
org.apache.commons.math3.linear.RealVector$2$1.next() sun.util.PreHashedMap$2$1.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.TreeMap$KeyIterator.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.ArrayList$SubList$1.next()
org.apache.commons.math3.linear.RealVector$2$1.next() org.apache.commons.math3.util.MultidimensionalCounter$Iterator.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.concurrent.ArrayBlockingQueue$Itr.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.lang.ProcessEnvironment$StringKeySet$1.next()
org.apache.commons.math3.linear.RealVector$2$1.next() org.apache.commons.math3.linear.OpenMapRealVector$OpenMapEntry.getIndex()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.HashMap$ValueIterator.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.TreeMap$DescendingKeyIterator.next()
org.apache.commons.math3.linear.RealVector$2$1.next() javax.imageio.ImageIO$ImageReaderIterator.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.JumboEnumSet$EnumSetIterator.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.HashMap$KeyIterator.next()
org.apache.commons.math3.linear.RealVector$2$1.next() org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.next()
org.apache.commons.math3.linear.RealVector$2$1.next() sun.misc.SoftCache$EntrySet$1.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.ServiceLoader$LazyIterator.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.next()
org.apache.commons.math3.linear.RealVector$2$1.next() sun.misc.Service$LazyIterator.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.WeakHashMap$ValueIterator.next()
org.apache.commons.math3.linear.RealVector$2$1.next() org.apache.commons.math3.linear.RealVector$SparseEntryIterator.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.IdentityHashMap$EntryIterator.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.ArrayList$Itr.next()
org.apache.commons.math3.linear.RealVector$2$1.next() javax.imageio.spi.PartialOrderIterator.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.TreeMap$NavigableSubMap$SubMapKeyIterator.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.concurrent.ConcurrentHashMap$ValueIterator.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.PriorityQueue$Itr.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.AbstractMap$2$1.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.concurrent.ConcurrentHashMap$KeyIterator.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.ServiceLoader$1.next()
org.apache.commons.math3.linear.RealVector$2$1.next() javax.imageio.ImageIO$ImageTranscoderIterator.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.RegularEnumSet$EnumSetIterator.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.concurrent.DelayQueue$Itr.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.LinkedList$DescendingIterator.next()
org.apache.commons.math3.linear.RealVector$2$1.next() sun.net.www.HeaderParser$ParserIterator.next()
org.apache.commons.math3.linear.RealVector$2$1.next() javax.print.MimeType$ParameterMapEntrySetIterator.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.WeakHashMap$KeyIterator.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.concurrent.LinkedBlockingDeque$AbstractItr.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.Collections$CheckedMap$CheckedEntrySet$1.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.EnumMap$KeyIterator.next()
org.apache.commons.math3.linear.RealVector$2$1.next() sun.nio.fs.AbstractPath$1.next()
org.apache.commons.math3.linear.RealVector$2$1.next() sun.security.jca.ProviderList$ServiceList$1.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.SubList$1.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.LinkedList$ListItr.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.Collections$EmptyIterator.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.LinkedHashMap$ValueIterator.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.TreeMap$NavigableSubMap$SubMapEntryIterator.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.TreeMap$ValueIterator.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.Scanner.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.ArrayDeque$DeqIterator.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.LinkedHashMap$EntryIterator.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.IdentityHashMap$KeyIterator.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.ArrayDeque$DescendingIterator.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.EnumMap$ValueIterator.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.concurrent.ConcurrentHashMap$EntryIterator.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.IdentityHashMap$ValueIterator.next()
org.apache.commons.math3.linear.RealVector$2$1.next() org.apache.commons.math3.util.CombinatoricsUtils$SingletonIterator.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.Collections$CheckedCollection$1.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.LinkedHashMap$KeyIterator.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.AbstractList$Itr.next()
org.apache.commons.math3.linear.RealVector$2$1.next() org.apache.commons.math3.linear.RealVector$2$2.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.Collections$CheckedList$1.next()
org.apache.commons.math3.linear.RealVector$2$1.next() com.sun.imageio.plugins.jpeg.ImageTypeIterator.next()
org.apache.commons.math3.linear.RealVector$2$1.next() javax.imageio.ImageIO$ImageWriterIterator.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.TreeMap$EntryIterator.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next()
org.apache.commons.math3.linear.RealVector$2$1.next() org.apache.commons.math3.linear.RealVector$1.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.nio.charset.Charset$1.next()
org.apache.commons.math3.linear.RealVector$2$1.next() javax.imageio.spi.FilterIterator.next()
org.apache.commons.math3.linear.RealVector$2$1.next() sun.nio.fs.UnixFileSystem$FileStoreIterator.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.Collections$1.next()
org.apache.commons.math3.linear.RealVector$2$1.next() org.apache.commons.math3.util.CombinatoricsUtils$LexicographicCombinationIterator.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.concurrent.ConcurrentLinkedQueue$Itr.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.Hashtable$Enumerator.next()
org.apache.commons.math3.linear.RealVector$2$1.next() org.apache.commons.math3.linear.RealVector$Entry.getIndex()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.HashMap$EntryIterator.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.concurrent.LinkedBlockingQueue$Itr.next()
org.apache.commons.math3.linear.RealVector$2$1.next() sun.awt.util.IdentityLinkedList$DescendingIterator.next()
org.apache.commons.math3.linear.RealVector$2$1.next() sun.awt.util.IdentityLinkedList$ListItr.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.EnumMap$EntryIterator.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.lang.ProcessEnvironment$StringEntrySet$1.next()
org.apache.commons.math3.linear.RealVector$2$1.next() org.apache.commons.math3.linear.RealVector$2$1.next()
org.apache.commons.math3.linear.RealVector$2$1.next() org.apache.commons.math3.linear.RealVector$Entry.setIndex(int)
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.Collections$UnmodifiableList$1.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.WeakHashMap$EntryIterator.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.util.Collections$UnmodifiableCollection$1.next()
org.apache.commons.math3.linear.RealVector$2$1.next() java.lang.ProcessEnvironment$StringValues$1.next()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() sun.text.CompactByteArray.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.awt.geom.AffineTransform.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() sun.security.krb5.internal.KerberosTime.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.util.Hashtable.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() sun.security.krb5.internal.Ticket.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() sun.text.IntHashtable.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() sun.security.util.BitArray.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() com.sun.imageio.plugins.jpeg.DHTMarkerSegment$Htable.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.util.SimpleTimeZone.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.util.IdentityHashMap.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.util.JapaneseImperialCalendar.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() sun.security.krb5.internal.ETypeInfo.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() sun.text.normalizer.NormalizerBase.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.util.Locale.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() sun.security.krb5.internal.TicketFlags.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() sun.java2d.SunGraphics2D.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() sun.security.provider.MD4.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() javax.swing.tree.DefaultTreeSelectionModel.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.awt.print.Paper.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.text.MessageFormat.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.lang.Object.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() javax.swing.text.SimpleAttributeSet.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() javax.swing.ArrayTable.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.text.SimpleDateFormat.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() sun.java2d.loops.FontInfo.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() sun.security.krb5.PrincipalName.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.awt.PageAttributes.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() com.sun.imageio.plugins.png.PNGMetadata.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.util.GregorianCalendar.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() com.sun.imageio.plugins.jpeg.SOFMarkerSegment.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.util.Vector.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() javax.swing.text.ElementIterator.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.net.HttpCookie.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.awt.datatransfer.MimeType.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.awt.RenderingHints.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.text.DateFormatSymbols.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.util.HashSet.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() sun.util.calendar.ImmutableGregorianDate.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() javax.sound.midi.MetaMessage.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() sun.font.FontLineMetrics.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() sun.font.StandardGlyphVector.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.text.AttributedString$AttributedStringIterator.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.text.RuleBasedBreakIterator.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() javax.swing.text.Segment.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.awt.ImageCapabilities.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() sun.security.krb5.internal.LastReqEntry.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() javax.swing.text.StyleContext$SmallAttributeSet.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.text.RuleBasedCollator.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.text.RuleBasedBreakIterator$SafeCharIterator.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() javax.swing.text.ElementIterator$StackItem.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$ICCMarkerSegment.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.awt.geom.Line2D.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() org.apache.commons.math3.util.FastMathLiteralArrays.clinit()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.util.ResourceBundle$CacheKey.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumbJPEG.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() sun.security.krb5.internal.ETypeInfo2.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.awt.font.TextMeasurer.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.util.LinkedList.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() sun.font.AttributeValues.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() javax.swing.text.StyledEditorKit$1.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.util.ArrayDeque.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() javax.swing.text.GlyphView.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.awt.datatransfer.DataFlavor.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() sun.security.krb5.internal.PAData.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() javax.swing.AbstractAction.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() sun.text.normalizer.ReplaceableUCharacterIterator.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.util.concurrent.CopyOnWriteArrayList.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumb.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.awt.geom.Point2D.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() javax.swing.text.html.OptionListModel.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() sun.security.krb5.internal.AuthorizationDataEntry.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() javax.swing.text.EditorKit.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() javax.swing.text.StyledEditorKit.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() com.sun.imageio.plugins.jpeg.DQTMarkerSegment.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.util.JumboEnumSet.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() sun.security.krb5.internal.HostAddresses.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() javax.crypto.Mac.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() javax.naming.Reference.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() com.sun.imageio.plugins.jpeg.SOSMarkerSegment.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.util.jar.Manifest.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() sun.security.krb5.EncryptedData.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.text.NumberFormat.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() sun.net.ProgressSource.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.util.EnumSet.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() sun.net.www.protocol.http.AuthenticationInfo.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.awt.datatransfer.MimeTypeParameterList.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.util.regex.Pattern$CharPropertyNames$CloneableProperty.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.security.SignatureSpi.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() sun.security.x509.GeneralSubtrees.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.util.ArrayList.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() com.sun.imageio.plugins.jpeg.DHTMarkerSegment.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() javax.naming.CompositeName.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.awt.font.CharArrayIterator.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.security.Signature$Delegate.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.util.TreeSet.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.util.Hashtable$Entry.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.awt.image.ImageFilter.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() com.sun.imageio.plugins.jpeg.SOSMarkerSegment$ScanComponentSpec.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.awt.geom.Path2D$Float.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() sun.security.krb5.EncryptionKey.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.text.DecimalFormat.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.awt.BufferCapabilities.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.awt.image.Kernel.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.util.Date.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.awt.Insets.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() sun.net.www.MimeEntry.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() sun.util.calendar.CalendarDate.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.awt.print.PageFormat.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() com.sun.imageio.plugins.jpeg.SOFMarkerSegment$ComponentSpec.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.util.EnumMap.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() sun.security.krb5.internal.AuthorizationData.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFExtensionMarkerSegment.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.awt.geom.QuadCurve2D.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() sun.security.krb5.internal.crypto.crc32.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.util.zip.ZipEntry.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.security.MessageDigest$Delegate.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() sun.util.calendar.ZoneInfo.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() sun.text.normalizer.CharacterIteratorWrapper.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.lang.Object.clinit()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.text.DecimalFormatSymbols.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.awt.font.TextLayout.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() javax.swing.DefaultListSelectionModel.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.text.DigitList.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() javax.print.attribute.EnumSyntax.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() javax.sound.midi.ShortMessage.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.awt.geom.CubicCurve2D.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.text.ChoiceFormat.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.lang.Thread.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() com.sun.imageio.plugins.jpeg.MarkerSegment.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.awt.image.renderable.RenderContext.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() sun.security.krb5.Realm.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() com.sun.imageio.plugins.jpeg.DQTMarkerSegment$Qtable.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.awt.JobAttributes.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() com.sun.imageio.plugins.jpeg.JPEGMetadata.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.text.StringCharacterIterator.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.awt.geom.Dimension2D.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() sun.security.x509.NameConstraintsExtension.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.awt.geom.Area.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.util.jar.Attributes.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() sun.security.krb5.internal.HostAddress.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.util.TreeMap.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.awt.geom.Path2D$Double.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.text.BreakIterator.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.util.BitSet.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.lang.Enum.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.util.AbstractMap.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() javax.swing.tree.DefaultMutableTreeNode.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.awt.geom.RectangularShape.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() sun.security.provider.PolicyParser$GrantEntry.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() java.util.HashMap.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA() javax.swing.text.html.HTMLEditorKit.clone()
org.apache.commons.math3.random.MersenneTwister.next(int) java.lang.Object.clinit()
org.apache.commons.math3.random.MersenneTwister.next(int) org.apache.commons.math3.random.MersenneTwister.clinit()
org.apache.commons.math3.analysis.function.Gaussian$Parametric.validateParameters(double[]) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Gaussian$Parametric.validateParameters(double[]) org.apache.commons.math3.exception.DimensionMismatchException(int,int)
org.apache.commons.math3.analysis.function.Gaussian$Parametric.validateParameters(double[]) java.lang.Double.valueOf(double)
org.apache.commons.math3.analysis.function.Gaussian$Parametric.validateParameters(double[]) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.analysis.function.Gaussian$Parametric.validateParameters(double[]) java.lang.Throwable.clinit()
org.apache.commons.math3.analysis.function.Gaussian$Parametric.validateParameters(double[]) org.apache.commons.math3.exception.NullArgumentException()
org.apache.commons.math3.analysis.function.Gaussian$Parametric.validateParameters(double[]) org.apache.commons.math3.exception.NotStrictlyPositiveException(java.lang.Number)
org.apache.commons.math3.analysis.function.Gaussian$Parametric.validateParameters(double[]) java.lang.Double.clinit()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getGeometricMean() org.apache.commons.math3.stat.descriptive.moment.FirstMoment.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getGeometricMean() org.apache.commons.math3.stat.descriptive.rank.Max.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getGeometricMean() org.apache.commons.math3.stat.descriptive.summary.SumOfLogs.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getGeometricMean() org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getGeometricMean() org.apache.commons.math3.stat.descriptive.summary.SumOfSquares.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getGeometricMean() org.apache.commons.math3.stat.descriptive.rank.Min.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getGeometricMean() org.apache.commons.math3.stat.descriptive.moment.ThirdMoment.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getGeometricMean() org.apache.commons.math3.stat.descriptive.moment.SecondMoment.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getGeometricMean() org.apache.commons.math3.stat.descriptive.moment.FourthMoment.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getGeometricMean() org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getGeometricMean() org.apache.commons.math3.stat.descriptive.moment.Mean.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getGeometricMean() org.apache.commons.math3.stat.descriptive.moment.Skewness.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getGeometricMean() org.apache.commons.math3.stat.descriptive.moment.Kurtosis.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getGeometricMean() org.apache.commons.math3.stat.descriptive.moment.Variance.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getGeometricMean() org.apache.commons.math3.stat.descriptive.summary.Product.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getGeometricMean() org.apache.commons.math3.stat.descriptive.summary.Sum.getResult()
org.apache.commons.math3.analysis.function.Log.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.log()
org.apache.commons.math3.geometry.partitioning.AbstractRegion$3.clinit() java.lang.Object.clinit()
org.apache.commons.math3.geometry.partitioning.AbstractRegion$3.clinit() org.apache.commons.math3.geometry.partitioning.Side.values()
org.apache.commons.math3.geometry.partitioning.AbstractRegion$3.clinit() org.apache.commons.math3.geometry.partitioning.Side.clinit()
org.apache.commons.math3.geometry.partitioning.AbstractRegion$3.clinit() java.lang.Enum.ordinal()
org.apache.commons.math3.geometry.partitioning.AbstractRegion$3.clinit() org.apache.commons.math3.geometry.partitioning.AbstractRegion$3.clinit()
org.apache.commons.math3.stat.clustering.EuclideanIntegerPoint.hashCode() java.lang.Object.clinit()
org.apache.commons.math3.stat.clustering.EuclideanIntegerPoint.hashCode() java.util.Arrays.hashCode(int[])
org.apache.commons.math3.stat.clustering.EuclideanIntegerPoint.hashCode() java.util.Arrays.clinit()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.text.CompactByteArray.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.awt.geom.AffineTransform.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.security.krb5.internal.KerberosTime.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.util.Hashtable.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.security.krb5.internal.Ticket.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.text.IntHashtable.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.security.util.BitArray.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) com.sun.imageio.plugins.jpeg.DHTMarkerSegment$Htable.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.util.SimpleTimeZone.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.util.IdentityHashMap.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.util.JapaneseImperialCalendar.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.security.krb5.internal.ETypeInfo.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.text.normalizer.NormalizerBase.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.util.Locale.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.security.krb5.internal.TicketFlags.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.java2d.SunGraphics2D.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.security.provider.MD4.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) javax.swing.tree.DefaultTreeSelectionModel.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.awt.print.Paper.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.text.MessageFormat.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.lang.Object.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) javax.swing.text.SimpleAttributeSet.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) javax.swing.ArrayTable.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.text.SimpleDateFormat.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.java2d.loops.FontInfo.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.security.krb5.PrincipalName.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.awt.PageAttributes.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) com.sun.imageio.plugins.png.PNGMetadata.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.util.GregorianCalendar.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) com.sun.imageio.plugins.jpeg.SOFMarkerSegment.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.util.Vector.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) javax.swing.text.ElementIterator.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.net.HttpCookie.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.awt.datatransfer.MimeType.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.awt.RenderingHints.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.text.DateFormatSymbols.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.util.HashSet.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.util.calendar.ImmutableGregorianDate.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) javax.sound.midi.MetaMessage.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.font.FontLineMetrics.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.font.StandardGlyphVector.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.text.AttributedString$AttributedStringIterator.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.text.RuleBasedBreakIterator.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) javax.swing.text.Segment.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.awt.ImageCapabilities.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.security.krb5.internal.LastReqEntry.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) javax.swing.text.StyleContext$SmallAttributeSet.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.text.RuleBasedCollator.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.text.RuleBasedBreakIterator$SafeCharIterator.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) javax.swing.text.ElementIterator$StackItem.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$ICCMarkerSegment.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.awt.geom.Line2D.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.util.ResourceBundle$CacheKey.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumbJPEG.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.security.krb5.internal.ETypeInfo2.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.awt.font.TextMeasurer.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.util.LinkedList.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.font.AttributeValues.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) javax.swing.text.StyledEditorKit$1.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.util.ArrayDeque.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) javax.swing.text.GlyphView.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.awt.datatransfer.DataFlavor.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.security.krb5.internal.PAData.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) javax.swing.AbstractAction.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.text.normalizer.ReplaceableUCharacterIterator.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.util.concurrent.CopyOnWriteArrayList.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumb.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.awt.geom.Point2D.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) javax.swing.text.html.OptionListModel.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.security.krb5.internal.AuthorizationDataEntry.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) javax.swing.text.EditorKit.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) javax.swing.text.StyledEditorKit.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) com.sun.imageio.plugins.jpeg.DQTMarkerSegment.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.util.JumboEnumSet.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.security.krb5.internal.HostAddresses.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) javax.crypto.Mac.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) javax.naming.Reference.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) com.sun.imageio.plugins.jpeg.SOSMarkerSegment.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.util.jar.Manifest.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.security.krb5.EncryptedData.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.text.NumberFormat.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.net.ProgressSource.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.util.EnumSet.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.net.www.protocol.http.AuthenticationInfo.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.awt.datatransfer.MimeTypeParameterList.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.util.regex.Pattern$CharPropertyNames$CloneableProperty.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.security.SignatureSpi.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.security.x509.GeneralSubtrees.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.util.ArrayList.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) com.sun.imageio.plugins.jpeg.DHTMarkerSegment.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) javax.naming.CompositeName.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.awt.font.CharArrayIterator.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.security.Signature$Delegate.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.util.TreeSet.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.util.Hashtable$Entry.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.awt.image.ImageFilter.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) com.sun.imageio.plugins.jpeg.SOSMarkerSegment$ScanComponentSpec.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.awt.geom.Path2D$Float.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.security.krb5.EncryptionKey.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.text.DecimalFormat.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.awt.BufferCapabilities.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.awt.image.Kernel.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.util.Date.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.awt.Insets.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.net.www.MimeEntry.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.util.calendar.CalendarDate.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.awt.print.PageFormat.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) com.sun.imageio.plugins.jpeg.SOFMarkerSegment$ComponentSpec.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.util.EnumMap.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.security.krb5.internal.AuthorizationData.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFExtensionMarkerSegment.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.awt.geom.QuadCurve2D.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.security.krb5.internal.crypto.crc32.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.util.zip.ZipEntry.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.security.MessageDigest$Delegate.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.util.calendar.ZoneInfo.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.text.normalizer.CharacterIteratorWrapper.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer.access$000(org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer)
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.lang.Object.clinit()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.text.DecimalFormatSymbols.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.awt.font.TextLayout.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) javax.swing.DefaultListSelectionModel.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.text.DigitList.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) javax.print.attribute.EnumSyntax.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) javax.sound.midi.ShortMessage.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.awt.geom.CubicCurve2D.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.text.ChoiceFormat.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.lang.Thread.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) com.sun.imageio.plugins.jpeg.MarkerSegment.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.awt.image.renderable.RenderContext.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.security.krb5.Realm.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) com.sun.imageio.plugins.jpeg.DQTMarkerSegment$Qtable.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.awt.JobAttributes.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) org.apache.commons.math3.optimization.general.AbstractScalarDifferentiableOptimizer.computeObjectiveGradient(double[])
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) com.sun.imageio.plugins.jpeg.JPEGMetadata.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.text.StringCharacterIterator.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.awt.geom.Dimension2D.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.security.x509.NameConstraintsExtension.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.awt.geom.Area.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.util.jar.Attributes.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.security.krb5.internal.HostAddress.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.util.TreeMap.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.awt.geom.Path2D$Double.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.text.BreakIterator.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.util.BitSet.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.lang.Enum.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.util.AbstractMap.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) javax.swing.tree.DefaultMutableTreeNode.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.awt.geom.RectangularShape.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.security.provider.PolicyParser$GrantEntry.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.util.HashMap.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.clone()
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) javax.swing.text.html.HTMLEditorKit.clone()
org.apache.commons.math3.linear.DiagonalMatrix.operate(double[]) java.lang.Object.clinit()
org.apache.commons.math3.linear.DiagonalMatrix.operate(double[]) org.apache.commons.math3.linear.AbstractRealMatrix.clinit()
org.apache.commons.math3.linear.DiagonalMatrix.operate(double[]) org.apache.commons.math3.linear.DiagonalMatrix.multiply(org.apache.commons.math3.linear.DiagonalMatrix)
org.apache.commons.math3.linear.DiagonalMatrix.operate(double[]) org.apache.commons.math3.linear.DiagonalMatrix.getDataRef()
org.apache.commons.math3.linear.DiagonalMatrix.operate(double[]) org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean)
org.apache.commons.math3.analysis.function.Sigmoid.derivative() org.apache.commons.math3.analysis.function.Cbrt.derivative()
org.apache.commons.math3.analysis.function.Sigmoid.derivative() org.apache.commons.math3.analysis.function.Minus.derivative()
org.apache.commons.math3.analysis.function.Sigmoid.derivative() org.apache.commons.math3.analysis.function.Tanh.derivative()
org.apache.commons.math3.analysis.function.Sigmoid.derivative() org.apache.commons.math3.analysis.FunctionUtils.toDifferentiableUnivariateFunction(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction)
org.apache.commons.math3.analysis.function.Sigmoid.derivative() org.apache.commons.math3.analysis.function.Expm1.derivative()
org.apache.commons.math3.analysis.function.Sigmoid.derivative() org.apache.commons.math3.analysis.function.Power.derivative()
org.apache.commons.math3.analysis.function.Sigmoid.derivative() org.apache.commons.math3.analysis.function.Logit.derivative()
org.apache.commons.math3.analysis.function.Sigmoid.derivative() org.apache.commons.math3.analysis.function.Sinc.derivative()
org.apache.commons.math3.analysis.function.Sigmoid.derivative() org.apache.commons.math3.analysis.function.Constant.derivative()
org.apache.commons.math3.analysis.function.Sigmoid.derivative() org.apache.commons.math3.analysis.function.Log10.derivative()
org.apache.commons.math3.analysis.function.Sigmoid.derivative() org.apache.commons.math3.analysis.function.Sigmoid.derivative()
org.apache.commons.math3.analysis.function.Sigmoid.derivative() org.apache.commons.math3.analysis.function.Acosh.derivative()
org.apache.commons.math3.analysis.function.Sigmoid.derivative() org.apache.commons.math3.analysis.function.Exp.derivative()
org.apache.commons.math3.analysis.function.Sigmoid.derivative() org.apache.commons.math3.analysis.function.Sinh.derivative()
org.apache.commons.math3.analysis.function.Sigmoid.derivative() java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Sigmoid.derivative() org.apache.commons.math3.analysis.polynomials.PolynomialFunction.derivative()
org.apache.commons.math3.analysis.function.Sigmoid.derivative() org.apache.commons.math3.analysis.function.Gaussian.derivative()
org.apache.commons.math3.analysis.function.Sigmoid.derivative() org.apache.commons.math3.analysis.function.Atanh.derivative()
org.apache.commons.math3.analysis.function.Sigmoid.derivative() org.apache.commons.math3.analysis.function.Sqrt.derivative()
org.apache.commons.math3.analysis.function.Sigmoid.derivative() org.apache.commons.math3.analysis.FunctionUtils$3.derivative()
org.apache.commons.math3.analysis.function.Sigmoid.derivative() org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.derivative()
org.apache.commons.math3.analysis.function.Sigmoid.derivative() org.apache.commons.math3.analysis.function.Log1p.derivative()
org.apache.commons.math3.analysis.function.Sigmoid.derivative() org.apache.commons.math3.analysis.function.Asin.derivative()
org.apache.commons.math3.analysis.function.Sigmoid.derivative() org.apache.commons.math3.analysis.function.Cos.derivative()
org.apache.commons.math3.analysis.function.Sigmoid.derivative() org.apache.commons.math3.analysis.function.Asinh.derivative()
org.apache.commons.math3.analysis.function.Sigmoid.derivative() org.apache.commons.math3.analysis.function.Tan.derivative()
org.apache.commons.math3.analysis.function.Sigmoid.derivative() org.apache.commons.math3.analysis.FunctionUtils$6.derivative()
org.apache.commons.math3.analysis.function.Sigmoid.derivative() org.apache.commons.math3.analysis.function.Log.derivative()
org.apache.commons.math3.analysis.function.Sigmoid.derivative() org.apache.commons.math3.analysis.function.Atan.derivative()
org.apache.commons.math3.analysis.function.Sigmoid.derivative() org.apache.commons.math3.analysis.function.Acos.derivative()
org.apache.commons.math3.analysis.function.Sigmoid.derivative() org.apache.commons.math3.analysis.FunctionUtils$14.derivative()
org.apache.commons.math3.analysis.function.Sigmoid.derivative() org.apache.commons.math3.analysis.function.Identity.derivative()
org.apache.commons.math3.analysis.function.Sigmoid.derivative() org.apache.commons.math3.analysis.function.Cosh.derivative()
org.apache.commons.math3.analysis.function.Sigmoid.derivative() org.apache.commons.math3.analysis.FunctionUtils$9.derivative()
org.apache.commons.math3.analysis.function.Sigmoid.derivative() org.apache.commons.math3.analysis.function.Logistic.derivative()
org.apache.commons.math3.analysis.function.Sigmoid.derivative() org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative()
org.apache.commons.math3.analysis.function.Sigmoid.derivative() org.apache.commons.math3.analysis.function.Inverse.derivative()
org.apache.commons.math3.analysis.function.Sigmoid.derivative() org.apache.commons.math3.analysis.function.Sin.derivative()
org.apache.commons.math3.analysis.differentiation.DSCompiler.asin(double[],int,double[],int) java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.asin(double[],int,double[],int) org.apache.commons.math3.util.FastMath.sqrt(double)
org.apache.commons.math3.analysis.differentiation.DSCompiler.asin(double[],int,double[],int) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.asin(double[],int,double[],int) org.apache.commons.math3.analysis.differentiation.DSCompiler.compose(double[],int,double[],double[],int)
org.apache.commons.math3.analysis.differentiation.DSCompiler.asin(double[],int,double[],int) org.apache.commons.math3.util.FastMath.asin(double)
org.apache.commons.math3.complex.Quaternion.equals(java.lang.Object) org.apache.commons.math3.complex.Quaternion.getQ3()
org.apache.commons.math3.complex.Quaternion.equals(java.lang.Object) org.apache.commons.math3.complex.Quaternion.getQ0()
org.apache.commons.math3.complex.Quaternion.equals(java.lang.Object) org.apache.commons.math3.complex.Quaternion.getQ1()
org.apache.commons.math3.complex.Quaternion.equals(java.lang.Object) org.apache.commons.math3.complex.Quaternion.getQ2()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.asList() java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.asList() java.util.ArrayList.clinit()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.asList() java.util.ArrayList()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.asList() org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double)
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.asList() org.apache.commons.math3.geometry.partitioning.AbstractRegion.getTree(boolean)
org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction.value(double,double) org.apache.commons.math3.exception.OutOfRangeException(java.lang.Number,java.lang.Number,java.lang.Number)
org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction.value(double,double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction.value(double,double) org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction.apply(double[],double[],double[][])
org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction.value(double,double) java.lang.Double.valueOf(double)
org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction.value(double,double) java.lang.Throwable.clinit()
org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction.value(double,double) java.lang.Integer.clinit()
org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction.value(double,double) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction.value(double,double) java.lang.Double.clinit()
org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction.value(double,double) java.lang.Integer.valueOf(int)
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic() org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic()
org.apache.commons.math3.geometry.euclidean.twod.SubLine.side(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint(org.apache.commons.math3.geometry.euclidean.oned.Vector1D,boolean)
org.apache.commons.math3.geometry.euclidean.twod.SubLine.side(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.geometry.euclidean.twod.SubLine.side(org.apache.commons.math3.geometry.partitioning.Hyperplane) java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.twod.SubLine.side(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.partitioning.Side.clinit()
org.apache.commons.math3.geometry.euclidean.twod.SubLine.side(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.twod.Line.getAngle()
org.apache.commons.math3.geometry.euclidean.twod.SubLine.side(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.twod.Line.intersection(org.apache.commons.math3.geometry.euclidean.twod.Line)
org.apache.commons.math3.geometry.euclidean.twod.SubLine.side(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.getHyperplane()
org.apache.commons.math3.geometry.euclidean.twod.SubLine.side(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.twod.Line.toSubSpace(org.apache.commons.math3.geometry.Vector)
org.apache.commons.math3.geometry.euclidean.twod.SubLine.side(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.util.FastMath.sin(double)
org.apache.commons.math3.geometry.euclidean.twod.SubLine.side(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.twod.Line.getOffset(org.apache.commons.math3.geometry.euclidean.twod.Line)
org.apache.commons.math3.geometry.euclidean.twod.SubLine.side(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.getRemainingRegion()
org.apache.commons.math3.geometry.euclidean.twod.SubLine.side(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.partitioning.AbstractRegion.side(org.apache.commons.math3.geometry.partitioning.Hyperplane)
org.apache.commons.math3.linear.OpenMapRealVector(org.apache.commons.math3.linear.OpenMapRealVector) java.lang.Object.clinit()
org.apache.commons.math3.linear.OpenMapRealVector(org.apache.commons.math3.linear.OpenMapRealVector) org.apache.commons.math3.linear.OpenMapRealVector.getDimension()
org.apache.commons.math3.linear.OpenMapRealVector(org.apache.commons.math3.linear.OpenMapRealVector) org.apache.commons.math3.linear.OpenMapRealVector.getEntries()
org.apache.commons.math3.linear.OpenMapRealVector(org.apache.commons.math3.linear.OpenMapRealVector) org.apache.commons.math3.util.OpenIntToDoubleHashMap(org.apache.commons.math3.util.OpenIntToDoubleHashMap)
org.apache.commons.math3.linear.OpenMapRealVector(org.apache.commons.math3.linear.OpenMapRealVector) org.apache.commons.math3.linear.SparseRealVector()
org.apache.commons.math3.optim.linear.LinearObjectiveFunction.value(double[]) java.lang.Object.clinit()
org.apache.commons.math3.optim.linear.LinearObjectiveFunction.value(double[]) org.apache.commons.math3.linear.ArrayRealVector.clinit()
org.apache.commons.math3.optim.linear.LinearObjectiveFunction.value(double[]) org.apache.commons.math3.linear.ArrayRealVector(double[],boolean)
org.apache.commons.math3.optim.linear.LinearObjectiveFunction.value(double[]) org.apache.commons.math3.optim.linear.LinearObjectiveFunction.value(org.apache.commons.math3.linear.RealVector)
org.apache.commons.math3.analysis.FunctionUtils$16$1.value(double[]) java.lang.Object.clinit()
org.apache.commons.math3.analysis.FunctionUtils$16$1.value(double[]) org.apache.commons.math3.analysis.differentiation.DerivativeStructure(int,int,int,double)
org.apache.commons.math3.analysis.FunctionUtils$16$1.value(double[]) org.apache.commons.math3.analysis.FunctionUtils$17.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure[])
org.apache.commons.math3.analysis.FunctionUtils$16$1.value(double[]) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getPartialDerivative(int[])
org.apache.commons.math3.analysis.FunctionUtils$16$1.value(double[]) org.apache.commons.math3.analysis.differentiation.DerivativeStructure(int,int,double)
org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(org.apache.commons.math3.linear.AnyMatrix,int) org.apache.commons.math3.exception.OutOfRangeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number)
org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(org.apache.commons.math3.linear.AnyMatrix,int) java.lang.Integer.clinit()
org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(org.apache.commons.math3.linear.AnyMatrix,int) java.lang.Throwable.clinit()
org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(org.apache.commons.math3.linear.AnyMatrix,int) org.apache.commons.math3.linear.Array2DRowFieldMatrix.getRowDimension()
org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(org.apache.commons.math3.linear.AnyMatrix,int) org.apache.commons.math3.linear.OpenMapRealMatrix.getRowDimension()
org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(org.apache.commons.math3.linear.AnyMatrix,int) org.apache.commons.math3.linear.BlockFieldMatrix.getRowDimension()
org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(org.apache.commons.math3.linear.AnyMatrix,int) org.apache.commons.math3.linear.DiagonalMatrix.getRowDimension()
org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(org.apache.commons.math3.linear.AnyMatrix,int) java.lang.Object.clinit()
org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(org.apache.commons.math3.linear.AnyMatrix,int) org.apache.commons.math3.linear.SparseFieldMatrix.getRowDimension()
org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(org.apache.commons.math3.linear.AnyMatrix,int) org.apache.commons.math3.linear.BlockRealMatrix.getRowDimension()
org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(org.apache.commons.math3.linear.AnyMatrix,int) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(org.apache.commons.math3.linear.AnyMatrix,int) org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension()
org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(org.apache.commons.math3.linear.AnyMatrix,int) org.apache.commons.math3.exception.util.LocalizedFormats.clinit()
org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(org.apache.commons.math3.linear.AnyMatrix,int) java.lang.Integer.valueOf(int)
org.apache.commons.math3.exception.util.ExceptionContext.getLocalizedMessage() java.lang.Object.clinit()
org.apache.commons.math3.exception.util.ExceptionContext.getLocalizedMessage() java.util.Locale.clinit()
org.apache.commons.math3.exception.util.ExceptionContext.getLocalizedMessage() java.util.Locale.getDefault()
org.apache.commons.math3.exception.util.ExceptionContext.getLocalizedMessage() org.apache.commons.math3.exception.util.ExceptionContext.getMessage(java.util.Locale)
org.apache.commons.math3.linear.RealVector$2.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.exception.MathUnsupportedOperationException()
org.apache.commons.math3.linear.RealVector$2.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.lang.Object.clinit()
org.apache.commons.math3.linear.RealVector$2.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) java.lang.Throwable.clinit()
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.apply(org.apache.commons.math3.stat.descriptive.UnivariateStatistic) org.apache.commons.math3.util.ResizableDoubleArray.compute(org.apache.commons.math3.util.MathArrays$Function)
org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator.writeExternal(java.io.ObjectOutput) java.lang.Object.clinit()
org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator.writeExternal(java.io.ObjectOutput) java.io.ObjectOutputStream.writeDouble(double)
org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator.writeExternal(java.io.ObjectOutput) java.lang.Throwable.clinit()
org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator.writeExternal(java.io.ObjectOutput) java.io.ObjectOutputStream.writeInt(int)
org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator.writeExternal(java.io.ObjectOutput) java.lang.ThrowableCause(java.lang.Throwable)
org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator.writeExternal(java.io.ObjectOutput) org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator.writeExternal(java.io.ObjectOutput)
org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator.writeExternal(java.io.ObjectOutput) java.io.IOException(java.lang.String)
org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator.writeExternal(java.io.ObjectOutput) org.apache.commons.math3.exception.MathIllegalStateException.getLocalizedMessage()
org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator.writeExternal(java.io.ObjectOutput) org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.finalizeStep()
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Acos.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Tanh.derivative()
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Sqrt.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Power.derivative()
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Asin.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Constant.derivative()
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Gaussian.derivative()
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.ode.events.EventState$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$7.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Sin.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.derivative()
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$3.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Exp.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$12.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Inverse.derivative()
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$8.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Constant.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Atan.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Minus.derivative()
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Floor.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Log10.derivative()
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Sinh.derivative()
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.HarmonicOscillator.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$6.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Atanh.derivative()
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.StepFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$13.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$3.derivative()
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Log1p.derivative()
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Cos.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Atanh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$10.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Cos.derivative()
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Asinh.derivative()
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Sigmoid.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$6.derivative()
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Acos.derivative()
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$14.derivative()
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Logistic.derivative()
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative()
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Abs.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$14.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Cbrt.derivative()
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Ulp.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Sigmoid.derivative()
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Rint.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Gaussian.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Tan.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunction.derivative()
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Sqrt.derivative()
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Sinc.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Log1p.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Identity.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Signum.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.distribution.AbstractRealDistribution$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Logit.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Acosh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Atan.derivative()
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$2.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Identity.derivative()
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$9.derivative()
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Log10.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Logistic.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Sinh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Cosh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Expm1.derivative()
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Expm1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Logit.derivative()
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Sinc.derivative()
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Power.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Acosh.derivative()
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Exp.derivative()
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Cbrt.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.optimization.direct.PowellOptimizer$LineSearch$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$4.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Asinh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Minus.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Tanh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$9.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Asin.derivative()
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Log.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Tan.derivative()
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Log.derivative()
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Inverse.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Cosh.derivative()
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$5.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Ceil.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$15.value(double)
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double) org.apache.commons.math3.analysis.function.Sin.derivative()
org.apache.commons.math3.analysis.function.Signum.value(double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Signum.value(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.function.Signum.value(double) org.apache.commons.math3.util.FastMath.signum(double)
org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance.hashCode() java.lang.Object.clinit()
org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance.hashCode() java.util.Arrays.hashCode(double[])
org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance.hashCode() java.util.Arrays.clinit()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) java.io.ObjectStreamField.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) java.nio.IntBuffer.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) javax.swing.TimerQueue$DelayedTimer.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) sun.security.krb5.KrbServiceLocator$SrvRecord.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) javax.swing.DefaultRowSorter$Row.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) sun.swing.text.TextComponentPrintable$IntegerSegment.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) java.nio.DoubleBuffer.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) java.lang.ProcessEnvironment$Value.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) java.net.URI.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) java.lang.Enum.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) java.io.File.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) java.util.Calendar.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization$DataRow.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) org.apache.commons.math3.fraction.BigFraction.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) java.lang.Boolean.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) java.lang.String.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) java.text.RuleBasedCollationKey.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) java.nio.CharBuffer.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) java.nio.file.attribute.FileTime.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) javax.naming.CompositeName.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) java.lang.Double.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) sun.nio.fs.UnixPath.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) java.math.BigDecimal.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) java.math.BigInteger.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) org.apache.commons.math3.util.BigReal.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ComparableSegment.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) java.lang.Integer.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) java.nio.FloatBuffer.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) java.lang.Long.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.rebalanceRightGrown()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) org.apache.commons.math3.fraction.Fraction.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) java.lang.Character.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) sun.awt.shell.ShellFolder.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) org.apache.commons.math3.stat.ranking.NaturalRanking$IntDoublePair.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) sun.security.x509.X509CRLImpl$X509IssuerSerial.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) org.apache.commons.math3.util.Decimal64.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) java.lang.Object.clinit()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) java.nio.LongBuffer.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) sun.awt.OSInfo$WindowsVersion.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) javax.swing.JDesktopPane$ComponentPosition.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) java.nio.ByteBuffer.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) java.util.Date.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node(org.apache.commons.math3.geometry.partitioning.utilities.AVLTree,java.lang.Comparable,org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) java.nio.file.attribute.FileTime$DaysAndNanos.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) java.lang.ProcessEnvironment$Variable.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) sun.security.x509.X509CRLEntryImpl.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) java.lang.Byte.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) java.nio.ShortBuffer.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.rebalanceLeftGrown()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) java.lang.Short.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) java.nio.charset.Charset.compareTo(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(java.lang.Comparable) java.lang.Float.compareTo(java.lang.Object)
org.apache.commons.math3.analysis.function.Atanh.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.atanh()
org.apache.commons.math3.linear.OpenMapRealVector.isDefaultValue(double) java.lang.Object.clinit()
org.apache.commons.math3.linear.OpenMapRealVector.isDefaultValue(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.linear.OpenMapRealVector.isDefaultValue(double) org.apache.commons.math3.util.FastMath.abs(double)
org.apache.commons.math3.linear.RealMatrixFormat.getInstance(java.util.Locale) org.apache.commons.math3.util.CompositeFormat.getDefaultNumberFormat(java.util.Locale)
org.apache.commons.math3.linear.RealMatrixFormat.getInstance(java.util.Locale) java.lang.Object.clinit()
org.apache.commons.math3.linear.RealMatrixFormat.getInstance(java.util.Locale) org.apache.commons.math3.linear.RealMatrixFormat(java.text.NumberFormat)
org.apache.commons.math3.dfp.DfpDec.newInstance(org.apache.commons.math3.dfp.Dfp) java.lang.Object.clinit()
org.apache.commons.math3.dfp.DfpDec.newInstance(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.DfpField.getRadixDigits()
org.apache.commons.math3.dfp.DfpDec.newInstance(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.Dfp.dotrap(int,java.lang.String,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)
org.apache.commons.math3.dfp.DfpDec.newInstance(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.DfpDec(org.apache.commons.math3.dfp.Dfp)
org.apache.commons.math3.dfp.DfpDec.newInstance(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.DfpField.setIEEEFlagsBits(int)
org.apache.commons.math3.dfp.DfpDec.newInstance(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.Dfp.getZero()
org.apache.commons.math3.dfp.DfpDec.newInstance(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.DfpDec.newInstance(org.apache.commons.math3.dfp.Dfp)
org.apache.commons.math3.dfp.DfpDec.newInstance(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.Dfp.getField()
org.apache.commons.math3.stat.descriptive.moment.Kurtosis.getResult() org.apache.commons.math3.stat.descriptive.moment.FourthMoment.getResult()
org.apache.commons.math3.stat.descriptive.moment.Kurtosis.getResult() org.apache.commons.math3.stat.descriptive.moment.SecondMoment.getN()
org.apache.commons.math3.analysis.function.Log10.value(double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Log10.value(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.function.Log10.value(double) org.apache.commons.math3.util.FastMath.log10(double)
org.apache.commons.math3.geometry.partitioning.BoundaryAttribute(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.SubHyperplane) java.lang.Object()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(int,int,double[]) java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(int,int,double[]) org.apache.commons.math3.exception.DimensionMismatchException(int,int)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(int,int,double[]) org.apache.commons.math3.analysis.differentiation.DerivativeStructure(int,int)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(int,int,double[]) java.lang.Throwable.clinit()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(int,int,double[]) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(int,int,double[]) java.lang.System.arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(int,int,double[]) java.lang.System.clinit()
org.apache.commons.math3.stat.descriptive.moment.Kurtosis.clear() org.apache.commons.math3.stat.descriptive.moment.FourthMoment.clear()
org.apache.commons.math3.exception.MathArithmeticException.getMessage() org.apache.commons.math3.exception.util.ExceptionContext.getMessage()
org.apache.commons.math3.analysis.function.Logistic.value(double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Logistic.value(double) org.apache.commons.math3.analysis.function.Logistic.value(double,double,double,double,double,double)
org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.getStandardDeviation() java.lang.Object.clinit()
org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.getStandardDeviation() org.apache.commons.math3.util.FastMath.sqrt(double)
org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.getStandardDeviation() org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.function.Cosh.value(double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Cosh.value(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.function.Cosh.value(double) org.apache.commons.math3.util.FastMath.cosh(double)
org.apache.commons.math3.geometry.euclidean.twod.Line.getOffset(org.apache.commons.math3.geometry.Vector) org.apache.commons.math3.geometry.euclidean.twod.Vector2D.getX()
org.apache.commons.math3.geometry.euclidean.twod.Line.getOffset(org.apache.commons.math3.geometry.Vector) org.apache.commons.math3.geometry.euclidean.twod.Vector2D.getY()
org.apache.commons.math3.linear.DiagonalMatrix.getEntry(int,int) java.lang.Object.clinit()
org.apache.commons.math3.linear.DiagonalMatrix.getEntry(int,int) org.apache.commons.math3.linear.MatrixUtils.clinit()
org.apache.commons.math3.linear.DiagonalMatrix.getEntry(int,int) org.apache.commons.math3.linear.MatrixUtils.checkMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int,int)
org.apache.commons.math3.linear.ArrayRealVector.dotProduct(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVector.dotProduct(org.apache.commons.math3.linear.RealVector)
org.apache.commons.math3.linear.ArrayRealVector.dotProduct(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.ArrayRealVector.checkVectorDimensions(int)
org.apache.commons.math3.analysis.differentiation.DSCompiler.expm1(double[],int,double[],int) java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.expm1(double[],int,double[],int) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.expm1(double[],int,double[],int) java.util.Arrays.fill(double[],int,int,double)
org.apache.commons.math3.analysis.differentiation.DSCompiler.expm1(double[],int,double[],int) org.apache.commons.math3.util.FastMath.expm1(double)
org.apache.commons.math3.analysis.differentiation.DSCompiler.expm1(double[],int,double[],int) org.apache.commons.math3.analysis.differentiation.DSCompiler.compose(double[],int,double[],double[],int)
org.apache.commons.math3.analysis.differentiation.DSCompiler.expm1(double[],int,double[],int) org.apache.commons.math3.util.FastMath.exp(double)
org.apache.commons.math3.analysis.differentiation.DSCompiler.expm1(double[],int,double[],int) java.util.Arrays.clinit()
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getMean() org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics.apply(org.apache.commons.math3.stat.descriptive.UnivariateStatistic)
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getMean() org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.apply(org.apache.commons.math3.stat.descriptive.UnivariateStatistic)
org.apache.commons.math3.geometry.partitioning.BSPTree$1.clinit() java.lang.Object.clinit()
org.apache.commons.math3.geometry.partitioning.BSPTree$1.clinit() org.apache.commons.math3.geometry.partitioning.Side.values()
org.apache.commons.math3.geometry.partitioning.BSPTree$1.clinit() org.apache.commons.math3.geometry.partitioning.Side.clinit()
org.apache.commons.math3.geometry.partitioning.BSPTree$1.clinit() java.lang.Enum.ordinal()
org.apache.commons.math3.geometry.partitioning.BSPTree$1.clinit() org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values()
org.apache.commons.math3.geometry.partitioning.BSPTree$1.clinit() org.apache.commons.math3.geometry.partitioning.BSPTree$1.clinit()
org.apache.commons.math3.geometry.partitioning.BSPTree$1.clinit() org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.clinit()
org.apache.commons.math3.analysis.polynomials.PolynomialFunction(double[]) java.lang.Object.clinit()
org.apache.commons.math3.analysis.polynomials.PolynomialFunction(double[]) java.lang.Throwable.clinit()
org.apache.commons.math3.analysis.polynomials.PolynomialFunction(double[]) java.lang.System.arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org.apache.commons.math3.analysis.polynomials.PolynomialFunction(double[]) org.apache.commons.math3.exception.NoDataException(org.apache.commons.math3.exception.util.Localizable)
org.apache.commons.math3.analysis.polynomials.PolynomialFunction(double[]) org.apache.commons.math3.exception.util.LocalizedFormats.clinit()
org.apache.commons.math3.analysis.polynomials.PolynomialFunction(double[]) org.apache.commons.math3.util.MathUtils.checkNotNull(java.lang.Object)
org.apache.commons.math3.analysis.polynomials.PolynomialFunction(double[]) java.lang.Object()
org.apache.commons.math3.analysis.polynomials.PolynomialFunction(double[]) java.lang.System.clinit()
org.apache.commons.math3.linear.OpenMapRealVector$OpenMapEntry.setValue(double) java.lang.Object.clinit()
org.apache.commons.math3.linear.OpenMapRealVector$OpenMapEntry.setValue(double) org.apache.commons.math3.util.OpenIntToDoubleHashMap.put(int,double)
org.apache.commons.math3.linear.OpenMapRealVector$OpenMapEntry.setValue(double) org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.key()
org.apache.commons.math3.linear.OpenMapRealVector$OpenMapEntry.setValue(double) org.apache.commons.math3.linear.OpenMapRealVector.access$000(org.apache.commons.math3.linear.OpenMapRealVector)
org.apache.commons.math3.geometry.euclidean.twod.Line.reset(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D) java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.twod.Line.reset(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.geometry.euclidean.twod.Line.reset(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D) org.apache.commons.math3.geometry.euclidean.twod.Vector2D.getX()
org.apache.commons.math3.geometry.euclidean.twod.Line.reset(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D) org.apache.commons.math3.util.FastMath.cos(double)
org.apache.commons.math3.geometry.euclidean.twod.Line.reset(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D) org.apache.commons.math3.util.FastMath.sin(double)
org.apache.commons.math3.geometry.euclidean.twod.Line.reset(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D) org.apache.commons.math3.geometry.euclidean.twod.Vector2D.getY()
org.apache.commons.math3.geometry.euclidean.twod.Line.reset(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D) org.apache.commons.math3.util.FastMath.atan2(double,double)
org.apache.commons.math3.geometry.euclidean.twod.Line.reset(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D) org.apache.commons.math3.util.FastMath.hypot(double,double)
org.apache.commons.math3.util.OpenIntToFieldHashMap.get(int) org.apache.commons.math3.util.OpenIntToFieldHashMap.perturb(int)
org.apache.commons.math3.util.OpenIntToFieldHashMap.get(int) java.lang.Object.clinit()
org.apache.commons.math3.util.OpenIntToFieldHashMap.get(int) org.apache.commons.math3.util.OpenIntToFieldHashMap.probe(int,int)
org.apache.commons.math3.util.OpenIntToFieldHashMap.get(int) org.apache.commons.math3.util.OpenIntToFieldHashMap.containsKey(int,int)
org.apache.commons.math3.util.OpenIntToFieldHashMap.get(int) org.apache.commons.math3.util.OpenIntToFieldHashMap.hashOf(int)
org.apache.commons.math3.distribution.LevyDistribution.cumulativeProbability(double) java.lang.Object.clinit()
org.apache.commons.math3.distribution.LevyDistribution.cumulativeProbability(double) org.apache.commons.math3.util.FastMath.sqrt(double)
org.apache.commons.math3.distribution.LevyDistribution.cumulativeProbability(double) org.apache.commons.math3.special.Erf.erfc(double)
org.apache.commons.math3.distribution.LevyDistribution.cumulativeProbability(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.function.Sqrt.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.function.Ulp.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.function.Acos.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.function.Asin.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.function.Rint.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.function.Gaussian.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.function.Tan.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.ode.events.EventState$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.function.Sinc.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.FunctionUtils$7.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.function.Sin.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.function.Log1p.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.function.Identity.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.FunctionUtils$3.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.function.Signum.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.distribution.AbstractRealDistribution$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.function.Exp.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.function.Logit.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.function.Acosh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.FunctionUtils$2.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.function.Log10.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.FunctionUtils$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.FunctionUtils$12.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.FunctionUtils$8.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.function.Constant.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.function.Atan.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.function.Logistic.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.function.Sinh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.function.Cosh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.function.Floor.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.function.Expm1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.function.Power.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.function.Cbrt.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.optimization.direct.PowellOptimizer$LineSearch$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.function.HarmonicOscillator.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.function.Asinh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.FunctionUtils$4.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.FunctionUtils$6.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.function.StepFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.function.Minus.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.FunctionUtils$13.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.function.Tanh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.FunctionUtils$9.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.function.Cos.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.function.Atanh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.FunctionUtils$10.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.function.Log.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.function.Sigmoid.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.function.Inverse.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.FunctionUtils$5.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.function.Abs.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.FunctionUtils$15.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.function.Ceil.value(double)
org.apache.commons.math3.analysis.FunctionUtils$4.value(double) org.apache.commons.math3.analysis.FunctionUtils$14.value(double)
org.apache.commons.math3.analysis.FunctionUtils$6$1(org.apache.commons.math3.analysis.FunctionUtils$6) java.lang.Object()
org.apache.commons.math3.analysis.function.HarmonicOscillator$Parametric.value(double,double[]) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.HarmonicOscillator$Parametric.value(double,double[]) org.apache.commons.math3.analysis.function.HarmonicOscillator.access$000(double,double)
org.apache.commons.math3.analysis.function.HarmonicOscillator$Parametric.value(double,double[]) org.apache.commons.math3.analysis.function.HarmonicOscillator$Parametric.validateParameters(double[])
org.apache.commons.math3.stat.descriptive.moment.FourthMoment.clear() org.apache.commons.math3.stat.descriptive.moment.ThirdMoment.clear()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() sun.text.CompactByteArray.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.awt.geom.AffineTransform.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() sun.security.krb5.internal.KerberosTime.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.util.Hashtable.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() sun.security.krb5.internal.Ticket.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() sun.text.IntHashtable.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() sun.security.util.BitArray.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() com.sun.imageio.plugins.jpeg.DHTMarkerSegment$Htable.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.util.SimpleTimeZone.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.util.IdentityHashMap.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.util.JapaneseImperialCalendar.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() sun.security.krb5.internal.ETypeInfo.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() sun.text.normalizer.NormalizerBase.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.util.Locale.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() sun.security.krb5.internal.TicketFlags.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() sun.java2d.SunGraphics2D.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() sun.security.provider.MD4.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() javax.swing.tree.DefaultTreeSelectionModel.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.awt.print.Paper.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.text.MessageFormat.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.lang.Object.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() javax.swing.text.SimpleAttributeSet.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() javax.swing.ArrayTable.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.text.SimpleDateFormat.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() sun.java2d.loops.FontInfo.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() sun.security.krb5.PrincipalName.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.awt.PageAttributes.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() com.sun.imageio.plugins.png.PNGMetadata.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.util.GregorianCalendar.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() com.sun.imageio.plugins.jpeg.SOFMarkerSegment.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.util.Vector.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() javax.swing.text.ElementIterator.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.net.HttpCookie.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.awt.datatransfer.MimeType.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.awt.RenderingHints.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.text.DateFormatSymbols.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.util.HashSet.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() sun.util.calendar.ImmutableGregorianDate.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() javax.sound.midi.MetaMessage.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() sun.font.FontLineMetrics.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() sun.font.StandardGlyphVector.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.text.AttributedString$AttributedStringIterator.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.text.RuleBasedBreakIterator.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() javax.swing.text.Segment.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.awt.ImageCapabilities.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() sun.security.krb5.internal.LastReqEntry.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() javax.swing.text.StyleContext$SmallAttributeSet.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.text.RuleBasedCollator.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.text.RuleBasedBreakIterator$SafeCharIterator.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() javax.swing.text.ElementIterator$StackItem.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$ICCMarkerSegment.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.awt.geom.Line2D.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.util.ResourceBundle$CacheKey.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumbJPEG.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() sun.security.krb5.internal.ETypeInfo2.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.awt.font.TextMeasurer.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.util.LinkedList.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() sun.font.AttributeValues.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() javax.swing.text.StyledEditorKit$1.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.util.ArrayDeque.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() javax.swing.text.GlyphView.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.awt.datatransfer.DataFlavor.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() sun.security.krb5.internal.PAData.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() javax.swing.AbstractAction.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() sun.text.normalizer.ReplaceableUCharacterIterator.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.util.concurrent.CopyOnWriteArrayList.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumb.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.awt.geom.Point2D.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() javax.swing.text.html.OptionListModel.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() sun.security.krb5.internal.AuthorizationDataEntry.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() javax.swing.text.EditorKit.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() javax.swing.text.StyledEditorKit.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() com.sun.imageio.plugins.jpeg.DQTMarkerSegment.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.util.JumboEnumSet.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() sun.security.krb5.internal.HostAddresses.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() javax.crypto.Mac.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() javax.naming.Reference.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() com.sun.imageio.plugins.jpeg.SOSMarkerSegment.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.util.jar.Manifest.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() sun.security.krb5.EncryptedData.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.text.NumberFormat.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() sun.net.ProgressSource.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.util.EnumSet.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() sun.net.www.protocol.http.AuthenticationInfo.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.awt.datatransfer.MimeTypeParameterList.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.util.regex.Pattern$CharPropertyNames$CloneableProperty.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.security.SignatureSpi.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() org.apache.commons.math3.util.Pair.getValue()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() sun.security.x509.GeneralSubtrees.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.util.ArrayList.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() com.sun.imageio.plugins.jpeg.DHTMarkerSegment.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() javax.naming.CompositeName.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.awt.font.CharArrayIterator.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.security.Signature$Delegate.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.util.TreeSet.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.util.Hashtable$Entry.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.awt.image.ImageFilter.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() com.sun.imageio.plugins.jpeg.SOSMarkerSegment$ScanComponentSpec.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.awt.geom.Path2D$Float.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() sun.security.krb5.EncryptionKey.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.text.DecimalFormat.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.awt.BufferCapabilities.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.awt.image.Kernel.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.util.Date.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.awt.Insets.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() sun.net.www.MimeEntry.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() sun.util.calendar.CalendarDate.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.awt.print.PageFormat.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() com.sun.imageio.plugins.jpeg.SOFMarkerSegment$ComponentSpec.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.util.EnumMap.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() sun.security.krb5.internal.AuthorizationData.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFExtensionMarkerSegment.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.awt.geom.QuadCurve2D.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() sun.security.krb5.internal.crypto.crc32.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.util.zip.ZipEntry.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.security.MessageDigest$Delegate.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() sun.util.calendar.ZoneInfo.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() sun.text.normalizer.CharacterIteratorWrapper.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.text.DecimalFormatSymbols.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.awt.font.TextLayout.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() javax.swing.DefaultListSelectionModel.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.text.DigitList.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() javax.print.attribute.EnumSyntax.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() javax.sound.midi.ShortMessage.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.awt.geom.CubicCurve2D.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.text.ChoiceFormat.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() org.apache.commons.math3.optim.PointVectorValuePair.getValue()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.lang.Thread.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() com.sun.imageio.plugins.jpeg.MarkerSegment.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.awt.image.renderable.RenderContext.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() sun.security.krb5.Realm.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() com.sun.imageio.plugins.jpeg.DQTMarkerSegment$Qtable.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.awt.JobAttributes.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() com.sun.imageio.plugins.jpeg.JPEGMetadata.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.text.StringCharacterIterator.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.awt.geom.Dimension2D.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() sun.security.x509.NameConstraintsExtension.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.awt.geom.Area.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.util.jar.Attributes.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() sun.security.krb5.internal.HostAddress.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.util.TreeMap.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.awt.geom.Path2D$Double.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.text.BreakIterator.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.util.BitSet.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.lang.Enum.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.util.AbstractMap.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() javax.swing.tree.DefaultMutableTreeNode.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.awt.geom.RectangularShape.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() sun.security.provider.PolicyParser$GrantEntry.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() java.util.HashMap.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.clone()
org.apache.commons.math3.optim.PointVectorValuePair.getValue() javax.swing.text.html.HTMLEditorKit.clone()
org.apache.commons.math3.distribution.LogNormalDistribution.probability(double,double) org.apache.commons.math3.distribution.LogNormalDistribution.clinit()
org.apache.commons.math3.distribution.LogNormalDistribution.probability(double,double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.distribution.LogNormalDistribution.probability(double,double) java.lang.Object.clinit()
org.apache.commons.math3.distribution.LogNormalDistribution.probability(double,double) org.apache.commons.math3.distribution.AbstractRealDistribution.probability(double,double)
org.apache.commons.math3.distribution.LogNormalDistribution.probability(double,double) java.lang.Double.valueOf(double)
org.apache.commons.math3.distribution.LogNormalDistribution.probability(double,double) org.apache.commons.math3.special.Erf.erf(double,double)
org.apache.commons.math3.distribution.LogNormalDistribution.probability(double,double) java.lang.Throwable.clinit()
org.apache.commons.math3.distribution.LogNormalDistribution.probability(double,double) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.distribution.LogNormalDistribution.probability(double,double) org.apache.commons.math3.exception.util.LocalizedFormats.clinit()
org.apache.commons.math3.distribution.LogNormalDistribution.probability(double,double) java.lang.Double.clinit()
org.apache.commons.math3.distribution.LogNormalDistribution.probability(double,double) org.apache.commons.math3.util.FastMath.log(double)
org.apache.commons.math3.distribution.LogNormalDistribution.probability(double,double) org.apache.commons.math3.exception.NumberIsTooLargeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DSCompiler) org.apache.commons.math3.analysis.differentiation.DSCompiler.getSize()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DSCompiler) java.lang.Object()
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.evaluate(double[],double[],double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.evaluate(double[],double[],double) org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.verifyInputArray(double[],double[])
org.apache.commons.math3.special.Beta.deltaMinusDeltaSum(double,double) org.apache.commons.math3.exception.OutOfRangeException(java.lang.Number,java.lang.Number,java.lang.Number)
org.apache.commons.math3.special.Beta.deltaMinusDeltaSum(double,double) java.lang.Object.clinit()
org.apache.commons.math3.special.Beta.deltaMinusDeltaSum(double,double) java.lang.Double.valueOf(double)
org.apache.commons.math3.special.Beta.deltaMinusDeltaSum(double,double) org.apache.commons.math3.exception.NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)
org.apache.commons.math3.special.Beta.deltaMinusDeltaSum(double,double) java.lang.Throwable.clinit()
org.apache.commons.math3.special.Beta.deltaMinusDeltaSum(double,double) java.lang.Integer.clinit()
org.apache.commons.math3.special.Beta.deltaMinusDeltaSum(double,double) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.special.Beta.deltaMinusDeltaSum(double,double) java.lang.Double.clinit()
org.apache.commons.math3.special.Beta.deltaMinusDeltaSum(double,double) org.apache.commons.math3.special.Beta.clinit()
org.apache.commons.math3.special.Beta.deltaMinusDeltaSum(double,double) java.lang.Integer.valueOf(int)
org.apache.commons.math3.optimization.linear.LinearConstraint.equals(java.lang.Object) org.apache.commons.math3.linear.ArrayRealVector.equals(java.lang.Object)
org.apache.commons.math3.optimization.linear.LinearConstraint.equals(java.lang.Object) org.apache.commons.math3.linear.RealVector.equals(java.lang.Object)
org.apache.commons.math3.optimization.linear.LinearConstraint.equals(java.lang.Object) org.apache.commons.math3.linear.OpenMapRealVector.equals(java.lang.Object)
org.apache.commons.math3.fraction.Fraction(int,int) java.lang.Object.clinit()
org.apache.commons.math3.fraction.Fraction(int,int) java.lang.Integer.clinit()
org.apache.commons.math3.fraction.Fraction(int,int) java.lang.Throwable.clinit()
org.apache.commons.math3.fraction.Fraction(int,int) org.apache.commons.math3.exception.MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])
org.apache.commons.math3.fraction.Fraction(int,int) org.apache.commons.math3.exception.util.LocalizedFormats.clinit()
org.apache.commons.math3.fraction.Fraction(int,int) java.lang.Integer.valueOf(int)
org.apache.commons.math3.fraction.Fraction(int,int) java.lang.Number()
org.apache.commons.math3.fraction.Fraction(int,int) org.apache.commons.math3.util.ArithmeticUtils.gcd(int,int)
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator(org.apache.commons.math3.util.OpenIntToDoubleHashMap,org.apache.commons.math3.util.OpenIntToDoubleHashMap$1) org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator(org.apache.commons.math3.util.OpenIntToDoubleHashMap)
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) java.util.Collections$SynchronizedCollection.size()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) java.util.SubList.size()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) java.util.Collections$CheckedList.remove(int)
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) java.util.Collections$UnmodifiableCollection.size()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) org.apache.commons.math3.geometry.euclidean.oned.Vector1D.getX()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) sun.awt.util.IdentityLinkedList.remove(int)
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) java.util.SubList.remove(int)
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) java.util.ArrayList.add(java.lang.Object)
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) java.util.Arrays$ArrayList.size()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) sun.awt.util.IdentityArrayList.add(java.lang.Object)
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) org.apache.commons.math3.geometry.partitioning.BSPTree.getCut()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.getHyperplane()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) java.util.concurrent.CopyOnWriteArrayList.add(java.lang.Object)
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.isDirect()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) java.util.concurrent.CopyOnWriteArrayList$COWSubList.size()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) org.apache.commons.math3.geometry.euclidean.oned.Interval(double,double)
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) java.util.ArrayList.remove(int)
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) java.util.AbstractList.remove(int)
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) org.apache.commons.math3.geometry.partitioning.Region$Location.clinit()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) java.lang.Boolean.booleanValue()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) java.util.Collections$SingletonList.size()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) java.util.Collections$SynchronizedList.remove(int)
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) java.util.Collections$UnmodifiableCollection.add(java.lang.Object)
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) java.util.ArrayList$SubList.size()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) org.apache.commons.math3.geometry.partitioning.BSPTree.getPlus()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.getLocation()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) java.util.LinkedList.remove(int)
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) sun.awt.util.IdentityLinkedList.size()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) java.util.concurrent.CopyOnWriteArrayList$COWSubList.remove(int)
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) sun.awt.util.IdentityArrayList.size()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) sun.security.jca.ProviderList$ServiceList.size()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) java.util.concurrent.CopyOnWriteArrayList.size()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) java.util.LinkedList.size()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) org.apache.commons.math3.geometry.partitioning.BSPTree.getMinus()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) org.apache.commons.math3.geometry.euclidean.oned.Interval.getInf()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) java.util.Collections$EmptyList.size()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) java.util.Vector.size()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) java.util.Collections$CopiesList.size()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) sun.security.jca.ProviderList$3.size()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) java.util.AbstractList.add(java.lang.Object)
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) sun.awt.util.IdentityArrayList.remove(int)
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) java.util.ArrayList$SubList.remove(int)
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) java.util.ArrayList.size()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) java.util.concurrent.CopyOnWriteArrayList.remove(int)
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) org.apache.commons.math3.geometry.partitioning.BSPTree.getAttribute()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) java.util.Collections$SynchronizedCollection.add(java.lang.Object)
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) java.util.Collections$CheckedCollection.size()
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) java.util.LinkedList.add(java.lang.Object)
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double)
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) sun.awt.util.IdentityLinkedList.add(java.lang.Object)
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) java.util.Collections$CheckedCollection.add(java.lang.Object)
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) java.util.Vector.remove(int)
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) java.util.Vector.add(java.lang.Object)
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) java.util.Collections$UnmodifiableList.remove(int)
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.recurseList(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.List,double,double) org.apache.commons.math3.geometry.partitioning.AbstractRegion.checkPoint(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.Vector)
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$2.compare(org.apache.commons.math3.optim.PointValuePair,org.apache.commons.math3.optim.PointValuePair) java.lang.Object.clinit()
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$2.compare(org.apache.commons.math3.optim.PointValuePair,org.apache.commons.math3.optim.PointValuePair) java.lang.Double.compare(double,double)
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$2.compare(org.apache.commons.math3.optim.PointValuePair,org.apache.commons.math3.optim.PointValuePair) java.lang.Double.doubleValue()
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$2.compare(org.apache.commons.math3.optim.PointValuePair,org.apache.commons.math3.optim.PointValuePair) java.lang.Double.clinit()
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$2.compare(org.apache.commons.math3.optim.PointValuePair,org.apache.commons.math3.optim.PointValuePair) org.apache.commons.math3.util.Pair.getValue()
org.apache.commons.math3.analysis.function.Logit.value(double,double,double) org.apache.commons.math3.exception.OutOfRangeException(java.lang.Number,java.lang.Number,java.lang.Number)
org.apache.commons.math3.analysis.function.Logit.value(double,double,double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.function.Logit.value(double,double,double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Logit.value(double,double,double) java.lang.Double.valueOf(double)
org.apache.commons.math3.analysis.function.Logit.value(double,double,double) java.lang.Throwable.clinit()
org.apache.commons.math3.analysis.function.Logit.value(double,double,double) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.analysis.function.Logit.value(double,double,double) java.lang.Double.clinit()
org.apache.commons.math3.analysis.function.Logit.value(double,double,double) org.apache.commons.math3.util.FastMath.log(double)
org.apache.commons.math3.linear.RealVector$2.iterator() java.lang.Object.clinit()
org.apache.commons.math3.linear.RealVector$2.iterator() org.apache.commons.math3.linear.RealVector$2.iterator()
org.apache.commons.math3.linear.RealVector$2.iterator() org.apache.commons.math3.linear.RealVector.iterator()
org.apache.commons.math3.linear.RealVector$2.iterator() org.apache.commons.math3.linear.RealVector$2$1(org.apache.commons.math3.linear.RealVector$2,java.util.Iterator)
org.apache.commons.math3.util.OpenIntToDoubleHashMap.containsKey(int) org.apache.commons.math3.util.OpenIntToDoubleHashMap.containsKey(int,int)
org.apache.commons.math3.util.OpenIntToDoubleHashMap.containsKey(int) java.lang.Object.clinit()
org.apache.commons.math3.util.OpenIntToDoubleHashMap.containsKey(int) org.apache.commons.math3.util.OpenIntToDoubleHashMap.hashOf(int)
org.apache.commons.math3.util.OpenIntToDoubleHashMap.containsKey(int) org.apache.commons.math3.util.OpenIntToDoubleHashMap.perturb(int)
org.apache.commons.math3.util.OpenIntToDoubleHashMap.containsKey(int) org.apache.commons.math3.util.OpenIntToDoubleHashMap.probe(int,int)
org.apache.commons.math3.exception.MathArithmeticException.getLocalizedMessage() org.apache.commons.math3.exception.util.ExceptionContext.getLocalizedMessage()
org.apache.commons.math3.fraction.Fraction.clinit() java.lang.Object.clinit()
org.apache.commons.math3.fraction.Fraction.clinit() org.apache.commons.math3.fraction.Fraction.clinit()
org.apache.commons.math3.fraction.Fraction.clinit() org.apache.commons.math3.fraction.Fraction(int,int)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.asin() java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.asin() org.apache.commons.math3.analysis.differentiation.DSCompiler.asin(double[],int,double[],int)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.asin() org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DSCompiler)
org.apache.commons.math3.exception.MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[]) java.lang.Object.clinit()
org.apache.commons.math3.exception.MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[]) org.apache.commons.math3.exception.MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])
org.apache.commons.math3.special.Beta.clinit() java.lang.Object.clinit()
org.apache.commons.math3.special.Beta.clinit() org.apache.commons.math3.special.Beta.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.compileSizes(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler) java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.compileSizes(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler) java.lang.System.arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org.apache.commons.math3.analysis.differentiation.DSCompiler.compileSizes(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler) java.util.Arrays.fill(int[],int)
org.apache.commons.math3.analysis.differentiation.DSCompiler.compileSizes(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler) java.util.Arrays.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.compileSizes(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler) java.lang.System.clinit()
org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormat(java.text.NumberFormat) org.apache.commons.math3.geometry.VectorFormat(java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat)
org.apache.commons.math3.geometry.euclidean.twod.Line(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double) org.apache.commons.math3.geometry.euclidean.twod.Line.reset(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double)
org.apache.commons.math3.geometry.euclidean.twod.Line(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,double) java.lang.Object()
org.apache.commons.math3.exception.MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[]) java.lang.ArithmeticException()
org.apache.commons.math3.exception.MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[]) java.lang.Object.clinit()
org.apache.commons.math3.exception.MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[]) org.apache.commons.math3.exception.util.ExceptionContext.addMessage(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])
org.apache.commons.math3.exception.MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[]) org.apache.commons.math3.exception.util.ExceptionContext(java.lang.Throwable)
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getGeometricMean()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getMean()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getGeometricMean()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getCovariance()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.equals(java.lang.Object) org.apache.commons.math3.linear.AbstractRealMatrix.equals(java.lang.Object)
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getSumSq()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getSum()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getMin()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getSumLog()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getMax()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getMin()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getMax()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.equals(java.lang.Object) java.lang.Object.clinit()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.equals(java.lang.Object) org.apache.commons.math3.util.Precision.equalsIncludingNaN(float,float)
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.equals(java.lang.Object) java.lang.Object.equals(java.lang.Object)
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getMean()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getSumLog()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getSumSq()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getCovariance()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.equals(java.lang.Object) org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(double[],double[])
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.equals(java.lang.Object) org.apache.commons.math3.util.Precision.clinit()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getN()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getN()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getSum()
org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator.computeInterpolatedStateAndDerivatives(double,double) java.lang.Object.clinit()
org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator.computeInterpolatedStateAndDerivatives(double,double) org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator.clinit()
org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator.computeInterpolatedStateAndDerivatives(double,double) org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.finalizeStep()
org.apache.commons.math3.geometry.partitioning.RegionFactory.union(org.apache.commons.math3.geometry.partitioning.Region,org.apache.commons.math3.geometry.partitioning.Region) org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.buildNew(org.apache.commons.math3.geometry.partitioning.BSPTree)
org.apache.commons.math3.geometry.partitioning.RegionFactory.union(org.apache.commons.math3.geometry.partitioning.Region,org.apache.commons.math3.geometry.partitioning.Region) java.lang.Object.clinit()
org.apache.commons.math3.geometry.partitioning.RegionFactory.union(org.apache.commons.math3.geometry.partitioning.Region,org.apache.commons.math3.geometry.partitioning.Region) org.apache.commons.math3.geometry.partitioning.RegionFactory$UnionMerger(org.apache.commons.math3.geometry.partitioning.RegionFactory,org.apache.commons.math3.geometry.partitioning.RegionFactory$1)
org.apache.commons.math3.geometry.partitioning.RegionFactory.union(org.apache.commons.math3.geometry.partitioning.Region,org.apache.commons.math3.geometry.partitioning.Region) org.apache.commons.math3.geometry.partitioning.BSPTree.merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree$LeafMerger)
org.apache.commons.math3.geometry.partitioning.RegionFactory.union(org.apache.commons.math3.geometry.partitioning.Region,org.apache.commons.math3.geometry.partitioning.Region) org.apache.commons.math3.geometry.partitioning.BSPTree.visit(org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor)
org.apache.commons.math3.geometry.partitioning.RegionFactory.union(org.apache.commons.math3.geometry.partitioning.Region,org.apache.commons.math3.geometry.partitioning.Region) org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.buildNew(org.apache.commons.math3.geometry.partitioning.BSPTree)
org.apache.commons.math3.geometry.partitioning.RegionFactory.union(org.apache.commons.math3.geometry.partitioning.Region,org.apache.commons.math3.geometry.partitioning.Region) org.apache.commons.math3.geometry.partitioning.AbstractRegion.getTree(boolean)
org.apache.commons.math3.geometry.partitioning.RegionFactory.union(org.apache.commons.math3.geometry.partitioning.Region,org.apache.commons.math3.geometry.partitioning.Region) org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.buildNew(org.apache.commons.math3.geometry.partitioning.BSPTree)
org.apache.commons.math3.ode.UnknownParameterException(java.lang.String) java.lang.Object.clinit()
org.apache.commons.math3.ode.UnknownParameterException(java.lang.String) org.apache.commons.math3.exception.util.LocalizedFormats.clinit()
org.apache.commons.math3.ode.UnknownParameterException(java.lang.String) org.apache.commons.math3.exception.MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])
org.apache.commons.math3.geometry.partitioning.AbstractRegion$BoundaryBuilder(org.apache.commons.math3.geometry.partitioning.AbstractRegion$1) org.apache.commons.math3.geometry.partitioning.AbstractRegion$BoundaryBuilder()
org.apache.commons.math3.analysis.function.Power.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.pow(double)
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.equals(java.lang.Object) org.apache.commons.math3.geometry.euclidean.twod.Vector2D.isNaN()
org.apache.commons.math3.stat.descriptive.rank.Min.evaluate(double[],int,int) java.lang.Object.clinit()
org.apache.commons.math3.stat.descriptive.rank.Min.evaluate(double[],int,int) java.lang.Double.isNaN(double)
org.apache.commons.math3.stat.descriptive.rank.Min.evaluate(double[],int,int) java.lang.Double.clinit()
org.apache.commons.math3.stat.descriptive.rank.Min.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.test(double[],int,int)
org.apache.commons.math3.geometry.euclidean.threed.SubPlane.side(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.threed.Vector3D.crossProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
org.apache.commons.math3.geometry.euclidean.threed.SubPlane.side(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.threed.Line.toSpace(org.apache.commons.math3.geometry.Vector)
org.apache.commons.math3.geometry.euclidean.threed.SubPlane.side(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.threed.Plane.getNormal()
org.apache.commons.math3.geometry.euclidean.threed.SubPlane.side(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.threed.Vector3D.dotProduct(org.apache.commons.math3.geometry.Vector)
org.apache.commons.math3.geometry.euclidean.threed.SubPlane.side(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.threed.Plane.getOffset(org.apache.commons.math3.geometry.euclidean.threed.Plane)
org.apache.commons.math3.geometry.euclidean.threed.SubPlane.side(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.threed.Plane.intersection(org.apache.commons.math3.geometry.euclidean.threed.Plane)
org.apache.commons.math3.geometry.euclidean.threed.SubPlane.side(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.partitioning.Side.clinit()
org.apache.commons.math3.geometry.euclidean.threed.SubPlane.side(org.apache.commons.math3.geometry.partitioning.Hyperplane) java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.threed.SubPlane.side(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.twod.Line(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)
org.apache.commons.math3.geometry.euclidean.threed.SubPlane.side(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.threed.Vector3D.clinit()
org.apache.commons.math3.geometry.euclidean.threed.SubPlane.side(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.threed.Line.getDirection()
org.apache.commons.math3.geometry.euclidean.threed.SubPlane.side(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.getHyperplane()
org.apache.commons.math3.geometry.euclidean.threed.SubPlane.side(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.oned.Vector1D.clinit()
org.apache.commons.math3.geometry.euclidean.threed.SubPlane.side(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.getRemainingRegion()
org.apache.commons.math3.geometry.euclidean.threed.SubPlane.side(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.partitioning.AbstractRegion.side(org.apache.commons.math3.geometry.partitioning.Hyperplane)
org.apache.commons.math3.geometry.euclidean.threed.SubPlane.side(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.threed.Plane.toSubSpace(org.apache.commons.math3.geometry.Vector)
org.apache.commons.math3.analysis.differentiation.GradientFunction.value(double[]) java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.GradientFunction.value(double[]) org.apache.commons.math3.analysis.differentiation.DerivativeStructure(int,int,int,double)
org.apache.commons.math3.analysis.differentiation.GradientFunction.value(double[]) org.apache.commons.math3.analysis.FunctionUtils$17.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure[])
org.apache.commons.math3.analysis.differentiation.GradientFunction.value(double[]) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getPartialDerivative(int[])
org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer$1.compare(org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair,org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair) java.lang.Object.clinit()
org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer$1.compare(org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair,org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair) java.lang.Double.compare(double,double)
org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer$1.compare(org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair,org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair) org.apache.commons.math3.optimization.GoalType.clinit()
org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer$1.compare(org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair,org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair) java.lang.Double.clinit()
org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer$1.compare(org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair,org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair) org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair.getValue()
org.apache.commons.math3.linear.RealVector$2$UnmodifiableEntry.setValue(double) org.apache.commons.math3.exception.MathUnsupportedOperationException()
org.apache.commons.math3.linear.RealVector$2$UnmodifiableEntry.setValue(double) java.lang.Object.clinit()
org.apache.commons.math3.linear.RealVector$2$UnmodifiableEntry.setValue(double) java.lang.Throwable.clinit()
org.apache.commons.math3.linear.OpenMapRealVector.hashCode() java.lang.Object.clinit()
org.apache.commons.math3.linear.OpenMapRealVector.hashCode() org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.hasNext()
org.apache.commons.math3.linear.OpenMapRealVector.hashCode() org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.value()
org.apache.commons.math3.linear.OpenMapRealVector.hashCode() java.lang.Double.clinit()
org.apache.commons.math3.linear.OpenMapRealVector.hashCode() org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.advance()
org.apache.commons.math3.linear.OpenMapRealVector.hashCode() java.lang.Double.doubleToLongBits(double)
org.apache.commons.math3.linear.OpenMapRealVector.hashCode() org.apache.commons.math3.util.OpenIntToDoubleHashMap.iterator()
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getN() org.apache.commons.math3.stat.descriptive.SummaryStatistics.getN()
org.apache.commons.math3.linear.RealVector$2.mapMultiplyToSelf(double) org.apache.commons.math3.exception.MathUnsupportedOperationException()
org.apache.commons.math3.linear.RealVector$2.mapMultiplyToSelf(double) java.lang.Object.clinit()
org.apache.commons.math3.linear.RealVector$2.mapMultiplyToSelf(double) java.lang.Throwable.clinit()
org.apache.commons.math3.util.FastMath.cosQ(double,double) java.lang.Object.clinit()
org.apache.commons.math3.util.FastMath.cosQ(double,double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.util.FastMath.cosQ(double,double) org.apache.commons.math3.util.FastMath.sinQ(double,double)
org.apache.commons.math3.random.RandomGeneratorFactory$1.nextInt() org.apache.commons.math3.random.RandomAdaptor.nextInt()
org.apache.commons.math3.random.RandomGeneratorFactory$1.nextInt() java.util.Random.nextInt()
org.apache.commons.math3.stat.descriptive.moment.Mean.clear() org.apache.commons.math3.stat.descriptive.moment.SecondMoment.clear()
org.apache.commons.math3.stat.descriptive.moment.Mean.clear() org.apache.commons.math3.stat.descriptive.moment.FirstMoment.clear()
org.apache.commons.math3.stat.descriptive.moment.Mean.clear() org.apache.commons.math3.stat.descriptive.moment.FourthMoment.clear()
org.apache.commons.math3.stat.descriptive.moment.Mean.clear() org.apache.commons.math3.stat.descriptive.moment.ThirdMoment.clear()
org.apache.commons.math3.geometry.partitioning.AbstractRegion$1.compare(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.SubHyperplane) org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.getSize()
org.apache.commons.math3.geometry.partitioning.AbstractRegion$1.compare(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.SubHyperplane) org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint.getSize()
org.apache.commons.math3.exception.OutOfRangeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number) java.lang.Object.clinit()
org.apache.commons.math3.exception.OutOfRangeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number) org.apache.commons.math3.exception.MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])
org.apache.commons.math3.ml.clustering.DoublePoint.toString() java.lang.Object.clinit()
org.apache.commons.math3.ml.clustering.DoublePoint.toString() java.util.Arrays.clinit()
org.apache.commons.math3.ml.clustering.DoublePoint.toString() java.util.Arrays.toString(double[])
org.apache.commons.math3.stat.descriptive.moment.VectorialMean.hashCode() java.lang.Object.clinit()
org.apache.commons.math3.stat.descriptive.moment.VectorialMean.hashCode() java.util.Arrays.hashCode(java.lang.Object[])
org.apache.commons.math3.stat.descriptive.moment.VectorialMean.hashCode() java.util.Arrays.clinit()
org.apache.commons.math3.ode.MultistepIntegrator$1.getDimension() org.apache.commons.math3.ode.ExpandableStatefulODE.getTotalDimension()
org.apache.commons.math3.ode.MultistepIntegrator$1.getDimension() org.apache.commons.math3.ode.AbstractIntegrator.getExpandable()
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.dotProduct(org.apache.commons.math3.geometry.Vector) java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.dotProduct(org.apache.commons.math3.geometry.Vector) org.apache.commons.math3.util.MathArrays.linearCombination(double,double,double,double,double,double)
org.apache.commons.math3.geometry.euclidean.threed.Plane.getOffset(org.apache.commons.math3.geometry.Vector) org.apache.commons.math3.geometry.euclidean.oned.Vector1D.dotProduct(org.apache.commons.math3.geometry.Vector)
org.apache.commons.math3.geometry.euclidean.threed.Plane.getOffset(org.apache.commons.math3.geometry.Vector) org.apache.commons.math3.geometry.euclidean.threed.Vector3D.dotProduct(org.apache.commons.math3.geometry.Vector)
org.apache.commons.math3.geometry.euclidean.threed.Plane.getOffset(org.apache.commons.math3.geometry.Vector) org.apache.commons.math3.geometry.euclidean.twod.Vector2D.dotProduct(org.apache.commons.math3.geometry.Vector)
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.key() java.lang.Object.clinit()
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.key() java.lang.Throwable.clinit()
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.key() java.util.NoSuchElementException()
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.key() org.apache.commons.math3.util.OpenIntToDoubleHashMap.access$100(org.apache.commons.math3.util.OpenIntToDoubleHashMap)
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.key() java.util.ConcurrentModificationException()
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.key() org.apache.commons.math3.util.OpenIntToDoubleHashMap.access$200(org.apache.commons.math3.util.OpenIntToDoubleHashMap)
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.value(double[]) org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.unboundedToBounded(double[])
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.value(double[]) org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapter.value(double[])
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.value(double[]) org.apache.commons.math3.analysis.FunctionUtils$16.value(double[])
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.value(double[]) org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$1.value(double[])
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.value(double[]) org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[])
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.value(double[]) org.apache.commons.math3.optimization.direct.SimplexOptimizer$1.value(double[])
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.value(double[]) org.apache.commons.math3.optim.nonlinear.scalar.LeastSquaresConverter.value(double[])
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.value(double[]) org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.value(double[])
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.value(double[]) org.apache.commons.math3.analysis.FunctionUtils$17.value(double[])
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.value(double[]) org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.value(double[])
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.value(double[]) org.apache.commons.math3.optim.linear.LinearObjectiveFunction.value(double[])
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.value(double[]) org.apache.commons.math3.analysis.FunctionUtils$11.value(double[])
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.value(double[]) org.apache.commons.math3.optimization.LeastSquaresConverter.value(double[])
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.value(double[]) org.apache.commons.math3.analysis.FunctionUtils$16$1.value(double[])
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.value(double[]) org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapter.value(double[])
org.apache.commons.math3.fraction.FractionFormat.parse(java.lang.String,java.text.ParsePosition) java.lang.Float.intValue()
org.apache.commons.math3.fraction.FractionFormat.parse(java.lang.String,java.text.ParsePosition) java.math.BigDecimal.intValue()
org.apache.commons.math3.fraction.FractionFormat.parse(java.lang.String,java.text.ParsePosition) org.apache.commons.math3.fraction.BigFractionFormat.parse(java.lang.String,java.text.ParsePosition)
org.apache.commons.math3.fraction.FractionFormat.parse(java.lang.String,java.text.ParsePosition) java.text.ParsePosition.setErrorIndex(int)
org.apache.commons.math3.fraction.FractionFormat.parse(java.lang.String,java.text.ParsePosition) java.math.BigInteger.intValue()
org.apache.commons.math3.fraction.FractionFormat.parse(java.lang.String,java.text.ParsePosition) org.apache.commons.math3.fraction.ProperBigFractionFormat.parse(java.lang.String,java.text.ParsePosition)
org.apache.commons.math3.fraction.FractionFormat.parse(java.lang.String,java.text.ParsePosition) java.text.ParsePosition.setIndex(int)
org.apache.commons.math3.fraction.FractionFormat.parse(java.lang.String,java.text.ParsePosition) java.text.NumberFormat.clinit()
org.apache.commons.math3.fraction.FractionFormat.parse(java.lang.String,java.text.ParsePosition) java.text.DecimalFormat.parse(java.lang.String,java.text.ParsePosition)
org.apache.commons.math3.fraction.FractionFormat.parse(java.lang.String,java.text.ParsePosition) java.lang.Object.clinit()
org.apache.commons.math3.fraction.FractionFormat.parse(java.lang.String,java.text.ParsePosition) java.lang.Short.intValue()
org.apache.commons.math3.fraction.FractionFormat.parse(java.lang.String,java.text.ParsePosition) org.apache.commons.math3.fraction.BigFraction.intValue()
org.apache.commons.math3.fraction.FractionFormat.parse(java.lang.String,java.text.ParsePosition) java.util.concurrent.atomic.AtomicLong.intValue()
org.apache.commons.math3.fraction.FractionFormat.parse(java.lang.String,java.text.ParsePosition) java.text.ParsePosition.getIndex()
org.apache.commons.math3.fraction.FractionFormat.parse(java.lang.String,java.text.ParsePosition) org.apache.commons.math3.fraction.ProperFractionFormat.parse(java.lang.String,java.text.ParsePosition)
org.apache.commons.math3.fraction.FractionFormat.parse(java.lang.String,java.text.ParsePosition) org.apache.commons.math3.fraction.AbstractFormat.parseNextCharacter(java.lang.String,java.text.ParsePosition)
org.apache.commons.math3.fraction.FractionFormat.parse(java.lang.String,java.text.ParsePosition) org.apache.commons.math3.fraction.AbstractFormat.parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition)
org.apache.commons.math3.fraction.FractionFormat.parse(java.lang.String,java.text.ParsePosition) org.apache.commons.math3.util.Decimal64.intValue()
org.apache.commons.math3.fraction.FractionFormat.parse(java.lang.String,java.text.ParsePosition) java.util.concurrent.atomic.AtomicInteger.intValue()
org.apache.commons.math3.fraction.FractionFormat.parse(java.lang.String,java.text.ParsePosition) java.lang.Byte.intValue()
org.apache.commons.math3.fraction.FractionFormat.parse(java.lang.String,java.text.ParsePosition) java.lang.Long.intValue()
org.apache.commons.math3.fraction.FractionFormat.parse(java.lang.String,java.text.ParsePosition) org.apache.commons.math3.fraction.Fraction(int,int)
org.apache.commons.math3.fraction.FractionFormat.parse(java.lang.String,java.text.ParsePosition) org.apache.commons.math3.fraction.AbstractFormat.getDenominatorFormat()
org.apache.commons.math3.fraction.FractionFormat.parse(java.lang.String,java.text.ParsePosition) org.apache.commons.math3.fraction.AbstractFormat.getNumeratorFormat()
org.apache.commons.math3.fraction.FractionFormat.parse(java.lang.String,java.text.ParsePosition) org.apache.commons.math3.fraction.FractionFormat.parse(java.lang.String,java.text.ParsePosition)
org.apache.commons.math3.fraction.FractionFormat.parse(java.lang.String,java.text.ParsePosition) java.text.ChoiceFormat.parse(java.lang.String,java.text.ParsePosition)
org.apache.commons.math3.fraction.FractionFormat.parse(java.lang.String,java.text.ParsePosition) org.apache.commons.math3.fraction.Fraction.intValue()
org.apache.commons.math3.fraction.FractionFormat.parse(java.lang.String,java.text.ParsePosition) org.apache.commons.math3.fraction.Fraction.clinit()
org.apache.commons.math3.fraction.FractionFormat.parse(java.lang.String,java.text.ParsePosition) java.lang.Double.intValue()
org.apache.commons.math3.fraction.FractionFormat.parse(java.lang.String,java.text.ParsePosition) java.lang.Integer.intValue()
org.apache.commons.math3.linear.RealVector$2.getDimension() org.apache.commons.math3.linear.RealVector$2.getDimension()
org.apache.commons.math3.linear.RealVector$2.getDimension() org.apache.commons.math3.linear.OpenMapRealVector.getDimension()
org.apache.commons.math3.linear.RealVector$2.getDimension() org.apache.commons.math3.linear.ArrayRealVector.getDimension()
org.apache.commons.math3.linear.RealVectorFormat.getInstance() java.lang.Object.clinit()
org.apache.commons.math3.linear.RealVectorFormat.getInstance() org.apache.commons.math3.linear.RealVectorFormat.getInstance(java.util.Locale)
org.apache.commons.math3.linear.RealVectorFormat.getInstance() java.util.Locale.clinit()
org.apache.commons.math3.linear.RealVectorFormat.getInstance() java.util.Locale.getDefault()
org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.twod.Line.getOffset(org.apache.commons.math3.geometry.Vector)
org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.getLocation()
org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.getHyperplane()
org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.getOffset(org.apache.commons.math3.geometry.Vector)
org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.SubHyperplane)
org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.threed.Plane.getOffset(org.apache.commons.math3.geometry.Vector)
org.apache.commons.math3.random.SynchronizedRandomGenerator.nextBoolean() java.util.Random.nextBoolean()
org.apache.commons.math3.random.SynchronizedRandomGenerator.nextBoolean() org.apache.commons.math3.random.RandomGeneratorFactory$1.nextBoolean()
org.apache.commons.math3.random.SynchronizedRandomGenerator.nextBoolean() org.apache.commons.math3.random.SynchronizedRandomGenerator.nextBoolean()
org.apache.commons.math3.random.SynchronizedRandomGenerator.nextBoolean() org.apache.commons.math3.random.RandomAdaptor.nextBoolean()
org.apache.commons.math3.random.SynchronizedRandomGenerator.nextBoolean() org.apache.commons.math3.random.BitsStreamGenerator.nextBoolean()
org.apache.commons.math3.optim.AbstractOptimizer$MaxEvalCallback.trigger(int) java.lang.Object.clinit()
org.apache.commons.math3.optim.AbstractOptimizer$MaxEvalCallback.trigger(int) java.lang.Integer.clinit()
org.apache.commons.math3.optim.AbstractOptimizer$MaxEvalCallback.trigger(int) java.lang.Throwable.clinit()
org.apache.commons.math3.optim.AbstractOptimizer$MaxEvalCallback.trigger(int) org.apache.commons.math3.exception.TooManyEvaluationsException(java.lang.Number)
org.apache.commons.math3.optim.AbstractOptimizer$MaxEvalCallback.trigger(int) java.lang.Integer.valueOf(int)
org.apache.commons.math3.linear.RealVectorFormat.format(org.apache.commons.math3.linear.RealVector,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.linear.RealVector$2.getDimension()
org.apache.commons.math3.linear.RealVectorFormat.format(org.apache.commons.math3.linear.RealVector,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.linear.ArrayRealVector.getEntry(int)
org.apache.commons.math3.linear.RealVectorFormat.format(org.apache.commons.math3.linear.RealVector,java.lang.StringBuffer,java.text.FieldPosition) java.text.FieldPosition.setBeginIndex(int)
org.apache.commons.math3.linear.RealVectorFormat.format(org.apache.commons.math3.linear.RealVector,java.lang.StringBuffer,java.text.FieldPosition) java.lang.Object.clinit()
org.apache.commons.math3.linear.RealVectorFormat.format(org.apache.commons.math3.linear.RealVector,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.linear.OpenMapRealVector.getEntry(int)
org.apache.commons.math3.linear.RealVectorFormat.format(org.apache.commons.math3.linear.RealVector,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.linear.OpenMapRealVector.getDimension()
org.apache.commons.math3.linear.RealVectorFormat.format(org.apache.commons.math3.linear.RealVector,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.linear.RealVector$2.getEntry(int)
org.apache.commons.math3.linear.RealVectorFormat.format(org.apache.commons.math3.linear.RealVector,java.lang.StringBuffer,java.text.FieldPosition) java.text.FieldPosition.setEndIndex(int)
org.apache.commons.math3.linear.RealVectorFormat.format(org.apache.commons.math3.linear.RealVector,java.lang.StringBuffer,java.text.FieldPosition) java.lang.StringBuffer.append(java.lang.String)
org.apache.commons.math3.linear.RealVectorFormat.format(org.apache.commons.math3.linear.RealVector,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.util.CompositeFormat.formatDouble(double,java.text.NumberFormat,java.lang.StringBuffer,java.text.FieldPosition)
org.apache.commons.math3.linear.RealVectorFormat.format(org.apache.commons.math3.linear.RealVector,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.linear.ArrayRealVector.getDimension()
org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.partitioning.BSPTree()
org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.twod.Line.wholeHyperplane()
org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.threed.Plane.wholeHyperplane()
org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(org.apache.commons.math3.geometry.partitioning.Hyperplane) java.lang.Object.clinit()
org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(org.apache.commons.math3.geometry.partitioning.SubHyperplane)
org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.isEmpty()
org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.wholeHyperplane()
org.apache.commons.math3.analysis.function.Atan.value(double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Atan.value(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.function.Atan.value(double) org.apache.commons.math3.util.FastMath.atan(double)
org.apache.commons.math3.util.Incrementor.incrementCount() org.apache.commons.math3.util.Incrementor$1.trigger(int)
org.apache.commons.math3.util.Incrementor.incrementCount() org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback.trigger(int)
org.apache.commons.math3.util.Incrementor.incrementCount() org.apache.commons.math3.optim.AbstractOptimizer$MaxIterCallback.trigger(int)
org.apache.commons.math3.util.Incrementor.incrementCount() org.apache.commons.math3.optim.AbstractOptimizer$MaxEvalCallback.trigger(int)
org.apache.commons.math3.util.Incrementor.incrementCount() org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback.trigger(int)
org.apache.commons.math3.util.OpenIntToFieldHashMap$Iterator(org.apache.commons.math3.util.OpenIntToFieldHashMap,org.apache.commons.math3.util.OpenIntToFieldHashMap$1) org.apache.commons.math3.util.OpenIntToFieldHashMap$Iterator(org.apache.commons.math3.util.OpenIntToFieldHashMap)
org.apache.commons.math3.analysis.FunctionUtils.toDifferentiableUnivariateFunction(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction) java.lang.Object.clinit()
org.apache.commons.math3.analysis.FunctionUtils.toDifferentiableUnivariateFunction(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction) org.apache.commons.math3.analysis.FunctionUtils$14(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction)
org.apache.commons.math3.util.FastMath.getExponent(double) java.lang.Object.clinit()
org.apache.commons.math3.util.FastMath.getExponent(double) java.lang.Double.doubleToRawLongBits(double)
org.apache.commons.math3.util.FastMath.getExponent(double) java.lang.Double.clinit()
org.apache.commons.math3.util.FastMath$ExpIntTable.clinit() java.lang.Object.clinit()
org.apache.commons.math3.util.FastMath$ExpIntTable.clinit() org.apache.commons.math3.util.FastMath$ExpIntTable.clinit()
org.apache.commons.math3.util.FastMath$ExpIntTable.clinit() org.apache.commons.math3.util.FastMathLiteralArrays.clinit()
org.apache.commons.math3.util.FastMath$ExpIntTable.clinit() org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB()
org.apache.commons.math3.util.FastMath$ExpIntTable.clinit() org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA()
org.apache.commons.math3.ode.events.Transformer$2(java.lang.String,int) org.apache.commons.math3.ode.events.Transformer(java.lang.String,int,org.apache.commons.math3.ode.events.Transformer$1)
org.apache.commons.math3.stat.Frequency.getPct(java.lang.Comparable) org.apache.commons.math3.stat.Frequency.getCount(java.lang.Comparable)
org.apache.commons.math3.stat.Frequency.getPct(java.lang.Comparable) org.apache.commons.math3.stat.Frequency.getSumFreq()
org.apache.commons.math3.util.Decimal64.hashCode() java.lang.Object.clinit()
org.apache.commons.math3.util.Decimal64.hashCode() java.lang.Double.clinit()
org.apache.commons.math3.util.Decimal64.hashCode() java.lang.Double.doubleToLongBits(double)
org.apache.commons.math3.analysis.function.Asinh.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.asinh()
org.apache.commons.math3.geometry.partitioning.BSPTree.merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree$LeafMerger) org.apache.commons.math3.geometry.partitioning.BSPTree.merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree$LeafMerger,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean)
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex.equals(java.lang.Object) java.lang.Object.clinit()
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex.equals(java.lang.Object) java.lang.Double.compare(double,double)
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex.equals(java.lang.Object) java.lang.Double.clinit()
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.access$200(org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet,double) org.apache.commons.math3.geometry.partitioning.AbstractRegion.setSize(double)
org.apache.commons.math3.exception.NullArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[]) org.apache.commons.math3.exception.MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])
org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.wholeHyperplane() java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.wholeHyperplane() org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region)
org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.wholeHyperplane() org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.wholeHyperplane()
org.apache.commons.math3.util.Decimal64.compareTo(java.lang.Object) org.apache.commons.math3.util.Decimal64.compareTo(org.apache.commons.math3.util.Decimal64)
org.apache.commons.math3.util.TransformerMap.hashCode() sun.util.PreHashedMap$1$1.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator.next()
org.apache.commons.math3.util.TransformerMap.hashCode() javax.security.auth.Subject$SecureSet$1.next()
org.apache.commons.math3.util.TransformerMap.hashCode() sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.Collections$SingletonList.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() org.apache.commons.math3.linear.RealVector$SparseEntryIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.concurrent.CopyOnWriteArrayList$COWIterator.next()
org.apache.commons.math3.util.TransformerMap.hashCode() sun.net.www.MessageHeader$HeaderIterator.next()
org.apache.commons.math3.util.TransformerMap.hashCode() sun.util.PreHashedMap$2$1.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.Hashtable$EntrySet.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() org.apache.commons.math3.util.DefaultTransformer.hashCode()
org.apache.commons.math3.util.TransformerMap.hashCode() org.apache.commons.math3.util.MultidimensionalCounter$Iterator.next()
org.apache.commons.math3.util.TransformerMap.hashCode() sun.net.www.HeaderParser$ParserIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.concurrent.ArrayBlockingQueue$Itr.next()
org.apache.commons.math3.util.TransformerMap.hashCode() javax.print.MimeType$ParameterMapEntrySet.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.Hashtable.values()
org.apache.commons.math3.util.TransformerMap.hashCode() javax.imageio.ImageIO$ImageWriterIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.JumboEnumSet$EnumSetIterator.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.AbstractSequentialList.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.LinkedList$ListItr.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.ServiceLoader$LazyIterator.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.Hashtable$KeySet.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() sun.nio.fs.UnixFileSystem$FileStoreIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.concurrent.DelayQueue$Itr.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() javax.imageio.spi.PartialOrderIterator.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.TreeMap$NavigableSubMap$SubMapKeyIterator.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.concurrent.ConcurrentHashMap$ValueIterator.next()
org.apache.commons.math3.util.TransformerMap.hashCode() sun.util.PreHashedMap$2.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.EnumMap$EntrySet.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.LinkedList$DescendingIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.JumboEnumSet$EnumSetIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.concurrent.ConcurrentHashMap$KeyIterator.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.LinkedList$DescendingIterator.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.TreeMap.values()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.concurrent.DelayQueue$Itr.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.JumboEnumSet.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() sun.util.PreHashedMap$1.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.HashMap$Values.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() sun.util.PreHashedMap$2$1.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.RegularEnumSet.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.concurrent.SynchronousQueue.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.WeakHashMap$HashIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.LinkedHashMap$EntryIterator.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.IdentityHashMap$KeyIterator.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.IdentityHashMap$ValueIterator.next()
org.apache.commons.math3.util.TransformerMap.hashCode() org.apache.commons.math3.util.TransformerMap.hashCode()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.ArrayList$SubList.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.AbstractMap$1$1.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() org.apache.commons.math3.linear.RealVector$2$2.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() com.sun.imageio.plugins.jpeg.ImageTypeIterator.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.AbstractMap$2.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.concurrent.DelayQueue.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() javax.imageio.spi.FilterIterator.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.concurrent.LinkedBlockingDeque.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.ArrayDeque$DescendingIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.EnumMap$KeySet.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.Hashtable$Enumerator.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.concurrent.ConcurrentLinkedQueue.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() org.apache.commons.math3.linear.RealVector$1.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.HashMap$EntryIterator.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.Collections$CheckedMap$CheckedEntrySet$1.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() org.apache.commons.math3.util.MultidimensionalCounter$Iterator.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() javax.security.auth.Subject$SecureSet$1.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.concurrent.CopyOnWriteArrayList$COWSubList.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.Hashtable$ValueCollection.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() java.lang.ProcessEnvironment$StringKeySet.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.lang.ProcessEnvironment$StringEnvironment.values()
org.apache.commons.math3.util.TransformerMap.hashCode() org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.Collections$UnmodifiableList$1.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.AbstractMap.values()
org.apache.commons.math3.util.TransformerMap.hashCode() sun.nio.cs.FastCharsetProvider$1.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.concurrent.ArrayBlockingQueue$Itr.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.Collections$CheckedList$1.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.Vector$Itr.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.Collections$CheckedMap.values()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.ArrayList$SubList$1.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.concurrent.ConcurrentHashMap$Values.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.Collections$UnmodifiableCollection.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.IdentityHashMap$Values.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.Collections$EmptySet.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.HashMap$ValueIterator.next()
org.apache.commons.math3.util.TransformerMap.hashCode() sun.misc.SoftCache$EntrySet$1.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.ArrayList$SubList$1.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.lang.Object.hashCode()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.concurrent.CopyOnWriteArrayList$COWIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.concurrent.ConcurrentHashMap$HashIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.IdentityHashMap$IdentityHashMapIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.lang.ProcessEnvironment$StringEntrySet$1.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() javax.security.auth.Subject$SecureSet.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() sun.net.www.HeaderParser$ParserIterator.next()
org.apache.commons.math3.util.TransformerMap.hashCode() sun.nio.ch.Util$2.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.concurrent.LinkedBlockingDeque$AbstractItr.next()
org.apache.commons.math3.util.TransformerMap.hashCode() sun.misc.SoftCache$EntrySet.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.concurrent.LinkedBlockingQueue.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.Collections$AsLIFOQueue.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() sun.nio.cs.FastCharsetProvider$1.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.EnumMap$KeyIterator.next()
org.apache.commons.math3.util.TransformerMap.hashCode() sun.nio.fs.AbstractPath$1.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.LinkedList$ListItr.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.Collections$EmptyIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.Scanner.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.Collections$CheckedCollection$1.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() javax.imageio.spi.FilterIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.ArrayDeque$DescendingIterator.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.concurrent.ConcurrentHashMap$EntryIterator.next()
org.apache.commons.math3.util.TransformerMap.hashCode() org.apache.commons.math3.util.CombinatoricsUtils$SingletonIterator.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.LinkedHashMap$KeyIterator.next()
org.apache.commons.math3.util.TransformerMap.hashCode() org.apache.commons.math3.linear.RealVector$2$2.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.concurrent.LinkedBlockingQueue$Itr.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.Collections$CheckedList$1.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.ArrayList.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() javax.imageio.ImageIO$ImageWriterIterator.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.Collections$EmptyList.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.Collections$1.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.PriorityQueue.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() org.apache.commons.math3.util.CombinatoricsUtils$LexicographicCombinationIterator.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.concurrent.LinkedBlockingDeque$AbstractItr.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.concurrent.ConcurrentLinkedQueue$Itr.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.ArrayDeque$DeqIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.LinkedHashMap$LinkedHashIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.concurrent.LinkedBlockingQueue$Itr.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.Collections$SingletonMap.values()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.HashMap.values()
org.apache.commons.math3.util.TransformerMap.hashCode() java.lang.ProcessEnvironment$StringEntrySet$1.next()
org.apache.commons.math3.util.TransformerMap.hashCode() sun.util.PreHashedMap$1$1.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.TreeMap$DescendingSubMap$DescendingEntrySetView.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.TreeMap$Values.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.AbstractMap$1.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.WeakHashMap$EntryIterator.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.lang.ProcessEnvironment$StringValues$1.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.HashMap$EntrySet.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.concurrent.ArrayBlockingQueue.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() javax.print.MimeType$ParameterMapEntrySetIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.AbstractMap$1$1.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.WeakHashMap$Values.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.IdentityHashMap$KeySet.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() sun.awt.util.IdentityLinkedList$DescendingIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.lang.ProcessEnvironment$StringKeySet$1.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.TreeMap$DescendingKeyIterator.next()
org.apache.commons.math3.util.TransformerMap.hashCode() javax.imageio.ImageIO$ImageReaderIterator.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.concurrent.ConcurrentHashMap$EntrySet.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() javax.imageio.ImageIO$ImageReaderIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.TreeMap$PrivateEntryIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() sun.misc.Service$LazyIterator.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.Scanner.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.WeakHashMap$ValueIterator.next()
org.apache.commons.math3.util.TransformerMap.hashCode() org.apache.commons.math3.linear.RealVector$SparseEntryIterator.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.IdentityHashMap$EntryIterator.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.concurrent.ConcurrentHashMap$KeySet.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.Collections$CheckedCollection.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.HashSet.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.PriorityQueue$Itr.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.Collections$SynchronizedMap.values()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.Hashtable$Enumerator.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.RegularEnumSet$EnumSetIterator.next()
org.apache.commons.math3.util.TransformerMap.hashCode() javax.print.MimeType$ParameterMapEntrySetIterator.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.WeakHashMap$KeyIterator.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.Collections$CheckedMap$CheckedEntrySet$1.next()
org.apache.commons.math3.util.TransformerMap.hashCode() sun.security.jca.ProviderList$ServiceList.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.SubList$1.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.AbstractList.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.Collections$EmptyIterator.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.Collections$SynchronizedCollection.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.LinkedHashMap$ValueIterator.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.ServiceLoader$1.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.TreeMap$NavigableSubMap$SubMapEntryIterator.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.TreeMap$ValueIterator.next()
org.apache.commons.math3.util.TransformerMap.hashCode() org.apache.commons.math3.util.CombinatoricsUtils$LexicographicCombinationIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.AbstractMap$2$1.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.EnumMap$ValueIterator.next()
org.apache.commons.math3.util.TransformerMap.hashCode() sun.nio.fs.AbstractPath$1.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.lang.ProcessEnvironment$StringValues$1.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.Collections$UnmodifiableMap.values()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.Collections$CheckedMap$CheckedEntrySet.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.WeakHashMap$KeySet.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.Collections$SetFromMap.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.SubList.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.TreeMap$EntryIterator.next()
org.apache.commons.math3.util.TransformerMap.hashCode() org.apache.commons.math3.linear.RealVector$1.next()
org.apache.commons.math3.util.TransformerMap.hashCode() org.apache.commons.math3.util.CombinatoricsUtils$SingletonIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() sun.awt.util.IdentityLinkedList$ListItr.next()
org.apache.commons.math3.util.TransformerMap.hashCode() javax.imageio.spi.PartiallyOrderedSet.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() javax.security.auth.Subject$ClassSet.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.EnumMap$EntryIterator.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.Collections$UnmodifiableList$1.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() org.apache.commons.math3.linear.RealVector$2$1.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.IdentityHashMap$EntrySet.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.ArrayList$Itr.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.nio.charset.Charset$1.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.Collections$UnmodifiableCollection$1.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.EnumMap$Values.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.jar.Attributes.values()
org.apache.commons.math3.util.TransformerMap.hashCode() com.sun.imageio.plugins.jpeg.ImageTypeIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.awt.RenderingHints.values()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.TreeMap$KeyIterator.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.SubList$1.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.Collections$EmptyMap.values()
org.apache.commons.math3.util.TransformerMap.hashCode() java.lang.ProcessEnvironment$StringKeySet$1.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.Collections$UnmodifiableCollection$1.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.TreeSet.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.RegularEnumSet$EnumSetIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.HashMap$KeyIterator.next()
org.apache.commons.math3.util.TransformerMap.hashCode() sun.misc.SoftCache$EntrySet$1.next()
org.apache.commons.math3.util.TransformerMap.hashCode() sun.security.jca.ProviderList$ServiceList$1.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.IdentityHashMap.values()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.concurrent.ConcurrentHashMap.values()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.PriorityQueue$Itr.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.Collections$1.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.ArrayList$Itr.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.lang.ProcessEnvironment$StringValues.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.EnumMap$EnumMapIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.AbstractMap$2$1.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.ServiceLoader$1.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.EnumMap.values()
org.apache.commons.math3.util.TransformerMap.hashCode() javax.imageio.ImageIO$ImageTranscoderIterator.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.lang.ProcessEnvironment$StringEntrySet.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() sun.security.jca.ProviderList$ServiceList$1.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.ServiceLoader$LazyIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.ArrayDeque$DeqIterator.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.Vector$Itr.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.Collections$SingletonSet.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.TreeMap$AscendingSubMap$AscendingEntrySetView.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.Collections$CheckedCollection$1.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.AbstractList$Itr.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.TreeMap$KeySet.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.TreeMap$EntrySet.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() sun.misc.Service$LazyIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.nio.charset.Charset$1.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.concurrent.ConcurrentLinkedQueue$Itr.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() sun.net.www.MessageHeader$HeaderIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.WeakHashMap.values()
org.apache.commons.math3.util.TransformerMap.hashCode() sun.nio.fs.UnixFileSystem$FileStoreIterator.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.HashMap$KeySet.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() sun.awt.util.IdentityLinkedList$DescendingIterator.next()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.WeakHashMap$EntrySet.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.ArrayDeque.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() sun.awt.util.IdentityLinkedList$ListItr.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.Vector.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() javax.imageio.spi.PartialOrderIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.TreeMap$NavigableSubMap$SubMapIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.concurrent.CopyOnWriteArrayList.iterator()
org.apache.commons.math3.util.TransformerMap.hashCode() sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() javax.imageio.ImageIO$ImageTranscoderIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.security.Provider.values()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.AbstractList$Itr.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() java.util.HashMap$HashIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.hashCode() org.apache.commons.math3.linear.RealVector$2$1.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.util.PreHashedMap$1$1.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.text.CompactByteArray.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) javax.security.auth.Subject$SecureSet$1.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.Hashtable.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.security.krb5.internal.Ticket.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVector$SparseEntryIterator.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.concurrent.CopyOnWriteArrayList$COWIterator.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.net.www.MessageHeader$HeaderIterator.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.util.PreHashedMap$2$1.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) com.sun.imageio.plugins.jpeg.DHTMarkerSegment$Htable.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.SimpleTimeZone.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.security.krb5.internal.ETypeInfo.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.Locale.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.util.MultidimensionalCounter$Iterator.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.net.www.HeaderParser$ParserIterator.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.concurrent.ArrayBlockingQueue$Itr.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.java2d.SunGraphics2D.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.awt.print.Paper.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) javax.imageio.ImageIO$ImageWriterIterator.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.JumboEnumSet$EnumSetIterator.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.LinkedList$ListItr.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) javax.swing.ArrayTable.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.text.SimpleDateFormat.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.ServiceLoader$LazyIterator.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.nio.fs.UnixFileSystem$FileStoreIterator.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.concurrent.DelayQueue$Itr.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) javax.imageio.spi.PartialOrderIterator.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.TreeMap$NavigableSubMap$SubMapKeyIterator.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.GregorianCalendar.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.concurrent.ConcurrentHashMap$ValueIterator.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.LinkedList$DescendingIterator.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.ArrayRealVector.checkVectorDimensions(org.apache.commons.math3.linear.RealVector)
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.JumboEnumSet$EnumSetIterator.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.Vector.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.concurrent.ConcurrentHashMap$KeyIterator.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) javax.swing.text.ElementIterator.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.LinkedList$DescendingIterator.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.concurrent.DelayQueue$Itr.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.util.PreHashedMap$2$1.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.awt.RenderingHints.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.text.DateFormatSymbols.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.HashSet.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) javax.sound.midi.MetaMessage.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.util.calendar.ImmutableGregorianDate.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.WeakHashMap$HashIterator.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.text.RuleBasedBreakIterator.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.LinkedHashMap$EntryIterator.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.IdentityHashMap$KeyIterator.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) javax.swing.text.Segment.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.awt.ImageCapabilities.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.IdentityHashMap$ValueIterator.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector)
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.AbstractMap$1$1.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVector$2$2.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) com.sun.imageio.plugins.jpeg.ImageTypeIterator.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.ArrayRealVector(int)
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$ICCMarkerSegment.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) javax.imageio.spi.FilterIterator.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.awt.geom.Line2D.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.ArrayDeque$DescendingIterator.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.security.krb5.internal.ETypeInfo2.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.Hashtable$Enumerator.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.awt.font.TextMeasurer.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVector$1.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) javax.swing.text.StyledEditorKit$1.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.HashMap$EntryIterator.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.ArrayDeque.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.Collections$CheckedMap$CheckedEntrySet$1.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.util.MultidimensionalCounter$Iterator.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.awt.datatransfer.DataFlavor.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) javax.security.auth.Subject$SecureSet$1.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.security.krb5.internal.PAData.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) javax.swing.AbstractAction.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.concurrent.CopyOnWriteArrayList.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.security.krb5.internal.AuthorizationDataEntry.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.Collections$UnmodifiableList$1.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.JumboEnumSet.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.nio.cs.FastCharsetProvider$1.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) javax.naming.Reference.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.concurrent.ArrayBlockingQueue$Itr.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.jar.Manifest.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.Vector$Itr.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.security.krb5.EncryptedData.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.Collections$CheckedList$1.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.text.NumberFormat.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.EnumSet.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.security.SignatureSpi.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.ArrayList$SubList$1.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.ArrayList.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) com.sun.imageio.plugins.jpeg.DHTMarkerSegment.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.awt.font.CharArrayIterator.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.security.Signature$Delegate.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.HashMap$ValueIterator.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.misc.SoftCache$EntrySet$1.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.awt.geom.Path2D$Float.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.awt.BufferCapabilities.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.text.DecimalFormat.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.ArrayList$SubList$1.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.ArrayRealVector(double[],boolean)
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.concurrent.CopyOnWriteArrayList$COWIterator.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.net.www.MimeEntry.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) com.sun.imageio.plugins.jpeg.SOFMarkerSegment$ComponentSpec.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.concurrent.ConcurrentHashMap$HashIterator.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.IdentityHashMap$IdentityHashMapIterator.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.lang.ProcessEnvironment$StringEntrySet$1.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.EnumMap.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.net.www.HeaderParser$ParserIterator.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.concurrent.LinkedBlockingDeque$AbstractItr.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.security.krb5.internal.AuthorizationData.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFExtensionMarkerSegment.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.nio.cs.FastCharsetProvider$1.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.EnumMap$KeyIterator.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.nio.fs.AbstractPath$1.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.security.krb5.internal.crypto.crc32.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.util.calendar.ZoneInfo.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.LinkedList$ListItr.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.text.normalizer.CharacterIteratorWrapper.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.Collections$EmptyIterator.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.Scanner.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) javax.imageio.spi.FilterIterator.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.Collections$CheckedCollection$1.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.ArrayDeque$DescendingIterator.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.concurrent.ConcurrentHashMap$EntryIterator.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) javax.swing.DefaultListSelectionModel.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.awt.font.TextLayout.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.text.DecimalFormatSymbols.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.util.CombinatoricsUtils$SingletonIterator.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.text.DigitList.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) javax.print.attribute.EnumSyntax.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.LinkedHashMap$KeyIterator.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.awt.geom.CubicCurve2D.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVector$2$2.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.concurrent.LinkedBlockingQueue$Itr.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.Collections$CheckedList$1.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) javax.imageio.ImageIO$ImageWriterIterator.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.security.krb5.Realm.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) com.sun.imageio.plugins.jpeg.DQTMarkerSegment$Qtable.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVector$2$UnmodifiableEntry.getValue()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.Collections$1.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.util.CombinatoricsUtils$LexicographicCombinationIterator.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.awt.JobAttributes.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.ArrayRealVector.clinit()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.concurrent.ConcurrentLinkedQueue$Itr.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.concurrent.LinkedBlockingDeque$AbstractItr.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.ArrayDeque$DeqIterator.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.LinkedHashMap$LinkedHashIterator.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.concurrent.LinkedBlockingQueue$Itr.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.security.x509.NameConstraintsExtension.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.TreeMap.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.lang.ProcessEnvironment$StringEntrySet$1.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.awt.geom.Path2D$Double.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.util.PreHashedMap$1$1.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVector$Entry.getValue()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) javax.swing.tree.DefaultMutableTreeNode.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.HashMap.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.security.provider.PolicyParser$GrantEntry.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.WeakHashMap$EntryIterator.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.lang.ProcessEnvironment$StringValues$1.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) javax.print.MimeType$ParameterMapEntrySetIterator.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.awt.geom.AffineTransform.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.security.krb5.internal.KerberosTime.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.AbstractMap$1$1.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.text.IntHashtable.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.security.util.BitArray.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.JapaneseImperialCalendar.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.IdentityHashMap.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.text.normalizer.NormalizerBase.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.security.krb5.internal.TicketFlags.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.security.provider.MD4.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.lang.ProcessEnvironment$StringKeySet$1.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.awt.util.IdentityLinkedList$DescendingIterator.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) javax.swing.tree.DefaultTreeSelectionModel.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.OpenMapRealVector$OpenMapEntry.getIndex()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.TreeMap$DescendingKeyIterator.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) javax.imageio.ImageIO$ImageReaderIterator.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.text.MessageFormat.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.TreeMap$PrivateEntryIterator.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) javax.swing.text.SimpleAttributeSet.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.lang.Object.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) javax.imageio.ImageIO$ImageReaderIterator.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.misc.Service$LazyIterator.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.java2d.loops.FontInfo.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.Scanner.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.WeakHashMap$ValueIterator.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.awt.PageAttributes.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.security.krb5.PrincipalName.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVector$SparseEntryIterator.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.IdentityHashMap$EntryIterator.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) com.sun.imageio.plugins.png.PNGMetadata.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) com.sun.imageio.plugins.jpeg.SOFMarkerSegment.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.PriorityQueue$Itr.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.Hashtable$Enumerator.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.RegularEnumSet$EnumSetIterator.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) javax.print.MimeType$ParameterMapEntrySetIterator.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.WeakHashMap$KeyIterator.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.Collections$CheckedMap$CheckedEntrySet$1.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.net.HttpCookie.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.awt.datatransfer.MimeType.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.SubList$1.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.Collections$EmptyIterator.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.LinkedHashMap$ValueIterator.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.font.FontLineMetrics.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.font.StandardGlyphVector.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVector.iterator()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.ServiceLoader$1.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.TreeMap$NavigableSubMap$SubMapEntryIterator.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.TreeMap$ValueIterator.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.text.AttributedString$AttributedStringIterator.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.util.CombinatoricsUtils$LexicographicCombinationIterator.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.AbstractMap$2$1.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.EnumMap$ValueIterator.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.security.krb5.internal.LastReqEntry.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.lang.ProcessEnvironment$StringValues$1.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.nio.fs.AbstractPath$1.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) javax.swing.text.StyleContext$SmallAttributeSet.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.text.RuleBasedBreakIterator$SafeCharIterator.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.text.RuleBasedCollator.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) javax.swing.text.ElementIterator$StackItem.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.TreeMap$EntryIterator.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVector$1.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.ResourceBundle$CacheKey.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.util.CombinatoricsUtils$SingletonIterator.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumbJPEG.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.font.AttributeValues.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.LinkedList.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVector$Entry.getIndex()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.awt.util.IdentityLinkedList$ListItr.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) javax.swing.text.GlyphView.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.text.normalizer.ReplaceableUCharacterIterator.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.EnumMap$EntryIterator.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.Collections$UnmodifiableList$1.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumb.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVector$2$1.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.awt.geom.Point2D.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) javax.swing.text.html.OptionListModel.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.ArrayList$Itr.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) javax.swing.text.EditorKit.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) com.sun.imageio.plugins.jpeg.DQTMarkerSegment.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) javax.swing.text.StyledEditorKit.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.nio.charset.Charset$1.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.security.krb5.internal.HostAddresses.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.Collections$UnmodifiableCollection$1.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) javax.crypto.Mac.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) com.sun.imageio.plugins.jpeg.SOSMarkerSegment.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) com.sun.imageio.plugins.jpeg.ImageTypeIterator.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.net.ProgressSource.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.awt.datatransfer.MimeTypeParameterList.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.net.www.protocol.http.AuthenticationInfo.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.regex.Pattern$CharPropertyNames$CloneableProperty.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.TreeMap$KeyIterator.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.security.x509.GeneralSubtrees.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.OpenMapRealVector$OpenMapEntry.getValue()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) javax.naming.CompositeName.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.SubList$1.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.Hashtable$Entry.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.TreeSet.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.lang.ProcessEnvironment$StringKeySet$1.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.awt.image.ImageFilter.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.Collections$UnmodifiableCollection$1.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) com.sun.imageio.plugins.jpeg.SOSMarkerSegment$ScanComponentSpec.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.RegularEnumSet$EnumSetIterator.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.HashMap$KeyIterator.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.misc.SoftCache$EntrySet$1.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.security.krb5.EncryptionKey.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.security.jca.ProviderList$ServiceList$1.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.awt.image.Kernel.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.Date.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.awt.Insets.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.PriorityQueue$Itr.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.Collections$1.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.util.calendar.CalendarDate.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.ArrayList$Itr.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.awt.print.PageFormat.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.EnumMap$EnumMapIterator.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.AbstractMap$2$1.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.ServiceLoader$1.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) javax.imageio.ImageIO$ImageTranscoderIterator.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.awt.geom.QuadCurve2D.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.security.jca.ProviderList$ServiceList$1.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.zip.ZipEntry.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.security.MessageDigest$Delegate.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.ServiceLoader$LazyIterator.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.ArrayDeque$DeqIterator.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.Vector$Itr.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.lang.Object.clinit()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.Collections$CheckedCollection$1.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) javax.sound.midi.ShortMessage.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.AbstractList$Itr.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.text.ChoiceFormat.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.lang.Thread.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) com.sun.imageio.plugins.jpeg.MarkerSegment.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.awt.image.renderable.RenderContext.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.misc.Service$LazyIterator.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.nio.charset.Charset$1.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.net.www.MessageHeader$HeaderIterator.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.concurrent.ConcurrentLinkedQueue$Itr.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.nio.fs.UnixFileSystem$FileStoreIterator.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) com.sun.imageio.plugins.jpeg.JPEGMetadata.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.text.StringCharacterIterator.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.awt.geom.Dimension2D.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.awt.util.IdentityLinkedList$DescendingIterator.next()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.awt.geom.Area.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.jar.Attributes.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.security.krb5.internal.HostAddress.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.awt.util.IdentityLinkedList$ListItr.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) javax.imageio.spi.PartialOrderIterator.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.TreeMap$NavigableSubMap$SubMapIterator.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVector$2.iterator()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.text.BreakIterator.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.BitSet.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.lang.Enum.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.AbstractMap.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.ArrayRealVector.checkVectorDimensions(int)
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.awt.geom.RectangularShape.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) javax.imageio.ImageIO$ImageTranscoderIterator.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.HashMap$HashIterator.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) javax.swing.text.html.HTMLEditorKit.clone()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.AbstractList$Itr.hasNext()
org.apache.commons.math3.linear.ArrayRealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVector$2$1.hasNext()
org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry(int,int) java.lang.Object.clinit()
org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry(int,int) org.apache.commons.math3.linear.MatrixUtils.clinit()
org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry(int,int) org.apache.commons.math3.linear.MatrixUtils.checkMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int,int)
org.apache.commons.math3.exception.util.ExceptionContext.addMessage(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[]) sun.awt.util.IdentityLinkedList.add(java.lang.Object)
org.apache.commons.math3.exception.util.ExceptionContext.addMessage(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[]) java.lang.Object.clinit()
org.apache.commons.math3.exception.util.ExceptionContext.addMessage(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[]) java.util.Collections$UnmodifiableCollection.add(java.lang.Object)
org.apache.commons.math3.exception.util.ExceptionContext.addMessage(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[]) java.util.Collections$CheckedCollection.add(java.lang.Object)
org.apache.commons.math3.exception.util.ExceptionContext.addMessage(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[]) org.apache.commons.math3.exception.util.ArgUtils.flatten(java.lang.Object[])
org.apache.commons.math3.exception.util.ExceptionContext.addMessage(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[]) java.util.AbstractList.add(java.lang.Object)
org.apache.commons.math3.exception.util.ExceptionContext.addMessage(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[]) java.util.Collections$SynchronizedCollection.add(java.lang.Object)
org.apache.commons.math3.exception.util.ExceptionContext.addMessage(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[]) java.util.concurrent.CopyOnWriteArrayList.add(java.lang.Object)
org.apache.commons.math3.exception.util.ExceptionContext.addMessage(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[]) java.util.Vector.add(java.lang.Object)
org.apache.commons.math3.exception.util.ExceptionContext.addMessage(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[]) java.util.LinkedList.add(java.lang.Object)
org.apache.commons.math3.exception.util.ExceptionContext.addMessage(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[]) java.util.ArrayList.add(java.lang.Object)
org.apache.commons.math3.exception.util.ExceptionContext.addMessage(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[]) sun.awt.util.IdentityArrayList.add(java.lang.Object)
org.apache.commons.math3.linear.AbstractFieldMatrix.toString() java.lang.StringBuffer.clinit()
org.apache.commons.math3.linear.AbstractFieldMatrix.toString() java.lang.StringBuffer.toString()
org.apache.commons.math3.linear.AbstractFieldMatrix.toString() java.lang.String.lastIndexOf(int)
org.apache.commons.math3.linear.AbstractFieldMatrix.toString() org.apache.commons.math3.linear.Array2DRowFieldMatrix.getRowDimension()
org.apache.commons.math3.linear.AbstractFieldMatrix.toString() org.apache.commons.math3.linear.BlockFieldMatrix.getRowDimension()
org.apache.commons.math3.linear.AbstractFieldMatrix.toString() org.apache.commons.math3.linear.Array2DRowFieldMatrix.getColumnDimension()
org.apache.commons.math3.linear.AbstractFieldMatrix.toString() java.lang.StringBuffer.append(java.lang.Object)
org.apache.commons.math3.linear.AbstractFieldMatrix.toString() org.apache.commons.math3.linear.BlockFieldMatrix.getColumnDimension()
org.apache.commons.math3.linear.AbstractFieldMatrix.toString() org.apache.commons.math3.linear.SparseFieldMatrix.getEntry(int,int)
org.apache.commons.math3.linear.AbstractFieldMatrix.toString() java.lang.StringBuffer()
org.apache.commons.math3.linear.AbstractFieldMatrix.toString() org.apache.commons.math3.linear.BlockFieldMatrix.getEntry(int,int)
org.apache.commons.math3.linear.AbstractFieldMatrix.toString() java.lang.Object.clinit()
org.apache.commons.math3.linear.AbstractFieldMatrix.toString() org.apache.commons.math3.linear.SparseFieldMatrix.getColumnDimension()
org.apache.commons.math3.linear.AbstractFieldMatrix.toString() org.apache.commons.math3.linear.SparseFieldMatrix.getRowDimension()
org.apache.commons.math3.linear.AbstractFieldMatrix.toString() java.lang.String.substring(int)
org.apache.commons.math3.linear.AbstractFieldMatrix.toString() org.apache.commons.math3.linear.Array2DRowFieldMatrix.getEntry(int,int)
org.apache.commons.math3.linear.AbstractFieldMatrix.toString() java.lang.Object.getClass()
org.apache.commons.math3.linear.AbstractFieldMatrix.toString() java.lang.StringBuffer.append(java.lang.String)
org.apache.commons.math3.linear.AbstractFieldMatrix.toString() java.lang.Class.getName()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.access$000(org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer,double[]) org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer.computeObjectiveGradient(double[])
org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(double[],double[]) java.lang.Object.clinit()
org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(double[],double[]) org.apache.commons.math3.util.Precision.clinit()
org.apache.commons.math3.util.MathArrays.equalsIncludingNaN(double[],double[]) org.apache.commons.math3.util.Precision.equalsIncludingNaN(double,double)
org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.getOffset(org.apache.commons.math3.geometry.Vector) org.apache.commons.math3.geometry.euclidean.oned.Vector1D.getX()
org.apache.commons.math3.genetics.ChromosomePair.toString() java.lang.String.clinit()
org.apache.commons.math3.genetics.ChromosomePair.toString() java.lang.Object.clinit()
org.apache.commons.math3.genetics.ChromosomePair.toString() org.apache.commons.math3.genetics.ChromosomePair.getFirst()
org.apache.commons.math3.genetics.ChromosomePair.toString() java.lang.String.format(java.lang.String,java.lang.Object[])
org.apache.commons.math3.genetics.ChromosomePair.toString() org.apache.commons.math3.genetics.ChromosomePair.getSecond()
org.apache.commons.math3.util.MathArrays.checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean) java.lang.Object.clinit()
org.apache.commons.math3.util.MathArrays.checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean) org.apache.commons.math3.util.MathArrays.checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean,boolean)
org.apache.commons.math3.ode.events.Transformer.clinit() org.apache.commons.math3.ode.events.Transformer$5(java.lang.String,int)
org.apache.commons.math3.ode.events.Transformer.clinit() java.lang.Object.clinit()
org.apache.commons.math3.ode.events.Transformer.clinit() org.apache.commons.math3.ode.events.Transformer$3(java.lang.String,int)
org.apache.commons.math3.ode.events.Transformer.clinit() org.apache.commons.math3.ode.events.Transformer$2(java.lang.String,int)
org.apache.commons.math3.ode.events.Transformer.clinit() org.apache.commons.math3.ode.events.Transformer$1(java.lang.String,int)
org.apache.commons.math3.ode.events.Transformer.clinit() org.apache.commons.math3.ode.events.Transformer$4(java.lang.String,int)
org.apache.commons.math3.ode.events.Transformer.clinit() org.apache.commons.math3.ode.events.Transformer.clinit()
org.apache.commons.math3.linear.ArrayRealVector(int) org.apache.commons.math3.linear.RealVector()
org.apache.commons.math3.util.FastMath.max(double,double) java.lang.Object.clinit()
org.apache.commons.math3.util.FastMath.max(double,double) java.lang.Double.doubleToRawLongBits(double)
org.apache.commons.math3.util.FastMath.max(double,double) java.lang.Double.clinit()
org.apache.commons.math3.geometry.partitioning.BSPTree() java.lang.Object()
org.apache.commons.math3.util.FastMath.cbrt(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.util.FastMath.cbrt(double) java.lang.Object.clinit()
org.apache.commons.math3.util.FastMath.cbrt(double) java.lang.Double.doubleToRawLongBits(double)
org.apache.commons.math3.util.FastMath.cbrt(double) java.lang.Double.clinit()
org.apache.commons.math3.util.FastMath.cbrt(double) java.lang.Double.longBitsToDouble(long)
org.apache.commons.math3.analysis.FunctionUtils$16.value(double[]) org.apache.commons.math3.analysis.FunctionUtils$17.value(double[])
org.apache.commons.math3.linear.MatrixUtils.clinit() java.lang.Object.clinit()
org.apache.commons.math3.linear.MatrixUtils.clinit() org.apache.commons.math3.linear.MatrixUtils.clinit()
org.apache.commons.math3.linear.MatrixUtils.clinit() org.apache.commons.math3.linear.RealMatrixFormat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
org.apache.commons.math3.linear.MatrixUtils.clinit() org.apache.commons.math3.linear.RealMatrixFormat.getInstance()
org.apache.commons.math3.analysis.differentiation.DSCompiler.compileMultiplicationIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler,int[]) java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.compileMultiplicationIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler,int[]) java.util.ArrayList.size()
org.apache.commons.math3.analysis.differentiation.DSCompiler.compileMultiplicationIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler,int[]) java.util.ArrayList.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.compileMultiplicationIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler,int[]) java.util.ArrayList(int)
org.apache.commons.math3.analysis.differentiation.DSCompiler.compileMultiplicationIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler,int[]) java.lang.System.arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org.apache.commons.math3.analysis.differentiation.DSCompiler.compileMultiplicationIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler,int[]) java.util.ArrayList.toArray(java.lang.Object[])
org.apache.commons.math3.analysis.differentiation.DSCompiler.compileMultiplicationIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler,int[]) java.util.ArrayList.add(java.lang.Object)
org.apache.commons.math3.analysis.differentiation.DSCompiler.compileMultiplicationIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler,int[]) java.util.ArrayList.get(int)
org.apache.commons.math3.analysis.differentiation.DSCompiler.compileMultiplicationIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler,int[]) java.lang.System.clinit()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.delete() org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.rebalanceLeftShrunk()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.delete() org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.getLargest()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.delete() java.lang.Object.clinit()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.delete() org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.getSmallest()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.delete() org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.rebalanceRightShrunk()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.delete() org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.access$302(org.apache.commons.math3.geometry.partitioning.utilities.AVLTree,org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node)
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) sun.util.PreHashedMap$1$1.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.SubList.size()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.Collections$UnmodifiableCollection.size()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) javax.security.auth.Subject$SecureSet$1.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) org.apache.commons.math3.linear.RealVector$SparseEntryIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.Collections$SingletonList.iterator()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.concurrent.CopyOnWriteArrayList$COWIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) sun.net.www.MessageHeader$HeaderIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) sun.util.PreHashedMap$2$1.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.Arrays$ArrayList.size()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) org.apache.commons.math3.util.MultidimensionalCounter$Iterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) sun.net.www.HeaderParser$ParserIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.concurrent.ArrayBlockingQueue$Itr.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) javax.imageio.ImageIO$ImageWriterIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.AbstractSequentialList.iterator()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.JumboEnumSet$EnumSetIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.LinkedList$ListItr.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.ServiceLoader$LazyIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) sun.nio.fs.UnixFileSystem$FileStoreIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.concurrent.DelayQueue$Itr.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) javax.imageio.spi.PartialOrderIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.TreeMap$NavigableSubMap$SubMapKeyIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.concurrent.ConcurrentHashMap$ValueIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.LinkedList$DescendingIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.JumboEnumSet$EnumSetIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.concurrent.ConcurrentHashMap$KeyIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.concurrent.DelayQueue$Itr.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.LinkedList$DescendingIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) sun.util.PreHashedMap$2$1.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) sun.awt.util.IdentityArrayList.size()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.LinkedList.size()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric.value(double,double[])
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.WeakHashMap$HashIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.LinkedHashMap$EntryIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.IdentityHashMap$KeyIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) org.apache.commons.math3.fitting.GaussianFitter$1.value(double,double[])
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.IdentityHashMap$ValueIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.Collections$CopiesList.size()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.ArrayList$SubList.iterator()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.AbstractMap$1$1.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) org.apache.commons.math3.linear.RealVector$2$2.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) com.sun.imageio.plugins.jpeg.ImageTypeIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) org.apache.commons.math3.analysis.function.Logit$Parametric.value(double,double[])
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) javax.imageio.spi.FilterIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.ArrayDeque$DescendingIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.Hashtable$Enumerator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) org.apache.commons.math3.linear.RealVector$1.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.Collections$CheckedCollection.size()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.HashMap$EntryIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.Collections$CheckedMap$CheckedEntrySet$1.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) org.apache.commons.math3.util.MultidimensionalCounter$Iterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) javax.security.auth.Subject$SecureSet$1.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.concurrent.CopyOnWriteArrayList$COWSubList.iterator()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) org.apache.commons.math3.fitting.GaussianCurveFitter$1.value(double,double[])
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) org.apache.commons.math3.analysis.function.Gaussian$Parametric.value(double,double[])
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) org.apache.commons.math3.analysis.function.Logistic$Parametric.value(double,double[])
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.Collections$UnmodifiableList$1.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.Collections$SynchronizedCollection.size()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) sun.nio.cs.FastCharsetProvider$1.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.concurrent.ArrayBlockingQueue$Itr.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.Collections$CheckedList$1.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.Vector$Itr.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.ArrayList$SubList$1.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.Collections$UnmodifiableCollection.iterator()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.HashMap$ValueIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) sun.misc.SoftCache$EntrySet$1.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.ArrayList$SubList$1.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.concurrent.CopyOnWriteArrayList$COWIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.concurrent.ConcurrentHashMap$HashIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.ArrayList$SubList.size()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.IdentityHashMap$IdentityHashMapIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.lang.ProcessEnvironment$StringEntrySet$1.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) sun.net.www.HeaderParser$ParserIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.concurrent.LinkedBlockingDeque$AbstractItr.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) sun.nio.cs.FastCharsetProvider$1.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) sun.nio.fs.AbstractPath$1.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.EnumMap$KeyIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) sun.security.jca.ProviderList$ServiceList.size()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.LinkedList$ListItr.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.Collections$EmptyIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.concurrent.CopyOnWriteArrayList.size()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.Scanner.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) javax.imageio.spi.FilterIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.Collections$CheckedCollection$1.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.ArrayDeque$DescendingIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.concurrent.ConcurrentHashMap$EntryIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) org.apache.commons.math3.util.CombinatoricsUtils$SingletonIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.LinkedHashMap$KeyIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.concurrent.LinkedBlockingQueue$Itr.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) org.apache.commons.math3.linear.RealVector$2$2.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.Collections$CheckedList$1.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.ArrayList.iterator()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) javax.imageio.ImageIO$ImageWriterIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.Collections$EmptyList.iterator()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.Collections$1.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) org.apache.commons.math3.util.CombinatoricsUtils$LexicographicCombinationIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.concurrent.LinkedBlockingDeque$AbstractItr.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.concurrent.ConcurrentLinkedQueue$Itr.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.ArrayDeque$DeqIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.LinkedHashMap$LinkedHashIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.concurrent.LinkedBlockingQueue$Itr.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.lang.ProcessEnvironment$StringEntrySet$1.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) sun.util.PreHashedMap$1$1.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) org.apache.commons.math3.optimization.fitting.WeightedObservedPoint.getX()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.lang.ProcessEnvironment$StringValues$1.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.WeakHashMap$EntryIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) javax.print.MimeType$ParameterMapEntrySetIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.AbstractMap$1$1.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) org.apache.commons.math3.optimization.fitting.CurveFitter.access$000(org.apache.commons.math3.optimization.fitting.CurveFitter)
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) sun.awt.util.IdentityLinkedList$DescendingIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.lang.ProcessEnvironment$StringKeySet$1.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.concurrent.CopyOnWriteArrayList$COWSubList.size()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) javax.imageio.ImageIO$ImageReaderIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.TreeMap$DescendingKeyIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) javax.imageio.ImageIO$ImageReaderIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.TreeMap$PrivateEntryIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) sun.misc.Service$LazyIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.Scanner.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.WeakHashMap$ValueIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) org.apache.commons.math3.linear.RealVector$SparseEntryIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.IdentityHashMap$EntryIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.Collections$CheckedCollection.iterator()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.PriorityQueue$Itr.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.Hashtable$Enumerator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.RegularEnumSet$EnumSetIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) javax.print.MimeType$ParameterMapEntrySetIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.WeakHashMap$KeyIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) sun.awt.util.IdentityLinkedList.size()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.Collections$CheckedMap$CheckedEntrySet$1.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) sun.security.jca.ProviderList$ServiceList.iterator()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.SubList$1.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.AbstractList.iterator()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.Collections$SynchronizedCollection.iterator()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.Collections$EmptyIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.LinkedHashMap$ValueIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.ServiceLoader$1.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.TreeMap$NavigableSubMap$SubMapEntryIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.TreeMap$ValueIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.Collections$EmptyList.size()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) org.apache.commons.math3.util.CombinatoricsUtils$LexicographicCombinationIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.AbstractMap$2$1.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.EnumMap$ValueIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.lang.ProcessEnvironment$StringValues$1.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) sun.nio.fs.AbstractPath$1.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) sun.security.jca.ProviderList$3.size()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.SubList.iterator()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.TreeMap$EntryIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) org.apache.commons.math3.linear.RealVector$1.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) org.apache.commons.math3.util.CombinatoricsUtils$SingletonIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) sun.awt.util.IdentityLinkedList$ListItr.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.EnumMap$EntryIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.Collections$UnmodifiableList$1.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) org.apache.commons.math3.linear.RealVector$2$1.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.ArrayList$Itr.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.nio.charset.Charset$1.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.Collections$UnmodifiableCollection$1.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) org.apache.commons.math3.optimization.fitting.GaussianFitter$1.value(double,double[])
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) com.sun.imageio.plugins.jpeg.ImageTypeIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.TreeMap$KeyIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.SubList$1.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.lang.ProcessEnvironment$StringKeySet$1.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.Collections$UnmodifiableCollection$1.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.RegularEnumSet$EnumSetIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) sun.misc.SoftCache$EntrySet$1.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.HashMap$KeyIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) sun.security.jca.ProviderList$ServiceList$1.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.Collections$SingletonList.size()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.PriorityQueue$Itr.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.Collections$1.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.ArrayList$Itr.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.EnumMap$EnumMapIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) org.apache.commons.math3.analysis.function.Sigmoid$Parametric.value(double,double[])
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.AbstractMap$2$1.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.ServiceLoader$1.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) javax.imageio.ImageIO$ImageTranscoderIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) sun.security.jca.ProviderList$ServiceList$1.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.ServiceLoader$LazyIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.Vector$Itr.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.ArrayDeque$DeqIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.lang.Object.clinit()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.Vector.size()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) org.apache.commons.math3.analysis.function.HarmonicOscillator$Parametric.value(double,double[])
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.Collections$CheckedCollection$1.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.AbstractList$Itr.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) sun.misc.Service$LazyIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.nio.charset.Charset$1.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.ArrayList.size()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.concurrent.ConcurrentLinkedQueue$Itr.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) sun.net.www.MessageHeader$HeaderIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) sun.nio.fs.UnixFileSystem$FileStoreIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) sun.awt.util.IdentityLinkedList$DescendingIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) sun.awt.util.IdentityLinkedList$ListItr.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) javax.imageio.spi.PartialOrderIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.Vector.iterator()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.TreeMap$NavigableSubMap$SubMapIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.concurrent.CopyOnWriteArrayList.iterator()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) javax.imageio.ImageIO$ImageTranscoderIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.AbstractList$Itr.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) java.util.HashMap$HashIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]) org.apache.commons.math3.linear.RealVector$2$1.hasNext()
org.apache.commons.math3.fraction.BigFraction.reduce() org.apache.commons.math3.fraction.BigFraction(java.math.BigInteger,java.math.BigInteger)
org.apache.commons.math3.fraction.BigFraction.reduce() java.lang.Object.clinit()
org.apache.commons.math3.fraction.BigFraction.reduce() org.apache.commons.math3.fraction.BigFraction.clinit()
org.apache.commons.math3.fraction.BigFraction.reduce() java.math.BigInteger.divide(java.math.BigInteger)
org.apache.commons.math3.fraction.BigFraction.reduce() java.math.BigInteger.gcd(java.math.BigInteger)
org.apache.commons.math3.fitting.GaussianCurveFitter$1.value(double,double[]) org.apache.commons.math3.analysis.function.Gaussian$Parametric.value(double,double[])
org.apache.commons.math3.exception.MathUnsupportedOperationException() java.lang.Object.clinit()
org.apache.commons.math3.exception.MathUnsupportedOperationException() org.apache.commons.math3.exception.MathUnsupportedOperationException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])
org.apache.commons.math3.exception.MathUnsupportedOperationException() org.apache.commons.math3.exception.util.LocalizedFormats.clinit()
org.apache.commons.math3.util.MultidimensionalCounter$Iterator.remove() java.lang.Object.clinit()
org.apache.commons.math3.util.MultidimensionalCounter$Iterator.remove() java.lang.UnsupportedOperationException()
org.apache.commons.math3.util.MultidimensionalCounter$Iterator.remove() java.lang.Throwable.clinit()
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.function.Sqrt.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.function.Ulp.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.function.Acos.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$5.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$2.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.function.Asin.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.function.Rint.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.function.Gaussian.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.function.Atan2.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.function.Tan.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.ode.events.EventState$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.function.Sinc.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.FunctionUtils$7.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.function.Sin.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.function.Log1p.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.function.Identity.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.function.Divide.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.FunctionUtils$3.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.function.Signum.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.distribution.AbstractRealDistribution$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.function.Exp.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.function.Max.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.function.Logit.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.function.Acosh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.FunctionUtils$2.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.function.Multiply.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.function.Log10.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.FunctionUtils$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.FunctionUtils$12.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.FunctionUtils$8.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.function.Constant.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.function.Atan.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.function.Logistic.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.function.Sinh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.function.Cosh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.function.Floor.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.function.Expm1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.function.Power.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$4.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.function.Cbrt.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.optimization.direct.PowellOptimizer$LineSearch$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.function.HarmonicOscillator.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.function.Asinh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.FunctionUtils$4.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.FunctionUtils$6.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.function.StepFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.function.Minus.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.FunctionUtils$13.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.function.Tanh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.FunctionUtils$9.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.function.Subtract.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.function.Cos.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.function.Atanh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.FunctionUtils$10.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.function.Add.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.function.Pow.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.function.Log.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.function.Sigmoid.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.function.Inverse.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$1.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.function.Min.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.FunctionUtils$5.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$3.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.function.Abs.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.FunctionUtils$15.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.function.Ceil.value(double)
org.apache.commons.math3.analysis.FunctionUtils$11.value(double[]) org.apache.commons.math3.analysis.FunctionUtils$14.value(double)
org.apache.commons.math3.util.MathArrays.checkOrder(double[]) java.lang.Object.clinit()
org.apache.commons.math3.util.MathArrays.checkOrder(double[]) org.apache.commons.math3.util.MathArrays$OrderDirection.clinit()
org.apache.commons.math3.util.MathArrays.checkOrder(double[]) org.apache.commons.math3.util.MathArrays.checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) sun.util.PreHashedMap$1$1.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) javax.security.auth.Subject$SecureSet$1.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) org.apache.commons.math3.linear.RealVector$SparseEntryIterator.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.Collections$SingletonList.iterator()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.concurrent.CopyOnWriteArrayList$COWIterator.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) sun.net.www.MessageHeader$HeaderIterator.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) sun.util.PreHashedMap$2$1.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) org.apache.commons.math3.util.MultidimensionalCounter$Iterator.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) sun.net.www.HeaderParser$ParserIterator.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.concurrent.ArrayBlockingQueue$Itr.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) javax.imageio.ImageIO$ImageWriterIterator.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.AbstractSequentialList.iterator()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.JumboEnumSet$EnumSetIterator.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.LinkedList$ListItr.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.ServiceLoader$LazyIterator.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) sun.nio.fs.UnixFileSystem$FileStoreIterator.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.concurrent.DelayQueue$Itr.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) javax.imageio.spi.PartialOrderIterator.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.TreeMap$NavigableSubMap$SubMapKeyIterator.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.concurrent.ConcurrentHashMap$ValueIterator.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.LinkedList$DescendingIterator.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.JumboEnumSet$EnumSetIterator.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.concurrent.ConcurrentHashMap$KeyIterator.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.concurrent.DelayQueue$Itr.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.LinkedList$DescendingIterator.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) sun.util.PreHashedMap$2$1.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.WeakHashMap$HashIterator.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.IdentityHashMap$KeyIterator.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.LinkedHashMap$EntryIterator.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.IdentityHashMap$ValueIterator.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.ArrayList$SubList.iterator()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) org.apache.commons.math3.ode.EquationsMapper.insertEquationData(double[],double[])
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.AbstractMap$1$1.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) org.apache.commons.math3.linear.RealVector$2$2.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) com.sun.imageio.plugins.jpeg.ImageTypeIterator.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) javax.imageio.spi.FilterIterator.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.ArrayDeque$DescendingIterator.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.Hashtable$Enumerator.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) org.apache.commons.math3.linear.RealVector$1.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.HashMap$EntryIterator.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.Collections$CheckedMap$CheckedEntrySet$1.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) org.apache.commons.math3.util.MultidimensionalCounter$Iterator.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) javax.security.auth.Subject$SecureSet$1.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.concurrent.CopyOnWriteArrayList$COWSubList.iterator()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.Collections$UnmodifiableList$1.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) sun.nio.cs.FastCharsetProvider$1.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.concurrent.ArrayBlockingQueue$Itr.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.Collections$CheckedList$1.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.Vector$Itr.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.ArrayList$SubList$1.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.Collections$UnmodifiableCollection.iterator()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.HashMap$ValueIterator.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) sun.misc.SoftCache$EntrySet$1.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.ArrayList$SubList$1.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.concurrent.CopyOnWriteArrayList$COWIterator.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.concurrent.ConcurrentHashMap$HashIterator.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.IdentityHashMap$IdentityHashMapIterator.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.lang.ProcessEnvironment$StringEntrySet$1.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) sun.net.www.HeaderParser$ParserIterator.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.concurrent.LinkedBlockingDeque$AbstractItr.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) sun.nio.cs.FastCharsetProvider$1.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) sun.nio.fs.AbstractPath$1.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.EnumMap$KeyIterator.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.LinkedList$ListItr.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.Collections$EmptyIterator.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) org.apache.commons.math3.ode.EquationsMapper.extractEquationData(double[],double[])
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.Scanner.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) javax.imageio.spi.FilterIterator.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.Collections$CheckedCollection$1.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.ArrayDeque$DescendingIterator.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.concurrent.ConcurrentHashMap$EntryIterator.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) org.apache.commons.math3.util.CombinatoricsUtils$SingletonIterator.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.LinkedHashMap$KeyIterator.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.concurrent.LinkedBlockingQueue$Itr.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) org.apache.commons.math3.linear.RealVector$2$2.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.Collections$CheckedList$1.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.ArrayList.iterator()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) javax.imageio.ImageIO$ImageWriterIterator.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent.access$000(org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent)
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.Collections$EmptyList.iterator()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.Collections$1.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) org.apache.commons.math3.util.CombinatoricsUtils$LexicographicCombinationIterator.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.concurrent.LinkedBlockingDeque$AbstractItr.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.concurrent.ConcurrentLinkedQueue$Itr.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.ArrayDeque$DeqIterator.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.LinkedHashMap$LinkedHashIterator.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.concurrent.LinkedBlockingQueue$Itr.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.lang.ProcessEnvironment$StringEntrySet$1.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) sun.util.PreHashedMap$1$1.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.lang.ProcessEnvironment$StringValues$1.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.WeakHashMap$EntryIterator.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) javax.print.MimeType$ParameterMapEntrySetIterator.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) org.apache.commons.math3.ode.MultistepIntegrator$1.computeDerivatives(double,double[],double[])
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.AbstractMap$1$1.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent.access$300(org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent)
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) sun.awt.util.IdentityLinkedList$DescendingIterator.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.lang.ProcessEnvironment$StringKeySet$1.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) javax.imageio.ImageIO$ImageReaderIterator.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.TreeMap$DescendingKeyIterator.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.TreeMap$PrivateEntryIterator.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) javax.imageio.ImageIO$ImageReaderIterator.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) sun.misc.Service$LazyIterator.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.Scanner.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.WeakHashMap$ValueIterator.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) org.apache.commons.math3.linear.RealVector$SparseEntryIterator.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.IdentityHashMap$EntryIterator.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) org.apache.commons.math3.ode.JacobianMatrices$MainStateJacobianWrapper.computeDerivatives(double,double[],double[])
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.Collections$CheckedCollection.iterator()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.PriorityQueue$Itr.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.Hashtable$Enumerator.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.RegularEnumSet$EnumSetIterator.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) javax.print.MimeType$ParameterMapEntrySetIterator.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.WeakHashMap$KeyIterator.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.Collections$CheckedMap$CheckedEntrySet$1.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) sun.security.jca.ProviderList$ServiceList.iterator()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.SubList$1.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.AbstractList.iterator()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.Collections$SynchronizedCollection.iterator()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.Collections$EmptyIterator.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.LinkedHashMap$ValueIterator.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.ServiceLoader$1.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.TreeMap$ValueIterator.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.TreeMap$NavigableSubMap$SubMapEntryIterator.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) org.apache.commons.math3.util.CombinatoricsUtils$LexicographicCombinationIterator.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.AbstractMap$2$1.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.EnumMap$ValueIterator.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.lang.ProcessEnvironment$StringValues$1.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) sun.nio.fs.AbstractPath$1.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) org.apache.commons.math3.ode.FirstOrderConverter.computeDerivatives(double,double[],double[])
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.SubList.iterator()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.TreeMap$EntryIterator.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) org.apache.commons.math3.linear.RealVector$1.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) org.apache.commons.math3.util.CombinatoricsUtils$SingletonIterator.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) sun.awt.util.IdentityLinkedList$ListItr.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.EnumMap$EntryIterator.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.Collections$UnmodifiableList$1.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) org.apache.commons.math3.linear.RealVector$2$1.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.ArrayList$Itr.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.nio.charset.Charset$1.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.Collections$UnmodifiableCollection$1.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) com.sun.imageio.plugins.jpeg.ImageTypeIterator.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[])
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.TreeMap$KeyIterator.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.SubList$1.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.lang.ProcessEnvironment$StringKeySet$1.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.Collections$UnmodifiableCollection$1.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.RegularEnumSet$EnumSetIterator.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) sun.misc.SoftCache$EntrySet$1.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.HashMap$KeyIterator.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) sun.security.jca.ProviderList$ServiceList$1.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.PriorityQueue$Itr.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.Collections$1.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.ArrayList$Itr.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.EnumMap$EnumMapIterator.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.AbstractMap$2$1.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.ServiceLoader$1.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) javax.imageio.ImageIO$ImageTranscoderIterator.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) sun.security.jca.ProviderList$ServiceList$1.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.ServiceLoader$LazyIterator.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.Vector$Itr.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.ArrayDeque$DeqIterator.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.lang.Object.clinit()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent.access$100(org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent)
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.Collections$CheckedCollection$1.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.AbstractList$Itr.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) sun.misc.Service$LazyIterator.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.nio.charset.Charset$1.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) sun.net.www.MessageHeader$HeaderIterator.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.concurrent.ConcurrentLinkedQueue$Itr.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) sun.nio.fs.UnixFileSystem$FileStoreIterator.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) sun.awt.util.IdentityLinkedList$DescendingIterator.next()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) sun.awt.util.IdentityLinkedList$ListItr.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) javax.imageio.spi.PartialOrderIterator.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.Vector.iterator()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.TreeMap$NavigableSubMap$SubMapIterator.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) javax.imageio.ImageIO$ImageTranscoderIterator.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.concurrent.CopyOnWriteArrayList.iterator()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent.access$200(org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent)
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.HashMap$HashIterator.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) java.util.AbstractList$Itr.hasNext()
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[]) org.apache.commons.math3.linear.RealVector$2$1.hasNext()
org.apache.commons.math3.util.CompositeFormat.getDefaultNumberFormat() org.apache.commons.math3.util.CompositeFormat.getDefaultNumberFormat(java.util.Locale)
org.apache.commons.math3.util.CompositeFormat.getDefaultNumberFormat() java.lang.Object.clinit()
org.apache.commons.math3.util.CompositeFormat.getDefaultNumberFormat() java.util.Locale.clinit()
org.apache.commons.math3.util.CompositeFormat.getDefaultNumberFormat() java.util.Locale.getDefault()
org.apache.commons.math3.optimization.BaseMultivariateVectorMultiStartOptimizer$1.weightedResidual(org.apache.commons.math3.optimization.PointVectorValuePair) org.apache.commons.math3.optimization.PointVectorValuePair.getValueRef()
org.apache.commons.math3.random.EmpiricalDistribution.cumulativeProbability(double) org.apache.commons.math3.distribution.CauchyDistribution.cumulativeProbability(double)
org.apache.commons.math3.random.EmpiricalDistribution.cumulativeProbability(double) org.apache.commons.math3.distribution.ChiSquaredDistribution.cumulativeProbability(double)
org.apache.commons.math3.random.EmpiricalDistribution.cumulativeProbability(double) org.apache.commons.math3.distribution.NormalDistribution.cumulativeProbability(double)
org.apache.commons.math3.random.EmpiricalDistribution.cumulativeProbability(double) org.apache.commons.math3.distribution.TDistribution.cumulativeProbability(double)
org.apache.commons.math3.random.EmpiricalDistribution.cumulativeProbability(double) org.apache.commons.math3.distribution.WeibullDistribution.cumulativeProbability(double)
org.apache.commons.math3.random.EmpiricalDistribution.cumulativeProbability(double) org.apache.commons.math3.random.EmpiricalDistribution.findBin(double)
org.apache.commons.math3.random.EmpiricalDistribution.cumulativeProbability(double) org.apache.commons.math3.random.EmpiricalDistribution.getUpperBounds()
org.apache.commons.math3.random.EmpiricalDistribution.cumulativeProbability(double) org.apache.commons.math3.random.EmpiricalDistribution.pB(int)
org.apache.commons.math3.random.EmpiricalDistribution.cumulativeProbability(double) org.apache.commons.math3.random.EmpiricalDistribution.k(double)
org.apache.commons.math3.random.EmpiricalDistribution.cumulativeProbability(double) org.apache.commons.math3.distribution.ExponentialDistribution.cumulativeProbability(double)
org.apache.commons.math3.random.EmpiricalDistribution.cumulativeProbability(double) org.apache.commons.math3.distribution.BetaDistribution.cumulativeProbability(double)
org.apache.commons.math3.random.EmpiricalDistribution.cumulativeProbability(double) org.apache.commons.math3.distribution.ParetoDistribution.cumulativeProbability(double)
org.apache.commons.math3.random.EmpiricalDistribution.cumulativeProbability(double) org.apache.commons.math3.distribution.LevyDistribution.cumulativeProbability(double)
org.apache.commons.math3.random.EmpiricalDistribution.cumulativeProbability(double) org.apache.commons.math3.distribution.TriangularDistribution.cumulativeProbability(double)
org.apache.commons.math3.random.EmpiricalDistribution.cumulativeProbability(double) org.apache.commons.math3.random.EmpiricalDistribution.pBminus(int)
org.apache.commons.math3.random.EmpiricalDistribution.cumulativeProbability(double) org.apache.commons.math3.distribution.LogNormalDistribution.cumulativeProbability(double)
org.apache.commons.math3.random.EmpiricalDistribution.cumulativeProbability(double) org.apache.commons.math3.distribution.GammaDistribution.cumulativeProbability(double)
org.apache.commons.math3.random.EmpiricalDistribution.cumulativeProbability(double) org.apache.commons.math3.random.EmpiricalDistribution.kB(int)
org.apache.commons.math3.random.EmpiricalDistribution.cumulativeProbability(double) org.apache.commons.math3.distribution.UniformRealDistribution.cumulativeProbability(double)
org.apache.commons.math3.random.EmpiricalDistribution.cumulativeProbability(double) org.apache.commons.math3.distribution.FDistribution.cumulativeProbability(double)
org.apache.commons.math3.random.EmpiricalDistribution.cumulativeProbability(double) org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(double)
org.apache.commons.math3.random.EmpiricalDistribution.cumulativeProbability(double) org.apache.commons.math3.random.EmpiricalDistribution.cumulativeProbability(double)
org.apache.commons.math3.analysis.FunctionUtils$14.value(double) org.apache.commons.math3.analysis.function.Logistic.value(double)
org.apache.commons.math3.analysis.FunctionUtils$14.value(double) org.apache.commons.math3.analysis.function.Sinh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$14.value(double) org.apache.commons.math3.analysis.function.Acos.value(double)
org.apache.commons.math3.analysis.FunctionUtils$14.value(double) org.apache.commons.math3.analysis.function.Cosh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$14.value(double) org.apache.commons.math3.analysis.function.Sqrt.value(double)
org.apache.commons.math3.analysis.FunctionUtils$14.value(double) org.apache.commons.math3.analysis.function.Expm1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$14.value(double) org.apache.commons.math3.analysis.function.Power.value(double)
org.apache.commons.math3.analysis.FunctionUtils$14.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$14.value(double) org.apache.commons.math3.analysis.function.Asin.value(double)
org.apache.commons.math3.analysis.FunctionUtils$14.value(double) org.apache.commons.math3.analysis.function.Gaussian.value(double)
org.apache.commons.math3.analysis.FunctionUtils$14.value(double) org.apache.commons.math3.analysis.function.Cbrt.value(double)
org.apache.commons.math3.analysis.FunctionUtils$14.value(double) org.apache.commons.math3.analysis.function.Tan.value(double)
org.apache.commons.math3.analysis.FunctionUtils$14.value(double) org.apache.commons.math3.analysis.function.HarmonicOscillator.value(double)
org.apache.commons.math3.analysis.FunctionUtils$14.value(double) org.apache.commons.math3.analysis.function.Asinh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$14.value(double) org.apache.commons.math3.analysis.function.Minus.value(double)
org.apache.commons.math3.analysis.FunctionUtils$14.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$14.value(double) org.apache.commons.math3.analysis.function.Tanh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$14.value(double) org.apache.commons.math3.analysis.function.Sinc.value(double)
org.apache.commons.math3.analysis.FunctionUtils$14.value(double) org.apache.commons.math3.analysis.function.Log1p.value(double)
org.apache.commons.math3.analysis.FunctionUtils$14.value(double) org.apache.commons.math3.analysis.function.Sin.value(double)
org.apache.commons.math3.analysis.FunctionUtils$14.value(double) org.apache.commons.math3.analysis.function.Atanh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$14.value(double) org.apache.commons.math3.analysis.function.Cos.value(double)
org.apache.commons.math3.analysis.FunctionUtils$14.value(double) org.apache.commons.math3.analysis.function.Identity.value(double)
org.apache.commons.math3.analysis.FunctionUtils$14.value(double) org.apache.commons.math3.analysis.function.Log.value(double)
org.apache.commons.math3.analysis.FunctionUtils$14.value(double) org.apache.commons.math3.analysis.function.Exp.value(double)
org.apache.commons.math3.analysis.FunctionUtils$14.value(double) org.apache.commons.math3.analysis.function.Sigmoid.value(double)
org.apache.commons.math3.analysis.FunctionUtils$14.value(double) org.apache.commons.math3.analysis.function.Logit.value(double)
org.apache.commons.math3.analysis.FunctionUtils$14.value(double) org.apache.commons.math3.analysis.function.Acosh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$14.value(double) org.apache.commons.math3.analysis.function.Inverse.value(double)
org.apache.commons.math3.analysis.FunctionUtils$14.value(double) org.apache.commons.math3.analysis.FunctionUtils$2.value(double)
org.apache.commons.math3.analysis.FunctionUtils$14.value(double) org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$14.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.value(double)
org.apache.commons.math3.analysis.FunctionUtils$14.value(double) org.apache.commons.math3.analysis.FunctionUtils$5.value(double)
org.apache.commons.math3.analysis.FunctionUtils$14.value(double) org.apache.commons.math3.analysis.function.Log10.value(double)
org.apache.commons.math3.analysis.FunctionUtils$14.value(double) org.apache.commons.math3.analysis.FunctionUtils$15.value(double)
org.apache.commons.math3.analysis.FunctionUtils$14.value(double) org.apache.commons.math3.analysis.FunctionUtils$8.value(double)
org.apache.commons.math3.analysis.FunctionUtils$14.value(double) org.apache.commons.math3.analysis.function.Atan.value(double)
org.apache.commons.math3.analysis.FunctionUtils$14.value(double) org.apache.commons.math3.analysis.function.Constant.value(double)
org.apache.commons.math3.analysis.function.Abs.value(double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Abs.value(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.function.Abs.value(double) org.apache.commons.math3.util.FastMath.abs(double)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.hashCode() java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.hashCode() org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getOrder()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.hashCode() org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getFreeParameters()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.hashCode() org.apache.commons.math3.util.MathUtils.hash(double[])
org.apache.commons.math3.random.BitsStreamGenerator.nextBoolean() org.apache.commons.math3.random.Well512a.next(int)
org.apache.commons.math3.random.BitsStreamGenerator.nextBoolean() org.apache.commons.math3.random.ISAACRandom.next(int)
org.apache.commons.math3.random.BitsStreamGenerator.nextBoolean() org.apache.commons.math3.random.Well1024a.next(int)
org.apache.commons.math3.random.BitsStreamGenerator.nextBoolean() org.apache.commons.math3.random.Well44497b.next(int)
org.apache.commons.math3.random.BitsStreamGenerator.nextBoolean() org.apache.commons.math3.random.Well19937c.next(int)
org.apache.commons.math3.random.BitsStreamGenerator.nextBoolean() org.apache.commons.math3.random.MersenneTwister.next(int)
org.apache.commons.math3.random.BitsStreamGenerator.nextBoolean() org.apache.commons.math3.random.Well44497a.next(int)
org.apache.commons.math3.random.BitsStreamGenerator.nextBoolean() org.apache.commons.math3.random.Well19937a.next(int)
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$FacetsContributionVisitor(org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet) java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$FacetsContributionVisitor(org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet) org.apache.commons.math3.geometry.euclidean.threed.Vector3D.clinit()
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$FacetsContributionVisitor(org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet) org.apache.commons.math3.geometry.euclidean.threed.Vector3D(double,double,double)
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$FacetsContributionVisitor(org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet) org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.access$100(org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet,org.apache.commons.math3.geometry.Vector)
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$FacetsContributionVisitor(org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet) java.lang.Object()
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$FacetsContributionVisitor(org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet) org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.access$000(org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet,double)
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) sun.text.CompactByteArray.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.awt.geom.AffineTransform.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.exponent(long)
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.util.Hashtable.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) sun.security.krb5.internal.KerberosTime.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) sun.security.krb5.internal.Ticket.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) sun.text.IntHashtable.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) sun.security.util.BitArray.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.lang.Double.isInfinite(double)
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.util.SimpleTimeZone.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) com.sun.imageio.plugins.jpeg.DHTMarkerSegment$Htable.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.util.JapaneseImperialCalendar.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.util.IdentityHashMap.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) sun.security.krb5.internal.ETypeInfo.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) sun.text.normalizer.NormalizerBase.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.util.Locale.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) sun.security.krb5.internal.TicketFlags.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) sun.java2d.SunGraphics2D.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) sun.security.provider.MD4.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) javax.swing.tree.DefaultTreeSelectionModel.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.text.MessageFormat.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.awt.print.Paper.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.lang.Object.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) javax.swing.text.SimpleAttributeSet.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) javax.swing.ArrayTable.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.text.SimpleDateFormat.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) sun.java2d.loops.FontInfo.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) sun.security.krb5.PrincipalName.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.awt.PageAttributes.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) com.sun.imageio.plugins.png.PNGMetadata.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.util.GregorianCalendar.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) com.sun.imageio.plugins.jpeg.SOFMarkerSegment.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.util.Vector.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) javax.swing.text.ElementIterator.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.net.HttpCookie.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.awt.datatransfer.MimeType.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.encode(int)
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.awt.RenderingHints.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.text.DateFormatSymbols.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.util.HashSet.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) sun.util.calendar.ImmutableGregorianDate.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) javax.sound.midi.MetaMessage.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) sun.font.FontLineMetrics.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) sun.font.StandardGlyphVector.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.computeLSB(long)
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.text.AttributedString$AttributedStringIterator.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.text.RuleBasedBreakIterator.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) javax.swing.text.Segment.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.awt.ImageCapabilities.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) sun.security.krb5.internal.LastReqEntry.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) javax.swing.text.StyleContext$SmallAttributeSet.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.text.RuleBasedCollator.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.text.RuleBasedBreakIterator$SafeCharIterator.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) javax.swing.text.ElementIterator$StackItem.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$ICCMarkerSegment.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.lang.Object()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.awt.geom.Line2D.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.util.ResourceBundle$CacheKey.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumbJPEG.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) sun.security.krb5.internal.ETypeInfo2.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.awt.font.TextMeasurer.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.util.LinkedList.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) sun.font.AttributeValues.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) javax.swing.text.StyledEditorKit$1.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.util.ArrayDeque.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) javax.swing.text.GlyphView.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.awt.datatransfer.DataFlavor.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) sun.security.krb5.internal.PAData.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) javax.swing.AbstractAction.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) sun.text.normalizer.ReplaceableUCharacterIterator.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.util.concurrent.CopyOnWriteArrayList.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumb.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.awt.geom.Point2D.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) javax.swing.text.html.OptionListModel.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) sun.security.krb5.internal.AuthorizationDataEntry.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) javax.swing.text.EditorKit.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) javax.swing.text.StyledEditorKit.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) com.sun.imageio.plugins.jpeg.DQTMarkerSegment.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.util.JumboEnumSet.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) sun.security.krb5.internal.HostAddresses.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) javax.crypto.Mac.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) javax.naming.Reference.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) com.sun.imageio.plugins.jpeg.SOSMarkerSegment.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.util.jar.Manifest.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) sun.security.krb5.EncryptedData.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.text.NumberFormat.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) sun.net.ProgressSource.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.util.EnumSet.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) sun.net.www.protocol.http.AuthenticationInfo.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.awt.datatransfer.MimeTypeParameterList.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.lang.Double.doubleToLongBits(double)
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.util.regex.Pattern$CharPropertyNames$CloneableProperty.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.security.SignatureSpi.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) sun.security.x509.GeneralSubtrees.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.util.ArrayList.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) com.sun.imageio.plugins.jpeg.DHTMarkerSegment.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) javax.naming.CompositeName.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.awt.font.CharArrayIterator.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.lang.Double.isNaN(double)
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.security.Signature$Delegate.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.util.TreeSet.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.util.Hashtable$Entry.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.awt.image.ImageFilter.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) com.sun.imageio.plugins.jpeg.SOSMarkerSegment$ScanComponentSpec.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) org.apache.commons.math3.util.FastMath.min(int,int)
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.awt.geom.Path2D$Float.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) sun.security.krb5.EncryptionKey.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.text.DecimalFormat.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.awt.BufferCapabilities.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) org.apache.commons.math3.util.FastMath.max(int,int)
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.awt.image.Kernel.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.util.Date.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.awt.Insets.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) sun.net.www.MimeEntry.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) sun.util.calendar.CalendarDate.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.awt.print.PageFormat.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) com.sun.imageio.plugins.jpeg.SOFMarkerSegment$ComponentSpec.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.computeMSB(long)
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.util.EnumMap.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.lang.Double.clinit()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) sun.security.krb5.internal.AuthorizationData.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFExtensionMarkerSegment.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.awt.geom.QuadCurve2D.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) sun.security.krb5.internal.crypto.crc32.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.util.zip.ZipEntry.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.security.MessageDigest$Delegate.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) sun.util.calendar.ZoneInfo.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) sun.text.normalizer.CharacterIteratorWrapper.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.lang.Object.clinit()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.text.DecimalFormatSymbols.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.awt.font.TextLayout.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) javax.swing.DefaultListSelectionModel.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.text.DigitList.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) javax.print.attribute.EnumSyntax.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) javax.sound.midi.ShortMessage.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.awt.geom.CubicCurve2D.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.text.ChoiceFormat.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.lang.Thread.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) com.sun.imageio.plugins.jpeg.MarkerSegment.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.awt.image.renderable.RenderContext.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) sun.security.krb5.Realm.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) com.sun.imageio.plugins.jpeg.DQTMarkerSegment$Qtable.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.awt.JobAttributes.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) com.sun.imageio.plugins.jpeg.JPEGMetadata.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.text.StringCharacterIterator.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.awt.geom.Dimension2D.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) sun.security.x509.NameConstraintsExtension.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.awt.geom.Area.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.util.jar.Attributes.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) sun.security.krb5.internal.HostAddress.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.mantissa(long)
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.util.TreeMap.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.awt.geom.Path2D$Double.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.text.BreakIterator.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.util.BitSet.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.lang.Enum.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.util.AbstractMap.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) javax.swing.tree.DefaultMutableTreeNode.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.awt.geom.RectangularShape.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) java.util.HashMap.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) sun.security.provider.PolicyParser$GrantEntry.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.clone()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[]) javax.swing.text.html.HTMLEditorKit.clone()
org.apache.commons.math3.util.FastMath$ExpIntTable.access$100() java.lang.Object.clinit()
org.apache.commons.math3.util.FastMath$ExpIntTable.access$100() org.apache.commons.math3.util.FastMath$ExpIntTable.clinit()
org.apache.commons.math3.analysis.function.Ulp.value(double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Ulp.value(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.function.Ulp.value(double) org.apache.commons.math3.util.FastMath.ulp(double)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.add(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.add(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DSCompiler.add(double[],int,double[],int,double[],int)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.add(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.add(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DSCompiler.checkCompatibility(org.apache.commons.math3.analysis.differentiation.DSCompiler)
org.apache.commons.math3.fraction.BigFractionFormat.parse(java.lang.String,java.text.ParsePosition) org.apache.commons.math3.fraction.BigFraction(java.math.BigInteger,java.math.BigInteger)
org.apache.commons.math3.fraction.BigFractionFormat.parse(java.lang.String,java.text.ParsePosition) org.apache.commons.math3.fraction.BigFractionFormat.parse(java.lang.String,java.text.ParsePosition)
org.apache.commons.math3.fraction.BigFractionFormat.parse(java.lang.String,java.text.ParsePosition) org.apache.commons.math3.fraction.BigFraction.clinit()
org.apache.commons.math3.fraction.BigFractionFormat.parse(java.lang.String,java.text.ParsePosition) java.text.ParsePosition.setErrorIndex(int)
org.apache.commons.math3.fraction.BigFractionFormat.parse(java.lang.String,java.text.ParsePosition) org.apache.commons.math3.fraction.ProperBigFractionFormat.parse(java.lang.String,java.text.ParsePosition)
org.apache.commons.math3.fraction.BigFractionFormat.parse(java.lang.String,java.text.ParsePosition) java.text.NumberFormat.clinit()
org.apache.commons.math3.fraction.BigFractionFormat.parse(java.lang.String,java.text.ParsePosition) java.text.ParsePosition.setIndex(int)
org.apache.commons.math3.fraction.BigFractionFormat.parse(java.lang.String,java.text.ParsePosition) java.lang.Object.clinit()
org.apache.commons.math3.fraction.BigFractionFormat.parse(java.lang.String,java.text.ParsePosition) org.apache.commons.math3.fraction.BigFraction(java.math.BigInteger)
org.apache.commons.math3.fraction.BigFractionFormat.parse(java.lang.String,java.text.ParsePosition) org.apache.commons.math3.fraction.BigFractionFormat.parseNextBigInteger(java.lang.String,java.text.ParsePosition)
org.apache.commons.math3.fraction.BigFractionFormat.parse(java.lang.String,java.text.ParsePosition) java.text.ParsePosition.getIndex()
org.apache.commons.math3.fraction.BigFractionFormat.parse(java.lang.String,java.text.ParsePosition) org.apache.commons.math3.fraction.AbstractFormat.parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition)
org.apache.commons.math3.fraction.BigFractionFormat.parse(java.lang.String,java.text.ParsePosition) org.apache.commons.math3.fraction.AbstractFormat.parseNextCharacter(java.lang.String,java.text.ParsePosition)
org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator.readExternal(java.io.ObjectInput) java.io.ObjectInputStream.readInt()
org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator.readExternal(java.io.ObjectInput) java.io.ObjectInputStream.readDouble()
org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator.readExternal(java.io.ObjectInput) org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator.readExternal(java.io.ObjectInput)
org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.isEmpty() org.apache.commons.math3.geometry.partitioning.AbstractRegion.isEmpty()
org.apache.commons.math3.dfp.Dfp.getOne() org.apache.commons.math3.dfp.DfpField.getOne()
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.unboundedToBounded(double[]) org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$NoBoundsMapper.unboundedToBounded(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.unboundedToBounded(double[]) org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.unboundedToBounded(double[]) org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$UpperBoundMapper.unboundedToBounded(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.unboundedToBounded(double[]) org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerBoundMapper.unboundedToBounded(double)
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.distance(org.apache.commons.math3.geometry.Vector) java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.distance(org.apache.commons.math3.geometry.Vector) org.apache.commons.math3.util.FastMath.sqrt(double)
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.distance(org.apache.commons.math3.geometry.Vector) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getVariance() org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics.apply(org.apache.commons.math3.stat.descriptive.UnivariateStatistic)
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getVariance() org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.apply(org.apache.commons.math3.stat.descriptive.UnivariateStatistic)
org.apache.commons.math3.analysis.function.Sinc.value(double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Sinc.value(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.function.Sinc.value(double) org.apache.commons.math3.util.FastMath.sin(double)
org.apache.commons.math3.analysis.function.Sinc.value(double) org.apache.commons.math3.util.FastMath.abs(double)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.multiply(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.multiply(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DSCompiler.multiply(double[],int,double[],int,double[],int)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.multiply(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DSCompiler.checkCompatibility(org.apache.commons.math3.analysis.differentiation.DSCompiler)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.multiply(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DSCompiler)
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.incrementAll(double[],int,int) org.apache.commons.math3.stat.descriptive.moment.Skewness.increment(double)
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.incrementAll(double[],int,int) org.apache.commons.math3.stat.descriptive.moment.Kurtosis.increment(double)
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.incrementAll(double[],int,int) org.apache.commons.math3.stat.descriptive.moment.SecondMoment.increment(double)
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.incrementAll(double[],int,int) org.apache.commons.math3.stat.descriptive.summary.Sum.increment(double)
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.incrementAll(double[],int,int) org.apache.commons.math3.stat.descriptive.moment.GeometricMean.increment(double)
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.incrementAll(double[],int,int) org.apache.commons.math3.stat.descriptive.summary.SumOfSquares.increment(double)
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.incrementAll(double[],int,int) org.apache.commons.math3.stat.descriptive.moment.FourthMoment.increment(double)
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.incrementAll(double[],int,int) org.apache.commons.math3.stat.descriptive.rank.Max.increment(double)
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.incrementAll(double[],int,int) org.apache.commons.math3.stat.descriptive.summary.SumOfLogs.increment(double)
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.incrementAll(double[],int,int) org.apache.commons.math3.stat.descriptive.moment.Variance.increment(double)
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.incrementAll(double[],int,int) org.apache.commons.math3.stat.descriptive.rank.Min.increment(double)
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.incrementAll(double[],int,int) org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.increment(double)
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.incrementAll(double[],int,int) org.apache.commons.math3.stat.descriptive.summary.Product.increment(double)
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.incrementAll(double[],int,int) org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.test(double[],int,int)
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.incrementAll(double[],int,int) org.apache.commons.math3.stat.descriptive.moment.Mean.increment(double)
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.incrementAll(double[],int,int) org.apache.commons.math3.stat.descriptive.moment.ThirdMoment.increment(double)
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.incrementAll(double[],int,int) org.apache.commons.math3.stat.descriptive.moment.FirstMoment.increment(double)
org.apache.commons.math3.util.OpenIntToDoubleHashMap.iterator() java.lang.Object.clinit()
org.apache.commons.math3.util.OpenIntToDoubleHashMap.iterator() org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator(org.apache.commons.math3.util.OpenIntToDoubleHashMap,org.apache.commons.math3.util.OpenIntToDoubleHashMap$1)
org.apache.commons.math3.util.ArithmeticUtils.gcd(int,int) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.util.ArithmeticUtils.gcd(int,int) java.lang.Object.clinit()
org.apache.commons.math3.util.ArithmeticUtils.gcd(int,int) org.apache.commons.math3.util.ArithmeticUtils.gcdPositive(int,int)
org.apache.commons.math3.util.ArithmeticUtils.gcd(int,int) java.lang.Integer.clinit()
org.apache.commons.math3.util.ArithmeticUtils.gcd(int,int) java.lang.Throwable.clinit()
org.apache.commons.math3.util.ArithmeticUtils.gcd(int,int) org.apache.commons.math3.exception.MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])
org.apache.commons.math3.util.ArithmeticUtils.gcd(int,int) org.apache.commons.math3.util.FastMath.abs(int)
org.apache.commons.math3.util.ArithmeticUtils.gcd(int,int) org.apache.commons.math3.exception.util.LocalizedFormats.clinit()
org.apache.commons.math3.util.ArithmeticUtils.gcd(int,int) java.lang.Integer.valueOf(int)
org.apache.commons.math3.fraction.BigFraction.floatValue() org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.fraction.BigFraction.floatValue() java.lang.Object.clinit()
org.apache.commons.math3.fraction.BigFraction.floatValue() java.lang.Double.isNaN(double)
org.apache.commons.math3.fraction.BigFraction.floatValue() java.math.BigInteger.shiftRight(int)
org.apache.commons.math3.fraction.BigFraction.floatValue() java.math.BigInteger.bitLength()
org.apache.commons.math3.fraction.BigFraction.floatValue() org.apache.commons.math3.util.FastMath.getExponent(float)
org.apache.commons.math3.fraction.BigFraction.floatValue() java.lang.Math.clinit()
org.apache.commons.math3.fraction.BigFraction.floatValue() java.lang.Double.clinit()
org.apache.commons.math3.fraction.BigFraction.floatValue() java.math.BigInteger.floatValue()
org.apache.commons.math3.fraction.BigFraction.floatValue() java.lang.Math.max(int,int)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ComparableSegment(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Line) java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ComparableSegment(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Line) org.apache.commons.math3.geometry.euclidean.twod.Vector2D.getX()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ComparableSegment(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Line) org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple(double[])
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ComparableSegment(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Line) org.apache.commons.math3.geometry.euclidean.twod.Segment(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Line)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ComparableSegment(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Line) org.apache.commons.math3.geometry.euclidean.twod.Vector2D.getY()
org.apache.commons.math3.linear.AbstractFieldMatrix.equals(java.lang.Object) org.apache.commons.math3.fraction.BigFraction.equals(java.lang.Object)
org.apache.commons.math3.linear.AbstractFieldMatrix.equals(java.lang.Object) org.apache.commons.math3.util.Decimal64.equals(java.lang.Object)
org.apache.commons.math3.linear.AbstractFieldMatrix.equals(java.lang.Object) org.apache.commons.math3.dfp.Dfp.equals(java.lang.Object)
org.apache.commons.math3.linear.AbstractFieldMatrix.equals(java.lang.Object) org.apache.commons.math3.linear.Array2DRowFieldMatrix.getRowDimension()
org.apache.commons.math3.linear.AbstractFieldMatrix.equals(java.lang.Object) org.apache.commons.math3.linear.BlockFieldMatrix.getRowDimension()
org.apache.commons.math3.linear.AbstractFieldMatrix.equals(java.lang.Object) org.apache.commons.math3.linear.Array2DRowFieldMatrix.getColumnDimension()
org.apache.commons.math3.linear.AbstractFieldMatrix.equals(java.lang.Object) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.equals(java.lang.Object)
org.apache.commons.math3.linear.AbstractFieldMatrix.equals(java.lang.Object) org.apache.commons.math3.linear.BlockFieldMatrix.getColumnDimension()
org.apache.commons.math3.linear.AbstractFieldMatrix.equals(java.lang.Object) org.apache.commons.math3.linear.SparseFieldMatrix.getEntry(int,int)
org.apache.commons.math3.linear.AbstractFieldMatrix.equals(java.lang.Object) org.apache.commons.math3.linear.BlockFieldMatrix.getEntry(int,int)
org.apache.commons.math3.linear.AbstractFieldMatrix.equals(java.lang.Object) org.apache.commons.math3.linear.SparseFieldMatrix.getColumnDimension()
org.apache.commons.math3.linear.AbstractFieldMatrix.equals(java.lang.Object) org.apache.commons.math3.fraction.Fraction.equals(java.lang.Object)
org.apache.commons.math3.linear.AbstractFieldMatrix.equals(java.lang.Object) java.lang.Object.equals(java.lang.Object)
org.apache.commons.math3.linear.AbstractFieldMatrix.equals(java.lang.Object) org.apache.commons.math3.linear.SparseFieldMatrix.getRowDimension()
org.apache.commons.math3.linear.AbstractFieldMatrix.equals(java.lang.Object) org.apache.commons.math3.complex.Complex.equals(java.lang.Object)
org.apache.commons.math3.linear.AbstractFieldMatrix.equals(java.lang.Object) org.apache.commons.math3.linear.Array2DRowFieldMatrix.getEntry(int,int)
org.apache.commons.math3.linear.AbstractFieldMatrix.equals(java.lang.Object) org.apache.commons.math3.util.BigReal.equals(java.lang.Object)
org.apache.commons.math3.exception.NumberIsTooLargeException(java.lang.Number,java.lang.Number,boolean) java.lang.Object.clinit()
org.apache.commons.math3.exception.NumberIsTooLargeException(java.lang.Number,java.lang.Number,boolean) org.apache.commons.math3.exception.util.LocalizedFormats.clinit()
org.apache.commons.math3.exception.NumberIsTooLargeException(java.lang.Number,java.lang.Number,boolean) org.apache.commons.math3.exception.NumberIsTooLargeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)
org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.copySelf() org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.copySelf()
org.apache.commons.math3.geometry.euclidean.threed.Plane.toSpace(org.apache.commons.math3.geometry.Vector) org.apache.commons.math3.geometry.euclidean.threed.Vector3D(double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
org.apache.commons.math3.geometry.euclidean.threed.Plane.toSpace(org.apache.commons.math3.geometry.Vector) java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.threed.Plane.toSpace(org.apache.commons.math3.geometry.Vector) org.apache.commons.math3.geometry.euclidean.twod.Vector2D.getX()
org.apache.commons.math3.geometry.euclidean.threed.Plane.toSpace(org.apache.commons.math3.geometry.Vector) org.apache.commons.math3.geometry.euclidean.threed.Vector3D.clinit()
org.apache.commons.math3.geometry.euclidean.threed.Plane.toSpace(org.apache.commons.math3.geometry.Vector) org.apache.commons.math3.geometry.euclidean.twod.Vector2D.getY()
org.apache.commons.math3.analysis.FunctionUtils$13(org.apache.commons.math3.analysis.BivariateFunction,double) java.lang.Object()
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.subtract(org.apache.commons.math3.geometry.Vector) java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.subtract(org.apache.commons.math3.geometry.Vector) org.apache.commons.math3.geometry.euclidean.threed.Vector3D.clinit()
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.subtract(org.apache.commons.math3.geometry.Vector) org.apache.commons.math3.geometry.euclidean.threed.Vector3D(double,double,double)
org.apache.commons.math3.util.MathUtils.reduce(double,double,double) java.lang.Object.clinit()
org.apache.commons.math3.util.MathUtils.reduce(double,double,double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.util.MathUtils.reduce(double,double,double) org.apache.commons.math3.util.FastMath.floor(double)
org.apache.commons.math3.util.MathUtils.reduce(double,double,double) org.apache.commons.math3.util.FastMath.abs(double)
org.apache.commons.math3.analysis.function.Sqrt.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.sqrt()
org.apache.commons.math3.geometry.euclidean.twod.SubLine.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint(org.apache.commons.math3.geometry.euclidean.oned.Vector1D,boolean)
org.apache.commons.math3.geometry.euclidean.twod.SubLine.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) java.lang.Boolean.clinit()
org.apache.commons.math3.geometry.euclidean.twod.SubLine.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.geometry.euclidean.twod.SubLine.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet(org.apache.commons.math3.geometry.partitioning.BSPTree)
org.apache.commons.math3.geometry.euclidean.twod.SubLine.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.twod.Line.intersection(org.apache.commons.math3.geometry.euclidean.twod.Line)
org.apache.commons.math3.geometry.euclidean.twod.SubLine.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.twod.Line.getAngle()
org.apache.commons.math3.geometry.euclidean.twod.SubLine.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.partitioning.BSPTree.getMinus()
org.apache.commons.math3.geometry.euclidean.twod.SubLine.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.partitioning.BSPTree.split(org.apache.commons.math3.geometry.partitioning.SubHyperplane)
org.apache.commons.math3.geometry.euclidean.twod.SubLine.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.util.FastMath.sin(double)
org.apache.commons.math3.geometry.euclidean.twod.SubLine.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.twod.Line.copySelf()
org.apache.commons.math3.geometry.euclidean.twod.SubLine.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.twod.Line.getOffset(org.apache.commons.math3.geometry.euclidean.twod.Line)
org.apache.commons.math3.geometry.euclidean.twod.SubLine.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.wholeHyperplane()
org.apache.commons.math3.geometry.euclidean.twod.SubLine.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.partitioning.AbstractRegion.getTree(boolean)
org.apache.commons.math3.geometry.euclidean.twod.SubLine.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.twod.SubLine.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.twod.SubLine(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region)
org.apache.commons.math3.geometry.euclidean.twod.SubLine.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.partitioning.BSPTree(java.lang.Object)
org.apache.commons.math3.geometry.euclidean.twod.SubLine.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.partitioning.AbstractRegion.isEmpty(org.apache.commons.math3.geometry.partitioning.BSPTree)
org.apache.commons.math3.geometry.euclidean.twod.SubLine.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.partitioning.BSPTree.getPlus()
org.apache.commons.math3.geometry.euclidean.twod.SubLine.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.getHyperplane()
org.apache.commons.math3.geometry.euclidean.twod.SubLine.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.twod.Line.toSubSpace(org.apache.commons.math3.geometry.Vector)
org.apache.commons.math3.geometry.euclidean.twod.SubLine.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.partitioning.BSPTree(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,java.lang.Object)
org.apache.commons.math3.geometry.euclidean.twod.SubLine.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.SubHyperplane)
org.apache.commons.math3.geometry.euclidean.twod.SubLine.split(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.getRemainingRegion()
org.apache.commons.math3.exception.MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[]) java.lang.Object.clinit()
org.apache.commons.math3.exception.MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[]) org.apache.commons.math3.exception.util.ExceptionContext.addMessage(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])
org.apache.commons.math3.exception.MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[]) java.lang.IllegalStateException()
org.apache.commons.math3.exception.MathIllegalStateException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[]) org.apache.commons.math3.exception.util.ExceptionContext(java.lang.Throwable)
org.apache.commons.math3.geometry.partitioning.Side.values() sun.text.CompactByteArray.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.awt.geom.AffineTransform.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() sun.security.krb5.internal.KerberosTime.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.util.Hashtable.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() sun.security.krb5.internal.Ticket.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() sun.text.IntHashtable.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() sun.security.util.BitArray.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() com.sun.imageio.plugins.jpeg.DHTMarkerSegment$Htable.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.util.SimpleTimeZone.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.util.IdentityHashMap.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.util.JapaneseImperialCalendar.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() sun.security.krb5.internal.ETypeInfo.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() sun.text.normalizer.NormalizerBase.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.util.Locale.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() sun.security.krb5.internal.TicketFlags.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() sun.java2d.SunGraphics2D.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() sun.security.provider.MD4.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() javax.swing.tree.DefaultTreeSelectionModel.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.awt.print.Paper.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.text.MessageFormat.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.lang.Object.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() javax.swing.text.SimpleAttributeSet.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() javax.swing.ArrayTable.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.text.SimpleDateFormat.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() sun.java2d.loops.FontInfo.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() sun.security.krb5.PrincipalName.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.awt.PageAttributes.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() com.sun.imageio.plugins.png.PNGMetadata.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.util.GregorianCalendar.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() com.sun.imageio.plugins.jpeg.SOFMarkerSegment.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() org.apache.commons.math3.geometry.partitioning.Side.clinit()
org.apache.commons.math3.geometry.partitioning.Side.values() java.util.Vector.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() javax.swing.text.ElementIterator.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.net.HttpCookie.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.awt.datatransfer.MimeType.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.awt.RenderingHints.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.text.DateFormatSymbols.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.util.HashSet.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() sun.util.calendar.ImmutableGregorianDate.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() javax.sound.midi.MetaMessage.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() sun.font.FontLineMetrics.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() sun.font.StandardGlyphVector.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.text.AttributedString$AttributedStringIterator.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.text.RuleBasedBreakIterator.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() javax.swing.text.Segment.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.awt.ImageCapabilities.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() sun.security.krb5.internal.LastReqEntry.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() javax.swing.text.StyleContext$SmallAttributeSet.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.text.RuleBasedCollator.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.text.RuleBasedBreakIterator$SafeCharIterator.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() javax.swing.text.ElementIterator$StackItem.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$ICCMarkerSegment.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.awt.geom.Line2D.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.util.ResourceBundle$CacheKey.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumbJPEG.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() sun.security.krb5.internal.ETypeInfo2.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.awt.font.TextMeasurer.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.util.LinkedList.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() sun.font.AttributeValues.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() javax.swing.text.StyledEditorKit$1.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.util.ArrayDeque.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() javax.swing.text.GlyphView.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.awt.datatransfer.DataFlavor.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() sun.security.krb5.internal.PAData.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() javax.swing.AbstractAction.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() sun.text.normalizer.ReplaceableUCharacterIterator.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.util.concurrent.CopyOnWriteArrayList.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumb.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.awt.geom.Point2D.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() javax.swing.text.html.OptionListModel.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() sun.security.krb5.internal.AuthorizationDataEntry.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() javax.swing.text.EditorKit.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() javax.swing.text.StyledEditorKit.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() com.sun.imageio.plugins.jpeg.DQTMarkerSegment.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.util.JumboEnumSet.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() sun.security.krb5.internal.HostAddresses.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() javax.crypto.Mac.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() javax.naming.Reference.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() com.sun.imageio.plugins.jpeg.SOSMarkerSegment.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.util.jar.Manifest.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() sun.security.krb5.EncryptedData.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.text.NumberFormat.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() sun.net.ProgressSource.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.util.EnumSet.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() sun.net.www.protocol.http.AuthenticationInfo.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.awt.datatransfer.MimeTypeParameterList.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.util.regex.Pattern$CharPropertyNames$CloneableProperty.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.security.SignatureSpi.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() sun.security.x509.GeneralSubtrees.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.util.ArrayList.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() com.sun.imageio.plugins.jpeg.DHTMarkerSegment.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() javax.naming.CompositeName.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.awt.font.CharArrayIterator.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.security.Signature$Delegate.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.util.TreeSet.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.util.Hashtable$Entry.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.awt.image.ImageFilter.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() com.sun.imageio.plugins.jpeg.SOSMarkerSegment$ScanComponentSpec.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.awt.geom.Path2D$Float.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() sun.security.krb5.EncryptionKey.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.text.DecimalFormat.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.awt.BufferCapabilities.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.awt.image.Kernel.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.util.Date.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.awt.Insets.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() sun.net.www.MimeEntry.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() sun.util.calendar.CalendarDate.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.awt.print.PageFormat.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() com.sun.imageio.plugins.jpeg.SOFMarkerSegment$ComponentSpec.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.util.EnumMap.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() sun.security.krb5.internal.AuthorizationData.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFExtensionMarkerSegment.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.awt.geom.QuadCurve2D.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() sun.security.krb5.internal.crypto.crc32.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.util.zip.ZipEntry.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.security.MessageDigest$Delegate.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() sun.util.calendar.ZoneInfo.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() sun.text.normalizer.CharacterIteratorWrapper.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.lang.Object.clinit()
org.apache.commons.math3.geometry.partitioning.Side.values() java.text.DecimalFormatSymbols.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.awt.font.TextLayout.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() javax.swing.DefaultListSelectionModel.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.text.DigitList.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() javax.print.attribute.EnumSyntax.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() javax.sound.midi.ShortMessage.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.awt.geom.CubicCurve2D.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.text.ChoiceFormat.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.lang.Thread.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() com.sun.imageio.plugins.jpeg.MarkerSegment.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.awt.image.renderable.RenderContext.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() sun.security.krb5.Realm.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() com.sun.imageio.plugins.jpeg.DQTMarkerSegment$Qtable.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.awt.JobAttributes.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() com.sun.imageio.plugins.jpeg.JPEGMetadata.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.text.StringCharacterIterator.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.awt.geom.Dimension2D.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() sun.security.x509.NameConstraintsExtension.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.awt.geom.Area.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.util.jar.Attributes.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() sun.security.krb5.internal.HostAddress.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.util.TreeMap.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.awt.geom.Path2D$Double.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.text.BreakIterator.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.util.BitSet.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.lang.Enum.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.util.AbstractMap.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() javax.swing.tree.DefaultMutableTreeNode.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.awt.geom.RectangularShape.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() sun.security.provider.PolicyParser$GrantEntry.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() java.util.HashMap.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.clone()
org.apache.commons.math3.geometry.partitioning.Side.values() javax.swing.text.html.HTMLEditorKit.clone()
org.apache.commons.math3.analysis.differentiation.DSCompiler.add(double[],int,double[],int,double[],int) org.apache.commons.math3.analysis.differentiation.DSCompiler.getSize()
org.apache.commons.math3.analysis.function.Logit.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.exception.OutOfRangeException(java.lang.Number,java.lang.Number,java.lang.Number)
org.apache.commons.math3.analysis.function.Logit.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.compose(double[])
org.apache.commons.math3.analysis.function.Logit.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.function.Logit.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Logit.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getOrder()
org.apache.commons.math3.analysis.function.Logit.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.lang.Double.valueOf(double)
org.apache.commons.math3.analysis.function.Logit.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.lang.Throwable.clinit()
org.apache.commons.math3.analysis.function.Logit.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.analysis.function.Logit.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getValue()
org.apache.commons.math3.analysis.function.Logit.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.lang.Double.clinit()
org.apache.commons.math3.analysis.function.Logit.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.lang.Double.isInfinite(double)
org.apache.commons.math3.analysis.function.Logit.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.util.FastMath.log(double)
org.apache.commons.math3.ode.events.Transformer.values() sun.text.CompactByteArray.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.awt.geom.AffineTransform.clone()
org.apache.commons.math3.ode.events.Transformer.values() sun.security.krb5.internal.KerberosTime.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.util.Hashtable.clone()
org.apache.commons.math3.ode.events.Transformer.values() sun.security.krb5.internal.Ticket.clone()
org.apache.commons.math3.ode.events.Transformer.values() sun.text.IntHashtable.clone()
org.apache.commons.math3.ode.events.Transformer.values() sun.security.util.BitArray.clone()
org.apache.commons.math3.ode.events.Transformer.values() com.sun.imageio.plugins.jpeg.DHTMarkerSegment$Htable.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.util.SimpleTimeZone.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.util.IdentityHashMap.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.util.JapaneseImperialCalendar.clone()
org.apache.commons.math3.ode.events.Transformer.values() sun.security.krb5.internal.ETypeInfo.clone()
org.apache.commons.math3.ode.events.Transformer.values() sun.text.normalizer.NormalizerBase.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.util.Locale.clone()
org.apache.commons.math3.ode.events.Transformer.values() sun.security.krb5.internal.TicketFlags.clone()
org.apache.commons.math3.ode.events.Transformer.values() sun.java2d.SunGraphics2D.clone()
org.apache.commons.math3.ode.events.Transformer.values() sun.security.provider.MD4.clone()
org.apache.commons.math3.ode.events.Transformer.values() javax.swing.tree.DefaultTreeSelectionModel.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.awt.print.Paper.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.text.MessageFormat.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.lang.Object.clone()
org.apache.commons.math3.ode.events.Transformer.values() javax.swing.text.SimpleAttributeSet.clone()
org.apache.commons.math3.ode.events.Transformer.values() javax.swing.ArrayTable.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.text.SimpleDateFormat.clone()
org.apache.commons.math3.ode.events.Transformer.values() sun.java2d.loops.FontInfo.clone()
org.apache.commons.math3.ode.events.Transformer.values() sun.security.krb5.PrincipalName.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.awt.PageAttributes.clone()
org.apache.commons.math3.ode.events.Transformer.values() com.sun.imageio.plugins.png.PNGMetadata.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.util.GregorianCalendar.clone()
org.apache.commons.math3.ode.events.Transformer.values() com.sun.imageio.plugins.jpeg.SOFMarkerSegment.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.util.Vector.clone()
org.apache.commons.math3.ode.events.Transformer.values() javax.swing.text.ElementIterator.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.net.HttpCookie.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.awt.datatransfer.MimeType.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.awt.RenderingHints.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.text.DateFormatSymbols.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.util.HashSet.clone()
org.apache.commons.math3.ode.events.Transformer.values() sun.util.calendar.ImmutableGregorianDate.clone()
org.apache.commons.math3.ode.events.Transformer.values() javax.sound.midi.MetaMessage.clone()
org.apache.commons.math3.ode.events.Transformer.values() sun.font.FontLineMetrics.clone()
org.apache.commons.math3.ode.events.Transformer.values() sun.font.StandardGlyphVector.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.text.AttributedString$AttributedStringIterator.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.text.RuleBasedBreakIterator.clone()
org.apache.commons.math3.ode.events.Transformer.values() javax.swing.text.Segment.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.awt.ImageCapabilities.clone()
org.apache.commons.math3.ode.events.Transformer.values() sun.security.krb5.internal.LastReqEntry.clone()
org.apache.commons.math3.ode.events.Transformer.values() javax.swing.text.StyleContext$SmallAttributeSet.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.text.RuleBasedCollator.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.text.RuleBasedBreakIterator$SafeCharIterator.clone()
org.apache.commons.math3.ode.events.Transformer.values() javax.swing.text.ElementIterator$StackItem.clone()
org.apache.commons.math3.ode.events.Transformer.values() org.apache.commons.math3.ode.events.Transformer.clinit()
org.apache.commons.math3.ode.events.Transformer.values() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$ICCMarkerSegment.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.awt.geom.Line2D.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.util.ResourceBundle$CacheKey.clone()
org.apache.commons.math3.ode.events.Transformer.values() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumbJPEG.clone()
org.apache.commons.math3.ode.events.Transformer.values() sun.security.krb5.internal.ETypeInfo2.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.awt.font.TextMeasurer.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.util.LinkedList.clone()
org.apache.commons.math3.ode.events.Transformer.values() sun.font.AttributeValues.clone()
org.apache.commons.math3.ode.events.Transformer.values() javax.swing.text.StyledEditorKit$1.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.util.ArrayDeque.clone()
org.apache.commons.math3.ode.events.Transformer.values() javax.swing.text.GlyphView.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.awt.datatransfer.DataFlavor.clone()
org.apache.commons.math3.ode.events.Transformer.values() sun.security.krb5.internal.PAData.clone()
org.apache.commons.math3.ode.events.Transformer.values() javax.swing.AbstractAction.clone()
org.apache.commons.math3.ode.events.Transformer.values() sun.text.normalizer.ReplaceableUCharacterIterator.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.util.concurrent.CopyOnWriteArrayList.clone()
org.apache.commons.math3.ode.events.Transformer.values() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumb.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.awt.geom.Point2D.clone()
org.apache.commons.math3.ode.events.Transformer.values() javax.swing.text.html.OptionListModel.clone()
org.apache.commons.math3.ode.events.Transformer.values() sun.security.krb5.internal.AuthorizationDataEntry.clone()
org.apache.commons.math3.ode.events.Transformer.values() javax.swing.text.EditorKit.clone()
org.apache.commons.math3.ode.events.Transformer.values() javax.swing.text.StyledEditorKit.clone()
org.apache.commons.math3.ode.events.Transformer.values() com.sun.imageio.plugins.jpeg.DQTMarkerSegment.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.util.JumboEnumSet.clone()
org.apache.commons.math3.ode.events.Transformer.values() sun.security.krb5.internal.HostAddresses.clone()
org.apache.commons.math3.ode.events.Transformer.values() javax.crypto.Mac.clone()
org.apache.commons.math3.ode.events.Transformer.values() javax.naming.Reference.clone()
org.apache.commons.math3.ode.events.Transformer.values() com.sun.imageio.plugins.jpeg.SOSMarkerSegment.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.util.jar.Manifest.clone()
org.apache.commons.math3.ode.events.Transformer.values() sun.security.krb5.EncryptedData.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.text.NumberFormat.clone()
org.apache.commons.math3.ode.events.Transformer.values() sun.net.ProgressSource.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.util.EnumSet.clone()
org.apache.commons.math3.ode.events.Transformer.values() sun.net.www.protocol.http.AuthenticationInfo.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.awt.datatransfer.MimeTypeParameterList.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.util.regex.Pattern$CharPropertyNames$CloneableProperty.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.security.SignatureSpi.clone()
org.apache.commons.math3.ode.events.Transformer.values() sun.security.x509.GeneralSubtrees.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.util.ArrayList.clone()
org.apache.commons.math3.ode.events.Transformer.values() com.sun.imageio.plugins.jpeg.DHTMarkerSegment.clone()
org.apache.commons.math3.ode.events.Transformer.values() javax.naming.CompositeName.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.awt.font.CharArrayIterator.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.security.Signature$Delegate.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.util.TreeSet.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.util.Hashtable$Entry.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.awt.image.ImageFilter.clone()
org.apache.commons.math3.ode.events.Transformer.values() com.sun.imageio.plugins.jpeg.SOSMarkerSegment$ScanComponentSpec.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.awt.geom.Path2D$Float.clone()
org.apache.commons.math3.ode.events.Transformer.values() sun.security.krb5.EncryptionKey.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.text.DecimalFormat.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.awt.BufferCapabilities.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.awt.image.Kernel.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.util.Date.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.awt.Insets.clone()
org.apache.commons.math3.ode.events.Transformer.values() sun.net.www.MimeEntry.clone()
org.apache.commons.math3.ode.events.Transformer.values() sun.util.calendar.CalendarDate.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.awt.print.PageFormat.clone()
org.apache.commons.math3.ode.events.Transformer.values() com.sun.imageio.plugins.jpeg.SOFMarkerSegment$ComponentSpec.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.util.EnumMap.clone()
org.apache.commons.math3.ode.events.Transformer.values() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.clone()
org.apache.commons.math3.ode.events.Transformer.values() sun.security.krb5.internal.AuthorizationData.clone()
org.apache.commons.math3.ode.events.Transformer.values() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFExtensionMarkerSegment.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.awt.geom.QuadCurve2D.clone()
org.apache.commons.math3.ode.events.Transformer.values() sun.security.krb5.internal.crypto.crc32.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.util.zip.ZipEntry.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.security.MessageDigest$Delegate.clone()
org.apache.commons.math3.ode.events.Transformer.values() sun.util.calendar.ZoneInfo.clone()
org.apache.commons.math3.ode.events.Transformer.values() sun.text.normalizer.CharacterIteratorWrapper.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.lang.Object.clinit()
org.apache.commons.math3.ode.events.Transformer.values() java.text.DecimalFormatSymbols.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.awt.font.TextLayout.clone()
org.apache.commons.math3.ode.events.Transformer.values() javax.swing.DefaultListSelectionModel.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.text.DigitList.clone()
org.apache.commons.math3.ode.events.Transformer.values() javax.print.attribute.EnumSyntax.clone()
org.apache.commons.math3.ode.events.Transformer.values() javax.sound.midi.ShortMessage.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.awt.geom.CubicCurve2D.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.text.ChoiceFormat.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.lang.Thread.clone()
org.apache.commons.math3.ode.events.Transformer.values() com.sun.imageio.plugins.jpeg.MarkerSegment.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.awt.image.renderable.RenderContext.clone()
org.apache.commons.math3.ode.events.Transformer.values() sun.security.krb5.Realm.clone()
org.apache.commons.math3.ode.events.Transformer.values() com.sun.imageio.plugins.jpeg.DQTMarkerSegment$Qtable.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.awt.JobAttributes.clone()
org.apache.commons.math3.ode.events.Transformer.values() com.sun.imageio.plugins.jpeg.JPEGMetadata.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.text.StringCharacterIterator.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.awt.geom.Dimension2D.clone()
org.apache.commons.math3.ode.events.Transformer.values() sun.security.x509.NameConstraintsExtension.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.awt.geom.Area.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.util.jar.Attributes.clone()
org.apache.commons.math3.ode.events.Transformer.values() sun.security.krb5.internal.HostAddress.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.util.TreeMap.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.awt.geom.Path2D$Double.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.text.BreakIterator.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.util.BitSet.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.lang.Enum.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.util.AbstractMap.clone()
org.apache.commons.math3.ode.events.Transformer.values() javax.swing.tree.DefaultMutableTreeNode.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.awt.geom.RectangularShape.clone()
org.apache.commons.math3.ode.events.Transformer.values() sun.security.provider.PolicyParser$GrantEntry.clone()
org.apache.commons.math3.ode.events.Transformer.values() java.util.HashMap.clone()
org.apache.commons.math3.ode.events.Transformer.values() org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.clone()
org.apache.commons.math3.ode.events.Transformer.values() javax.swing.text.html.HTMLEditorKit.clone()
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getNorm() java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getNorm() org.apache.commons.math3.util.FastMath.sqrt(double)
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getNorm() org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(int,int,double) org.apache.commons.math3.analysis.differentiation.DerivativeStructure(int,int)
org.apache.commons.math3.random.RandomAdaptor.nextBytes(byte[]) org.apache.commons.math3.random.SynchronizedRandomGenerator.nextBytes(byte[])
org.apache.commons.math3.random.RandomAdaptor.nextBytes(byte[]) java.util.Random.nextBytes(byte[])
org.apache.commons.math3.random.RandomAdaptor.nextBytes(byte[]) org.apache.commons.math3.random.RandomAdaptor.nextBytes(byte[])
org.apache.commons.math3.random.RandomAdaptor.nextBytes(byte[]) org.apache.commons.math3.random.BitsStreamGenerator.nextBytes(byte[])
org.apache.commons.math3.random.RandomAdaptor.nextBytes(byte[]) org.apache.commons.math3.random.RandomGeneratorFactory$1.nextBytes(byte[])
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.access$100(org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet,org.apache.commons.math3.geometry.Vector) org.apache.commons.math3.geometry.partitioning.AbstractRegion.setBarycenter(org.apache.commons.math3.geometry.Vector)
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.toString() org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.toString() java.lang.Integer.toString(int)
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.toString() java.lang.Object.clinit()
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.toString() java.lang.StringBuilder()
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.toString() java.lang.Integer.clinit()
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.toString() java.lang.StringBuilder.append(char)
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.toString() java.lang.StringBuilder.append(java.lang.String)
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.toString() java.lang.StringBuilder.toString()
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.toString() org.apache.commons.math3.analysis.polynomials.PolynomialFunction.toString(double)
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.toString() java.lang.StringBuilder.length()
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.toString() org.apache.commons.math3.util.FastMath.abs(double)
org.apache.commons.math3.special.Gamma.logGamma1p(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.special.Gamma.logGamma1p(double) java.lang.Object.clinit()
org.apache.commons.math3.special.Gamma.logGamma1p(double) org.apache.commons.math3.util.FastMath.log1p(double)
org.apache.commons.math3.special.Gamma.logGamma1p(double) org.apache.commons.math3.exception.NumberIsTooLargeException(java.lang.Number,java.lang.Number,boolean)
org.apache.commons.math3.special.Gamma.logGamma1p(double) org.apache.commons.math3.special.Gamma.clinit()
org.apache.commons.math3.special.Gamma.logGamma1p(double) java.lang.Double.valueOf(double)
org.apache.commons.math3.special.Gamma.logGamma1p(double) org.apache.commons.math3.exception.NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)
org.apache.commons.math3.special.Gamma.logGamma1p(double) java.lang.Throwable.clinit()
org.apache.commons.math3.special.Gamma.logGamma1p(double) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.special.Gamma.logGamma1p(double) java.lang.Double.clinit()
org.apache.commons.math3.special.Gamma.logGamma1p(double) org.apache.commons.math3.special.Gamma.invGamma1pm1(double)
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.toString() org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormat.getInstance()
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.toString() java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.toString() org.apache.commons.math3.geometry.VectorFormat.format(org.apache.commons.math3.geometry.Vector)
org.apache.commons.math3.stat.clustering.EuclideanIntegerPoint.equals(java.lang.Object) java.lang.Object.clinit()
org.apache.commons.math3.stat.clustering.EuclideanIntegerPoint.equals(java.lang.Object) java.util.Arrays.clinit()
org.apache.commons.math3.stat.clustering.EuclideanIntegerPoint.equals(java.lang.Object) java.util.Arrays.equals(int[],int[])
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getN() org.apache.commons.math3.util.ResizableDoubleArray.getNumElements()
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.hashCode() org.apache.commons.math3.util.Decimal64.hashCode()
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.hashCode() org.apache.commons.math3.dfp.Dfp.hashCode()
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.hashCode() org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.isNaN()
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.hashCode() java.lang.Object.hashCode()
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.hashCode() org.apache.commons.math3.analysis.differentiation.DerivativeStructure.hashCode()
org.apache.commons.math3.analysis.differentiation.DSCompiler.sin(double[],int,double[],int) java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.sin(double[],int,double[],int) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.sin(double[],int,double[],int) org.apache.commons.math3.analysis.differentiation.DSCompiler.compose(double[],int,double[],double[],int)
org.apache.commons.math3.analysis.differentiation.DSCompiler.sin(double[],int,double[],int) org.apache.commons.math3.util.FastMath.sin(double)
org.apache.commons.math3.analysis.differentiation.DSCompiler.sin(double[],int,double[],int) org.apache.commons.math3.util.FastMath.cos(double)
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$1.value(double[]) java.lang.Object.clinit()
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$1.value(double[]) org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.access$000(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer,double[])
org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.polynomialSplineDerivative() java.lang.Object.clinit()
org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.polynomialSplineDerivative() org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction(double[],org.apache.commons.math3.analysis.polynomials.PolynomialFunction[])
org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.polynomialSplineDerivative() org.apache.commons.math3.analysis.polynomials.PolynomialFunction.polynomialDerivative()
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm.evaluateInternal(double[],double[],double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm.evaluateInternal(double[],double[],double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm.evaluateInternal(double[],double[],double) org.apache.commons.math3.util.FastMath.abs(double)
org.apache.commons.math3.optimization.linear.SimplexTableau.hashCode() java.lang.Boolean.clinit()
org.apache.commons.math3.optimization.linear.SimplexTableau.hashCode() java.lang.Boolean.hashCode()
org.apache.commons.math3.optimization.linear.SimplexTableau.hashCode() java.util.Collections$CheckedList.hashCode()
org.apache.commons.math3.optimization.linear.SimplexTableau.hashCode() java.lang.Boolean.valueOf(boolean)
org.apache.commons.math3.optimization.linear.SimplexTableau.hashCode() java.lang.Object.hashCode()
org.apache.commons.math3.optimization.linear.SimplexTableau.hashCode() java.util.AbstractList.hashCode()
org.apache.commons.math3.optimization.linear.SimplexTableau.hashCode() java.util.Collections$SynchronizedList.hashCode()
org.apache.commons.math3.optimization.linear.SimplexTableau.hashCode() java.util.Vector.hashCode()
org.apache.commons.math3.optimization.linear.SimplexTableau.hashCode() java.util.concurrent.CopyOnWriteArrayList.hashCode()
org.apache.commons.math3.optimization.linear.SimplexTableau.hashCode() java.lang.Object.clinit()
org.apache.commons.math3.optimization.linear.SimplexTableau.hashCode() java.lang.Double.valueOf(double)
org.apache.commons.math3.optimization.linear.SimplexTableau.hashCode() org.apache.commons.math3.optimization.linear.LinearObjectiveFunction.hashCode()
org.apache.commons.math3.optimization.linear.SimplexTableau.hashCode() java.util.Collections$EmptyList.hashCode()
org.apache.commons.math3.optimization.linear.SimplexTableau.hashCode() java.lang.Double.clinit()
org.apache.commons.math3.optimization.linear.SimplexTableau.hashCode() java.lang.Double.hashCode()
org.apache.commons.math3.optimization.linear.SimplexTableau.hashCode() org.apache.commons.math3.linear.AbstractRealMatrix.hashCode()
org.apache.commons.math3.optimization.linear.SimplexTableau.hashCode() java.util.Collections$UnmodifiableList.hashCode()
org.apache.commons.math3.util.MathArrays$2.compare(org.apache.commons.math3.util.Pair,org.apache.commons.math3.util.Pair) org.apache.commons.math3.util.Pair.getKey()
org.apache.commons.math3.util.MathArrays$2.compare(org.apache.commons.math3.util.Pair,org.apache.commons.math3.util.Pair) java.lang.Double.compareTo(java.lang.Double)
org.apache.commons.math3.stat.descriptive.SummaryStatistics.hashCode() org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSum()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.hashCode() org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getSumsq()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.hashCode() org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getMean()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.hashCode() org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getGeometricMean()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.hashCode() org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSumsq()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.hashCode() org.apache.commons.math3.util.MathUtils.hash(double)
org.apache.commons.math3.stat.descriptive.SummaryStatistics.hashCode() java.lang.Object.clinit()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.hashCode() org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getSum()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.hashCode() org.apache.commons.math3.stat.descriptive.SummaryStatistics.getVariance()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.hashCode() org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMax()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.hashCode() org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getMax()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.hashCode() org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMean()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.hashCode() org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getMin()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.hashCode() org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getN()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.hashCode() org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMin()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.hashCode() org.apache.commons.math3.stat.descriptive.SummaryStatistics.getN()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.hashCode() org.apache.commons.math3.stat.descriptive.SummaryStatistics.getGeometricMean()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.hashCode() org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getVariance()
org.apache.commons.math3.stat.descriptive.moment.Skewness.getResult() java.lang.Object.clinit()
org.apache.commons.math3.stat.descriptive.moment.Skewness.getResult() org.apache.commons.math3.util.FastMath.sqrt(double)
org.apache.commons.math3.stat.descriptive.moment.Skewness.getResult() org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.stat.descriptive.moment.Skewness.getResult() org.apache.commons.math3.stat.descriptive.moment.SecondMoment.getN()
org.apache.commons.math3.linear.RealVector$1(org.apache.commons.math3.linear.RealVector,int) java.lang.Object.clinit()
org.apache.commons.math3.linear.RealVector$1(org.apache.commons.math3.linear.RealVector,int) org.apache.commons.math3.linear.RealVector$Entry(org.apache.commons.math3.linear.RealVector)
org.apache.commons.math3.linear.RealVector$1(org.apache.commons.math3.linear.RealVector,int) java.lang.Object()
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.lang.Character$Subset.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.text.AttributeEntry.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.security.krb5.internal.HostAddresses.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.util.Locale.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) javax.imageio.ImageTypeSpecifier.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.security.spec.EllipticCurve.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.awt.geom.RoundRectangle2D.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.awt.im.InputMethodLocator.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.util.AbstractMap$SimpleImmutableEntry.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.lang.ProcessEnvironment$StringEntrySet.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.io.File.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.lang.Enum.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) javax.swing.text.TabStop.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) org.apache.commons.math3.geometry.euclidean.twod.Vector2D.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.security.krb5.PrincipalName.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.security.krb5.internal.rcache.AuthTime.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) org.apache.commons.math3.optim.linear.SimplexTableau.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.util.AbstractList.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.util.locale.LocaleExtensions.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.awt.SunHints$Value.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.swing.text.TextComponentPrintable$IntegerSegment.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.util.Collections$SynchronizedList.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.security.x509.CertificateExtensions.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.security.x509.OIDName.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.awt.font.TransformAttribute.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.security.BasicPermission.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) javax.security.auth.PrivateCredentialPermission.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) javax.imageio.ImageTypeSpecifier$Banded.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.text.IntHashtable.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.font.FontStrikeDesc.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.security.x509.AccessDescription.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.text.ChoiceFormat.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.security.x509.GeneralNames.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.net.InterfaceAddress.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.awt.image.SinglePixelPackedSampleModel.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.lang.ProcessEnvironment$Variable.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) org.apache.commons.math3.complex.Complex.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.math.MathContext.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.text.MessageFormat.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.awt.font.TextLayout.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.security.x509.GeneralSubtree.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.misc.SoftCache$Entry.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) org.apache.commons.math3.stat.Frequency.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) org.apache.commons.math3.geometry.euclidean.threed.Vector3D.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.util.Collections$ReverseComparator2.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.util.jar.Manifest.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.text.DecimalFormatSymbols.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.net.Inet4Address.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.security.jca.ProviderConfig.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.util.Collections$SynchronizedMap.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.awt.RenderingHints.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.text.DecimalFormat.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.nio.fs.UnixUserPrincipals$User.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.lang.Long.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.security.util.ObjectIdentifier.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) javax.naming.NameImpl.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.security.x509.GeneralName.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.util.IdentityHashMap$EntryIterator$Entry.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.lang.reflect.WeakCache$LookupValue.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.security.x509.AVA.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.util.HashMap$Entry.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.security.spec.ECFieldFp.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.font.GlyphLayout$LayoutEngineKey.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.security.krb5.Checksum.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.awt.font.FontRenderContext.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.util.locale.BaseLocale$Key.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.util.Collections$UnmodifiableList.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) org.apache.commons.math3.optim.linear.LinearConstraint.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.lang.reflect.Proxy$Key2.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) org.apache.commons.math3.stat.clustering.EuclideanDoublePoint.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.security.x509.RDN.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.security.cert.X509CRL.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.awt.Font.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) javax.security.auth.kerberos.KeyTab.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.awt.Insets.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) javax.print.attribute.standard.MediaSize.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.text.DateFormatSymbols.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.net.InetSocketAddress.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.security.UnresolvedPermission.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.nio.charset.Charset.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.font.CoreMetrics.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.awt.AlphaComposite.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.awt.image.ComponentColorModel.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) org.apache.commons.math3.linear.AbstractRealMatrix.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.awt.image.ComponentSampleModel.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.net.InetSocketAddress$InetSocketAddressHolder.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) javax.swing.text.SimpleAttributeSet.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.util.Vector.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.lang.ProcessEnvironment$StringEntry.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.java2d.loops.SurfaceType.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.awt.geom.Rectangle2D.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.nio.ch.SocketOptionRegistry$RegistryKey.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.util.Collections$EmptyMap.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.util.Collections$SynchronizedSet.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) javax.security.auth.kerberos.KerberosPrincipal.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.lang.ProcessBuilder$Redirect.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.util.calendar.ZoneInfo.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.awt.geom.Ellipse2D.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.awt.Point.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.lang.ProcessEnvironment$Value.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) javax.security.auth.kerberos.KerberosKey.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) javax.swing.text.TabSet.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) javax.swing.KeyboardManager$ComponentKeyStrokePair.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.net.InetAddress.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.lang.reflect.Constructor.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.security.cert.CertPath.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.math.BigDecimal.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.util.Collections$CheckedList.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.text.AttributedCharacterIterator$Attribute.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) org.apache.commons.math3.linear.AbstractFieldMatrix.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) org.apache.commons.math3.linear.RealVector.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.lang.ProcessEnvironment$StringValues.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.util.ResourceBundle$CacheKey.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.text.CompactByteArray.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.lang.Short.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.security.x509.Extension.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.util.WeakHashMap$Entry.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.awt.geom.Point2D.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ComparableSegment.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.awt.JobAttributes.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.util.jar.JarVerifier$VerifierCodeSource.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.util.GregorianCalendar.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.reflect.generics.reflectiveObjects.WildcardTypeImpl.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.security.x509.X500Name.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.security.x509.IPAddressName.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.font.PhysicalFont.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) javax.print.DocFlavor.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.font.GlyphLayout$SDCache$SDKey.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.SummaryStatistics.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) javax.swing.text.StyleContext$FontKey.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.security.x509.EDIPartyName.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) org.apache.commons.math3.stat.clustering.EuclideanIntegerPoint.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.security.x509.GeneralSubtrees.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.security.cert.X509CRLEntry.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.swing.SwingUtilities2$LSBCacheEntry.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) javax.print.attribute.AttributeSetUtilities$UnmodifiableAttributeSet.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.nio.ByteBuffer.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.util.calendar.Era.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.net.Proxy.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.security.Timestamp.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) javax.swing.text.html.HTML$UnknownTag.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.util.PropertyPermission.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.util.Collections$CheckedMap.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.util.JumboEnumSet.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.text.RuleBasedCollationKey.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.nio.file.attribute.FileTime.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.security.x509.URIName.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.text.AttributedString$AttributedStringIterator.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.lang.Character.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.moment.VectorialMean.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.util.EnumMap.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) javax.swing.tree.TreePath.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) org.apache.commons.math3.util.Pair.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) javax.swing.RowSorter$SortKey.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.security.x509.KeyIdentifier.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.security.spec.ECPoint.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.security.x509.DistributionPoint.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.font.StandardGlyphVector.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.util.AbstractMap$SimpleEntry.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.util.AbstractSet.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.text.FieldPosition.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.text.ParsePosition.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) org.apache.commons.math3.optim.linear.LinearObjectiveFunction.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.beans.PropertyDescriptor.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.security.AccessControlContext.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.security.x509.CRLExtensions.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.util.locale.BaseLocale.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.awt.datatransfer.MimeType.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.util.Hashtable.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.util.Collections$UnmodifiableMap.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.nio.fs.UnixPath.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.text.StringCharacterIterator.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) org.apache.commons.math3.optimization.linear.SimplexTableau.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) javax.imageio.ImageTypeSpecifier$Interleaved.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.security.x509.AlgorithmId.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) org.apache.commons.math3.fraction.Fraction.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.util.AbstractMap.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) org.apache.commons.math3.geometry.euclidean.oned.Vector1D.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) org.apache.commons.math3.util.ResizableDoubleArray.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) javax.print.attribute.standard.Media.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.util.Date.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.util.Hashtable$Entry.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.security.util.DerInputBuffer.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.security.spec.ECFieldF2m.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) javax.sound.midi.Sequencer$SyncMode.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.net.www.http.KeepAliveKey.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.io.ObjectStreamClass$WeakClassKey.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.misc.ProxyGenerator$ConstantPool$IndirectEntry.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.security.krb5.internal.KerberosTime.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.util.BitSet.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) javax.sound.sampled.AudioFormat$Encoding.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.security.x509.RFC822Name.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.text.PatternEntry.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) com.sun.java.swing.plaf.windows.XPStyle$Skin.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.util.jar.Attributes.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.beans.IndexedPropertyDescriptor.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.awt.datatransfer.MimeTypeParameterList.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) org.apache.commons.math3.linear.ArrayRealVector.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.text.RuleBasedBreakIterator.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.net.Inet6Address$Inet6AddressHolder.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.nio.IntBuffer.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.lang.String.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.java2d.loops.CompositeType.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.util.jar.Attributes$Name.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) javax.swing.text.SimpleAttributeSet$EmptyAttributeSet.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.util.SimpleTimeZone.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) javax.naming.RefAddr.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) javax.naming.Reference.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.security.util.Cache$EqualByteArray.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.security.util.BitArray.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.io.FilePermission.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.util.concurrent.CopyOnWriteArrayList.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.security.x509.DNSName.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.lang.reflect.Method.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.security.pkcs.PKCS8Key.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) javax.print.attribute.AttributeSetUtilities$SynchronizedAttributeSet.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.security.x509.CertificatePolicyId.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.security.x509.DistributionPointName.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) javax.swing.text.StyleContext$SmallAttributeSet.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) javax.security.auth.x500.X500Principal.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.reflect.misc.MethodUtil$Signature.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.awt.DisplayMode.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.security.CodeSigner.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) org.apache.commons.math3.util.BigReal.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.text.DigitList.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) javax.security.auth.Subject.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.net.URI.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.security.x509.X509Key.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.text.SimpleDateFormat.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.lang.StackTraceElement.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.util.Collections$SetFromMap.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.math.BigInteger.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.awt.image.PackedColorModel.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.security.provider.PolicyParser$PrincipalEntry.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.util.BuddhistCalendar.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) org.apache.commons.math3.linear.SparseFieldVector.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) javax.naming.CompositeName.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.awt.AWTKeyStroke.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.security.AllPermission.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) org.apache.commons.math3.util.DefaultTransformer.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.awt.PageAttributes.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.text.NumberFormat.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.net.SocketPermission.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization$DataRow.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.awt.datatransfer.DataFlavor.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) javax.print.attribute.standard.MediaPrintableArea.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.nio.DoubleBuffer.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.lang.Float.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.lang.reflect.Field.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.util.EnumMap$EntryIterator$Entry.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.awt.RenderingHints$Key.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.util.IdentityHashMap.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.security.CodeSource.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) javax.print.MimeType.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.nio.LongBuffer.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) javax.sound.sampled.AudioFileFormat$Type.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.awt.image.MultiPixelPackedSampleModel.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.font.AttributeValues.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.security.krb5.KrbException.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.font.FontDesignMetrics$MetricsKey.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.util.JapaneseImperialCalendar.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) javax.crypto.spec.SecretKeySpec.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.lang.reflect.WeakCache$CacheValue.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.util.calendar.CalendarDate.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.security.krb5.internal.KRBError.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.security.util.DerValue.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) org.apache.commons.math3.analysis.polynomials.PolynomialFunction.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.security.krb5.internal.HostAddress.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.nio.fs.UnixFileKey.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.awt.Rectangle.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.nio.file.attribute.FileTime$DaysAndNanos.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$JacobiKey.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.lang.Thread$WeakClassKey.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.net.URL.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) org.apache.commons.math3.complex.Quaternion.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.net.HttpCookie.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) org.apache.commons.math3.linear.ArrayFieldVector.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.nio.ShortBuffer.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.security.x509.X509CRLImpl$X509IssuerSerial.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) javax.security.auth.kerberos.KeyImpl.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) javax.sound.sampled.LineEvent$Type.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) javax.sound.sampled.Control$Type.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.net.NetworkInterface.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.awt.geom.Arc2D.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) javax.print.attribute.HashAttributeSet.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics$AggregatingSummaryStatistics.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.util.Collections$CheckedMap$CheckedEntrySet.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.security.provider.PolicyFile$SelfPermission.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.java2d.pipe.Region.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.nio.CharBuffer.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.lang.Object.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.util.RegularEnumSet.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.awt.MenuShortcut.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.util.Locale$LocaleKey.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) javax.swing.text.DefaultCaret.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.awt.font.NumericShaper.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.util.Collections$CheckedSet.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.awt.image.ColorModel.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.lang.Integer.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) org.apache.commons.math3.fraction.BigFraction.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.awt.Dimension.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.reflect.generics.reflectiveObjects.TypeVariableImpl.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) org.apache.commons.math3.util.Decimal64.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) org.apache.commons.math3.optimization.linear.LinearObjectiveFunction.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.security.x509.X509CertInfo.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.awt.BasicStroke.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) org.apache.commons.math3.dfp.Dfp.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) javax.print.MimeType$ParameterMapEntry.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.awt.OSInfo$WindowsVersion.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.awt.Color.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) javax.sound.sampled.Mixer$Info.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.security.Provider$UString.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.lang.reflect.Proxy$KeyX.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.nio.FloatBuffer.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.text.RuleBasedCollator.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) org.apache.commons.math3.linear.OpenMapRealVector.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.security.krb5.Realm.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.font.Decoration$DecorationImpl.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.lang.Byte.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.lang.Double.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.security.cert.Certificate.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.lang.Boolean.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.security.x509.PolicyInformation.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.misc.Signal.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) com.sun.beans.WildcardTypeImpl.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.util.Collections$EmptyList.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.awt.font.TextHitInfo.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.nio.ch.FileKey.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.font.FontLineMetrics.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) org.apache.commons.math3.optimization.linear.LinearConstraint.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) org.apache.commons.math3.ml.clustering.DoublePoint.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.net.Inet6Address.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.security.x509.OtherName.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.util.PreHashedMap$2$1$1.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.util.TreeMap$Entry.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) javax.sound.midi.MidiDevice$Info.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.util.Collections$UnmodifiableSet.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.lang.reflect.Proxy$Key1.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.security.provider.PolicyParser$PermissionEntry.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.io.ObjectStreamClass$FieldReflectorKey.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.nio.ch.Util$2.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.lang.reflect.WeakCache$CacheKey.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.awt.geom.AffineTransform.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) sun.util.calendar.ImmutableGregorianDate.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.equals(java.lang.Object) java.security.Provider$ServiceKey.equals(java.lang.Object)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator.access$500(org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,double,double[]) org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator.evaluate(org.apache.commons.math3.analysis.differentiation.DerivativeStructure,double,double[])
org.apache.commons.math3.optimization.linear.LinearObjectiveFunction.hashCode() java.lang.Object.clinit()
org.apache.commons.math3.optimization.linear.LinearObjectiveFunction.hashCode() org.apache.commons.math3.linear.OpenMapRealVector.hashCode()
org.apache.commons.math3.optimization.linear.LinearObjectiveFunction.hashCode() org.apache.commons.math3.linear.RealVector.hashCode()
org.apache.commons.math3.optimization.linear.LinearObjectiveFunction.hashCode() java.lang.Double.valueOf(double)
org.apache.commons.math3.optimization.linear.LinearObjectiveFunction.hashCode() org.apache.commons.math3.linear.ArrayRealVector.hashCode()
org.apache.commons.math3.optimization.linear.LinearObjectiveFunction.hashCode() java.lang.Double.clinit()
org.apache.commons.math3.optimization.linear.LinearObjectiveFunction.hashCode() java.lang.Double.hashCode()
org.apache.commons.math3.analysis.function.HarmonicOscillator$Parametric.validateParameters(double[]) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.HarmonicOscillator$Parametric.validateParameters(double[]) org.apache.commons.math3.exception.DimensionMismatchException(int,int)
org.apache.commons.math3.analysis.function.HarmonicOscillator$Parametric.validateParameters(double[]) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.analysis.function.HarmonicOscillator$Parametric.validateParameters(double[]) java.lang.Throwable.clinit()
org.apache.commons.math3.analysis.function.HarmonicOscillator$Parametric.validateParameters(double[]) org.apache.commons.math3.exception.NullArgumentException()
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getSum() org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getSum()
org.apache.commons.math3.stat.descriptive.rank.Percentile.evaluate(double[],int,int,double) org.apache.commons.math3.exception.OutOfRangeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number)
org.apache.commons.math3.stat.descriptive.rank.Percentile.evaluate(double[],int,int,double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.stat.descriptive.rank.Percentile.evaluate(double[],int,int,double) org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.getDataRef()
org.apache.commons.math3.stat.descriptive.rank.Percentile.evaluate(double[],int,int,double) org.apache.commons.math3.util.FastMath.floor(double)
org.apache.commons.math3.stat.descriptive.rank.Percentile.evaluate(double[],int,int,double) org.apache.commons.math3.stat.descriptive.rank.Percentile.select(double[],int[],int)
org.apache.commons.math3.stat.descriptive.rank.Percentile.evaluate(double[],int,int,double) java.lang.Throwable.clinit()
org.apache.commons.math3.stat.descriptive.rank.Percentile.evaluate(double[],int,int,double) java.lang.Integer.clinit()
org.apache.commons.math3.stat.descriptive.rank.Percentile.evaluate(double[],int,int,double) java.lang.System.clinit()
org.apache.commons.math3.stat.descriptive.rank.Percentile.evaluate(double[],int,int,double) java.lang.Object.clinit()
org.apache.commons.math3.stat.descriptive.rank.Percentile.evaluate(double[],int,int,double) java.lang.Double.valueOf(double)
org.apache.commons.math3.stat.descriptive.rank.Percentile.evaluate(double[],int,int,double) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.stat.descriptive.rank.Percentile.evaluate(double[],int,int,double) java.lang.System.arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org.apache.commons.math3.stat.descriptive.rank.Percentile.evaluate(double[],int,int,double) java.util.Arrays.fill(int[],int)
org.apache.commons.math3.stat.descriptive.rank.Percentile.evaluate(double[],int,int,double) org.apache.commons.math3.exception.util.LocalizedFormats.clinit()
org.apache.commons.math3.stat.descriptive.rank.Percentile.evaluate(double[],int,int,double) java.util.Arrays.clinit()
org.apache.commons.math3.stat.descriptive.rank.Percentile.evaluate(double[],int,int,double) java.lang.Double.clinit()
org.apache.commons.math3.stat.descriptive.rank.Percentile.evaluate(double[],int,int,double) org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.test(double[],int,int)
org.apache.commons.math3.stat.descriptive.rank.Percentile.evaluate(double[],int,int,double) java.lang.Integer.valueOf(int)
org.apache.commons.math3.stat.descriptive.moment.SecondMoment() org.apache.commons.math3.stat.descriptive.moment.FirstMoment()
org.apache.commons.math3.distribution.WeibullDistribution.cumulativeProbability(double) java.lang.Object.clinit()
org.apache.commons.math3.distribution.WeibullDistribution.cumulativeProbability(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.distribution.WeibullDistribution.cumulativeProbability(double) org.apache.commons.math3.util.FastMath.pow(double,double)
org.apache.commons.math3.distribution.WeibullDistribution.cumulativeProbability(double) org.apache.commons.math3.util.FastMath.exp(double)
org.apache.commons.math3.optim.linear.LinearObjectiveFunction.equals(java.lang.Object) org.apache.commons.math3.linear.ArrayRealVector.equals(java.lang.Object)
org.apache.commons.math3.optim.linear.LinearObjectiveFunction.equals(java.lang.Object) org.apache.commons.math3.linear.RealVector.equals(java.lang.Object)
org.apache.commons.math3.optim.linear.LinearObjectiveFunction.equals(java.lang.Object) org.apache.commons.math3.linear.OpenMapRealVector.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() sun.text.CompactByteArray.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.awt.geom.AffineTransform.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() sun.security.krb5.internal.KerberosTime.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.util.Hashtable.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() sun.security.krb5.internal.Ticket.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() sun.text.IntHashtable.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.clinit()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() sun.security.util.BitArray.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() com.sun.imageio.plugins.jpeg.DHTMarkerSegment$Htable.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.util.SimpleTimeZone.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.util.IdentityHashMap.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.util.JapaneseImperialCalendar.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() sun.security.krb5.internal.ETypeInfo.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() sun.text.normalizer.NormalizerBase.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.util.Locale.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() sun.security.krb5.internal.TicketFlags.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() sun.java2d.SunGraphics2D.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() sun.security.provider.MD4.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() javax.swing.tree.DefaultTreeSelectionModel.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.awt.print.Paper.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.text.MessageFormat.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.lang.Object.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() javax.swing.text.SimpleAttributeSet.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() javax.swing.ArrayTable.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.text.SimpleDateFormat.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() sun.java2d.loops.FontInfo.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() sun.security.krb5.PrincipalName.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.awt.PageAttributes.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() com.sun.imageio.plugins.png.PNGMetadata.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.util.GregorianCalendar.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() com.sun.imageio.plugins.jpeg.SOFMarkerSegment.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.util.Vector.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() javax.swing.text.ElementIterator.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.net.HttpCookie.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.awt.datatransfer.MimeType.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.awt.RenderingHints.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.text.DateFormatSymbols.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.util.HashSet.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() sun.util.calendar.ImmutableGregorianDate.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() javax.sound.midi.MetaMessage.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() sun.font.FontLineMetrics.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() sun.font.StandardGlyphVector.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.text.AttributedString$AttributedStringIterator.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.text.RuleBasedBreakIterator.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() javax.swing.text.Segment.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.awt.ImageCapabilities.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() sun.security.krb5.internal.LastReqEntry.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() javax.swing.text.StyleContext$SmallAttributeSet.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.text.RuleBasedCollator.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.text.RuleBasedBreakIterator$SafeCharIterator.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() javax.swing.text.ElementIterator$StackItem.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$ICCMarkerSegment.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.awt.geom.Line2D.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.util.ResourceBundle$CacheKey.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumbJPEG.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() sun.security.krb5.internal.ETypeInfo2.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.awt.font.TextMeasurer.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.util.LinkedList.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() sun.font.AttributeValues.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() javax.swing.text.StyledEditorKit$1.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.util.ArrayDeque.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() javax.swing.text.GlyphView.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.awt.datatransfer.DataFlavor.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() sun.security.krb5.internal.PAData.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() javax.swing.AbstractAction.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() sun.text.normalizer.ReplaceableUCharacterIterator.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.util.concurrent.CopyOnWriteArrayList.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumb.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.awt.geom.Point2D.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() javax.swing.text.html.OptionListModel.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() sun.security.krb5.internal.AuthorizationDataEntry.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() javax.swing.text.EditorKit.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() javax.swing.text.StyledEditorKit.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() com.sun.imageio.plugins.jpeg.DQTMarkerSegment.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.util.JumboEnumSet.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() sun.security.krb5.internal.HostAddresses.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() javax.crypto.Mac.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() javax.naming.Reference.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() com.sun.imageio.plugins.jpeg.SOSMarkerSegment.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.util.jar.Manifest.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() sun.security.krb5.EncryptedData.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.text.NumberFormat.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() sun.net.ProgressSource.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.util.EnumSet.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() sun.net.www.protocol.http.AuthenticationInfo.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.awt.datatransfer.MimeTypeParameterList.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.util.regex.Pattern$CharPropertyNames$CloneableProperty.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.security.SignatureSpi.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() sun.security.x509.GeneralSubtrees.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.util.ArrayList.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() com.sun.imageio.plugins.jpeg.DHTMarkerSegment.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() javax.naming.CompositeName.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.awt.font.CharArrayIterator.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.security.Signature$Delegate.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.util.TreeSet.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.util.Hashtable$Entry.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.awt.image.ImageFilter.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() com.sun.imageio.plugins.jpeg.SOSMarkerSegment$ScanComponentSpec.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.awt.geom.Path2D$Float.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() sun.security.krb5.EncryptionKey.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.text.DecimalFormat.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.awt.BufferCapabilities.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.awt.image.Kernel.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.util.Date.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.awt.Insets.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() sun.net.www.MimeEntry.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() sun.util.calendar.CalendarDate.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.awt.print.PageFormat.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() com.sun.imageio.plugins.jpeg.SOFMarkerSegment$ComponentSpec.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.util.EnumMap.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() sun.security.krb5.internal.AuthorizationData.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFExtensionMarkerSegment.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.awt.geom.QuadCurve2D.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() sun.security.krb5.internal.crypto.crc32.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.util.zip.ZipEntry.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.security.MessageDigest$Delegate.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() sun.util.calendar.ZoneInfo.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() sun.text.normalizer.CharacterIteratorWrapper.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.lang.Object.clinit()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.text.DecimalFormatSymbols.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.awt.font.TextLayout.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() javax.swing.DefaultListSelectionModel.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.text.DigitList.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() javax.print.attribute.EnumSyntax.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() javax.sound.midi.ShortMessage.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.awt.geom.CubicCurve2D.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.text.ChoiceFormat.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.lang.Thread.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() com.sun.imageio.plugins.jpeg.MarkerSegment.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.awt.image.renderable.RenderContext.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() sun.security.krb5.Realm.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() com.sun.imageio.plugins.jpeg.DQTMarkerSegment$Qtable.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.awt.JobAttributes.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() com.sun.imageio.plugins.jpeg.JPEGMetadata.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.text.StringCharacterIterator.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.awt.geom.Dimension2D.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() sun.security.x509.NameConstraintsExtension.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.awt.geom.Area.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.util.jar.Attributes.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() sun.security.krb5.internal.HostAddress.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.util.TreeMap.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.awt.geom.Path2D$Double.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.text.BreakIterator.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.util.BitSet.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.lang.Enum.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.util.AbstractMap.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() javax.swing.tree.DefaultMutableTreeNode.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.awt.geom.RectangularShape.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() sun.security.provider.PolicyParser$GrantEntry.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() java.util.HashMap.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.clone()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values() javax.swing.text.html.HTMLEditorKit.clone()
org.apache.commons.math3.linear.RealVector$2.dotProduct(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVector.dotProduct(org.apache.commons.math3.linear.RealVector)
org.apache.commons.math3.linear.RealVector$2.dotProduct(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVector$2.dotProduct(org.apache.commons.math3.linear.RealVector)
org.apache.commons.math3.linear.RealVector$2.dotProduct(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.ArrayRealVector.dotProduct(org.apache.commons.math3.linear.RealVector)
org.apache.commons.math3.stat.descriptive.moment.FirstMoment() org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic()
org.apache.commons.math3.analysis.function.Log.value(double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Log.value(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.function.Log.value(double) org.apache.commons.math3.util.FastMath.log(double)
org.apache.commons.math3.fitting.AbstractCurveFitter$TheoreticalValuesFunction$1.value(double[]) org.apache.commons.math3.fitting.GaussianCurveFitter$1.value(double,double[])
org.apache.commons.math3.fitting.AbstractCurveFitter$TheoreticalValuesFunction$1.value(double[]) org.apache.commons.math3.analysis.function.Gaussian$Parametric.value(double,double[])
org.apache.commons.math3.fitting.AbstractCurveFitter$TheoreticalValuesFunction$1.value(double[]) org.apache.commons.math3.optimization.fitting.GaussianFitter$1.value(double,double[])
org.apache.commons.math3.fitting.AbstractCurveFitter$TheoreticalValuesFunction$1.value(double[]) java.lang.Object.clinit()
org.apache.commons.math3.fitting.AbstractCurveFitter$TheoreticalValuesFunction$1.value(double[]) org.apache.commons.math3.fitting.GaussianFitter$1.value(double,double[])
org.apache.commons.math3.fitting.AbstractCurveFitter$TheoreticalValuesFunction$1.value(double[]) org.apache.commons.math3.analysis.function.Sigmoid$Parametric.value(double,double[])
org.apache.commons.math3.fitting.AbstractCurveFitter$TheoreticalValuesFunction$1.value(double[]) org.apache.commons.math3.analysis.function.HarmonicOscillator$Parametric.value(double,double[])
org.apache.commons.math3.fitting.AbstractCurveFitter$TheoreticalValuesFunction$1.value(double[]) org.apache.commons.math3.fitting.AbstractCurveFitter$TheoreticalValuesFunction.access$100(org.apache.commons.math3.fitting.AbstractCurveFitter$TheoreticalValuesFunction)
org.apache.commons.math3.fitting.AbstractCurveFitter$TheoreticalValuesFunction$1.value(double[]) org.apache.commons.math3.analysis.function.Logistic$Parametric.value(double,double[])
org.apache.commons.math3.fitting.AbstractCurveFitter$TheoreticalValuesFunction$1.value(double[]) org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric.value(double,double[])
org.apache.commons.math3.fitting.AbstractCurveFitter$TheoreticalValuesFunction$1.value(double[]) org.apache.commons.math3.fitting.AbstractCurveFitter$TheoreticalValuesFunction.access$000(org.apache.commons.math3.fitting.AbstractCurveFitter$TheoreticalValuesFunction)
org.apache.commons.math3.fitting.AbstractCurveFitter$TheoreticalValuesFunction$1.value(double[]) org.apache.commons.math3.analysis.function.Logit$Parametric.value(double,double[])
org.apache.commons.math3.linear.ArrayRealVector.clinit() java.lang.Object.clinit()
org.apache.commons.math3.linear.ArrayRealVector.clinit() org.apache.commons.math3.linear.RealVectorFormat.getInstance()
org.apache.commons.math3.linear.ArrayRealVector.clinit() org.apache.commons.math3.linear.ArrayRealVector.clinit()
org.apache.commons.math3.stat.descriptive.rank.Percentile.select(double[],int[],int) org.apache.commons.math3.stat.descriptive.rank.Percentile.partition(double[],int,int,int)
org.apache.commons.math3.stat.descriptive.rank.Percentile.select(double[],int[],int) java.lang.Object.clinit()
org.apache.commons.math3.stat.descriptive.rank.Percentile.select(double[],int[],int) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.stat.descriptive.rank.Percentile.select(double[],int[],int) org.apache.commons.math3.stat.descriptive.rank.Percentile.medianOf3(double[],int,int)
org.apache.commons.math3.stat.descriptive.rank.Percentile.select(double[],int[],int) org.apache.commons.math3.util.FastMath.min(int,int)
org.apache.commons.math3.stat.descriptive.rank.Percentile.select(double[],int[],int) org.apache.commons.math3.stat.descriptive.rank.Percentile.insertionSort(double[],int,int)
org.apache.commons.math3.geometry.partitioning.RegionFactory.access$500(org.apache.commons.math3.geometry.partitioning.RegionFactory,org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.partitioning.RegionFactory.recurseComplement(org.apache.commons.math3.geometry.partitioning.BSPTree)
org.apache.commons.math3.analysis.differentiation.DSCompiler.log(double[],int,double[],int) java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.log(double[],int,double[],int) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.log(double[],int,double[],int) org.apache.commons.math3.analysis.differentiation.DSCompiler.compose(double[],int,double[],double[],int)
org.apache.commons.math3.analysis.differentiation.DSCompiler.log(double[],int,double[],int) org.apache.commons.math3.util.FastMath.log(double)
org.apache.commons.math3.geometry.euclidean.threed.Plane.setFrame() org.apache.commons.math3.geometry.euclidean.threed.Vector3D(double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
org.apache.commons.math3.geometry.euclidean.threed.Plane.setFrame() org.apache.commons.math3.geometry.euclidean.threed.Vector3D.crossProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
org.apache.commons.math3.geometry.euclidean.threed.Plane.setFrame() java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.threed.Plane.setFrame() org.apache.commons.math3.geometry.euclidean.threed.Vector3D.clinit()
org.apache.commons.math3.geometry.euclidean.threed.Plane.setFrame() org.apache.commons.math3.geometry.euclidean.threed.Vector3D.orthogonal()
org.apache.commons.math3.analysis.function.Log.derivative() org.apache.commons.math3.analysis.function.Cbrt.derivative()
org.apache.commons.math3.analysis.function.Log.derivative() org.apache.commons.math3.analysis.function.Minus.derivative()
org.apache.commons.math3.analysis.function.Log.derivative() org.apache.commons.math3.analysis.function.Tanh.derivative()
org.apache.commons.math3.analysis.function.Log.derivative() org.apache.commons.math3.analysis.FunctionUtils.toDifferentiableUnivariateFunction(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction)
org.apache.commons.math3.analysis.function.Log.derivative() org.apache.commons.math3.analysis.function.Expm1.derivative()
org.apache.commons.math3.analysis.function.Log.derivative() org.apache.commons.math3.analysis.function.Power.derivative()
org.apache.commons.math3.analysis.function.Log.derivative() org.apache.commons.math3.analysis.function.Logit.derivative()
org.apache.commons.math3.analysis.function.Log.derivative() org.apache.commons.math3.analysis.function.Sinc.derivative()
org.apache.commons.math3.analysis.function.Log.derivative() org.apache.commons.math3.analysis.function.Constant.derivative()
org.apache.commons.math3.analysis.function.Log.derivative() org.apache.commons.math3.analysis.function.Log10.derivative()
org.apache.commons.math3.analysis.function.Log.derivative() org.apache.commons.math3.analysis.function.Sigmoid.derivative()
org.apache.commons.math3.analysis.function.Log.derivative() org.apache.commons.math3.analysis.function.Acosh.derivative()
org.apache.commons.math3.analysis.function.Log.derivative() org.apache.commons.math3.analysis.function.Exp.derivative()
org.apache.commons.math3.analysis.function.Log.derivative() org.apache.commons.math3.analysis.function.Sinh.derivative()
org.apache.commons.math3.analysis.function.Log.derivative() java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Log.derivative() org.apache.commons.math3.analysis.polynomials.PolynomialFunction.derivative()
org.apache.commons.math3.analysis.function.Log.derivative() org.apache.commons.math3.analysis.function.Gaussian.derivative()
org.apache.commons.math3.analysis.function.Log.derivative() org.apache.commons.math3.analysis.function.Atanh.derivative()
org.apache.commons.math3.analysis.function.Log.derivative() org.apache.commons.math3.analysis.function.Sqrt.derivative()
org.apache.commons.math3.analysis.function.Log.derivative() org.apache.commons.math3.analysis.FunctionUtils$3.derivative()
org.apache.commons.math3.analysis.function.Log.derivative() org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.derivative()
org.apache.commons.math3.analysis.function.Log.derivative() org.apache.commons.math3.analysis.function.Log1p.derivative()
org.apache.commons.math3.analysis.function.Log.derivative() org.apache.commons.math3.analysis.function.Asin.derivative()
org.apache.commons.math3.analysis.function.Log.derivative() org.apache.commons.math3.analysis.function.Cos.derivative()
org.apache.commons.math3.analysis.function.Log.derivative() org.apache.commons.math3.analysis.function.Asinh.derivative()
org.apache.commons.math3.analysis.function.Log.derivative() org.apache.commons.math3.analysis.function.Tan.derivative()
org.apache.commons.math3.analysis.function.Log.derivative() org.apache.commons.math3.analysis.FunctionUtils$6.derivative()
org.apache.commons.math3.analysis.function.Log.derivative() org.apache.commons.math3.analysis.function.Log.derivative()
org.apache.commons.math3.analysis.function.Log.derivative() org.apache.commons.math3.analysis.function.Atan.derivative()
org.apache.commons.math3.analysis.function.Log.derivative() org.apache.commons.math3.analysis.function.Acos.derivative()
org.apache.commons.math3.analysis.function.Log.derivative() org.apache.commons.math3.analysis.FunctionUtils$14.derivative()
org.apache.commons.math3.analysis.function.Log.derivative() org.apache.commons.math3.analysis.function.Identity.derivative()
org.apache.commons.math3.analysis.function.Log.derivative() org.apache.commons.math3.analysis.function.Cosh.derivative()
org.apache.commons.math3.analysis.function.Log.derivative() org.apache.commons.math3.analysis.FunctionUtils$9.derivative()
org.apache.commons.math3.analysis.function.Log.derivative() org.apache.commons.math3.analysis.function.Logistic.derivative()
org.apache.commons.math3.analysis.function.Log.derivative() org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative()
org.apache.commons.math3.analysis.function.Log.derivative() org.apache.commons.math3.analysis.function.Inverse.derivative()
org.apache.commons.math3.analysis.function.Log.derivative() org.apache.commons.math3.analysis.function.Sin.derivative()
org.apache.commons.math3.stat.Frequency.getCumFreq(long) java.lang.Object.clinit()
org.apache.commons.math3.stat.Frequency.getCumFreq(long) java.lang.Long.valueOf(long)
org.apache.commons.math3.stat.Frequency.getCumFreq(long) org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable)
org.apache.commons.math3.stat.Frequency.getCumFreq(long) java.lang.Long.clinit()
org.apache.commons.math3.util.FastMath.atan(double,double,boolean) java.lang.Object.clinit()
org.apache.commons.math3.util.FastMath.atan(double,double,boolean) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.util.FastMath.atan(double,double,boolean) org.apache.commons.math3.util.FastMath.copySign(double,double)
org.apache.commons.math3.analysis.function.Tan.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.tan()
org.apache.commons.math3.analysis.function.Min.value(double,double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Min.value(double,double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.function.Min.value(double,double) org.apache.commons.math3.util.FastMath.min(double,double)
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.hashCode() org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getGeometricMean()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.hashCode() org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getMean()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.hashCode() org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getGeometricMean()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.hashCode() org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getCovariance()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.hashCode() java.lang.Object.hashCode()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.hashCode() org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getSumSq()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.hashCode() org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getSum()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.hashCode() org.apache.commons.math3.util.MathUtils.hash(double)
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.hashCode() org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getMin()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.hashCode() org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getSumLog()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.hashCode() org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getMax()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.hashCode() org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getMin()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.hashCode() org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getMax()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.hashCode() java.lang.Object.clinit()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.hashCode() org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getMean()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.hashCode() org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getSumLog()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.hashCode() org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getSumSq()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.hashCode() org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getCovariance()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.hashCode() org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getN()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.hashCode() org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getN()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.hashCode() org.apache.commons.math3.linear.AbstractRealMatrix.hashCode()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.hashCode() org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getSum()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.hashCode() org.apache.commons.math3.util.MathUtils.hash(double[])
org.apache.commons.math3.optim.BaseOptimizer.incrementEvaluationCount() org.apache.commons.math3.util.Incrementor.incrementCount()
org.apache.commons.math3.fraction.Fraction.toString() java.lang.Object.clinit()
org.apache.commons.math3.fraction.Fraction.toString() java.lang.Integer.toString(int)
org.apache.commons.math3.fraction.Fraction.toString() java.lang.StringBuilder()
org.apache.commons.math3.fraction.Fraction.toString() java.lang.Integer.clinit()
org.apache.commons.math3.fraction.Fraction.toString() java.lang.StringBuilder.append(java.lang.String)
org.apache.commons.math3.fraction.Fraction.toString() java.lang.StringBuilder.toString()
org.apache.commons.math3.fraction.Fraction.toString() java.lang.StringBuilder.append(int)
org.apache.commons.math3.util.FastMath.cosh(double) java.lang.Object.clinit()
org.apache.commons.math3.util.FastMath.cosh(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.util.FastMath.cosh(double) org.apache.commons.math3.util.FastMath.exp(double)
org.apache.commons.math3.util.FastMath.cosh(double) org.apache.commons.math3.util.FastMath.exp(double,double,double[])
org.apache.commons.math3.linear.AbstractFieldMatrix.hashCode() org.apache.commons.math3.util.Decimal64.hashCode()
org.apache.commons.math3.linear.AbstractFieldMatrix.hashCode() org.apache.commons.math3.linear.Array2DRowFieldMatrix.getRowDimension()
org.apache.commons.math3.linear.AbstractFieldMatrix.hashCode() org.apache.commons.math3.util.BigReal.hashCode()
org.apache.commons.math3.linear.AbstractFieldMatrix.hashCode() org.apache.commons.math3.linear.BlockFieldMatrix.getRowDimension()
org.apache.commons.math3.linear.AbstractFieldMatrix.hashCode() java.lang.Object.hashCode()
org.apache.commons.math3.linear.AbstractFieldMatrix.hashCode() org.apache.commons.math3.linear.Array2DRowFieldMatrix.getColumnDimension()
org.apache.commons.math3.linear.AbstractFieldMatrix.hashCode() org.apache.commons.math3.linear.BlockFieldMatrix.getColumnDimension()
org.apache.commons.math3.linear.AbstractFieldMatrix.hashCode() org.apache.commons.math3.linear.SparseFieldMatrix.getEntry(int,int)
org.apache.commons.math3.linear.AbstractFieldMatrix.hashCode() org.apache.commons.math3.linear.BlockFieldMatrix.getEntry(int,int)
org.apache.commons.math3.linear.AbstractFieldMatrix.hashCode() org.apache.commons.math3.fraction.BigFraction.hashCode()
org.apache.commons.math3.linear.AbstractFieldMatrix.hashCode() org.apache.commons.math3.linear.SparseFieldMatrix.getColumnDimension()
org.apache.commons.math3.linear.AbstractFieldMatrix.hashCode() org.apache.commons.math3.linear.SparseFieldMatrix.getRowDimension()
org.apache.commons.math3.linear.AbstractFieldMatrix.hashCode() org.apache.commons.math3.dfp.Dfp.hashCode()
org.apache.commons.math3.linear.AbstractFieldMatrix.hashCode() org.apache.commons.math3.linear.Array2DRowFieldMatrix.getEntry(int,int)
org.apache.commons.math3.linear.AbstractFieldMatrix.hashCode() org.apache.commons.math3.fraction.Fraction.hashCode()
org.apache.commons.math3.linear.AbstractFieldMatrix.hashCode() org.apache.commons.math3.analysis.differentiation.DerivativeStructure.hashCode()
org.apache.commons.math3.linear.AbstractFieldMatrix.hashCode() org.apache.commons.math3.complex.Complex.hashCode()
org.apache.commons.math3.stat.descriptive.moment.Mean.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.summary.Sum.evaluate(double[],int,int)
org.apache.commons.math3.stat.descriptive.moment.Mean.evaluate(double[],int,int) java.lang.Object.clinit()
org.apache.commons.math3.stat.descriptive.moment.Mean.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.summary.Sum()
org.apache.commons.math3.stat.descriptive.moment.Mean.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.test(double[],int,int)
org.apache.commons.math3.analysis.function.Exp.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.exp()
org.apache.commons.math3.ode.ParameterJacobianWrapper(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,org.apache.commons.math3.ode.ParameterizedODE,org.apache.commons.math3.ode.ParameterConfiguration[]) java.util.Collections$UnmodifiableMap.put(java.lang.Object,java.lang.Object)
org.apache.commons.math3.ode.ParameterJacobianWrapper(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,org.apache.commons.math3.ode.ParameterizedODE,org.apache.commons.math3.ode.ParameterConfiguration[]) java.security.Provider.put(java.lang.Object,java.lang.Object)
org.apache.commons.math3.ode.ParameterJacobianWrapper(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,org.apache.commons.math3.ode.ParameterizedODE,org.apache.commons.math3.ode.ParameterConfiguration[]) org.apache.commons.math3.ode.ParameterConfiguration.getParameterName()
org.apache.commons.math3.ode.ParameterJacobianWrapper(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,org.apache.commons.math3.ode.ParameterizedODE,org.apache.commons.math3.ode.ParameterConfiguration[]) java.awt.RenderingHints.put(java.lang.Object,java.lang.Object)
org.apache.commons.math3.ode.ParameterJacobianWrapper(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,org.apache.commons.math3.ode.ParameterizedODE,org.apache.commons.math3.ode.ParameterConfiguration[]) java.lang.Object.clinit()
org.apache.commons.math3.ode.ParameterJacobianWrapper(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,org.apache.commons.math3.ode.ParameterizedODE,org.apache.commons.math3.ode.ParameterConfiguration[]) sun.awt.FontConfiguration$PropertiesHandler$FontProperties.put(java.lang.Object,java.lang.Object)
org.apache.commons.math3.ode.ParameterJacobianWrapper(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,org.apache.commons.math3.ode.ParameterizedODE,org.apache.commons.math3.ode.ParameterConfiguration[]) java.util.Collections$CheckedMap.put(java.lang.Object,java.lang.Object)
org.apache.commons.math3.ode.ParameterJacobianWrapper(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,org.apache.commons.math3.ode.ParameterizedODE,org.apache.commons.math3.ode.ParameterConfiguration[]) java.lang.Double.valueOf(double)
org.apache.commons.math3.ode.ParameterJacobianWrapper(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,org.apache.commons.math3.ode.ParameterizedODE,org.apache.commons.math3.ode.ParameterConfiguration[]) javax.swing.UIDefaults.put(java.lang.Object,java.lang.Object)
org.apache.commons.math3.ode.ParameterJacobianWrapper(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,org.apache.commons.math3.ode.ParameterizedODE,org.apache.commons.math3.ode.ParameterConfiguration[]) java.util.AbstractMap.put(java.lang.Object,java.lang.Object)
org.apache.commons.math3.ode.ParameterJacobianWrapper(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,org.apache.commons.math3.ode.ParameterizedODE,org.apache.commons.math3.ode.ParameterConfiguration[]) java.util.Hashtable.put(java.lang.Object,java.lang.Object)
org.apache.commons.math3.ode.ParameterJacobianWrapper(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,org.apache.commons.math3.ode.ParameterizedODE,org.apache.commons.math3.ode.ParameterConfiguration[]) java.util.HashMap.put(java.lang.Object,java.lang.Object)
org.apache.commons.math3.ode.ParameterJacobianWrapper(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,org.apache.commons.math3.ode.ParameterizedODE,org.apache.commons.math3.ode.ParameterConfiguration[]) java.util.EnumMap.put(java.lang.Object,java.lang.Object)
org.apache.commons.math3.ode.ParameterJacobianWrapper(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,org.apache.commons.math3.ode.ParameterizedODE,org.apache.commons.math3.ode.ParameterConfiguration[]) java.util.concurrent.ConcurrentHashMap.put(java.lang.Object,java.lang.Object)
org.apache.commons.math3.ode.ParameterJacobianWrapper(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,org.apache.commons.math3.ode.ParameterizedODE,org.apache.commons.math3.ode.ParameterConfiguration[]) java.util.HashMap()
org.apache.commons.math3.ode.ParameterJacobianWrapper(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,org.apache.commons.math3.ode.ParameterizedODE,org.apache.commons.math3.ode.ParameterConfiguration[]) java.lang.Object()
org.apache.commons.math3.ode.ParameterJacobianWrapper(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,org.apache.commons.math3.ode.ParameterizedODE,org.apache.commons.math3.ode.ParameterConfiguration[]) java.util.TreeMap$NavigableSubMap.put(java.lang.Object,java.lang.Object)
org.apache.commons.math3.ode.ParameterJacobianWrapper(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,org.apache.commons.math3.ode.ParameterizedODE,org.apache.commons.math3.ode.ParameterConfiguration[]) java.lang.ProcessEnvironment$StringEnvironment.put(java.lang.Object,java.lang.Object)
org.apache.commons.math3.ode.ParameterJacobianWrapper(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,org.apache.commons.math3.ode.ParameterizedODE,org.apache.commons.math3.ode.ParameterConfiguration[]) java.util.HashMap.clinit()
org.apache.commons.math3.ode.ParameterJacobianWrapper(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,org.apache.commons.math3.ode.ParameterizedODE,org.apache.commons.math3.ode.ParameterConfiguration[]) java.util.WeakHashMap.put(java.lang.Object,java.lang.Object)
org.apache.commons.math3.ode.ParameterJacobianWrapper(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,org.apache.commons.math3.ode.ParameterizedODE,org.apache.commons.math3.ode.ParameterConfiguration[]) sun.font.AttributeMap.put(java.lang.Object,java.lang.Object)
org.apache.commons.math3.ode.ParameterJacobianWrapper(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,org.apache.commons.math3.ode.ParameterizedODE,org.apache.commons.math3.ode.ParameterConfiguration[]) java.util.jar.Attributes.put(java.lang.Object,java.lang.Object)
org.apache.commons.math3.ode.ParameterJacobianWrapper(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,org.apache.commons.math3.ode.ParameterizedODE,org.apache.commons.math3.ode.ParameterConfiguration[]) sun.misc.SoftCache.put(java.lang.Object,java.lang.Object)
org.apache.commons.math3.ode.ParameterJacobianWrapper(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,org.apache.commons.math3.ode.ParameterizedODE,org.apache.commons.math3.ode.ParameterConfiguration[]) sun.util.PreHashedMap.put(java.lang.Object,java.lang.Object)
org.apache.commons.math3.ode.ParameterJacobianWrapper(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,org.apache.commons.math3.ode.ParameterizedODE,org.apache.commons.math3.ode.ParameterConfiguration[]) java.util.Collections$SynchronizedMap.put(java.lang.Object,java.lang.Object)
org.apache.commons.math3.ode.ParameterJacobianWrapper(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,org.apache.commons.math3.ode.ParameterizedODE,org.apache.commons.math3.ode.ParameterConfiguration[]) org.apache.commons.math3.ode.ParameterizedWrapper.isSupported(java.lang.String)
org.apache.commons.math3.ode.ParameterJacobianWrapper(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,org.apache.commons.math3.ode.ParameterizedODE,org.apache.commons.math3.ode.ParameterConfiguration[]) java.lang.Double.clinit()
org.apache.commons.math3.ode.ParameterJacobianWrapper(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,org.apache.commons.math3.ode.ParameterizedODE,org.apache.commons.math3.ode.ParameterConfiguration[]) java.util.TreeMap.put(java.lang.Object,java.lang.Object)
org.apache.commons.math3.ode.ParameterJacobianWrapper(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,org.apache.commons.math3.ode.ParameterizedODE,org.apache.commons.math3.ode.ParameterConfiguration[]) org.apache.commons.math3.ode.ParameterConfiguration.getHP()
org.apache.commons.math3.ode.ParameterJacobianWrapper(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,org.apache.commons.math3.ode.ParameterizedODE,org.apache.commons.math3.ode.ParameterConfiguration[]) java.util.IdentityHashMap.put(java.lang.Object,java.lang.Object)
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) sun.util.PreHashedMap$1$1.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) sun.security.util.ByteArrayTagOrder.compare(java.lang.Object,java.lang.Object)
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) org.apache.commons.math3.stat.Frequency.getCount(java.lang.Comparable)
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) javax.security.auth.Subject$SecureSet$1.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) org.apache.commons.math3.optimization.fitting.GaussianFitter$ParameterGuesser$1.compare(java.lang.Object,java.lang.Object)
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) org.apache.commons.math3.linear.RealVector$SparseEntryIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.concurrent.CopyOnWriteArrayList$COWIterator.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) sun.net.www.MessageHeader$HeaderIterator.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) sun.util.PreHashedMap$2$1.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) org.apache.commons.math3.util.MultidimensionalCounter$Iterator.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) sun.net.www.HeaderParser$ParserIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.concurrent.ArrayBlockingQueue$Itr.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) javax.imageio.ImageIO$ImageWriterIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.JumboEnumSet$EnumSetIterator.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.LinkedList$ListItr.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.ServiceLoader$LazyIterator.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) sun.nio.fs.UnixFileSystem$FileStoreIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.concurrent.DelayQueue$Itr.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) javax.imageio.spi.PartialOrderIterator.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.TreeMap$NavigableSubMap$SubMapKeyIterator.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.concurrent.ConcurrentHashMap$ValueIterator.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.LinkedList$DescendingIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.io.ObjectStreamClass$4.compare(java.lang.Object,java.lang.Object)
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.JumboEnumSet$EnumSetIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.concurrent.ConcurrentHashMap$KeyIterator.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.concurrent.DelayQueue$Itr.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.LinkedList$DescendingIterator.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) sun.util.PreHashedMap$2$1.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.Collections$ReverseComparator.compare(java.lang.Object,java.lang.Object)
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.WeakHashMap$HashIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.LinkedHashMap$EntryIterator.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.IdentityHashMap$KeyIterator.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.awt.font.NumericShaper$1.compare(java.lang.Object,java.lang.Object)
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.IdentityHashMap$ValueIterator.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.AbstractMap$1$1.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer$1.compare(java.lang.Object,java.lang.Object)
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) org.apache.commons.math3.linear.RealVector$2$2.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) com.sun.imageio.plugins.jpeg.ImageTypeIterator.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) javax.imageio.spi.FilterIterator.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.ArrayDeque$DescendingIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.Hashtable$Enumerator.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) org.apache.commons.math3.linear.RealVector$1.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.HashMap$EntryIterator.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) org.apache.commons.math3.geometry.partitioning.AbstractRegion$1.compare(java.lang.Object,java.lang.Object)
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.Collections$CheckedMap$CheckedEntrySet$1.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) sun.security.krb5.internal.ktab.KeyTab$1.compare(java.lang.Object,java.lang.Object)
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) org.apache.commons.math3.util.MultidimensionalCounter$Iterator.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) javax.security.auth.Subject$SecureSet$1.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.Collections$UnmodifiableList$1.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) sun.awt.shell.ShellFolder$3.compare(java.lang.Object,java.lang.Object)
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) sun.nio.cs.FastCharsetProvider$1.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.concurrent.ArrayBlockingQueue$Itr.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.Collections$CheckedList$1.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.Vector$Itr.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) org.apache.commons.math3.optimization.BaseMultivariateVectorMultiStartOptimizer$1.compare(java.lang.Object,java.lang.Object)
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) javax.swing.table.TableRowSorter$ComparableComparator.compare(java.lang.Object,java.lang.Object)
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.ArrayList$SubList$1.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) sun.awt.datatransfer.DataTransferer$IndexOrderComparator.compare(java.lang.Object,java.lang.Object)
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) javax.swing.CompareTabOrderComparator.compare(java.lang.Object,java.lang.Object)
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.text.Collator.compare(java.lang.Object,java.lang.Object)
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.HashMap$ValueIterator.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) sun.misc.ASCIICaseInsensitiveComparator.compare(java.lang.Object,java.lang.Object)
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) sun.misc.SoftCache$EntrySet$1.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) org.apache.commons.math3.optimization.direct.SimplexOptimizer$2.compare(java.lang.Object,java.lang.Object)
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.ArrayList$SubList$1.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.lang.Long.longValue()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.concurrent.CopyOnWriteArrayList$COWIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) sun.java2d.loops.GraphicsPrimitiveMgr$2.compare(java.lang.Object,java.lang.Object)
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.concurrent.ConcurrentHashMap$HashIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.IdentityHashMap$IdentityHashMapIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.lang.ProcessEnvironment$StringEntrySet$1.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) sun.net.www.HeaderParser$ParserIterator.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.concurrent.LinkedBlockingDeque$AbstractItr.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) sun.nio.cs.FastCharsetProvider$1.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.EnumMap$KeyIterator.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) sun.nio.fs.AbstractPath$1.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.LinkedList$ListItr.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.Collections$EmptyIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer$1.compare(java.lang.Object,java.lang.Object)
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.Scanner.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.Collections$CheckedCollection$1.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) javax.imageio.spi.FilterIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.ArrayDeque$DescendingIterator.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.concurrent.ConcurrentHashMap$EntryIterator.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) org.apache.commons.math3.util.CombinatoricsUtils$SingletonIterator.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.LinkedHashMap$KeyIterator.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) javax.swing.LayoutComparator.compare(java.lang.Object,java.lang.Object)
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.concurrent.LinkedBlockingQueue$Itr.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) org.apache.commons.math3.linear.RealVector$2$2.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.Collections$CheckedList$1.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) org.apache.commons.math3.stat.Frequency.getSumFreq()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) javax.imageio.ImageIO$ImageWriterIterator.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.Collections$1.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) org.apache.commons.math3.util.CombinatoricsUtils$LexicographicCombinationIterator.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.concurrent.LinkedBlockingDeque$AbstractItr.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.concurrent.ConcurrentLinkedQueue$Itr.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) org.apache.commons.math3.stat.Frequency$NaturalComparator(org.apache.commons.math3.stat.Frequency$1)
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.ArrayDeque$DeqIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.LinkedHashMap$LinkedHashIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.concurrent.LinkedBlockingQueue$Itr.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) org.apache.commons.math3.stat.Frequency.getCumFreq(long)
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.io.ObjectStreamClass$3.compare(java.lang.Object,java.lang.Object)
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.lang.ProcessEnvironment$StringEntrySet$1.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) sun.util.PreHashedMap$1$1.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.WeakHashMap$EntryIterator.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.lang.ProcessEnvironment$StringValues$1.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) javax.print.MimeType$ParameterMapEntrySetIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) org.apache.commons.math3.ode.AbstractIntegrator$1.compare(java.lang.Object,java.lang.Object)
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$2.compare(java.lang.Object,java.lang.Object)
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.AbstractMap$1$1.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) org.apache.commons.math3.fitting.GaussianFitter$ParameterGuesser$1.compare(java.lang.Object,java.lang.Object)
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) org.apache.commons.math3.util.MathArrays$1.compare(java.lang.Object,java.lang.Object)
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) sun.awt.util.IdentityLinkedList$DescendingIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.lang.ProcessEnvironment$StringKeySet$1.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer$1.compare(java.lang.Object,java.lang.Object)
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.TreeMap$DescendingKeyIterator.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) javax.imageio.ImageIO$ImageReaderIterator.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) javax.imageio.ImageIO$ImageReaderIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.TreeMap$PrivateEntryIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) sun.misc.Service$LazyIterator.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.Scanner.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.WeakHashMap$ValueIterator.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) org.apache.commons.math3.linear.RealVector$SparseEntryIterator.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.IdentityHashMap$EntryIterator.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) sun.awt.geom.AreaOp$1.compare(java.lang.Object,java.lang.Object)
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.PriorityQueue$Itr.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.Hashtable$Enumerator.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.awt.datatransfer.DataFlavor$TextFlavorComparator.compare(java.lang.Object,java.lang.Object)
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.RegularEnumSet$EnumSetIterator.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) javax.print.MimeType$ParameterMapEntrySetIterator.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.WeakHashMap$KeyIterator.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1.compare(java.lang.Object,java.lang.Object)
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) org.apache.commons.math3.util.MathArrays$2.compare(java.lang.Object,java.lang.Object)
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.Collections$CheckedMap$CheckedEntrySet$1.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) org.apache.commons.math3.stat.Frequency.valuesIterator()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.SubList$1.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.Collections$EmptyIterator.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.LinkedHashMap$ValueIterator.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.ServiceLoader$1.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.TreeMap$NavigableSubMap$SubMapEntryIterator.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.TreeMap$ValueIterator.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) org.apache.commons.math3.util.CombinatoricsUtils$LexicographicCombinationIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.AbstractMap$2$1.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.EnumMap$ValueIterator.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) sun.nio.fs.AbstractPath$1.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.lang.ProcessEnvironment$StringValues$1.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) sun.java2d.loops.GraphicsPrimitiveMgr$1.compare(java.lang.Object,java.lang.Object)
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.TreeMap.get(java.lang.Object)
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.TreeMap$EntryIterator.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizer$1.compare(java.lang.Object,java.lang.Object)
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) org.apache.commons.math3.linear.RealVector$1.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) org.apache.commons.math3.util.CombinatoricsUtils$SingletonIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.TreeMap.comparator()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) sun.awt.util.IdentityLinkedList$ListItr.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(java.lang.Object,java.lang.Object)
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.EnumMap$EntryIterator.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.Collections$UnmodifiableList$1.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) org.apache.commons.math3.linear.RealVector$2$1.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.ArrayList$Itr.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.nio.charset.Charset$1.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.Collections$UnmodifiableCollection$1.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) sun.awt.datatransfer.DataTransferer$CharsetComparator.compare(java.lang.Object,java.lang.Object)
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) com.sun.imageio.plugins.jpeg.ImageTypeIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.lang.Integer.longValue()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.TreeMap$KeyIterator.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.lang.String$CaseInsensitiveComparator.compare(java.lang.Object,java.lang.Object)
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.SubList$1.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.lang.ProcessEnvironment$StringKeySet$1.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.Collections$ReverseComparator2.compare(java.lang.Object,java.lang.Object)
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.Collections$UnmodifiableCollection$1.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.RegularEnumSet$EnumSetIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.HashMap$KeyIterator.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) sun.misc.SoftCache$EntrySet$1.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) sun.security.jca.ProviderList$ServiceList$1.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.PriorityQueue$Itr.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.Collections$1.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.ArrayList$Itr.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.EnumMap$EnumMapIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.AbstractMap$2$1.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.ServiceLoader$1.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) javax.imageio.ImageIO$ImageTranscoderIterator.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.TreeMap.lastKey()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) javax.swing.plaf.basic.BasicTreeUI$TreeTransferHandler.compare(java.lang.Object,java.lang.Object)
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) sun.security.jca.ProviderList$ServiceList$1.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.ServiceLoader$LazyIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.Vector$Itr.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.TreeMap.firstKey()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.ArrayDeque$DeqIterator.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.lang.Object.clinit()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) sun.security.x509.AVAComparator.compare(java.lang.Object,java.lang.Object)
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.Collections$CheckedCollection$1.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.AbstractList$Itr.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) org.apache.commons.math3.fitting.GaussianCurveFitter$ParameterGuesser$1.compare(java.lang.Object,java.lang.Object)
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) sun.misc.Service$LazyIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) sun.awt.datatransfer.DataTransferer$DataFlavorComparator.compare(java.lang.Object,java.lang.Object)
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.nio.charset.Charset$1.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) sun.awt.shell.ShellFolder$4.compare(java.lang.Object,java.lang.Object)
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.concurrent.ConcurrentLinkedQueue$Itr.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) sun.net.www.MessageHeader$HeaderIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) sun.nio.fs.UnixFileSystem$FileStoreIterator.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) sun.security.util.ByteArrayLexOrder.compare(java.lang.Object,java.lang.Object)
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) sun.awt.util.IdentityLinkedList$DescendingIterator.next()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) sun.awt.util.IdentityLinkedList$ListItr.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) javax.imageio.spi.PartialOrderIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.TreeMap$NavigableSubMap$SubMapIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) javax.imageio.ImageIO$ImageTranscoderIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.AbstractList$Itr.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.io.ObjectStreamClass$5.compare(java.lang.Object,java.lang.Object)
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) java.util.HashMap$HashIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable) org.apache.commons.math3.linear.RealVector$2$1.hasNext()
org.apache.commons.math3.linear.RealVector$Entry.getValue() org.apache.commons.math3.linear.ArrayRealVector.getEntry(int)
org.apache.commons.math3.linear.RealVector$Entry.getValue() org.apache.commons.math3.linear.OpenMapRealVector.getEntry(int)
org.apache.commons.math3.linear.RealVector$Entry.getValue() org.apache.commons.math3.linear.OpenMapRealVector$OpenMapEntry.getIndex()
org.apache.commons.math3.linear.RealVector$Entry.getValue() org.apache.commons.math3.linear.RealVector$Entry.getIndex()
org.apache.commons.math3.linear.RealVector$Entry.getValue() org.apache.commons.math3.linear.RealVector$2.getEntry(int)
org.apache.commons.math3.analysis.function.Sinh() java.lang.Object()
org.apache.commons.math3.special.Gamma.regularizedGammaP(double,double) java.lang.Object.clinit()
org.apache.commons.math3.special.Gamma.regularizedGammaP(double,double) org.apache.commons.math3.special.Gamma.clinit()
org.apache.commons.math3.special.Gamma.regularizedGammaP(double,double) org.apache.commons.math3.special.Gamma.regularizedGammaP(double,double,double,int)
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer.computeObjectiveGradient(double[]) org.apache.commons.math3.analysis.differentiation.GradientFunction.value(double[])
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer.computeObjectiveGradient(double[]) org.apache.commons.math3.fitting.AbstractCurveFitter$TheoreticalValuesFunction$1.value(double[])
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer.computeObjectiveGradient(double[]) org.apache.commons.math3.analysis.FunctionUtils$19.value(double[])
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer.computeObjectiveGradient(double[]) org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[])
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer.computeObjectiveGradient(double[]) org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[])
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer.computeObjectiveGradient(double[]) org.apache.commons.math3.analysis.FunctionUtils$16$2.value(double[])
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer.computeObjectiveGradient(double[]) org.apache.commons.math3.analysis.FunctionUtils$18.value(double[])
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer.computeObjectiveGradient(double[]) org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[])
org.apache.commons.math3.ode.MultistepIntegrator$1.computeDerivatives(double,double[],double[]) org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(double,double[],double[])
org.apache.commons.math3.ode.MultistepIntegrator$1.computeDerivatives(double,double[],double[]) org.apache.commons.math3.ode.AbstractIntegrator.getExpandable()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) sun.text.CompactByteArray.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.awt.geom.AffineTransform.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) sun.security.krb5.internal.KerberosTime.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.util.Hashtable.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) sun.security.krb5.internal.Ticket.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) sun.text.IntHashtable.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) sun.security.util.BitArray.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) com.sun.imageio.plugins.jpeg.DHTMarkerSegment$Htable.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.util.SimpleTimeZone.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.util.IdentityHashMap.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.util.JapaneseImperialCalendar.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) sun.security.krb5.internal.ETypeInfo.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) sun.text.normalizer.NormalizerBase.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.util.Locale.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) sun.security.krb5.internal.TicketFlags.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) sun.java2d.SunGraphics2D.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) sun.security.provider.MD4.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) javax.swing.tree.DefaultTreeSelectionModel.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.awt.print.Paper.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.text.MessageFormat.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.lang.Object.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) javax.swing.text.SimpleAttributeSet.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) javax.swing.ArrayTable.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.text.SimpleDateFormat.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) sun.java2d.loops.FontInfo.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) sun.security.krb5.PrincipalName.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.awt.PageAttributes.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) com.sun.imageio.plugins.png.PNGMetadata.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.util.GregorianCalendar.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) com.sun.imageio.plugins.jpeg.SOFMarkerSegment.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.util.Vector.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) javax.swing.text.ElementIterator.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.net.HttpCookie.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.awt.datatransfer.MimeType.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.awt.RenderingHints.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.text.DateFormatSymbols.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.util.HashSet.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) sun.util.calendar.ImmutableGregorianDate.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) javax.sound.midi.MetaMessage.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) sun.font.FontLineMetrics.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) sun.font.StandardGlyphVector.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.text.AttributedString$AttributedStringIterator.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.text.RuleBasedBreakIterator.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) javax.swing.text.Segment.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.awt.ImageCapabilities.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) sun.security.krb5.internal.LastReqEntry.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) javax.swing.text.StyleContext$SmallAttributeSet.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.text.RuleBasedCollator.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.text.RuleBasedBreakIterator$SafeCharIterator.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) javax.swing.text.ElementIterator$StackItem.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$ICCMarkerSegment.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.lang.Object()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.awt.geom.Line2D.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.util.ResourceBundle$CacheKey.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumbJPEG.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) sun.security.krb5.internal.ETypeInfo2.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.awt.font.TextMeasurer.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.util.LinkedList.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) sun.font.AttributeValues.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) javax.swing.text.StyledEditorKit$1.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.util.ArrayDeque.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) javax.swing.text.GlyphView.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.awt.datatransfer.DataFlavor.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) sun.security.krb5.internal.PAData.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) javax.swing.AbstractAction.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) sun.text.normalizer.ReplaceableUCharacterIterator.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.util.concurrent.CopyOnWriteArrayList.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumb.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.awt.geom.Point2D.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) javax.swing.text.html.OptionListModel.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) sun.security.krb5.internal.AuthorizationDataEntry.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) javax.swing.text.EditorKit.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) javax.swing.text.StyledEditorKit.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) com.sun.imageio.plugins.jpeg.DQTMarkerSegment.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.util.JumboEnumSet.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) sun.security.krb5.internal.HostAddresses.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) javax.crypto.Mac.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) javax.naming.Reference.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) com.sun.imageio.plugins.jpeg.SOSMarkerSegment.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.util.jar.Manifest.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) sun.security.krb5.EncryptedData.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.text.NumberFormat.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) sun.net.ProgressSource.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.util.EnumSet.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) sun.net.www.protocol.http.AuthenticationInfo.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.awt.datatransfer.MimeTypeParameterList.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.util.regex.Pattern$CharPropertyNames$CloneableProperty.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.security.SignatureSpi.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) sun.security.x509.GeneralSubtrees.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.util.ArrayList.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) com.sun.imageio.plugins.jpeg.DHTMarkerSegment.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) javax.naming.CompositeName.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.awt.font.CharArrayIterator.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.security.Signature$Delegate.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.util.TreeSet.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.util.Hashtable$Entry.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.awt.image.ImageFilter.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) com.sun.imageio.plugins.jpeg.SOSMarkerSegment$ScanComponentSpec.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.awt.geom.Path2D$Float.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) sun.security.krb5.EncryptionKey.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.text.DecimalFormat.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.awt.BufferCapabilities.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.awt.image.Kernel.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.util.Date.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.awt.Insets.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) sun.net.www.MimeEntry.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) sun.util.calendar.CalendarDate.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.awt.print.PageFormat.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) com.sun.imageio.plugins.jpeg.SOFMarkerSegment$ComponentSpec.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.util.EnumMap.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) sun.security.krb5.internal.AuthorizationData.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFExtensionMarkerSegment.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.awt.geom.QuadCurve2D.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) sun.security.krb5.internal.crypto.crc32.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.util.zip.ZipEntry.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.security.MessageDigest$Delegate.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) sun.util.calendar.ZoneInfo.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) sun.text.normalizer.CharacterIteratorWrapper.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.text.DecimalFormatSymbols.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.awt.font.TextLayout.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) javax.swing.DefaultListSelectionModel.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.text.DigitList.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) javax.print.attribute.EnumSyntax.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) javax.sound.midi.ShortMessage.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.awt.geom.CubicCurve2D.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.text.ChoiceFormat.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.lang.Thread.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) com.sun.imageio.plugins.jpeg.MarkerSegment.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.awt.image.renderable.RenderContext.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) sun.security.krb5.Realm.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) com.sun.imageio.plugins.jpeg.DQTMarkerSegment$Qtable.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.awt.JobAttributes.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) com.sun.imageio.plugins.jpeg.JPEGMetadata.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.text.StringCharacterIterator.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.awt.geom.Dimension2D.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) sun.security.x509.NameConstraintsExtension.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.awt.geom.Area.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.util.jar.Attributes.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) sun.security.krb5.internal.HostAddress.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.util.TreeMap.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.awt.geom.Path2D$Double.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.text.BreakIterator.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.util.BitSet.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.lang.Enum.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.util.AbstractMap.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) javax.swing.tree.DefaultMutableTreeNode.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.awt.geom.RectangularShape.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) sun.security.provider.PolicyParser$GrantEntry.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) java.util.HashMap.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.clone()
org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp) javax.swing.text.html.HTMLEditorKit.clone()
org.apache.commons.math3.util.FastMath.cos(double) java.lang.Object.clinit()
org.apache.commons.math3.util.FastMath.cos(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.util.FastMath.cos(double) org.apache.commons.math3.util.FastMath$CodyWaite.getRemB()
org.apache.commons.math3.util.FastMath.cos(double) org.apache.commons.math3.util.FastMath.sinQ(double,double)
org.apache.commons.math3.util.FastMath.cos(double) org.apache.commons.math3.util.FastMath$CodyWaite.getK()
org.apache.commons.math3.util.FastMath.cos(double) org.apache.commons.math3.util.FastMath.reducePayneHanek(double,double[])
org.apache.commons.math3.util.FastMath.cos(double) org.apache.commons.math3.util.FastMath$CodyWaite(double)
org.apache.commons.math3.util.FastMath.cos(double) org.apache.commons.math3.util.FastMath.cosQ(double,double)
org.apache.commons.math3.util.FastMath.cos(double) org.apache.commons.math3.util.FastMath$CodyWaite.getRemA()
org.apache.commons.math3.analysis.function.Constant.derivative() org.apache.commons.math3.analysis.function.Constant(double)
org.apache.commons.math3.analysis.function.Constant.derivative() java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Constant.derivative() org.apache.commons.math3.analysis.function.Constant.derivative()
org.apache.commons.math3.analysis.function.Atan.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.atan()
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerBoundMapper.unboundedToBounded(double) java.lang.Object.clinit()
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerBoundMapper.unboundedToBounded(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerBoundMapper.unboundedToBounded(double) org.apache.commons.math3.util.FastMath.exp(double)
org.apache.commons.math3.linear.MatrixUtils.checkMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int,int) java.lang.Object.clinit()
org.apache.commons.math3.linear.MatrixUtils.checkMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int,int) org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(org.apache.commons.math3.linear.AnyMatrix,int)
org.apache.commons.math3.linear.MatrixUtils.checkMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int,int) org.apache.commons.math3.linear.MatrixUtils.clinit()
org.apache.commons.math3.linear.MatrixUtils.checkMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int,int) org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(org.apache.commons.math3.linear.AnyMatrix,int)
org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(int,int) java.lang.Object.clinit()
org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(int,int) org.apache.commons.math3.linear.BlockRealMatrix(int,int)
org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(int,int) org.apache.commons.math3.linear.Array2DRowRealMatrix(int,int)
org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(int,int) org.apache.commons.math3.linear.AbstractRealMatrix.clinit()
org.apache.commons.math3.util.MultidimensionalCounter.toString() org.apache.commons.math3.util.MultidimensionalCounter.getCount(int[])
org.apache.commons.math3.util.MultidimensionalCounter.toString() java.lang.Object.clinit()
org.apache.commons.math3.util.MultidimensionalCounter.toString() java.lang.StringBuilder()
org.apache.commons.math3.util.MultidimensionalCounter.toString() java.lang.StringBuilder.append(java.lang.String)
org.apache.commons.math3.util.MultidimensionalCounter.toString() java.lang.StringBuilder.append(int)
org.apache.commons.math3.util.MultidimensionalCounter.toString() java.lang.StringBuilder.toString()
org.apache.commons.math3.linear.ArrayRealVector.equals(java.lang.Object) org.apache.commons.math3.linear.RealVector$2.getDimension()
org.apache.commons.math3.linear.ArrayRealVector.equals(java.lang.Object) org.apache.commons.math3.linear.ArrayRealVector.getEntry(int)
org.apache.commons.math3.linear.ArrayRealVector.equals(java.lang.Object) org.apache.commons.math3.linear.OpenMapRealVector.getEntry(int)
org.apache.commons.math3.linear.ArrayRealVector.equals(java.lang.Object) org.apache.commons.math3.linear.RealVector$2.isNaN()
org.apache.commons.math3.linear.ArrayRealVector.equals(java.lang.Object) org.apache.commons.math3.linear.OpenMapRealVector.getDimension()
org.apache.commons.math3.linear.ArrayRealVector.equals(java.lang.Object) org.apache.commons.math3.linear.RealVector$2.getEntry(int)
org.apache.commons.math3.linear.ArrayRealVector.equals(java.lang.Object) org.apache.commons.math3.linear.ArrayRealVector.isNaN()
org.apache.commons.math3.linear.ArrayRealVector.equals(java.lang.Object) org.apache.commons.math3.linear.ArrayRealVector.getDimension()
org.apache.commons.math3.linear.ArrayRealVector.equals(java.lang.Object) org.apache.commons.math3.linear.OpenMapRealVector.isNaN()
org.apache.commons.math3.fitting.GaussianFitter$ParameterGuesser$1.compare(java.lang.Object,java.lang.Object) org.apache.commons.math3.fitting.GaussianFitter$ParameterGuesser$1.compare(org.apache.commons.math3.fitting.WeightedObservedPoint,org.apache.commons.math3.fitting.WeightedObservedPoint)
org.apache.commons.math3.linear.RealMatrixFormat(java.text.NumberFormat) org.apache.commons.math3.linear.RealMatrixFormat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.visitOrder(org.apache.commons.math3.geometry.partitioning.BSPTree) java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.visitOrder(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.clinit()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) sun.util.PreHashedMap$1$1.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) javax.security.auth.Subject$SecureSet$1.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.linear.RealVector$SparseEntryIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.Collections$SingletonList.iterator()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.concurrent.CopyOnWriteArrayList$COWIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) sun.net.www.MessageHeader$HeaderIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) sun.util.PreHashedMap$2$1.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.lang.Double.isInfinite(double)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.util.MultidimensionalCounter$Iterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) sun.net.www.HeaderParser$ParserIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.getHyperplane()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.concurrent.ArrayBlockingQueue$Itr.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) javax.imageio.ImageIO$ImageWriterIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.AbstractSequentialList.iterator()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.JumboEnumSet$EnumSetIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.LinkedList$ListItr.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.ServiceLoader$LazyIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) sun.nio.fs.UnixFileSystem$FileStoreIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.concurrent.DelayQueue$Itr.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) javax.imageio.spi.PartialOrderIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.TreeMap$NavigableSubMap$SubMapKeyIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.concurrent.ConcurrentHashMap$ValueIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.LinkedList$DescendingIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.JumboEnumSet$EnumSetIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.concurrent.ConcurrentHashMap$KeyIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.concurrent.DelayQueue$Itr.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.LinkedList$DescendingIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) sun.util.PreHashedMap$2$1.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.WeakHashMap$HashIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.IdentityHashMap$KeyIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.LinkedHashMap$EntryIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.geometry.euclidean.oned.Interval.getInf()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.IdentityHashMap$ValueIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.ArrayList$SubList.iterator()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.AbstractMap$1$1.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.linear.RealVector$2$2.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) com.sun.imageio.plugins.jpeg.ImageTypeIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) javax.imageio.spi.FilterIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.ArrayDeque$DescendingIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.Hashtable$Enumerator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.linear.RealVector$1.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.HashMap$EntryIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.Collections$CheckedMap$CheckedEntrySet$1.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.util.MultidimensionalCounter$Iterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) javax.security.auth.Subject$SecureSet$1.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.concurrent.CopyOnWriteArrayList$COWSubList.iterator()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.Collections$UnmodifiableList$1.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.geometry.euclidean.oned.Vector1D.clinit()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) sun.nio.cs.FastCharsetProvider$1.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.concurrent.ArrayBlockingQueue$Itr.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.Collections$CheckedList$1.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.Vector$Itr.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.ArrayList$SubList$1.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.Collections$UnmodifiableCollection.iterator()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.HashMap$ValueIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) sun.misc.SoftCache$EntrySet$1.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.getRemainingRegion()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ComparableSegment(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Line)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.ArrayList$SubList$1.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.concurrent.CopyOnWriteArrayList$COWIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.concurrent.ConcurrentHashMap$HashIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.IdentityHashMap$IdentityHashMapIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.lang.ProcessEnvironment$StringEntrySet$1.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.lang.Double.clinit()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) sun.net.www.HeaderParser$ParserIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.concurrent.LinkedBlockingDeque$AbstractItr.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) sun.nio.cs.FastCharsetProvider$1.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) sun.nio.fs.AbstractPath$1.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.EnumMap$KeyIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.LinkedList$ListItr.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.Collections$EmptyIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.Scanner.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) javax.imageio.spi.FilterIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.Collections$CheckedCollection$1.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.ArrayDeque$DescendingIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.concurrent.ConcurrentHashMap$EntryIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.util.CombinatoricsUtils$SingletonIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.LinkedHashMap$KeyIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.concurrent.LinkedBlockingQueue$Itr.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.linear.RealVector$2$2.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.Collections$CheckedList$1.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.ArrayList.iterator()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) javax.imageio.ImageIO$ImageWriterIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.Collections$EmptyList.iterator()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.Collections$1.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.util.CombinatoricsUtils$LexicographicCombinationIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.concurrent.LinkedBlockingDeque$AbstractItr.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.concurrent.ConcurrentLinkedQueue$Itr.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.ArrayDeque$DeqIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.LinkedHashMap$LinkedHashIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.concurrent.LinkedBlockingQueue$Itr.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.lang.ProcessEnvironment$StringEntrySet$1.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) sun.util.PreHashedMap$1$1.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.lang.ProcessEnvironment$StringValues$1.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.WeakHashMap$EntryIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) javax.print.MimeType$ParameterMapEntrySetIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.insert(java.lang.Comparable)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.AbstractMap$1$1.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) sun.awt.util.IdentityLinkedList$DescendingIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.lang.ProcessEnvironment$StringKeySet$1.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) javax.imageio.ImageIO$ImageReaderIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.TreeMap$DescendingKeyIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.TreeMap$PrivateEntryIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) javax.imageio.ImageIO$ImageReaderIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) sun.misc.Service$LazyIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.Scanner.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.geometry.euclidean.oned.Interval.getSup()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.WeakHashMap$ValueIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.linear.RealVector$SparseEntryIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.IdentityHashMap$EntryIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.Collections$CheckedCollection.iterator()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.PriorityQueue$Itr.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.Hashtable$Enumerator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.RegularEnumSet$EnumSetIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) javax.print.MimeType$ParameterMapEntrySetIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.WeakHashMap$KeyIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.Collections$CheckedMap$CheckedEntrySet$1.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) sun.security.jca.ProviderList$ServiceList.iterator()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.geometry.euclidean.twod.Line.getReverse()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.geometry.euclidean.oned.Vector1D(double)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.SubList$1.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.AbstractList.iterator()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.Collections$SynchronizedCollection.iterator()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.Collections$EmptyIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.LinkedHashMap$ValueIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.ServiceLoader$1.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.TreeMap$ValueIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.TreeMap$NavigableSubMap$SubMapEntryIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.util.CombinatoricsUtils$LexicographicCombinationIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.AbstractMap$2$1.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.EnumMap$ValueIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.lang.ProcessEnvironment$StringValues$1.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) sun.nio.fs.AbstractPath$1.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.SubList.iterator()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.TreeMap$EntryIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.linear.RealVector$1.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.util.CombinatoricsUtils$SingletonIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) sun.awt.util.IdentityLinkedList$ListItr.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.EnumMap$EntryIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.Collections$UnmodifiableList$1.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.linear.RealVector$2$1.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.ArrayList$Itr.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.nio.charset.Charset$1.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.Collections$UnmodifiableCollection$1.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) com.sun.imageio.plugins.jpeg.ImageTypeIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.asList()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.TreeMap$KeyIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.SubList$1.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.lang.ProcessEnvironment$StringKeySet$1.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.Collections$UnmodifiableCollection$1.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.geometry.euclidean.twod.Line.toSpace(org.apache.commons.math3.geometry.Vector)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.RegularEnumSet$EnumSetIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) sun.misc.SoftCache$EntrySet$1.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.HashMap$KeyIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) sun.security.jca.ProviderList$ServiceList$1.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.PriorityQueue$Itr.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.Collections$1.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.ArrayList$Itr.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.EnumMap$EnumMapIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.AbstractMap$2$1.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.ServiceLoader$1.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) javax.imageio.ImageIO$ImageTranscoderIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) sun.security.jca.ProviderList$ServiceList$1.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.ServiceLoader$LazyIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.Vector$Itr.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.ArrayDeque$DeqIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.Collections$CheckedCollection$1.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.AbstractList$Itr.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) sun.misc.Service$LazyIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.nio.charset.Charset$1.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) sun.net.www.MessageHeader$HeaderIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.concurrent.ConcurrentLinkedQueue$Itr.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) sun.nio.fs.UnixFileSystem$FileStoreIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) sun.awt.util.IdentityLinkedList$DescendingIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) sun.awt.util.IdentityLinkedList$ListItr.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.Vector.iterator()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) javax.imageio.spi.PartialOrderIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.TreeMap$NavigableSubMap$SubMapIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) javax.imageio.ImageIO$ImageTranscoderIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.concurrent.CopyOnWriteArrayList.iterator()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.HashMap$HashIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) java.util.AbstractList$Itr.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(org.apache.commons.math3.geometry.partitioning.SubHyperplane,boolean) org.apache.commons.math3.linear.RealVector$2$1.hasNext()
org.apache.commons.math3.util.OpenIntToDoubleHashMap.findInsertionIndex(int[],byte[],int,int) java.lang.Object.clinit()
org.apache.commons.math3.util.OpenIntToDoubleHashMap.findInsertionIndex(int[],byte[],int,int) org.apache.commons.math3.util.OpenIntToDoubleHashMap.hashOf(int)
org.apache.commons.math3.util.OpenIntToDoubleHashMap.findInsertionIndex(int[],byte[],int,int) org.apache.commons.math3.util.OpenIntToDoubleHashMap.perturb(int)
org.apache.commons.math3.util.OpenIntToDoubleHashMap.findInsertionIndex(int[],byte[],int,int) org.apache.commons.math3.util.OpenIntToDoubleHashMap.changeIndexSign(int)
org.apache.commons.math3.util.OpenIntToDoubleHashMap.findInsertionIndex(int[],byte[],int,int) org.apache.commons.math3.util.OpenIntToDoubleHashMap.probe(int,int)
org.apache.commons.math3.linear.SparseFieldVector.checkIndex(int) org.apache.commons.math3.exception.OutOfRangeException(java.lang.Number,java.lang.Number,java.lang.Number)
org.apache.commons.math3.linear.SparseFieldVector.checkIndex(int) java.lang.Object.clinit()
org.apache.commons.math3.linear.SparseFieldVector.checkIndex(int) java.lang.Throwable.clinit()
org.apache.commons.math3.linear.SparseFieldVector.checkIndex(int) java.lang.Integer.clinit()
org.apache.commons.math3.linear.SparseFieldVector.checkIndex(int) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.linear.SparseFieldVector.checkIndex(int) org.apache.commons.math3.linear.SparseFieldVector.getDimension()
org.apache.commons.math3.linear.SparseFieldVector.checkIndex(int) java.lang.Integer.valueOf(int)
org.apache.commons.math3.analysis.differentiation.DSCompiler.compileCompositionIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler,int[][],int[][]) java.util.ArrayList.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.compileCompositionIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler,int[][],int[][]) java.util.ArrayList.size()
org.apache.commons.math3.analysis.differentiation.DSCompiler.compileCompositionIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler,int[][],int[][]) java.util.ArrayList(int)
org.apache.commons.math3.analysis.differentiation.DSCompiler.compileCompositionIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler,int[][],int[][]) org.apache.commons.math3.analysis.differentiation.DSCompiler.convertIndex(int,int,int[][],int,int,int[][])
org.apache.commons.math3.analysis.differentiation.DSCompiler.compileCompositionIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler,int[][],int[][]) java.util.ArrayList.add(java.lang.Object)
org.apache.commons.math3.analysis.differentiation.DSCompiler.compileCompositionIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler,int[][],int[][]) java.util.ArrayList.get(int)
org.apache.commons.math3.analysis.differentiation.DSCompiler.compileCompositionIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler,int[][],int[][]) java.lang.System.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.compileCompositionIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler,int[][],int[][]) java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.compileCompositionIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler,int[][],int[][]) java.lang.System.arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org.apache.commons.math3.analysis.differentiation.DSCompiler.compileCompositionIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler,int[][],int[][]) java.util.ArrayList()
org.apache.commons.math3.analysis.differentiation.DSCompiler.compileCompositionIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler,int[][],int[][]) java.util.Arrays.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.compileCompositionIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler,int[][],int[][]) java.util.ArrayList.toArray(java.lang.Object[])
org.apache.commons.math3.analysis.differentiation.DSCompiler.compileCompositionIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler,int[][],int[][]) java.util.Arrays.sort(int[],int,int)
org.apache.commons.math3.analysis.differentiation.DSCompiler.compileCompositionIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler,int[][],int[][]) org.apache.commons.math3.analysis.differentiation.DSCompiler.getPartialDerivativeIndex(int,int,int[][],int[])
org.apache.commons.math3.analysis.differentiation.DSCompiler.compileCompositionIndirection(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler,int[][],int[][]) org.apache.commons.math3.analysis.differentiation.DSCompiler.clinit()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getResults(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) org.apache.commons.math3.stat.descriptive.moment.FirstMoment.getResult()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getResults(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) org.apache.commons.math3.stat.descriptive.rank.Max.getResult()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getResults(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) org.apache.commons.math3.stat.descriptive.summary.SumOfLogs.getResult()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getResults(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.getResult()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getResults(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) org.apache.commons.math3.stat.descriptive.summary.SumOfSquares.getResult()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getResults(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) org.apache.commons.math3.stat.descriptive.rank.Min.getResult()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getResults(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) org.apache.commons.math3.stat.descriptive.moment.ThirdMoment.getResult()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getResults(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) org.apache.commons.math3.stat.descriptive.moment.SecondMoment.getResult()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getResults(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) org.apache.commons.math3.stat.descriptive.moment.FourthMoment.getResult()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getResults(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getResult()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getResults(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) org.apache.commons.math3.stat.descriptive.moment.Mean.getResult()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getResults(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) org.apache.commons.math3.stat.descriptive.moment.Skewness.getResult()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getResults(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) org.apache.commons.math3.stat.descriptive.moment.Kurtosis.getResult()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getResults(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) org.apache.commons.math3.stat.descriptive.moment.Variance.getResult()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getResults(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) org.apache.commons.math3.stat.descriptive.summary.Product.getResult()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getResults(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[]) org.apache.commons.math3.stat.descriptive.summary.Sum.getResult()
org.apache.commons.math3.linear.OpenMapRealVector$OpenMapEntry.getIndex() org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.key()
org.apache.commons.math3.geometry.partitioning.RegionFactory$NodesCleaner.visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.partitioning.BSPTree.setAttribute(java.lang.Object)
org.apache.commons.math3.analysis.differentiation.DSCompiler.getPartialDerivativeIndex(int,int,int[][],int[]) java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.getPartialDerivativeIndex(int,int,int[][],int[]) org.apache.commons.math3.exception.NumberIsTooLargeException(java.lang.Number,java.lang.Number,boolean)
org.apache.commons.math3.analysis.differentiation.DSCompiler.getPartialDerivativeIndex(int,int,int[][],int[]) java.lang.Throwable.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.getPartialDerivativeIndex(int,int,int[][],int[]) java.lang.Integer.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.getPartialDerivativeIndex(int,int,int[][],int[]) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.getPartialDerivativeIndex(int,int,int[][],int[]) java.lang.Integer.valueOf(int)
org.apache.commons.math3.fraction.BigFraction.compareTo(java.lang.Object) org.apache.commons.math3.fraction.BigFraction.compareTo(org.apache.commons.math3.fraction.BigFraction)
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.toString() org.apache.commons.math3.stat.descriptive.SummaryStatistics.toString()
org.apache.commons.math3.util.FastMath.sinh(double) java.lang.Object.clinit()
org.apache.commons.math3.util.FastMath.sinh(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.util.FastMath.sinh(double) org.apache.commons.math3.util.FastMath.exp(double)
org.apache.commons.math3.util.FastMath.sinh(double) org.apache.commons.math3.util.FastMath.exp(double,double,double[])
org.apache.commons.math3.util.FastMath.sinh(double) org.apache.commons.math3.util.FastMath.expm1(double,double[])
org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex.compareTo(org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex) java.lang.Object.clinit()
org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex.compareTo(org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex) java.lang.Double.compare(double,double)
org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex.compareTo(org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex) java.lang.Double.clinit()
org.apache.commons.math3.geometry.euclidean.threed.Vector3D(double,double,double) java.lang.Object()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.cosh() org.apache.commons.math3.analysis.differentiation.DSCompiler.cosh(double[],int,double[],int)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.cosh() java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.cosh() org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DSCompiler)
org.apache.commons.math3.ode.JacobianMatrices$MainStateJacobianWrapper.computeMainStateJacobian(double,double[],double[],double[][]) org.apache.commons.math3.ode.FirstOrderConverter.getDimension()
org.apache.commons.math3.ode.JacobianMatrices$MainStateJacobianWrapper.computeMainStateJacobian(double,double[],double[],double[][]) org.apache.commons.math3.ode.MultistepIntegrator$1.computeDerivatives(double,double[],double[])
org.apache.commons.math3.ode.JacobianMatrices$MainStateJacobianWrapper.computeMainStateJacobian(double,double[],double[],double[][]) org.apache.commons.math3.ode.JacobianMatrices$MainStateJacobianWrapper.getDimension()
org.apache.commons.math3.ode.JacobianMatrices$MainStateJacobianWrapper.computeMainStateJacobian(double,double[],double[],double[][]) org.apache.commons.math3.ode.JacobianMatrices$MainStateJacobianWrapper.computeDerivatives(double,double[],double[])
org.apache.commons.math3.ode.JacobianMatrices$MainStateJacobianWrapper.computeMainStateJacobian(double,double[],double[],double[][]) org.apache.commons.math3.ode.MultistepIntegrator$1.getDimension()
org.apache.commons.math3.ode.JacobianMatrices$MainStateJacobianWrapper.computeMainStateJacobian(double,double[],double[],double[][]) org.apache.commons.math3.ode.FirstOrderConverter.computeDerivatives(double,double[],double[])
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Acos.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Ulp.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Sqrt.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Asin.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Rint.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Gaussian.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator.access$200(org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Tan.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.ode.events.EventState$1.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Sinc.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.FunctionUtils$7.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Log1p.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Sin.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Identity.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.FunctionUtils$3.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator.access$100(org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Signum.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.exception.NumberIsTooLargeException(java.lang.Number,java.lang.Number,boolean)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.distribution.AbstractRealDistribution$1.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Exp.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Logit.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Acosh.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.FunctionUtils$2.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator$1.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Log10.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator.access$300(org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.FunctionUtils$1.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.FunctionUtils$12.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.FunctionUtils$8.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Constant.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Atan.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Logistic.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Sinh.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Cosh.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Floor.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Expm1.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Power.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.util.FastMath.min(double,double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Cbrt.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.optimization.direct.PowellOptimizer$LineSearch$1.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getOrder()
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.HarmonicOscillator.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Asinh.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.FunctionUtils$6.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.FunctionUtils$4.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Minus.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.StepFunction.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.FunctionUtils$13.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.FunctionUtils$9.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Tanh.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator.access$500(org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator,org.apache.commons.math3.analysis.differentiation.DerivativeStructure,double,double[])
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getValue()
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Atanh.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Cos.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator.access$000(org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.FunctionUtils$10.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.util.FastMath.max(double,double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.lang.Integer.valueOf(int)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Log.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.lang.Throwable.clinit()
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.lang.Integer.clinit()
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Sigmoid.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Inverse.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator.access$400(org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch$1.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.FunctionUtils$5.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Abs.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.FunctionUtils$15.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Ceil.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.FunctionUtils$14.value(double)
org.apache.commons.math3.geometry.partitioning.Side.clinit() java.lang.Object.clinit()
org.apache.commons.math3.geometry.partitioning.Side.clinit() org.apache.commons.math3.geometry.partitioning.Side.clinit()
org.apache.commons.math3.geometry.partitioning.Side.clinit() org.apache.commons.math3.geometry.partitioning.Side(java.lang.String,int)
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getMean() org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getResults(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])
org.apache.commons.math3.dfp.Dfp.toString() org.apache.commons.math3.dfp.Dfp.dfp2string()
org.apache.commons.math3.dfp.Dfp.toString() org.apache.commons.math3.dfp.Dfp.dfp2sci()
org.apache.commons.math3.dfp.Dfp.newInstance(long) java.lang.Object.clinit()
org.apache.commons.math3.dfp.Dfp.newInstance(long) org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.DfpField,long)
org.apache.commons.math3.dfp.Dfp.newInstance(long) org.apache.commons.math3.dfp.Dfp.getField()
org.apache.commons.math3.stat.descriptive.moment.ThirdMoment.increment(double) org.apache.commons.math3.stat.descriptive.moment.SecondMoment.increment(double)
org.apache.commons.math3.geometry.euclidean.twod.Line.getReverse() java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.twod.Line.getReverse() org.apache.commons.math3.geometry.euclidean.twod.Line(double,double,double,double)
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.computeObjectiveValue(double[]) org.apache.commons.math3.util.Incrementor.incrementCount()
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.computeObjectiveValue(double[]) org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapter.value(double[])
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.computeObjectiveValue(double[]) org.apache.commons.math3.analysis.FunctionUtils$16.value(double[])
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.computeObjectiveValue(double[]) java.lang.Throwable.clinit()
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.computeObjectiveValue(double[]) org.apache.commons.math3.exception.MaxCountExceededException.getMax()
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.computeObjectiveValue(double[]) org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$1.value(double[])
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.computeObjectiveValue(double[]) org.apache.commons.math3.optimization.direct.SimplexOptimizer$1.value(double[])
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.computeObjectiveValue(double[]) org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[])
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.computeObjectiveValue(double[]) org.apache.commons.math3.optim.nonlinear.scalar.LeastSquaresConverter.value(double[])
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.computeObjectiveValue(double[]) org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.value(double[])
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.computeObjectiveValue(double[]) java.lang.Object.clinit()
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.computeObjectiveValue(double[]) org.apache.commons.math3.analysis.FunctionUtils$17.value(double[])
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.computeObjectiveValue(double[]) org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.value(double[])
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.computeObjectiveValue(double[]) org.apache.commons.math3.optim.linear.LinearObjectiveFunction.value(double[])
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.computeObjectiveValue(double[]) org.apache.commons.math3.analysis.FunctionUtils$11.value(double[])
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.computeObjectiveValue(double[]) org.apache.commons.math3.optimization.LeastSquaresConverter.value(double[])
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.computeObjectiveValue(double[]) org.apache.commons.math3.analysis.FunctionUtils$16$1.value(double[])
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.computeObjectiveValue(double[]) org.apache.commons.math3.exception.TooManyEvaluationsException(java.lang.Number)
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.computeObjectiveValue(double[]) org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapter.value(double[])
org.apache.commons.math3.special.Erf.erfc(double) java.lang.Object.clinit()
org.apache.commons.math3.special.Erf.erfc(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.special.Erf.erfc(double) org.apache.commons.math3.special.Gamma.clinit()
org.apache.commons.math3.special.Erf.erfc(double) org.apache.commons.math3.special.Gamma.regularizedGammaQ(double,double,double,int)
org.apache.commons.math3.special.Erf.erfc(double) org.apache.commons.math3.util.FastMath.abs(double)
org.apache.commons.math3.analysis.function.Floor.value(double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Floor.value(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.function.Floor.value(double) org.apache.commons.math3.util.FastMath.floor(double)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.log10() org.apache.commons.math3.analysis.differentiation.DSCompiler.log10(double[],int,double[],int)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.log10() java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.log10() org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DSCompiler)
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.hashCode() java.lang.Object.clinit()
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.hashCode() java.util.Arrays.hashCode(double[])
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.hashCode() java.util.Arrays.clinit()
org.apache.commons.math3.analysis.FunctionUtils$14(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction) java.lang.Object()
org.apache.commons.math3.linear.RealVector.iterator() org.apache.commons.math3.linear.RealVector$2.getDimension()
org.apache.commons.math3.linear.RealVector.iterator() java.lang.Object.clinit()
org.apache.commons.math3.linear.RealVector.iterator() org.apache.commons.math3.linear.OpenMapRealVector.getDimension()
org.apache.commons.math3.linear.RealVector.iterator() org.apache.commons.math3.linear.RealVector$1(org.apache.commons.math3.linear.RealVector,int)
org.apache.commons.math3.linear.RealVector.iterator() org.apache.commons.math3.linear.ArrayRealVector.getDimension()
org.apache.commons.math3.ode.events.FilterType$1.selectTransformer(org.apache.commons.math3.ode.events.Transformer,double,boolean) java.lang.Object.clinit()
org.apache.commons.math3.ode.events.FilterType$1.selectTransformer(org.apache.commons.math3.ode.events.Transformer,double,boolean) java.lang.Enum.ordinal()
org.apache.commons.math3.ode.events.FilterType$1.selectTransformer(org.apache.commons.math3.ode.events.Transformer,double,boolean) java.lang.Throwable.clinit()
org.apache.commons.math3.ode.events.FilterType$1.selectTransformer(org.apache.commons.math3.ode.events.Transformer,double,boolean) org.apache.commons.math3.ode.events.FilterType$3.clinit()
org.apache.commons.math3.ode.events.FilterType$1.selectTransformer(org.apache.commons.math3.ode.events.Transformer,double,boolean) org.apache.commons.math3.exception.MathInternalError()
org.apache.commons.math3.ode.events.FilterType$1.selectTransformer(org.apache.commons.math3.ode.events.Transformer,double,boolean) org.apache.commons.math3.ode.events.Transformer.clinit()
org.apache.commons.math3.genetics.ListPopulation.toString() java.util.Collections$UnmodifiableCollection.toString()
org.apache.commons.math3.genetics.ListPopulation.toString() java.util.Collections$CheckedCollection.toString()
org.apache.commons.math3.genetics.ListPopulation.toString() java.util.Collections$SynchronizedCollection.toString()
org.apache.commons.math3.genetics.ListPopulation.toString() java.lang.Object.toString()
org.apache.commons.math3.genetics.ListPopulation.toString() java.util.Vector.toString()
org.apache.commons.math3.genetics.ListPopulation.toString() java.util.AbstractCollection.toString()
org.apache.commons.math3.genetics.ListPopulation.toString() java.util.concurrent.CopyOnWriteArrayList.toString()
org.apache.commons.math3.analysis.differentiation.DSCompiler.acosh(double[],int,double[],int) java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.acosh(double[],int,double[],int) org.apache.commons.math3.util.FastMath.sqrt(double)
org.apache.commons.math3.analysis.differentiation.DSCompiler.acosh(double[],int,double[],int) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.acosh(double[],int,double[],int) org.apache.commons.math3.analysis.differentiation.DSCompiler.compose(double[],int,double[],double[],int)
org.apache.commons.math3.analysis.differentiation.DSCompiler.acosh(double[],int,double[],int) org.apache.commons.math3.util.FastMath.acosh(double)
org.apache.commons.math3.ode.events.Transformer$5.transformed(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.ode.events.Transformer$5.transformed(double) java.lang.Object.clinit()
org.apache.commons.math3.ode.events.Transformer$5.transformed(double) org.apache.commons.math3.util.Precision.clinit()
org.apache.commons.math3.ode.events.Transformer$5.transformed(double) org.apache.commons.math3.util.FastMath.max(double,double)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.compose(double[]) java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.compose(double[]) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getOrder()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.compose(double[]) org.apache.commons.math3.exception.DimensionMismatchException(int,int)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.compose(double[]) java.lang.Throwable.clinit()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.compose(double[]) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.compose(double[]) org.apache.commons.math3.analysis.differentiation.DSCompiler.compose(double[],int,double[],double[],int)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.compose(double[]) org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DSCompiler)
org.apache.commons.math3.geometry.euclidean.twod.Line(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D) org.apache.commons.math3.geometry.euclidean.twod.Line.reset(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D)
org.apache.commons.math3.geometry.euclidean.twod.Line(org.apache.commons.math3.geometry.euclidean.twod.Vector2D,org.apache.commons.math3.geometry.euclidean.twod.Vector2D) java.lang.Object()
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.isNaN() java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.isNaN() java.lang.Double.isNaN(double)
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.isNaN() java.lang.Double.clinit()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.text.CompactByteArray.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.awt.geom.AffineTransform.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.security.krb5.internal.KerberosTime.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.util.Hashtable.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.security.krb5.internal.Ticket.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.text.IntHashtable.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.security.util.BitArray.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) com.sun.imageio.plugins.jpeg.DHTMarkerSegment$Htable.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.util.SimpleTimeZone.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.util.IdentityHashMap.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.util.JapaneseImperialCalendar.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.security.krb5.internal.ETypeInfo.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.text.normalizer.NormalizerBase.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.util.Locale.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.security.krb5.internal.TicketFlags.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.java2d.SunGraphics2D.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.security.provider.MD4.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) javax.swing.tree.DefaultTreeSelectionModel.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.awt.print.Paper.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.text.MessageFormat.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.lang.Object.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) javax.swing.text.SimpleAttributeSet.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) javax.swing.ArrayTable.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.text.SimpleDateFormat.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.java2d.loops.FontInfo.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.security.krb5.PrincipalName.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.awt.PageAttributes.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) com.sun.imageio.plugins.png.PNGMetadata.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.util.GregorianCalendar.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) com.sun.imageio.plugins.jpeg.SOFMarkerSegment.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.util.Vector.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) javax.swing.text.ElementIterator.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.net.HttpCookie.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.awt.datatransfer.MimeType.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.awt.RenderingHints.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.text.DateFormatSymbols.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.util.HashSet.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.util.calendar.ImmutableGregorianDate.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) javax.sound.midi.MetaMessage.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.font.FontLineMetrics.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.font.StandardGlyphVector.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.text.AttributedString$AttributedStringIterator.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.text.RuleBasedBreakIterator.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) javax.swing.text.Segment.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.awt.ImageCapabilities.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.security.krb5.internal.LastReqEntry.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) javax.swing.text.StyleContext$SmallAttributeSet.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.access$000(org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer,double[])
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.text.RuleBasedCollator.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.text.RuleBasedBreakIterator$SafeCharIterator.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) javax.swing.text.ElementIterator$StackItem.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$ICCMarkerSegment.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.awt.geom.Line2D.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.util.ResourceBundle$CacheKey.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumbJPEG.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.security.krb5.internal.ETypeInfo2.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.awt.font.TextMeasurer.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.util.LinkedList.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.font.AttributeValues.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) javax.swing.text.StyledEditorKit$1.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.util.ArrayDeque.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) javax.swing.text.GlyphView.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.awt.datatransfer.DataFlavor.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.security.krb5.internal.PAData.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) javax.swing.AbstractAction.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.text.normalizer.ReplaceableUCharacterIterator.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.util.concurrent.CopyOnWriteArrayList.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumb.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.awt.geom.Point2D.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) javax.swing.text.html.OptionListModel.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.security.krb5.internal.AuthorizationDataEntry.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) javax.swing.text.EditorKit.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) javax.swing.text.StyledEditorKit.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) com.sun.imageio.plugins.jpeg.DQTMarkerSegment.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.util.JumboEnumSet.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.security.krb5.internal.HostAddresses.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) javax.crypto.Mac.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) javax.naming.Reference.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) com.sun.imageio.plugins.jpeg.SOSMarkerSegment.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.util.jar.Manifest.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.security.krb5.EncryptedData.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.text.NumberFormat.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.net.ProgressSource.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.util.EnumSet.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.net.www.protocol.http.AuthenticationInfo.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.awt.datatransfer.MimeTypeParameterList.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.util.regex.Pattern$CharPropertyNames$CloneableProperty.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.security.SignatureSpi.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.security.x509.GeneralSubtrees.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.util.ArrayList.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) com.sun.imageio.plugins.jpeg.DHTMarkerSegment.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) javax.naming.CompositeName.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.awt.font.CharArrayIterator.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.security.Signature$Delegate.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.util.TreeSet.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.util.Hashtable$Entry.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.awt.image.ImageFilter.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) com.sun.imageio.plugins.jpeg.SOSMarkerSegment$ScanComponentSpec.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.awt.geom.Path2D$Float.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.security.krb5.EncryptionKey.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.text.DecimalFormat.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.awt.BufferCapabilities.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.awt.image.Kernel.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.util.Date.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.awt.Insets.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.net.www.MimeEntry.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.util.calendar.CalendarDate.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.awt.print.PageFormat.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) com.sun.imageio.plugins.jpeg.SOFMarkerSegment$ComponentSpec.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.util.EnumMap.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.security.krb5.internal.AuthorizationData.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFExtensionMarkerSegment.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.awt.geom.QuadCurve2D.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.security.krb5.internal.crypto.crc32.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.util.zip.ZipEntry.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.security.MessageDigest$Delegate.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.util.calendar.ZoneInfo.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.text.normalizer.CharacterIteratorWrapper.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.lang.Object.clinit()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.text.DecimalFormatSymbols.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.awt.font.TextLayout.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) javax.swing.DefaultListSelectionModel.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.text.DigitList.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) javax.print.attribute.EnumSyntax.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) javax.sound.midi.ShortMessage.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.awt.geom.CubicCurve2D.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.text.ChoiceFormat.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.lang.Thread.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) com.sun.imageio.plugins.jpeg.MarkerSegment.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.awt.image.renderable.RenderContext.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.security.krb5.Realm.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) com.sun.imageio.plugins.jpeg.DQTMarkerSegment$Qtable.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.awt.JobAttributes.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) com.sun.imageio.plugins.jpeg.JPEGMetadata.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.text.StringCharacterIterator.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.awt.geom.Dimension2D.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.security.x509.NameConstraintsExtension.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.awt.geom.Area.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.util.jar.Attributes.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.security.krb5.internal.HostAddress.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.util.TreeMap.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.awt.geom.Path2D$Double.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.text.BreakIterator.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.util.BitSet.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.lang.Enum.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.util.AbstractMap.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) javax.swing.tree.DefaultMutableTreeNode.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.awt.geom.RectangularShape.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) sun.security.provider.PolicyParser$GrantEntry.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) java.util.HashMap.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.clone()
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double) javax.swing.text.html.HTMLEditorKit.clone()
org.apache.commons.math3.geometry.partitioning.AbstractRegion() java.lang.Boolean.clinit()
org.apache.commons.math3.geometry.partitioning.AbstractRegion() java.lang.Object.clinit()
org.apache.commons.math3.geometry.partitioning.AbstractRegion() org.apache.commons.math3.geometry.partitioning.BSPTree(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.AbstractRegion() java.lang.Object()
org.apache.commons.math3.linear.RealMatrixFormat.format(org.apache.commons.math3.linear.RealMatrix) java.lang.Object.clinit()
org.apache.commons.math3.linear.RealMatrixFormat.format(org.apache.commons.math3.linear.RealMatrix) java.text.FieldPosition(int)
org.apache.commons.math3.linear.RealMatrixFormat.format(org.apache.commons.math3.linear.RealMatrix) java.lang.StringBuffer.clinit()
org.apache.commons.math3.linear.RealMatrixFormat.format(org.apache.commons.math3.linear.RealMatrix) java.lang.StringBuffer.toString()
org.apache.commons.math3.linear.RealMatrixFormat.format(org.apache.commons.math3.linear.RealMatrix) org.apache.commons.math3.linear.RealMatrixFormat.format(org.apache.commons.math3.linear.RealMatrix,java.lang.StringBuffer,java.text.FieldPosition)
org.apache.commons.math3.linear.RealMatrixFormat.format(org.apache.commons.math3.linear.RealMatrix) java.lang.StringBuffer()
org.apache.commons.math3.exception.MathRuntimeException.getMessage() org.apache.commons.math3.exception.util.ExceptionContext.getMessage()
org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizer$1.compare(java.lang.Object,java.lang.Object) org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizer$1.compare(org.apache.commons.math3.optim.univariate.UnivariatePointValuePair,org.apache.commons.math3.optim.univariate.UnivariatePointValuePair)
org.apache.commons.math3.linear.RealVector$1.next() java.lang.Object.clinit()
org.apache.commons.math3.linear.RealVector$1.next() java.lang.Throwable.clinit()
org.apache.commons.math3.linear.RealVector$1.next() org.apache.commons.math3.linear.RealVector$Entry.setIndex(int)
org.apache.commons.math3.linear.RealVector$1.next() java.util.NoSuchElementException()
org.apache.commons.math3.linear.RealVector$1.next() org.apache.commons.math3.linear.RealVector$1.next()
org.apache.commons.math3.dfp.Dfp.divide(org.apache.commons.math3.dfp.Dfp) java.lang.Object.clinit()
org.apache.commons.math3.dfp.Dfp.divide(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.Dfp.newInstance(org.apache.commons.math3.dfp.Dfp)
org.apache.commons.math3.dfp.Dfp.divide(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.Dfp.round(int)
org.apache.commons.math3.dfp.Dfp.divide(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.Dfp.dotrap(int,java.lang.String,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)
org.apache.commons.math3.dfp.Dfp.divide(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.DfpField.getRadixDigits()
org.apache.commons.math3.dfp.Dfp.divide(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.DfpDec.round(int)
org.apache.commons.math3.dfp.Dfp.divide(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.DfpField.setIEEEFlagsBits(int)
org.apache.commons.math3.dfp.Dfp.divide(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.Dfp.getZero()
org.apache.commons.math3.dfp.Dfp.divide(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.Dfp.isNaN()
org.apache.commons.math3.dfp.Dfp.divide(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.DfpDec.newInstance(org.apache.commons.math3.dfp.Dfp)
org.apache.commons.math3.dfp.Dfp.divide(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.DfpField$RoundingMode.clinit()
org.apache.commons.math3.dfp.Dfp.divide(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.DfpField.getRoundingMode()
org.apache.commons.math3.geometry.euclidean.twod.Line.intersection(org.apache.commons.math3.geometry.euclidean.twod.Line) java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.twod.Line.intersection(org.apache.commons.math3.geometry.euclidean.twod.Line) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.geometry.euclidean.twod.Line.intersection(org.apache.commons.math3.geometry.euclidean.twod.Line) org.apache.commons.math3.geometry.euclidean.twod.Vector2D.clinit()
org.apache.commons.math3.geometry.euclidean.twod.Line.intersection(org.apache.commons.math3.geometry.euclidean.twod.Line) org.apache.commons.math3.geometry.euclidean.twod.Vector2D(double,double)
org.apache.commons.math3.geometry.euclidean.twod.Line.intersection(org.apache.commons.math3.geometry.euclidean.twod.Line) org.apache.commons.math3.util.FastMath.abs(double)
org.apache.commons.math3.fraction.BigFraction.clinit() java.lang.Object.clinit()
org.apache.commons.math3.fraction.BigFraction.clinit() org.apache.commons.math3.fraction.BigFraction(int,int)
org.apache.commons.math3.fraction.BigFraction.clinit() java.math.BigInteger.valueOf(long)
org.apache.commons.math3.fraction.BigFraction.clinit() org.apache.commons.math3.fraction.BigFraction.clinit()
org.apache.commons.math3.fraction.BigFraction.clinit() org.apache.commons.math3.fraction.BigFraction(int)
org.apache.commons.math3.fraction.BigFraction.clinit() java.math.BigInteger.clinit()
org.apache.commons.math3.stat.descriptive.moment.Variance.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.moment.Mean()
org.apache.commons.math3.stat.descriptive.moment.Variance.evaluate(double[],int,int) java.lang.Object.clinit()
org.apache.commons.math3.stat.descriptive.moment.Variance.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.moment.Mean.evaluate(double[],int,int)
org.apache.commons.math3.stat.descriptive.moment.Variance.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.moment.Variance.clear()
org.apache.commons.math3.stat.descriptive.moment.Variance.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.moment.Variance.evaluate(double[],double,int,int)
org.apache.commons.math3.stat.descriptive.moment.Variance.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.test(double[],int,int)
org.apache.commons.math3.distribution.ExponentialDistribution.cumulativeProbability(double) java.lang.Object.clinit()
org.apache.commons.math3.distribution.ExponentialDistribution.cumulativeProbability(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.distribution.ExponentialDistribution.cumulativeProbability(double) org.apache.commons.math3.util.FastMath.exp(double)
org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$1.value(double,double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$1.value(double,double) org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction.access$000(org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction,double[],double[],double[][])
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.getNext() org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.getSmallest()
org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat.getInstance() java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat.getInstance() java.util.Locale.clinit()
org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat.getInstance() java.util.Locale.getDefault()
org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat.getInstance() org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat.getInstance(java.util.Locale)
org.apache.commons.math3.fraction.BigFraction.hashCode() java.math.BigInteger.hashCode()
org.apache.commons.math3.util.FastMath.sqrt(double) java.lang.Object.clinit()
org.apache.commons.math3.util.FastMath.sqrt(double) java.lang.Math.sqrt(double)
org.apache.commons.math3.util.FastMath.sqrt(double) java.lang.Math.clinit()
org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(org.apache.commons.math3.geometry.partitioning.SubHyperplane) org.apache.commons.math3.geometry.euclidean.twod.SubLine.split(org.apache.commons.math3.geometry.partitioning.Hyperplane)
org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(org.apache.commons.math3.geometry.partitioning.SubHyperplane) org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint.split(org.apache.commons.math3.geometry.partitioning.Hyperplane)
org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(org.apache.commons.math3.geometry.partitioning.SubHyperplane) org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane.getPlus()
org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(org.apache.commons.math3.geometry.partitioning.SubHyperplane) org.apache.commons.math3.geometry.euclidean.threed.SubPlane.split(org.apache.commons.math3.geometry.partitioning.Hyperplane)
org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(org.apache.commons.math3.geometry.partitioning.SubHyperplane) org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.getHyperplane()
org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(org.apache.commons.math3.geometry.partitioning.SubHyperplane) org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane.getMinus()
org.apache.commons.math3.optimization.LeastSquaresConverter.value(double[]) org.apache.commons.math3.linear.Array2DRowRealMatrix.operate(double[])
org.apache.commons.math3.optimization.LeastSquaresConverter.value(double[]) org.apache.commons.math3.exception.DimensionMismatchException(int,int)
org.apache.commons.math3.optimization.LeastSquaresConverter.value(double[]) org.apache.commons.math3.linear.DiagonalMatrix.operate(double[])
org.apache.commons.math3.optimization.LeastSquaresConverter.value(double[]) java.lang.Throwable.clinit()
org.apache.commons.math3.optimization.LeastSquaresConverter.value(double[]) org.apache.commons.math3.fitting.AbstractCurveFitter$TheoreticalValuesFunction$1.value(double[])
org.apache.commons.math3.optimization.LeastSquaresConverter.value(double[]) org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[])
org.apache.commons.math3.optimization.LeastSquaresConverter.value(double[]) org.apache.commons.math3.analysis.FunctionUtils$18.value(double[])
org.apache.commons.math3.optimization.LeastSquaresConverter.value(double[]) org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[])
org.apache.commons.math3.optimization.LeastSquaresConverter.value(double[]) org.apache.commons.math3.linear.AbstractRealMatrix.operate(double[])
org.apache.commons.math3.optimization.LeastSquaresConverter.value(double[]) java.lang.Object.clinit()
org.apache.commons.math3.optimization.LeastSquaresConverter.value(double[]) org.apache.commons.math3.analysis.differentiation.GradientFunction.value(double[])
org.apache.commons.math3.optimization.LeastSquaresConverter.value(double[]) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.optimization.LeastSquaresConverter.value(double[]) org.apache.commons.math3.analysis.FunctionUtils$19.value(double[])
org.apache.commons.math3.optimization.LeastSquaresConverter.value(double[]) org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[])
org.apache.commons.math3.optimization.LeastSquaresConverter.value(double[]) org.apache.commons.math3.linear.BlockRealMatrix.operate(double[])
org.apache.commons.math3.optimization.LeastSquaresConverter.value(double[]) org.apache.commons.math3.analysis.FunctionUtils$16$2.value(double[])
org.apache.commons.math3.random.EmpiricalDistribution.getKernel(org.apache.commons.math3.stat.descriptive.SummaryStatistics) org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getStandardDeviation()
org.apache.commons.math3.random.EmpiricalDistribution.getKernel(org.apache.commons.math3.stat.descriptive.SummaryStatistics) org.apache.commons.math3.distribution.NormalDistribution.clinit()
org.apache.commons.math3.random.EmpiricalDistribution.getKernel(org.apache.commons.math3.stat.descriptive.SummaryStatistics) org.apache.commons.math3.stat.descriptive.SummaryStatistics.getStandardDeviation()
org.apache.commons.math3.random.EmpiricalDistribution.getKernel(org.apache.commons.math3.stat.descriptive.SummaryStatistics) java.lang.Object.clinit()
org.apache.commons.math3.random.EmpiricalDistribution.getKernel(org.apache.commons.math3.stat.descriptive.SummaryStatistics) org.apache.commons.math3.random.RandomDataGenerator.getRandomGenerator()
org.apache.commons.math3.random.EmpiricalDistribution.getKernel(org.apache.commons.math3.stat.descriptive.SummaryStatistics) org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getMean()
org.apache.commons.math3.random.EmpiricalDistribution.getKernel(org.apache.commons.math3.stat.descriptive.SummaryStatistics) org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMean()
org.apache.commons.math3.random.EmpiricalDistribution.getKernel(org.apache.commons.math3.stat.descriptive.SummaryStatistics) org.apache.commons.math3.distribution.NormalDistribution(org.apache.commons.math3.random.RandomGenerator,double,double,double)
org.apache.commons.math3.dfp.Dfp.trunc(org.apache.commons.math3.dfp.DfpField$RoundingMode) java.lang.Enum.ordinal()
org.apache.commons.math3.dfp.Dfp.trunc(org.apache.commons.math3.dfp.DfpField$RoundingMode) org.apache.commons.math3.dfp.Dfp.newInstance(org.apache.commons.math3.dfp.Dfp)
org.apache.commons.math3.dfp.Dfp.trunc(org.apache.commons.math3.dfp.DfpField$RoundingMode) org.apache.commons.math3.dfp.DfpDec.newInstance(int)
org.apache.commons.math3.dfp.Dfp.trunc(org.apache.commons.math3.dfp.DfpField$RoundingMode) org.apache.commons.math3.dfp.Dfp.equals(java.lang.Object)
org.apache.commons.math3.dfp.Dfp.trunc(org.apache.commons.math3.dfp.DfpField$RoundingMode) org.apache.commons.math3.dfp.Dfp$1.clinit()
org.apache.commons.math3.dfp.Dfp.trunc(org.apache.commons.math3.dfp.DfpField$RoundingMode) org.apache.commons.math3.dfp.Dfp.getOne()
org.apache.commons.math3.dfp.Dfp.trunc(org.apache.commons.math3.dfp.DfpField$RoundingMode) org.apache.commons.math3.dfp.DfpDec.newInstance(org.apache.commons.math3.dfp.Dfp)
org.apache.commons.math3.dfp.Dfp.trunc(org.apache.commons.math3.dfp.DfpField$RoundingMode) org.apache.commons.math3.dfp.Dfp.add(org.apache.commons.math3.dfp.Dfp)
org.apache.commons.math3.dfp.Dfp.trunc(org.apache.commons.math3.dfp.DfpField$RoundingMode) java.lang.Object.clinit()
org.apache.commons.math3.dfp.Dfp.trunc(org.apache.commons.math3.dfp.DfpField$RoundingMode) org.apache.commons.math3.dfp.DfpDec.newInstance(java.lang.String)
org.apache.commons.math3.dfp.Dfp.trunc(org.apache.commons.math3.dfp.DfpField$RoundingMode) org.apache.commons.math3.dfp.Dfp.subtract(org.apache.commons.math3.dfp.Dfp)
org.apache.commons.math3.dfp.Dfp.trunc(org.apache.commons.math3.dfp.DfpField$RoundingMode) org.apache.commons.math3.dfp.Dfp.dotrap(int,java.lang.String,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)
org.apache.commons.math3.dfp.Dfp.trunc(org.apache.commons.math3.dfp.DfpField$RoundingMode) org.apache.commons.math3.dfp.DfpField.setIEEEFlagsBits(int)
org.apache.commons.math3.dfp.Dfp.trunc(org.apache.commons.math3.dfp.DfpField$RoundingMode) org.apache.commons.math3.dfp.Dfp.greaterThan(org.apache.commons.math3.dfp.Dfp)
org.apache.commons.math3.dfp.Dfp.trunc(org.apache.commons.math3.dfp.DfpField$RoundingMode) org.apache.commons.math3.dfp.Dfp.getZero()
org.apache.commons.math3.dfp.Dfp.trunc(org.apache.commons.math3.dfp.DfpField$RoundingMode) org.apache.commons.math3.dfp.Dfp.newInstance(java.lang.String)
org.apache.commons.math3.dfp.Dfp.trunc(org.apache.commons.math3.dfp.DfpField$RoundingMode) org.apache.commons.math3.dfp.Dfp.isNaN()
org.apache.commons.math3.dfp.Dfp.trunc(org.apache.commons.math3.dfp.DfpField$RoundingMode) org.apache.commons.math3.dfp.Dfp.newInstance(int)
org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative() org.apache.commons.math3.analysis.function.Cbrt.derivative()
org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative() org.apache.commons.math3.analysis.function.Minus.derivative()
org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative() org.apache.commons.math3.analysis.function.Tanh.derivative()
org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative() org.apache.commons.math3.analysis.FunctionUtils.toDifferentiableUnivariateFunction(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction)
org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative() org.apache.commons.math3.analysis.function.Expm1.derivative()
org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative() org.apache.commons.math3.analysis.function.Power.derivative()
org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative() org.apache.commons.math3.analysis.function.Logit.derivative()
org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative() org.apache.commons.math3.analysis.function.Sinc.derivative()
org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative() org.apache.commons.math3.analysis.function.Constant.derivative()
org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative() org.apache.commons.math3.analysis.function.Log10.derivative()
org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative() org.apache.commons.math3.analysis.function.Sigmoid.derivative()
org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative() org.apache.commons.math3.analysis.function.Acosh.derivative()
org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative() org.apache.commons.math3.analysis.function.Exp.derivative()
org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative() org.apache.commons.math3.analysis.function.Sinh.derivative()
org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative() java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative() org.apache.commons.math3.analysis.polynomials.PolynomialFunction.derivative()
org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative() org.apache.commons.math3.analysis.function.Gaussian.derivative()
org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative() org.apache.commons.math3.analysis.function.Atanh.derivative()
org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative() org.apache.commons.math3.analysis.function.Sqrt.derivative()
org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative() org.apache.commons.math3.analysis.FunctionUtils$3.derivative()
org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative() org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.derivative()
org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative() org.apache.commons.math3.analysis.function.Log1p.derivative()
org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative() org.apache.commons.math3.analysis.function.Asin.derivative()
org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative() org.apache.commons.math3.analysis.function.Cos.derivative()
org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative() org.apache.commons.math3.analysis.function.Asinh.derivative()
org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative() org.apache.commons.math3.analysis.function.Tan.derivative()
org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative() org.apache.commons.math3.analysis.FunctionUtils$6.derivative()
org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative() org.apache.commons.math3.analysis.function.Log.derivative()
org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative() org.apache.commons.math3.analysis.function.Atan.derivative()
org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative() org.apache.commons.math3.analysis.function.Acos.derivative()
org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative() org.apache.commons.math3.analysis.FunctionUtils$14.derivative()
org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative() org.apache.commons.math3.analysis.function.Identity.derivative()
org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative() org.apache.commons.math3.analysis.function.Cosh.derivative()
org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative() org.apache.commons.math3.analysis.FunctionUtils$9.derivative()
org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative() org.apache.commons.math3.analysis.function.Logistic.derivative()
org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative() org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative()
org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative() org.apache.commons.math3.analysis.function.Inverse.derivative()
org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative() org.apache.commons.math3.analysis.function.Sin.derivative()
org.apache.commons.math3.analysis.function.Logistic.value(double,double,double,double,double,double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Logistic.value(double,double,double,double,double,double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.function.Logistic.value(double,double,double,double,double,double) org.apache.commons.math3.util.FastMath.pow(double,double)
org.apache.commons.math3.analysis.function.Logistic.value(double,double,double,double,double,double) org.apache.commons.math3.util.FastMath.exp(double)
org.apache.commons.math3.random.BitsStreamGenerator() java.lang.Object()
org.apache.commons.math3.linear.SparseFieldVector.hashCode() org.apache.commons.math3.fraction.BigFraction.hashCode()
org.apache.commons.math3.linear.SparseFieldVector.hashCode() org.apache.commons.math3.util.OpenIntToFieldHashMap$Iterator.value()
org.apache.commons.math3.linear.SparseFieldVector.hashCode() org.apache.commons.math3.util.OpenIntToFieldHashMap.iterator()
org.apache.commons.math3.linear.SparseFieldVector.hashCode() org.apache.commons.math3.util.Decimal64.hashCode()
org.apache.commons.math3.linear.SparseFieldVector.hashCode() org.apache.commons.math3.dfp.Dfp.hashCode()
org.apache.commons.math3.linear.SparseFieldVector.hashCode() org.apache.commons.math3.util.BigReal.hashCode()
org.apache.commons.math3.linear.SparseFieldVector.hashCode() java.lang.Object.hashCode()
org.apache.commons.math3.linear.SparseFieldVector.hashCode() org.apache.commons.math3.fraction.Fraction.hashCode()
org.apache.commons.math3.linear.SparseFieldVector.hashCode() org.apache.commons.math3.analysis.differentiation.DerivativeStructure.hashCode()
org.apache.commons.math3.linear.SparseFieldVector.hashCode() org.apache.commons.math3.util.OpenIntToFieldHashMap$Iterator.advance()
org.apache.commons.math3.linear.SparseFieldVector.hashCode() org.apache.commons.math3.complex.Complex.hashCode()
org.apache.commons.math3.linear.SparseFieldVector.hashCode() org.apache.commons.math3.util.OpenIntToFieldHashMap$Iterator.hasNext()
org.apache.commons.math3.util.FastMath.acos(double) java.lang.Object.clinit()
org.apache.commons.math3.util.FastMath.acos(double) org.apache.commons.math3.util.FastMath.sqrt(double)
org.apache.commons.math3.util.FastMath.acos(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.util.FastMath.acos(double) java.lang.Double.clinit()
org.apache.commons.math3.util.FastMath.acos(double) java.lang.Double.isInfinite(double)
org.apache.commons.math3.util.FastMath.acos(double) org.apache.commons.math3.util.FastMath.atan(double,double,boolean)
org.apache.commons.math3.util.FastMath.acos(double) org.apache.commons.math3.util.FastMath.doubleHighPart(double)
org.apache.commons.math3.exception.NonMonotonicSequenceException(java.lang.Number,java.lang.Number,int,org.apache.commons.math3.util.MathArrays$OrderDirection,boolean) java.lang.Object.clinit()
org.apache.commons.math3.exception.NonMonotonicSequenceException(java.lang.Number,java.lang.Number,int,org.apache.commons.math3.util.MathArrays$OrderDirection,boolean) java.lang.Integer.clinit()
org.apache.commons.math3.exception.NonMonotonicSequenceException(java.lang.Number,java.lang.Number,int,org.apache.commons.math3.util.MathArrays$OrderDirection,boolean) org.apache.commons.math3.util.MathArrays$OrderDirection.clinit()
org.apache.commons.math3.exception.NonMonotonicSequenceException(java.lang.Number,java.lang.Number,int,org.apache.commons.math3.util.MathArrays$OrderDirection,boolean) org.apache.commons.math3.exception.util.LocalizedFormats.clinit()
org.apache.commons.math3.exception.NonMonotonicSequenceException(java.lang.Number,java.lang.Number,int,org.apache.commons.math3.util.MathArrays$OrderDirection,boolean) org.apache.commons.math3.exception.MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])
org.apache.commons.math3.exception.NonMonotonicSequenceException(java.lang.Number,java.lang.Number,int,org.apache.commons.math3.util.MathArrays$OrderDirection,boolean) java.lang.Integer.valueOf(int)
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.equals(java.lang.Object) java.util.Arrays.equals(double[],double[])
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.equals(java.lang.Object) java.lang.Object.clinit()
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.equals(java.lang.Object) java.util.Arrays.clinit()
org.apache.commons.math3.dfp.Dfp.toDouble() org.apache.commons.math3.dfp.Dfp.rint()
org.apache.commons.math3.dfp.Dfp.toDouble() org.apache.commons.math3.dfp.Dfp.getTwo()
org.apache.commons.math3.dfp.Dfp.toDouble() org.apache.commons.math3.dfp.Dfp.equals(java.lang.Object)
org.apache.commons.math3.dfp.Dfp.toDouble() org.apache.commons.math3.dfp.Dfp.multiply(int)
org.apache.commons.math3.dfp.Dfp.toDouble() org.apache.commons.math3.dfp.Dfp.getOne()
org.apache.commons.math3.dfp.Dfp.toDouble() java.lang.Object.clinit()
org.apache.commons.math3.dfp.Dfp.toDouble() org.apache.commons.math3.dfp.Dfp.intLog10()
org.apache.commons.math3.dfp.Dfp.toDouble() org.apache.commons.math3.dfp.Dfp.subtract(org.apache.commons.math3.dfp.Dfp)
org.apache.commons.math3.dfp.Dfp.toDouble() java.lang.Long.parseLong(java.lang.String)
org.apache.commons.math3.dfp.Dfp.toDouble() org.apache.commons.math3.dfp.Dfp.getZero()
org.apache.commons.math3.dfp.Dfp.toDouble() org.apache.commons.math3.dfp.Dfp.isNaN()
org.apache.commons.math3.dfp.Dfp.toDouble() org.apache.commons.math3.dfp.Dfp.negate()
org.apache.commons.math3.dfp.Dfp.toDouble() org.apache.commons.math3.dfp.Dfp.divide(org.apache.commons.math3.dfp.Dfp)
org.apache.commons.math3.dfp.Dfp.toDouble() org.apache.commons.math3.dfp.Dfp.compare(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)
org.apache.commons.math3.dfp.Dfp.toDouble() java.lang.Long.clinit()
org.apache.commons.math3.dfp.Dfp.toDouble() java.lang.Double.longBitsToDouble(long)
org.apache.commons.math3.dfp.Dfp.toDouble() org.apache.commons.math3.dfp.DfpDec.newInstance(long)
org.apache.commons.math3.dfp.Dfp.toDouble() org.apache.commons.math3.dfp.Dfp.multiply(org.apache.commons.math3.dfp.Dfp)
org.apache.commons.math3.dfp.Dfp.toDouble() org.apache.commons.math3.dfp.DfpMath.pow(org.apache.commons.math3.dfp.Dfp,int)
org.apache.commons.math3.dfp.Dfp.toDouble() java.lang.String.substring(int,int)
org.apache.commons.math3.dfp.Dfp.toDouble() org.apache.commons.math3.dfp.Dfp.toString()
org.apache.commons.math3.dfp.Dfp.toDouble() org.apache.commons.math3.dfp.Dfp.lessThan(org.apache.commons.math3.dfp.Dfp)
org.apache.commons.math3.dfp.Dfp.toDouble() org.apache.commons.math3.dfp.Dfp.newInstance(long)
org.apache.commons.math3.dfp.Dfp.toDouble() java.lang.Double.clinit()
org.apache.commons.math3.dfp.Dfp.toDouble() java.lang.String.length()
org.apache.commons.math3.dfp.Dfp.toDouble() org.apache.commons.math3.dfp.Dfp.isInfinite()
org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint(org.apache.commons.math3.geometry.euclidean.oned.Vector1D,boolean) java.lang.Object()
org.apache.commons.math3.analysis.function.Cbrt.derivative() org.apache.commons.math3.analysis.function.Cbrt.derivative()
org.apache.commons.math3.analysis.function.Cbrt.derivative() org.apache.commons.math3.analysis.function.Minus.derivative()
org.apache.commons.math3.analysis.function.Cbrt.derivative() org.apache.commons.math3.analysis.function.Tanh.derivative()
org.apache.commons.math3.analysis.function.Cbrt.derivative() org.apache.commons.math3.analysis.FunctionUtils.toDifferentiableUnivariateFunction(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction)
org.apache.commons.math3.analysis.function.Cbrt.derivative() org.apache.commons.math3.analysis.function.Expm1.derivative()
org.apache.commons.math3.analysis.function.Cbrt.derivative() org.apache.commons.math3.analysis.function.Power.derivative()
org.apache.commons.math3.analysis.function.Cbrt.derivative() org.apache.commons.math3.analysis.function.Logit.derivative()
org.apache.commons.math3.analysis.function.Cbrt.derivative() org.apache.commons.math3.analysis.function.Sinc.derivative()
org.apache.commons.math3.analysis.function.Cbrt.derivative() org.apache.commons.math3.analysis.function.Constant.derivative()
org.apache.commons.math3.analysis.function.Cbrt.derivative() org.apache.commons.math3.analysis.function.Log10.derivative()
org.apache.commons.math3.analysis.function.Cbrt.derivative() org.apache.commons.math3.analysis.function.Sigmoid.derivative()
org.apache.commons.math3.analysis.function.Cbrt.derivative() org.apache.commons.math3.analysis.function.Acosh.derivative()
org.apache.commons.math3.analysis.function.Cbrt.derivative() org.apache.commons.math3.analysis.function.Exp.derivative()
org.apache.commons.math3.analysis.function.Cbrt.derivative() org.apache.commons.math3.analysis.function.Sinh.derivative()
org.apache.commons.math3.analysis.function.Cbrt.derivative() java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Cbrt.derivative() org.apache.commons.math3.analysis.polynomials.PolynomialFunction.derivative()
org.apache.commons.math3.analysis.function.Cbrt.derivative() org.apache.commons.math3.analysis.function.Gaussian.derivative()
org.apache.commons.math3.analysis.function.Cbrt.derivative() org.apache.commons.math3.analysis.function.Atanh.derivative()
org.apache.commons.math3.analysis.function.Cbrt.derivative() org.apache.commons.math3.analysis.function.Sqrt.derivative()
org.apache.commons.math3.analysis.function.Cbrt.derivative() org.apache.commons.math3.analysis.FunctionUtils$3.derivative()
org.apache.commons.math3.analysis.function.Cbrt.derivative() org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.derivative()
org.apache.commons.math3.analysis.function.Cbrt.derivative() org.apache.commons.math3.analysis.function.Log1p.derivative()
org.apache.commons.math3.analysis.function.Cbrt.derivative() org.apache.commons.math3.analysis.function.Asin.derivative()
org.apache.commons.math3.analysis.function.Cbrt.derivative() org.apache.commons.math3.analysis.function.Cos.derivative()
org.apache.commons.math3.analysis.function.Cbrt.derivative() org.apache.commons.math3.analysis.function.Asinh.derivative()
org.apache.commons.math3.analysis.function.Cbrt.derivative() org.apache.commons.math3.analysis.function.Tan.derivative()
org.apache.commons.math3.analysis.function.Cbrt.derivative() org.apache.commons.math3.analysis.FunctionUtils$6.derivative()
org.apache.commons.math3.analysis.function.Cbrt.derivative() org.apache.commons.math3.analysis.function.Log.derivative()
org.apache.commons.math3.analysis.function.Cbrt.derivative() org.apache.commons.math3.analysis.function.Atan.derivative()
org.apache.commons.math3.analysis.function.Cbrt.derivative() org.apache.commons.math3.analysis.function.Acos.derivative()
org.apache.commons.math3.analysis.function.Cbrt.derivative() org.apache.commons.math3.analysis.FunctionUtils$14.derivative()
org.apache.commons.math3.analysis.function.Cbrt.derivative() org.apache.commons.math3.analysis.function.Identity.derivative()
org.apache.commons.math3.analysis.function.Cbrt.derivative() org.apache.commons.math3.analysis.function.Cosh.derivative()
org.apache.commons.math3.analysis.function.Cbrt.derivative() org.apache.commons.math3.analysis.FunctionUtils$9.derivative()
org.apache.commons.math3.analysis.function.Cbrt.derivative() org.apache.commons.math3.analysis.function.Logistic.derivative()
org.apache.commons.math3.analysis.function.Cbrt.derivative() org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative()
org.apache.commons.math3.analysis.function.Cbrt.derivative() org.apache.commons.math3.analysis.function.Inverse.derivative()
org.apache.commons.math3.analysis.function.Cbrt.derivative() org.apache.commons.math3.analysis.function.Sin.derivative()
org.apache.commons.math3.exception.OutOfRangeException(java.lang.Number,java.lang.Number,java.lang.Number) org.apache.commons.math3.exception.OutOfRangeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number)
org.apache.commons.math3.exception.OutOfRangeException(java.lang.Number,java.lang.Number,java.lang.Number) java.lang.Object.clinit()
org.apache.commons.math3.exception.OutOfRangeException(java.lang.Number,java.lang.Number,java.lang.Number) org.apache.commons.math3.exception.util.LocalizedFormats.clinit()
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator.computeInterpolatedStateAndDerivatives(double,double) java.lang.Object.clinit()
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator.computeInterpolatedStateAndDerivatives(double,double) java.lang.System.arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator.computeInterpolatedStateAndDerivatives(double,double) java.lang.System.clinit()
org.apache.commons.math3.optimization.GoalType.clinit() org.apache.commons.math3.optimization.GoalType(java.lang.String,int)
org.apache.commons.math3.optimization.GoalType.clinit() java.lang.Object.clinit()
org.apache.commons.math3.optimization.GoalType.clinit() org.apache.commons.math3.optimization.GoalType.clinit()
org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex.compareTo(java.lang.Object) org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex.compareTo(org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex)
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) sun.security.jca.ProviderList$3.get(int)
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) java.util.Collections$SynchronizedCollection.size()
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) java.util.SubList.size()
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) java.util.concurrent.CopyOnWriteArrayList.get(int)
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) java.util.Collections$CheckedList.get(int)
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) java.util.Collections$UnmodifiableCollection.size()
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) org.apache.commons.math3.ode.JacobianMatrices.access$800(org.apache.commons.math3.ode.JacobianMatrices)
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) org.apache.commons.math3.ode.ParameterConfiguration.getParameterName()
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) java.util.Collections$CopiesList.get(int)
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) java.util.ArrayList.add(java.lang.Object)
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) java.util.Arrays$ArrayList.size()
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) sun.awt.util.IdentityArrayList.add(java.lang.Object)
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) java.util.concurrent.CopyOnWriteArrayList$COWSubList.get(int)
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) java.util.Arrays$ArrayList.get(int)
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) org.apache.commons.math3.ode.JacobianMatrices.access$300(org.apache.commons.math3.ode.JacobianMatrices)
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) org.apache.commons.math3.ode.JacobianMatrices.access$200(org.apache.commons.math3.ode.JacobianMatrices)
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) java.util.concurrent.CopyOnWriteArrayList.add(java.lang.Object)
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) java.util.Vector.get(int)
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) java.util.concurrent.CopyOnWriteArrayList$COWSubList.size()
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) java.util.SubList.get(int)
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) org.apache.commons.math3.ode.JacobianMatrices.access$600(org.apache.commons.math3.ode.JacobianMatrices)
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) java.util.LinkedList.get(int)
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) java.util.Collections$SingletonList.size()
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) sun.security.jca.ProviderList$ServiceList.get(int)
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) org.apache.commons.math3.ode.JacobianMatrices.access$402(org.apache.commons.math3.ode.JacobianMatrices,boolean)
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) org.apache.commons.math3.ode.JacobianMatrices$MainStateJacobianWrapper.computeMainStateJacobian(double,double[],double[],double[][])
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) java.util.Collections$UnmodifiableCollection.add(java.lang.Object)
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) org.apache.commons.math3.ode.ParameterJacobianWrapper.isSupported(java.lang.String)
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) java.util.ArrayList$SubList.size()
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) org.apache.commons.math3.ode.JacobianMatrices.access$500(org.apache.commons.math3.ode.JacobianMatrices)
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) java.util.Arrays.clinit()
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) sun.awt.util.IdentityLinkedList.size()
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) sun.awt.util.IdentityArrayList.size()
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) org.apache.commons.math3.ode.ParameterJacobianWrapper.computeParameterJacobian(double,double[],double[],java.lang.String,double[])
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) sun.security.jca.ProviderList$ServiceList.size()
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) java.util.concurrent.CopyOnWriteArrayList.size()
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) java.util.LinkedList.size()
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) java.util.Collections$SynchronizedList.get(int)
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) java.util.Collections$SingletonList.get(int)
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) java.util.Collections$EmptyList.size()
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) org.apache.commons.math3.ode.JacobianMatrices.access$400(org.apache.commons.math3.ode.JacobianMatrices)
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) java.util.ArrayList.get(int)
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) java.lang.Object.clinit()
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) java.util.Vector.size()
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) java.util.Collections$CopiesList.size()
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) sun.security.jca.ProviderList$3.size()
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) java.util.AbstractList.add(java.lang.Object)
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) sun.awt.util.IdentityArrayList.get(int)
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) java.util.ArrayList$SubList.get(int)
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) java.util.ArrayList.size()
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) java.util.Collections$SynchronizedCollection.add(java.lang.Object)
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) java.util.Collections$CheckedCollection.size()
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) java.util.LinkedList.add(java.lang.Object)
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) sun.awt.util.IdentityLinkedList.add(java.lang.Object)
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) java.util.Collections$CheckedCollection.add(java.lang.Object)
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) java.util.Arrays.fill(double[],int,int,double)
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) sun.awt.util.IdentityLinkedList.get(int)
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) java.util.Vector.add(java.lang.Object)
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) java.util.Collections$EmptyList.get(int)
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) org.apache.commons.math3.ode.ParameterJacobianWrapper(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,org.apache.commons.math3.ode.ParameterizedODE,org.apache.commons.math3.ode.ParameterConfiguration[])
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) java.util.Collections$UnmodifiableList.get(int)
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(double,double[],double[],double[],double[]) org.apache.commons.math3.ode.JacobianMatrices.access$700(org.apache.commons.math3.ode.JacobianMatrices)
org.apache.commons.math3.ode.JacobianMatrices$MainStateJacobianWrapper.getDimension() org.apache.commons.math3.ode.FirstOrderConverter.getDimension()
org.apache.commons.math3.ode.JacobianMatrices$MainStateJacobianWrapper.getDimension() org.apache.commons.math3.ode.JacobianMatrices$MainStateJacobianWrapper.getDimension()
org.apache.commons.math3.ode.JacobianMatrices$MainStateJacobianWrapper.getDimension() org.apache.commons.math3.ode.MultistepIntegrator$1.getDimension()
org.apache.commons.math3.analysis.function.Rint.value(double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Rint.value(double) org.apache.commons.math3.util.FastMath.rint(double)
org.apache.commons.math3.analysis.function.Rint.value(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.ode.events.EventState.getCompleteState(org.apache.commons.math3.ode.sampling.StepInterpolator) org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.getInterpolatedSecondaryState(int)
org.apache.commons.math3.ode.events.EventState.getCompleteState(org.apache.commons.math3.ode.sampling.StepInterpolator) org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.getInterpolatedState()
org.apache.commons.math3.ode.events.EventState.getCompleteState(org.apache.commons.math3.ode.sampling.StepInterpolator) org.apache.commons.math3.ode.EquationsMapper.insertEquationData(double[],double[])
org.apache.commons.math3.ode.events.EventState.getCompleteState(org.apache.commons.math3.ode.sampling.StepInterpolator) org.apache.commons.math3.ode.ExpandableStatefulODE.getTotalDimension()
org.apache.commons.math3.ode.events.EventState.getCompleteState(org.apache.commons.math3.ode.sampling.StepInterpolator) org.apache.commons.math3.ode.ExpandableStatefulODE.getSecondaryMappers()
org.apache.commons.math3.ode.events.EventState.getCompleteState(org.apache.commons.math3.ode.sampling.StepInterpolator) org.apache.commons.math3.ode.ExpandableStatefulODE.getPrimaryMapper()
org.apache.commons.math3.geometry.partitioning.BSPTree.visit(org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor) org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor$BoundaryProjector.visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree)
org.apache.commons.math3.geometry.partitioning.BSPTree.visit(org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor) org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$FacetsContributionVisitor.visitOrder(org.apache.commons.math3.geometry.partitioning.BSPTree)
org.apache.commons.math3.geometry.partitioning.BSPTree.visit(org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor) org.apache.commons.math3.geometry.partitioning.AbstractRegion$BoundaryBuilder.visitLeafNode(org.apache.commons.math3.geometry.partitioning.BSPTree)
org.apache.commons.math3.geometry.partitioning.BSPTree.visit(org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor) org.apache.commons.math3.geometry.partitioning.BSPTree.visit(org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor)
org.apache.commons.math3.geometry.partitioning.BSPTree.visit(org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor) org.apache.commons.math3.geometry.partitioning.BSPTree$1.clinit()
org.apache.commons.math3.geometry.partitioning.BSPTree.visit(org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor) org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree)
org.apache.commons.math3.geometry.partitioning.BSPTree.visit(org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor) java.lang.Object.clinit()
org.apache.commons.math3.geometry.partitioning.BSPTree.visit(org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor) org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.visitOrder(org.apache.commons.math3.geometry.partitioning.BSPTree)
org.apache.commons.math3.geometry.partitioning.BSPTree.visit(org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor) org.apache.commons.math3.geometry.partitioning.AbstractRegion$2.visitLeafNode(org.apache.commons.math3.geometry.partitioning.BSPTree)
org.apache.commons.math3.geometry.partitioning.BSPTree.visit(org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor) org.apache.commons.math3.geometry.partitioning.AbstractRegion$BoundaryBuilder.visitOrder(org.apache.commons.math3.geometry.partitioning.BSPTree)
org.apache.commons.math3.geometry.partitioning.BSPTree.visit(org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor) org.apache.commons.math3.geometry.partitioning.BoundarySizeVisitor.visitLeafNode(org.apache.commons.math3.geometry.partitioning.BSPTree)
org.apache.commons.math3.geometry.partitioning.BSPTree.visit(org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor) org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$FacetsContributionVisitor.visitLeafNode(org.apache.commons.math3.geometry.partitioning.BSPTree)
org.apache.commons.math3.geometry.partitioning.BSPTree.visit(org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor) org.apache.commons.math3.exception.MathInternalError()
org.apache.commons.math3.geometry.partitioning.BSPTree.visit(org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor) org.apache.commons.math3.geometry.partitioning.BoundarySizeVisitor.visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree)
org.apache.commons.math3.geometry.partitioning.BSPTree.visit(org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor) org.apache.commons.math3.geometry.partitioning.RegionFactory$NodesCleaner.visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree)
org.apache.commons.math3.geometry.partitioning.BSPTree.visit(org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor) org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.visitLeafNode(org.apache.commons.math3.geometry.partitioning.BSPTree)
org.apache.commons.math3.geometry.partitioning.BSPTree.visit(org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor) org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor$BoundaryProjector.visitLeafNode(org.apache.commons.math3.geometry.partitioning.BSPTree)
org.apache.commons.math3.geometry.partitioning.BSPTree.visit(org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor) java.lang.Enum.ordinal()
org.apache.commons.math3.geometry.partitioning.BSPTree.visit(org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor) org.apache.commons.math3.geometry.partitioning.RegionFactory$NodesCleaner.visitLeafNode(org.apache.commons.math3.geometry.partitioning.BSPTree)
org.apache.commons.math3.geometry.partitioning.BSPTree.visit(org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor) java.lang.Throwable.clinit()
org.apache.commons.math3.geometry.partitioning.BSPTree.visit(org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor) org.apache.commons.math3.geometry.partitioning.AbstractRegion$2.visitOrder(org.apache.commons.math3.geometry.partitioning.BSPTree)
org.apache.commons.math3.geometry.partitioning.BSPTree.visit(org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor) org.apache.commons.math3.geometry.partitioning.BoundarySizeVisitor.visitOrder(org.apache.commons.math3.geometry.partitioning.BSPTree)
org.apache.commons.math3.geometry.partitioning.BSPTree.visit(org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor) org.apache.commons.math3.geometry.partitioning.AbstractRegion$2.visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree)
org.apache.commons.math3.geometry.partitioning.BSPTree.visit(org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor) org.apache.commons.math3.geometry.partitioning.RegionFactory$NodesCleaner.visitOrder(org.apache.commons.math3.geometry.partitioning.BSPTree)
org.apache.commons.math3.geometry.partitioning.BSPTree.visit(org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor) org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor$BoundaryProjector.visitOrder(org.apache.commons.math3.geometry.partitioning.BSPTree)
org.apache.commons.math3.geometry.partitioning.BSPTree.visit(org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor) org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$FacetsContributionVisitor.visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree)
org.apache.commons.math3.geometry.partitioning.BSPTree.visit(org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor) org.apache.commons.math3.geometry.partitioning.AbstractRegion$BoundaryBuilder.visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree)
org.apache.commons.math3.linear.RealVector.checkVectorDimensions(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVector$2.getDimension()
org.apache.commons.math3.linear.RealVector.checkVectorDimensions(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVector.checkVectorDimensions(int)
org.apache.commons.math3.linear.RealVector.checkVectorDimensions(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.OpenMapRealVector.getDimension()
org.apache.commons.math3.linear.RealVector.checkVectorDimensions(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.ArrayRealVector.checkVectorDimensions(int)
org.apache.commons.math3.linear.RealVector.checkVectorDimensions(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.ArrayRealVector.getDimension()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.clinit() java.lang.Object.clinit()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.clinit() org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order(java.lang.String,int)
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.clinit() org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.clinit()
org.apache.commons.math3.analysis.function.Sin.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.sin()
org.apache.commons.math3.exception.NumberIsTooLargeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean) java.lang.Object.clinit()
org.apache.commons.math3.exception.NumberIsTooLargeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean) org.apache.commons.math3.exception.MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])
org.apache.commons.math3.analysis.function.Atan2.value(double,double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Atan2.value(double,double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.function.Atan2.value(double,double) org.apache.commons.math3.util.FastMath.atan2(double,double)
org.apache.commons.math3.linear.OpenMapRealVector$OpenMapEntry.getValue() org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.value()
org.apache.commons.math3.analysis.function.Tan.value(double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Tan.value(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.function.Tan.value(double) org.apache.commons.math3.util.FastMath.tan(double)
org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double) org.apache.commons.math3.analysis.function.Sinh.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double) org.apache.commons.math3.analysis.function.Tanh.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double) org.apache.commons.math3.analysis.function.Minus.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double) org.apache.commons.math3.analysis.differentiation.DerivativeStructure(int,int,int,double)
org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double) org.apache.commons.math3.analysis.function.Asinh.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double) org.apache.commons.math3.analysis.function.Atan.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double) org.apache.commons.math3.analysis.function.HarmonicOscillator.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double) org.apache.commons.math3.analysis.function.Sin.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double) org.apache.commons.math3.analysis.function.Power.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double) org.apache.commons.math3.analysis.function.Cbrt.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double) org.apache.commons.math3.analysis.function.Logistic.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double) org.apache.commons.math3.analysis.function.Sigmoid.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getPartialDerivative(int[])
org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double) org.apache.commons.math3.analysis.function.Inverse.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$2.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double) org.apache.commons.math3.analysis.function.Sinc.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double) org.apache.commons.math3.analysis.function.Cos.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double) org.apache.commons.math3.analysis.function.Log1p.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double) org.apache.commons.math3.analysis.function.Acosh.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double) org.apache.commons.math3.analysis.function.Atanh.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double) org.apache.commons.math3.analysis.function.Log10.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double) org.apache.commons.math3.analysis.function.Sqrt.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double) org.apache.commons.math3.analysis.function.Tan.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double) org.apache.commons.math3.analysis.function.Asin.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double) org.apache.commons.math3.analysis.function.Gaussian.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double) org.apache.commons.math3.analysis.function.Constant.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double) org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double) org.apache.commons.math3.analysis.function.Acos.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double) org.apache.commons.math3.analysis.function.Expm1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double) org.apache.commons.math3.analysis.function.Identity.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$5.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double) org.apache.commons.math3.analysis.function.Exp.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double) org.apache.commons.math3.analysis.function.Logit.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double) org.apache.commons.math3.analysis.function.Cosh.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$8.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double) org.apache.commons.math3.analysis.function.Log.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.function.Logistic.access$000(double,double,double,double,double,double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Logistic.access$000(double,double,double,double,double,double) org.apache.commons.math3.analysis.function.Logistic.value(double,double,double,double,double,double)
org.apache.commons.math3.geometry.partitioning.AbstractRegion$2.visitLeafNode(org.apache.commons.math3.geometry.partitioning.BSPTree) java.lang.Boolean.clinit()
org.apache.commons.math3.geometry.partitioning.AbstractRegion$2.visitLeafNode(org.apache.commons.math3.geometry.partitioning.BSPTree) java.lang.Object.clinit()
org.apache.commons.math3.geometry.partitioning.AbstractRegion$2.visitLeafNode(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.partitioning.BSPTree.getPlus()
org.apache.commons.math3.geometry.partitioning.AbstractRegion$2.visitLeafNode(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.partitioning.BSPTree.setAttribute(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.AbstractRegion$2.visitLeafNode(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.partitioning.BSPTree.getParent()
org.apache.commons.math3.distribution.LogNormalDistribution.cumulativeProbability(double,double) org.apache.commons.math3.distribution.LogNormalDistribution.probability(double,double)
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.lang.Object.clinit()
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getOrder()
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.lang.Throwable.clinit()
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getFreeParameters()
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.exception.NoDataException(org.apache.commons.math3.exception.util.Localizable)
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.exception.util.LocalizedFormats.clinit()
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.multiply(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure(int,int,double)
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.add(double)
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.util.MathUtils.checkNotNull(java.lang.Object)
org.apache.commons.math3.analysis.differentiation.DSCompiler.tan(double[],int,double[],int) java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.tan(double[],int,double[],int) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.tan(double[],int,double[],int) org.apache.commons.math3.analysis.differentiation.DSCompiler.compose(double[],int,double[],double[],int)
org.apache.commons.math3.analysis.differentiation.DSCompiler.tan(double[],int,double[],int) org.apache.commons.math3.util.FastMath.tan(double)
org.apache.commons.math3.util.ContinuedFraction() java.lang.Object()
org.apache.commons.math3.linear.RealVector() java.lang.Object()
org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.increment(double) org.apache.commons.math3.stat.descriptive.moment.Variance.increment(double)
org.apache.commons.math3.fraction.AbstractFormat.parseNextCharacter(java.lang.String,java.text.ParsePosition) java.lang.Character.clinit()
org.apache.commons.math3.fraction.AbstractFormat.parseNextCharacter(java.lang.String,java.text.ParsePosition) java.lang.Object.clinit()
org.apache.commons.math3.fraction.AbstractFormat.parseNextCharacter(java.lang.String,java.text.ParsePosition) java.lang.String.charAt(int)
org.apache.commons.math3.fraction.AbstractFormat.parseNextCharacter(java.lang.String,java.text.ParsePosition) java.lang.Character.isWhitespace(char)
org.apache.commons.math3.fraction.AbstractFormat.parseNextCharacter(java.lang.String,java.text.ParsePosition) java.text.ParsePosition.getIndex()
org.apache.commons.math3.fraction.AbstractFormat.parseNextCharacter(java.lang.String,java.text.ParsePosition) java.lang.String.length()
org.apache.commons.math3.fraction.AbstractFormat.parseNextCharacter(java.lang.String,java.text.ParsePosition) java.text.ParsePosition.setIndex(int)
org.apache.commons.math3.geometry.partitioning.BoundarySizeVisitor.visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.getSize()
org.apache.commons.math3.geometry.partitioning.BoundarySizeVisitor.visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.partitioning.BSPTree.getAttribute()
org.apache.commons.math3.geometry.partitioning.BoundarySizeVisitor.visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.partitioning.BoundaryAttribute.getPlusOutside()
org.apache.commons.math3.geometry.partitioning.BoundarySizeVisitor.visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint.getSize()
org.apache.commons.math3.geometry.partitioning.BoundarySizeVisitor.visitInternalNode(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.partitioning.BoundaryAttribute.getPlusInside()
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order(java.lang.String,int) java.lang.Enum(java.lang.String,int)
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.equals(java.lang.Object) java.lang.Object.equals(java.lang.Object)
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.equals(java.lang.Object) org.apache.commons.math3.util.Decimal64.equals(java.lang.Object)
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.equals(java.lang.Object) org.apache.commons.math3.dfp.Dfp.equals(java.lang.Object)
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.equals(java.lang.Object) org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.isNaN()
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.equals(java.lang.Object) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.equals(java.lang.Object)
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.hashCode() java.lang.Object.clinit()
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.hashCode() java.util.Arrays.hashCode(double[])
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.hashCode() java.util.Arrays.clinit()
org.apache.commons.math3.dfp.DfpDec.newInstance(int) java.lang.Object.clinit()
org.apache.commons.math3.dfp.DfpDec.newInstance(int) org.apache.commons.math3.dfp.DfpDec(org.apache.commons.math3.dfp.DfpField,int)
org.apache.commons.math3.dfp.DfpDec.newInstance(int) org.apache.commons.math3.dfp.Dfp.getField()
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getSkewness() org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics.apply(org.apache.commons.math3.stat.descriptive.UnivariateStatistic)
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getSkewness() org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.apply(org.apache.commons.math3.stat.descriptive.UnivariateStatistic)
org.apache.commons.math3.util.FastMath.sin(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.util.FastMath.sin(double) java.lang.Object.clinit()
org.apache.commons.math3.util.FastMath.sin(double) org.apache.commons.math3.util.FastMath$CodyWaite.getRemB()
org.apache.commons.math3.util.FastMath.sin(double) org.apache.commons.math3.util.FastMath.sinQ(double,double)
org.apache.commons.math3.util.FastMath.sin(double) org.apache.commons.math3.util.FastMath$CodyWaite.getK()
org.apache.commons.math3.util.FastMath.sin(double) java.lang.Double.doubleToRawLongBits(double)
org.apache.commons.math3.util.FastMath.sin(double) org.apache.commons.math3.util.FastMath.reducePayneHanek(double,double[])
org.apache.commons.math3.util.FastMath.sin(double) java.lang.Double.clinit()
org.apache.commons.math3.util.FastMath.sin(double) org.apache.commons.math3.util.FastMath$CodyWaite(double)
org.apache.commons.math3.util.FastMath.sin(double) org.apache.commons.math3.util.FastMath.cosQ(double,double)
org.apache.commons.math3.util.FastMath.sin(double) org.apache.commons.math3.util.FastMath$CodyWaite.getRemA()
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getMin() org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getMin()
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.access$000(org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer,double[]) org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.computeObjectiveValue(double[])
org.apache.commons.math3.fraction.BigFraction.longValue() java.math.BigInteger.divide(java.math.BigInteger)
org.apache.commons.math3.fraction.BigFraction.longValue() java.math.BigInteger.longValue()
org.apache.commons.math3.linear.RealVector$2.getNorm() org.apache.commons.math3.linear.RealVector.getNorm()
org.apache.commons.math3.linear.RealVector$2.getNorm() org.apache.commons.math3.linear.ArrayRealVector.getNorm()
org.apache.commons.math3.linear.RealVector$2.getNorm() org.apache.commons.math3.linear.RealVector$2.getNorm()
org.apache.commons.math3.analysis.function.Sigmoid$Parametric.value(double,double[]) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Sigmoid$Parametric.value(double,double[]) org.apache.commons.math3.analysis.function.Sigmoid$Parametric.validateParameters(double[])
org.apache.commons.math3.analysis.function.Sigmoid$Parametric.value(double,double[]) org.apache.commons.math3.analysis.function.Sigmoid.access$000(double,double,double)
org.apache.commons.math3.geometry.partitioning.RegionFactory$IntersectionMerger.merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean,boolean) org.apache.commons.math3.geometry.partitioning.BSPTree.insertInTree(org.apache.commons.math3.geometry.partitioning.BSPTree,boolean)
org.apache.commons.math3.geometry.partitioning.RegionFactory$IntersectionMerger.merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean,boolean) java.lang.Boolean.booleanValue()
org.apache.commons.math3.geometry.partitioning.RegionFactory$IntersectionMerger.merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean,boolean) org.apache.commons.math3.geometry.partitioning.BSPTree.getAttribute()
org.apache.commons.math3.linear.AbstractRealMatrix.clinit() java.text.DecimalFormat.setMinimumFractionDigits(int)
org.apache.commons.math3.linear.AbstractRealMatrix.clinit() java.lang.Object.clinit()
org.apache.commons.math3.linear.AbstractRealMatrix.clinit() org.apache.commons.math3.linear.AbstractRealMatrix.clinit()
org.apache.commons.math3.linear.AbstractRealMatrix.clinit() org.apache.commons.math3.linear.RealMatrixFormat.getFormat()
org.apache.commons.math3.linear.AbstractRealMatrix.clinit() org.apache.commons.math3.linear.RealMatrixFormat.getInstance(java.util.Locale)
org.apache.commons.math3.linear.AbstractRealMatrix.clinit() java.util.Locale.clinit()
org.apache.commons.math3.linear.AbstractRealMatrix.clinit() java.text.NumberFormat.setMinimumFractionDigits(int)
org.apache.commons.math3.geometry.euclidean.threed.Line.reset(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D) org.apache.commons.math3.geometry.euclidean.threed.Vector3D(double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
org.apache.commons.math3.geometry.euclidean.threed.Line.reset(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.geometry.euclidean.threed.Line.reset(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D) java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.threed.Line.reset(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D) org.apache.commons.math3.util.FastMath.sqrt(double)
org.apache.commons.math3.geometry.euclidean.threed.Line.reset(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D) org.apache.commons.math3.geometry.euclidean.threed.Vector3D.clinit()
org.apache.commons.math3.geometry.euclidean.threed.Line.reset(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D) org.apache.commons.math3.geometry.euclidean.threed.Vector3D(double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
org.apache.commons.math3.geometry.euclidean.threed.Line.reset(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D) java.lang.Throwable.clinit()
org.apache.commons.math3.geometry.euclidean.threed.Line.reset(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D) org.apache.commons.math3.geometry.euclidean.threed.Vector3D.dotProduct(org.apache.commons.math3.geometry.Vector)
org.apache.commons.math3.geometry.euclidean.threed.Line.reset(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D) org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getNormSq()
org.apache.commons.math3.geometry.euclidean.threed.Line.reset(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D) org.apache.commons.math3.exception.util.LocalizedFormats.clinit()
org.apache.commons.math3.geometry.euclidean.threed.Line.reset(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D) org.apache.commons.math3.geometry.euclidean.threed.Vector3D.subtract(org.apache.commons.math3.geometry.Vector)
org.apache.commons.math3.geometry.euclidean.threed.Line.reset(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D) org.apache.commons.math3.exception.MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])
org.apache.commons.math3.fraction.BigFraction(int,int) org.apache.commons.math3.fraction.BigFraction(java.math.BigInteger,java.math.BigInteger)
org.apache.commons.math3.fraction.BigFraction(int,int) java.lang.Object.clinit()
org.apache.commons.math3.fraction.BigFraction(int,int) java.math.BigInteger.valueOf(long)
org.apache.commons.math3.fraction.BigFraction(int,int) java.math.BigInteger.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.cos(double[],int,double[],int) java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.cos(double[],int,double[],int) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.cos(double[],int,double[],int) org.apache.commons.math3.analysis.differentiation.DSCompiler.compose(double[],int,double[],double[],int)
org.apache.commons.math3.analysis.differentiation.DSCompiler.cos(double[],int,double[],int) org.apache.commons.math3.util.FastMath.cos(double)
org.apache.commons.math3.analysis.differentiation.DSCompiler.cos(double[],int,double[],int) org.apache.commons.math3.util.FastMath.sin(double)
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMean() org.apache.commons.math3.stat.descriptive.moment.FirstMoment.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMean() org.apache.commons.math3.stat.descriptive.rank.Max.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMean() org.apache.commons.math3.stat.descriptive.summary.SumOfLogs.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMean() org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMean() org.apache.commons.math3.stat.descriptive.summary.SumOfSquares.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMean() org.apache.commons.math3.stat.descriptive.rank.Min.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMean() org.apache.commons.math3.stat.descriptive.moment.ThirdMoment.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMean() org.apache.commons.math3.stat.descriptive.moment.SecondMoment.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMean() org.apache.commons.math3.stat.descriptive.moment.FourthMoment.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMean() org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMean() org.apache.commons.math3.stat.descriptive.moment.Mean.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMean() org.apache.commons.math3.stat.descriptive.moment.Skewness.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMean() org.apache.commons.math3.stat.descriptive.moment.Kurtosis.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMean() org.apache.commons.math3.stat.descriptive.moment.Variance.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMean() org.apache.commons.math3.stat.descriptive.summary.Product.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMean() org.apache.commons.math3.stat.descriptive.summary.Sum.getResult()
org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic() java.lang.Object()
org.apache.commons.math3.util.MathUtils.normalizeAngle(double,double) java.lang.Object.clinit()
org.apache.commons.math3.util.MathUtils.normalizeAngle(double,double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.util.MathUtils.normalizeAngle(double,double) org.apache.commons.math3.util.FastMath.floor(double)
org.apache.commons.math3.linear.SparseRealVector() org.apache.commons.math3.linear.RealVector()
org.apache.commons.math3.geometry.euclidean.threed.Line(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D) org.apache.commons.math3.geometry.euclidean.threed.Line.reset(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
org.apache.commons.math3.geometry.euclidean.threed.Line(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D) java.lang.Object()
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Acos.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Tanh.derivative()
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Sqrt.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Power.derivative()
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Asin.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Constant.derivative()
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Gaussian.derivative()
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.ode.events.EventState$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$7.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Sin.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.derivative()
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$3.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Exp.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$12.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Inverse.derivative()
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$8.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Constant.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Atan.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Minus.derivative()
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Floor.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Log10.derivative()
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Sinh.derivative()
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.HarmonicOscillator.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$6.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Atanh.derivative()
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.StepFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$13.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$3.derivative()
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Log1p.derivative()
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Cos.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Atanh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$10.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Cos.derivative()
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Asinh.derivative()
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Sigmoid.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$6.derivative()
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Acos.derivative()
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$14.derivative()
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Logistic.derivative()
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative()
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Abs.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$14.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Cbrt.derivative()
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Ulp.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Sigmoid.derivative()
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Rint.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Gaussian.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Tan.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunction.derivative()
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Sqrt.derivative()
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Sinc.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Log1p.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Identity.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Signum.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.distribution.AbstractRealDistribution$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Logit.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Acosh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Atan.derivative()
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$2.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Identity.derivative()
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$9.derivative()
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Log10.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Logistic.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Sinh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Cosh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Expm1.derivative()
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Expm1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Logit.derivative()
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Sinc.derivative()
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Power.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Acosh.derivative()
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Exp.derivative()
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Cbrt.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.optimization.direct.PowellOptimizer$LineSearch$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$4.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Asinh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Minus.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Tanh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$9.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Asin.derivative()
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Log.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Tan.derivative()
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Log.derivative()
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Inverse.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Cosh.derivative()
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$5.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Ceil.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$15.value(double)
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double) org.apache.commons.math3.analysis.function.Sin.derivative()
org.apache.commons.math3.optimization.linear.LinearObjectiveFunction.equals(java.lang.Object) org.apache.commons.math3.linear.ArrayRealVector.equals(java.lang.Object)
org.apache.commons.math3.optimization.linear.LinearObjectiveFunction.equals(java.lang.Object) org.apache.commons.math3.linear.RealVector.equals(java.lang.Object)
org.apache.commons.math3.optimization.linear.LinearObjectiveFunction.equals(java.lang.Object) org.apache.commons.math3.linear.OpenMapRealVector.equals(java.lang.Object)
org.apache.commons.math3.stat.descriptive.moment.SecondMoment.increment(double) org.apache.commons.math3.stat.descriptive.moment.FirstMoment.increment(double)
org.apache.commons.math3.geometry.partitioning.BSPTree.merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree$LeafMerger,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean) org.apache.commons.math3.geometry.euclidean.twod.Line.wholeHyperplane()
org.apache.commons.math3.geometry.partitioning.BSPTree.merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree$LeafMerger,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean) org.apache.commons.math3.geometry.euclidean.threed.Plane.wholeHyperplane()
org.apache.commons.math3.geometry.partitioning.BSPTree.merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree$LeafMerger,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean) org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(org.apache.commons.math3.geometry.partitioning.SubHyperplane)
org.apache.commons.math3.geometry.partitioning.BSPTree.merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree$LeafMerger,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean) org.apache.commons.math3.geometry.partitioning.BSPTree.condense()
org.apache.commons.math3.geometry.partitioning.BSPTree.merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree$LeafMerger,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean) org.apache.commons.math3.geometry.partitioning.RegionFactory$IntersectionMerger.merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean,boolean)
org.apache.commons.math3.geometry.partitioning.BSPTree.merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree$LeafMerger,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean) org.apache.commons.math3.geometry.partitioning.RegionFactory$UnionMerger.merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean,boolean)
org.apache.commons.math3.geometry.partitioning.BSPTree.merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree$LeafMerger,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean) org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.getHyperplane()
org.apache.commons.math3.geometry.partitioning.BSPTree.merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree$LeafMerger,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean) org.apache.commons.math3.geometry.partitioning.BSPTree.merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree$LeafMerger,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean)
org.apache.commons.math3.geometry.partitioning.BSPTree.merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree$LeafMerger,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean) org.apache.commons.math3.geometry.partitioning.BSPTree.split(org.apache.commons.math3.geometry.partitioning.SubHyperplane)
org.apache.commons.math3.geometry.partitioning.BSPTree.merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree$LeafMerger,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean) org.apache.commons.math3.geometry.partitioning.RegionFactory$DifferenceMerger.merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean,boolean)
org.apache.commons.math3.geometry.partitioning.BSPTree.merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree$LeafMerger,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean) org.apache.commons.math3.geometry.partitioning.RegionFactory$XorMerger.merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean,boolean)
org.apache.commons.math3.geometry.partitioning.BSPTree.merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree$LeafMerger,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean) org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.wholeHyperplane()
org.apache.commons.math3.analysis.function.Power.value(double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Power.value(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.function.Power.value(double) org.apache.commons.math3.util.FastMath.pow(double,double)
org.apache.commons.math3.exception.MathUnsupportedOperationException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[]) java.lang.Object.clinit()
org.apache.commons.math3.exception.MathUnsupportedOperationException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[]) java.lang.UnsupportedOperationException()
org.apache.commons.math3.exception.MathUnsupportedOperationException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[]) org.apache.commons.math3.exception.util.ExceptionContext.addMessage(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])
org.apache.commons.math3.exception.MathUnsupportedOperationException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[]) org.apache.commons.math3.exception.util.ExceptionContext(java.lang.Throwable)
org.apache.commons.math3.dfp.Dfp$1.clinit() java.lang.Object.clinit()
org.apache.commons.math3.dfp.Dfp$1.clinit() java.lang.Enum.ordinal()
org.apache.commons.math3.dfp.Dfp$1.clinit() org.apache.commons.math3.dfp.Dfp$1.clinit()
org.apache.commons.math3.dfp.Dfp$1.clinit() org.apache.commons.math3.dfp.DfpField$RoundingMode.values()
org.apache.commons.math3.dfp.Dfp$1.clinit() org.apache.commons.math3.dfp.DfpField$RoundingMode.clinit()
org.apache.commons.math3.random.AbstractWell(int,int,int,int,int[]) org.apache.commons.math3.random.AbstractWell.setSeed(int[])
org.apache.commons.math3.random.AbstractWell(int,int,int,int,int[]) org.apache.commons.math3.random.BitsStreamGenerator()
org.apache.commons.math3.exception.MathUnsupportedOperationException.getMessage() org.apache.commons.math3.exception.util.ExceptionContext.getMessage()
org.apache.commons.math3.linear.ArrayRealVector.copy() java.lang.Object.clinit()
org.apache.commons.math3.linear.ArrayRealVector.copy() org.apache.commons.math3.linear.ArrayRealVector.clinit()
org.apache.commons.math3.linear.ArrayRealVector.copy() org.apache.commons.math3.linear.ArrayRealVector(org.apache.commons.math3.linear.ArrayRealVector,boolean)
org.apache.commons.math3.linear.ArrayRealVector.copy() org.apache.commons.math3.linear.ArrayRealVector.copy()
org.apache.commons.math3.analysis.function.Exp.derivative() org.apache.commons.math3.analysis.function.Cbrt.derivative()
org.apache.commons.math3.analysis.function.Exp.derivative() org.apache.commons.math3.analysis.function.Minus.derivative()
org.apache.commons.math3.analysis.function.Exp.derivative() org.apache.commons.math3.analysis.function.Tanh.derivative()
org.apache.commons.math3.analysis.function.Exp.derivative() org.apache.commons.math3.analysis.FunctionUtils.toDifferentiableUnivariateFunction(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction)
org.apache.commons.math3.analysis.function.Exp.derivative() org.apache.commons.math3.analysis.function.Expm1.derivative()
org.apache.commons.math3.analysis.function.Exp.derivative() org.apache.commons.math3.analysis.function.Power.derivative()
org.apache.commons.math3.analysis.function.Exp.derivative() org.apache.commons.math3.analysis.function.Logit.derivative()
org.apache.commons.math3.analysis.function.Exp.derivative() org.apache.commons.math3.analysis.function.Sinc.derivative()
org.apache.commons.math3.analysis.function.Exp.derivative() org.apache.commons.math3.analysis.function.Constant.derivative()
org.apache.commons.math3.analysis.function.Exp.derivative() org.apache.commons.math3.analysis.function.Log10.derivative()
org.apache.commons.math3.analysis.function.Exp.derivative() org.apache.commons.math3.analysis.function.Sigmoid.derivative()
org.apache.commons.math3.analysis.function.Exp.derivative() org.apache.commons.math3.analysis.function.Acosh.derivative()
org.apache.commons.math3.analysis.function.Exp.derivative() org.apache.commons.math3.analysis.function.Exp.derivative()
org.apache.commons.math3.analysis.function.Exp.derivative() org.apache.commons.math3.analysis.function.Sinh.derivative()
org.apache.commons.math3.analysis.function.Exp.derivative() java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Exp.derivative() org.apache.commons.math3.analysis.polynomials.PolynomialFunction.derivative()
org.apache.commons.math3.analysis.function.Exp.derivative() org.apache.commons.math3.analysis.function.Gaussian.derivative()
org.apache.commons.math3.analysis.function.Exp.derivative() org.apache.commons.math3.analysis.function.Atanh.derivative()
org.apache.commons.math3.analysis.function.Exp.derivative() org.apache.commons.math3.analysis.function.Sqrt.derivative()
org.apache.commons.math3.analysis.function.Exp.derivative() org.apache.commons.math3.analysis.FunctionUtils$3.derivative()
org.apache.commons.math3.analysis.function.Exp.derivative() org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.derivative()
org.apache.commons.math3.analysis.function.Exp.derivative() org.apache.commons.math3.analysis.function.Log1p.derivative()
org.apache.commons.math3.analysis.function.Exp.derivative() org.apache.commons.math3.analysis.function.Asin.derivative()
org.apache.commons.math3.analysis.function.Exp.derivative() org.apache.commons.math3.analysis.function.Cos.derivative()
org.apache.commons.math3.analysis.function.Exp.derivative() org.apache.commons.math3.analysis.function.Asinh.derivative()
org.apache.commons.math3.analysis.function.Exp.derivative() org.apache.commons.math3.analysis.function.Tan.derivative()
org.apache.commons.math3.analysis.function.Exp.derivative() org.apache.commons.math3.analysis.FunctionUtils$6.derivative()
org.apache.commons.math3.analysis.function.Exp.derivative() org.apache.commons.math3.analysis.function.Log.derivative()
org.apache.commons.math3.analysis.function.Exp.derivative() org.apache.commons.math3.analysis.function.Atan.derivative()
org.apache.commons.math3.analysis.function.Exp.derivative() org.apache.commons.math3.analysis.function.Acos.derivative()
org.apache.commons.math3.analysis.function.Exp.derivative() org.apache.commons.math3.analysis.FunctionUtils$14.derivative()
org.apache.commons.math3.analysis.function.Exp.derivative() org.apache.commons.math3.analysis.function.Identity.derivative()
org.apache.commons.math3.analysis.function.Exp.derivative() org.apache.commons.math3.analysis.function.Cosh.derivative()
org.apache.commons.math3.analysis.function.Exp.derivative() org.apache.commons.math3.analysis.FunctionUtils$9.derivative()
org.apache.commons.math3.analysis.function.Exp.derivative() org.apache.commons.math3.analysis.function.Logistic.derivative()
org.apache.commons.math3.analysis.function.Exp.derivative() org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative()
org.apache.commons.math3.analysis.function.Exp.derivative() org.apache.commons.math3.analysis.function.Inverse.derivative()
org.apache.commons.math3.analysis.function.Exp.derivative() org.apache.commons.math3.analysis.function.Sin.derivative()
org.apache.commons.math3.optimization.direct.PowellOptimizer$LineSearch$1.value(double) org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.computeObjectiveValue(double[])
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.acos() java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.acos() org.apache.commons.math3.analysis.differentiation.DSCompiler.acos(double[],int,double[],int)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.acos() org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DSCompiler)
org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer$1.compare(org.apache.commons.math3.optim.PointValuePair,org.apache.commons.math3.optim.PointValuePair) java.lang.Object.clinit()
org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer$1.compare(org.apache.commons.math3.optim.PointValuePair,org.apache.commons.math3.optim.PointValuePair) java.lang.Double.compare(double,double)
org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer$1.compare(org.apache.commons.math3.optim.PointValuePair,org.apache.commons.math3.optim.PointValuePair) java.lang.Double.doubleValue()
org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer$1.compare(org.apache.commons.math3.optim.PointValuePair,org.apache.commons.math3.optim.PointValuePair) org.apache.commons.math3.optim.nonlinear.scalar.GoalType.clinit()
org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer$1.compare(org.apache.commons.math3.optim.PointValuePair,org.apache.commons.math3.optim.PointValuePair) org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer.access$000(org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer)
org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer$1.compare(org.apache.commons.math3.optim.PointValuePair,org.apache.commons.math3.optim.PointValuePair) java.lang.Double.clinit()
org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer$1.compare(org.apache.commons.math3.optim.PointValuePair,org.apache.commons.math3.optim.PointValuePair) org.apache.commons.math3.util.Pair.getValue()
org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer$1.compare(org.apache.commons.math3.optim.PointValuePair,org.apache.commons.math3.optim.PointValuePair) org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.getGoalType()
org.apache.commons.math3.linear.BlockRealMatrix.getEntry(int,int) java.lang.Object.clinit()
org.apache.commons.math3.linear.BlockRealMatrix.getEntry(int,int) org.apache.commons.math3.linear.MatrixUtils.clinit()
org.apache.commons.math3.linear.BlockRealMatrix.getEntry(int,int) org.apache.commons.math3.linear.MatrixUtils.checkMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int,int)
org.apache.commons.math3.linear.BlockRealMatrix.getEntry(int,int) org.apache.commons.math3.linear.BlockRealMatrix.blockWidth(int)
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.hashCode() org.apache.commons.math3.stat.descriptive.moment.Variance.getN()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.hashCode() org.apache.commons.math3.stat.descriptive.rank.Max.getResult()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.hashCode() org.apache.commons.math3.stat.descriptive.summary.SumOfLogs.getResult()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.hashCode() org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.getResult()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.hashCode() org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getN()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.hashCode() org.apache.commons.math3.stat.descriptive.rank.Max.getN()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.hashCode() org.apache.commons.math3.stat.descriptive.moment.Kurtosis.getN()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.hashCode() org.apache.commons.math3.stat.descriptive.summary.Sum.getN()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.hashCode() org.apache.commons.math3.stat.descriptive.summary.SumOfSquares.getResult()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.hashCode() org.apache.commons.math3.stat.descriptive.moment.Skewness.getN()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.hashCode() org.apache.commons.math3.stat.descriptive.moment.SecondMoment.getResult()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.hashCode() org.apache.commons.math3.stat.descriptive.moment.FourthMoment.getResult()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.hashCode() org.apache.commons.math3.stat.descriptive.moment.Mean.getResult()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.hashCode() org.apache.commons.math3.stat.descriptive.moment.Skewness.getResult()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.hashCode() java.lang.Object.clinit()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.hashCode() org.apache.commons.math3.stat.descriptive.moment.Mean.getN()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.hashCode() org.apache.commons.math3.stat.descriptive.summary.Product.getResult()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.hashCode() org.apache.commons.math3.stat.descriptive.summary.SumOfSquares.getN()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.hashCode() org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.getN()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.hashCode() org.apache.commons.math3.stat.descriptive.moment.SecondMoment.getN()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.hashCode() org.apache.commons.math3.stat.descriptive.moment.FirstMoment.getN()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.hashCode() org.apache.commons.math3.stat.descriptive.moment.FirstMoment.getResult()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.hashCode() org.apache.commons.math3.stat.descriptive.summary.SumOfLogs.getN()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.hashCode() org.apache.commons.math3.stat.descriptive.rank.Min.getResult()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.hashCode() org.apache.commons.math3.util.MathUtils.hash(double)
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.hashCode() org.apache.commons.math3.stat.descriptive.moment.ThirdMoment.getResult()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.hashCode() org.apache.commons.math3.stat.descriptive.summary.Product.getN()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.hashCode() org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getResult()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.hashCode() org.apache.commons.math3.stat.descriptive.moment.Kurtosis.getResult()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.hashCode() org.apache.commons.math3.stat.descriptive.moment.Variance.getResult()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.hashCode() org.apache.commons.math3.stat.descriptive.rank.Min.getN()
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.hashCode() org.apache.commons.math3.stat.descriptive.summary.Sum.getResult()
org.apache.commons.math3.analysis.function.Gaussian.value(double,double,double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Gaussian.value(double,double,double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.function.Gaussian.value(double,double,double) org.apache.commons.math3.util.FastMath.exp(double)
org.apache.commons.math3.complex.Quaternion.toString() java.lang.Object.clinit()
org.apache.commons.math3.complex.Quaternion.toString() java.lang.StringBuilder.append(double)
org.apache.commons.math3.complex.Quaternion.toString() java.lang.StringBuilder()
org.apache.commons.math3.complex.Quaternion.toString() java.lang.StringBuilder.append(java.lang.String)
org.apache.commons.math3.complex.Quaternion.toString() java.lang.StringBuilder.toString()
org.apache.commons.math3.dfp.Dfp.align(int) java.lang.Object.clinit()
org.apache.commons.math3.dfp.Dfp.align(int) org.apache.commons.math3.dfp.Dfp.dotrap(int,java.lang.String,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)
org.apache.commons.math3.dfp.Dfp.align(int) org.apache.commons.math3.dfp.DfpField.setIEEEFlagsBits(int)
org.apache.commons.math3.dfp.Dfp.align(int) java.util.Arrays.fill(int[],int)
org.apache.commons.math3.dfp.Dfp.align(int) org.apache.commons.math3.dfp.Dfp.shiftLeft()
org.apache.commons.math3.dfp.Dfp.align(int) java.util.Arrays.clinit()
org.apache.commons.math3.dfp.Dfp.align(int) org.apache.commons.math3.dfp.Dfp.shiftRight()
org.apache.commons.math3.stat.descriptive.moment.Mean() java.lang.Object.clinit()
org.apache.commons.math3.stat.descriptive.moment.Mean() org.apache.commons.math3.stat.descriptive.moment.FirstMoment()
org.apache.commons.math3.stat.descriptive.moment.Mean() org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic()
org.apache.commons.math3.analysis.function.Tan.derivative() org.apache.commons.math3.analysis.function.Cbrt.derivative()
org.apache.commons.math3.analysis.function.Tan.derivative() org.apache.commons.math3.analysis.function.Minus.derivative()
org.apache.commons.math3.analysis.function.Tan.derivative() org.apache.commons.math3.analysis.function.Tanh.derivative()
org.apache.commons.math3.analysis.function.Tan.derivative() org.apache.commons.math3.analysis.FunctionUtils.toDifferentiableUnivariateFunction(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction)
org.apache.commons.math3.analysis.function.Tan.derivative() org.apache.commons.math3.analysis.function.Expm1.derivative()
org.apache.commons.math3.analysis.function.Tan.derivative() org.apache.commons.math3.analysis.function.Power.derivative()
org.apache.commons.math3.analysis.function.Tan.derivative() org.apache.commons.math3.analysis.function.Logit.derivative()
org.apache.commons.math3.analysis.function.Tan.derivative() org.apache.commons.math3.analysis.function.Sinc.derivative()
org.apache.commons.math3.analysis.function.Tan.derivative() org.apache.commons.math3.analysis.function.Constant.derivative()
org.apache.commons.math3.analysis.function.Tan.derivative() org.apache.commons.math3.analysis.function.Log10.derivative()
org.apache.commons.math3.analysis.function.Tan.derivative() org.apache.commons.math3.analysis.function.Sigmoid.derivative()
org.apache.commons.math3.analysis.function.Tan.derivative() org.apache.commons.math3.analysis.function.Acosh.derivative()
org.apache.commons.math3.analysis.function.Tan.derivative() org.apache.commons.math3.analysis.function.Exp.derivative()
org.apache.commons.math3.analysis.function.Tan.derivative() org.apache.commons.math3.analysis.function.Sinh.derivative()
org.apache.commons.math3.analysis.function.Tan.derivative() java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Tan.derivative() org.apache.commons.math3.analysis.polynomials.PolynomialFunction.derivative()
org.apache.commons.math3.analysis.function.Tan.derivative() org.apache.commons.math3.analysis.function.Gaussian.derivative()
org.apache.commons.math3.analysis.function.Tan.derivative() org.apache.commons.math3.analysis.function.Atanh.derivative()
org.apache.commons.math3.analysis.function.Tan.derivative() org.apache.commons.math3.analysis.function.Sqrt.derivative()
org.apache.commons.math3.analysis.function.Tan.derivative() org.apache.commons.math3.analysis.FunctionUtils$3.derivative()
org.apache.commons.math3.analysis.function.Tan.derivative() org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.derivative()
org.apache.commons.math3.analysis.function.Tan.derivative() org.apache.commons.math3.analysis.function.Log1p.derivative()
org.apache.commons.math3.analysis.function.Tan.derivative() org.apache.commons.math3.analysis.function.Asin.derivative()
org.apache.commons.math3.analysis.function.Tan.derivative() org.apache.commons.math3.analysis.function.Cos.derivative()
org.apache.commons.math3.analysis.function.Tan.derivative() org.apache.commons.math3.analysis.function.Asinh.derivative()
org.apache.commons.math3.analysis.function.Tan.derivative() org.apache.commons.math3.analysis.function.Tan.derivative()
org.apache.commons.math3.analysis.function.Tan.derivative() org.apache.commons.math3.analysis.FunctionUtils$6.derivative()
org.apache.commons.math3.analysis.function.Tan.derivative() org.apache.commons.math3.analysis.function.Log.derivative()
org.apache.commons.math3.analysis.function.Tan.derivative() org.apache.commons.math3.analysis.function.Atan.derivative()
org.apache.commons.math3.analysis.function.Tan.derivative() org.apache.commons.math3.analysis.function.Acos.derivative()
org.apache.commons.math3.analysis.function.Tan.derivative() org.apache.commons.math3.analysis.FunctionUtils$14.derivative()
org.apache.commons.math3.analysis.function.Tan.derivative() org.apache.commons.math3.analysis.function.Identity.derivative()
org.apache.commons.math3.analysis.function.Tan.derivative() org.apache.commons.math3.analysis.function.Cosh.derivative()
org.apache.commons.math3.analysis.function.Tan.derivative() org.apache.commons.math3.analysis.FunctionUtils$9.derivative()
org.apache.commons.math3.analysis.function.Tan.derivative() org.apache.commons.math3.analysis.function.Logistic.derivative()
org.apache.commons.math3.analysis.function.Tan.derivative() org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative()
org.apache.commons.math3.analysis.function.Tan.derivative() org.apache.commons.math3.analysis.function.Inverse.derivative()
org.apache.commons.math3.analysis.function.Tan.derivative() org.apache.commons.math3.analysis.function.Sin.derivative()
org.apache.commons.math3.fraction.AbstractFormat.format(double,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.fraction.BigFractionFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)
org.apache.commons.math3.fraction.AbstractFormat.format(double,java.lang.StringBuffer,java.text.FieldPosition) java.lang.Object.clinit()
org.apache.commons.math3.fraction.AbstractFormat.format(double,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.fraction.FractionFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)
org.apache.commons.math3.fraction.AbstractFormat.format(double,java.lang.StringBuffer,java.text.FieldPosition) java.lang.Double.valueOf(double)
org.apache.commons.math3.fraction.AbstractFormat.format(double,java.lang.StringBuffer,java.text.FieldPosition) java.text.NumberFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)
org.apache.commons.math3.fraction.AbstractFormat.format(double,java.lang.StringBuffer,java.text.FieldPosition) java.lang.Double.clinit()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) sun.text.CompactByteArray.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.awt.geom.AffineTransform.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) sun.security.krb5.internal.KerberosTime.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.util.Hashtable.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) sun.security.krb5.internal.Ticket.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) sun.text.IntHashtable.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) sun.security.util.BitArray.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) com.sun.imageio.plugins.jpeg.DHTMarkerSegment$Htable.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.util.SimpleTimeZone.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.util.IdentityHashMap.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.util.JapaneseImperialCalendar.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) sun.security.krb5.internal.ETypeInfo.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) sun.text.normalizer.NormalizerBase.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.util.Locale.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) sun.security.krb5.internal.TicketFlags.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) sun.java2d.SunGraphics2D.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) sun.security.provider.MD4.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) javax.swing.tree.DefaultTreeSelectionModel.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.awt.print.Paper.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.text.MessageFormat.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.lang.Object.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) javax.swing.text.SimpleAttributeSet.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) javax.swing.ArrayTable.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.text.SimpleDateFormat.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) sun.java2d.loops.FontInfo.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) sun.security.krb5.PrincipalName.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.awt.PageAttributes.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) com.sun.imageio.plugins.png.PNGMetadata.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.util.GregorianCalendar.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) com.sun.imageio.plugins.jpeg.SOFMarkerSegment.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.util.Vector.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) javax.swing.text.ElementIterator.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.net.HttpCookie.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.awt.datatransfer.MimeType.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.awt.RenderingHints.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.text.DateFormatSymbols.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.util.HashSet.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) sun.util.calendar.ImmutableGregorianDate.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) javax.sound.midi.MetaMessage.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) sun.font.FontLineMetrics.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) sun.font.StandardGlyphVector.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.text.AttributedString$AttributedStringIterator.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.text.RuleBasedBreakIterator.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) javax.swing.text.Segment.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.awt.ImageCapabilities.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) sun.security.krb5.internal.LastReqEntry.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) javax.swing.text.StyleContext$SmallAttributeSet.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.text.RuleBasedCollator.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.text.RuleBasedBreakIterator$SafeCharIterator.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) javax.swing.text.ElementIterator$StackItem.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$ICCMarkerSegment.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.lang.Object()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.awt.geom.Line2D.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.util.ResourceBundle$CacheKey.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumbJPEG.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) sun.security.krb5.internal.ETypeInfo2.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.awt.font.TextMeasurer.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.util.LinkedList.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) sun.font.AttributeValues.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) javax.swing.text.StyledEditorKit$1.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.util.ArrayDeque.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) javax.swing.text.GlyphView.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.awt.datatransfer.DataFlavor.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) sun.security.krb5.internal.PAData.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) javax.swing.AbstractAction.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) sun.text.normalizer.ReplaceableUCharacterIterator.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.util.concurrent.CopyOnWriteArrayList.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumb.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.awt.geom.Point2D.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) javax.swing.text.html.OptionListModel.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) sun.security.krb5.internal.AuthorizationDataEntry.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) javax.swing.text.EditorKit.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) javax.swing.text.StyledEditorKit.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) com.sun.imageio.plugins.jpeg.DQTMarkerSegment.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.util.JumboEnumSet.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) sun.security.krb5.internal.HostAddresses.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) javax.crypto.Mac.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) javax.naming.Reference.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) com.sun.imageio.plugins.jpeg.SOSMarkerSegment.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.util.jar.Manifest.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) sun.security.krb5.EncryptedData.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.text.NumberFormat.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) sun.net.ProgressSource.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.util.EnumSet.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) sun.net.www.protocol.http.AuthenticationInfo.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.awt.datatransfer.MimeTypeParameterList.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.util.regex.Pattern$CharPropertyNames$CloneableProperty.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.security.SignatureSpi.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) sun.security.x509.GeneralSubtrees.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.util.ArrayList.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) com.sun.imageio.plugins.jpeg.DHTMarkerSegment.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) javax.naming.CompositeName.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.awt.font.CharArrayIterator.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.security.Signature$Delegate.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.util.TreeSet.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.util.Hashtable$Entry.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.awt.image.ImageFilter.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) com.sun.imageio.plugins.jpeg.SOSMarkerSegment$ScanComponentSpec.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.awt.geom.Path2D$Float.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) sun.security.krb5.EncryptionKey.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.text.DecimalFormat.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.awt.BufferCapabilities.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.awt.image.Kernel.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.util.Date.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.awt.Insets.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) sun.net.www.MimeEntry.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) sun.util.calendar.CalendarDate.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.awt.print.PageFormat.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) com.sun.imageio.plugins.jpeg.SOFMarkerSegment$ComponentSpec.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.util.EnumMap.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) sun.security.krb5.internal.AuthorizationData.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFExtensionMarkerSegment.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.awt.geom.QuadCurve2D.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) sun.security.krb5.internal.crypto.crc32.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.util.zip.ZipEntry.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.security.MessageDigest$Delegate.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) sun.util.calendar.ZoneInfo.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) sun.text.normalizer.CharacterIteratorWrapper.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.text.DecimalFormatSymbols.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.awt.font.TextLayout.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) javax.swing.DefaultListSelectionModel.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.text.DigitList.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) javax.print.attribute.EnumSyntax.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) javax.sound.midi.ShortMessage.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.awt.geom.CubicCurve2D.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.text.ChoiceFormat.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.lang.Thread.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) com.sun.imageio.plugins.jpeg.MarkerSegment.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.awt.image.renderable.RenderContext.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) sun.security.krb5.Realm.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) com.sun.imageio.plugins.jpeg.DQTMarkerSegment$Qtable.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.awt.JobAttributes.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) com.sun.imageio.plugins.jpeg.JPEGMetadata.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.text.StringCharacterIterator.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.awt.geom.Dimension2D.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) sun.security.x509.NameConstraintsExtension.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.awt.geom.Area.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.util.jar.Attributes.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) sun.security.krb5.internal.HostAddress.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.util.TreeMap.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.awt.geom.Path2D$Double.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.text.BreakIterator.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.util.BitSet.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.lang.Enum.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.util.AbstractMap.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) javax.swing.tree.DefaultMutableTreeNode.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.awt.geom.RectangularShape.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) sun.security.provider.PolicyParser$GrantEntry.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.util.HashMap.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) javax.swing.text.html.HTMLEditorKit.clone()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.isEmpty() org.apache.commons.math3.geometry.partitioning.AbstractRegion.isEmpty(org.apache.commons.math3.geometry.partitioning.BSPTree)
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) sun.util.PreHashedMap$1$1.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.SubList.size()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.Collections$UnmodifiableCollection.size()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) javax.security.auth.Subject$SecureSet$1.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) org.apache.commons.math3.linear.RealVector$SparseEntryIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.Collections$SingletonList.iterator()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.concurrent.CopyOnWriteArrayList$COWIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) sun.net.www.MessageHeader$HeaderIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) sun.util.PreHashedMap$2$1.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.Arrays$ArrayList.size()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) org.apache.commons.math3.util.MultidimensionalCounter$Iterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) sun.net.www.HeaderParser$ParserIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.concurrent.ArrayBlockingQueue$Itr.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) javax.imageio.ImageIO$ImageWriterIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.AbstractSequentialList.iterator()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.JumboEnumSet$EnumSetIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.LinkedList$ListItr.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.ServiceLoader$LazyIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) sun.nio.fs.UnixFileSystem$FileStoreIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.concurrent.DelayQueue$Itr.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) javax.imageio.spi.PartialOrderIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.TreeMap$NavigableSubMap$SubMapKeyIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.concurrent.ConcurrentHashMap$ValueIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.LinkedList$DescendingIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.JumboEnumSet$EnumSetIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.concurrent.ConcurrentHashMap$KeyIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.concurrent.DelayQueue$Itr.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.LinkedList$DescendingIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) sun.util.PreHashedMap$2$1.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) sun.awt.util.IdentityArrayList.size()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.LinkedList.size()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric.value(double,double[])
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.WeakHashMap$HashIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.LinkedHashMap$EntryIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.IdentityHashMap$KeyIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) org.apache.commons.math3.fitting.GaussianFitter$1.value(double,double[])
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.IdentityHashMap$ValueIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.Collections$CopiesList.size()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.ArrayList$SubList.iterator()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.AbstractMap$1$1.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) org.apache.commons.math3.linear.RealVector$2$2.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) com.sun.imageio.plugins.jpeg.ImageTypeIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) org.apache.commons.math3.analysis.function.Logit$Parametric.value(double,double[])
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) javax.imageio.spi.FilterIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.ArrayDeque$DescendingIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.Hashtable$Enumerator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) org.apache.commons.math3.linear.RealVector$1.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.Collections$CheckedCollection.size()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.HashMap$EntryIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.Collections$CheckedMap$CheckedEntrySet$1.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) org.apache.commons.math3.util.MultidimensionalCounter$Iterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) javax.security.auth.Subject$SecureSet$1.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.concurrent.CopyOnWriteArrayList$COWSubList.iterator()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) org.apache.commons.math3.fitting.GaussianCurveFitter$1.value(double,double[])
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) org.apache.commons.math3.analysis.function.Gaussian$Parametric.value(double,double[])
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) org.apache.commons.math3.analysis.function.Logistic$Parametric.value(double,double[])
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.Collections$UnmodifiableList$1.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.Collections$SynchronizedCollection.size()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) sun.nio.cs.FastCharsetProvider$1.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.concurrent.ArrayBlockingQueue$Itr.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.Collections$CheckedList$1.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.Vector$Itr.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.ArrayList$SubList$1.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.Collections$UnmodifiableCollection.iterator()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.HashMap$ValueIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) sun.misc.SoftCache$EntrySet$1.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.ArrayList$SubList$1.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.concurrent.CopyOnWriteArrayList$COWIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.concurrent.ConcurrentHashMap$HashIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.ArrayList$SubList.size()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.IdentityHashMap$IdentityHashMapIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.lang.ProcessEnvironment$StringEntrySet$1.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) sun.net.www.HeaderParser$ParserIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.concurrent.LinkedBlockingDeque$AbstractItr.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) sun.nio.cs.FastCharsetProvider$1.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) sun.nio.fs.AbstractPath$1.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.EnumMap$KeyIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) sun.security.jca.ProviderList$ServiceList.size()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.LinkedList$ListItr.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.Collections$EmptyIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.concurrent.CopyOnWriteArrayList.size()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.Scanner.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) javax.imageio.spi.FilterIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.Collections$CheckedCollection$1.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.ArrayDeque$DescendingIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.concurrent.ConcurrentHashMap$EntryIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) org.apache.commons.math3.util.CombinatoricsUtils$SingletonIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.LinkedHashMap$KeyIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.concurrent.LinkedBlockingQueue$Itr.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) org.apache.commons.math3.linear.RealVector$2$2.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.Collections$CheckedList$1.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.ArrayList.iterator()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) javax.imageio.ImageIO$ImageWriterIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.Collections$EmptyList.iterator()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.Collections$1.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) org.apache.commons.math3.util.CombinatoricsUtils$LexicographicCombinationIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.concurrent.LinkedBlockingDeque$AbstractItr.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.concurrent.ConcurrentLinkedQueue$Itr.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.ArrayDeque$DeqIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.LinkedHashMap$LinkedHashIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.concurrent.LinkedBlockingQueue$Itr.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.lang.ProcessEnvironment$StringEntrySet$1.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) sun.util.PreHashedMap$1$1.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) org.apache.commons.math3.optimization.fitting.WeightedObservedPoint.getX()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.lang.ProcessEnvironment$StringValues$1.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.WeakHashMap$EntryIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) javax.print.MimeType$ParameterMapEntrySetIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.AbstractMap$1$1.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) org.apache.commons.math3.optimization.fitting.CurveFitter.access$000(org.apache.commons.math3.optimization.fitting.CurveFitter)
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) sun.awt.util.IdentityLinkedList$DescendingIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.lang.ProcessEnvironment$StringKeySet$1.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.concurrent.CopyOnWriteArrayList$COWSubList.size()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) javax.imageio.ImageIO$ImageReaderIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.TreeMap$DescendingKeyIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) javax.imageio.ImageIO$ImageReaderIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.TreeMap$PrivateEntryIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) sun.misc.Service$LazyIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.Scanner.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.WeakHashMap$ValueIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) org.apache.commons.math3.linear.RealVector$SparseEntryIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.IdentityHashMap$EntryIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.Collections$CheckedCollection.iterator()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.PriorityQueue$Itr.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.Hashtable$Enumerator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.RegularEnumSet$EnumSetIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) javax.print.MimeType$ParameterMapEntrySetIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.WeakHashMap$KeyIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) sun.awt.util.IdentityLinkedList.size()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.Collections$CheckedMap$CheckedEntrySet$1.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) sun.security.jca.ProviderList$ServiceList.iterator()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.SubList$1.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.AbstractList.iterator()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.Collections$SynchronizedCollection.iterator()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.Collections$EmptyIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.LinkedHashMap$ValueIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.ServiceLoader$1.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.TreeMap$NavigableSubMap$SubMapEntryIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.TreeMap$ValueIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.Collections$EmptyList.size()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) org.apache.commons.math3.util.CombinatoricsUtils$LexicographicCombinationIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.AbstractMap$2$1.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.EnumMap$ValueIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.lang.ProcessEnvironment$StringValues$1.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) sun.nio.fs.AbstractPath$1.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) sun.security.jca.ProviderList$3.size()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.SubList.iterator()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.TreeMap$EntryIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) org.apache.commons.math3.linear.RealVector$1.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) org.apache.commons.math3.util.CombinatoricsUtils$SingletonIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) sun.awt.util.IdentityLinkedList$ListItr.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.EnumMap$EntryIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.Collections$UnmodifiableList$1.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) org.apache.commons.math3.linear.RealVector$2$1.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.ArrayList$Itr.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.nio.charset.Charset$1.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.Collections$UnmodifiableCollection$1.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) org.apache.commons.math3.optimization.fitting.GaussianFitter$1.value(double,double[])
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) com.sun.imageio.plugins.jpeg.ImageTypeIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.TreeMap$KeyIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.SubList$1.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.lang.ProcessEnvironment$StringKeySet$1.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.Collections$UnmodifiableCollection$1.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.RegularEnumSet$EnumSetIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) sun.misc.SoftCache$EntrySet$1.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.HashMap$KeyIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) sun.security.jca.ProviderList$ServiceList$1.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.Collections$SingletonList.size()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.PriorityQueue$Itr.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.Collections$1.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.ArrayList$Itr.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.EnumMap$EnumMapIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) org.apache.commons.math3.analysis.function.Sigmoid$Parametric.value(double,double[])
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.AbstractMap$2$1.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.ServiceLoader$1.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) javax.imageio.ImageIO$ImageTranscoderIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) sun.security.jca.ProviderList$ServiceList$1.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.ServiceLoader$LazyIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.Vector$Itr.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.ArrayDeque$DeqIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.lang.Object.clinit()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.Vector.size()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) org.apache.commons.math3.analysis.function.HarmonicOscillator$Parametric.value(double,double[])
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.Collections$CheckedCollection$1.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.AbstractList$Itr.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) sun.misc.Service$LazyIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.nio.charset.Charset$1.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.ArrayList.size()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.concurrent.ConcurrentLinkedQueue$Itr.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) sun.net.www.MessageHeader$HeaderIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) sun.nio.fs.UnixFileSystem$FileStoreIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) sun.awt.util.IdentityLinkedList$DescendingIterator.next()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) sun.awt.util.IdentityLinkedList$ListItr.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) javax.imageio.spi.PartialOrderIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.Vector.iterator()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.TreeMap$NavigableSubMap$SubMapIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.concurrent.CopyOnWriteArrayList.iterator()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) javax.imageio.ImageIO$ImageTranscoderIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.AbstractList$Itr.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) java.util.HashMap$HashIterator.hasNext()
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[]) org.apache.commons.math3.linear.RealVector$2$1.hasNext()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getResult() org.apache.commons.math3.stat.descriptive.moment.Variance.getN()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getResult() org.apache.commons.math3.stat.descriptive.rank.Max.getResult()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getResult() org.apache.commons.math3.stat.descriptive.summary.SumOfLogs.getResult()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getResult() org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.getResult()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getResult() org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getN()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getResult() org.apache.commons.math3.stat.descriptive.rank.Max.getN()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getResult() org.apache.commons.math3.stat.descriptive.summary.Sum.getN()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getResult() org.apache.commons.math3.stat.descriptive.moment.Kurtosis.getN()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getResult() org.apache.commons.math3.stat.descriptive.summary.SumOfSquares.getResult()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getResult() org.apache.commons.math3.stat.descriptive.moment.SecondMoment.getResult()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getResult() org.apache.commons.math3.stat.descriptive.moment.Skewness.getN()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getResult() org.apache.commons.math3.stat.descriptive.moment.FourthMoment.getResult()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getResult() org.apache.commons.math3.stat.descriptive.moment.Mean.getResult()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getResult() org.apache.commons.math3.stat.descriptive.moment.Skewness.getResult()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getResult() java.lang.Object.clinit()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getResult() org.apache.commons.math3.stat.descriptive.moment.Mean.getN()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getResult() org.apache.commons.math3.stat.descriptive.summary.Product.getResult()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getResult() org.apache.commons.math3.stat.descriptive.summary.SumOfSquares.getN()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getResult() org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.getN()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getResult() org.apache.commons.math3.stat.descriptive.moment.SecondMoment.getN()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getResult() org.apache.commons.math3.stat.descriptive.moment.FirstMoment.getN()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getResult() org.apache.commons.math3.stat.descriptive.moment.FirstMoment.getResult()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getResult() org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getResult() org.apache.commons.math3.stat.descriptive.summary.SumOfLogs.getN()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getResult() org.apache.commons.math3.stat.descriptive.rank.Min.getResult()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getResult() org.apache.commons.math3.stat.descriptive.moment.ThirdMoment.getResult()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getResult() org.apache.commons.math3.stat.descriptive.summary.Product.getN()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getResult() org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getResult()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getResult() org.apache.commons.math3.stat.descriptive.moment.Kurtosis.getResult()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getResult() org.apache.commons.math3.stat.descriptive.moment.Variance.getResult()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getResult() org.apache.commons.math3.stat.descriptive.rank.Min.getN()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getResult() org.apache.commons.math3.util.FastMath.exp(double)
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getResult() org.apache.commons.math3.stat.descriptive.summary.Sum.getResult()
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.add(org.apache.commons.math3.geometry.Vector) java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.add(org.apache.commons.math3.geometry.Vector) org.apache.commons.math3.geometry.euclidean.threed.Vector3D.clinit()
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.add(org.apache.commons.math3.geometry.Vector) org.apache.commons.math3.geometry.euclidean.threed.Vector3D(double,double,double)
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction.searchIndex(double,double[]) org.apache.commons.math3.exception.OutOfRangeException(java.lang.Number,java.lang.Number,java.lang.Number)
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction.searchIndex(double,double[]) java.lang.Object.clinit()
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction.searchIndex(double,double[]) java.lang.Double.valueOf(double)
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction.searchIndex(double,double[]) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction.searchIndex(double,double[]) java.lang.Throwable.clinit()
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction.searchIndex(double,double[]) java.util.Arrays.binarySearch(double[],double)
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction.searchIndex(double,double[]) java.util.Arrays.clinit()
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction.searchIndex(double,double[]) java.lang.Double.clinit()
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.function.Sqrt.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.function.Ulp.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.function.Acos.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.function.Asin.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.function.Rint.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.function.Gaussian.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.function.Tan.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.ode.events.EventState$1.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.function.Sinc.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$7.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.function.Sin.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.function.Log1p.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.function.Identity.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$3.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.function.Signum.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.distribution.AbstractRealDistribution$1.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.function.Exp.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.function.Logit.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.function.Acosh.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$2.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator$1.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.function.Log10.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$1.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$12.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$8.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.function.Constant.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.function.Atan.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.function.Logistic.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.function.Sinh.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.function.Cosh.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.function.Floor.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.function.Expm1.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.function.Power.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.function.Cbrt.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.optimization.direct.PowellOptimizer$LineSearch$1.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.function.HarmonicOscillator.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.function.Asinh.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$4.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$6.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.function.StepFunction.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.function.Minus.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$13.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.function.Tanh.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$9.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.function.Cos.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.function.Atanh.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$10.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.function.Log.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.function.Sigmoid.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.function.Inverse.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$5.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch$1.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.function.Abs.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$15.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.function.Ceil.value(double)
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$14.value(double)
org.apache.commons.math3.analysis.function.Cosh.derivative() java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Cosh.derivative() org.apache.commons.math3.analysis.function.Sinh()
org.apache.commons.math3.analysis.function.Cosh.derivative() org.apache.commons.math3.analysis.function.Cosh.derivative()
org.apache.commons.math3.analysis.function.Asin.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.asin()
org.apache.commons.math3.linear.AbstractRealMatrix.operate(double[]) org.apache.commons.math3.exception.DimensionMismatchException(int,int)
org.apache.commons.math3.linear.AbstractRealMatrix.operate(double[]) org.apache.commons.math3.linear.BlockRealMatrix.getColumnDimension()
org.apache.commons.math3.linear.AbstractRealMatrix.operate(double[]) java.lang.Throwable.clinit()
org.apache.commons.math3.linear.AbstractRealMatrix.operate(double[]) org.apache.commons.math3.linear.DiagonalMatrix.getEntry(int,int)
org.apache.commons.math3.linear.AbstractRealMatrix.operate(double[]) org.apache.commons.math3.linear.OpenMapRealMatrix.getRowDimension()
org.apache.commons.math3.linear.AbstractRealMatrix.operate(double[]) org.apache.commons.math3.linear.DiagonalMatrix.getRowDimension()
org.apache.commons.math3.linear.AbstractRealMatrix.operate(double[]) org.apache.commons.math3.linear.OpenMapRealMatrix.getColumnDimension()
org.apache.commons.math3.linear.AbstractRealMatrix.operate(double[]) org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension()
org.apache.commons.math3.linear.AbstractRealMatrix.operate(double[]) java.lang.Object.clinit()
org.apache.commons.math3.linear.AbstractRealMatrix.operate(double[]) org.apache.commons.math3.linear.OpenMapRealMatrix.getEntry(int,int)
org.apache.commons.math3.linear.AbstractRealMatrix.operate(double[]) org.apache.commons.math3.linear.BlockRealMatrix.getEntry(int,int)
org.apache.commons.math3.linear.AbstractRealMatrix.operate(double[]) org.apache.commons.math3.linear.BlockRealMatrix.getRowDimension()
org.apache.commons.math3.linear.AbstractRealMatrix.operate(double[]) org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry(int,int)
org.apache.commons.math3.linear.AbstractRealMatrix.operate(double[]) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.linear.AbstractRealMatrix.operate(double[]) org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension()
org.apache.commons.math3.linear.AbstractRealMatrix.operate(double[]) org.apache.commons.math3.linear.DiagonalMatrix.getColumnDimension()
org.apache.commons.math3.analysis.function.Constant.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Constant.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getOrder()
org.apache.commons.math3.analysis.function.Constant.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getFreeParameters()
org.apache.commons.math3.analysis.function.Constant.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure(int,int,double)
org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.set(org.apache.commons.math3.complex.Complex,int[]) java.lang.Object.clinit()
org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.set(org.apache.commons.math3.complex.Complex,int[]) org.apache.commons.math3.exception.DimensionMismatchException(int,int)
org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.set(org.apache.commons.math3.complex.Complex,int[]) java.lang.Throwable.clinit()
org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.set(org.apache.commons.math3.complex.Complex,int[]) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getMin() org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics.apply(org.apache.commons.math3.stat.descriptive.UnivariateStatistic)
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getMin() org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.apply(org.apache.commons.math3.stat.descriptive.UnivariateStatistic)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.value(double[]) org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapter.value(double[])
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.value(double[]) org.apache.commons.math3.analysis.FunctionUtils$16.value(double[])
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.value(double[]) org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$1.value(double[])
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.value(double[]) org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.unboundedToBounded(double[])
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.value(double[]) org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[])
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.value(double[]) org.apache.commons.math3.optimization.direct.SimplexOptimizer$1.value(double[])
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.value(double[]) org.apache.commons.math3.optim.nonlinear.scalar.LeastSquaresConverter.value(double[])
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.value(double[]) org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.value(double[])
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.value(double[]) org.apache.commons.math3.analysis.FunctionUtils$17.value(double[])
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.value(double[]) org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.value(double[])
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.value(double[]) org.apache.commons.math3.optim.linear.LinearObjectiveFunction.value(double[])
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.value(double[]) org.apache.commons.math3.analysis.FunctionUtils$11.value(double[])
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.value(double[]) org.apache.commons.math3.optimization.LeastSquaresConverter.value(double[])
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.value(double[]) org.apache.commons.math3.analysis.FunctionUtils$16$1.value(double[])
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.value(double[]) org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapter.value(double[])
org.apache.commons.math3.fraction.FractionFormat.format(org.apache.commons.math3.fraction.Fraction,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.fraction.AbstractFormat.format(long,java.lang.StringBuffer,java.text.FieldPosition)
org.apache.commons.math3.fraction.FractionFormat.format(org.apache.commons.math3.fraction.Fraction,java.lang.StringBuffer,java.text.FieldPosition) java.text.DecimalFormat.format(long,java.lang.StringBuffer,java.text.FieldPosition)
org.apache.commons.math3.fraction.FractionFormat.format(org.apache.commons.math3.fraction.Fraction,java.lang.StringBuffer,java.text.FieldPosition) java.text.FieldPosition.setBeginIndex(int)
org.apache.commons.math3.fraction.FractionFormat.format(org.apache.commons.math3.fraction.Fraction,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.fraction.Fraction.getDenominator()
org.apache.commons.math3.fraction.FractionFormat.format(org.apache.commons.math3.fraction.Fraction,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.fraction.Fraction.getNumerator()
org.apache.commons.math3.fraction.FractionFormat.format(org.apache.commons.math3.fraction.Fraction,java.lang.StringBuffer,java.text.FieldPosition) java.text.ChoiceFormat.format(long,java.lang.StringBuffer,java.text.FieldPosition)
org.apache.commons.math3.fraction.FractionFormat.format(org.apache.commons.math3.fraction.Fraction,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.fraction.AbstractFormat.getDenominatorFormat()
org.apache.commons.math3.fraction.FractionFormat.format(org.apache.commons.math3.fraction.Fraction,java.lang.StringBuffer,java.text.FieldPosition) java.text.FieldPosition.setEndIndex(int)
org.apache.commons.math3.fraction.FractionFormat.format(org.apache.commons.math3.fraction.Fraction,java.lang.StringBuffer,java.text.FieldPosition) java.lang.StringBuffer.append(java.lang.String)
org.apache.commons.math3.fraction.FractionFormat.format(org.apache.commons.math3.fraction.Fraction,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.fraction.AbstractFormat.getNumeratorFormat()
org.apache.commons.math3.analysis.function.Acos.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.acos()
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.access$000(org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet,double) org.apache.commons.math3.geometry.partitioning.AbstractRegion.setSize(double)
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getStandardDeviation() org.apache.commons.math3.stat.descriptive.SummaryStatistics.getStandardDeviation()
org.apache.commons.math3.analysis.function.Acos.value(double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Acos.value(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.function.Acos.value(double) org.apache.commons.math3.util.FastMath.acos(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapter.value(double[]) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapter.value(double[]) org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapter.value(double[])
org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapter.value(double[]) org.apache.commons.math3.analysis.FunctionUtils$16.value(double[])
org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapter.value(double[]) org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$1.value(double[])
org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapter.value(double[]) org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value(double[])
org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapter.value(double[]) org.apache.commons.math3.optimization.direct.SimplexOptimizer$1.value(double[])
org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapter.value(double[]) org.apache.commons.math3.optim.nonlinear.scalar.LeastSquaresConverter.value(double[])
org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapter.value(double[]) org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.value(double[])
org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapter.value(double[]) org.apache.commons.math3.util.FastMath.sqrt(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapter.value(double[]) java.lang.Object.clinit()
org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapter.value(double[]) org.apache.commons.math3.analysis.FunctionUtils$17.value(double[])
org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapter.value(double[]) org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.value(double[])
org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapter.value(double[]) org.apache.commons.math3.optim.linear.LinearObjectiveFunction.value(double[])
org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapter.value(double[]) org.apache.commons.math3.analysis.FunctionUtils$11.value(double[])
org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapter.value(double[]) org.apache.commons.math3.optimization.LeastSquaresConverter.value(double[])
org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapter.value(double[]) org.apache.commons.math3.analysis.FunctionUtils$16$1.value(double[])
org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapter.value(double[]) org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapter.value(double[])
org.apache.commons.math3.geometry.partitioning.BSPTree.chopOffMinus(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.twod.SubLine.split(org.apache.commons.math3.geometry.partitioning.Hyperplane)
org.apache.commons.math3.geometry.partitioning.BSPTree.chopOffMinus(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint.split(org.apache.commons.math3.geometry.partitioning.Hyperplane)
org.apache.commons.math3.geometry.partitioning.BSPTree.chopOffMinus(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane.getPlus()
org.apache.commons.math3.geometry.partitioning.BSPTree.chopOffMinus(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.threed.SubPlane.split(org.apache.commons.math3.geometry.partitioning.Hyperplane)
org.apache.commons.math3.geometry.partitioning.BSPTree.chopOffMinus(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.partitioning.BSPTree.chopOffMinus(org.apache.commons.math3.geometry.partitioning.Hyperplane)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.exp() java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.exp() org.apache.commons.math3.analysis.differentiation.DSCompiler.exp(double[],int,double[],int)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.exp() org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DSCompiler)
org.apache.commons.math3.analysis.function.Power.derivative() org.apache.commons.math3.analysis.function.Cbrt.derivative()
org.apache.commons.math3.analysis.function.Power.derivative() org.apache.commons.math3.analysis.function.Minus.derivative()
org.apache.commons.math3.analysis.function.Power.derivative() org.apache.commons.math3.analysis.function.Tanh.derivative()
org.apache.commons.math3.analysis.function.Power.derivative() org.apache.commons.math3.analysis.FunctionUtils.toDifferentiableUnivariateFunction(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction)
org.apache.commons.math3.analysis.function.Power.derivative() org.apache.commons.math3.analysis.function.Expm1.derivative()
org.apache.commons.math3.analysis.function.Power.derivative() org.apache.commons.math3.analysis.function.Power.derivative()
org.apache.commons.math3.analysis.function.Power.derivative() org.apache.commons.math3.analysis.function.Logit.derivative()
org.apache.commons.math3.analysis.function.Power.derivative() org.apache.commons.math3.analysis.function.Sinc.derivative()
org.apache.commons.math3.analysis.function.Power.derivative() org.apache.commons.math3.analysis.function.Constant.derivative()
org.apache.commons.math3.analysis.function.Power.derivative() org.apache.commons.math3.analysis.function.Log10.derivative()
org.apache.commons.math3.analysis.function.Power.derivative() org.apache.commons.math3.analysis.function.Sigmoid.derivative()
org.apache.commons.math3.analysis.function.Power.derivative() org.apache.commons.math3.analysis.function.Acosh.derivative()
org.apache.commons.math3.analysis.function.Power.derivative() org.apache.commons.math3.analysis.function.Exp.derivative()
org.apache.commons.math3.analysis.function.Power.derivative() org.apache.commons.math3.analysis.function.Sinh.derivative()
org.apache.commons.math3.analysis.function.Power.derivative() java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Power.derivative() org.apache.commons.math3.analysis.polynomials.PolynomialFunction.derivative()
org.apache.commons.math3.analysis.function.Power.derivative() org.apache.commons.math3.analysis.function.Gaussian.derivative()
org.apache.commons.math3.analysis.function.Power.derivative() org.apache.commons.math3.analysis.function.Atanh.derivative()
org.apache.commons.math3.analysis.function.Power.derivative() org.apache.commons.math3.analysis.function.Sqrt.derivative()
org.apache.commons.math3.analysis.function.Power.derivative() org.apache.commons.math3.analysis.FunctionUtils$3.derivative()
org.apache.commons.math3.analysis.function.Power.derivative() org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.derivative()
org.apache.commons.math3.analysis.function.Power.derivative() org.apache.commons.math3.analysis.function.Log1p.derivative()
org.apache.commons.math3.analysis.function.Power.derivative() org.apache.commons.math3.analysis.function.Asin.derivative()
org.apache.commons.math3.analysis.function.Power.derivative() org.apache.commons.math3.analysis.function.Cos.derivative()
org.apache.commons.math3.analysis.function.Power.derivative() org.apache.commons.math3.analysis.function.Asinh.derivative()
org.apache.commons.math3.analysis.function.Power.derivative() org.apache.commons.math3.analysis.function.Tan.derivative()
org.apache.commons.math3.analysis.function.Power.derivative() org.apache.commons.math3.analysis.FunctionUtils$6.derivative()
org.apache.commons.math3.analysis.function.Power.derivative() org.apache.commons.math3.analysis.function.Log.derivative()
org.apache.commons.math3.analysis.function.Power.derivative() org.apache.commons.math3.analysis.function.Atan.derivative()
org.apache.commons.math3.analysis.function.Power.derivative() org.apache.commons.math3.analysis.function.Acos.derivative()
org.apache.commons.math3.analysis.function.Power.derivative() org.apache.commons.math3.analysis.FunctionUtils$14.derivative()
org.apache.commons.math3.analysis.function.Power.derivative() org.apache.commons.math3.analysis.function.Identity.derivative()
org.apache.commons.math3.analysis.function.Power.derivative() org.apache.commons.math3.analysis.function.Cosh.derivative()
org.apache.commons.math3.analysis.function.Power.derivative() org.apache.commons.math3.analysis.FunctionUtils$9.derivative()
org.apache.commons.math3.analysis.function.Power.derivative() org.apache.commons.math3.analysis.function.Logistic.derivative()
org.apache.commons.math3.analysis.function.Power.derivative() org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative()
org.apache.commons.math3.analysis.function.Power.derivative() org.apache.commons.math3.analysis.function.Inverse.derivative()
org.apache.commons.math3.analysis.function.Power.derivative() org.apache.commons.math3.analysis.function.Sin.derivative()
org.apache.commons.math3.linear.RealVector$SparseEntryIterator.hasNext() org.apache.commons.math3.linear.OpenMapRealVector$OpenMapEntry.getIndex()
org.apache.commons.math3.linear.RealVector$SparseEntryIterator.hasNext() org.apache.commons.math3.linear.RealVector$Entry.getIndex()
org.apache.commons.math3.linear.ArrayRealVector.hashCode() java.lang.Object.clinit()
org.apache.commons.math3.linear.ArrayRealVector.hashCode() org.apache.commons.math3.linear.ArrayRealVector.isNaN()
org.apache.commons.math3.linear.ArrayRealVector.hashCode() org.apache.commons.math3.util.MathUtils.hash(double[])
org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization$DataRow.compareTo(org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization$DataRow) java.lang.Double.compareTo(java.lang.Double)
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getSumLog() org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getResults(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])
org.apache.commons.math3.geometry.VectorFormat.format(org.apache.commons.math3.geometry.Vector) java.lang.Object.clinit()
org.apache.commons.math3.geometry.VectorFormat.format(org.apache.commons.math3.geometry.Vector) java.text.FieldPosition(int)
org.apache.commons.math3.geometry.VectorFormat.format(org.apache.commons.math3.geometry.Vector) java.lang.StringBuffer.clinit()
org.apache.commons.math3.geometry.VectorFormat.format(org.apache.commons.math3.geometry.Vector) java.lang.StringBuffer.toString()
org.apache.commons.math3.geometry.VectorFormat.format(org.apache.commons.math3.geometry.Vector) org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormat.format(org.apache.commons.math3.geometry.Vector,java.lang.StringBuffer,java.text.FieldPosition)
org.apache.commons.math3.geometry.VectorFormat.format(org.apache.commons.math3.geometry.Vector) org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormat.format(org.apache.commons.math3.geometry.Vector,java.lang.StringBuffer,java.text.FieldPosition)
org.apache.commons.math3.geometry.VectorFormat.format(org.apache.commons.math3.geometry.Vector) org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat.format(org.apache.commons.math3.geometry.Vector,java.lang.StringBuffer,java.text.FieldPosition)
org.apache.commons.math3.geometry.VectorFormat.format(org.apache.commons.math3.geometry.Vector) java.lang.StringBuffer()
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.advance() java.lang.Object.clinit()
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.advance() java.lang.Throwable.clinit()
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.advance() org.apache.commons.math3.util.OpenIntToDoubleHashMap.access$400(org.apache.commons.math3.util.OpenIntToDoubleHashMap)
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.advance() java.util.NoSuchElementException()
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.advance() org.apache.commons.math3.util.OpenIntToDoubleHashMap.access$100(org.apache.commons.math3.util.OpenIntToDoubleHashMap)
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.advance() java.util.ConcurrentModificationException()
org.apache.commons.math3.stat.descriptive.moment.FourthMoment.increment(double) org.apache.commons.math3.stat.descriptive.moment.ThirdMoment.increment(double)
org.apache.commons.math3.linear.RealVector$1.remove() org.apache.commons.math3.exception.MathUnsupportedOperationException()
org.apache.commons.math3.linear.RealVector$1.remove() java.lang.Object.clinit()
org.apache.commons.math3.linear.RealVector$1.remove() java.lang.Throwable.clinit()
org.apache.commons.math3.linear.OpenMapRealVector.isNaN() java.lang.Object.clinit()
org.apache.commons.math3.linear.OpenMapRealVector.isNaN() org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.hasNext()
org.apache.commons.math3.linear.OpenMapRealVector.isNaN() java.lang.Double.isNaN(double)
org.apache.commons.math3.linear.OpenMapRealVector.isNaN() org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.value()
org.apache.commons.math3.linear.OpenMapRealVector.isNaN() java.lang.Double.clinit()
org.apache.commons.math3.linear.OpenMapRealVector.isNaN() org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.advance()
org.apache.commons.math3.linear.OpenMapRealVector.isNaN() org.apache.commons.math3.util.OpenIntToDoubleHashMap.iterator()
org.apache.commons.math3.linear.OpenMapRealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.OpenMapRealVector.subtract(org.apache.commons.math3.linear.OpenMapRealVector)
org.apache.commons.math3.linear.OpenMapRealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVector$2.getDimension()
org.apache.commons.math3.linear.OpenMapRealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVector.checkVectorDimensions(int)
org.apache.commons.math3.linear.OpenMapRealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.OpenMapRealVector.getDimension()
org.apache.commons.math3.linear.OpenMapRealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector)
org.apache.commons.math3.linear.OpenMapRealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.ArrayRealVector.getDimension()
org.apache.commons.math3.util.MathUtils.copySign(int,int) java.lang.Object.clinit()
org.apache.commons.math3.util.MathUtils.copySign(int,int) java.lang.Throwable.clinit()
org.apache.commons.math3.util.MathUtils.copySign(int,int) org.apache.commons.math3.exception.MathArithmeticException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])
org.apache.commons.math3.util.MathUtils.copySign(int,int) org.apache.commons.math3.exception.util.LocalizedFormats.clinit()
org.apache.commons.math3.geometry.partitioning.RegionFactory.recurseComplement(org.apache.commons.math3.geometry.partitioning.BSPTree) java.lang.Boolean.clinit()
org.apache.commons.math3.geometry.partitioning.RegionFactory.recurseComplement(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.partitioning.BSPTree.getMinus()
org.apache.commons.math3.geometry.partitioning.RegionFactory.recurseComplement(org.apache.commons.math3.geometry.partitioning.BSPTree) java.lang.Boolean.booleanValue()
org.apache.commons.math3.geometry.partitioning.RegionFactory.recurseComplement(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.partitioning.BSPTree.getAttribute()
org.apache.commons.math3.geometry.partitioning.RegionFactory.recurseComplement(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.partitioning.BoundaryAttribute.getPlusInside()
org.apache.commons.math3.geometry.partitioning.RegionFactory.recurseComplement(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.partitioning.RegionFactory.recurseComplement(org.apache.commons.math3.geometry.partitioning.BSPTree)
org.apache.commons.math3.geometry.partitioning.RegionFactory.recurseComplement(org.apache.commons.math3.geometry.partitioning.BSPTree) java.lang.Object.clinit()
org.apache.commons.math3.geometry.partitioning.RegionFactory.recurseComplement(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.partitioning.BSPTree.getCut()
org.apache.commons.math3.geometry.partitioning.RegionFactory.recurseComplement(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.partitioning.BSPTree(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.RegionFactory.recurseComplement(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.partitioning.BSPTree.getPlus()
org.apache.commons.math3.geometry.partitioning.RegionFactory.recurseComplement(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.partitioning.BoundaryAttribute(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.SubHyperplane)
org.apache.commons.math3.geometry.partitioning.RegionFactory.recurseComplement(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.partitioning.BoundaryAttribute.getPlusOutside()
org.apache.commons.math3.geometry.partitioning.RegionFactory.recurseComplement(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.partitioning.BSPTree(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,java.lang.Object)
org.apache.commons.math3.geometry.partitioning.RegionFactory.recurseComplement(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.copySelf()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.multiply(double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.multiply(double) org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.evaluate(double[],int,int) java.lang.Object.clinit()
org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.evaluate(double[],int,int) org.apache.commons.math3.util.FastMath.sqrt(double)
org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.evaluate(double[],int,int) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.moment.Variance.evaluate(double[],int,int)
org.apache.commons.math3.linear.OpenMapRealVector.subtract(org.apache.commons.math3.linear.OpenMapRealVector) org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.hasNext()
org.apache.commons.math3.linear.OpenMapRealVector.subtract(org.apache.commons.math3.linear.OpenMapRealVector) org.apache.commons.math3.linear.RealVector.checkVectorDimensions(int)
org.apache.commons.math3.linear.OpenMapRealVector.subtract(org.apache.commons.math3.linear.OpenMapRealVector) org.apache.commons.math3.util.OpenIntToDoubleHashMap.containsKey(int)
org.apache.commons.math3.linear.OpenMapRealVector.subtract(org.apache.commons.math3.linear.OpenMapRealVector) org.apache.commons.math3.linear.OpenMapRealVector.setEntry(int,double)
org.apache.commons.math3.linear.OpenMapRealVector.subtract(org.apache.commons.math3.linear.OpenMapRealVector) org.apache.commons.math3.linear.OpenMapRealVector.getDimension()
org.apache.commons.math3.linear.OpenMapRealVector.subtract(org.apache.commons.math3.linear.OpenMapRealVector) org.apache.commons.math3.util.OpenIntToDoubleHashMap.get(int)
org.apache.commons.math3.linear.OpenMapRealVector.subtract(org.apache.commons.math3.linear.OpenMapRealVector) org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.value()
org.apache.commons.math3.linear.OpenMapRealVector.subtract(org.apache.commons.math3.linear.OpenMapRealVector) org.apache.commons.math3.linear.OpenMapRealVector.copy()
org.apache.commons.math3.linear.OpenMapRealVector.subtract(org.apache.commons.math3.linear.OpenMapRealVector) org.apache.commons.math3.linear.OpenMapRealVector.getEntries()
org.apache.commons.math3.linear.OpenMapRealVector.subtract(org.apache.commons.math3.linear.OpenMapRealVector) org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.key()
org.apache.commons.math3.linear.OpenMapRealVector.subtract(org.apache.commons.math3.linear.OpenMapRealVector) org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.advance()
org.apache.commons.math3.linear.OpenMapRealVector.subtract(org.apache.commons.math3.linear.OpenMapRealVector) org.apache.commons.math3.util.OpenIntToDoubleHashMap.iterator()
org.apache.commons.math3.optim.linear.LinearConstraint.hashCode() java.lang.Object.clinit()
org.apache.commons.math3.optim.linear.LinearConstraint.hashCode() org.apache.commons.math3.linear.OpenMapRealVector.hashCode()
org.apache.commons.math3.optim.linear.LinearConstraint.hashCode() org.apache.commons.math3.linear.RealVector.hashCode()
org.apache.commons.math3.optim.linear.LinearConstraint.hashCode() java.lang.Double.valueOf(double)
org.apache.commons.math3.optim.linear.LinearConstraint.hashCode() java.lang.Enum.hashCode()
org.apache.commons.math3.optim.linear.LinearConstraint.hashCode() org.apache.commons.math3.linear.ArrayRealVector.hashCode()
org.apache.commons.math3.optim.linear.LinearConstraint.hashCode() java.lang.Double.clinit()
org.apache.commons.math3.optim.linear.LinearConstraint.hashCode() java.lang.Double.hashCode()
org.apache.commons.math3.util.Decimal64.compareTo(org.apache.commons.math3.util.Decimal64) java.lang.Object.clinit()
org.apache.commons.math3.util.Decimal64.compareTo(org.apache.commons.math3.util.Decimal64) java.lang.Double.compare(double,double)
org.apache.commons.math3.util.Decimal64.compareTo(org.apache.commons.math3.util.Decimal64) java.lang.Double.clinit()
org.apache.commons.math3.ode.events.EventState$1.value(double) org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.setInterpolatedTime(double)
org.apache.commons.math3.ode.events.EventState$1.value(double) java.lang.Object.clinit()
org.apache.commons.math3.ode.events.EventState$1.value(double) org.apache.commons.math3.ode.events.EventState$LocalMaxCountExceededException(org.apache.commons.math3.exception.MaxCountExceededException)
org.apache.commons.math3.ode.events.EventState$1.value(double) java.lang.Throwable.clinit()
org.apache.commons.math3.ode.events.EventState$1.value(double) org.apache.commons.math3.ode.events.EventFilter.g(double,double[])
org.apache.commons.math3.ode.events.EventState$1.value(double) org.apache.commons.math3.ode.events.EventState.access$000(org.apache.commons.math3.ode.events.EventState,org.apache.commons.math3.ode.sampling.StepInterpolator)
org.apache.commons.math3.ode.events.EventState$1.value(double) org.apache.commons.math3.ode.events.EventState.access$100(org.apache.commons.math3.ode.events.EventState)
org.apache.commons.math3.linear.RealVectorFormat.format(org.apache.commons.math3.linear.RealVector) java.lang.Object.clinit()
org.apache.commons.math3.linear.RealVectorFormat.format(org.apache.commons.math3.linear.RealVector) java.text.FieldPosition(int)
org.apache.commons.math3.linear.RealVectorFormat.format(org.apache.commons.math3.linear.RealVector) java.lang.StringBuffer.clinit()
org.apache.commons.math3.linear.RealVectorFormat.format(org.apache.commons.math3.linear.RealVector) java.lang.StringBuffer.toString()
org.apache.commons.math3.linear.RealVectorFormat.format(org.apache.commons.math3.linear.RealVector) java.lang.StringBuffer()
org.apache.commons.math3.linear.RealVectorFormat.format(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVectorFormat.format(org.apache.commons.math3.linear.RealVector,java.lang.StringBuffer,java.text.FieldPosition)
org.apache.commons.math3.distribution.NormalDistribution(org.apache.commons.math3.random.RandomGenerator,double,double,double) java.lang.Object.clinit()
org.apache.commons.math3.distribution.NormalDistribution(org.apache.commons.math3.random.RandomGenerator,double,double,double) org.apache.commons.math3.distribution.AbstractRealDistribution(org.apache.commons.math3.random.RandomGenerator)
org.apache.commons.math3.distribution.NormalDistribution(org.apache.commons.math3.random.RandomGenerator,double,double,double) java.lang.Double.valueOf(double)
org.apache.commons.math3.distribution.NormalDistribution(org.apache.commons.math3.random.RandomGenerator,double,double,double) java.lang.Throwable.clinit()
org.apache.commons.math3.distribution.NormalDistribution(org.apache.commons.math3.random.RandomGenerator,double,double,double) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.distribution.NormalDistribution(org.apache.commons.math3.random.RandomGenerator,double,double,double) org.apache.commons.math3.exception.NotStrictlyPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number)
org.apache.commons.math3.distribution.NormalDistribution(org.apache.commons.math3.random.RandomGenerator,double,double,double) org.apache.commons.math3.exception.util.LocalizedFormats.clinit()
org.apache.commons.math3.distribution.NormalDistribution(org.apache.commons.math3.random.RandomGenerator,double,double,double) java.lang.Double.clinit()
org.apache.commons.math3.dfp.Dfp.getZero() org.apache.commons.math3.dfp.DfpField.getZero()
org.apache.commons.math3.util.MathArrays.checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean,boolean) org.apache.commons.math3.util.MathArrays$3.clinit()
org.apache.commons.math3.util.MathArrays.checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean,boolean) java.lang.Object.clinit()
org.apache.commons.math3.util.MathArrays.checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean,boolean) java.lang.Enum.ordinal()
org.apache.commons.math3.util.MathArrays.checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean,boolean) java.lang.Double.valueOf(double)
org.apache.commons.math3.util.MathArrays.checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean,boolean) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.util.MathArrays.checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean,boolean) java.lang.Throwable.clinit()
org.apache.commons.math3.util.MathArrays.checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean,boolean) org.apache.commons.math3.exception.MathInternalError()
org.apache.commons.math3.util.MathArrays.checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean,boolean) java.lang.Double.clinit()
org.apache.commons.math3.util.MathArrays.checkOrder(double[],org.apache.commons.math3.util.MathArrays$OrderDirection,boolean,boolean) org.apache.commons.math3.exception.NonMonotonicSequenceException(java.lang.Number,java.lang.Number,int,org.apache.commons.math3.util.MathArrays$OrderDirection,boolean)
org.apache.commons.math3.exception.MathInternalError() java.lang.Object.clinit()
org.apache.commons.math3.exception.MathInternalError() org.apache.commons.math3.exception.MathIllegalStateException()
org.apache.commons.math3.exception.MathInternalError() org.apache.commons.math3.exception.util.ExceptionContext.addMessage(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])
org.apache.commons.math3.exception.MathInternalError() org.apache.commons.math3.exception.util.LocalizedFormats.clinit()
org.apache.commons.math3.exception.MathInternalError() org.apache.commons.math3.exception.MathIllegalStateException.getContext()
org.apache.commons.math3.analysis.function.Sinc.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.compose(double[])
org.apache.commons.math3.analysis.function.Sinc.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Sinc.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.function.Sinc.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getOrder()
org.apache.commons.math3.analysis.function.Sinc.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.util.FastMath.cos(double)
org.apache.commons.math3.analysis.function.Sinc.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.util.FastMath.sin(double)
org.apache.commons.math3.analysis.function.Sinc.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getValue()
org.apache.commons.math3.analysis.function.Sinc.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.util.FastMath.abs(double)
org.apache.commons.math3.linear.ArrayRealVector.toString() java.lang.Object.clinit()
org.apache.commons.math3.linear.ArrayRealVector.toString() org.apache.commons.math3.linear.ArrayRealVector.clinit()
org.apache.commons.math3.linear.ArrayRealVector.toString() org.apache.commons.math3.linear.RealVectorFormat.format(org.apache.commons.math3.linear.RealVector)
org.apache.commons.math3.exception.MathIllegalArgumentException.getMessage() org.apache.commons.math3.exception.util.ExceptionContext.getMessage()
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.readBaseExternal(java.io.ObjectInput) java.lang.Object.clinit()
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.readBaseExternal(java.io.ObjectInput) java.io.ObjectInputStream.readObject()
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.readBaseExternal(java.io.ObjectInput) java.io.ObjectInputStream.readInt()
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.readBaseExternal(java.io.ObjectInput) java.io.ObjectInputStream.readDouble()
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.readBaseExternal(java.io.ObjectInput) org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.allocateInterpolatedArrays(int)
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.readBaseExternal(java.io.ObjectInput) java.io.ObjectInputStream.read()
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.readBaseExternal(java.io.ObjectInput) java.io.ObjectInputStream.readBoolean()
org.apache.commons.math3.geometry.partitioning.Region$Location.clinit() java.lang.Object.clinit()
org.apache.commons.math3.geometry.partitioning.Region$Location.clinit() org.apache.commons.math3.geometry.partitioning.Region$Location.clinit()
org.apache.commons.math3.geometry.partitioning.Region$Location.clinit() org.apache.commons.math3.geometry.partitioning.Region$Location(java.lang.String,int)
org.apache.commons.math3.distribution.NormalDistribution.probability(double,double) org.apache.commons.math3.distribution.NormalDistribution.clinit()
org.apache.commons.math3.distribution.NormalDistribution.probability(double,double) java.lang.Object.clinit()
org.apache.commons.math3.distribution.NormalDistribution.probability(double,double) java.lang.Double.valueOf(double)
org.apache.commons.math3.distribution.NormalDistribution.probability(double,double) org.apache.commons.math3.special.Erf.erf(double,double)
org.apache.commons.math3.distribution.NormalDistribution.probability(double,double) java.lang.Throwable.clinit()
org.apache.commons.math3.distribution.NormalDistribution.probability(double,double) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.distribution.NormalDistribution.probability(double,double) org.apache.commons.math3.exception.util.LocalizedFormats.clinit()
org.apache.commons.math3.distribution.NormalDistribution.probability(double,double) java.lang.Double.clinit()
org.apache.commons.math3.distribution.NormalDistribution.probability(double,double) org.apache.commons.math3.exception.NumberIsTooLargeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)
org.apache.commons.math3.util.FastMath.ulp(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.util.FastMath.ulp(double) java.lang.Object.clinit()
org.apache.commons.math3.util.FastMath.ulp(double) java.lang.Double.doubleToRawLongBits(double)
org.apache.commons.math3.util.FastMath.ulp(double) java.lang.Double.clinit()
org.apache.commons.math3.util.FastMath.ulp(double) java.lang.Double.isInfinite(double)
org.apache.commons.math3.util.FastMath.ulp(double) java.lang.Double.longBitsToDouble(long)
org.apache.commons.math3.util.FastMath.ulp(double) org.apache.commons.math3.util.FastMath.abs(double)
org.apache.commons.math3.random.RandomDataImpl() java.lang.Object.clinit()
org.apache.commons.math3.random.RandomDataImpl() org.apache.commons.math3.random.RandomDataGenerator()
org.apache.commons.math3.random.RandomDataImpl() java.lang.Object()
org.apache.commons.math3.random.EmpiricalDistribution.k(double) sun.security.jca.ProviderList$3.get(int)
org.apache.commons.math3.random.EmpiricalDistribution.k(double) java.util.concurrent.CopyOnWriteArrayList.get(int)
org.apache.commons.math3.random.EmpiricalDistribution.k(double) java.util.Collections$CheckedList.get(int)
org.apache.commons.math3.random.EmpiricalDistribution.k(double) org.apache.commons.math3.random.EmpiricalDistribution.findBin(double)
org.apache.commons.math3.random.EmpiricalDistribution.k(double) java.util.Collections$SynchronizedList.get(int)
org.apache.commons.math3.random.EmpiricalDistribution.k(double) java.util.LinkedList.get(int)
org.apache.commons.math3.random.EmpiricalDistribution.k(double) sun.security.jca.ProviderList$ServiceList.get(int)
org.apache.commons.math3.random.EmpiricalDistribution.k(double) java.util.Collections$CopiesList.get(int)
org.apache.commons.math3.random.EmpiricalDistribution.k(double) java.util.Collections$SingletonList.get(int)
org.apache.commons.math3.random.EmpiricalDistribution.k(double) java.util.ArrayList.get(int)
org.apache.commons.math3.random.EmpiricalDistribution.k(double) java.util.concurrent.CopyOnWriteArrayList$COWSubList.get(int)
org.apache.commons.math3.random.EmpiricalDistribution.k(double) java.util.Arrays$ArrayList.get(int)
org.apache.commons.math3.random.EmpiricalDistribution.k(double) org.apache.commons.math3.random.EmpiricalDistribution.getKernel(org.apache.commons.math3.stat.descriptive.SummaryStatistics)
org.apache.commons.math3.random.EmpiricalDistribution.k(double) sun.awt.util.IdentityLinkedList.get(int)
org.apache.commons.math3.random.EmpiricalDistribution.k(double) java.util.Collections$EmptyList.get(int)
org.apache.commons.math3.random.EmpiricalDistribution.k(double) java.util.Vector.get(int)
org.apache.commons.math3.random.EmpiricalDistribution.k(double) java.util.Collections$UnmodifiableList.get(int)
org.apache.commons.math3.random.EmpiricalDistribution.k(double) sun.awt.util.IdentityArrayList.get(int)
org.apache.commons.math3.random.EmpiricalDistribution.k(double) java.util.ArrayList$SubList.get(int)
org.apache.commons.math3.random.EmpiricalDistribution.k(double) java.util.SubList.get(int)
org.apache.commons.math3.geometry.partitioning.BSPTree.chopOffPlus(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.twod.SubLine.split(org.apache.commons.math3.geometry.partitioning.Hyperplane)
org.apache.commons.math3.geometry.partitioning.BSPTree.chopOffPlus(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint.split(org.apache.commons.math3.geometry.partitioning.Hyperplane)
org.apache.commons.math3.geometry.partitioning.BSPTree.chopOffPlus(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.threed.SubPlane.split(org.apache.commons.math3.geometry.partitioning.Hyperplane)
org.apache.commons.math3.geometry.partitioning.BSPTree.chopOffPlus(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.partitioning.BSPTree.chopOffPlus(org.apache.commons.math3.geometry.partitioning.Hyperplane)
org.apache.commons.math3.geometry.partitioning.BSPTree.chopOffPlus(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane.getMinus()
org.apache.commons.math3.util.OpenIntToFieldHashMap.iterator() java.lang.Object.clinit()
org.apache.commons.math3.util.OpenIntToFieldHashMap.iterator() org.apache.commons.math3.util.OpenIntToFieldHashMap$Iterator(org.apache.commons.math3.util.OpenIntToFieldHashMap,org.apache.commons.math3.util.OpenIntToFieldHashMap$1)
org.apache.commons.math3.special.Gamma.clinit() org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.special.Gamma.clinit() java.lang.Object.clinit()
org.apache.commons.math3.special.Gamma.clinit() org.apache.commons.math3.special.Gamma.clinit()
org.apache.commons.math3.special.Gamma.clinit() org.apache.commons.math3.util.FastMath.log(double)
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getSum() org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSum()
org.apache.commons.math3.linear.ArrayRealVector.checkVectorDimensions(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVector$2.getDimension()
org.apache.commons.math3.linear.ArrayRealVector.checkVectorDimensions(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.OpenMapRealVector.getDimension()
org.apache.commons.math3.linear.ArrayRealVector.checkVectorDimensions(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.ArrayRealVector.checkVectorDimensions(int)
org.apache.commons.math3.linear.ArrayRealVector.checkVectorDimensions(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.ArrayRealVector.getDimension()
org.apache.commons.math3.analysis.function.Expm1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.expm1()
org.apache.commons.math3.exception.MathRuntimeException.getLocalizedMessage() org.apache.commons.math3.exception.util.ExceptionContext.getLocalizedMessage()
org.apache.commons.math3.util.FastMathCalc.clinit() java.lang.Object.clinit()
org.apache.commons.math3.util.FastMathCalc.clinit() org.apache.commons.math3.util.FastMathCalc.clinit()
org.apache.commons.math3.geometry.partitioning.AbstractRegion$BoundaryBuilder() java.lang.Object()
org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormat.getInstance(java.util.Locale) org.apache.commons.math3.util.CompositeFormat.getDefaultNumberFormat(java.util.Locale)
org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormat.getInstance(java.util.Locale) java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormat.getInstance(java.util.Locale) org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormat(java.text.NumberFormat)
org.apache.commons.math3.linear.AbstractRealMatrix() org.apache.commons.math3.linear.RealLinearOperator()
org.apache.commons.math3.stat.Frequency.equals(java.lang.Object) java.util.AbstractMap.equals(java.lang.Object)
org.apache.commons.math3.util.Pair.hashCode() java.util.PropertyPermission.hashCode()
org.apache.commons.math3.util.Pair.hashCode() com.sun.java.swing.plaf.windows.XPStyle$Skin.hashCode()
org.apache.commons.math3.util.Pair.hashCode() javax.sound.sampled.Control$Type.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.util.BitSet.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.util.Collections$CheckedSet.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.util.locale.LocaleExtensions.hashCode()
org.apache.commons.math3.util.Pair.hashCode() org.apache.commons.math3.linear.ArrayRealVector.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.lang.ProcessEnvironment$ExternalData.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.lang.Integer.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.awt.font.TextLine.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.security.krb5.internal.HostAddresses.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.text.CompactByteArray.hashCode()
org.apache.commons.math3.util.Pair.hashCode() org.apache.commons.math3.util.DefaultTransformer.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.util.ResourceBundle$CacheKey.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.awt.geom.Point2D.hashCode()
org.apache.commons.math3.util.Pair.hashCode() org.apache.commons.math3.optim.linear.LinearConstraint.hashCode()
org.apache.commons.math3.util.Pair.hashCode() org.apache.commons.math3.linear.OpenMapRealVector.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.security.provider.PolicyParser$PrincipalEntry.hashCode()
org.apache.commons.math3.util.Pair.hashCode() org.apache.commons.math3.geometry.euclidean.twod.Vector2D.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.security.util.BitArray.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.security.x509.PolicyInformation.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.awt.datatransfer.MimeType.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.reflect.misc.MethodUtil$Signature.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.lang.Thread$WeakClassKey.hashCode()
org.apache.commons.math3.util.Pair.hashCode() javax.swing.RowSorter$SortKey.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.net.NetworkInterface.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.awt.image.BandedSampleModel.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.lang.ProcessEnvironment$StringValues.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.util.Collections$CheckedList.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.reflect.generics.reflectiveObjects.WildcardTypeImpl.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.util.PreHashedMap$2$1$1.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.awt.PageAttributes$ColorType.hashCode()
org.apache.commons.math3.util.Pair.hashCode() org.apache.commons.math3.stat.descriptive.moment.VectorialMean.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.text.DigitList.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.util.calendar.CalendarDate.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.net.SocketPermission.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.text.FieldPosition.hashCode()
org.apache.commons.math3.util.Pair.hashCode() javax.print.MimeType.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.security.CodeSource.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.security.AllPermission.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.util.locale.BaseLocale.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.security.util.Cache$EqualByteArray.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.util.jar.Attributes.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.lang.ProcessEnvironment$StringEntrySet.hashCode()
org.apache.commons.math3.util.Pair.hashCode() javax.sound.midi.Sequencer$SyncMode.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.awt.JobAttributes.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.nio.fs.UnixUserPrincipals$User.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.nio.fs.UnixPath.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.text.AttributedCharacterIterator$Attribute.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.security.x509.CRLExtensions.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.awt.JobAttributes$MultipleDocumentHandlingType.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.lang.reflect.Constructor.hashCode()
org.apache.commons.math3.util.Pair.hashCode() org.apache.commons.math3.util.Pair.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.lang.Double.hashCode()
org.apache.commons.math3.util.Pair.hashCode() org.apache.commons.math3.optim.linear.SimplexTableau.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.security.util.DerInputBuffer.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.util.Collections$UnmodifiableList.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.security.x509.DistributionPoint.hashCode()
org.apache.commons.math3.util.Pair.hashCode() org.apache.commons.math3.stat.clustering.EuclideanDoublePoint.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.util.calendar.Era.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.util.Collections$CheckedMap$CheckedEntrySet.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.security.x509.OIDName.hashCode()
org.apache.commons.math3.util.Pair.hashCode() org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.hashCode()
org.apache.commons.math3.util.Pair.hashCode() org.apache.commons.math3.optim.linear.LinearObjectiveFunction.hashCode()
org.apache.commons.math3.util.Pair.hashCode() org.apache.commons.math3.util.Decimal64.hashCode()
org.apache.commons.math3.util.Pair.hashCode() javax.crypto.spec.SecretKeySpec.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.util.EnumMap$EntryIterator$Entry.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.lang.Package.hashCode()
org.apache.commons.math3.util.Pair.hashCode() org.apache.commons.math3.util.BigReal.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.util.IdentityHashMap$KeySet.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.misc.ProxyGenerator$ConstantPool$IndirectEntry.hashCode()
org.apache.commons.math3.util.Pair.hashCode() javax.naming.Reference.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.awt.AWTKeyStroke.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.lang.Short.hashCode()
org.apache.commons.math3.util.Pair.hashCode() javax.swing.text.html.HTML$UnknownTag.hashCode()
org.apache.commons.math3.util.Pair.hashCode() org.apache.commons.math3.util.TransformerMap.hashCode()
org.apache.commons.math3.util.Pair.hashCode() javax.print.attribute.AttributeSetUtilities$SynchronizedAttributeSet.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.util.calendar.ZoneInfo.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.java2d.loops.CompositeType.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.security.x509.RFC822Name.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.lang.reflect.WeakCache$CacheValue.hashCode()
org.apache.commons.math3.util.Pair.hashCode() org.apache.commons.math3.fraction.Fraction.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.security.x509.AVA.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.security.x509.GeneralNames.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.text.RuleBasedBreakIterator.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.security.cert.CertPath.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.beans.PropertyDescriptor.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.text.DecimalFormatSymbols.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.awt.BasicStroke.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.net.InetSocketAddress.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.security.x509.X509CertInfo.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.font.FontDesignMetrics$MetricsKey.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.net.URL.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.security.x509.URIName.hashCode()
org.apache.commons.math3.util.Pair.hashCode() org.apache.commons.math3.optimization.linear.LinearConstraint.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.swing.SwingUtilities2$LSBCacheEntry.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.lang.ProcessBuilder$Redirect.hashCode()
org.apache.commons.math3.util.Pair.hashCode() org.apache.commons.math3.analysis.differentiation.DerivativeStructure.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.awt.Insets.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.awt.RenderingHints$Key.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.awt.PageAttributes$PrintQualityType.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.awt.PageAttributes$MediaType.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.lang.String.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.lang.Boolean.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.net.www.http.KeepAliveKey.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.lang.reflect.WeakCache$CacheKey.hashCode()
org.apache.commons.math3.util.Pair.hashCode() javax.sound.midi.MidiDevice$Info.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.net.Inet6Address.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.awt.PageAttributes$OriginType.hashCode()
org.apache.commons.math3.util.Pair.hashCode() javax.imageio.ImageTypeSpecifier.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.awt.font.TransformAttribute.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.security.provider.PolicyParser$PermissionEntry.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.security.x509.X509CRLImpl$X509IssuerSerial.hashCode()
org.apache.commons.math3.util.Pair.hashCode() org.apache.commons.math3.complex.Quaternion.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.security.util.ObjectIdentifier.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.security.cert.X509CRLEntry.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.security.Provider$ServiceKey.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.awt.datatransfer.DataFlavor.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.util.EnumMap$1.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.awt.image.ColorModel.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.util.Hashtable$Entry.hashCode()
org.apache.commons.math3.util.Pair.hashCode() javax.swing.KeyboardManager$ComponentKeyStrokePair.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.io.ObjectStreamClass$FieldReflectorKey.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.io.FilePermission.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.security.spec.ECFieldFp.hashCode()
org.apache.commons.math3.util.Pair.hashCode() org.apache.commons.math3.linear.AbstractRealMatrix.hashCode()
org.apache.commons.math3.util.Pair.hashCode() javax.print.attribute.EnumSyntax.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.security.krb5.internal.KerberosTime.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.awt.RenderingHints.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.util.Locale$LocaleKey.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.font.FontLineMetrics.hashCode()
org.apache.commons.math3.util.Pair.hashCode() javax.security.auth.kerberos.KerberosPrincipal.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.net.HttpCookie.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.lang.Object.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.awt.geom.Arc2D.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.awt.font.TextHitInfo.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.security.x509.GeneralSubtrees.hashCode()
org.apache.commons.math3.util.Pair.hashCode() javax.security.auth.kerberos.KerberosKey.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.security.x509.KeyIdentifier.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.util.Collections$UnmodifiableMap.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.util.Hashtable.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.text.NumberFormat.hashCode()
org.apache.commons.math3.util.Pair.hashCode() javax.print.attribute.HashAttributeSet.hashCode()
org.apache.commons.math3.util.Pair.hashCode() javax.swing.text.SimpleAttributeSet.hashCode()
org.apache.commons.math3.util.Pair.hashCode() org.apache.commons.math3.geometry.euclidean.oned.Vector1D.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.nio.DoubleBuffer.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.security.x509.EDIPartyName.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.util.Collections$SetFromMap.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.util.IdentityHashMap.hashCode()
org.apache.commons.math3.util.Pair.hashCode() javax.sound.sampled.LineEvent$Type.hashCode()
org.apache.commons.math3.util.Pair.hashCode() org.apache.commons.math3.stat.Frequency.hashCode()
org.apache.commons.math3.util.Pair.hashCode() org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.lang.reflect.Proxy$Key2.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.util.jar.Manifest.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.util.Date.hashCode()
org.apache.commons.math3.util.Pair.hashCode() org.apache.commons.math3.optimization.linear.SimplexTableau.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.io.ObjectStreamClass$WeakClassKey.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.net.Inet6Address$Inet6AddressHolder.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.font.Decoration$DecorationImpl.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.lang.Character.hashCode()
org.apache.commons.math3.util.Pair.hashCode() org.apache.commons.math3.stat.descriptive.SummaryStatistics.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.beans.IndexedPropertyDescriptor.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.awt.image.ComponentSampleModel.hashCode()
org.apache.commons.math3.util.Pair.hashCode() org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.nio.fs.UnixFileKey.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.security.x509.AccessDescription.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.nio.ch.SocketOptionRegistry$RegistryKey.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.awt.font.FontRenderContext.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.font.AttributeValues.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.util.SimpleTimeZone.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.security.krb5.Checksum.hashCode()
org.apache.commons.math3.util.Pair.hashCode() org.apache.commons.math3.optimization.linear.LinearObjectiveFunction.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.security.x509.RDN.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.awt.image.SinglePixelPackedSampleModel.hashCode()
org.apache.commons.math3.util.Pair.hashCode() javax.sound.sampled.Mixer$Info.hashCode()
org.apache.commons.math3.util.Pair.hashCode() javax.naming.CompositeName.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.lang.reflect.Method.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.io.File.hashCode()
org.apache.commons.math3.util.Pair.hashCode() javax.swing.text.StyleContext$FontKey.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.security.spec.EllipticCurve.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.nio.CharBuffer.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.util.AbstractMap$SimpleEntry.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.util.Collections$SynchronizedList.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.util.IdentityHashMap$EntryIterator$Entry.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.text.IntHashtable.hashCode()
org.apache.commons.math3.util.Pair.hashCode() javax.imageio.ImageTypeSpecifier$Interleaved.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.util.Vector.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.security.x509.AlgorithmId.hashCode()
org.apache.commons.math3.util.Pair.hashCode() org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.text.MessageFormat.hashCode()
org.apache.commons.math3.util.Pair.hashCode() org.apache.commons.math3.linear.AbstractFieldMatrix.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.awt.font.TextLayout.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.lang.Enum.hashCode()
org.apache.commons.math3.util.Pair.hashCode() javax.security.auth.Subject.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.awt.DisplayMode.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.util.Collections$EmptyList.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.awt.SunHints$Value.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.security.krb5.PrincipalName.hashCode()
org.apache.commons.math3.util.Pair.hashCode() org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$JacobiKey.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.awt.JobAttributes$DefaultSelectionType.hashCode()
org.apache.commons.math3.util.Pair.hashCode() org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.lang.ProcessEnvironment$StringEntry.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.util.Collections$SynchronizedMap.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.security.krb5.KrbException.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.util.Locale.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.security.x509.X509Key.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.awt.JobAttributes$DialogType.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.awt.Color.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.util.EnumMap.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.awt.geom.Ellipse2D.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.reflect.generics.reflectiveObjects.TypeVariableImpl.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.util.Collections$SynchronizedSet.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.net.InetSocketAddress$InetSocketAddressHolder.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.font.FontStrikeDesc.hashCode()
org.apache.commons.math3.util.Pair.hashCode() org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry.hashCode()
org.apache.commons.math3.util.Pair.hashCode() javax.security.auth.PrivateCredentialPermission.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.font.GlyphLayout$LayoutEngineKey.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.awt.geom.Rectangle2D.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.util.locale.BaseLocale$Key.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.security.pkcs.PKCS8Key.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.lang.Long.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.awt.OSInfo$WindowsVersion.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.font.PhysicalFont.hashCode()
org.apache.commons.math3.util.Pair.hashCode() org.apache.commons.math3.ml.clustering.DoublePoint.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.awt.font.NumericShaper.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.java2d.pipe.Region.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.util.Collections$EmptyMap.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl.hashCode()
org.apache.commons.math3.util.Pair.hashCode() com.sun.beans.WildcardTypeImpl.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.security.CodeSigner.hashCode()
org.apache.commons.math3.util.Pair.hashCode() javax.security.auth.x500.X500Principal.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.security.x509.GeneralSubtree.hashCode()
org.apache.commons.math3.util.Pair.hashCode() javax.print.attribute.Size2DSyntax.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.math.BigDecimal.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.awt.Dimension.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.awt.geom.AffineTransform.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.text.AttributeEntry.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.security.x509.CertificatePolicyId.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.nio.FloatBuffer.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.security.x509.OtherName.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.util.Collections$UnmodifiableSet.hashCode()
org.apache.commons.math3.util.Pair.hashCode() javax.swing.text.SimpleAttributeSet$EmptyAttributeSet.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.text.RuleBasedCollationKey.hashCode()
org.apache.commons.math3.util.Pair.hashCode() org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.security.jca.ProviderConfig.hashCode()
org.apache.commons.math3.util.Pair.hashCode() org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.hashCode()
org.apache.commons.math3.util.Pair.hashCode() javax.print.attribute.AttributeSetUtilities$UnmodifiableAttributeSet.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.lang.reflect.Field.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.security.provider.PolicyFile$SelfPermission.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.security.cert.Certificate.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.awt.im.InputMethodLocator.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.text.PatternEntry.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.misc.Signal.hashCode()
org.apache.commons.math3.util.Pair.hashCode() javax.print.attribute.standard.MediaPrintableArea.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.text.DecimalFormat.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.lang.Byte.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.security.Timestamp.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.nio.IntBuffer.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.text.DateFormatSymbols.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.util.AbstractMap.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.security.x509.Extension.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.text.AttributedString$AttributedStringIterator.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.util.AbstractList.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.security.x509.IPAddressName.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.awt.BufferCapabilities$FlipContents.hashCode()
org.apache.commons.math3.util.Pair.hashCode() javax.swing.text.TabStop.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.lang.reflect.WeakCache$LookupValue.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.util.zip.ZipEntry.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.awt.AlphaComposite.hashCode()
org.apache.commons.math3.util.Pair.hashCode() org.apache.commons.math3.fraction.BigFraction.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.math.MathContext.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.util.concurrent.CopyOnWriteArrayList.hashCode()
org.apache.commons.math3.util.Pair.hashCode() javax.imageio.ImageTypeSpecifier$Banded.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.nio.charset.Charset.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.awt.image.PixelInterleavedSampleModel.hashCode()
org.apache.commons.math3.util.Pair.hashCode() javax.naming.NameImpl.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.security.krb5.internal.rcache.AuthTime.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.security.x509.GeneralName.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.awt.PageAttributes$OrientationRequestedType.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.nio.file.attribute.FileTime.hashCode()
org.apache.commons.math3.util.Pair.hashCode() org.apache.commons.math3.linear.SparseFieldVector.hashCode()
org.apache.commons.math3.util.Pair.hashCode() javax.security.auth.kerberos.KeyImpl.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.nio.LongBuffer.hashCode()
org.apache.commons.math3.util.Pair.hashCode() org.apache.commons.math3.geometry.euclidean.threed.Vector3D.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.net.InetAddress.hashCode()
org.apache.commons.math3.util.Pair.hashCode() org.apache.commons.math3.stat.clustering.EuclideanIntegerPoint.hashCode()
org.apache.commons.math3.util.Pair.hashCode() javax.swing.text.TabSet.hashCode()
org.apache.commons.math3.util.Pair.hashCode() org.apache.commons.math3.linear.RealVector.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.security.x509.CertificateExtensions.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.awt.image.MultiPixelPackedSampleModel.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.awt.PageAttributes.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.security.UnresolvedPermission.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.text.StringCharacterIterator.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.security.krb5.internal.KRBError.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.lang.reflect.Proxy$Key1.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.nio.ShortBuffer.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.awt.JobAttributes$SidesType.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.font.StandardGlyphVector.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.util.AbstractMap$SimpleImmutableEntry.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.net.Inet4Address.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.util.calendar.ImmutableGregorianDate.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.util.GregorianCalendar.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.util.BuddhistCalendar.hashCode()
org.apache.commons.math3.util.Pair.hashCode() org.apache.commons.math3.analysis.polynomials.PolynomialFunction.hashCode()
org.apache.commons.math3.util.Pair.hashCode() org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.security.krb5.Realm.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.util.Collections$ReverseComparator2.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.net.Proxy.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.security.krb5.internal.HostAddress.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.lang.StackTraceElement.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.lang.Character$Subset.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.util.HashMap$Entry.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.text.ParsePosition.hashCode()
org.apache.commons.math3.util.Pair.hashCode() javax.swing.tree.TreePath.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.security.x509.DNSName.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.awt.JobAttributes$DestinationType.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.security.AccessControlContext.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.util.jar.Attributes$Name.hashCode()
org.apache.commons.math3.util.Pair.hashCode() org.apache.commons.math3.complex.Complex.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.awt.geom.RoundRectangle2D.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.swing.text.TextComponentPrintable$IntegerSegment.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.font.CoreMetrics.hashCode()
org.apache.commons.math3.util.Pair.hashCode() org.apache.commons.math3.util.ResizableDoubleArray.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.nio.ch.Util$2.hashCode()
org.apache.commons.math3.util.Pair.hashCode() org.apache.commons.math3.dfp.Dfp.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.net.URI.hashCode()
org.apache.commons.math3.util.Pair.hashCode() javax.naming.RefAddr.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.lang.Float.hashCode()
org.apache.commons.math3.util.Pair.hashCode() org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.net.InterfaceAddress.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.security.x509.X500Name.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.text.ChoiceFormat.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.util.WeakHashMap$Entry.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.security.BasicPermission.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.awt.Font.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.security.util.DerValue.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.util.AbstractSet.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.util.TreeMap$Entry.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.util.Collections$CheckedMap.hashCode()
org.apache.commons.math3.util.Pair.hashCode() javax.print.DocFlavor.hashCode()
org.apache.commons.math3.util.Pair.hashCode() org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ComparableSegment.hashCode()
org.apache.commons.math3.util.Pair.hashCode() javax.print.MimeType$ParameterMapEntry.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.nio.ch.FileKey.hashCode()
org.apache.commons.math3.util.Pair.hashCode() javax.sound.sampled.AudioFileFormat$Type.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.java2d.loops.SurfaceType.hashCode()
org.apache.commons.math3.util.Pair.hashCode() org.apache.commons.math3.linear.ArrayFieldVector.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.awt.datatransfer.MimeTypeParameterList.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.security.x509.DistributionPointName.hashCode()
org.apache.commons.math3.util.Pair.hashCode() javax.swing.text.StyleContext$SmallAttributeSet.hashCode()
org.apache.commons.math3.util.Pair.hashCode() javax.sound.sampled.AudioFormat$Encoding.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.misc.SoftCache$Entry.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.text.RuleBasedCollator.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.math.BigInteger.hashCode()
org.apache.commons.math3.util.Pair.hashCode() sun.font.GlyphLayout$SDCache$SDKey.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.security.spec.ECFieldF2m.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.text.SimpleDateFormat.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.security.Provider$UString.hashCode()
org.apache.commons.math3.util.Pair.hashCode() org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization$DataRow.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.nio.ByteBuffer.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.security.spec.ECPoint.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.security.cert.X509CRL.hashCode()
org.apache.commons.math3.util.Pair.hashCode() org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics$AggregatingSummaryStatistics.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.lang.reflect.Proxy$KeyX.hashCode()
org.apache.commons.math3.util.Pair.hashCode() javax.security.auth.kerberos.KeyTab.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.nio.file.attribute.FileTime$DaysAndNanos.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.util.JapaneseImperialCalendar.hashCode()
org.apache.commons.math3.util.Pair.hashCode() java.awt.MenuShortcut.hashCode()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ComparableSegment.compareTo(java.lang.Object) org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ComparableSegment.compareTo(org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ComparableSegment)
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.finalizeStep() org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.doFinalize()
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.finalizeStep() org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator.doFinalize()
org.apache.commons.math3.util.CombinatoricsUtils$SingletonIterator.remove() java.lang.Object.clinit()
org.apache.commons.math3.util.CombinatoricsUtils$SingletonIterator.remove() java.lang.UnsupportedOperationException()
org.apache.commons.math3.util.CombinatoricsUtils$SingletonIterator.remove() java.lang.Throwable.clinit()
org.apache.commons.math3.util.FastMath$lnMant.clinit() org.apache.commons.math3.util.FastMath$lnMant.clinit()
org.apache.commons.math3.util.FastMath$lnMant.clinit() java.lang.Object.clinit()
org.apache.commons.math3.util.FastMath$lnMant.clinit() org.apache.commons.math3.util.FastMathLiteralArrays.clinit()
org.apache.commons.math3.util.FastMath$lnMant.clinit() org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant()
org.apache.commons.math3.analysis.function.Cosh() java.lang.Object()
org.apache.commons.math3.geometry.euclidean.threed.Line.toSpace(org.apache.commons.math3.geometry.Vector) org.apache.commons.math3.geometry.euclidean.threed.Line.pointAt(double)
org.apache.commons.math3.geometry.euclidean.threed.Line.toSpace(org.apache.commons.math3.geometry.Vector) org.apache.commons.math3.geometry.euclidean.oned.Vector1D.getX()
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getSumsq() org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSumsq()
org.apache.commons.math3.ode.events.Transformer(java.lang.String,int,org.apache.commons.math3.ode.events.Transformer$1) org.apache.commons.math3.ode.events.Transformer(java.lang.String,int)
org.apache.commons.math3.util.BigReal.hashCode() java.math.BigDecimal.hashCode()
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric.value(double,double[]) java.lang.Object.clinit()
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric.value(double,double[]) org.apache.commons.math3.analysis.polynomials.PolynomialFunction.evaluate(double[],double)
org.apache.commons.math3.stat.descriptive.moment.Kurtosis.getN() org.apache.commons.math3.stat.descriptive.moment.SecondMoment.getN()
org.apache.commons.math3.linear.RealVectorFormat.getInstance(java.util.Locale) org.apache.commons.math3.linear.RealVectorFormat(java.text.NumberFormat)
org.apache.commons.math3.linear.RealVectorFormat.getInstance(java.util.Locale) org.apache.commons.math3.util.CompositeFormat.getDefaultNumberFormat(java.util.Locale)
org.apache.commons.math3.linear.RealVectorFormat.getInstance(java.util.Locale) java.lang.Object.clinit()
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback.trigger(int) java.lang.Object.clinit()
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback.trigger(int) java.lang.Integer.clinit()
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback.trigger(int) java.lang.Throwable.clinit()
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback.trigger(int) org.apache.commons.math3.exception.TooManyIterationsException(java.lang.Number)
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback.trigger(int) java.lang.Integer.valueOf(int)
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.allocateInterpolatedArrays(int) org.apache.commons.math3.ode.EquationsMapper.getDimension()
org.apache.commons.math3.special.Beta$1(double,double) org.apache.commons.math3.util.ContinuedFraction()
org.apache.commons.math3.random.AbstractWell.setSeed(long) org.apache.commons.math3.random.AbstractWell.setSeed(int[])
org.apache.commons.math3.util.FastMath.atan(double) java.lang.Object.clinit()
org.apache.commons.math3.util.FastMath.atan(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.util.FastMath.atan(double) org.apache.commons.math3.util.FastMath.atan(double,double,boolean)
org.apache.commons.math3.special.Gamma.lanczos(double) java.lang.Object.clinit()
org.apache.commons.math3.special.Gamma.lanczos(double) org.apache.commons.math3.special.Gamma.clinit()
org.apache.commons.math3.fitting.GaussianFitter$1.value(double,double[]) org.apache.commons.math3.analysis.function.Gaussian$Parametric.value(double,double[])
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.crossProduct(org.apache.commons.math3.geometry.Vector) java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.crossProduct(org.apache.commons.math3.geometry.Vector) org.apache.commons.math3.util.MathArrays.linearCombination(double,double,double,double)
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.crossProduct(org.apache.commons.math3.geometry.Vector) org.apache.commons.math3.geometry.euclidean.threed.Vector3D.clinit()
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.crossProduct(org.apache.commons.math3.geometry.Vector) org.apache.commons.math3.geometry.euclidean.threed.Vector3D(double,double,double)
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunction.evaluate(double[],double)
org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint.buildNew(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region) java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint.buildNew(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region) org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region)
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getCovariance() org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getCovariance()
org.apache.commons.math3.linear.AbstractRealMatrix.operate(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.exception.DimensionMismatchException(int,int)
org.apache.commons.math3.linear.AbstractRealMatrix.operate(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.Array2DRowRealMatrix.operate(double[])
org.apache.commons.math3.linear.AbstractRealMatrix.operate(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.BlockRealMatrix.getColumnDimension()
org.apache.commons.math3.linear.AbstractRealMatrix.operate(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.DiagonalMatrix.operate(double[])
org.apache.commons.math3.linear.AbstractRealMatrix.operate(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.DiagonalMatrix.getEntry(int,int)
org.apache.commons.math3.linear.AbstractRealMatrix.operate(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.OpenMapRealMatrix.getColumnDimension()
org.apache.commons.math3.linear.AbstractRealMatrix.operate(org.apache.commons.math3.linear.RealVector) java.lang.Object.clinit()
org.apache.commons.math3.linear.AbstractRealMatrix.operate(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.BlockRealMatrix.getEntry(int,int)
org.apache.commons.math3.linear.AbstractRealMatrix.operate(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.OpenMapRealMatrix.getEntry(int,int)
org.apache.commons.math3.linear.AbstractRealMatrix.operate(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry(int,int)
org.apache.commons.math3.linear.AbstractRealMatrix.operate(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.BlockRealMatrix.operate(double[])
org.apache.commons.math3.linear.AbstractRealMatrix.operate(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.ArrayRealVector.getDimension()
org.apache.commons.math3.linear.AbstractRealMatrix.operate(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.DiagonalMatrix.getColumnDimension()
org.apache.commons.math3.linear.AbstractRealMatrix.operate(org.apache.commons.math3.linear.RealVector) java.lang.Throwable.clinit()
org.apache.commons.math3.linear.AbstractRealMatrix.operate(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.ArrayRealVector.clinit()
org.apache.commons.math3.linear.AbstractRealMatrix.operate(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.OpenMapRealMatrix.getRowDimension()
org.apache.commons.math3.linear.AbstractRealMatrix.operate(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.ArrayRealVector(double[],boolean)
org.apache.commons.math3.linear.AbstractRealMatrix.operate(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.DiagonalMatrix.getRowDimension()
org.apache.commons.math3.linear.AbstractRealMatrix.operate(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVector$2.getEntry(int)
org.apache.commons.math3.linear.AbstractRealMatrix.operate(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.ArrayRealVector.getDataRef()
org.apache.commons.math3.linear.AbstractRealMatrix.operate(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension()
org.apache.commons.math3.linear.AbstractRealMatrix.operate(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.AbstractRealMatrix.operate(double[])
org.apache.commons.math3.linear.AbstractRealMatrix.operate(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVector$2.getDimension()
org.apache.commons.math3.linear.AbstractRealMatrix.operate(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.ArrayRealVector.getEntry(int)
org.apache.commons.math3.linear.AbstractRealMatrix.operate(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.OpenMapRealVector.getEntry(int)
org.apache.commons.math3.linear.AbstractRealMatrix.operate(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.BlockRealMatrix.getRowDimension()
org.apache.commons.math3.linear.AbstractRealMatrix.operate(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.OpenMapRealVector.getDimension()
org.apache.commons.math3.linear.AbstractRealMatrix.operate(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.linear.AbstractRealMatrix.operate(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension()
org.apache.commons.math3.ode.EquationsMapper.insertEquationData(double[],double[]) java.lang.Object.clinit()
org.apache.commons.math3.ode.EquationsMapper.insertEquationData(double[],double[]) org.apache.commons.math3.exception.DimensionMismatchException(int,int)
org.apache.commons.math3.ode.EquationsMapper.insertEquationData(double[],double[]) java.lang.Throwable.clinit()
org.apache.commons.math3.ode.EquationsMapper.insertEquationData(double[],double[]) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.ode.EquationsMapper.insertEquationData(double[],double[]) java.lang.System.arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org.apache.commons.math3.ode.EquationsMapper.insertEquationData(double[],double[]) java.lang.System.clinit()
org.apache.commons.math3.geometry.partitioning.Region$Location(java.lang.String,int) java.lang.Enum(java.lang.String,int)
org.apache.commons.math3.linear.RealVector$2$2.hasNext() javax.print.MimeType$ParameterMapEntrySetIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() java.util.concurrent.ArrayBlockingQueue$Itr.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() org.apache.commons.math3.linear.RealVector$SparseEntryIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() com.sun.imageio.plugins.jpeg.ImageTypeIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() java.util.Collections$CheckedList$1.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() java.util.SubList$1.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() sun.net.www.HeaderParser$ParserIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() java.lang.ProcessEnvironment$StringKeySet$1.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() sun.awt.util.IdentityLinkedList$DescendingIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() java.util.Collections$UnmodifiableCollection$1.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() sun.misc.SoftCache$EntrySet$1.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() javax.imageio.ImageIO$ImageWriterIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() java.util.TreeMap$PrivateEntryIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() javax.imageio.ImageIO$ImageReaderIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() java.util.RegularEnumSet$EnumSetIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() java.util.LinkedList$ListItr.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() sun.security.jca.ProviderList$ServiceList$1.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() java.util.ArrayList$SubList$1.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() java.util.Scanner.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() sun.nio.fs.UnixFileSystem$FileStoreIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() java.util.concurrent.CopyOnWriteArrayList$COWIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() java.util.PriorityQueue$Itr.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() java.util.concurrent.DelayQueue$Itr.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() java.util.Collections$1.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() java.util.concurrent.ConcurrentHashMap$HashIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() java.util.EnumMap$EnumMapIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() java.util.LinkedList$DescendingIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() java.util.IdentityHashMap$IdentityHashMapIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() java.lang.ProcessEnvironment$StringEntrySet$1.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() java.util.Hashtable$Enumerator.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() java.util.JumboEnumSet$EnumSetIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() sun.util.PreHashedMap$2$1.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() sun.nio.cs.FastCharsetProvider$1.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() java.util.Collections$EmptyIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() java.util.ServiceLoader$1.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() java.util.ServiceLoader$LazyIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() java.util.WeakHashMap$HashIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() java.util.Vector$Itr.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() javax.imageio.spi.FilterIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() java.util.Collections$CheckedCollection$1.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() org.apache.commons.math3.util.CombinatoricsUtils$LexicographicCombinationIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() java.util.AbstractMap$2$1.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() java.lang.ProcessEnvironment$StringValues$1.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() sun.nio.fs.AbstractPath$1.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() java.util.AbstractMap$1$1.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() org.apache.commons.math3.linear.RealVector$2$2.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() java.util.concurrent.LinkedBlockingQueue$Itr.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() sun.misc.Service$LazyIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() sun.net.www.MessageHeader$HeaderIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() java.util.concurrent.ConcurrentLinkedQueue$Itr.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() java.util.ArrayDeque$DescendingIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() org.apache.commons.math3.util.CombinatoricsUtils$SingletonIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() java.util.concurrent.LinkedBlockingDeque$AbstractItr.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() org.apache.commons.math3.linear.RealVector$1.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() java.util.ArrayDeque$DeqIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() java.util.LinkedHashMap$LinkedHashIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() java.util.Collections$CheckedMap$CheckedEntrySet$1.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() org.apache.commons.math3.util.MultidimensionalCounter$Iterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() javax.security.auth.Subject$SecureSet$1.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() sun.awt.util.IdentityLinkedList$ListItr.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() javax.imageio.spi.PartialOrderIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() java.util.TreeMap$NavigableSubMap$SubMapIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() java.util.Collections$UnmodifiableList$1.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() java.util.ArrayList$Itr.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() sun.util.PreHashedMap$1$1.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() java.nio.charset.Charset$1.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() javax.imageio.ImageIO$ImageTranscoderIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() java.util.HashMap$HashIterator.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() java.util.AbstractList$Itr.hasNext()
org.apache.commons.math3.linear.RealVector$2$2.hasNext() org.apache.commons.math3.linear.RealVector$2$1.hasNext()
org.apache.commons.math3.exception.util.ExceptionContext.getMessage() java.lang.Object.clinit()
org.apache.commons.math3.exception.util.ExceptionContext.getMessage() java.util.Locale.clinit()
org.apache.commons.math3.exception.util.ExceptionContext.getMessage() org.apache.commons.math3.exception.util.ExceptionContext.getMessage(java.util.Locale)
org.apache.commons.math3.analysis.function.Cos.derivative() org.apache.commons.math3.analysis.function.Cbrt.derivative()
org.apache.commons.math3.analysis.function.Cos.derivative() org.apache.commons.math3.analysis.function.Minus.derivative()
org.apache.commons.math3.analysis.function.Cos.derivative() org.apache.commons.math3.analysis.function.Tanh.derivative()
org.apache.commons.math3.analysis.function.Cos.derivative() org.apache.commons.math3.analysis.FunctionUtils.toDifferentiableUnivariateFunction(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction)
org.apache.commons.math3.analysis.function.Cos.derivative() org.apache.commons.math3.analysis.function.Expm1.derivative()
org.apache.commons.math3.analysis.function.Cos.derivative() org.apache.commons.math3.analysis.function.Power.derivative()
org.apache.commons.math3.analysis.function.Cos.derivative() org.apache.commons.math3.analysis.function.Logit.derivative()
org.apache.commons.math3.analysis.function.Cos.derivative() org.apache.commons.math3.analysis.function.Sinc.derivative()
org.apache.commons.math3.analysis.function.Cos.derivative() org.apache.commons.math3.analysis.function.Constant.derivative()
org.apache.commons.math3.analysis.function.Cos.derivative() org.apache.commons.math3.analysis.function.Log10.derivative()
org.apache.commons.math3.analysis.function.Cos.derivative() org.apache.commons.math3.analysis.function.Sigmoid.derivative()
org.apache.commons.math3.analysis.function.Cos.derivative() org.apache.commons.math3.analysis.function.Acosh.derivative()
org.apache.commons.math3.analysis.function.Cos.derivative() org.apache.commons.math3.analysis.function.Exp.derivative()
org.apache.commons.math3.analysis.function.Cos.derivative() org.apache.commons.math3.analysis.function.Sinh.derivative()
org.apache.commons.math3.analysis.function.Cos.derivative() java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Cos.derivative() org.apache.commons.math3.analysis.polynomials.PolynomialFunction.derivative()
org.apache.commons.math3.analysis.function.Cos.derivative() org.apache.commons.math3.analysis.function.Gaussian.derivative()
org.apache.commons.math3.analysis.function.Cos.derivative() org.apache.commons.math3.analysis.function.Atanh.derivative()
org.apache.commons.math3.analysis.function.Cos.derivative() org.apache.commons.math3.analysis.function.Sqrt.derivative()
org.apache.commons.math3.analysis.function.Cos.derivative() org.apache.commons.math3.analysis.FunctionUtils$3.derivative()
org.apache.commons.math3.analysis.function.Cos.derivative() org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.derivative()
org.apache.commons.math3.analysis.function.Cos.derivative() org.apache.commons.math3.analysis.function.Log1p.derivative()
org.apache.commons.math3.analysis.function.Cos.derivative() org.apache.commons.math3.analysis.function.Asin.derivative()
org.apache.commons.math3.analysis.function.Cos.derivative() org.apache.commons.math3.analysis.function.Cos.derivative()
org.apache.commons.math3.analysis.function.Cos.derivative() org.apache.commons.math3.analysis.function.Asinh.derivative()
org.apache.commons.math3.analysis.function.Cos.derivative() org.apache.commons.math3.analysis.function.Tan.derivative()
org.apache.commons.math3.analysis.function.Cos.derivative() org.apache.commons.math3.analysis.FunctionUtils$6.derivative()
org.apache.commons.math3.analysis.function.Cos.derivative() org.apache.commons.math3.analysis.function.Log.derivative()
org.apache.commons.math3.analysis.function.Cos.derivative() org.apache.commons.math3.analysis.function.Atan.derivative()
org.apache.commons.math3.analysis.function.Cos.derivative() org.apache.commons.math3.analysis.function.Acos.derivative()
org.apache.commons.math3.analysis.function.Cos.derivative() org.apache.commons.math3.analysis.FunctionUtils$14.derivative()
org.apache.commons.math3.analysis.function.Cos.derivative() org.apache.commons.math3.analysis.function.Identity.derivative()
org.apache.commons.math3.analysis.function.Cos.derivative() org.apache.commons.math3.analysis.function.Cosh.derivative()
org.apache.commons.math3.analysis.function.Cos.derivative() org.apache.commons.math3.analysis.FunctionUtils$9.derivative()
org.apache.commons.math3.analysis.function.Cos.derivative() org.apache.commons.math3.analysis.function.Logistic.derivative()
org.apache.commons.math3.analysis.function.Cos.derivative() org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative()
org.apache.commons.math3.analysis.function.Cos.derivative() org.apache.commons.math3.analysis.function.Inverse.derivative()
org.apache.commons.math3.analysis.function.Cos.derivative() org.apache.commons.math3.analysis.function.Sin.derivative()
org.apache.commons.math3.util.Precision.equals(double,double) java.lang.Object.clinit()
org.apache.commons.math3.util.Precision.equals(double,double) org.apache.commons.math3.util.Precision.equals(double,double,int)
org.apache.commons.math3.util.Precision.equals(double,double) org.apache.commons.math3.util.Precision.clinit()
org.apache.commons.math3.random.ISAACRandomState() org.apache.commons.math3.random.ISAACRandom.shuffle()
org.apache.commons.math3.random.ISAACRandomState() org.apache.commons.math3.random.ISAACRandom.setState(int)
org.apache.commons.math3.random.ISAACRandomState() org.apache.commons.math3.random.BitsStreamGenerator.clear()
org.apache.commons.math3.random.ISAACRandomState() org.apache.commons.math3.random.ISAACRandom.isaac()
org.apache.commons.math3.util.FastMathLiteralArrays.clinit() java.lang.Object.clinit()
org.apache.commons.math3.util.FastMathLiteralArrays.clinit() org.apache.commons.math3.util.FastMathLiteralArrays.clinit()
org.apache.commons.math3.analysis.function.Sigmoid.value(double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Sigmoid.value(double) org.apache.commons.math3.analysis.function.Sigmoid.value(double,double,double)
org.apache.commons.math3.stat.clustering.EuclideanDoublePoint.equals(java.lang.Object) java.util.Arrays.equals(double[],double[])
org.apache.commons.math3.stat.clustering.EuclideanDoublePoint.equals(java.lang.Object) java.lang.Object.clinit()
org.apache.commons.math3.stat.clustering.EuclideanDoublePoint.equals(java.lang.Object) java.util.Arrays.clinit()
org.apache.commons.math3.analysis.FunctionUtils$6.derivative() java.lang.Object.clinit()
org.apache.commons.math3.analysis.FunctionUtils$6.derivative() org.apache.commons.math3.analysis.FunctionUtils$6$1(org.apache.commons.math3.analysis.FunctionUtils$6)
org.apache.commons.math3.analysis.function.Acos.derivative() org.apache.commons.math3.analysis.function.Cbrt.derivative()
org.apache.commons.math3.analysis.function.Acos.derivative() org.apache.commons.math3.analysis.function.Minus.derivative()
org.apache.commons.math3.analysis.function.Acos.derivative() org.apache.commons.math3.analysis.function.Tanh.derivative()
org.apache.commons.math3.analysis.function.Acos.derivative() org.apache.commons.math3.analysis.FunctionUtils.toDifferentiableUnivariateFunction(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction)
org.apache.commons.math3.analysis.function.Acos.derivative() org.apache.commons.math3.analysis.function.Expm1.derivative()
org.apache.commons.math3.analysis.function.Acos.derivative() org.apache.commons.math3.analysis.function.Power.derivative()
org.apache.commons.math3.analysis.function.Acos.derivative() org.apache.commons.math3.analysis.function.Logit.derivative()
org.apache.commons.math3.analysis.function.Acos.derivative() org.apache.commons.math3.analysis.function.Sinc.derivative()
org.apache.commons.math3.analysis.function.Acos.derivative() org.apache.commons.math3.analysis.function.Constant.derivative()
org.apache.commons.math3.analysis.function.Acos.derivative() org.apache.commons.math3.analysis.function.Log10.derivative()
org.apache.commons.math3.analysis.function.Acos.derivative() org.apache.commons.math3.analysis.function.Sigmoid.derivative()
org.apache.commons.math3.analysis.function.Acos.derivative() org.apache.commons.math3.analysis.function.Acosh.derivative()
org.apache.commons.math3.analysis.function.Acos.derivative() org.apache.commons.math3.analysis.function.Exp.derivative()
org.apache.commons.math3.analysis.function.Acos.derivative() org.apache.commons.math3.analysis.function.Sinh.derivative()
org.apache.commons.math3.analysis.function.Acos.derivative() java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Acos.derivative() org.apache.commons.math3.analysis.polynomials.PolynomialFunction.derivative()
org.apache.commons.math3.analysis.function.Acos.derivative() org.apache.commons.math3.analysis.function.Gaussian.derivative()
org.apache.commons.math3.analysis.function.Acos.derivative() org.apache.commons.math3.analysis.function.Atanh.derivative()
org.apache.commons.math3.analysis.function.Acos.derivative() org.apache.commons.math3.analysis.function.Sqrt.derivative()
org.apache.commons.math3.analysis.function.Acos.derivative() org.apache.commons.math3.analysis.FunctionUtils$3.derivative()
org.apache.commons.math3.analysis.function.Acos.derivative() org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.derivative()
org.apache.commons.math3.analysis.function.Acos.derivative() org.apache.commons.math3.analysis.function.Log1p.derivative()
org.apache.commons.math3.analysis.function.Acos.derivative() org.apache.commons.math3.analysis.function.Asin.derivative()
org.apache.commons.math3.analysis.function.Acos.derivative() org.apache.commons.math3.analysis.function.Cos.derivative()
org.apache.commons.math3.analysis.function.Acos.derivative() org.apache.commons.math3.analysis.function.Asinh.derivative()
org.apache.commons.math3.analysis.function.Acos.derivative() org.apache.commons.math3.analysis.function.Tan.derivative()
org.apache.commons.math3.analysis.function.Acos.derivative() org.apache.commons.math3.analysis.FunctionUtils$6.derivative()
org.apache.commons.math3.analysis.function.Acos.derivative() org.apache.commons.math3.analysis.function.Log.derivative()
org.apache.commons.math3.analysis.function.Acos.derivative() org.apache.commons.math3.analysis.function.Atan.derivative()
org.apache.commons.math3.analysis.function.Acos.derivative() org.apache.commons.math3.analysis.function.Acos.derivative()
org.apache.commons.math3.analysis.function.Acos.derivative() org.apache.commons.math3.analysis.FunctionUtils$14.derivative()
org.apache.commons.math3.analysis.function.Acos.derivative() org.apache.commons.math3.analysis.function.Identity.derivative()
org.apache.commons.math3.analysis.function.Acos.derivative() org.apache.commons.math3.analysis.function.Cosh.derivative()
org.apache.commons.math3.analysis.function.Acos.derivative() org.apache.commons.math3.analysis.FunctionUtils$9.derivative()
org.apache.commons.math3.analysis.function.Acos.derivative() org.apache.commons.math3.analysis.function.Logistic.derivative()
org.apache.commons.math3.analysis.function.Acos.derivative() org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative()
org.apache.commons.math3.analysis.function.Acos.derivative() org.apache.commons.math3.analysis.function.Inverse.derivative()
org.apache.commons.math3.analysis.function.Acos.derivative() org.apache.commons.math3.analysis.function.Sin.derivative()
org.apache.commons.math3.dfp.DfpDec.newInstance(long) java.lang.Object.clinit()
org.apache.commons.math3.dfp.DfpDec.newInstance(long) org.apache.commons.math3.dfp.DfpDec(org.apache.commons.math3.dfp.DfpField,long)
org.apache.commons.math3.dfp.DfpDec.newInstance(long) org.apache.commons.math3.dfp.Dfp.getField()
org.apache.commons.math3.geometry.euclidean.threed.Line.pointAt(double) java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.threed.Line.pointAt(double) org.apache.commons.math3.geometry.euclidean.threed.Vector3D.clinit()
org.apache.commons.math3.geometry.euclidean.threed.Line.pointAt(double) org.apache.commons.math3.geometry.euclidean.threed.Vector3D(double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
org.apache.commons.math3.analysis.function.Gaussian$Parametric.value(double,double[]) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Gaussian$Parametric.value(double,double[]) org.apache.commons.math3.analysis.function.Gaussian$Parametric.validateParameters(double[])
org.apache.commons.math3.analysis.function.Gaussian$Parametric.value(double,double[]) org.apache.commons.math3.analysis.function.Gaussian.access$000(double,double,double)
org.apache.commons.math3.analysis.function.Logistic$Parametric.value(double,double[]) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Logistic$Parametric.value(double,double[]) org.apache.commons.math3.analysis.function.Logistic.access$000(double,double,double,double,double,double)
org.apache.commons.math3.analysis.function.Logistic$Parametric.value(double,double[]) org.apache.commons.math3.analysis.function.Logistic$Parametric.validateParameters(double[])
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getMax() org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMax()
org.apache.commons.math3.linear.BlockRealMatrix.setEntry(int,int,double) java.lang.Object.clinit()
org.apache.commons.math3.linear.BlockRealMatrix.setEntry(int,int,double) org.apache.commons.math3.linear.MatrixUtils.clinit()
org.apache.commons.math3.linear.BlockRealMatrix.setEntry(int,int,double) org.apache.commons.math3.linear.MatrixUtils.checkMatrixIndex(org.apache.commons.math3.linear.AnyMatrix,int,int)
org.apache.commons.math3.linear.BlockRealMatrix.setEntry(int,int,double) org.apache.commons.math3.linear.BlockRealMatrix.blockWidth(int)
org.apache.commons.math3.stat.descriptive.rank.Min.increment(double) java.lang.Object.clinit()
org.apache.commons.math3.stat.descriptive.rank.Min.increment(double) java.lang.Double.isNaN(double)
org.apache.commons.math3.stat.descriptive.rank.Min.increment(double) java.lang.Double.clinit()
org.apache.commons.math3.optimization.linear.LinearConstraint.hashCode() java.lang.Object.clinit()
org.apache.commons.math3.optimization.linear.LinearConstraint.hashCode() org.apache.commons.math3.linear.OpenMapRealVector.hashCode()
org.apache.commons.math3.optimization.linear.LinearConstraint.hashCode() org.apache.commons.math3.linear.RealVector.hashCode()
org.apache.commons.math3.optimization.linear.LinearConstraint.hashCode() java.lang.Double.valueOf(double)
org.apache.commons.math3.optimization.linear.LinearConstraint.hashCode() java.lang.Enum.hashCode()
org.apache.commons.math3.optimization.linear.LinearConstraint.hashCode() org.apache.commons.math3.linear.ArrayRealVector.hashCode()
org.apache.commons.math3.optimization.linear.LinearConstraint.hashCode() java.lang.Double.clinit()
org.apache.commons.math3.optimization.linear.LinearConstraint.hashCode() java.lang.Double.hashCode()
org.apache.commons.math3.linear.DiagonalMatrix.setEntry(int,int,double) java.lang.Object.clinit()
org.apache.commons.math3.linear.DiagonalMatrix.setEntry(int,int,double) org.apache.commons.math3.linear.DiagonalMatrix.ensureZero(double)
org.apache.commons.math3.linear.DiagonalMatrix.setEntry(int,int,double) org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(org.apache.commons.math3.linear.AnyMatrix,int)
org.apache.commons.math3.linear.DiagonalMatrix.setEntry(int,int,double) org.apache.commons.math3.linear.MatrixUtils.clinit()
org.apache.commons.math3.dfp.Dfp.getReal() org.apache.commons.math3.dfp.Dfp.toDouble()
org.apache.commons.math3.random.MersenneTwister.setSeed(int[]) org.apache.commons.math3.random.MersenneTwister.setSeed(long)
org.apache.commons.math3.random.MersenneTwister.setSeed(int[]) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.random.MersenneTwister.setSeed(int[]) java.lang.Object.clinit()
org.apache.commons.math3.random.MersenneTwister.setSeed(int[]) org.apache.commons.math3.util.FastMath.max(int,int)
org.apache.commons.math3.random.MersenneTwister.setSeed(int[]) org.apache.commons.math3.random.MersenneTwister.setSeed(int)
org.apache.commons.math3.random.MersenneTwister.setSeed(int[]) java.lang.System.currentTimeMillis()
org.apache.commons.math3.random.MersenneTwister.setSeed(int[]) org.apache.commons.math3.random.BitsStreamGenerator.clear()
org.apache.commons.math3.random.MersenneTwister.setSeed(int[]) java.lang.System.identityHashCode(java.lang.Object)
org.apache.commons.math3.random.MersenneTwister.setSeed(int[]) java.lang.System.clinit()
org.apache.commons.math3.random.AbstractWell.setSeed(int[]) java.lang.Object.clinit()
org.apache.commons.math3.random.AbstractWell.setSeed(int[]) java.lang.System.currentTimeMillis()
org.apache.commons.math3.random.AbstractWell.setSeed(int[]) java.lang.System.arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org.apache.commons.math3.random.AbstractWell.setSeed(int[]) org.apache.commons.math3.random.BitsStreamGenerator.clear()
org.apache.commons.math3.random.AbstractWell.setSeed(int[]) java.lang.Math.clinit()
org.apache.commons.math3.random.AbstractWell.setSeed(int[]) java.lang.Math.min(int,int)
org.apache.commons.math3.random.AbstractWell.setSeed(int[]) org.apache.commons.math3.random.AbstractWell.setSeed(long)
org.apache.commons.math3.random.AbstractWell.setSeed(int[]) java.lang.System.identityHashCode(java.lang.Object)
org.apache.commons.math3.random.AbstractWell.setSeed(int[]) java.lang.System.clinit()
org.apache.commons.math3.util.Decimal64.toString() java.lang.Object.clinit()
org.apache.commons.math3.util.Decimal64.toString() java.lang.Double.toString(double)
org.apache.commons.math3.util.Decimal64.toString() java.lang.Double.clinit()
org.apache.commons.math3.linear.RealVectorFormat(java.text.NumberFormat) org.apache.commons.math3.linear.RealVectorFormat(java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat)
org.apache.commons.math3.analysis.differentiation.DSCompiler.getPartialDerivativeIndex(int[]) java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.getPartialDerivativeIndex(int[]) org.apache.commons.math3.analysis.differentiation.DSCompiler.getFreeParameters()
org.apache.commons.math3.analysis.differentiation.DSCompiler.getPartialDerivativeIndex(int[]) org.apache.commons.math3.exception.DimensionMismatchException(int,int)
org.apache.commons.math3.analysis.differentiation.DSCompiler.getPartialDerivativeIndex(int[]) java.lang.Throwable.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.getPartialDerivativeIndex(int[]) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.getPartialDerivativeIndex(int[]) org.apache.commons.math3.analysis.differentiation.DSCompiler.getPartialDerivativeIndex(int,int,int[][],int[])
org.apache.commons.math3.analysis.differentiation.DSCompiler.getPartialDerivativeIndex(int[]) org.apache.commons.math3.analysis.differentiation.DSCompiler.clinit()
org.apache.commons.math3.distribution.NormalDistribution.cumulativeProbability(double) org.apache.commons.math3.distribution.NormalDistribution.clinit()
org.apache.commons.math3.distribution.NormalDistribution.cumulativeProbability(double) java.lang.Object.clinit()
org.apache.commons.math3.distribution.NormalDistribution.cumulativeProbability(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.distribution.NormalDistribution.cumulativeProbability(double) org.apache.commons.math3.special.Erf.erf(double)
org.apache.commons.math3.distribution.NormalDistribution.cumulativeProbability(double) org.apache.commons.math3.util.FastMath.abs(double)
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getStandardDeviation() java.lang.Object.clinit()
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getStandardDeviation() org.apache.commons.math3.util.FastMath.sqrt(double)
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getStandardDeviation() org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getStandardDeviation() org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getN()
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getStandardDeviation() org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getVariance()
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getStandardDeviation() org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics.getN()
org.apache.commons.math3.analysis.function.Multiply() java.lang.Object()
org.apache.commons.math3.stat.descriptive.summary.SumOfLogs.evaluate(double[],int,int) java.lang.Object.clinit()
org.apache.commons.math3.stat.descriptive.summary.SumOfLogs.evaluate(double[],int,int) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.stat.descriptive.summary.SumOfLogs.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.test(double[],int,int,boolean)
org.apache.commons.math3.stat.descriptive.summary.SumOfLogs.evaluate(double[],int,int) org.apache.commons.math3.util.FastMath.log(double)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() sun.text.CompactByteArray.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.awt.geom.AffineTransform.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() sun.security.krb5.internal.KerberosTime.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.util.Hashtable.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() sun.security.krb5.internal.Ticket.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() sun.text.IntHashtable.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() sun.security.util.BitArray.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() com.sun.imageio.plugins.jpeg.DHTMarkerSegment$Htable.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.util.SimpleTimeZone.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.util.IdentityHashMap.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.util.JapaneseImperialCalendar.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() sun.security.krb5.internal.ETypeInfo.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() sun.text.normalizer.NormalizerBase.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.util.Locale.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() sun.security.krb5.internal.TicketFlags.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() sun.java2d.SunGraphics2D.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() sun.security.provider.MD4.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() javax.swing.tree.DefaultTreeSelectionModel.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.awt.print.Paper.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.text.MessageFormat.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.lang.Object.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() javax.swing.text.SimpleAttributeSet.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() javax.swing.ArrayTable.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.text.SimpleDateFormat.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() sun.java2d.loops.FontInfo.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.awt.PageAttributes.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() sun.security.krb5.PrincipalName.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() com.sun.imageio.plugins.png.PNGMetadata.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.util.GregorianCalendar.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() com.sun.imageio.plugins.jpeg.SOFMarkerSegment.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.util.Vector.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() javax.swing.text.ElementIterator.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.net.HttpCookie.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.awt.datatransfer.MimeType.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.awt.RenderingHints.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.text.DateFormatSymbols.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.util.HashSet.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() sun.util.calendar.ImmutableGregorianDate.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() javax.sound.midi.MetaMessage.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() sun.font.FontLineMetrics.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() sun.font.StandardGlyphVector.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.text.AttributedString$AttributedStringIterator.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.text.RuleBasedBreakIterator.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() javax.swing.text.Segment.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.awt.ImageCapabilities.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() sun.security.krb5.internal.LastReqEntry.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() javax.swing.text.StyleContext$SmallAttributeSet.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.text.RuleBasedCollator.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.text.RuleBasedBreakIterator$SafeCharIterator.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() javax.swing.text.ElementIterator$StackItem.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$ICCMarkerSegment.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.awt.geom.Line2D.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.util.ResourceBundle$CacheKey.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumbJPEG.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() sun.security.krb5.internal.ETypeInfo2.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.awt.font.TextMeasurer.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.util.LinkedList.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() sun.font.AttributeValues.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() javax.swing.text.StyledEditorKit$1.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.util.ArrayDeque.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() javax.swing.text.GlyphView.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.awt.datatransfer.DataFlavor.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() sun.security.krb5.internal.PAData.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() javax.swing.AbstractAction.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() sun.text.normalizer.ReplaceableUCharacterIterator.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.util.concurrent.CopyOnWriteArrayList.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumb.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.awt.geom.Point2D.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() javax.swing.text.html.OptionListModel.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() sun.security.krb5.internal.AuthorizationDataEntry.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() javax.swing.text.EditorKit.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() javax.swing.text.StyledEditorKit.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() com.sun.imageio.plugins.jpeg.DQTMarkerSegment.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.util.JumboEnumSet.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() sun.security.krb5.internal.HostAddresses.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() javax.crypto.Mac.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() javax.naming.Reference.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() com.sun.imageio.plugins.jpeg.SOSMarkerSegment.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.util.jar.Manifest.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() sun.security.krb5.EncryptedData.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.text.NumberFormat.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() sun.net.ProgressSource.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.util.EnumSet.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() sun.net.www.protocol.http.AuthenticationInfo.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.awt.datatransfer.MimeTypeParameterList.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.util.regex.Pattern$CharPropertyNames$CloneableProperty.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.security.SignatureSpi.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() sun.security.x509.GeneralSubtrees.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.util.ArrayList.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() com.sun.imageio.plugins.jpeg.DHTMarkerSegment.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() javax.naming.CompositeName.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.awt.font.CharArrayIterator.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.security.Signature$Delegate.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.util.TreeSet.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.util.Hashtable$Entry.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.awt.image.ImageFilter.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() com.sun.imageio.plugins.jpeg.SOSMarkerSegment$ScanComponentSpec.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.awt.geom.Path2D$Float.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() sun.security.krb5.EncryptionKey.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.text.DecimalFormat.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.awt.BufferCapabilities.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.awt.image.Kernel.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.util.Date.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.awt.Insets.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() sun.net.www.MimeEntry.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() sun.util.calendar.CalendarDate.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.awt.print.PageFormat.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() com.sun.imageio.plugins.jpeg.SOFMarkerSegment$ComponentSpec.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.util.EnumMap.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() sun.security.krb5.internal.AuthorizationData.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFExtensionMarkerSegment.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.awt.geom.QuadCurve2D.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() sun.security.krb5.internal.crypto.crc32.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.util.zip.ZipEntry.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.security.MessageDigest$Delegate.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() sun.util.calendar.ZoneInfo.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() sun.text.normalizer.CharacterIteratorWrapper.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.text.DecimalFormatSymbols.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.awt.font.TextLayout.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() javax.swing.DefaultListSelectionModel.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.text.DigitList.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() javax.print.attribute.EnumSyntax.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() javax.sound.midi.ShortMessage.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.awt.geom.CubicCurve2D.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.text.ChoiceFormat.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.lang.Thread.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() com.sun.imageio.plugins.jpeg.MarkerSegment.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.awt.image.renderable.RenderContext.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() sun.security.krb5.Realm.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() com.sun.imageio.plugins.jpeg.DQTMarkerSegment$Qtable.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.awt.JobAttributes.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() com.sun.imageio.plugins.jpeg.JPEGMetadata.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.text.StringCharacterIterator.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.awt.geom.Dimension2D.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() sun.security.x509.NameConstraintsExtension.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.awt.geom.Area.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.util.jar.Attributes.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() sun.security.krb5.internal.HostAddress.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.util.TreeMap.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.awt.geom.Path2D$Double.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.text.BreakIterator.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.util.BitSet.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.lang.Enum.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.util.AbstractMap.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() javax.swing.tree.DefaultMutableTreeNode.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.awt.geom.RectangularShape.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() sun.security.provider.PolicyParser$GrantEntry.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() java.util.HashMap.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.clone()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives() javax.swing.text.html.HTMLEditorKit.clone()
org.apache.commons.math3.util.FastMathCalc.printarray(java.io.PrintStream,java.lang.String,int,double[]) org.apache.commons.math3.util.FastMathCalc.checkLen(int,int)
org.apache.commons.math3.util.FastMathCalc.printarray(java.io.PrintStream,java.lang.String,int,double[]) java.io.PrintStream.println(java.lang.String)
org.apache.commons.math3.util.FastMathCalc.printarray(java.io.PrintStream,java.lang.String,int,double[]) java.lang.Object.clinit()
org.apache.commons.math3.util.FastMathCalc.printarray(java.io.PrintStream,java.lang.String,int,double[]) java.lang.StringBuilder()
org.apache.commons.math3.util.FastMathCalc.printarray(java.io.PrintStream,java.lang.String,int,double[]) java.io.PrintStream.printf(java.lang.String,java.lang.Object[])
org.apache.commons.math3.util.FastMathCalc.printarray(java.io.PrintStream,java.lang.String,int,double[]) org.apache.commons.math3.util.FastMathCalc.clinit()
org.apache.commons.math3.util.FastMathCalc.printarray(java.io.PrintStream,java.lang.String,int,double[]) org.apache.commons.math3.util.FastMathCalc.format(double)
org.apache.commons.math3.util.FastMathCalc.printarray(java.io.PrintStream,java.lang.String,int,double[]) java.lang.StringBuilder.append(java.lang.String)
org.apache.commons.math3.util.FastMathCalc.printarray(java.io.PrintStream,java.lang.String,int,double[]) java.lang.StringBuilder.toString()
org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.value(double) org.apache.commons.math3.exception.OutOfRangeException(java.lang.Number,java.lang.Number,java.lang.Number)
org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.value(double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(double)
org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.value(double) java.lang.Double.valueOf(double)
org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.value(double) java.lang.Throwable.clinit()
org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.value(double) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.value(double) java.util.Arrays.clinit()
org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.value(double) java.util.Arrays.binarySearch(double[],double)
org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.value(double) java.lang.Double.clinit()
org.apache.commons.math3.geometry.partitioning.BSPTree.getCell(org.apache.commons.math3.geometry.Vector) java.lang.Object.clinit()
org.apache.commons.math3.geometry.partitioning.BSPTree.getCell(org.apache.commons.math3.geometry.Vector) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.geometry.partitioning.BSPTree.getCell(org.apache.commons.math3.geometry.Vector) org.apache.commons.math3.geometry.euclidean.twod.Line.getOffset(org.apache.commons.math3.geometry.Vector)
org.apache.commons.math3.geometry.partitioning.BSPTree.getCell(org.apache.commons.math3.geometry.Vector) org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.getHyperplane()
org.apache.commons.math3.geometry.partitioning.BSPTree.getCell(org.apache.commons.math3.geometry.Vector) org.apache.commons.math3.geometry.partitioning.BSPTree.getCell(org.apache.commons.math3.geometry.Vector)
org.apache.commons.math3.geometry.partitioning.BSPTree.getCell(org.apache.commons.math3.geometry.Vector) org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.getOffset(org.apache.commons.math3.geometry.Vector)
org.apache.commons.math3.geometry.partitioning.BSPTree.getCell(org.apache.commons.math3.geometry.Vector) org.apache.commons.math3.geometry.euclidean.threed.Plane.getOffset(org.apache.commons.math3.geometry.Vector)
org.apache.commons.math3.geometry.partitioning.BSPTree.getCell(org.apache.commons.math3.geometry.Vector) org.apache.commons.math3.util.FastMath.abs(double)
org.apache.commons.math3.optimization.BaseMultivariateVectorMultiStartOptimizer$1.compare(java.lang.Object,java.lang.Object) org.apache.commons.math3.optimization.BaseMultivariateVectorMultiStartOptimizer$1.compare(org.apache.commons.math3.optimization.PointVectorValuePair,org.apache.commons.math3.optimization.PointVectorValuePair)
org.apache.commons.math3.util.FastMath.asin(double) java.lang.Object.clinit()
org.apache.commons.math3.util.FastMath.asin(double) org.apache.commons.math3.util.FastMath.sqrt(double)
org.apache.commons.math3.util.FastMath.asin(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.util.FastMath.asin(double) org.apache.commons.math3.util.FastMath.atan(double,double,boolean)
org.apache.commons.math3.linear.OpenMapRealMatrix.setEntry(int,int,double) java.lang.Object.clinit()
org.apache.commons.math3.linear.OpenMapRealMatrix.setEntry(int,int,double) org.apache.commons.math3.util.OpenIntToDoubleHashMap.remove(int)
org.apache.commons.math3.linear.OpenMapRealMatrix.setEntry(int,int,double) org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(org.apache.commons.math3.linear.AnyMatrix,int)
org.apache.commons.math3.linear.OpenMapRealMatrix.setEntry(int,int,double) org.apache.commons.math3.linear.MatrixUtils.clinit()
org.apache.commons.math3.linear.OpenMapRealMatrix.setEntry(int,int,double) org.apache.commons.math3.util.OpenIntToDoubleHashMap.put(int,double)
org.apache.commons.math3.linear.OpenMapRealMatrix.setEntry(int,int,double) org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(org.apache.commons.math3.linear.AnyMatrix,int)
org.apache.commons.math3.linear.OpenMapRealMatrix.setEntry(int,int,double) org.apache.commons.math3.linear.OpenMapRealMatrix.computeKey(int,int)
org.apache.commons.math3.complex.Quaternion.hashCode() java.lang.Object.clinit()
org.apache.commons.math3.complex.Quaternion.hashCode() org.apache.commons.math3.util.MathUtils.hash(double)
org.apache.commons.math3.exception.MathUnsupportedOperationException.getLocalizedMessage() org.apache.commons.math3.exception.util.ExceptionContext.getLocalizedMessage()
org.apache.commons.math3.linear.OpenMapRealVector.setEntry(int,double) org.apache.commons.math3.util.OpenIntToDoubleHashMap.remove(int)
org.apache.commons.math3.linear.OpenMapRealVector.setEntry(int,double) org.apache.commons.math3.linear.RealVector.checkIndex(int)
org.apache.commons.math3.linear.OpenMapRealVector.setEntry(int,double) org.apache.commons.math3.util.OpenIntToDoubleHashMap.containsKey(int)
org.apache.commons.math3.linear.OpenMapRealVector.setEntry(int,double) org.apache.commons.math3.util.OpenIntToDoubleHashMap.put(int,double)
org.apache.commons.math3.linear.OpenMapRealVector.setEntry(int,double) org.apache.commons.math3.linear.OpenMapRealVector.isDefaultValue(double)
org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator.computeInterpolatedStateAndDerivatives(double,double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator.computeInterpolatedStateAndDerivatives(double,double) java.lang.Object.clinit()
org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator.computeInterpolatedStateAndDerivatives(double,double) org.apache.commons.math3.util.FastMath.pow(double,int)
org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator.computeInterpolatedStateAndDerivatives(double,double) java.util.Arrays.fill(double[],double)
org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator.computeInterpolatedStateAndDerivatives(double,double) org.apache.commons.math3.linear.Array2DRowRealMatrix.getDataRef()
org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator.computeInterpolatedStateAndDerivatives(double,double) java.util.Arrays.clinit()
org.apache.commons.math3.random.BitsStreamGenerator.nextInt() org.apache.commons.math3.random.Well512a.next(int)
org.apache.commons.math3.random.BitsStreamGenerator.nextInt() org.apache.commons.math3.random.ISAACRandom.next(int)
org.apache.commons.math3.random.BitsStreamGenerator.nextInt() org.apache.commons.math3.random.Well1024a.next(int)
org.apache.commons.math3.random.BitsStreamGenerator.nextInt() org.apache.commons.math3.random.Well44497b.next(int)
org.apache.commons.math3.random.BitsStreamGenerator.nextInt() org.apache.commons.math3.random.Well19937c.next(int)
org.apache.commons.math3.random.BitsStreamGenerator.nextInt() org.apache.commons.math3.random.MersenneTwister.next(int)
org.apache.commons.math3.random.BitsStreamGenerator.nextInt() org.apache.commons.math3.random.Well44497a.next(int)
org.apache.commons.math3.random.BitsStreamGenerator.nextInt() org.apache.commons.math3.random.Well19937a.next(int)
org.apache.commons.math3.geometry.euclidean.threed.Plane.sameOrientationAs(org.apache.commons.math3.geometry.partitioning.Hyperplane) org.apache.commons.math3.geometry.euclidean.threed.Vector3D.dotProduct(org.apache.commons.math3.geometry.Vector)
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.lang.Object.clinit()
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getOrder()
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.verifyInputArray(double[],double[])
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getFreeParameters()
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.subtract(double)
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.multiply(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure(int,int,double)
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.add(double)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.add(double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.add(double) org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.linear.AbstractRealMatrix.hashCode() org.apache.commons.math3.linear.BlockRealMatrix.getColumnDimension()
org.apache.commons.math3.linear.AbstractRealMatrix.hashCode() org.apache.commons.math3.linear.DiagonalMatrix.getEntry(int,int)
org.apache.commons.math3.linear.AbstractRealMatrix.hashCode() org.apache.commons.math3.linear.OpenMapRealMatrix.getRowDimension()
org.apache.commons.math3.linear.AbstractRealMatrix.hashCode() org.apache.commons.math3.linear.DiagonalMatrix.getRowDimension()
org.apache.commons.math3.linear.AbstractRealMatrix.hashCode() org.apache.commons.math3.util.MathUtils.hash(double)
org.apache.commons.math3.linear.AbstractRealMatrix.hashCode() org.apache.commons.math3.linear.OpenMapRealMatrix.getColumnDimension()
org.apache.commons.math3.linear.AbstractRealMatrix.hashCode() org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension()
org.apache.commons.math3.linear.AbstractRealMatrix.hashCode() java.lang.Object.clinit()
org.apache.commons.math3.linear.AbstractRealMatrix.hashCode() org.apache.commons.math3.linear.OpenMapRealMatrix.getEntry(int,int)
org.apache.commons.math3.linear.AbstractRealMatrix.hashCode() org.apache.commons.math3.linear.BlockRealMatrix.getRowDimension()
org.apache.commons.math3.linear.AbstractRealMatrix.hashCode() org.apache.commons.math3.linear.BlockRealMatrix.getEntry(int,int)
org.apache.commons.math3.linear.AbstractRealMatrix.hashCode() org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry(int,int)
org.apache.commons.math3.linear.AbstractRealMatrix.hashCode() org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension()
org.apache.commons.math3.linear.AbstractRealMatrix.hashCode() org.apache.commons.math3.linear.DiagonalMatrix.getColumnDimension()
org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.next() org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.advance()
org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.next() org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.next()
org.apache.commons.math3.util.FastMath.clinit() org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.util.FastMath.clinit() java.lang.Object.clinit()
org.apache.commons.math3.util.FastMath.clinit() java.lang.StrictMath.clinit()
org.apache.commons.math3.util.FastMath.clinit() java.lang.StrictMath.log(double)
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getCovariance() org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance.getResult()
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.toString() org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat.getInstance()
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.toString() java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.toString() org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.toVector3D()
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.toString() org.apache.commons.math3.geometry.VectorFormat.format(org.apache.commons.math3.geometry.Vector)
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) sun.text.CompactByteArray.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.awt.geom.AffineTransform.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.util.Hashtable.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) sun.security.krb5.internal.KerberosTime.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) sun.security.krb5.internal.Ticket.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) sun.text.IntHashtable.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) sun.security.util.BitArray.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) com.sun.imageio.plugins.jpeg.DHTMarkerSegment$Htable.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.util.SimpleTimeZone.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.util.IdentityHashMap.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.util.JapaneseImperialCalendar.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) sun.security.krb5.internal.ETypeInfo.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) sun.text.normalizer.NormalizerBase.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.util.Locale.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) sun.security.krb5.internal.TicketFlags.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) sun.java2d.SunGraphics2D.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) sun.security.provider.MD4.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) org.apache.commons.math3.exception.NullArgumentException()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) javax.swing.tree.DefaultTreeSelectionModel.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.awt.print.Paper.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.text.MessageFormat.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.lang.Object.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) javax.swing.text.SimpleAttributeSet.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) javax.swing.ArrayTable.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.text.SimpleDateFormat.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) sun.java2d.loops.FontInfo.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) sun.security.krb5.PrincipalName.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.awt.PageAttributes.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) com.sun.imageio.plugins.png.PNGMetadata.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.util.GregorianCalendar.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) com.sun.imageio.plugins.jpeg.SOFMarkerSegment.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.util.Vector.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) javax.swing.text.ElementIterator.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.net.HttpCookie.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.awt.datatransfer.MimeType.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.awt.RenderingHints.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.text.DateFormatSymbols.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.util.HashSet.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) sun.util.calendar.ImmutableGregorianDate.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) javax.sound.midi.MetaMessage.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) sun.font.FontLineMetrics.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) sun.font.StandardGlyphVector.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.text.AttributedString$AttributedStringIterator.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.text.RuleBasedBreakIterator.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) javax.swing.text.Segment.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.awt.ImageCapabilities.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) sun.security.krb5.internal.LastReqEntry.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) javax.swing.text.StyleContext$SmallAttributeSet.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.text.RuleBasedCollator.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.text.RuleBasedBreakIterator$SafeCharIterator.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) javax.swing.text.ElementIterator$StackItem.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$ICCMarkerSegment.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.awt.geom.Line2D.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.util.ResourceBundle$CacheKey.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumbJPEG.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) sun.security.krb5.internal.ETypeInfo2.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.awt.font.TextMeasurer.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.util.LinkedList.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) sun.font.AttributeValues.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) javax.swing.text.StyledEditorKit$1.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.util.ArrayDeque.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) javax.swing.text.GlyphView.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.awt.datatransfer.DataFlavor.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) sun.security.krb5.internal.PAData.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) javax.swing.AbstractAction.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) sun.text.normalizer.ReplaceableUCharacterIterator.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.util.concurrent.CopyOnWriteArrayList.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumb.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.awt.geom.Point2D.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) javax.swing.text.html.OptionListModel.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) sun.security.krb5.internal.AuthorizationDataEntry.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) javax.swing.text.EditorKit.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) javax.swing.text.StyledEditorKit.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) com.sun.imageio.plugins.jpeg.DQTMarkerSegment.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.util.JumboEnumSet.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) sun.security.krb5.internal.HostAddresses.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) javax.crypto.Mac.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) javax.naming.Reference.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) com.sun.imageio.plugins.jpeg.SOSMarkerSegment.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.util.jar.Manifest.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) sun.security.krb5.EncryptedData.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.text.NumberFormat.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) sun.net.ProgressSource.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.util.EnumSet.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) sun.net.www.protocol.http.AuthenticationInfo.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.awt.datatransfer.MimeTypeParameterList.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.util.regex.Pattern$CharPropertyNames$CloneableProperty.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.security.SignatureSpi.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) sun.security.x509.GeneralSubtrees.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.util.ArrayList.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) com.sun.imageio.plugins.jpeg.DHTMarkerSegment.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) javax.naming.CompositeName.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.awt.font.CharArrayIterator.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.security.Signature$Delegate.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.util.TreeSet.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.util.Hashtable$Entry.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.awt.image.ImageFilter.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) org.apache.commons.math3.linear.RealVector()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) com.sun.imageio.plugins.jpeg.SOSMarkerSegment$ScanComponentSpec.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.awt.geom.Path2D$Float.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) sun.security.krb5.EncryptionKey.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.text.DecimalFormat.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.awt.BufferCapabilities.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.awt.image.Kernel.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.util.Date.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.awt.Insets.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) sun.net.www.MimeEntry.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) sun.util.calendar.CalendarDate.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.awt.print.PageFormat.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) com.sun.imageio.plugins.jpeg.SOFMarkerSegment$ComponentSpec.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.util.EnumMap.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) sun.security.krb5.internal.AuthorizationData.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFExtensionMarkerSegment.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.awt.geom.QuadCurve2D.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) sun.security.krb5.internal.crypto.crc32.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.util.zip.ZipEntry.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.security.MessageDigest$Delegate.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) sun.util.calendar.ZoneInfo.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) sun.text.normalizer.CharacterIteratorWrapper.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.lang.Object.clinit()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.text.DecimalFormatSymbols.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.awt.font.TextLayout.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) javax.swing.DefaultListSelectionModel.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.text.DigitList.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) javax.print.attribute.EnumSyntax.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) javax.sound.midi.ShortMessage.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.awt.geom.CubicCurve2D.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.text.ChoiceFormat.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.lang.Thread.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) com.sun.imageio.plugins.jpeg.MarkerSegment.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.awt.image.renderable.RenderContext.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) sun.security.krb5.Realm.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) com.sun.imageio.plugins.jpeg.DQTMarkerSegment$Qtable.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.lang.Throwable.clinit()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.awt.JobAttributes.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) com.sun.imageio.plugins.jpeg.JPEGMetadata.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.text.StringCharacterIterator.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.awt.geom.Dimension2D.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) sun.security.x509.NameConstraintsExtension.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.awt.geom.Area.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.util.jar.Attributes.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) sun.security.krb5.internal.HostAddress.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.util.TreeMap.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.awt.geom.Path2D$Double.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.text.BreakIterator.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.util.BitSet.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.lang.Enum.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.util.AbstractMap.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) javax.swing.tree.DefaultMutableTreeNode.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.awt.geom.RectangularShape.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) sun.security.provider.PolicyParser$GrantEntry.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) java.util.HashMap.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.clone()
org.apache.commons.math3.linear.ArrayRealVector(double[],boolean) javax.swing.text.html.HTMLEditorKit.clone()
org.apache.commons.math3.optim.linear.LinearObjectiveFunction.value(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVector.dotProduct(org.apache.commons.math3.linear.RealVector)
org.apache.commons.math3.optim.linear.LinearObjectiveFunction.value(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVector$2.dotProduct(org.apache.commons.math3.linear.RealVector)
org.apache.commons.math3.optim.linear.LinearObjectiveFunction.value(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.ArrayRealVector.dotProduct(org.apache.commons.math3.linear.RealVector)
org.apache.commons.math3.geometry.partitioning.AbstractRegion.getSize() org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.getSize() org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.computeGeometricalProperties()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.getSize() org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.computeGeometricalProperties()
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.function.Ulp.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.function.Acos.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.function.Sqrt.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.function.Asin.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.function.Rint.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.function.Gaussian.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.function.Tan.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.ode.events.EventState$1.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.function.Sinc.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$7.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.function.Sin.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.function.Log1p.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.function.Identity.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$3.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.function.Signum.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.distribution.AbstractRealDistribution$1.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.function.Exp.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.function.Logit.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.function.Acosh.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.util.MathUtils.reduce(double,double,double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$2.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator$1.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator.access$000(org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.function.Log10.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$1.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$12.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$8.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.function.Constant.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.function.Atan.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.function.Logistic.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.function.Sinh.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.function.Cosh.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.function.Floor.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.function.Expm1.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.function.Power.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.function.Cbrt.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.optimization.direct.PowellOptimizer$LineSearch$1.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.function.HarmonicOscillator.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.function.Asinh.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$4.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$6.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.function.StepFunction.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.function.Minus.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$13.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.function.Tanh.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$9.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.function.Cos.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.function.Atanh.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$10.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.function.Log.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.function.Sigmoid.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.function.Inverse.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch$1.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$5.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.function.Abs.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$15.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.function.Ceil.value(double)
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double) org.apache.commons.math3.analysis.FunctionUtils$14.value(double)
org.apache.commons.math3.optimization.GoalType(java.lang.String,int) java.lang.Enum(java.lang.String,int)
org.apache.commons.math3.random.RandomDataGenerator.getRandomGenerator() org.apache.commons.math3.random.RandomDataGeneratorRan()
org.apache.commons.math3.util.ArithmeticUtils.gcdPositive(int,int) java.lang.Object.clinit()
org.apache.commons.math3.util.ArithmeticUtils.gcdPositive(int,int) java.lang.Math.abs(int)
org.apache.commons.math3.util.ArithmeticUtils.gcdPositive(int,int) java.lang.Integer.clinit()
org.apache.commons.math3.util.ArithmeticUtils.gcdPositive(int,int) java.lang.Math.clinit()
org.apache.commons.math3.util.ArithmeticUtils.gcdPositive(int,int) java.lang.Math.min(int,int)
org.apache.commons.math3.util.ArithmeticUtils.gcdPositive(int,int) java.lang.Integer.numberOfTrailingZeros(int)
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.isNaN() java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.isNaN() java.lang.Double.isNaN(double)
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.isNaN() java.lang.Double.clinit()
org.apache.commons.math3.util.FastMath.asinh(double) java.lang.Object.clinit()
org.apache.commons.math3.util.FastMath.asinh(double) org.apache.commons.math3.util.FastMath.sqrt(double)
org.apache.commons.math3.util.FastMath.asinh(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.util.FastMath.asinh(double) org.apache.commons.math3.util.FastMath.log(double)
org.apache.commons.math3.util.FastMath.getExponent(float) java.lang.Object.clinit()
org.apache.commons.math3.util.FastMath.getExponent(float) java.lang.Float.clinit()
org.apache.commons.math3.util.FastMath.getExponent(float) java.lang.Float.floatToRawIntBits(float)
org.apache.commons.math3.analysis.FunctionUtils$8.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Sinh.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$8.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Tanh.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$8.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Minus.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$8.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Asinh.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$8.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Atan.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$8.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.HarmonicOscillator.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$8.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Sin.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$8.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Power.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$8.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Cbrt.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$8.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Logistic.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$8.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.FunctionUtils$15.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$8.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Sigmoid.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$8.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$8.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Inverse.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$8.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$8.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.multiply(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$8.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$8.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.FunctionUtils$2.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$8.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Sinc.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$8.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Cos.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$8.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Log1p.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$8.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Acosh.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$8.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Atanh.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$8.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Log10.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$8.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Tan.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$8.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Sqrt.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$8.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Asin.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$8.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Gaussian.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$8.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Constant.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$8.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$8.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Acos.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$8.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Expm1.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$8.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Identity.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$8.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.FunctionUtils$5.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$8.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Exp.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$8.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Logit.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$8.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Cosh.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$8.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.FunctionUtils$8.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.FunctionUtils$8.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.function.Log.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.reciprocal() java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.reciprocal() org.apache.commons.math3.analysis.differentiation.DSCompiler.pow(double[],int,int,double[],int)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.reciprocal() org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DSCompiler)
org.apache.commons.math3.analysis.function.Tanh.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.tanh()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.getBarycenter() org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.getBarycenter() org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.computeGeometricalProperties()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.getBarycenter() org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.computeGeometricalProperties()
org.apache.commons.math3.analysis.function.Sinh.value(double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Sinh.value(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.function.Sinh.value(double) org.apache.commons.math3.util.FastMath.sinh(double)
org.apache.commons.math3.linear.RealVector$SparseEntryIterator.advance(org.apache.commons.math3.linear.RealVector$Entry) org.apache.commons.math3.linear.OpenMapRealVector$OpenMapEntry.getValue()
org.apache.commons.math3.linear.RealVector$SparseEntryIterator.advance(org.apache.commons.math3.linear.RealVector$Entry) org.apache.commons.math3.linear.RealVector$2$UnmodifiableEntry.getValue()
org.apache.commons.math3.linear.RealVector$SparseEntryIterator.advance(org.apache.commons.math3.linear.RealVector$Entry) org.apache.commons.math3.linear.RealVector$Entry.setIndex(int)
org.apache.commons.math3.linear.RealVector$SparseEntryIterator.advance(org.apache.commons.math3.linear.RealVector$Entry) org.apache.commons.math3.linear.OpenMapRealVector$OpenMapEntry.getIndex()
org.apache.commons.math3.linear.RealVector$SparseEntryIterator.advance(org.apache.commons.math3.linear.RealVector$Entry) org.apache.commons.math3.linear.RealVector$Entry.getIndex()
org.apache.commons.math3.linear.RealVector$SparseEntryIterator.advance(org.apache.commons.math3.linear.RealVector$Entry) org.apache.commons.math3.linear.RealVector$Entry.getValue()
org.apache.commons.math3.random.RandomAdaptor.nextInt() org.apache.commons.math3.random.SynchronizedRandomGenerator.nextInt()
org.apache.commons.math3.random.RandomAdaptor.nextInt() org.apache.commons.math3.random.RandomAdaptor.nextInt()
org.apache.commons.math3.random.RandomAdaptor.nextInt() org.apache.commons.math3.random.BitsStreamGenerator.nextInt()
org.apache.commons.math3.random.RandomAdaptor.nextInt() java.util.Random.nextInt()
org.apache.commons.math3.random.RandomAdaptor.nextInt() org.apache.commons.math3.random.RandomGeneratorFactory$1.nextInt()
org.apache.commons.math3.exception.NotPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number) java.lang.Object.clinit()
org.apache.commons.math3.exception.NotPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number) org.apache.commons.math3.exception.NumberIsTooSmallException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,boolean)
org.apache.commons.math3.exception.NotPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number) java.lang.Throwable.clinit()
org.apache.commons.math3.exception.NotPositiveException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.analysis.function.Sinc.derivative() org.apache.commons.math3.analysis.function.Cbrt.derivative()
org.apache.commons.math3.analysis.function.Sinc.derivative() org.apache.commons.math3.analysis.function.Minus.derivative()
org.apache.commons.math3.analysis.function.Sinc.derivative() org.apache.commons.math3.analysis.function.Tanh.derivative()
org.apache.commons.math3.analysis.function.Sinc.derivative() org.apache.commons.math3.analysis.FunctionUtils.toDifferentiableUnivariateFunction(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction)
org.apache.commons.math3.analysis.function.Sinc.derivative() org.apache.commons.math3.analysis.function.Expm1.derivative()
org.apache.commons.math3.analysis.function.Sinc.derivative() org.apache.commons.math3.analysis.function.Power.derivative()
org.apache.commons.math3.analysis.function.Sinc.derivative() org.apache.commons.math3.analysis.function.Logit.derivative()
org.apache.commons.math3.analysis.function.Sinc.derivative() org.apache.commons.math3.analysis.function.Sinc.derivative()
org.apache.commons.math3.analysis.function.Sinc.derivative() org.apache.commons.math3.analysis.function.Constant.derivative()
org.apache.commons.math3.analysis.function.Sinc.derivative() org.apache.commons.math3.analysis.function.Log10.derivative()
org.apache.commons.math3.analysis.function.Sinc.derivative() org.apache.commons.math3.analysis.function.Sigmoid.derivative()
org.apache.commons.math3.analysis.function.Sinc.derivative() org.apache.commons.math3.analysis.function.Acosh.derivative()
org.apache.commons.math3.analysis.function.Sinc.derivative() org.apache.commons.math3.analysis.function.Exp.derivative()
org.apache.commons.math3.analysis.function.Sinc.derivative() org.apache.commons.math3.analysis.function.Sinh.derivative()
org.apache.commons.math3.analysis.function.Sinc.derivative() java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Sinc.derivative() org.apache.commons.math3.analysis.polynomials.PolynomialFunction.derivative()
org.apache.commons.math3.analysis.function.Sinc.derivative() org.apache.commons.math3.analysis.function.Gaussian.derivative()
org.apache.commons.math3.analysis.function.Sinc.derivative() org.apache.commons.math3.analysis.function.Atanh.derivative()
org.apache.commons.math3.analysis.function.Sinc.derivative() org.apache.commons.math3.analysis.function.Sqrt.derivative()
org.apache.commons.math3.analysis.function.Sinc.derivative() org.apache.commons.math3.analysis.FunctionUtils$3.derivative()
org.apache.commons.math3.analysis.function.Sinc.derivative() org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.derivative()
org.apache.commons.math3.analysis.function.Sinc.derivative() org.apache.commons.math3.analysis.function.Log1p.derivative()
org.apache.commons.math3.analysis.function.Sinc.derivative() org.apache.commons.math3.analysis.function.Asin.derivative()
org.apache.commons.math3.analysis.function.Sinc.derivative() org.apache.commons.math3.analysis.function.Cos.derivative()
org.apache.commons.math3.analysis.function.Sinc.derivative() org.apache.commons.math3.analysis.function.Asinh.derivative()
org.apache.commons.math3.analysis.function.Sinc.derivative() org.apache.commons.math3.analysis.function.Tan.derivative()
org.apache.commons.math3.analysis.function.Sinc.derivative() org.apache.commons.math3.analysis.FunctionUtils$6.derivative()
org.apache.commons.math3.analysis.function.Sinc.derivative() org.apache.commons.math3.analysis.function.Log.derivative()
org.apache.commons.math3.analysis.function.Sinc.derivative() org.apache.commons.math3.analysis.function.Atan.derivative()
org.apache.commons.math3.analysis.function.Sinc.derivative() org.apache.commons.math3.analysis.function.Acos.derivative()
org.apache.commons.math3.analysis.function.Sinc.derivative() org.apache.commons.math3.analysis.FunctionUtils$14.derivative()
org.apache.commons.math3.analysis.function.Sinc.derivative() org.apache.commons.math3.analysis.function.Identity.derivative()
org.apache.commons.math3.analysis.function.Sinc.derivative() org.apache.commons.math3.analysis.function.Cosh.derivative()
org.apache.commons.math3.analysis.function.Sinc.derivative() org.apache.commons.math3.analysis.FunctionUtils$9.derivative()
org.apache.commons.math3.analysis.function.Sinc.derivative() org.apache.commons.math3.analysis.function.Logistic.derivative()
org.apache.commons.math3.analysis.function.Sinc.derivative() org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative()
org.apache.commons.math3.analysis.function.Sinc.derivative() org.apache.commons.math3.analysis.function.Inverse.derivative()
org.apache.commons.math3.analysis.function.Sinc.derivative() org.apache.commons.math3.analysis.function.Sin.derivative()
org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$4.value(double,double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$4.value(double,double) org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction.access$000(org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction,double[],double[],double[][])
org.apache.commons.math3.random.SynchronizedRandomGenerator.nextBytes(byte[]) org.apache.commons.math3.random.SynchronizedRandomGenerator.nextBytes(byte[])
org.apache.commons.math3.random.SynchronizedRandomGenerator.nextBytes(byte[]) java.util.Random.nextBytes(byte[])
org.apache.commons.math3.random.SynchronizedRandomGenerator.nextBytes(byte[]) org.apache.commons.math3.random.RandomAdaptor.nextBytes(byte[])
org.apache.commons.math3.random.SynchronizedRandomGenerator.nextBytes(byte[]) org.apache.commons.math3.random.BitsStreamGenerator.nextBytes(byte[])
org.apache.commons.math3.random.SynchronizedRandomGenerator.nextBytes(byte[]) org.apache.commons.math3.random.RandomGeneratorFactory$1.nextBytes(byte[])
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.function.Ulp.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.function.Acos.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.function.Sqrt.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.function.Asin.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.function.Rint.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.function.Gaussian.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.function.Tan.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.ode.events.EventState$1.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.function.Sinc.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.FunctionUtils$7.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.function.Log1p.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.function.Sin.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.function.Identity.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.FunctionUtils$3.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.function.Signum.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.distribution.AbstractRealDistribution$1.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.function.Exp.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.function.Logit.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.function.Acosh.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.FunctionUtils$2.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator$1.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.function.Log10.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.FunctionUtils$1.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.exception.TooManyEvaluationsException(java.lang.Number)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.FunctionUtils$12.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.FunctionUtils$8.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.function.Constant.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.function.Atan.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.util.Incrementor.incrementCount()
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.function.Logistic.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.function.Sinh.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.function.Cosh.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.function.Floor.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.function.Expm1.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.function.Power.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.function.Cbrt.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.optimization.direct.PowellOptimizer$LineSearch$1.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.function.HarmonicOscillator.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.function.Asinh.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.FunctionUtils$4.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.FunctionUtils$6.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.function.StepFunction.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.function.Minus.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.FunctionUtils$13.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.function.Tanh.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.FunctionUtils$9.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.function.Cos.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.function.Atanh.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.FunctionUtils$10.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.function.Log.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) java.lang.Throwable.clinit()
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.function.Sigmoid.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.exception.MaxCountExceededException.getMax()
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.function.Inverse.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch$1.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.FunctionUtils$5.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.function.Abs.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.FunctionUtils$15.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.function.Ceil.value(double)
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double) org.apache.commons.math3.analysis.FunctionUtils$14.value(double)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.equals(java.lang.Object) java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.equals(java.lang.Object) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getOrder()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.equals(java.lang.Object) org.apache.commons.math3.util.MathArrays.equals(double[],double[])
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.equals(java.lang.Object) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getFreeParameters()
org.apache.commons.math3.stat.ranking.NaturalRanking$IntDoublePair.compareTo(java.lang.Object) org.apache.commons.math3.stat.ranking.NaturalRanking$IntDoublePair.compareTo(org.apache.commons.math3.stat.ranking.NaturalRanking$IntDoublePair)
org.apache.commons.math3.ode.EquationsMapper.extractEquationData(double[],double[]) java.lang.Object.clinit()
org.apache.commons.math3.ode.EquationsMapper.extractEquationData(double[],double[]) org.apache.commons.math3.exception.DimensionMismatchException(int,int)
org.apache.commons.math3.ode.EquationsMapper.extractEquationData(double[],double[]) java.lang.Throwable.clinit()
org.apache.commons.math3.ode.EquationsMapper.extractEquationData(double[],double[]) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.ode.EquationsMapper.extractEquationData(double[],double[]) java.lang.System.arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org.apache.commons.math3.ode.EquationsMapper.extractEquationData(double[],double[]) java.lang.System.clinit()
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.equals(java.lang.Object)
org.apache.commons.math3.util.FastMath.hypot(double,double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.util.FastMath.hypot(double,double) java.lang.Object.clinit()
org.apache.commons.math3.util.FastMath.hypot(double,double) org.apache.commons.math3.util.FastMath.sqrt(double)
org.apache.commons.math3.util.FastMath.hypot(double,double) java.lang.Double.isNaN(double)
org.apache.commons.math3.util.FastMath.hypot(double,double) org.apache.commons.math3.util.FastMath.getExponent(double)
org.apache.commons.math3.util.FastMath.hypot(double,double) org.apache.commons.math3.util.FastMath.scalb(double,int)
org.apache.commons.math3.util.FastMath.hypot(double,double) java.lang.Double.clinit()
org.apache.commons.math3.util.FastMath.hypot(double,double) java.lang.Double.isInfinite(double)
org.apache.commons.math3.util.FastMath.hypot(double,double) org.apache.commons.math3.util.FastMath.abs(double)
org.apache.commons.math3.stat.descriptive.moment.Kurtosis.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.moment.Variance.getResult()
org.apache.commons.math3.stat.descriptive.moment.Kurtosis.evaluate(double[],int,int) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.stat.descriptive.moment.Kurtosis.evaluate(double[],int,int) org.apache.commons.math3.util.FastMath.sqrt(double)
org.apache.commons.math3.stat.descriptive.moment.Kurtosis.evaluate(double[],int,int) java.lang.Object.clinit()
org.apache.commons.math3.stat.descriptive.moment.Kurtosis.evaluate(double[],int,int) org.apache.commons.math3.util.FastMath.pow(double,double)
org.apache.commons.math3.stat.descriptive.moment.Kurtosis.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.moment.Variance()
org.apache.commons.math3.stat.descriptive.moment.Kurtosis.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.incrementAll(double[],int,int)
org.apache.commons.math3.stat.descriptive.moment.Kurtosis.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.test(double[],int,int)
org.apache.commons.math3.linear.RealVector$2.setEntry(int,double) org.apache.commons.math3.exception.MathUnsupportedOperationException()
org.apache.commons.math3.linear.RealVector$2.setEntry(int,double) java.lang.Object.clinit()
org.apache.commons.math3.linear.RealVector$2.setEntry(int,double) java.lang.Throwable.clinit()
org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormat(java.text.NumberFormat) org.apache.commons.math3.geometry.VectorFormat(java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat)
org.apache.commons.math3.analysis.FunctionUtils$16.gradient() java.lang.Object.clinit()
org.apache.commons.math3.analysis.FunctionUtils$16.gradient() org.apache.commons.math3.analysis.FunctionUtils$16$2(org.apache.commons.math3.analysis.FunctionUtils$16)
org.apache.commons.math3.stat.descriptive.moment.VectorialMean.equals(java.lang.Object) java.lang.Object.clinit()
org.apache.commons.math3.stat.descriptive.moment.VectorialMean.equals(java.lang.Object) java.util.Arrays.equals(java.lang.Object[],java.lang.Object[])
org.apache.commons.math3.stat.descriptive.moment.VectorialMean.equals(java.lang.Object) java.util.Arrays.clinit()
org.apache.commons.math3.random.Well19937c(long) org.apache.commons.math3.random.AbstractWell(int,int,int,int,long)
org.apache.commons.math3.analysis.function.Tanh.value(double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Tanh.value(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.function.Tanh.value(double) org.apache.commons.math3.util.FastMath.tanh(double)
org.apache.commons.math3.distribution.FDistribution.cumulativeProbability(double) java.lang.Object.clinit()
org.apache.commons.math3.distribution.FDistribution.cumulativeProbability(double) org.apache.commons.math3.special.Beta.regularizedBeta(double,double,double)
org.apache.commons.math3.distribution.FDistribution.cumulativeProbability(double) org.apache.commons.math3.special.Beta.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.checkCompatibility(org.apache.commons.math3.analysis.differentiation.DSCompiler) java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.checkCompatibility(org.apache.commons.math3.analysis.differentiation.DSCompiler) org.apache.commons.math3.exception.DimensionMismatchException(int,int)
org.apache.commons.math3.analysis.differentiation.DSCompiler.checkCompatibility(org.apache.commons.math3.analysis.differentiation.DSCompiler) java.lang.Throwable.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.checkCompatibility(org.apache.commons.math3.analysis.differentiation.DSCompiler) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.copySelf() org.apache.commons.math3.geometry.euclidean.threed.SubPlane.buildNew(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region)
org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.copySelf() org.apache.commons.math3.geometry.euclidean.twod.SubLine.buildNew(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region)
org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.copySelf() org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint.buildNew(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region)
org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.copySelf() org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.copySelf()
org.apache.commons.math3.stat.Frequency.getSumFreq() sun.util.PreHashedMap$1$1.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() javax.security.auth.Subject$SecureSet$1.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.Collections$SingletonList.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() org.apache.commons.math3.linear.RealVector$SparseEntryIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.concurrent.CopyOnWriteArrayList$COWIterator.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() sun.net.www.MessageHeader$HeaderIterator.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() sun.util.PreHashedMap$2$1.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.Hashtable$EntrySet.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() org.apache.commons.math3.util.MultidimensionalCounter$Iterator.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() sun.net.www.HeaderParser$ParserIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.concurrent.ArrayBlockingQueue$Itr.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() javax.print.MimeType$ParameterMapEntrySet.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() javax.imageio.ImageIO$ImageWriterIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.JumboEnumSet$EnumSetIterator.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.AbstractSequentialList.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.LinkedList$ListItr.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.ServiceLoader$LazyIterator.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.Hashtable$KeySet.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() sun.nio.fs.UnixFileSystem$FileStoreIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.concurrent.DelayQueue$Itr.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() javax.imageio.spi.PartialOrderIterator.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.TreeMap$NavigableSubMap$SubMapKeyIterator.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.concurrent.ConcurrentHashMap$ValueIterator.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() sun.util.PreHashedMap$2.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.EnumMap$EntrySet.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.LinkedList$DescendingIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.JumboEnumSet$EnumSetIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.concurrent.ConcurrentHashMap$KeyIterator.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.TreeMap.values()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.concurrent.DelayQueue$Itr.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.LinkedList$DescendingIterator.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.JumboEnumSet.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() sun.util.PreHashedMap$1.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.HashMap$Values.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() sun.util.PreHashedMap$2$1.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.RegularEnumSet.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.concurrent.SynchronousQueue.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.WeakHashMap$HashIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.LinkedHashMap$EntryIterator.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.IdentityHashMap$KeyIterator.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.IdentityHashMap$ValueIterator.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.ArrayList$SubList.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.AbstractMap$1$1.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() org.apache.commons.math3.linear.RealVector$2$2.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() com.sun.imageio.plugins.jpeg.ImageTypeIterator.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.concurrent.DelayQueue.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.AbstractMap$2.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() javax.imageio.spi.FilterIterator.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.concurrent.LinkedBlockingDeque.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.ArrayDeque$DescendingIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.EnumMap$KeySet.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.Hashtable$Enumerator.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.concurrent.ConcurrentLinkedQueue.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() org.apache.commons.math3.linear.RealVector$1.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.HashMap$EntryIterator.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.Collections$CheckedMap$CheckedEntrySet$1.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() org.apache.commons.math3.util.MultidimensionalCounter$Iterator.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() javax.security.auth.Subject$SecureSet$1.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.concurrent.CopyOnWriteArrayList$COWSubList.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.Hashtable$ValueCollection.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.lang.ProcessEnvironment$StringKeySet.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.Collections$UnmodifiableList$1.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() sun.nio.cs.FastCharsetProvider$1.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.concurrent.ArrayBlockingQueue$Itr.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.Collections$CheckedList$1.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.Vector$Itr.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.concurrent.ConcurrentHashMap$Values.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.ArrayList$SubList$1.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.Collections$UnmodifiableCollection.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.IdentityHashMap$Values.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.Collections$EmptySet.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.HashMap$ValueIterator.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() sun.misc.SoftCache$EntrySet$1.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.ArrayList$SubList$1.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.lang.Long.longValue()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.concurrent.CopyOnWriteArrayList$COWIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.concurrent.ConcurrentHashMap$HashIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.IdentityHashMap$IdentityHashMapIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.lang.ProcessEnvironment$StringEntrySet$1.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() javax.security.auth.Subject$SecureSet.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() sun.net.www.HeaderParser$ParserIterator.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() sun.nio.ch.Util$2.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.concurrent.LinkedBlockingDeque$AbstractItr.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() sun.misc.SoftCache$EntrySet.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.Collections$AsLIFOQueue.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.concurrent.LinkedBlockingQueue.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() sun.nio.cs.FastCharsetProvider$1.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.EnumMap$KeyIterator.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() sun.nio.fs.AbstractPath$1.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.LinkedList$ListItr.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.Collections$EmptyIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.Scanner.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.Collections$CheckedCollection$1.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() javax.imageio.spi.FilterIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.ArrayDeque$DescendingIterator.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.concurrent.ConcurrentHashMap$EntryIterator.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() org.apache.commons.math3.util.CombinatoricsUtils$SingletonIterator.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.LinkedHashMap$KeyIterator.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() org.apache.commons.math3.linear.RealVector$2$2.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.concurrent.LinkedBlockingQueue$Itr.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.Collections$CheckedList$1.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.ArrayList.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() javax.imageio.ImageIO$ImageWriterIterator.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.Collections$EmptyList.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.PriorityQueue.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.Collections$1.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() org.apache.commons.math3.util.CombinatoricsUtils$LexicographicCombinationIterator.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.concurrent.LinkedBlockingDeque$AbstractItr.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.concurrent.ConcurrentLinkedQueue$Itr.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.ArrayDeque$DeqIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.LinkedHashMap$LinkedHashIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.concurrent.LinkedBlockingQueue$Itr.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.lang.ProcessEnvironment$StringEntrySet$1.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() sun.util.PreHashedMap$1$1.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.TreeMap$DescendingSubMap$DescendingEntrySetView.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.TreeMap$Values.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.AbstractMap$1.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.WeakHashMap$EntryIterator.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.lang.ProcessEnvironment$StringValues$1.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.HashMap$EntrySet.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.concurrent.ArrayBlockingQueue.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() javax.print.MimeType$ParameterMapEntrySetIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.AbstractMap$1$1.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.WeakHashMap$Values.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.IdentityHashMap$KeySet.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() sun.awt.util.IdentityLinkedList$DescendingIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.lang.ProcessEnvironment$StringKeySet$1.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.TreeMap$DescendingKeyIterator.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() javax.imageio.ImageIO$ImageReaderIterator.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.concurrent.ConcurrentHashMap$EntrySet.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() javax.imageio.ImageIO$ImageReaderIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.TreeMap$PrivateEntryIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() sun.misc.Service$LazyIterator.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.Scanner.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.WeakHashMap$ValueIterator.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() org.apache.commons.math3.linear.RealVector$SparseEntryIterator.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.IdentityHashMap$EntryIterator.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.concurrent.ConcurrentHashMap$KeySet.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.Collections$CheckedCollection.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.HashSet.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.PriorityQueue$Itr.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.Hashtable$Enumerator.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.RegularEnumSet$EnumSetIterator.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() javax.print.MimeType$ParameterMapEntrySetIterator.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.WeakHashMap$KeyIterator.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.Collections$CheckedMap$CheckedEntrySet$1.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() sun.security.jca.ProviderList$ServiceList.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.SubList$1.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.AbstractList.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.Collections$SynchronizedCollection.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.Collections$EmptyIterator.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.LinkedHashMap$ValueIterator.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.ServiceLoader$1.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.TreeMap$NavigableSubMap$SubMapEntryIterator.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.TreeMap$ValueIterator.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() org.apache.commons.math3.util.CombinatoricsUtils$LexicographicCombinationIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.AbstractMap$2$1.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.EnumMap$ValueIterator.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() sun.nio.fs.AbstractPath$1.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.lang.ProcessEnvironment$StringValues$1.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.Collections$CheckedMap$CheckedEntrySet.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.WeakHashMap$KeySet.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.Collections$SetFromMap.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.SubList.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.TreeMap$EntryIterator.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() org.apache.commons.math3.linear.RealVector$1.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() org.apache.commons.math3.util.CombinatoricsUtils$SingletonIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() javax.imageio.spi.PartiallyOrderedSet.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() sun.awt.util.IdentityLinkedList$ListItr.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() javax.security.auth.Subject$ClassSet.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.EnumMap$EntryIterator.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.Collections$UnmodifiableList$1.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() org.apache.commons.math3.linear.RealVector$2$1.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.IdentityHashMap$EntrySet.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.ArrayList$Itr.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.nio.charset.Charset$1.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.Collections$UnmodifiableCollection$1.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.EnumMap$Values.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() com.sun.imageio.plugins.jpeg.ImageTypeIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.TreeMap$KeyIterator.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.SubList$1.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.lang.ProcessEnvironment$StringKeySet$1.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.Collections$UnmodifiableCollection$1.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.RegularEnumSet$EnumSetIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.TreeSet.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.HashMap$KeyIterator.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() sun.misc.SoftCache$EntrySet$1.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() sun.security.jca.ProviderList$ServiceList$1.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.PriorityQueue$Itr.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.Collections$1.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.ArrayList$Itr.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.lang.ProcessEnvironment$StringValues.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.EnumMap$EnumMapIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.AbstractMap$2$1.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.ServiceLoader$1.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() javax.imageio.ImageIO$ImageTranscoderIterator.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.lang.ProcessEnvironment$StringEntrySet.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() sun.security.jca.ProviderList$ServiceList$1.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.ServiceLoader$LazyIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.Vector$Itr.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.ArrayDeque$DeqIterator.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.Collections$SingletonSet.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.TreeMap$AscendingSubMap$AscendingEntrySetView.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.Collections$CheckedCollection$1.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.AbstractList$Itr.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.TreeMap$KeySet.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.TreeMap$EntrySet.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() sun.misc.Service$LazyIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.nio.charset.Charset$1.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.concurrent.ConcurrentLinkedQueue$Itr.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() sun.net.www.MessageHeader$HeaderIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() sun.nio.fs.UnixFileSystem$FileStoreIterator.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.HashMap$KeySet.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() sun.awt.util.IdentityLinkedList$DescendingIterator.next()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.WeakHashMap$EntrySet.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.ArrayDeque.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() sun.awt.util.IdentityLinkedList$ListItr.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() javax.imageio.spi.PartialOrderIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.Vector.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.TreeMap$NavigableSubMap$SubMapIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.concurrent.CopyOnWriteArrayList.iterator()
org.apache.commons.math3.stat.Frequency.getSumFreq() sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() javax.imageio.ImageIO$ImageTranscoderIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.AbstractList$Itr.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() java.util.HashMap$HashIterator.hasNext()
org.apache.commons.math3.stat.Frequency.getSumFreq() org.apache.commons.math3.linear.RealVector$2$1.hasNext()
org.apache.commons.math3.linear.RealMatrixFormat.getInstance() java.lang.Object.clinit()
org.apache.commons.math3.linear.RealMatrixFormat.getInstance() org.apache.commons.math3.linear.RealMatrixFormat.getInstance(java.util.Locale)
org.apache.commons.math3.linear.RealMatrixFormat.getInstance() java.util.Locale.clinit()
org.apache.commons.math3.linear.RealMatrixFormat.getInstance() java.util.Locale.getDefault()
org.apache.commons.math3.fraction.Fraction.longValue() org.apache.commons.math3.fraction.Fraction.doubleValue()
org.apache.commons.math3.util.CombinatoricsUtils$LexicographicCombinationIterator.next() java.lang.Object.clinit()
org.apache.commons.math3.util.CombinatoricsUtils$LexicographicCombinationIterator.next() java.lang.Throwable.clinit()
org.apache.commons.math3.util.CombinatoricsUtils$LexicographicCombinationIterator.next() org.apache.commons.math3.util.CombinatoricsUtils$LexicographicCombinationIterator.next()
org.apache.commons.math3.util.CombinatoricsUtils$LexicographicCombinationIterator.next() java.lang.System.arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org.apache.commons.math3.util.CombinatoricsUtils$LexicographicCombinationIterator.next() java.util.NoSuchElementException()
org.apache.commons.math3.util.CombinatoricsUtils$LexicographicCombinationIterator.next() java.lang.System.clinit()
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator(org.apache.commons.math3.util.OpenIntToDoubleHashMap) java.lang.Object.clinit()
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator(org.apache.commons.math3.util.OpenIntToDoubleHashMap) org.apache.commons.math3.util.OpenIntToDoubleHashMap.access$100(org.apache.commons.math3.util.OpenIntToDoubleHashMap)
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator(org.apache.commons.math3.util.OpenIntToDoubleHashMap) org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.advance()
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator(org.apache.commons.math3.util.OpenIntToDoubleHashMap) java.lang.Object()
org.apache.commons.math3.analysis.function.Logit.access$000(double,double,double) org.apache.commons.math3.analysis.function.Logit.value(double,double,double)
org.apache.commons.math3.analysis.function.Logit.access$000(double,double,double) java.lang.Object.clinit()
org.apache.commons.math3.util.OpenIntToDoubleHashMap.get(int) org.apache.commons.math3.util.OpenIntToDoubleHashMap.containsKey(int,int)
org.apache.commons.math3.util.OpenIntToDoubleHashMap.get(int) java.lang.Object.clinit()
org.apache.commons.math3.util.OpenIntToDoubleHashMap.get(int) org.apache.commons.math3.util.OpenIntToDoubleHashMap.hashOf(int)
org.apache.commons.math3.util.OpenIntToDoubleHashMap.get(int) org.apache.commons.math3.util.OpenIntToDoubleHashMap.perturb(int)
org.apache.commons.math3.util.OpenIntToDoubleHashMap.get(int) org.apache.commons.math3.util.OpenIntToDoubleHashMap.probe(int,int)
org.apache.commons.math3.util.FastMath.reducePayneHanek(double,double[]) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.util.FastMath.reducePayneHanek(double,double[]) java.lang.Object.clinit()
org.apache.commons.math3.util.FastMath.reducePayneHanek(double,double[]) java.lang.Double.doubleToRawLongBits(double)
org.apache.commons.math3.util.FastMath.reducePayneHanek(double,double[]) java.lang.Double.clinit()
org.apache.commons.math3.linear.SparseFieldMatrix.getEntry(int,int) org.apache.commons.math3.util.OpenIntToFieldHashMap.get(int)
org.apache.commons.math3.linear.SparseFieldMatrix.getEntry(int,int) org.apache.commons.math3.linear.SparseFieldMatrix.computeKey(int,int)
org.apache.commons.math3.linear.SparseFieldMatrix.getEntry(int,int) org.apache.commons.math3.linear.AbstractFieldMatrix.checkRowIndex(int)
org.apache.commons.math3.linear.SparseFieldMatrix.getEntry(int,int) org.apache.commons.math3.linear.AbstractFieldMatrix.checkColumnIndex(int)
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm.value(double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm.evaluateInternal(double[],double[],double)
org.apache.commons.math3.stat.Frequency$NaturalComparator() java.lang.Object()
org.apache.commons.math3.optimization.linear.SimplexTableau.equals(java.lang.Object) java.util.Collections$CheckedList.equals(java.lang.Object)
org.apache.commons.math3.optimization.linear.SimplexTableau.equals(java.lang.Object) java.util.Collections$EmptyList.equals(java.lang.Object)
org.apache.commons.math3.optimization.linear.SimplexTableau.equals(java.lang.Object) java.lang.Object.equals(java.lang.Object)
org.apache.commons.math3.optimization.linear.SimplexTableau.equals(java.lang.Object) java.util.Collections$UnmodifiableList.equals(java.lang.Object)
org.apache.commons.math3.optimization.linear.SimplexTableau.equals(java.lang.Object) org.apache.commons.math3.optimization.linear.LinearObjectiveFunction.equals(java.lang.Object)
org.apache.commons.math3.optimization.linear.SimplexTableau.equals(java.lang.Object) java.util.concurrent.CopyOnWriteArrayList.equals(java.lang.Object)
org.apache.commons.math3.optimization.linear.SimplexTableau.equals(java.lang.Object) java.util.AbstractList.equals(java.lang.Object)
org.apache.commons.math3.optimization.linear.SimplexTableau.equals(java.lang.Object) org.apache.commons.math3.linear.AbstractRealMatrix.equals(java.lang.Object)
org.apache.commons.math3.optimization.linear.SimplexTableau.equals(java.lang.Object) java.util.Collections$SynchronizedList.equals(java.lang.Object)
org.apache.commons.math3.optimization.linear.SimplexTableau.equals(java.lang.Object) java.util.Vector.equals(java.lang.Object)
org.apache.commons.math3.geometry.euclidean.twod.Vector2D(double,double) java.lang.Object()
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.equals(java.lang.Object) org.apache.commons.math3.geometry.euclidean.oned.Vector1D.isNaN()
org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.reunite(org.apache.commons.math3.geometry.partitioning.SubHyperplane) java.lang.Object.clinit()
org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.reunite(org.apache.commons.math3.geometry.partitioning.SubHyperplane) org.apache.commons.math3.geometry.euclidean.threed.SubPlane.buildNew(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region)
org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.reunite(org.apache.commons.math3.geometry.partitioning.SubHyperplane) org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.reunite(org.apache.commons.math3.geometry.partitioning.SubHyperplane)
org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.reunite(org.apache.commons.math3.geometry.partitioning.SubHyperplane) org.apache.commons.math3.geometry.euclidean.twod.SubLine.buildNew(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region)
org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.reunite(org.apache.commons.math3.geometry.partitioning.SubHyperplane) org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint.buildNew(org.apache.commons.math3.geometry.partitioning.Hyperplane,org.apache.commons.math3.geometry.partitioning.Region)
org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.reunite(org.apache.commons.math3.geometry.partitioning.SubHyperplane) org.apache.commons.math3.geometry.partitioning.RegionFactory()
org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.reunite(org.apache.commons.math3.geometry.partitioning.SubHyperplane) org.apache.commons.math3.geometry.partitioning.RegionFactory.union(org.apache.commons.math3.geometry.partitioning.Region,org.apache.commons.math3.geometry.partitioning.Region)
org.apache.commons.math3.linear.RealVector$Entry.setValue(double) org.apache.commons.math3.linear.ArrayRealVector.setEntry(int,double)
org.apache.commons.math3.linear.RealVector$Entry.setValue(double) org.apache.commons.math3.linear.OpenMapRealVector.setEntry(int,double)
org.apache.commons.math3.linear.RealVector$Entry.setValue(double) org.apache.commons.math3.linear.OpenMapRealVector$OpenMapEntry.getIndex()
org.apache.commons.math3.linear.RealVector$Entry.setValue(double) org.apache.commons.math3.linear.RealVector$Entry.getIndex()
org.apache.commons.math3.linear.RealVector$Entry.setValue(double) org.apache.commons.math3.linear.RealVector$2.setEntry(int,double)
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.clinit() java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.clinit() org.apache.commons.math3.geometry.euclidean.threed.Vector3D.clinit()
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.clinit() org.apache.commons.math3.geometry.euclidean.threed.Vector3D(double,double,double)
org.apache.commons.math3.util.ResizableDoubleArray.equals(java.lang.Object) java.util.Arrays.equals(double[],double[])
org.apache.commons.math3.util.ResizableDoubleArray.equals(java.lang.Object) java.lang.Object.clinit()
org.apache.commons.math3.util.ResizableDoubleArray.equals(java.lang.Object) java.util.Arrays.clinit()
org.apache.commons.math3.util.OpenIntToDoubleHashMap.remove(int) org.apache.commons.math3.util.OpenIntToDoubleHashMap.containsKey(int,int)
org.apache.commons.math3.util.OpenIntToDoubleHashMap.remove(int) java.lang.Object.clinit()
org.apache.commons.math3.util.OpenIntToDoubleHashMap.remove(int) org.apache.commons.math3.util.OpenIntToDoubleHashMap.hashOf(int)
org.apache.commons.math3.util.OpenIntToDoubleHashMap.remove(int) org.apache.commons.math3.util.OpenIntToDoubleHashMap.perturb(int)
org.apache.commons.math3.util.OpenIntToDoubleHashMap.remove(int) org.apache.commons.math3.util.OpenIntToDoubleHashMap.probe(int,int)
org.apache.commons.math3.util.OpenIntToDoubleHashMap.remove(int) org.apache.commons.math3.util.OpenIntToDoubleHashMap.doRemove(int)
org.apache.commons.math3.linear.RealMatrixFormat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) java.lang.Object.clinit()
org.apache.commons.math3.linear.RealMatrixFormat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) org.apache.commons.math3.linear.RealMatrixFormat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.text.NumberFormat)
org.apache.commons.math3.linear.RealMatrixFormat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) org.apache.commons.math3.util.CompositeFormat.getDefaultNumberFormat()
org.apache.commons.math3.stat.descriptive.summary.Sum() org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic()
org.apache.commons.math3.dfp.Dfp.newInstance(java.lang.String) org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.DfpField,java.lang.String)
org.apache.commons.math3.dfp.Dfp.newInstance(java.lang.String) java.lang.Object.clinit()
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getN() org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getN()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getStandardDeviation() org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getStandardDeviation() java.lang.Object.clinit()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getStandardDeviation() org.apache.commons.math3.util.FastMath.sqrt(double)
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getStandardDeviation() org.apache.commons.math3.linear.BlockRealMatrix.getEntry(int,int)
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getStandardDeviation() org.apache.commons.math3.linear.OpenMapRealMatrix.getEntry(int,int)
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getStandardDeviation() java.util.Arrays.fill(double[],double)
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getStandardDeviation() org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry(int,int)
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getStandardDeviation() org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance.getResult()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getStandardDeviation() org.apache.commons.math3.linear.DiagonalMatrix.getEntry(int,int)
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getStandardDeviation() java.util.Arrays.clinit()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getStandardDeviation() org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getN()
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getStandardDeviation() org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getN()
org.apache.commons.math3.analysis.FunctionUtils$15.value(double) org.apache.commons.math3.analysis.function.Logistic.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(double) org.apache.commons.math3.analysis.function.Sinh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(double) org.apache.commons.math3.analysis.function.Acos.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(double) org.apache.commons.math3.analysis.function.Cosh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(double) org.apache.commons.math3.analysis.function.Sqrt.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(double) org.apache.commons.math3.analysis.function.Expm1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(double) org.apache.commons.math3.analysis.function.Power.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(double) org.apache.commons.math3.analysis.function.Asin.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(double) org.apache.commons.math3.analysis.function.Gaussian.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(double) org.apache.commons.math3.analysis.function.Cbrt.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(double) org.apache.commons.math3.analysis.function.Tan.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(double) org.apache.commons.math3.analysis.function.HarmonicOscillator.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(double) org.apache.commons.math3.analysis.FunctionUtils$6.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(double) org.apache.commons.math3.analysis.function.Asinh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(double) org.apache.commons.math3.analysis.function.Minus.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(double) org.apache.commons.math3.analysis.function.Tanh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(double) org.apache.commons.math3.analysis.FunctionUtils$9.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(double) org.apache.commons.math3.analysis.function.Sinc.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(double) org.apache.commons.math3.analysis.function.Log1p.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(double) org.apache.commons.math3.analysis.function.Sin.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(double) org.apache.commons.math3.analysis.function.Atanh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(double) org.apache.commons.math3.analysis.function.Cos.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(double) org.apache.commons.math3.analysis.function.Identity.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(double) org.apache.commons.math3.analysis.FunctionUtils$3.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(double) org.apache.commons.math3.analysis.function.Log.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(double) org.apache.commons.math3.analysis.function.Exp.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(double) org.apache.commons.math3.analysis.function.Sigmoid.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(double) org.apache.commons.math3.analysis.function.Logit.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(double) org.apache.commons.math3.analysis.function.Acosh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(double) org.apache.commons.math3.analysis.function.Inverse.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(double) org.apache.commons.math3.analysis.function.Log10.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(double) org.apache.commons.math3.analysis.FunctionUtils$14.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(double) org.apache.commons.math3.analysis.function.Atan.value(double)
org.apache.commons.math3.analysis.FunctionUtils$15.value(double) org.apache.commons.math3.analysis.function.Constant.value(double)
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex.hashCode() java.lang.Object.clinit()
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex.hashCode() java.lang.Double.clinit()
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex.hashCode() java.lang.Double.doubleToLongBits(double)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.acosh() java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.acosh() org.apache.commons.math3.analysis.differentiation.DSCompiler.acosh(double[],int,double[],int)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.acosh() org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DSCompiler)
org.apache.commons.math3.analysis.function.Sin.derivative() java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Sin.derivative() org.apache.commons.math3.analysis.function.Cos()
org.apache.commons.math3.analysis.function.Sin.derivative() org.apache.commons.math3.analysis.function.Sin.derivative()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.checkPoint(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.Vector) java.lang.Object.clinit()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.checkPoint(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.Vector) org.apache.commons.math3.geometry.partitioning.BSPTree.getCut()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.checkPoint(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.Vector) org.apache.commons.math3.geometry.partitioning.BSPTree.getPlus()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.checkPoint(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.Vector) java.lang.Boolean.booleanValue()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.checkPoint(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.Vector) org.apache.commons.math3.geometry.partitioning.BSPTree.getMinus()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.checkPoint(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.Vector) org.apache.commons.math3.geometry.partitioning.Region$Location.clinit()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.checkPoint(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.Vector) org.apache.commons.math3.geometry.partitioning.BSPTree.getAttribute()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.checkPoint(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.Vector) org.apache.commons.math3.geometry.partitioning.BSPTree.getCell(org.apache.commons.math3.geometry.Vector)
org.apache.commons.math3.geometry.partitioning.AbstractRegion.checkPoint(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.Vector) org.apache.commons.math3.geometry.partitioning.AbstractRegion.checkPoint(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.Vector)
org.apache.commons.math3.analysis.differentiation.DSCompiler.clinit() java.util.concurrent.atomic.AtomicReference(java.lang.Object)
org.apache.commons.math3.analysis.differentiation.DSCompiler.clinit() java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.clinit() java.util.concurrent.atomic.AtomicReference.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.clinit() org.apache.commons.math3.analysis.differentiation.DSCompiler.clinit()
org.apache.commons.math3.linear.RealVector$2$2.remove() org.apache.commons.math3.exception.MathUnsupportedOperationException()
org.apache.commons.math3.linear.RealVector$2$2.remove() java.lang.Object.clinit()
org.apache.commons.math3.linear.RealVector$2$2.remove() java.lang.Throwable.clinit()
org.apache.commons.math3.geometry.euclidean.threed.Vector3D(double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D) java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.threed.Vector3D(double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D) org.apache.commons.math3.util.MathArrays.linearCombination(double,double,double,double,double,double)
org.apache.commons.math3.geometry.euclidean.threed.Vector3D(double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D,double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D) java.lang.Object()
org.apache.commons.math3.analysis.function.Sinh.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.sinh()
org.apache.commons.math3.stat.descriptive.moment.SecondMoment.clear() org.apache.commons.math3.stat.descriptive.moment.FirstMoment.clear()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(java.util.Collection) org.apache.commons.math3.geometry.partitioning.AbstractRegion(java.util.Collection)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.util.PreHashedMap$1$1.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.SubList.size()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.Collections$UnmodifiableCollection.size()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() javax.security.auth.Subject$SecureSet$1.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.Collections$SingletonList.iterator()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.security.krb5.internal.Ticket.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.Arrays$ArrayList.size()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() com.sun.imageio.plugins.jpeg.DHTMarkerSegment$Htable.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.Arrays$ArrayList.get(int)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.concurrent.CopyOnWriteArrayList$COWSubList.get(int)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() org.apache.commons.math3.util.MultidimensionalCounter$Iterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.net.www.HeaderParser$ParserIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.concurrent.ArrayBlockingQueue$Itr.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.awt.print.Paper.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.AbstractSequentialList.iterator()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() javax.swing.ArrayTable.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.ServiceLoader$LazyIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.nio.fs.UnixFileSystem$FileStoreIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() javax.imageio.spi.PartialOrderIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.TreeMap$NavigableSubMap$SubMapKeyIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.concurrent.ConcurrentHashMap$ValueIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.LinkedList$DescendingIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() org.apache.commons.math3.geometry.euclidean.twod.Segment.getLine()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() javax.swing.text.ElementIterator.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.LinkedList.size()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.Collections$SynchronizedList.get(int)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.util.calendar.ImmutableGregorianDate.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.WeakHashMap$HashIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.IdentityHashMap$KeyIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() javax.swing.text.Segment.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() org.apache.commons.math3.geometry.partitioning.AbstractRegion.getTree(boolean)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.ArrayList$SubList.iterator()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.AbstractMap$1$1.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() org.apache.commons.math3.util.FastMath.max(double,double)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.ArrayList$SubList.get(int)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() javax.imageio.spi.FilterIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.Hashtable$Enumerator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.awt.font.TextMeasurer.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.Collections$CheckedCollection.size()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.HashMap$EntryIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.Collections$CheckedMap$CheckedEntrySet$1.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.ArrayDeque.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() org.apache.commons.math3.util.MultidimensionalCounter$Iterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.concurrent.CopyOnWriteArrayList$COWSubList.iterator()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.security.krb5.internal.PAData.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() javax.swing.AbstractAction.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.concurrent.CopyOnWriteArrayList.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.security.krb5.internal.AuthorizationDataEntry.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.Collections$UnmodifiableList$1.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() org.apache.commons.math3.geometry.euclidean.oned.Vector1D.clinit()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.JumboEnumSet.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.Collections$SynchronizedCollection.size()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.nio.cs.FastCharsetProvider$1.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() javax.naming.Reference.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.concurrent.ArrayBlockingQueue$Itr.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getSmallest()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.text.NumberFormat.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.security.SignatureSpi.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.ArrayList$SubList$1.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.Collections$UnmodifiableCollection.iterator()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.ArrayList.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() com.sun.imageio.plugins.jpeg.DHTMarkerSegment.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.awt.font.CharArrayIterator.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() org.apache.commons.math3.geometry.partitioning.BSPTree.getCut()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.security.Signature$Delegate.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.HashMap$ValueIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.misc.SoftCache$EntrySet$1.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.awt.geom.Path2D$Float.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.ArrayList$SubList$1.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.concurrent.CopyOnWriteArrayList$COWIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.IdentityHashMap$IdentityHashMapIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.net.www.HeaderParser$ParserIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.concurrent.LinkedBlockingDeque$AbstractItr.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.nio.cs.FastCharsetProvider$1.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.LinkedList$ListItr.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.Scanner.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.Collections$CheckedCollection$1.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() javax.imageio.spi.FilterIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.ArrayDeque$DescendingIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.concurrent.ConcurrentHashMap$EntryIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() org.apache.commons.math3.util.CombinatoricsUtils$SingletonIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() org.apache.commons.math3.linear.RealVector$2$2.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.awt.util.IdentityArrayList.get(int)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.security.krb5.Realm.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() com.sun.imageio.plugins.jpeg.DQTMarkerSegment$Qtable.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.Collections$1.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.awt.JobAttributes.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.concurrent.ConcurrentLinkedQueue$Itr.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.concurrent.LinkedBlockingQueue$Itr.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.awt.geom.Path2D$Double.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.awt.util.IdentityLinkedList.get(int)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.WeakHashMap$EntryIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.Collections$CheckedList.get(int)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.security.krb5.internal.KerberosTime.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.security.krb5.internal.TicketFlags.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.TreeMap$DescendingKeyIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() javax.imageio.ImageIO$ImageReaderIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.Scanner.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.WeakHashMap$ValueIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.security.krb5.PrincipalName.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.awt.PageAttributes.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.IdentityHashMap$EntryIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.Collections$CheckedCollection.iterator()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.Hashtable$Enumerator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() javax.print.MimeType$ParameterMapEntrySetIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.WeakHashMap$KeyIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.awt.util.IdentityLinkedList.size()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.security.jca.ProviderList$ServiceList.iterator()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() org.apache.commons.math3.geometry.euclidean.oned.Vector1D(double)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.SubList$1.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.Collections$SynchronizedCollection.iterator()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.font.FontLineMetrics.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.ServiceLoader$1.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.TreeMap$NavigableSubMap$SubMapEntryIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.text.AttributedString$AttributedStringIterator.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.Collections$EmptyList.size()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.security.krb5.internal.LastReqEntry.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.isEmpty()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.lang.ProcessEnvironment$StringValues$1.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() javax.swing.text.StyleContext$SmallAttributeSet.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() org.apache.commons.math3.linear.RealVector$1.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() org.apache.commons.math3.util.CombinatoricsUtils$SingletonIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumbJPEG.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.LinkedList.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.text.normalizer.ReplaceableUCharacterIterator.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() javax.swing.text.html.OptionListModel.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.ArrayList$Itr.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() javax.swing.text.EditorKit.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() javax.swing.text.StyledEditorKit.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.nio.charset.Charset$1.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() com.sun.imageio.plugins.jpeg.DQTMarkerSegment.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.security.krb5.internal.HostAddresses.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() javax.crypto.Mac.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() com.sun.imageio.plugins.jpeg.SOSMarkerSegment.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.net.ProgressSource.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() org.apache.commons.math3.geometry.partitioning.BSPTree.visit(org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.net.www.protocol.http.AuthenticationInfo.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.security.x509.GeneralSubtrees.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() javax.naming.CompositeName.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.SubList$1.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.lang.ProcessEnvironment$StringKeySet$1.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.awt.image.ImageFilter.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.getSorted()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.Collections$UnmodifiableCollection$1.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() org.apache.commons.math3.geometry.euclidean.twod.Line.toSpace(org.apache.commons.math3.geometry.Vector)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.HashMap$KeyIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.security.krb5.EncryptionKey.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.security.jca.ProviderList$ServiceList$1.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.Collections$SingletonList.size()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.awt.Insets.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.Collections$1.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.EnumMap$EnumMapIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.ServiceLoader$1.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.zip.ZipEntry.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.security.MessageDigest$Delegate.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.ServiceLoader$LazyIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.Vector.size()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.text.ChoiceFormat.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.lang.Thread.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() com.sun.imageio.plugins.jpeg.MarkerSegment.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.nio.charset.Charset$1.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.concurrent.ConcurrentLinkedQueue$Itr.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.nio.fs.UnixFileSystem$FileStoreIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.text.StringCharacterIterator.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.awt.geom.Dimension2D.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.awt.geom.Area.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.jar.Attributes.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.TreeMap$NavigableSubMap$SubMapIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.AbstractMap.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() javax.imageio.ImageIO$ImageTranscoderIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.concurrent.CopyOnWriteArrayList.iterator()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() javax.swing.text.html.HTMLEditorKit.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.AbstractList$Itr.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.HashMap$HashIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() org.apache.commons.math3.linear.RealVector$2$1.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.text.CompactByteArray.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.concurrent.CopyOnWriteArrayList.get(int)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.Hashtable.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() org.apache.commons.math3.linear.RealVector$SparseEntryIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.concurrent.CopyOnWriteArrayList$COWIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.net.www.MessageHeader$HeaderIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.util.PreHashedMap$2$1.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.ArrayList.add(java.lang.Object)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.SimpleTimeZone.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.security.krb5.internal.ETypeInfo.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.Locale.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.java2d.SunGraphics2D.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() org.apache.commons.math3.geometry.euclidean.twod.Vector2D.clinit()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() javax.imageio.ImageIO$ImageWriterIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.JumboEnumSet$EnumSetIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.LinkedList$ListItr.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.text.SimpleDateFormat.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.ArrayList.clinit()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.concurrent.DelayQueue$Itr.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.GregorianCalendar.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() org.apache.commons.math3.util.FastMath.abs(double)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.JumboEnumSet$EnumSetIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.Vector.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.concurrent.ConcurrentHashMap$KeyIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.LinkedList$DescendingIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.concurrent.DelayQueue$Itr.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.util.PreHashedMap$2$1.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.awt.util.IdentityArrayList.size()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.awt.RenderingHints.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.text.DateFormatSymbols.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.HashSet.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() javax.sound.midi.MetaMessage.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.text.RuleBasedBreakIterator.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.LinkedHashMap$EntryIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.ArrayList.get(int)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.awt.ImageCapabilities.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.IdentityHashMap$ValueIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.Collections$CopiesList.size()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() org.apache.commons.math3.linear.RealVector$2$2.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() com.sun.imageio.plugins.jpeg.ImageTypeIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$ICCMarkerSegment.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.awt.geom.Line2D.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.ArrayDeque$DescendingIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.security.krb5.internal.ETypeInfo2.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() org.apache.commons.math3.linear.RealVector$1.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() javax.swing.text.StyledEditorKit$1.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() javax.security.auth.Subject$SecureSet$1.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.awt.datatransfer.DataFlavor.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.followLoop(org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node,org.apache.commons.math3.geometry.partitioning.utilities.AVLTree)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.Collections$EmptyList.get(int)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.jar.Manifest.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.Vector$Itr.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.Collections$CheckedList$1.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.security.krb5.EncryptedData.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.EnumSet.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() org.apache.commons.math3.geometry.euclidean.twod.Line.toSubSpace(org.apache.commons.math3.geometry.Vector)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.SubList.get(int)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.awt.BufferCapabilities.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.text.DecimalFormat.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.net.www.MimeEntry.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() com.sun.imageio.plugins.jpeg.SOFMarkerSegment$ComponentSpec.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.concurrent.ConcurrentHashMap$HashIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.ArrayList$SubList.size()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.lang.ProcessEnvironment$StringEntrySet$1.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.EnumMap.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.security.krb5.internal.AuthorizationData.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFExtensionMarkerSegment.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.EnumMap$KeyIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.nio.fs.AbstractPath$1.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.security.krb5.internal.crypto.crc32.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.security.jca.ProviderList$ServiceList.size()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.util.calendar.ZoneInfo.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.text.normalizer.CharacterIteratorWrapper.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.concurrent.CopyOnWriteArrayList.size()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.Collections$EmptyIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.Collections$SingletonList.get(int)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.text.DecimalFormatSymbols.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.awt.font.TextLayout.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() javax.swing.DefaultListSelectionModel.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.text.DigitList.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() javax.print.attribute.EnumSyntax.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.LinkedHashMap$KeyIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.awt.geom.CubicCurve2D.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.concurrent.LinkedBlockingQueue$Itr.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.Collections$CheckedList$1.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.ArrayList.iterator()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() javax.imageio.ImageIO$ImageWriterIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.Collections$EmptyList.iterator()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() org.apache.commons.math3.util.CombinatoricsUtils$LexicographicCombinationIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.concurrent.LinkedBlockingDeque$AbstractItr.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.ArrayDeque$DeqIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.LinkedHashMap$LinkedHashIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.security.x509.NameConstraintsExtension.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.TreeMap.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.lang.ProcessEnvironment$StringEntrySet$1.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.util.PreHashedMap$1$1.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() javax.swing.tree.DefaultMutableTreeNode.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.Collections$UnmodifiableList.get(int)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.security.provider.PolicyParser$GrantEntry.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.HashMap.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.lang.ProcessEnvironment$StringValues$1.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.security.jca.ProviderList$3.get(int)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() javax.print.MimeType$ParameterMapEntrySetIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.awt.geom.AffineTransform.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.AbstractMap$1$1.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.text.IntHashtable.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() org.apache.commons.math3.geometry.euclidean.oned.Vector1D.getX()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.security.util.BitArray.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.IdentityHashMap.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.JapaneseImperialCalendar.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.text.normalizer.NormalizerBase.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.security.provider.MD4.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.awt.util.IdentityLinkedList$DescendingIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.lang.ProcessEnvironment$StringKeySet$1.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() javax.swing.tree.DefaultTreeSelectionModel.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.concurrent.CopyOnWriteArrayList$COWSubList.size()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() javax.imageio.ImageIO$ImageReaderIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.text.MessageFormat.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.TreeMap$PrivateEntryIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.lang.Object.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() javax.swing.text.SimpleAttributeSet.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.misc.Service$LazyIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.java2d.loops.FontInfo.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.LinkedList.get(int)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() org.apache.commons.math3.linear.RealVector$SparseEntryIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.security.jca.ProviderList$ServiceList.get(int)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() com.sun.imageio.plugins.png.PNGMetadata.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() com.sun.imageio.plugins.jpeg.SOFMarkerSegment.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.PriorityQueue$Itr.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.RegularEnumSet$EnumSetIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.Collections$CheckedMap$CheckedEntrySet$1.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.net.HttpCookie.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.awt.datatransfer.MimeType.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.AbstractList.iterator()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.Collections$EmptyIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.LinkedHashMap$ValueIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.font.StandardGlyphVector.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.TreeMap$ValueIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() org.apache.commons.math3.util.CombinatoricsUtils$LexicographicCombinationIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.AbstractMap$2$1.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.EnumMap$ValueIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.nio.fs.AbstractPath$1.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.security.jca.ProviderList$3.size()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.text.RuleBasedBreakIterator$SafeCharIterator.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.text.RuleBasedCollator.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() javax.swing.text.ElementIterator$StackItem.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.SubList.iterator()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.TreeMap$EntryIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.ResourceBundle$CacheKey.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.font.AttributeValues.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.awt.util.IdentityLinkedList$ListItr.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() javax.swing.text.GlyphView.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.EnumMap$EntryIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumb.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.Collections$UnmodifiableList$1.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() org.apache.commons.math3.linear.RealVector$2$1.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.awt.geom.Point2D.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() org.apache.commons.math3.geometry.euclidean.twod.Segment.getStart()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.Collections$UnmodifiableCollection$1.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() com.sun.imageio.plugins.jpeg.ImageTypeIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.Collections$CopiesList.get(int)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.awt.datatransfer.MimeTypeParameterList.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.regex.Pattern$CharPropertyNames$CloneableProperty.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.TreeMap$KeyIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.Hashtable$Entry.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.TreeSet.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.Vector.get(int)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() com.sun.imageio.plugins.jpeg.SOSMarkerSegment$ScanComponentSpec.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.RegularEnumSet$EnumSetIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.misc.SoftCache$EntrySet$1.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.awt.image.Kernel.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.Date.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.PriorityQueue$Itr.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.util.calendar.CalendarDate.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.ArrayList$Itr.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.awt.print.PageFormat.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.AbstractMap$2$1.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() javax.imageio.ImageIO$ImageTranscoderIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.awt.geom.QuadCurve2D.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.security.jca.ProviderList$ServiceList$1.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.ArrayDeque$DeqIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.Vector$Itr.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.Collections$CheckedCollection$1.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() javax.sound.midi.ShortMessage.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.AbstractList$Itr.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.awt.image.renderable.RenderContext.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.misc.Service$LazyIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.ArrayList.size()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.net.www.MessageHeader$HeaderIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() org.apache.commons.math3.geometry.euclidean.twod.Segment.getEnd()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() com.sun.imageio.plugins.jpeg.JPEGMetadata.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.awt.util.IdentityLinkedList$DescendingIterator.next()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.security.krb5.internal.HostAddress.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() sun.awt.util.IdentityLinkedList$ListItr.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() javax.imageio.spi.PartialOrderIterator.hasNext()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.Vector.iterator()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.text.BreakIterator.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.BitSet.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.lang.Enum.clone()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.util.ArrayList()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices() java.awt.geom.RectangularShape.clone()
org.apache.commons.math3.analysis.function.Sqrt.value(double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Sqrt.value(double) org.apache.commons.math3.util.FastMath.sqrt(double)
org.apache.commons.math3.analysis.function.Sqrt.value(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.random.SynchronizedRandomGenerator.setSeed(long) java.util.Random.setSeed(long)
org.apache.commons.math3.random.SynchronizedRandomGenerator.setSeed(long) org.apache.commons.math3.random.MersenneTwister.setSeed(long)
org.apache.commons.math3.random.SynchronizedRandomGenerator.setSeed(long) org.apache.commons.math3.random.RandomGeneratorFactory$1.setSeed(long)
org.apache.commons.math3.random.SynchronizedRandomGenerator.setSeed(long) org.apache.commons.math3.random.RandomAdaptor.setSeed(long)
org.apache.commons.math3.random.SynchronizedRandomGenerator.setSeed(long) org.apache.commons.math3.random.SynchronizedRandomGenerator.setSeed(long)
org.apache.commons.math3.random.SynchronizedRandomGenerator.setSeed(long) org.apache.commons.math3.random.ISAACRandom.setSeed(long)
org.apache.commons.math3.random.SynchronizedRandomGenerator.setSeed(long) org.apache.commons.math3.random.AbstractWell.setSeed(long)
org.apache.commons.math3.special.Gamma$1(double) org.apache.commons.math3.util.ContinuedFraction()
org.apache.commons.math3.analysis.function.Asin.value(double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Asin.value(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.function.Asin.value(double) org.apache.commons.math3.util.FastMath.asin(double)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.clinit() java.lang.Object.clinit()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.clinit() org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew(java.lang.String,int)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.clinit() org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.clinit()
org.apache.commons.math3.util.ResizableDoubleArray.compute(org.apache.commons.math3.util.MathArrays$Function) org.apache.commons.math3.stat.descriptive.moment.SemiVariance.evaluate(double[],int,int)
org.apache.commons.math3.util.ResizableDoubleArray.compute(org.apache.commons.math3.util.MathArrays$Function) org.apache.commons.math3.stat.descriptive.summary.SumOfLogs.evaluate(double[],int,int)
org.apache.commons.math3.util.ResizableDoubleArray.compute(org.apache.commons.math3.util.MathArrays$Function) org.apache.commons.math3.stat.descriptive.moment.Variance.evaluate(double[],int,int)
org.apache.commons.math3.util.ResizableDoubleArray.compute(org.apache.commons.math3.util.MathArrays$Function) org.apache.commons.math3.stat.descriptive.rank.Percentile.evaluate(double[],int,int)
org.apache.commons.math3.util.ResizableDoubleArray.compute(org.apache.commons.math3.util.MathArrays$Function) org.apache.commons.math3.stat.descriptive.summary.Product.evaluate(double[],int,int)
org.apache.commons.math3.util.ResizableDoubleArray.compute(org.apache.commons.math3.util.MathArrays$Function) org.apache.commons.math3.stat.descriptive.moment.GeometricMean.evaluate(double[],int,int)
org.apache.commons.math3.util.ResizableDoubleArray.compute(org.apache.commons.math3.util.MathArrays$Function) org.apache.commons.math3.stat.descriptive.summary.SumOfSquares.evaluate(double[],int,int)
org.apache.commons.math3.util.ResizableDoubleArray.compute(org.apache.commons.math3.util.MathArrays$Function) org.apache.commons.math3.stat.descriptive.rank.Min.evaluate(double[],int,int)
org.apache.commons.math3.util.ResizableDoubleArray.compute(org.apache.commons.math3.util.MathArrays$Function) org.apache.commons.math3.stat.descriptive.moment.Kurtosis.evaluate(double[],int,int)
org.apache.commons.math3.util.ResizableDoubleArray.compute(org.apache.commons.math3.util.MathArrays$Function) org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.evaluate(double[],int,int)
org.apache.commons.math3.util.ResizableDoubleArray.compute(org.apache.commons.math3.util.MathArrays$Function) org.apache.commons.math3.stat.descriptive.moment.Skewness.evaluate(double[],int,int)
org.apache.commons.math3.util.ResizableDoubleArray.compute(org.apache.commons.math3.util.MathArrays$Function) org.apache.commons.math3.stat.descriptive.summary.Sum.evaluate(double[],int,int)
org.apache.commons.math3.util.ResizableDoubleArray.compute(org.apache.commons.math3.util.MathArrays$Function) org.apache.commons.math3.stat.descriptive.rank.Max.evaluate(double[],int,int)
org.apache.commons.math3.util.ResizableDoubleArray.compute(org.apache.commons.math3.util.MathArrays$Function) org.apache.commons.math3.stat.descriptive.moment.Mean.evaluate(double[],int,int)
org.apache.commons.math3.util.ResizableDoubleArray.compute(org.apache.commons.math3.util.MathArrays$Function) org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate(double[],int,int)
org.apache.commons.math3.exception.util.LocalizedFormats(java.lang.String,int,java.lang.String) java.lang.Enum(java.lang.String,int)
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() sun.text.CompactByteArray.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.awt.geom.AffineTransform.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() sun.security.krb5.internal.KerberosTime.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.util.Hashtable.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() sun.security.krb5.internal.Ticket.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() sun.text.IntHashtable.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() sun.security.util.BitArray.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() com.sun.imageio.plugins.jpeg.DHTMarkerSegment$Htable.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.util.SimpleTimeZone.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.util.IdentityHashMap.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.util.JapaneseImperialCalendar.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() sun.security.krb5.internal.ETypeInfo.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() sun.text.normalizer.NormalizerBase.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.util.Locale.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() sun.security.krb5.internal.TicketFlags.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() sun.java2d.SunGraphics2D.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() sun.security.provider.MD4.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() javax.swing.tree.DefaultTreeSelectionModel.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.awt.print.Paper.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.text.MessageFormat.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.lang.Object.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() javax.swing.text.SimpleAttributeSet.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() javax.swing.ArrayTable.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.text.SimpleDateFormat.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() sun.java2d.loops.FontInfo.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() sun.security.krb5.PrincipalName.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.awt.PageAttributes.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() com.sun.imageio.plugins.png.PNGMetadata.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.util.GregorianCalendar.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() com.sun.imageio.plugins.jpeg.SOFMarkerSegment.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.util.Vector.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() javax.swing.text.ElementIterator.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.net.HttpCookie.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.awt.datatransfer.MimeType.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.awt.RenderingHints.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.text.DateFormatSymbols.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.util.HashSet.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() sun.util.calendar.ImmutableGregorianDate.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() javax.sound.midi.MetaMessage.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() sun.font.FontLineMetrics.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() sun.font.StandardGlyphVector.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.text.AttributedString$AttributedStringIterator.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.text.RuleBasedBreakIterator.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() javax.swing.text.Segment.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.awt.ImageCapabilities.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() sun.security.krb5.internal.LastReqEntry.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() javax.swing.text.StyleContext$SmallAttributeSet.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.text.RuleBasedCollator.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.text.RuleBasedBreakIterator$SafeCharIterator.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() javax.swing.text.ElementIterator$StackItem.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$ICCMarkerSegment.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.awt.geom.Line2D.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() org.apache.commons.math3.util.FastMathLiteralArrays.clinit()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.util.ResourceBundle$CacheKey.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumbJPEG.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() sun.security.krb5.internal.ETypeInfo2.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.awt.font.TextMeasurer.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.util.LinkedList.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() sun.font.AttributeValues.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() javax.swing.text.StyledEditorKit$1.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.util.ArrayDeque.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() javax.swing.text.GlyphView.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.awt.datatransfer.DataFlavor.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() sun.security.krb5.internal.PAData.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() javax.swing.AbstractAction.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() sun.text.normalizer.ReplaceableUCharacterIterator.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.util.concurrent.CopyOnWriteArrayList.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumb.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.awt.geom.Point2D.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() javax.swing.text.html.OptionListModel.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() sun.security.krb5.internal.AuthorizationDataEntry.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() javax.swing.text.EditorKit.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() javax.swing.text.StyledEditorKit.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() com.sun.imageio.plugins.jpeg.DQTMarkerSegment.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.util.JumboEnumSet.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() sun.security.krb5.internal.HostAddresses.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() javax.crypto.Mac.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() javax.naming.Reference.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() com.sun.imageio.plugins.jpeg.SOSMarkerSegment.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.util.jar.Manifest.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() sun.security.krb5.EncryptedData.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.text.NumberFormat.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() sun.net.ProgressSource.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.util.EnumSet.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() sun.net.www.protocol.http.AuthenticationInfo.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.awt.datatransfer.MimeTypeParameterList.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.util.regex.Pattern$CharPropertyNames$CloneableProperty.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.security.SignatureSpi.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() sun.security.x509.GeneralSubtrees.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.util.ArrayList.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() com.sun.imageio.plugins.jpeg.DHTMarkerSegment.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() javax.naming.CompositeName.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.awt.font.CharArrayIterator.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.security.Signature$Delegate.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.util.TreeSet.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.util.Hashtable$Entry.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.awt.image.ImageFilter.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() com.sun.imageio.plugins.jpeg.SOSMarkerSegment$ScanComponentSpec.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.awt.geom.Path2D$Float.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() sun.security.krb5.EncryptionKey.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.text.DecimalFormat.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.awt.BufferCapabilities.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.awt.image.Kernel.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.util.Date.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.awt.Insets.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() sun.net.www.MimeEntry.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() sun.util.calendar.CalendarDate.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.awt.print.PageFormat.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() com.sun.imageio.plugins.jpeg.SOFMarkerSegment$ComponentSpec.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.util.EnumMap.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() sun.security.krb5.internal.AuthorizationData.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFExtensionMarkerSegment.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.awt.geom.QuadCurve2D.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() sun.security.krb5.internal.crypto.crc32.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.util.zip.ZipEntry.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.security.MessageDigest$Delegate.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() sun.util.calendar.ZoneInfo.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() sun.text.normalizer.CharacterIteratorWrapper.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.lang.Object.clinit()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.text.DecimalFormatSymbols.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.awt.font.TextLayout.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() javax.swing.DefaultListSelectionModel.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.text.DigitList.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() javax.print.attribute.EnumSyntax.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() javax.sound.midi.ShortMessage.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.awt.geom.CubicCurve2D.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.text.ChoiceFormat.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.lang.Thread.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() com.sun.imageio.plugins.jpeg.MarkerSegment.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.awt.image.renderable.RenderContext.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() sun.security.krb5.Realm.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() com.sun.imageio.plugins.jpeg.DQTMarkerSegment$Qtable.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.awt.JobAttributes.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() com.sun.imageio.plugins.jpeg.JPEGMetadata.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.text.StringCharacterIterator.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.awt.geom.Dimension2D.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() sun.security.x509.NameConstraintsExtension.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.awt.geom.Area.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.util.jar.Attributes.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() sun.security.krb5.internal.HostAddress.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.util.TreeMap.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.awt.geom.Path2D$Double.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.text.BreakIterator.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.util.BitSet.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.lang.Enum.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.util.AbstractMap.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() javax.swing.tree.DefaultMutableTreeNode.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.awt.geom.RectangularShape.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() sun.security.provider.PolicyParser$GrantEntry.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() java.util.HashMap.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA() javax.swing.text.html.HTMLEditorKit.clone()
org.apache.commons.math3.analysis.FunctionUtils$9$1(org.apache.commons.math3.analysis.FunctionUtils$9) java.lang.Object()
org.apache.commons.math3.linear.RealVector.getNorm() sun.util.PreHashedMap$1$1.next()
org.apache.commons.math3.linear.RealVector.getNorm() javax.print.MimeType$ParameterMapEntrySetIterator.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator.next()
org.apache.commons.math3.linear.RealVector.getNorm() javax.security.auth.Subject$SecureSet$1.next()
org.apache.commons.math3.linear.RealVector.getNorm() sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator.next()
org.apache.commons.math3.linear.RealVector.getNorm() org.apache.commons.math3.linear.RealVector$SparseEntryIterator.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.AbstractMap$1$1.next()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.concurrent.CopyOnWriteArrayList$COWIterator.next()
org.apache.commons.math3.linear.RealVector.getNorm() sun.net.www.MessageHeader$HeaderIterator.next()
org.apache.commons.math3.linear.RealVector.getNorm() sun.util.PreHashedMap$2$1.next()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator.next()
org.apache.commons.math3.linear.RealVector.getNorm() org.apache.commons.math3.util.MultidimensionalCounter$Iterator.next()
org.apache.commons.math3.linear.RealVector.getNorm() sun.net.www.HeaderParser$ParserIterator.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.concurrent.ArrayBlockingQueue$Itr.next()
org.apache.commons.math3.linear.RealVector.getNorm() sun.awt.util.IdentityLinkedList$DescendingIterator.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() java.lang.ProcessEnvironment$StringKeySet$1.next()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.TreeMap$DescendingKeyIterator.next()
org.apache.commons.math3.linear.RealVector.getNorm() javax.imageio.ImageIO$ImageReaderIterator.next()
org.apache.commons.math3.linear.RealVector.getNorm() javax.imageio.ImageIO$ImageWriterIterator.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.JumboEnumSet$EnumSetIterator.next()
org.apache.commons.math3.linear.RealVector.getNorm() javax.imageio.ImageIO$ImageReaderIterator.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.TreeMap$PrivateEntryIterator.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.LinkedList$ListItr.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() sun.misc.Service$LazyIterator.next()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.ServiceLoader$LazyIterator.next()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.Scanner.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.WeakHashMap$ValueIterator.next()
org.apache.commons.math3.linear.RealVector.getNorm() sun.nio.fs.UnixFileSystem$FileStoreIterator.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() org.apache.commons.math3.linear.RealVector$SparseEntryIterator.next()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.IdentityHashMap$EntryIterator.next()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.concurrent.DelayQueue$Itr.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() javax.imageio.spi.PartialOrderIterator.next()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.TreeMap$NavigableSubMap$SubMapKeyIterator.next()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.concurrent.ConcurrentHashMap$ValueIterator.next()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.PriorityQueue$Itr.next()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.LinkedList$DescendingIterator.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.Hashtable$Enumerator.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.JumboEnumSet$EnumSetIterator.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.concurrent.ConcurrentHashMap$KeyIterator.next()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.RegularEnumSet$EnumSetIterator.next()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.LinkedList$DescendingIterator.next()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.concurrent.DelayQueue$Itr.next()
org.apache.commons.math3.linear.RealVector.getNorm() javax.print.MimeType$ParameterMapEntrySetIterator.next()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.WeakHashMap$KeyIterator.next()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.Collections$CheckedMap$CheckedEntrySet$1.next()
org.apache.commons.math3.linear.RealVector.getNorm() sun.util.PreHashedMap$2$1.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.SubList$1.next()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.Collections$EmptyIterator.next()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.LinkedHashMap$ValueIterator.next()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.ServiceLoader$1.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() org.apache.commons.math3.linear.RealVector.iterator()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.TreeMap$NavigableSubMap$SubMapEntryIterator.next()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.TreeMap$ValueIterator.next()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.WeakHashMap$HashIterator.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.LinkedHashMap$EntryIterator.next()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.IdentityHashMap$KeyIterator.next()
org.apache.commons.math3.linear.RealVector.getNorm() org.apache.commons.math3.util.CombinatoricsUtils$LexicographicCombinationIterator.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.AbstractMap$2$1.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.EnumMap$ValueIterator.next()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.IdentityHashMap$ValueIterator.next()
org.apache.commons.math3.linear.RealVector.getNorm() sun.nio.fs.AbstractPath$1.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() java.lang.ProcessEnvironment$StringValues$1.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.AbstractMap$1$1.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() org.apache.commons.math3.linear.RealVector$2$2.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() com.sun.imageio.plugins.jpeg.ImageTypeIterator.next()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.TreeMap$EntryIterator.next()
org.apache.commons.math3.linear.RealVector.getNorm() org.apache.commons.math3.linear.RealVector$1.next()
org.apache.commons.math3.linear.RealVector.getNorm() javax.imageio.spi.FilterIterator.next()
org.apache.commons.math3.linear.RealVector.getNorm() org.apache.commons.math3.util.CombinatoricsUtils$SingletonIterator.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.ArrayDeque$DescendingIterator.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.Hashtable$Enumerator.next()
org.apache.commons.math3.linear.RealVector.getNorm() org.apache.commons.math3.linear.RealVector$1.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.HashMap$EntryIterator.next()
org.apache.commons.math3.linear.RealVector.getNorm() sun.awt.util.IdentityLinkedList$ListItr.next()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.Collections$CheckedMap$CheckedEntrySet$1.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() org.apache.commons.math3.util.MultidimensionalCounter$Iterator.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() javax.security.auth.Subject$SecureSet$1.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() org.apache.commons.math3.util.FastMath.sqrt(double)
org.apache.commons.math3.linear.RealVector.getNorm() java.util.EnumMap$EntryIterator.next()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.Collections$UnmodifiableList$1.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() org.apache.commons.math3.linear.RealVector$2$1.next()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.ArrayList$Itr.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.Collections$UnmodifiableList$1.next()
org.apache.commons.math3.linear.RealVector.getNorm() java.nio.charset.Charset$1.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.Collections$UnmodifiableCollection$1.next()
org.apache.commons.math3.linear.RealVector.getNorm() sun.nio.cs.FastCharsetProvider$1.next()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.concurrent.ArrayBlockingQueue$Itr.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() com.sun.imageio.plugins.jpeg.ImageTypeIterator.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.Collections$CheckedList$1.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.Vector$Itr.next()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.TreeMap$KeyIterator.next()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.ArrayList$SubList$1.next()
org.apache.commons.math3.linear.RealVector.getNorm() org.apache.commons.math3.linear.OpenMapRealVector$OpenMapEntry.getValue()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.SubList$1.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() java.lang.ProcessEnvironment$StringKeySet$1.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.HashMap$ValueIterator.next()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.Collections$UnmodifiableCollection$1.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() sun.misc.SoftCache$EntrySet$1.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.RegularEnumSet$EnumSetIterator.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.HashMap$KeyIterator.next()
org.apache.commons.math3.linear.RealVector.getNorm() sun.misc.SoftCache$EntrySet$1.next()
org.apache.commons.math3.linear.RealVector.getNorm() org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.next()
org.apache.commons.math3.linear.RealVector.getNorm() sun.security.jca.ProviderList$ServiceList$1.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.next()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.ArrayList$SubList$1.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.concurrent.CopyOnWriteArrayList$COWIterator.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.PriorityQueue$Itr.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.Collections$1.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.ArrayList$Itr.next()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.concurrent.ConcurrentHashMap$HashIterator.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.EnumMap$EnumMapIterator.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator.next()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.IdentityHashMap$IdentityHashMapIterator.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.AbstractMap$2$1.next()
org.apache.commons.math3.linear.RealVector.getNorm() java.lang.ProcessEnvironment$StringEntrySet$1.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.ServiceLoader$1.next()
org.apache.commons.math3.linear.RealVector.getNorm() javax.imageio.ImageIO$ImageTranscoderIterator.next()
org.apache.commons.math3.linear.RealVector.getNorm() sun.net.www.HeaderParser$ParserIterator.next()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.concurrent.LinkedBlockingDeque$AbstractItr.next()
org.apache.commons.math3.linear.RealVector.getNorm() sun.nio.cs.FastCharsetProvider$1.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.EnumMap$KeyIterator.next()
org.apache.commons.math3.linear.RealVector.getNorm() sun.nio.fs.AbstractPath$1.next()
org.apache.commons.math3.linear.RealVector.getNorm() sun.security.jca.ProviderList$ServiceList$1.next()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.LinkedList$ListItr.next()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.Collections$EmptyIterator.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.ServiceLoader$LazyIterator.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.ArrayDeque$DeqIterator.next()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.Scanner.next()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.Vector$Itr.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.Collections$CheckedCollection$1.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() javax.imageio.spi.FilterIterator.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.ArrayDeque$DescendingIterator.next()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.concurrent.ConcurrentHashMap$EntryIterator.next()
org.apache.commons.math3.linear.RealVector.getNorm() java.lang.Object.clinit()
org.apache.commons.math3.linear.RealVector.getNorm() org.apache.commons.math3.util.CombinatoricsUtils$SingletonIterator.next()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.Collections$CheckedCollection$1.next()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.LinkedHashMap$KeyIterator.next()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.AbstractList$Itr.next()
org.apache.commons.math3.linear.RealVector.getNorm() org.apache.commons.math3.linear.RealVector$2$2.next()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.concurrent.LinkedBlockingQueue$Itr.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.Collections$CheckedList$1.next()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() javax.imageio.ImageIO$ImageWriterIterator.next()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next()
org.apache.commons.math3.linear.RealVector.getNorm() sun.misc.Service$LazyIterator.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() java.nio.charset.Charset$1.next()
org.apache.commons.math3.linear.RealVector.getNorm() org.apache.commons.math3.linear.RealVector$2$UnmodifiableEntry.getValue()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.concurrent.ConcurrentLinkedQueue$Itr.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() sun.net.www.MessageHeader$HeaderIterator.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.Collections$1.next()
org.apache.commons.math3.linear.RealVector.getNorm() sun.nio.fs.UnixFileSystem$FileStoreIterator.next()
org.apache.commons.math3.linear.RealVector.getNorm() org.apache.commons.math3.util.CombinatoricsUtils$LexicographicCombinationIterator.next()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.concurrent.LinkedBlockingDeque$AbstractItr.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.concurrent.ConcurrentLinkedQueue$Itr.next()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.ArrayDeque$DeqIterator.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.LinkedHashMap$LinkedHashIterator.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.concurrent.LinkedBlockingQueue$Itr.next()
org.apache.commons.math3.linear.RealVector.getNorm() sun.awt.util.IdentityLinkedList$DescendingIterator.next()
org.apache.commons.math3.linear.RealVector.getNorm() sun.awt.util.IdentityLinkedList$ListItr.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() javax.imageio.spi.PartialOrderIterator.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() java.lang.ProcessEnvironment$StringEntrySet$1.next()
org.apache.commons.math3.linear.RealVector.getNorm() org.apache.commons.math3.linear.RealVector$2.iterator()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.TreeMap$NavigableSubMap$SubMapIterator.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() sun.util.PreHashedMap$1$1.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() org.apache.commons.math3.linear.RealVector$Entry.getValue()
org.apache.commons.math3.linear.RealVector.getNorm() sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() javax.imageio.ImageIO$ImageTranscoderIterator.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.AbstractList$Itr.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.HashMap$HashIterator.hasNext()
org.apache.commons.math3.linear.RealVector.getNorm() java.util.WeakHashMap$EntryIterator.next()
org.apache.commons.math3.linear.RealVector.getNorm() java.lang.ProcessEnvironment$StringValues$1.next()
org.apache.commons.math3.linear.RealVector.getNorm() org.apache.commons.math3.linear.RealVector$2$1.hasNext()
org.apache.commons.math3.distribution.NormalDistribution.clinit() org.apache.commons.math3.distribution.NormalDistribution.clinit()
org.apache.commons.math3.distribution.NormalDistribution.clinit() java.lang.Object.clinit()
org.apache.commons.math3.distribution.NormalDistribution.clinit() org.apache.commons.math3.util.FastMath.sqrt(double)
org.apache.commons.math3.distribution.NormalDistribution.clinit() org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.exception.util.LocalizedFormats.getLocalizedString(java.util.Locale) java.util.ResourceBundle.clinit()
org.apache.commons.math3.exception.util.LocalizedFormats.getLocalizedString(java.util.Locale) java.util.ResourceBundle.getString(java.lang.String)
org.apache.commons.math3.exception.util.LocalizedFormats.getLocalizedString(java.util.Locale) java.lang.StringBuilder.toString()
org.apache.commons.math3.exception.util.LocalizedFormats.getLocalizedString(java.util.Locale) java.lang.String.replaceAll(java.lang.String,java.lang.String)
org.apache.commons.math3.exception.util.LocalizedFormats.getLocalizedString(java.util.Locale) java.util.ResourceBundle.getBundle(java.lang.String,java.util.Locale)
org.apache.commons.math3.exception.util.LocalizedFormats.getLocalizedString(java.util.Locale) java.lang.Object.clinit()
org.apache.commons.math3.exception.util.LocalizedFormats.getLocalizedString(java.util.Locale) java.util.Locale.getLanguage()
org.apache.commons.math3.exception.util.LocalizedFormats.getLocalizedString(java.util.Locale) java.lang.StringBuilder()
org.apache.commons.math3.exception.util.LocalizedFormats.getLocalizedString(java.util.Locale) java.util.ResourceBundle.getLocale()
org.apache.commons.math3.exception.util.LocalizedFormats.getLocalizedString(java.util.Locale) java.lang.String.equals(java.lang.Object)
org.apache.commons.math3.exception.util.LocalizedFormats.getLocalizedString(java.util.Locale) java.lang.StringBuilder.append(java.lang.String)
org.apache.commons.math3.exception.util.LocalizedFormats.getLocalizedString(java.util.Locale) java.lang.Enum.toString()
org.apache.commons.math3.exception.util.LocalizedFormats.getLocalizedString(java.util.Locale) java.lang.Class.getName()
org.apache.commons.math3.fraction.Fraction(double) org.apache.commons.math3.fraction.Fraction(double,double,int)
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) sun.util.PreHashedMap$1$1.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) javax.security.auth.Subject$SecureSet$1.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.Collections$SingletonList.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) org.apache.commons.math3.linear.RealVector$SparseEntryIterator.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.concurrent.CopyOnWriteArrayList$COWIterator.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) sun.net.www.MessageHeader$HeaderIterator.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) sun.util.PreHashedMap$2$1.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.ArrayList.add(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.Hashtable$EntrySet.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) org.apache.commons.math3.geometry.euclidean.threed.SubPlane.side(org.apache.commons.math3.geometry.partitioning.Hyperplane)
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) org.apache.commons.math3.util.MultidimensionalCounter$Iterator.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) sun.net.www.HeaderParser$ParserIterator.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.getHyperplane()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.concurrent.ArrayBlockingQueue$Itr.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) javax.print.MimeType$ParameterMapEntrySet.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) javax.imageio.ImageIO$ImageWriterIterator.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.JumboEnumSet$EnumSetIterator.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.AbstractSequentialList.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.LinkedList$ListItr.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.ArrayList.clinit()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.ServiceLoader$LazyIterator.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.Hashtable$KeySet.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) sun.nio.fs.UnixFileSystem$FileStoreIterator.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.concurrent.DelayQueue$Itr.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) javax.imageio.spi.PartialOrderIterator.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.TreeMap$NavigableSubMap$SubMapKeyIterator.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.concurrent.ConcurrentHashMap$ValueIterator.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) sun.util.PreHashedMap$2.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.EnumMap$EntrySet.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.LinkedList$DescendingIterator.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint.split(org.apache.commons.math3.geometry.partitioning.Hyperplane)
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) org.apache.commons.math3.geometry.partitioning.BSPTree.getPlus()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.JumboEnumSet$EnumSetIterator.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.concurrent.ConcurrentHashMap$KeyIterator.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.concurrent.DelayQueue$Itr.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.LinkedList$DescendingIterator.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.JumboEnumSet.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) sun.util.PreHashedMap$1.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.HashMap$Values.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) sun.util.PreHashedMap$2$1.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(org.apache.commons.math3.geometry.partitioning.Hyperplane)
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.RegularEnumSet.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.concurrent.SynchronousQueue.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.WeakHashMap$HashIterator.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.LinkedHashMap$EntryIterator.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.IdentityHashMap$KeyIterator.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.IdentityHashMap$ValueIterator.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) org.apache.commons.math3.geometry.euclidean.threed.SubPlane.split(org.apache.commons.math3.geometry.partitioning.Hyperplane)
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.ArrayList$SubList.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.AbstractMap$1$1.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) org.apache.commons.math3.linear.RealVector$2$2.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) com.sun.imageio.plugins.jpeg.ImageTypeIterator.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.concurrent.DelayQueue.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.AbstractMap$2.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) javax.imageio.spi.FilterIterator.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.concurrent.LinkedBlockingDeque.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.ArrayDeque$DescendingIterator.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.EnumMap$KeySet.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.Hashtable$Enumerator.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.concurrent.ConcurrentLinkedQueue.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) org.apache.commons.math3.linear.RealVector$1.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.HashMap$EntryIterator.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.Collections$CheckedMap$CheckedEntrySet$1.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) org.apache.commons.math3.util.MultidimensionalCounter$Iterator.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) javax.security.auth.Subject$SecureSet$1.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.concurrent.CopyOnWriteArrayList$COWSubList.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.Hashtable$ValueCollection.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.lang.ProcessEnvironment$StringKeySet.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.Collections$UnmodifiableList$1.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint.side(org.apache.commons.math3.geometry.partitioning.Hyperplane)
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) sun.nio.cs.FastCharsetProvider$1.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.concurrent.ArrayBlockingQueue$Itr.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.Collections$CheckedList$1.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.Vector$Itr.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.concurrent.ConcurrentHashMap$Values.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.ArrayList$SubList$1.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.Collections$UnmodifiableCollection.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.IdentityHashMap$Values.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.Collections$EmptySet.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.HashMap$ValueIterator.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) sun.misc.SoftCache$EntrySet$1.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.ArrayList$SubList$1.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.copySelf()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.concurrent.CopyOnWriteArrayList$COWIterator.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.concurrent.ConcurrentHashMap$HashIterator.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) org.apache.commons.math3.geometry.euclidean.twod.SubLine.split(org.apache.commons.math3.geometry.partitioning.Hyperplane)
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.IdentityHashMap$IdentityHashMapIterator.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.lang.ProcessEnvironment$StringEntrySet$1.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) javax.security.auth.Subject$SecureSet.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) sun.net.www.HeaderParser$ParserIterator.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) sun.nio.ch.Util$2.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.concurrent.LinkedBlockingDeque$AbstractItr.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) sun.misc.SoftCache$EntrySet.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.Collections$AsLIFOQueue.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.concurrent.LinkedBlockingQueue.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) sun.nio.cs.FastCharsetProvider$1.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.EnumMap$KeyIterator.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) sun.nio.fs.AbstractPath$1.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.LinkedList$ListItr.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.Collections$EmptyIterator.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) org.apache.commons.math3.geometry.partitioning.BSPTree.getMinus()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.Scanner.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.Collections$CheckedCollection$1.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) javax.imageio.spi.FilterIterator.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.ArrayDeque$DescendingIterator.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.concurrent.ConcurrentHashMap$EntryIterator.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) org.apache.commons.math3.util.CombinatoricsUtils$SingletonIterator.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.LinkedHashMap$KeyIterator.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) org.apache.commons.math3.linear.RealVector$2$2.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.concurrent.LinkedBlockingQueue$Itr.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.Collections$CheckedList$1.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.ArrayList.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) javax.imageio.ImageIO$ImageWriterIterator.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.Collections$EmptyList.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.PriorityQueue.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.Collections$1.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) org.apache.commons.math3.util.CombinatoricsUtils$LexicographicCombinationIterator.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.concurrent.LinkedBlockingDeque$AbstractItr.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.concurrent.ConcurrentLinkedQueue$Itr.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.ArrayDeque$DeqIterator.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.LinkedHashMap$LinkedHashIterator.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.concurrent.LinkedBlockingQueue$Itr.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.lang.ProcessEnvironment$StringEntrySet$1.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) sun.util.PreHashedMap$1$1.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.TreeMap$DescendingSubMap$DescendingEntrySetView.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.TreeMap$Values.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.AbstractMap$1.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.WeakHashMap$EntryIterator.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.lang.ProcessEnvironment$StringValues$1.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.HashMap$EntrySet.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.concurrent.ArrayBlockingQueue.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) javax.print.MimeType$ParameterMapEntrySetIterator.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.AbstractMap$1$1.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.WeakHashMap$Values.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.IdentityHashMap$KeySet.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection)
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) sun.awt.util.IdentityLinkedList$DescendingIterator.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.lang.ProcessEnvironment$StringKeySet$1.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.TreeMap$DescendingKeyIterator.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) javax.imageio.ImageIO$ImageReaderIterator.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.concurrent.ConcurrentHashMap$EntrySet.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) javax.imageio.ImageIO$ImageReaderIterator.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.TreeMap$PrivateEntryIterator.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) sun.misc.Service$LazyIterator.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.Scanner.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.WeakHashMap$ValueIterator.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) org.apache.commons.math3.linear.RealVector$SparseEntryIterator.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.IdentityHashMap$EntryIterator.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.concurrent.ConcurrentHashMap$KeySet.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.Collections$CheckedCollection.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.HashSet.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.PriorityQueue$Itr.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.Hashtable$Enumerator.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.RegularEnumSet$EnumSetIterator.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) javax.print.MimeType$ParameterMapEntrySetIterator.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.WeakHashMap$KeyIterator.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.Collections$CheckedMap$CheckedEntrySet$1.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) sun.security.jca.ProviderList$ServiceList.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.SubList$1.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.AbstractList.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.Collections$SynchronizedCollection.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.Collections$EmptyIterator.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.LinkedHashMap$ValueIterator.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.ServiceLoader$1.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.TreeMap$NavigableSubMap$SubMapEntryIterator.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.TreeMap$ValueIterator.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) org.apache.commons.math3.util.CombinatoricsUtils$LexicographicCombinationIterator.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.AbstractMap$2$1.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.EnumMap$ValueIterator.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) sun.nio.fs.AbstractPath$1.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.lang.ProcessEnvironment$StringValues$1.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.Collections$CheckedMap$CheckedEntrySet.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.WeakHashMap$KeySet.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.Collections$SetFromMap.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.SubList.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.TreeMap$EntryIterator.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) org.apache.commons.math3.linear.RealVector$1.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.lang.Enum.ordinal()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) org.apache.commons.math3.util.CombinatoricsUtils$SingletonIterator.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) javax.imageio.spi.PartiallyOrderedSet.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) sun.awt.util.IdentityLinkedList$ListItr.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) javax.security.auth.Subject$ClassSet.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.EnumMap$EntryIterator.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.Collections$UnmodifiableList$1.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane.getPlus()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) org.apache.commons.math3.linear.RealVector$2$1.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.IdentityHashMap$EntrySet.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.ArrayList$Itr.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.nio.charset.Charset$1.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) org.apache.commons.math3.geometry.partitioning.AbstractRegion$3.clinit()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.Collections$UnmodifiableCollection$1.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.EnumMap$Values.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) com.sun.imageio.plugins.jpeg.ImageTypeIterator.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.TreeMap$KeyIterator.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) org.apache.commons.math3.geometry.euclidean.twod.SubLine.side(org.apache.commons.math3.geometry.partitioning.Hyperplane)
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.SubList$1.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.lang.ProcessEnvironment$StringKeySet$1.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.Collections$UnmodifiableCollection$1.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.RegularEnumSet$EnumSetIterator.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.TreeSet.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.HashMap$KeyIterator.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) sun.misc.SoftCache$EntrySet$1.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) sun.security.jca.ProviderList$ServiceList$1.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.PriorityQueue$Itr.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.Collections$1.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.ArrayList$Itr.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.lang.ProcessEnvironment$StringValues.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.EnumMap$EnumMapIterator.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.AbstractMap$2$1.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.ServiceLoader$1.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) javax.imageio.ImageIO$ImageTranscoderIterator.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.lang.ProcessEnvironment$StringEntrySet.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane.getMinus()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) sun.security.jca.ProviderList$ServiceList$1.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) org.apache.commons.math3.geometry.euclidean.twod.Line.copySelf()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.ServiceLoader$LazyIterator.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.ArrayDeque$DeqIterator.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.Vector$Itr.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.Collections$SingletonSet.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.lang.Object.clinit()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.TreeMap$AscendingSubMap$AscendingEntrySetView.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.Collections$CheckedCollection$1.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.AbstractList$Itr.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) org.apache.commons.math3.geometry.euclidean.threed.Plane.copySelf()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.TreeMap$KeySet.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.TreeMap$EntrySet.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) sun.misc.Service$LazyIterator.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.nio.charset.Charset$1.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.concurrent.ConcurrentLinkedQueue$Itr.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) sun.net.www.MessageHeader$HeaderIterator.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) sun.nio.fs.UnixFileSystem$FileStoreIterator.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.HashMap$KeySet.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) sun.awt.util.IdentityLinkedList$DescendingIterator.next()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.WeakHashMap$EntrySet.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.ArrayDeque.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) sun.awt.util.IdentityLinkedList$ListItr.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.Vector.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) javax.imageio.spi.PartialOrderIterator.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.TreeMap$NavigableSubMap$SubMapIterator.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.ArrayList()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.concurrent.CopyOnWriteArrayList.iterator()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) javax.imageio.ImageIO$ImageTranscoderIterator.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.AbstractList$Itr.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) java.util.HashMap$HashIterator.hasNext()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(org.apache.commons.math3.geometry.partitioning.BSPTree,java.util.Collection) org.apache.commons.math3.linear.RealVector$2$1.hasNext()
org.apache.commons.math3.util.MathArrays$1.compare(java.lang.Object,java.lang.Object) org.apache.commons.math3.util.MathArrays$1.compare(org.apache.commons.math3.util.Pair,org.apache.commons.math3.util.Pair)
org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex.hashCode() java.lang.Object.clinit()
org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex.hashCode() java.lang.Double.clinit()
org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex.hashCode() java.lang.Double.doubleToLongBits(double)
org.apache.commons.math3.exception.NullArgumentException() java.lang.Object.clinit()
org.apache.commons.math3.exception.NullArgumentException() org.apache.commons.math3.exception.util.LocalizedFormats.clinit()
org.apache.commons.math3.exception.NullArgumentException() org.apache.commons.math3.exception.NullArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])
org.apache.commons.math3.ode.events.EventState.access$000(org.apache.commons.math3.ode.events.EventState,org.apache.commons.math3.ode.sampling.StepInterpolator) org.apache.commons.math3.ode.events.EventState.getCompleteState(org.apache.commons.math3.ode.sampling.StepInterpolator)
org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.exception.OutOfRangeException(java.lang.Number,java.lang.Number,java.lang.Number)
org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.lang.Object.clinit()
org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.lang.Double.valueOf(double)
org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.lang.Throwable.clinit()
org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure)
org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getValue()
org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.subtract(double)
org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.util.Arrays.clinit()
org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.util.Arrays.binarySearch(double[],double)
org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) java.lang.Double.clinit()
org.apache.commons.math3.util.OpenIntToDoubleHashMap.put(int,double) java.lang.Object.clinit()
org.apache.commons.math3.util.OpenIntToDoubleHashMap.put(int,double) org.apache.commons.math3.util.OpenIntToDoubleHashMap.shouldGrowTable()
org.apache.commons.math3.util.OpenIntToDoubleHashMap.put(int,double) org.apache.commons.math3.util.OpenIntToDoubleHashMap.growTable()
org.apache.commons.math3.util.OpenIntToDoubleHashMap.put(int,double) org.apache.commons.math3.util.OpenIntToDoubleHashMap.changeIndexSign(int)
org.apache.commons.math3.util.OpenIntToDoubleHashMap.put(int,double) org.apache.commons.math3.util.OpenIntToDoubleHashMap.findInsertionIndex(int)
org.apache.commons.math3.dfp.DfpDec(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.Dfp)
org.apache.commons.math3.dfp.DfpDec(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.DfpDec.round(int)
org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer$1.compare(java.lang.Object,java.lang.Object) org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer$1.compare(org.apache.commons.math3.optimization.PointValuePair,org.apache.commons.math3.optimization.PointValuePair)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.rootN(int) java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.rootN(int) org.apache.commons.math3.analysis.differentiation.DSCompiler.rootN(double[],int,int,double[],int)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.rootN(int) org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DSCompiler)
org.apache.commons.math3.util.FastMath$ExpIntTable.access$000() java.lang.Object.clinit()
org.apache.commons.math3.util.FastMath$ExpIntTable.access$000() org.apache.commons.math3.util.FastMath$ExpIntTable.clinit()
org.apache.commons.math3.linear.BlockRealMatrix(int,int) java.lang.Object.clinit()
org.apache.commons.math3.linear.BlockRealMatrix(int,int) org.apache.commons.math3.linear.AbstractRealMatrix.clinit()
org.apache.commons.math3.linear.BlockRealMatrix(int,int) org.apache.commons.math3.linear.AbstractRealMatrix(int,int)
org.apache.commons.math3.linear.BlockRealMatrix(int,int) org.apache.commons.math3.linear.BlockRealMatrix.createBlocksLayout(int,int)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Sqrt.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Ulp.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Acos.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Asin.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Rint.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Gaussian.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Tan.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.ode.events.EventState$1.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Sinc.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.FunctionUtils$7.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Sin.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Log1p.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Identity.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.FunctionUtils$3.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Signum.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.distribution.AbstractRealDistribution$1.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Exp.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Logit.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Acosh.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.FunctionUtils$2.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator$1.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Log10.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.FunctionUtils$1.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.FunctionUtils$12.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.FunctionUtils$8.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Constant.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Atan.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Logistic.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Sinh.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Cosh.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Floor.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Expm1.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Power.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Cbrt.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.optimization.direct.PowellOptimizer$LineSearch$1.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.HarmonicOscillator.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Asinh.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.FunctionUtils$4.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.FunctionUtils$6.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.StepFunction.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Minus.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.FunctionUtils$13.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Tanh.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.FunctionUtils$9.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Cos.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Atanh.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.FunctionUtils$10.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Log.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Sigmoid.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Inverse.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.FunctionUtils$5.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch$1.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Abs.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.FunctionUtils$15.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.function.Ceil.value(double)
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(double) org.apache.commons.math3.analysis.FunctionUtils$14.value(double)
org.apache.commons.math3.random.ISAACRandom.setSeed(int[]) java.lang.Object.clinit()
org.apache.commons.math3.random.ISAACRandom.setSeed(int[]) org.apache.commons.math3.random.ISAACRandomState()
org.apache.commons.math3.random.ISAACRandom.setSeed(int[]) org.apache.commons.math3.random.ISAACRandom.setSeed(long)
org.apache.commons.math3.random.ISAACRandom.setSeed(int[]) java.lang.System.currentTimeMillis()
org.apache.commons.math3.random.ISAACRandom.setSeed(int[]) java.lang.System.arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org.apache.commons.math3.random.ISAACRandom.setSeed(int[]) java.lang.Math.clinit()
org.apache.commons.math3.random.ISAACRandom.setSeed(int[]) java.lang.Math.min(int,int)
org.apache.commons.math3.random.ISAACRandom.setSeed(int[]) java.lang.System.identityHashCode(java.lang.Object)
org.apache.commons.math3.random.ISAACRandom.setSeed(int[]) java.lang.System.clinit()
org.apache.commons.math3.analysis.function.Log1p.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.log1p()
org.apache.commons.math3.linear.RealVector$SparseEntryIterator.next() java.lang.Object.clinit()
org.apache.commons.math3.linear.RealVector$SparseEntryIterator.next() org.apache.commons.math3.linear.RealVector$SparseEntryIterator.advance(org.apache.commons.math3.linear.RealVector$Entry)
org.apache.commons.math3.linear.RealVector$SparseEntryIterator.next() java.lang.Throwable.clinit()
org.apache.commons.math3.linear.RealVector$SparseEntryIterator.next() org.apache.commons.math3.linear.RealVector$Entry.setIndex(int)
org.apache.commons.math3.linear.RealVector$SparseEntryIterator.next() org.apache.commons.math3.linear.RealVector$SparseEntryIterator.next()
org.apache.commons.math3.linear.RealVector$SparseEntryIterator.next() java.util.NoSuchElementException()
org.apache.commons.math3.linear.RealVector$SparseEntryIterator.next() org.apache.commons.math3.linear.OpenMapRealVector$OpenMapEntry.getIndex()
org.apache.commons.math3.linear.RealVector$SparseEntryIterator.next() org.apache.commons.math3.linear.RealVector$Entry.getIndex()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.atanh() java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.atanh() org.apache.commons.math3.analysis.differentiation.DSCompiler.atanh(double[],int,double[],int)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.atanh() org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DSCompiler)
org.apache.commons.math3.exception.ZeroException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[]) java.lang.Object.clinit()
org.apache.commons.math3.exception.ZeroException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[]) java.lang.Throwable.clinit()
org.apache.commons.math3.exception.ZeroException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[]) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.exception.ZeroException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[]) org.apache.commons.math3.exception.MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])
org.apache.commons.math3.linear.AbstractRealMatrix(int,int) java.lang.Object.clinit()
org.apache.commons.math3.linear.AbstractRealMatrix(int,int) java.lang.Throwable.clinit()
org.apache.commons.math3.linear.AbstractRealMatrix(int,int) java.lang.Integer.clinit()
org.apache.commons.math3.linear.AbstractRealMatrix(int,int) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.linear.AbstractRealMatrix(int,int) org.apache.commons.math3.exception.NotStrictlyPositiveException(java.lang.Number)
org.apache.commons.math3.linear.AbstractRealMatrix(int,int) org.apache.commons.math3.linear.RealLinearOperator()
org.apache.commons.math3.linear.AbstractRealMatrix(int,int) java.lang.Integer.valueOf(int)
org.apache.commons.math3.util.FastMath.log(double,double[]) org.apache.commons.math3.util.FastMath$lnMant.clinit()
org.apache.commons.math3.util.FastMath.log(double,double[]) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.util.FastMath.log(double,double[]) java.lang.Object.clinit()
org.apache.commons.math3.util.FastMath.log(double,double[]) org.apache.commons.math3.util.FastMath$lnMant.access$400()
org.apache.commons.math3.util.FastMath.log(double,double[]) java.lang.Double.doubleToRawLongBits(double)
org.apache.commons.math3.util.FastMath.log(double,double[]) java.lang.Double.clinit()
org.apache.commons.math3.special.Beta.logGammaMinusLogGammaSum(double,double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.special.Beta.logGammaMinusLogGammaSum(double,double) java.lang.Object.clinit()
org.apache.commons.math3.special.Beta.logGammaMinusLogGammaSum(double,double) org.apache.commons.math3.util.FastMath.log1p(double)
org.apache.commons.math3.special.Beta.logGammaMinusLogGammaSum(double,double) org.apache.commons.math3.special.Beta.deltaMinusDeltaSum(double,double)
org.apache.commons.math3.special.Beta.logGammaMinusLogGammaSum(double,double) java.lang.Double.valueOf(double)
org.apache.commons.math3.special.Beta.logGammaMinusLogGammaSum(double,double) org.apache.commons.math3.exception.NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)
org.apache.commons.math3.special.Beta.logGammaMinusLogGammaSum(double,double) java.lang.Throwable.clinit()
org.apache.commons.math3.special.Beta.logGammaMinusLogGammaSum(double,double) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.special.Beta.logGammaMinusLogGammaSum(double,double) java.lang.Double.clinit()
org.apache.commons.math3.special.Beta.logGammaMinusLogGammaSum(double,double) org.apache.commons.math3.util.FastMath.log(double)
org.apache.commons.math3.special.Beta.logGammaMinusLogGammaSum(double,double) org.apache.commons.math3.special.Beta.clinit()
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.evaluate(double[],double[],double)
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.value(double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.FunctionUtils$12.value(double) org.apache.commons.math3.analysis.function.Pow.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$12.value(double) org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$12.value(double) org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$5.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$12.value(double) org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$2.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$12.value(double) org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$4.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$12.value(double) org.apache.commons.math3.analysis.function.Max.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$12.value(double) org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$12.value(double) org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$1.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$12.value(double) org.apache.commons.math3.analysis.function.Atan2.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$12.value(double) org.apache.commons.math3.analysis.function.Min.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$12.value(double) org.apache.commons.math3.analysis.function.Multiply.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$12.value(double) org.apache.commons.math3.analysis.function.Subtract.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$12.value(double) org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$3.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$12.value(double) org.apache.commons.math3.analysis.function.Divide.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$12.value(double) org.apache.commons.math3.analysis.function.Add.value(double,double)
org.apache.commons.math3.stat.Frequency.getCumPct(java.lang.Comparable) org.apache.commons.math3.stat.Frequency.getCumFreq(java.lang.Comparable)
org.apache.commons.math3.stat.Frequency.getCumPct(java.lang.Comparable) org.apache.commons.math3.stat.Frequency.getSumFreq()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.recurseSides(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.AbstractRegion$Sides) org.apache.commons.math3.geometry.partitioning.AbstractRegion$Sides.minusFound()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.recurseSides(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.AbstractRegion$Sides) org.apache.commons.math3.geometry.partitioning.BSPTree.getMinus()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.recurseSides(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.AbstractRegion$Sides) org.apache.commons.math3.geometry.euclidean.threed.SubPlane.side(org.apache.commons.math3.geometry.partitioning.Hyperplane)
org.apache.commons.math3.geometry.partitioning.AbstractRegion.recurseSides(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.AbstractRegion$Sides) org.apache.commons.math3.geometry.euclidean.twod.SubLine.side(org.apache.commons.math3.geometry.partitioning.Hyperplane)
org.apache.commons.math3.geometry.partitioning.AbstractRegion.recurseSides(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.AbstractRegion$Sides) java.lang.Object.clinit()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.recurseSides(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.AbstractRegion$Sides) org.apache.commons.math3.geometry.partitioning.AbstractRegion$Sides.rememberPlusFound()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.recurseSides(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.AbstractRegion$Sides) org.apache.commons.math3.geometry.partitioning.BSPTree.getCut()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.recurseSides(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.AbstractRegion$Sides) org.apache.commons.math3.geometry.euclidean.threed.SubPlane.split(org.apache.commons.math3.geometry.partitioning.Hyperplane)
org.apache.commons.math3.geometry.partitioning.AbstractRegion.recurseSides(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.AbstractRegion$Sides) org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.getHyperplane()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.recurseSides(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.AbstractRegion$Sides) org.apache.commons.math3.geometry.euclidean.threed.Plane.sameOrientationAs(org.apache.commons.math3.geometry.partitioning.Hyperplane)
org.apache.commons.math3.geometry.partitioning.AbstractRegion.recurseSides(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.AbstractRegion$Sides) java.lang.Enum.ordinal()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.recurseSides(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.AbstractRegion$Sides) java.lang.Boolean.booleanValue()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.recurseSides(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.AbstractRegion$Sides) org.apache.commons.math3.geometry.partitioning.AbstractRegion$Sides.rememberMinusFound()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.recurseSides(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.AbstractRegion$Sides) org.apache.commons.math3.geometry.partitioning.BSPTree.getAttribute()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.recurseSides(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.AbstractRegion$Sides) org.apache.commons.math3.geometry.partitioning.AbstractRegion$Sides.plusFound()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.recurseSides(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.AbstractRegion$Sides) org.apache.commons.math3.geometry.euclidean.twod.Line.sameOrientationAs(org.apache.commons.math3.geometry.partitioning.Hyperplane)
org.apache.commons.math3.geometry.partitioning.AbstractRegion.recurseSides(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.AbstractRegion$Sides) org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.sameOrientationAs(org.apache.commons.math3.geometry.partitioning.Hyperplane)
org.apache.commons.math3.geometry.partitioning.AbstractRegion.recurseSides(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.AbstractRegion$Sides) org.apache.commons.math3.geometry.partitioning.Side.clinit()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.recurseSides(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.AbstractRegion$Sides) org.apache.commons.math3.geometry.euclidean.twod.SubLine.split(org.apache.commons.math3.geometry.partitioning.Hyperplane)
org.apache.commons.math3.geometry.partitioning.AbstractRegion.recurseSides(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.AbstractRegion$Sides) org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint.split(org.apache.commons.math3.geometry.partitioning.Hyperplane)
org.apache.commons.math3.geometry.partitioning.AbstractRegion.recurseSides(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.AbstractRegion$Sides) org.apache.commons.math3.geometry.partitioning.AbstractRegion.isEmpty(org.apache.commons.math3.geometry.partitioning.BSPTree)
org.apache.commons.math3.geometry.partitioning.AbstractRegion.recurseSides(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.AbstractRegion$Sides) org.apache.commons.math3.geometry.partitioning.BSPTree.getPlus()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.recurseSides(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.AbstractRegion$Sides) org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane.getPlus()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.recurseSides(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.AbstractRegion$Sides) org.apache.commons.math3.geometry.partitioning.AbstractRegion.recurseSides(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.AbstractRegion$Sides)
org.apache.commons.math3.geometry.partitioning.AbstractRegion.recurseSides(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.AbstractRegion$Sides) org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint.side(org.apache.commons.math3.geometry.partitioning.Hyperplane)
org.apache.commons.math3.geometry.partitioning.AbstractRegion.recurseSides(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.AbstractRegion$Sides) org.apache.commons.math3.geometry.partitioning.AbstractRegion$3.clinit()
org.apache.commons.math3.geometry.partitioning.AbstractRegion.recurseSides(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.AbstractRegion$Sides) org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane.getMinus()
org.apache.commons.math3.util.OpenIntToDoubleHashMap.growTable() java.lang.Object.clinit()
org.apache.commons.math3.util.OpenIntToDoubleHashMap.growTable() org.apache.commons.math3.util.OpenIntToDoubleHashMap.findInsertionIndex(int[],byte[],int,int)
org.apache.commons.math3.util.MathArrays$2.compare(java.lang.Object,java.lang.Object) org.apache.commons.math3.util.MathArrays$2.compare(org.apache.commons.math3.util.Pair,org.apache.commons.math3.util.Pair)
org.apache.commons.math3.exception.MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[]) java.lang.Object.clinit()
org.apache.commons.math3.exception.MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[]) java.lang.IllegalArgumentException()
org.apache.commons.math3.exception.MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[]) org.apache.commons.math3.exception.util.ExceptionContext.addMessage(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])
org.apache.commons.math3.exception.MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[]) org.apache.commons.math3.exception.util.ExceptionContext(java.lang.Throwable)
org.apache.commons.math3.linear.RealVector$2$UnmodifiableEntry(org.apache.commons.math3.linear.RealVector$2) org.apache.commons.math3.linear.RealVector$Entry(org.apache.commons.math3.linear.RealVector)
org.apache.commons.math3.analysis.function.Minus.derivative() org.apache.commons.math3.analysis.function.Constant(double)
org.apache.commons.math3.analysis.function.Minus.derivative() java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Minus.derivative() org.apache.commons.math3.analysis.function.Minus.derivative()
org.apache.commons.math3.random.EmpiricalDistribution.findBin(double) java.lang.Object.clinit()
org.apache.commons.math3.random.EmpiricalDistribution.findBin(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.random.EmpiricalDistribution.findBin(double) org.apache.commons.math3.util.FastMath.max(int,int)
org.apache.commons.math3.random.EmpiricalDistribution.findBin(double) org.apache.commons.math3.util.FastMath.ceil(double)
org.apache.commons.math3.random.EmpiricalDistribution.findBin(double) org.apache.commons.math3.util.FastMath.min(int,int)
org.apache.commons.math3.dfp.DfpDec.round(int) java.lang.Object.clinit()
org.apache.commons.math3.dfp.DfpDec.round(int) java.lang.Enum.ordinal()
org.apache.commons.math3.dfp.DfpDec.round(int) org.apache.commons.math3.dfp.Dfp.round(int)
org.apache.commons.math3.dfp.DfpDec.round(int) org.apache.commons.math3.dfp.DfpField.setIEEEFlagsBits(int)
org.apache.commons.math3.dfp.DfpDec.round(int) org.apache.commons.math3.dfp.Dfp.shiftRight()
org.apache.commons.math3.dfp.DfpDec.round(int) org.apache.commons.math3.dfp.DfpDec.getDecimalDigits()
org.apache.commons.math3.dfp.DfpDec.round(int) org.apache.commons.math3.dfp.DfpDec$1.clinit()
org.apache.commons.math3.dfp.DfpDec.round(int) org.apache.commons.math3.dfp.DfpField.getRoundingMode()
org.apache.commons.math3.dfp.DfpDec.round(int) org.apache.commons.math3.dfp.Dfp.getField()
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.computeGeometricalProperties() org.apache.commons.math3.geometry.euclidean.threed.Vector3D(double,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.computeGeometricalProperties() org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$FacetsContributionVisitor(org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet)
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.computeGeometricalProperties() org.apache.commons.math3.geometry.partitioning.AbstractRegion.getBarycenter()
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.computeGeometricalProperties() java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.computeGeometricalProperties() org.apache.commons.math3.geometry.euclidean.threed.Vector3D.clinit()
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.computeGeometricalProperties() org.apache.commons.math3.geometry.partitioning.AbstractRegion.setBarycenter(org.apache.commons.math3.geometry.Vector)
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.computeGeometricalProperties() org.apache.commons.math3.geometry.partitioning.BSPTree.visit(org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor)
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.computeGeometricalProperties() org.apache.commons.math3.geometry.partitioning.AbstractRegion.getSize()
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.computeGeometricalProperties() org.apache.commons.math3.geometry.partitioning.AbstractRegion.setSize(double)
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.computeGeometricalProperties() org.apache.commons.math3.geometry.partitioning.AbstractRegion.getTree(boolean)
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator.readExternal(java.io.ObjectInput) org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.setInterpolatedTime(double)
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator.readExternal(java.io.ObjectInput) java.io.ObjectInputStream.readInt()
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator.readExternal(java.io.ObjectInput) java.io.ObjectInputStream.readDouble()
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator.readExternal(java.io.ObjectInput) org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.readBaseExternal(java.io.ObjectInput)
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator.readExternal(java.io.ObjectInput) org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator.resetTables(int)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.sin() java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.sin() org.apache.commons.math3.analysis.differentiation.DSCompiler.sin(double[],int,double[],int)
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.sin() org.apache.commons.math3.analysis.differentiation.DerivativeStructure(org.apache.commons.math3.analysis.differentiation.DSCompiler)
org.apache.commons.math3.analysis.differentiation.DSCompiler.getCompiler(int,int) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.getCompiler(int,int) java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.getCompiler(int,int) org.apache.commons.math3.analysis.differentiation.DSCompiler(int,int,org.apache.commons.math3.analysis.differentiation.DSCompiler,org.apache.commons.math3.analysis.differentiation.DSCompiler)
org.apache.commons.math3.analysis.differentiation.DSCompiler.getCompiler(int,int) org.apache.commons.math3.util.FastMath.max(int,int)
org.apache.commons.math3.analysis.differentiation.DSCompiler.getCompiler(int,int) java.util.concurrent.atomic.AtomicReference.compareAndSet(java.lang.Object,java.lang.Object)
org.apache.commons.math3.analysis.differentiation.DSCompiler.getCompiler(int,int) java.lang.System.arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org.apache.commons.math3.analysis.differentiation.DSCompiler.getCompiler(int,int) java.util.concurrent.atomic.AtomicReference.get()
org.apache.commons.math3.analysis.differentiation.DSCompiler.getCompiler(int,int) org.apache.commons.math3.util.FastMath.min(int,int)
org.apache.commons.math3.analysis.differentiation.DSCompiler.getCompiler(int,int) java.lang.System.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.getCompiler(int,int) org.apache.commons.math3.analysis.differentiation.DSCompiler.clinit()
org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat.getInstance(java.util.Locale) org.apache.commons.math3.util.CompositeFormat.getDefaultNumberFormat(java.util.Locale)
org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat.getInstance(java.util.Locale) java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat.getInstance(java.util.Locale) org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat(java.text.NumberFormat)
org.apache.commons.math3.geometry.partitioning.RegionFactory$UnionMerger.merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean,boolean) org.apache.commons.math3.geometry.partitioning.BSPTree.insertInTree(org.apache.commons.math3.geometry.partitioning.BSPTree,boolean)
org.apache.commons.math3.geometry.partitioning.RegionFactory$UnionMerger.merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean,boolean) java.lang.Boolean.booleanValue()
org.apache.commons.math3.geometry.partitioning.RegionFactory$UnionMerger.merge(org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,boolean,boolean) org.apache.commons.math3.geometry.partitioning.BSPTree.getAttribute()
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getSumLog() org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getSumLog()
org.apache.commons.math3.analysis.FunctionUtils$3.derivative() java.lang.Object.clinit()
org.apache.commons.math3.analysis.FunctionUtils$3.derivative() org.apache.commons.math3.analysis.FunctionUtils$3$1(org.apache.commons.math3.analysis.FunctionUtils$3)
org.apache.commons.math3.linear.Array2DRowFieldMatrix.getEntry(int,int) org.apache.commons.math3.linear.AbstractFieldMatrix.checkRowIndex(int)
org.apache.commons.math3.linear.Array2DRowFieldMatrix.getEntry(int,int) org.apache.commons.math3.linear.AbstractFieldMatrix.checkColumnIndex(int)
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.SummaryStatistics.equals(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.Side(java.lang.String,int) java.lang.Enum(java.lang.String,int)
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.toVector3D() java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.toVector3D() org.apache.commons.math3.util.Decimal64.getReal()
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.toVector3D() org.apache.commons.math3.geometry.euclidean.threed.Vector3D.clinit()
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.toVector3D() org.apache.commons.math3.geometry.euclidean.threed.Vector3D(double,double,double)
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.toVector3D() org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getReal()
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.toVector3D() org.apache.commons.math3.dfp.Dfp.getReal()
org.apache.commons.math3.analysis.function.Cos.value(double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Cos.value(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.function.Cos.value(double) org.apache.commons.math3.util.FastMath.cos(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.function.Sqrt.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.function.Ulp.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.function.Acos.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$5.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$2.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.function.Asin.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.function.Rint.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.function.Gaussian.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.function.Atan2.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.function.Tan.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.ode.events.EventState$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.function.Sinc.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.FunctionUtils$7.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.function.Sin.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.function.Log1p.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.function.Identity.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.function.Divide.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.FunctionUtils$3.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.function.Signum.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.distribution.AbstractRealDistribution$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.function.Exp.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.function.Max.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.function.Logit.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.function.Acosh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.FunctionUtils$2.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.function.Multiply.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.function.Log10.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.FunctionUtils$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.FunctionUtils$12.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.FunctionUtils$8.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.function.Constant.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.function.Atan.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.function.Logistic.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.function.Sinh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.function.Cosh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.function.Floor.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.function.Expm1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.function.Power.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$4.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.function.Cbrt.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.optimization.direct.PowellOptimizer$LineSearch$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.function.HarmonicOscillator.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.function.Asinh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.FunctionUtils$4.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.FunctionUtils$6.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.function.StepFunction.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.function.Minus.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.FunctionUtils$13.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.function.Tanh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.FunctionUtils$9.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.function.Subtract.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.function.Cos.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.function.Atanh.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.FunctionUtils$10.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.function.Add.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.function.Pow.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.function.Log.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.function.Sigmoid.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.function.Inverse.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$1.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.function.Min.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.FunctionUtils$5.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch$1.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$3.value(double,double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.function.Abs.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.FunctionUtils$15.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.function.Ceil.value(double)
org.apache.commons.math3.analysis.FunctionUtils$10.value(double) org.apache.commons.math3.analysis.FunctionUtils$14.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Sqrt.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Ulp.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Acos.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Asin.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Rint.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Gaussian.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Tan.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.FunctionUtils$14$1.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.ode.events.EventState$1.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Sinc.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.FunctionUtils$7.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Sin.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Log1p.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Identity.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.FunctionUtils$3.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Signum.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.FunctionUtils$9$1.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.distribution.AbstractRealDistribution$1.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Exp.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Logit.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Acosh.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.FunctionUtils$2.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator$1.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Log10.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.FunctionUtils$1.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.FunctionUtils$12.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.FunctionUtils$8.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Constant.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Atan.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.FunctionUtils$3$1.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Logistic.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Sinh.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Cosh.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Floor.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Expm1.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Power.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Cbrt.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.optimization.direct.PowellOptimizer$LineSearch$1.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.HarmonicOscillator.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Asinh.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.FunctionUtils$4.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.FunctionUtils$6.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.StepFunction.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Minus.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.FunctionUtils$13.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Tanh.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.FunctionUtils$9.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Cos.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Atanh.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.FunctionUtils$10.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Log.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Sigmoid.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Inverse.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.FunctionUtils$6$1.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.FunctionUtils$5.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch$1.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Abs.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.FunctionUtils$15.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.function.Ceil.value(double)
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(org.apache.commons.math3.analysis.UnivariateFunction) org.apache.commons.math3.analysis.FunctionUtils$14.value(double)
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.crossProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D) org.apache.commons.math3.geometry.euclidean.threed.Vector3D.crossProduct(org.apache.commons.math3.geometry.Vector)
org.apache.commons.math3.ode.events.FilterType$2.selectTransformer(org.apache.commons.math3.ode.events.Transformer,double,boolean) java.lang.Object.clinit()
org.apache.commons.math3.ode.events.FilterType$2.selectTransformer(org.apache.commons.math3.ode.events.Transformer,double,boolean) java.lang.Enum.ordinal()
org.apache.commons.math3.ode.events.FilterType$2.selectTransformer(org.apache.commons.math3.ode.events.Transformer,double,boolean) java.lang.Throwable.clinit()
org.apache.commons.math3.ode.events.FilterType$2.selectTransformer(org.apache.commons.math3.ode.events.Transformer,double,boolean) org.apache.commons.math3.ode.events.FilterType$3.clinit()
org.apache.commons.math3.ode.events.FilterType$2.selectTransformer(org.apache.commons.math3.ode.events.Transformer,double,boolean) org.apache.commons.math3.exception.MathInternalError()
org.apache.commons.math3.ode.events.FilterType$2.selectTransformer(org.apache.commons.math3.ode.events.Transformer,double,boolean) org.apache.commons.math3.ode.events.Transformer.clinit()
org.apache.commons.math3.linear.RealVector$2.isNaN() org.apache.commons.math3.linear.RealVector$2.isNaN()
org.apache.commons.math3.linear.RealVector$2.isNaN() org.apache.commons.math3.linear.ArrayRealVector.isNaN()
org.apache.commons.math3.linear.RealVector$2.isNaN() org.apache.commons.math3.linear.OpenMapRealVector.isNaN()
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.cbrt() org.apache.commons.math3.analysis.differentiation.DerivativeStructure.rootN(int)
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() sun.text.CompactByteArray.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.awt.geom.AffineTransform.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() sun.security.krb5.internal.KerberosTime.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.util.Hashtable.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() sun.security.krb5.internal.Ticket.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() sun.text.IntHashtable.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() sun.security.util.BitArray.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() com.sun.imageio.plugins.jpeg.DHTMarkerSegment$Htable.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.util.SimpleTimeZone.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.util.IdentityHashMap.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.util.JapaneseImperialCalendar.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() sun.security.krb5.internal.ETypeInfo.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() sun.text.normalizer.NormalizerBase.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.util.Locale.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() sun.security.krb5.internal.TicketFlags.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() sun.java2d.SunGraphics2D.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() sun.security.provider.MD4.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() javax.swing.tree.DefaultTreeSelectionModel.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.awt.print.Paper.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.text.MessageFormat.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.lang.Object.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() javax.swing.text.SimpleAttributeSet.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() javax.swing.ArrayTable.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.text.SimpleDateFormat.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() sun.java2d.loops.FontInfo.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() sun.security.krb5.PrincipalName.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.awt.PageAttributes.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() com.sun.imageio.plugins.png.PNGMetadata.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.util.GregorianCalendar.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() com.sun.imageio.plugins.jpeg.SOFMarkerSegment.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.util.Vector.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() javax.swing.text.ElementIterator.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.net.HttpCookie.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.awt.datatransfer.MimeType.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.awt.RenderingHints.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.text.DateFormatSymbols.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.util.HashSet.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() sun.util.calendar.ImmutableGregorianDate.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() javax.sound.midi.MetaMessage.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() sun.font.FontLineMetrics.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() sun.font.StandardGlyphVector.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.text.AttributedString$AttributedStringIterator.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.text.RuleBasedBreakIterator.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() javax.swing.text.Segment.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.awt.ImageCapabilities.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() sun.security.krb5.internal.LastReqEntry.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() javax.swing.text.StyleContext$SmallAttributeSet.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.text.RuleBasedCollator.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.text.RuleBasedBreakIterator$SafeCharIterator.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() javax.swing.text.ElementIterator$StackItem.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$ICCMarkerSegment.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.awt.geom.Line2D.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.util.ResourceBundle$CacheKey.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumbJPEG.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() sun.security.krb5.internal.ETypeInfo2.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.awt.font.TextMeasurer.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.util.LinkedList.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() sun.font.AttributeValues.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() org.apache.commons.math3.optimization.PointVectorValuePair.getValue()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() javax.swing.text.StyledEditorKit$1.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.util.ArrayDeque.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() javax.swing.text.GlyphView.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.awt.datatransfer.DataFlavor.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() sun.security.krb5.internal.PAData.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() javax.swing.AbstractAction.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() sun.text.normalizer.ReplaceableUCharacterIterator.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.util.concurrent.CopyOnWriteArrayList.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumb.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.awt.geom.Point2D.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() javax.swing.text.html.OptionListModel.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() sun.security.krb5.internal.AuthorizationDataEntry.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() javax.swing.text.EditorKit.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() javax.swing.text.StyledEditorKit.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() com.sun.imageio.plugins.jpeg.DQTMarkerSegment.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.util.JumboEnumSet.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() sun.security.krb5.internal.HostAddresses.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() javax.crypto.Mac.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() javax.naming.Reference.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() com.sun.imageio.plugins.jpeg.SOSMarkerSegment.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.util.jar.Manifest.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() sun.security.krb5.EncryptedData.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.text.NumberFormat.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() sun.net.ProgressSource.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.util.EnumSet.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() sun.net.www.protocol.http.AuthenticationInfo.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.awt.datatransfer.MimeTypeParameterList.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.util.regex.Pattern$CharPropertyNames$CloneableProperty.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.security.SignatureSpi.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() org.apache.commons.math3.util.Pair.getValue()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() sun.security.x509.GeneralSubtrees.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.util.ArrayList.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() com.sun.imageio.plugins.jpeg.DHTMarkerSegment.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() javax.naming.CompositeName.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.awt.font.CharArrayIterator.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.security.Signature$Delegate.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.util.TreeSet.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.util.Hashtable$Entry.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.awt.image.ImageFilter.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() com.sun.imageio.plugins.jpeg.SOSMarkerSegment$ScanComponentSpec.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.awt.geom.Path2D$Float.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() sun.security.krb5.EncryptionKey.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.text.DecimalFormat.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.awt.BufferCapabilities.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.awt.image.Kernel.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.util.Date.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.awt.Insets.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() sun.net.www.MimeEntry.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() sun.util.calendar.CalendarDate.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.awt.print.PageFormat.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() com.sun.imageio.plugins.jpeg.SOFMarkerSegment$ComponentSpec.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.util.EnumMap.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() sun.security.krb5.internal.AuthorizationData.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFExtensionMarkerSegment.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.awt.geom.QuadCurve2D.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() sun.security.krb5.internal.crypto.crc32.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.util.zip.ZipEntry.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.security.MessageDigest$Delegate.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() sun.util.calendar.ZoneInfo.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() sun.text.normalizer.CharacterIteratorWrapper.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.text.DecimalFormatSymbols.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.awt.font.TextLayout.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() javax.swing.DefaultListSelectionModel.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.text.DigitList.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() javax.print.attribute.EnumSyntax.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() javax.sound.midi.ShortMessage.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.awt.geom.CubicCurve2D.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.text.ChoiceFormat.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.lang.Thread.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() com.sun.imageio.plugins.jpeg.MarkerSegment.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.awt.image.renderable.RenderContext.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() sun.security.krb5.Realm.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() com.sun.imageio.plugins.jpeg.DQTMarkerSegment$Qtable.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.awt.JobAttributes.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() com.sun.imageio.plugins.jpeg.JPEGMetadata.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.text.StringCharacterIterator.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.awt.geom.Dimension2D.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() sun.security.x509.NameConstraintsExtension.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.awt.geom.Area.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.util.jar.Attributes.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() sun.security.krb5.internal.HostAddress.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.util.TreeMap.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.awt.geom.Path2D$Double.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.text.BreakIterator.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.util.BitSet.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.lang.Enum.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.util.AbstractMap.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() javax.swing.tree.DefaultMutableTreeNode.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.awt.geom.RectangularShape.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() sun.security.provider.PolicyParser$GrantEntry.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() java.util.HashMap.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.clone()
org.apache.commons.math3.optimization.PointVectorValuePair.getValue() javax.swing.text.html.HTMLEditorKit.clone()
org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(org.apache.commons.math3.linear.AnyMatrix,int) org.apache.commons.math3.exception.OutOfRangeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number)
org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(org.apache.commons.math3.linear.AnyMatrix,int) org.apache.commons.math3.linear.BlockRealMatrix.getColumnDimension()
org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(org.apache.commons.math3.linear.AnyMatrix,int) java.lang.Integer.clinit()
org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(org.apache.commons.math3.linear.AnyMatrix,int) java.lang.Throwable.clinit()
org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(org.apache.commons.math3.linear.AnyMatrix,int) org.apache.commons.math3.linear.Array2DRowFieldMatrix.getColumnDimension()
org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(org.apache.commons.math3.linear.AnyMatrix,int) org.apache.commons.math3.linear.OpenMapRealMatrix.getColumnDimension()
org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(org.apache.commons.math3.linear.AnyMatrix,int) org.apache.commons.math3.linear.BlockFieldMatrix.getColumnDimension()
org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(org.apache.commons.math3.linear.AnyMatrix,int) org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension()
org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(org.apache.commons.math3.linear.AnyMatrix,int) org.apache.commons.math3.linear.SparseFieldMatrix.getColumnDimension()
org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(org.apache.commons.math3.linear.AnyMatrix,int) java.lang.Object.clinit()
org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(org.apache.commons.math3.linear.AnyMatrix,int) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(org.apache.commons.math3.linear.AnyMatrix,int) org.apache.commons.math3.exception.util.LocalizedFormats.clinit()
org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(org.apache.commons.math3.linear.AnyMatrix,int) java.lang.Integer.valueOf(int)
org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(org.apache.commons.math3.linear.AnyMatrix,int) org.apache.commons.math3.linear.DiagonalMatrix.getColumnDimension()
org.apache.commons.math3.distribution.AbstractRealDistribution.cumulativeProbability(double,double) org.apache.commons.math3.distribution.AbstractRealDistribution.probability(double,double)
org.apache.commons.math3.distribution.AbstractRealDistribution.cumulativeProbability(double,double) org.apache.commons.math3.distribution.NormalDistribution.probability(double,double)
org.apache.commons.math3.distribution.AbstractRealDistribution.cumulativeProbability(double,double) org.apache.commons.math3.distribution.LogNormalDistribution.probability(double,double)
org.apache.commons.math3.analysis.differentiation.DSCompiler.cosh(double[],int,double[],int) java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.cosh(double[],int,double[],int) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.cosh(double[],int,double[],int) org.apache.commons.math3.util.FastMath.cosh(double)
org.apache.commons.math3.analysis.differentiation.DSCompiler.cosh(double[],int,double[],int) org.apache.commons.math3.util.FastMath.sinh(double)
org.apache.commons.math3.analysis.differentiation.DSCompiler.cosh(double[],int,double[],int) org.apache.commons.math3.analysis.differentiation.DSCompiler.compose(double[],int,double[],double[],int)
org.apache.commons.math3.util.Precision.equals(float,float,int) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.util.Precision.equals(float,float,int) java.lang.Object.clinit()
org.apache.commons.math3.util.Precision.equals(float,float,int) java.lang.Float.floatToIntBits(float)
org.apache.commons.math3.util.Precision.equals(float,float,int) java.lang.Float.isNaN(float)
org.apache.commons.math3.util.Precision.equals(float,float,int) java.lang.Float.clinit()
org.apache.commons.math3.util.Precision.equals(float,float,int) org.apache.commons.math3.util.FastMath.abs(int)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder() org.apache.commons.math3.geometry.partitioning.utilities.AVLTree()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder() java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder() java.lang.Object()
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew(java.lang.String,int) java.lang.Enum(java.lang.String,int)
org.apache.commons.math3.dfp.DfpDec.newInstance(java.lang.String) java.lang.Object.clinit()
org.apache.commons.math3.dfp.DfpDec.newInstance(java.lang.String) org.apache.commons.math3.dfp.DfpDec(org.apache.commons.math3.dfp.DfpField,java.lang.String)
org.apache.commons.math3.dfp.DfpDec.newInstance(java.lang.String) org.apache.commons.math3.dfp.Dfp.getField()
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getSumSq() org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getSumSq()
org.apache.commons.math3.exception.util.ArgUtils.flatten(java.lang.Object[]) java.lang.Object.clinit()
org.apache.commons.math3.exception.util.ArgUtils.flatten(java.lang.Object[]) java.util.ArrayList.toArray()
org.apache.commons.math3.exception.util.ArgUtils.flatten(java.lang.Object[]) java.util.ArrayList.clinit()
org.apache.commons.math3.exception.util.ArgUtils.flatten(java.lang.Object[]) org.apache.commons.math3.exception.util.ArgUtils.flatten(java.lang.Object[])
org.apache.commons.math3.exception.util.ArgUtils.flatten(java.lang.Object[]) java.util.ArrayList()
org.apache.commons.math3.exception.util.ArgUtils.flatten(java.lang.Object[]) java.util.ArrayList.add(java.lang.Object)
org.apache.commons.math3.exception.NoDataException(org.apache.commons.math3.exception.util.Localizable) java.lang.Object.clinit()
org.apache.commons.math3.exception.NoDataException(org.apache.commons.math3.exception.util.Localizable) org.apache.commons.math3.exception.MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() sun.text.CompactByteArray.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.awt.geom.AffineTransform.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() sun.security.krb5.internal.KerberosTime.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.util.Hashtable.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() sun.security.krb5.internal.Ticket.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() sun.text.IntHashtable.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() sun.security.util.BitArray.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() com.sun.imageio.plugins.jpeg.DHTMarkerSegment$Htable.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.util.SimpleTimeZone.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.util.IdentityHashMap.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.util.JapaneseImperialCalendar.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() sun.security.krb5.internal.ETypeInfo.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() sun.text.normalizer.NormalizerBase.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.util.Locale.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() sun.security.krb5.internal.TicketFlags.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() sun.java2d.SunGraphics2D.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() sun.security.provider.MD4.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() javax.swing.tree.DefaultTreeSelectionModel.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.awt.print.Paper.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.text.MessageFormat.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.lang.Object.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() javax.swing.text.SimpleAttributeSet.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() javax.swing.ArrayTable.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.text.SimpleDateFormat.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() sun.java2d.loops.FontInfo.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() sun.security.krb5.PrincipalName.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.awt.PageAttributes.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() com.sun.imageio.plugins.png.PNGMetadata.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.util.GregorianCalendar.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() com.sun.imageio.plugins.jpeg.SOFMarkerSegment.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.util.Vector.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() javax.swing.text.ElementIterator.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.net.HttpCookie.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.awt.datatransfer.MimeType.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.awt.RenderingHints.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.text.DateFormatSymbols.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.util.HashSet.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() sun.util.calendar.ImmutableGregorianDate.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() javax.sound.midi.MetaMessage.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() sun.font.FontLineMetrics.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() sun.font.StandardGlyphVector.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.text.AttributedString$AttributedStringIterator.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.text.RuleBasedBreakIterator.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() javax.swing.text.Segment.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.awt.ImageCapabilities.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() sun.security.krb5.internal.LastReqEntry.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() javax.swing.text.StyleContext$SmallAttributeSet.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.text.RuleBasedCollator.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.text.RuleBasedBreakIterator$SafeCharIterator.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() javax.swing.text.ElementIterator$StackItem.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$ICCMarkerSegment.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() org.apache.commons.math3.dfp.DfpField$RoundingMode.clinit()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.awt.geom.Line2D.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.util.ResourceBundle$CacheKey.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumbJPEG.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() sun.security.krb5.internal.ETypeInfo2.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.awt.font.TextMeasurer.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.util.LinkedList.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() sun.font.AttributeValues.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() javax.swing.text.StyledEditorKit$1.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.util.ArrayDeque.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() javax.swing.text.GlyphView.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.awt.datatransfer.DataFlavor.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() sun.security.krb5.internal.PAData.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() javax.swing.AbstractAction.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() sun.text.normalizer.ReplaceableUCharacterIterator.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.util.concurrent.CopyOnWriteArrayList.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumb.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.awt.geom.Point2D.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() javax.swing.text.html.OptionListModel.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() sun.security.krb5.internal.AuthorizationDataEntry.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() javax.swing.text.EditorKit.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() javax.swing.text.StyledEditorKit.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() com.sun.imageio.plugins.jpeg.DQTMarkerSegment.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.util.JumboEnumSet.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() sun.security.krb5.internal.HostAddresses.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() javax.crypto.Mac.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() javax.naming.Reference.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() com.sun.imageio.plugins.jpeg.SOSMarkerSegment.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.util.jar.Manifest.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() sun.security.krb5.EncryptedData.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.text.NumberFormat.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() sun.net.ProgressSource.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.util.EnumSet.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() sun.net.www.protocol.http.AuthenticationInfo.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.awt.datatransfer.MimeTypeParameterList.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.util.regex.Pattern$CharPropertyNames$CloneableProperty.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.security.SignatureSpi.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() sun.security.x509.GeneralSubtrees.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.util.ArrayList.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() com.sun.imageio.plugins.jpeg.DHTMarkerSegment.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() javax.naming.CompositeName.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.awt.font.CharArrayIterator.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.security.Signature$Delegate.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.util.TreeSet.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.util.Hashtable$Entry.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.awt.image.ImageFilter.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() com.sun.imageio.plugins.jpeg.SOSMarkerSegment$ScanComponentSpec.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.awt.geom.Path2D$Float.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() sun.security.krb5.EncryptionKey.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.text.DecimalFormat.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.awt.BufferCapabilities.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.awt.image.Kernel.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.util.Date.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.awt.Insets.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() sun.net.www.MimeEntry.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() sun.util.calendar.CalendarDate.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.awt.print.PageFormat.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() com.sun.imageio.plugins.jpeg.SOFMarkerSegment$ComponentSpec.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.util.EnumMap.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() sun.security.krb5.internal.AuthorizationData.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFExtensionMarkerSegment.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.awt.geom.QuadCurve2D.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() sun.security.krb5.internal.crypto.crc32.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.util.zip.ZipEntry.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.security.MessageDigest$Delegate.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() sun.util.calendar.ZoneInfo.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() sun.text.normalizer.CharacterIteratorWrapper.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.lang.Object.clinit()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.text.DecimalFormatSymbols.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.awt.font.TextLayout.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() javax.swing.DefaultListSelectionModel.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.text.DigitList.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() javax.print.attribute.EnumSyntax.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() javax.sound.midi.ShortMessage.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.awt.geom.CubicCurve2D.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.text.ChoiceFormat.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.lang.Thread.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() com.sun.imageio.plugins.jpeg.MarkerSegment.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.awt.image.renderable.RenderContext.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() sun.security.krb5.Realm.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() com.sun.imageio.plugins.jpeg.DQTMarkerSegment$Qtable.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.awt.JobAttributes.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() com.sun.imageio.plugins.jpeg.JPEGMetadata.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.text.StringCharacterIterator.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.awt.geom.Dimension2D.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() sun.security.x509.NameConstraintsExtension.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.awt.geom.Area.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.util.jar.Attributes.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() sun.security.krb5.internal.HostAddress.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.util.TreeMap.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.awt.geom.Path2D$Double.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.text.BreakIterator.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.util.BitSet.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.lang.Enum.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.util.AbstractMap.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() javax.swing.tree.DefaultMutableTreeNode.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.awt.geom.RectangularShape.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() sun.security.provider.PolicyParser$GrantEntry.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() java.util.HashMap.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.clone()
org.apache.commons.math3.dfp.DfpField$RoundingMode.values() javax.swing.text.html.HTMLEditorKit.clone()
org.apache.commons.math3.fraction.BigFractionFormat.format(org.apache.commons.math3.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.fraction.BigFractionFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)
org.apache.commons.math3.fraction.BigFractionFormat.format(org.apache.commons.math3.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition) java.text.FieldPosition.setBeginIndex(int)
org.apache.commons.math3.fraction.BigFractionFormat.format(org.apache.commons.math3.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.fraction.FractionFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)
org.apache.commons.math3.fraction.BigFractionFormat.format(org.apache.commons.math3.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition) java.text.NumberFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)
org.apache.commons.math3.fraction.BigFractionFormat.format(org.apache.commons.math3.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.fraction.BigFraction.getNumerator()
org.apache.commons.math3.fraction.BigFractionFormat.format(org.apache.commons.math3.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.fraction.AbstractFormat.getDenominatorFormat()
org.apache.commons.math3.fraction.BigFractionFormat.format(org.apache.commons.math3.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition) java.text.FieldPosition.setEndIndex(int)
org.apache.commons.math3.fraction.BigFractionFormat.format(org.apache.commons.math3.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition) java.lang.StringBuffer.append(java.lang.String)
org.apache.commons.math3.fraction.BigFractionFormat.format(org.apache.commons.math3.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition) java.text.DecimalFormat.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)
org.apache.commons.math3.fraction.BigFractionFormat.format(org.apache.commons.math3.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.fraction.BigFraction.getDenominator()
org.apache.commons.math3.fraction.BigFractionFormat.format(org.apache.commons.math3.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.fraction.AbstractFormat.getNumeratorFormat()
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.hashCode() java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.hashCode() org.apache.commons.math3.geometry.euclidean.threed.Vector3D.isNaN()
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.hashCode() org.apache.commons.math3.util.MathUtils.hash(double)
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getVariance() org.apache.commons.math3.stat.descriptive.SummaryStatistics.getVariance()
org.apache.commons.math3.ode.ParameterizedWrapper.getParameter(java.lang.String) java.lang.Object.clinit()
org.apache.commons.math3.ode.ParameterizedWrapper.getParameter(java.lang.String) java.lang.Throwable.clinit()
org.apache.commons.math3.ode.ParameterizedWrapper.getParameter(java.lang.String) org.apache.commons.math3.ode.ParameterizedWrapper.isSupported(java.lang.String)
org.apache.commons.math3.ode.ParameterizedWrapper.getParameter(java.lang.String) org.apache.commons.math3.ode.UnknownParameterException(java.lang.String)
org.apache.commons.math3.optimization.fitting.GaussianFitter$1.value(double,double[]) org.apache.commons.math3.analysis.function.Gaussian$Parametric.value(double,double[])
org.apache.commons.math3.exception.DimensionMismatchException(int,int) java.lang.Object.clinit()
org.apache.commons.math3.exception.DimensionMismatchException(int,int) org.apache.commons.math3.exception.DimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,int,int)
org.apache.commons.math3.exception.DimensionMismatchException(int,int) org.apache.commons.math3.exception.util.LocalizedFormats.clinit()
org.apache.commons.math3.dfp.Dfp.getRadixDigits() org.apache.commons.math3.dfp.DfpField.getRadixDigits()
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getKurtosis() org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics.apply(org.apache.commons.math3.stat.descriptive.UnivariateStatistic)
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getKurtosis() org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.apply(org.apache.commons.math3.stat.descriptive.UnivariateStatistic)
org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.remove() java.lang.UnsupportedOperationException(java.lang.String)
org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.remove() java.lang.Object.clinit()
org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.remove() java.lang.Throwable.clinit()
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.toString() org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat.getInstance()
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.toString() java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.toString() org.apache.commons.math3.geometry.VectorFormat.format(org.apache.commons.math3.geometry.Vector)
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.util.PreHashedMap$1$1.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) javax.print.MimeType$ParameterMapEntrySetIterator.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) javax.security.auth.Subject$SecureSet$1.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVector$SparseEntryIterator.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.AbstractMap$1$1.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.concurrent.CopyOnWriteArrayList$COWIterator.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.net.www.MessageHeader$HeaderIterator.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVector.mapMultiply(double)
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.util.PreHashedMap$2$1.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.util.MultidimensionalCounter$Iterator.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.net.www.HeaderParser$ParserIterator.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.concurrent.ArrayBlockingQueue$Itr.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.awt.util.IdentityLinkedList$DescendingIterator.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.lang.ProcessEnvironment$StringKeySet$1.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.OpenMapRealVector$OpenMapEntry.getIndex()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.TreeMap$DescendingKeyIterator.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) javax.imageio.ImageIO$ImageReaderIterator.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) javax.imageio.ImageIO$ImageWriterIterator.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.JumboEnumSet$EnumSetIterator.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) javax.imageio.ImageIO$ImageReaderIterator.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.TreeMap$PrivateEntryIterator.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.ArrayRealVector.setEntry(int,double)
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.LinkedList$ListItr.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVector$2.mapMultiply(double)
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.misc.Service$LazyIterator.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.ServiceLoader$LazyIterator.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.Scanner.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.WeakHashMap$ValueIterator.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.nio.fs.UnixFileSystem$FileStoreIterator.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVector$SparseEntryIterator.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.IdentityHashMap$EntryIterator.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.concurrent.DelayQueue$Itr.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) javax.imageio.spi.PartialOrderIterator.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.TreeMap$NavigableSubMap$SubMapKeyIterator.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.concurrent.ConcurrentHashMap$ValueIterator.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.PriorityQueue$Itr.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.ArrayRealVector.getEntry(int)
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.LinkedList$DescendingIterator.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.ArrayRealVector.checkVectorDimensions(org.apache.commons.math3.linear.RealVector)
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.Hashtable$Enumerator.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.JumboEnumSet$EnumSetIterator.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.concurrent.ConcurrentHashMap$KeyIterator.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.RegularEnumSet$EnumSetIterator.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.LinkedList$DescendingIterator.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.concurrent.DelayQueue$Itr.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) javax.print.MimeType$ParameterMapEntrySetIterator.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.WeakHashMap$KeyIterator.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.Collections$CheckedMap$CheckedEntrySet$1.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.util.PreHashedMap$2$1.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.SubList$1.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.Collections$EmptyIterator.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.LinkedHashMap$ValueIterator.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.ServiceLoader$1.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVector.iterator()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.TreeMap$NavigableSubMap$SubMapEntryIterator.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.TreeMap$ValueIterator.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.WeakHashMap$HashIterator.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.LinkedHashMap$EntryIterator.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.IdentityHashMap$KeyIterator.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.util.CombinatoricsUtils$LexicographicCombinationIterator.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.AbstractMap$2$1.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.EnumMap$ValueIterator.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.IdentityHashMap$ValueIterator.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.nio.fs.AbstractPath$1.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.lang.ProcessEnvironment$StringValues$1.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.AbstractMap$1$1.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVector$2$2.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) com.sun.imageio.plugins.jpeg.ImageTypeIterator.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.TreeMap$EntryIterator.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVector$1.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) javax.imageio.spi.FilterIterator.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.util.CombinatoricsUtils$SingletonIterator.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.ArrayDeque$DescendingIterator.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.Hashtable$Enumerator.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVector$1.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVector$Entry.getIndex()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVector$2.getEntry(int)
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.HashMap$EntryIterator.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.awt.util.IdentityLinkedList$ListItr.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.Collections$CheckedMap$CheckedEntrySet$1.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.util.MultidimensionalCounter$Iterator.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) javax.security.auth.Subject$SecureSet$1.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.EnumMap$EntryIterator.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.Collections$UnmodifiableList$1.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVector$2$1.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.ArrayList$Itr.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.Collections$UnmodifiableList$1.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.nio.charset.Charset$1.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.Collections$UnmodifiableCollection$1.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.nio.cs.FastCharsetProvider$1.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.concurrent.ArrayBlockingQueue$Itr.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) com.sun.imageio.plugins.jpeg.ImageTypeIterator.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.Collections$CheckedList$1.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.Vector$Itr.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVector.checkVectorDimensions(org.apache.commons.math3.linear.RealVector)
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.TreeMap$KeyIterator.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.ArrayList$SubList$1.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.OpenMapRealVector$OpenMapEntry.getValue()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.SubList$1.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.OpenMapRealVector.setEntry(int,double)
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.lang.ProcessEnvironment$StringKeySet$1.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.HashMap$ValueIterator.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.Collections$UnmodifiableCollection$1.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.misc.SoftCache$EntrySet$1.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.RegularEnumSet$EnumSetIterator.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.HashMap$KeyIterator.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.misc.SoftCache$EntrySet$1.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.security.jca.ProviderList$ServiceList$1.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.ArrayList$SubList$1.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.concurrent.CopyOnWriteArrayList$COWIterator.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.PriorityQueue$Itr.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.Collections$1.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.ArrayList$Itr.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.concurrent.ConcurrentHashMap$HashIterator.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.EnumMap$EnumMapIterator.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.IdentityHashMap$IdentityHashMapIterator.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.AbstractMap$2$1.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.lang.ProcessEnvironment$StringEntrySet$1.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.ServiceLoader$1.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) javax.imageio.ImageIO$ImageTranscoderIterator.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.net.www.HeaderParser$ParserIterator.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.concurrent.LinkedBlockingDeque$AbstractItr.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.nio.cs.FastCharsetProvider$1.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.EnumMap$KeyIterator.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.nio.fs.AbstractPath$1.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.security.jca.ProviderList$ServiceList$1.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.LinkedList$ListItr.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.Collections$EmptyIterator.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.ServiceLoader$LazyIterator.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.ArrayDeque$DeqIterator.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.Scanner.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.Vector$Itr.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.Collections$CheckedCollection$1.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) javax.imageio.spi.FilterIterator.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.ArrayDeque$DescendingIterator.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVector$2.setEntry(int,double)
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.concurrent.ConcurrentHashMap$EntryIterator.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.util.CombinatoricsUtils$SingletonIterator.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.Collections$CheckedCollection$1.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.LinkedHashMap$KeyIterator.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.AbstractList$Itr.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVector$2$2.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.concurrent.LinkedBlockingQueue$Itr.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.Collections$CheckedList$1.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) javax.imageio.ImageIO$ImageWriterIterator.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.misc.Service$LazyIterator.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.nio.charset.Charset$1.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVector$2$UnmodifiableEntry.getValue()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.concurrent.ConcurrentLinkedQueue$Itr.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.net.www.MessageHeader$HeaderIterator.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.Collections$1.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.nio.fs.UnixFileSystem$FileStoreIterator.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.util.CombinatoricsUtils$LexicographicCombinationIterator.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.concurrent.LinkedBlockingDeque$AbstractItr.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.concurrent.ConcurrentLinkedQueue$Itr.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.ArrayDeque$DeqIterator.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.LinkedHashMap$LinkedHashIterator.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.concurrent.LinkedBlockingQueue$Itr.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.awt.util.IdentityLinkedList$DescendingIterator.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.awt.util.IdentityLinkedList$ListItr.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.OpenMapRealVector.getEntry(int)
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) javax.imageio.spi.PartialOrderIterator.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.lang.ProcessEnvironment$StringEntrySet$1.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVector$2.iterator()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.TreeMap$NavigableSubMap$SubMapIterator.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.util.PreHashedMap$1$1.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVector$Entry.getValue()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) javax.imageio.ImageIO$ImageTranscoderIterator.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.AbstractList$Itr.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.HashMap$HashIterator.hasNext()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.util.WeakHashMap$EntryIterator.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) java.lang.ProcessEnvironment$StringValues$1.next()
org.apache.commons.math3.linear.RealVector.subtract(org.apache.commons.math3.linear.RealVector) org.apache.commons.math3.linear.RealVector$2$1.hasNext()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.clear() org.apache.commons.math3.stat.descriptive.moment.SecondMoment.clear()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.clear() org.apache.commons.math3.stat.descriptive.moment.FirstMoment.clear()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.clear() org.apache.commons.math3.stat.descriptive.moment.Variance.clear()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.clear() org.apache.commons.math3.stat.descriptive.summary.Sum.clear()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.clear() org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.clear()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.clear() org.apache.commons.math3.stat.descriptive.moment.GeometricMean.clear()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.clear() org.apache.commons.math3.stat.descriptive.summary.SumOfSquares.clear()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.clear() org.apache.commons.math3.stat.descriptive.rank.Min.clear()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.clear() org.apache.commons.math3.stat.descriptive.rank.Max.clear()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.clear() org.apache.commons.math3.stat.descriptive.summary.SumOfLogs.clear()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.clear() org.apache.commons.math3.stat.descriptive.summary.Product.clear()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.clear() org.apache.commons.math3.stat.descriptive.moment.FourthMoment.clear()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.clear() org.apache.commons.math3.stat.descriptive.moment.Skewness.clear()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.clear() org.apache.commons.math3.stat.descriptive.moment.Kurtosis.clear()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.clear() org.apache.commons.math3.stat.descriptive.moment.ThirdMoment.clear()
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.clear() org.apache.commons.math3.stat.descriptive.moment.Mean.clear()
org.apache.commons.math3.util.OpenIntToFieldHashMap$Iterator.advance() java.lang.Object.clinit()
org.apache.commons.math3.util.OpenIntToFieldHashMap$Iterator.advance() java.lang.Throwable.clinit()
org.apache.commons.math3.util.OpenIntToFieldHashMap$Iterator.advance() org.apache.commons.math3.util.OpenIntToFieldHashMap.access$100(org.apache.commons.math3.util.OpenIntToFieldHashMap)
org.apache.commons.math3.util.OpenIntToFieldHashMap$Iterator.advance() java.util.NoSuchElementException()
org.apache.commons.math3.util.OpenIntToFieldHashMap$Iterator.advance() org.apache.commons.math3.util.OpenIntToFieldHashMap.access$400(org.apache.commons.math3.util.OpenIntToFieldHashMap)
org.apache.commons.math3.util.OpenIntToFieldHashMap$Iterator.advance() java.util.ConcurrentModificationException()
org.apache.commons.math3.linear.ArrayFieldVector.equals(java.lang.Object) org.apache.commons.math3.fraction.BigFraction.equals(java.lang.Object)
org.apache.commons.math3.linear.ArrayFieldVector.equals(java.lang.Object) org.apache.commons.math3.fraction.Fraction.equals(java.lang.Object)
org.apache.commons.math3.linear.ArrayFieldVector.equals(java.lang.Object) java.lang.Object.equals(java.lang.Object)
org.apache.commons.math3.linear.ArrayFieldVector.equals(java.lang.Object) org.apache.commons.math3.util.Decimal64.equals(java.lang.Object)
org.apache.commons.math3.linear.ArrayFieldVector.equals(java.lang.Object) org.apache.commons.math3.complex.Complex.equals(java.lang.Object)
org.apache.commons.math3.linear.ArrayFieldVector.equals(java.lang.Object) org.apache.commons.math3.dfp.Dfp.equals(java.lang.Object)
org.apache.commons.math3.linear.ArrayFieldVector.equals(java.lang.Object) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.equals(java.lang.Object)
org.apache.commons.math3.linear.ArrayFieldVector.equals(java.lang.Object) org.apache.commons.math3.linear.SparseFieldVector.getDimension()
org.apache.commons.math3.linear.ArrayFieldVector.equals(java.lang.Object) org.apache.commons.math3.linear.ArrayFieldVector.getDimension()
org.apache.commons.math3.linear.ArrayFieldVector.equals(java.lang.Object) org.apache.commons.math3.linear.SparseFieldVector.getEntry(int)
org.apache.commons.math3.linear.ArrayFieldVector.equals(java.lang.Object) org.apache.commons.math3.util.BigReal.equals(java.lang.Object)
org.apache.commons.math3.linear.ArrayFieldVector.equals(java.lang.Object) org.apache.commons.math3.linear.ArrayFieldVector.getEntry(int)
org.apache.commons.math3.util.FastMath.rint(double) java.lang.Object.clinit()
org.apache.commons.math3.util.FastMath.rint(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.util.FastMath.rint(double) org.apache.commons.math3.util.FastMath.floor(double)
org.apache.commons.math3.stat.descriptive.summary.SumOfLogs.increment(double) java.lang.Object.clinit()
org.apache.commons.math3.stat.descriptive.summary.SumOfLogs.increment(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.stat.descriptive.summary.SumOfLogs.increment(double) org.apache.commons.math3.util.FastMath.log(double)
org.apache.commons.math3.util.Precision.equals(double,double,double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.util.Precision.equals(double,double,double) java.lang.Object.clinit()
org.apache.commons.math3.util.Precision.equals(double,double,double) org.apache.commons.math3.util.Precision.equals(double,double,int)
org.apache.commons.math3.util.Precision.equals(double,double,double) org.apache.commons.math3.util.Precision.clinit()
org.apache.commons.math3.util.Precision.equals(double,double,double) org.apache.commons.math3.util.FastMath.abs(double)
org.apache.commons.math3.analysis.differentiation.DSCompiler.log10(double[],int,double[],int) java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.log10(double[],int,double[],int) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.log10(double[],int,double[],int) org.apache.commons.math3.util.FastMath.log10(double)
org.apache.commons.math3.analysis.differentiation.DSCompiler.log10(double[],int,double[],int) org.apache.commons.math3.analysis.differentiation.DSCompiler.compose(double[],int,double[],double[],int)
org.apache.commons.math3.analysis.differentiation.DSCompiler.log10(double[],int,double[],int) org.apache.commons.math3.util.FastMath.log(double)
org.apache.commons.math3.analysis.function.Cos.value(org.apache.commons.math3.analysis.differentiation.DerivativeStructure) org.apache.commons.math3.analysis.differentiation.DerivativeStructure.cos()
org.apache.commons.math3.geometry.euclidean.oned.Interval(double,double) java.lang.Object()
org.apache.commons.math3.optimization.BaseMultivariateVectorMultiStartOptimizer$1.compare(org.apache.commons.math3.optimization.PointVectorValuePair,org.apache.commons.math3.optimization.PointVectorValuePair) java.lang.Object.clinit()
org.apache.commons.math3.optimization.BaseMultivariateVectorMultiStartOptimizer$1.compare(org.apache.commons.math3.optimization.PointVectorValuePair,org.apache.commons.math3.optimization.PointVectorValuePair) java.lang.Double.compare(double,double)
org.apache.commons.math3.optimization.BaseMultivariateVectorMultiStartOptimizer$1.compare(org.apache.commons.math3.optimization.PointVectorValuePair,org.apache.commons.math3.optimization.PointVectorValuePair) org.apache.commons.math3.optimization.BaseMultivariateVectorMultiStartOptimizer$1.weightedResidual(org.apache.commons.math3.optimization.PointVectorValuePair)
org.apache.commons.math3.optimization.BaseMultivariateVectorMultiStartOptimizer$1.compare(org.apache.commons.math3.optimization.PointVectorValuePair,org.apache.commons.math3.optimization.PointVectorValuePair) java.lang.Double.clinit()
org.apache.commons.math3.linear.RealVector$SparseEntryIterator.remove() org.apache.commons.math3.exception.MathUnsupportedOperationException()
org.apache.commons.math3.linear.RealVector$SparseEntryIterator.remove() java.lang.Object.clinit()
org.apache.commons.math3.linear.RealVector$SparseEntryIterator.remove() java.lang.Throwable.clinit()
org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics$AggregatingSummaryStatistics.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.equals(java.lang.Object)
org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics$AggregatingSummaryStatistics.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics$AggregatingSummaryStatistics.equals(java.lang.Object)
org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics$AggregatingSummaryStatistics.equals(java.lang.Object) org.apache.commons.math3.stat.descriptive.SummaryStatistics.equals(java.lang.Object)
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getSumSq() org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getResults(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.computeGeometricalProperties() java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.computeGeometricalProperties() org.apache.commons.math3.geometry.euclidean.twod.Vector2D.getX()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.computeGeometricalProperties() org.apache.commons.math3.geometry.partitioning.BSPTree.getCut()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.computeGeometricalProperties() org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.computeGeometricalProperties() java.lang.Boolean.booleanValue()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.computeGeometricalProperties() org.apache.commons.math3.geometry.partitioning.AbstractRegion.setBarycenter(org.apache.commons.math3.geometry.Vector)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.computeGeometricalProperties() org.apache.commons.math3.geometry.partitioning.BSPTree.getAttribute()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.computeGeometricalProperties() org.apache.commons.math3.geometry.euclidean.twod.Vector2D.getY()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.computeGeometricalProperties() org.apache.commons.math3.geometry.euclidean.twod.Vector2D.clinit()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.computeGeometricalProperties() org.apache.commons.math3.geometry.partitioning.AbstractRegion.setSize(double)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.computeGeometricalProperties() org.apache.commons.math3.geometry.partitioning.AbstractRegion.getTree(boolean)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.computeGeometricalProperties() org.apache.commons.math3.geometry.euclidean.twod.Vector2D(double,double)
org.apache.commons.math3.analysis.function.Acosh.value(double) java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Acosh.value(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.function.Acosh.value(double) org.apache.commons.math3.util.FastMath.acosh(double)
org.apache.commons.math3.linear.BlockRealMatrix.createBlocksLayout(int,int) java.lang.Object.clinit()
org.apache.commons.math3.linear.BlockRealMatrix.createBlocksLayout(int,int) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.linear.BlockRealMatrix.createBlocksLayout(int,int) org.apache.commons.math3.util.FastMath.min(int,int)
org.apache.commons.math3.geometry.partitioning.BSPTree.copySelf() java.lang.Object.clinit()
org.apache.commons.math3.geometry.partitioning.BSPTree.copySelf() org.apache.commons.math3.geometry.partitioning.BSPTree(java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.copySelf() org.apache.commons.math3.geometry.partitioning.BSPTree(org.apache.commons.math3.geometry.partitioning.SubHyperplane,org.apache.commons.math3.geometry.partitioning.BSPTree,org.apache.commons.math3.geometry.partitioning.BSPTree,java.lang.Object)
org.apache.commons.math3.geometry.partitioning.BSPTree.copySelf() org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.copySelf()
org.apache.commons.math3.geometry.partitioning.BSPTree.copySelf() org.apache.commons.math3.geometry.partitioning.BSPTree.copySelf()
org.apache.commons.math3.optim.nonlinear.scalar.LeastSquaresConverter.value(double[]) org.apache.commons.math3.linear.Array2DRowRealMatrix.operate(double[])
org.apache.commons.math3.optim.nonlinear.scalar.LeastSquaresConverter.value(double[]) org.apache.commons.math3.exception.DimensionMismatchException(int,int)
org.apache.commons.math3.optim.nonlinear.scalar.LeastSquaresConverter.value(double[]) org.apache.commons.math3.linear.DiagonalMatrix.operate(double[])
org.apache.commons.math3.optim.nonlinear.scalar.LeastSquaresConverter.value(double[]) java.lang.Throwable.clinit()
org.apache.commons.math3.optim.nonlinear.scalar.LeastSquaresConverter.value(double[]) org.apache.commons.math3.fitting.AbstractCurveFitter$TheoreticalValuesFunction$1.value(double[])
org.apache.commons.math3.optim.nonlinear.scalar.LeastSquaresConverter.value(double[]) org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value(double[])
org.apache.commons.math3.optim.nonlinear.scalar.LeastSquaresConverter.value(double[]) org.apache.commons.math3.analysis.FunctionUtils$18.value(double[])
org.apache.commons.math3.optim.nonlinear.scalar.LeastSquaresConverter.value(double[]) org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[])
org.apache.commons.math3.optim.nonlinear.scalar.LeastSquaresConverter.value(double[]) org.apache.commons.math3.linear.AbstractRealMatrix.operate(double[])
org.apache.commons.math3.optim.nonlinear.scalar.LeastSquaresConverter.value(double[]) java.lang.Object.clinit()
org.apache.commons.math3.optim.nonlinear.scalar.LeastSquaresConverter.value(double[]) org.apache.commons.math3.analysis.differentiation.GradientFunction.value(double[])
org.apache.commons.math3.optim.nonlinear.scalar.LeastSquaresConverter.value(double[]) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.optim.nonlinear.scalar.LeastSquaresConverter.value(double[]) org.apache.commons.math3.analysis.FunctionUtils$19.value(double[])
org.apache.commons.math3.optim.nonlinear.scalar.LeastSquaresConverter.value(double[]) org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value(double[])
org.apache.commons.math3.optim.nonlinear.scalar.LeastSquaresConverter.value(double[]) org.apache.commons.math3.linear.BlockRealMatrix.operate(double[])
org.apache.commons.math3.optim.nonlinear.scalar.LeastSquaresConverter.value(double[]) org.apache.commons.math3.analysis.FunctionUtils$16$2.value(double[])
org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator$1.value(double) org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(double)
org.apache.commons.math3.optimization.PointVectorValuePair.getValueRef() org.apache.commons.math3.util.Pair.getValue()
org.apache.commons.math3.util.MathArrays$3.clinit() org.apache.commons.math3.util.MathArrays$3.clinit()
org.apache.commons.math3.util.MathArrays$3.clinit() java.lang.Object.clinit()
org.apache.commons.math3.util.MathArrays$3.clinit() java.lang.Enum.ordinal()
org.apache.commons.math3.util.MathArrays$3.clinit() org.apache.commons.math3.util.MathArrays$Position.values()
org.apache.commons.math3.util.MathArrays$3.clinit() org.apache.commons.math3.util.MathArrays$OrderDirection.clinit()
org.apache.commons.math3.util.MathArrays$3.clinit() org.apache.commons.math3.util.MathArrays$OrderDirection.values()
org.apache.commons.math3.util.MathArrays$3.clinit() org.apache.commons.math3.util.MathArrays$Position.clinit()
org.apache.commons.math3.distribution.BetaDistribution.cumulativeProbability(double) java.lang.Object.clinit()
org.apache.commons.math3.distribution.BetaDistribution.cumulativeProbability(double) org.apache.commons.math3.special.Beta.regularizedBeta(double,double,double)
org.apache.commons.math3.distribution.BetaDistribution.cumulativeProbability(double) org.apache.commons.math3.special.Beta.clinit()
org.apache.commons.math3.stat.descriptive.moment.Skewness.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.moment.Mean()
org.apache.commons.math3.stat.descriptive.moment.Skewness.evaluate(double[],int,int) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.stat.descriptive.moment.Skewness.evaluate(double[],int,int) org.apache.commons.math3.util.FastMath.sqrt(double)
org.apache.commons.math3.stat.descriptive.moment.Skewness.evaluate(double[],int,int) java.lang.Object.clinit()
org.apache.commons.math3.stat.descriptive.moment.Skewness.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.moment.Mean.evaluate(double[],int,int)
org.apache.commons.math3.stat.descriptive.moment.Skewness.evaluate(double[],int,int) org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.test(double[],int,int)
org.apache.commons.math3.linear.RealVector.checkIndex(int) org.apache.commons.math3.linear.RealVector$2.getDimension()
org.apache.commons.math3.linear.RealVector.checkIndex(int) org.apache.commons.math3.exception.OutOfRangeException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Number,java.lang.Number)
org.apache.commons.math3.linear.RealVector.checkIndex(int) java.lang.Object.clinit()
org.apache.commons.math3.linear.RealVector.checkIndex(int) org.apache.commons.math3.linear.OpenMapRealVector.getDimension()
org.apache.commons.math3.linear.RealVector.checkIndex(int) java.lang.Throwable.clinit()
org.apache.commons.math3.linear.RealVector.checkIndex(int) java.lang.Integer.clinit()
org.apache.commons.math3.linear.RealVector.checkIndex(int) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.linear.RealVector.checkIndex(int) org.apache.commons.math3.exception.util.LocalizedFormats.clinit()
org.apache.commons.math3.linear.RealVector.checkIndex(int) org.apache.commons.math3.linear.ArrayRealVector.getDimension()
org.apache.commons.math3.linear.RealVector.checkIndex(int) java.lang.Integer.valueOf(int)
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMax() org.apache.commons.math3.stat.descriptive.moment.FirstMoment.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMax() org.apache.commons.math3.stat.descriptive.rank.Max.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMax() org.apache.commons.math3.stat.descriptive.summary.SumOfLogs.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMax() org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMax() org.apache.commons.math3.stat.descriptive.summary.SumOfSquares.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMax() org.apache.commons.math3.stat.descriptive.rank.Min.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMax() org.apache.commons.math3.stat.descriptive.moment.ThirdMoment.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMax() org.apache.commons.math3.stat.descriptive.moment.SecondMoment.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMax() org.apache.commons.math3.stat.descriptive.moment.FourthMoment.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMax() org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMax() org.apache.commons.math3.stat.descriptive.moment.Mean.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMax() org.apache.commons.math3.stat.descriptive.moment.Skewness.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMax() org.apache.commons.math3.stat.descriptive.moment.Kurtosis.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMax() org.apache.commons.math3.stat.descriptive.moment.Variance.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMax() org.apache.commons.math3.stat.descriptive.summary.Product.getResult()
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMax() org.apache.commons.math3.stat.descriptive.summary.Sum.getResult()
org.apache.commons.math3.special.Beta.sumDeltaMinusDeltaSum(double,double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.special.Beta.sumDeltaMinusDeltaSum(double,double) java.lang.Object.clinit()
org.apache.commons.math3.special.Beta.sumDeltaMinusDeltaSum(double,double) org.apache.commons.math3.special.Beta.deltaMinusDeltaSum(double,double)
org.apache.commons.math3.special.Beta.sumDeltaMinusDeltaSum(double,double) java.lang.Double.valueOf(double)
org.apache.commons.math3.special.Beta.sumDeltaMinusDeltaSum(double,double) org.apache.commons.math3.exception.NumberIsTooSmallException(java.lang.Number,java.lang.Number,boolean)
org.apache.commons.math3.special.Beta.sumDeltaMinusDeltaSum(double,double) java.lang.Throwable.clinit()
org.apache.commons.math3.special.Beta.sumDeltaMinusDeltaSum(double,double) org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.special.Beta.sumDeltaMinusDeltaSum(double,double) org.apache.commons.math3.util.FastMath.min(double,double)
org.apache.commons.math3.special.Beta.sumDeltaMinusDeltaSum(double,double) java.lang.Double.clinit()
org.apache.commons.math3.special.Beta.sumDeltaMinusDeltaSum(double,double) org.apache.commons.math3.special.Beta.clinit()
org.apache.commons.math3.special.Beta.sumDeltaMinusDeltaSum(double,double) org.apache.commons.math3.util.FastMath.max(double,double)
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator.resetTables(int) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator.resetTables(int) java.lang.Object.clinit()
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator.resetTables(int) org.apache.commons.math3.util.FastMath.sqrt(double)
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator.resetTables(int) java.lang.System.arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator.resetTables(int) java.lang.System.clinit()
org.apache.commons.math3.util.FastMath.atanh(double) java.lang.Object.clinit()
org.apache.commons.math3.util.FastMath.atanh(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.util.FastMath.atanh(double) org.apache.commons.math3.util.FastMath.log(double)
org.apache.commons.math3.complex.Complex.hashCode() java.lang.Object.clinit()
org.apache.commons.math3.complex.Complex.hashCode() org.apache.commons.math3.util.MathUtils.hash(double)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.partitioning.AbstractRegion(org.apache.commons.math3.geometry.partitioning.BSPTree)
org.apache.commons.math3.fraction.BigFraction.equals(java.lang.Object) java.math.BigInteger.equals(java.lang.Object)
org.apache.commons.math3.fraction.BigFraction.equals(java.lang.Object) org.apache.commons.math3.fraction.BigFraction.reduce()
org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormat.format(org.apache.commons.math3.geometry.Vector,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.geometry.euclidean.oned.Vector1D.getX()
org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormat.format(org.apache.commons.math3.geometry.Vector,java.lang.StringBuffer,java.text.FieldPosition) org.apache.commons.math3.geometry.VectorFormat.format(java.lang.StringBuffer,java.text.FieldPosition,double[])
org.apache.commons.math3.analysis.differentiation.DSCompiler.rootN(double[],int,int,double[],int) java.lang.Object.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.rootN(double[],int,int,double[],int) org.apache.commons.math3.util.FastMath.sqrt(double)
org.apache.commons.math3.analysis.differentiation.DSCompiler.rootN(double[],int,int,double[],int) org.apache.commons.math3.util.FastMath.cbrt(double)
org.apache.commons.math3.analysis.differentiation.DSCompiler.rootN(double[],int,int,double[],int) org.apache.commons.math3.util.FastMath.pow(double,int)
org.apache.commons.math3.analysis.differentiation.DSCompiler.rootN(double[],int,int,double[],int) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.analysis.differentiation.DSCompiler.rootN(double[],int,int,double[],int) org.apache.commons.math3.util.FastMath.pow(double,double)
org.apache.commons.math3.analysis.differentiation.DSCompiler.rootN(double[],int,int,double[],int) org.apache.commons.math3.analysis.differentiation.DSCompiler.compose(double[],int,double[],double[],int)
org.apache.commons.math3.dfp.Dfp.equals(java.lang.Object) java.lang.Object.clinit()
org.apache.commons.math3.dfp.Dfp.equals(java.lang.Object) org.apache.commons.math3.dfp.DfpField.getRadixDigits()
org.apache.commons.math3.dfp.Dfp.equals(java.lang.Object) org.apache.commons.math3.dfp.Dfp.compare(org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)
org.apache.commons.math3.dfp.Dfp.equals(java.lang.Object) org.apache.commons.math3.dfp.Dfp.isNaN()
org.apache.commons.math3.geometry.euclidean.twod.Line.copySelf() java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.twod.Line.copySelf() org.apache.commons.math3.geometry.euclidean.twod.Line.copySelf()
org.apache.commons.math3.geometry.euclidean.twod.Line.copySelf() org.apache.commons.math3.geometry.euclidean.twod.Line(org.apache.commons.math3.geometry.euclidean.twod.Line)
org.apache.commons.math3.fraction.BigFraction.doubleValue() org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.fraction.BigFraction.doubleValue() java.lang.Object.clinit()
org.apache.commons.math3.fraction.BigFraction.doubleValue() java.lang.Double.isNaN(double)
org.apache.commons.math3.fraction.BigFraction.doubleValue() org.apache.commons.math3.util.FastMath.getExponent(double)
org.apache.commons.math3.fraction.BigFraction.doubleValue() java.math.BigInteger.shiftRight(int)
org.apache.commons.math3.fraction.BigFraction.doubleValue() java.math.BigInteger.bitLength()
org.apache.commons.math3.fraction.BigFraction.doubleValue() java.lang.Math.clinit()
org.apache.commons.math3.fraction.BigFraction.doubleValue() java.math.BigInteger.doubleValue()
org.apache.commons.math3.fraction.BigFraction.doubleValue() java.lang.Double.clinit()
org.apache.commons.math3.fraction.BigFraction.doubleValue() java.lang.Math.max(int,int)
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) sun.util.PreHashedMap$1$1.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) javax.security.auth.Subject$SecureSet$1.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) org.apache.commons.math3.linear.RealVector$SparseEntryIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.concurrent.CopyOnWriteArrayList$COWIterator.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) sun.net.www.MessageHeader$HeaderIterator.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) sun.util.PreHashedMap$2$1.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.TreeMap$NavigableSubMap$DescendingSubMapEntryIterator.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Collections$SynchronizedMap.get(java.lang.Object)
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Hashtable$EntrySet.iterator()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) org.apache.commons.math3.util.MultidimensionalCounter$Iterator.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) sun.net.www.HeaderParser$ParserIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.concurrent.ArrayBlockingQueue$Itr.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) javax.print.MimeType$ParameterMapEntrySet.iterator()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.WeakHashMap.size()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) sun.util.PreHashedMap$2$1$1.getValue()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) javax.imageio.ImageIO$ImageWriterIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.JumboEnumSet$EnumSetIterator.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.awt.RenderingHints.size()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.concurrent.ConcurrentHashMap.size()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.LinkedList$ListItr.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.ServiceLoader$LazyIterator.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Hashtable$KeySet.iterator()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) sun.nio.fs.UnixFileSystem$FileStoreIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) sun.misc.SoftCache.size()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.concurrent.DelayQueue$Itr.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) javax.imageio.spi.PartialOrderIterator.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.lang.ProcessEnvironment$StringEnvironment.entrySet()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.TreeMap$NavigableSubMap$SubMapKeyIterator.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.concurrent.ConcurrentHashMap$ValueIterator.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) sun.util.PreHashedMap$2.iterator()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.EnumMap$EntrySet.iterator()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.LinkedList$DescendingIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.EnumMap$EntryIterator$Entry.getKey()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.JumboEnumSet$EnumSetIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.concurrent.ConcurrentHashMap$KeyIterator.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.LinkedList$DescendingIterator.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.concurrent.DelayQueue$Itr.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.JumboEnumSet.iterator()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) sun.util.PreHashedMap$1.iterator()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) sun.util.PreHashedMap$2$1.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.AbstractMap$SimpleImmutableEntry.getValue()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.RegularEnumSet.iterator()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.WeakHashMap$HashIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.IdentityHashMap.entrySet()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.LinkedHashMap$EntryIterator.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.IdentityHashMap$KeyIterator.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Collections$UnmodifiableMap.entrySet()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.IdentityHashMap$ValueIterator.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.WeakHashMap.get(java.lang.Object)
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.AbstractMap$1$1.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.jar.Attributes.entrySet()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) org.apache.commons.math3.linear.RealVector$2$2.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.lang.ProcessEnvironment$StringEntry.getKey()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) com.sun.imageio.plugins.jpeg.ImageTypeIterator.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) javax.imageio.spi.FilterIterator.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.ArrayDeque$DescendingIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.EnumMap$KeySet.iterator()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Hashtable$Enumerator.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) org.apache.commons.math3.linear.RealVector$1.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.HashMap$EntryIterator.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Collections$CheckedMap$CheckedEntrySet$1.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) org.apache.commons.math3.util.MultidimensionalCounter$Iterator.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) javax.security.auth.Subject$SecureSet$1.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) sun.misc.SoftCache$Entry.getKey()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.lang.ProcessEnvironment$StringKeySet.iterator()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.concurrent.CopyOnWriteArrayList$COWSubListIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Collections$UnmodifiableList$1.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Collections$SynchronizedMap.entrySet()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.jar.Attributes.size()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Collections$EmptyMap.get(java.lang.Object)
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.AbstractMap.size()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) sun.nio.cs.FastCharsetProvider$1.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.concurrent.ArrayBlockingQueue$Itr.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.EnumMap.entrySet()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Collections$CheckedList$1.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Vector$Itr.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) sun.util.PreHashedMap$2$1$1.getKey()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) sun.misc.SoftCache.get(java.lang.Object)
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.ArrayList$SubList$1.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Collections$UnmodifiableCollection.iterator()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry.getKey()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Collections$EmptySet.iterator()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Collections$SingletonMap.entrySet()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.security.Provider.entrySet()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Collections$UnmodifiableMap.get(java.lang.Object)
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.WeakHashMap$Entry.getValue()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.HashMap$ValueIterator.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) sun.misc.SoftCache$EntrySet$1.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.lang.ProcessEnvironment$StringEnvironment.get(java.lang.Object)
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.ArrayList$SubList$1.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.HashMap$Entry.getKey()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.concurrent.CopyOnWriteArrayList$COWIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) javax.print.MimeType$ParameterMapEntry.getKey()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.HashMap.get(java.lang.Object)
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.TreeMap$DescendingSubMap.entrySet()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.EnumMap.size()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.concurrent.ConcurrentHashMap$HashIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.TreeMap$NavigableSubMap$DescendingSubMapKeyIterator.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.IdentityHashMap$IdentityHashMapIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Collections$EmptyMap.size()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.lang.ProcessEnvironment$StringEntrySet$1.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) javax.security.auth.Subject$SecureSet.iterator()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Hashtable.size()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) sun.net.www.HeaderParser$ParserIterator.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) sun.nio.ch.Util$2.iterator()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.concurrent.LinkedBlockingDeque$AbstractItr.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) sun.misc.SoftCache$EntrySet.iterator()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) sun.nio.cs.FastCharsetProvider$1.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.EnumMap$KeyIterator.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) sun.nio.fs.AbstractPath$1.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.LinkedList$ListItr.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.HashMap.size()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Collections$EmptyMap.entrySet()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Collections$EmptyIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.TreeMap$NavigableSubMap.get(java.lang.Object)
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Hashtable$Entry.getValue()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry.getValue()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Scanner.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Collections$CheckedCollection$1.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) javax.imageio.spi.FilterIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.ArrayDeque$DescendingIterator.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) sun.misc.SoftCache.entrySet()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.concurrent.ConcurrentHashMap$EntryIterator.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) org.apache.commons.math3.util.CombinatoricsUtils$SingletonIterator.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Collections$SynchronizedMap.size()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.LinkedHashMap$KeyIterator.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) org.apache.commons.math3.linear.RealVector$2$2.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.concurrent.LinkedBlockingQueue$Itr.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Collections$CheckedList$1.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) javax.imageio.ImageIO$ImageWriterIterator.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Collections$SingletonMap.get(java.lang.Object)
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Collections$1.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) org.apache.commons.math3.util.CombinatoricsUtils$LexicographicCombinationIterator.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.IdentityHashMap.get(java.lang.Object)
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.concurrent.LinkedBlockingDeque$AbstractItr.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.concurrent.ConcurrentLinkedQueue$Itr.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.ArrayDeque$DeqIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.LinkedHashMap$LinkedHashIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.concurrent.LinkedBlockingQueue$Itr.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.lang.ProcessEnvironment$StringEntrySet$1.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.TreeMap$NavigableSubMap.size()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) sun.misc.SoftCache$Entry.getValue()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) sun.util.PreHashedMap$1$1.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.WeakHashMap$Entry.getKey()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.TreeMap$DescendingSubMap$DescendingEntrySetView.iterator()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.AbstractMap$1.iterator()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.WeakHashMap$EntryIterator.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.lang.ProcessEnvironment$StringValues$1.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.HashMap$EntrySet.iterator()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) javax.print.MimeType$ParameterMapEntrySetIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.concurrent.ConcurrentHashMap.entrySet()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.WeakHashMap.entrySet()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.AbstractMap$1$1.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Collections$UnmodifiableMap.size()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) javax.swing.UIDefaults$TextAndMnemonicHashMap.get(java.lang.Object)
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Hashtable$Entry.getKey()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.EnumMap.get(java.lang.Object)
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.IdentityHashMap$KeySet.iterator()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.lang.ProcessEnvironment$StringEntrySet$2.getValue()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.AbstractMap$SimpleImmutableEntry.getKey()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) sun.awt.util.IdentityLinkedList$DescendingIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.lang.ProcessEnvironment$StringKeySet$1.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.TreeMap$DescendingKeyIterator.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) javax.imageio.ImageIO$ImageReaderIterator.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.concurrent.ConcurrentHashMap$EntrySet.iterator()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) javax.imageio.ImageIO$ImageReaderIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.TreeMap$PrivateEntryIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.concurrent.ConcurrentHashMap.get(java.lang.Object)
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) sun.misc.Service$LazyIterator.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Collections$CheckedMap.get(java.lang.Object)
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Scanner.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.WeakHashMap$ValueIterator.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) org.apache.commons.math3.linear.RealVector$SparseEntryIterator.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.IdentityHashMap$EntryIterator.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.concurrent.ConcurrentHashMap$KeySet.iterator()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Collections$CheckedCollection.iterator()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.text.AttributeEntry.getValue()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.HashSet.iterator()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.PriorityQueue$Itr.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Hashtable$Enumerator.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.RegularEnumSet$EnumSetIterator.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) javax.print.MimeType$ParameterMapEntrySetIterator.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.text.AttributedString$AttributeMap.entrySet()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.WeakHashMap$KeyIterator.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Collections$CheckedMap$CheckedEntrySet$1.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) sun.util.PreHashedMap.get(java.lang.Object)
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.SubList$1.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.IdentityHashMap$EntryIterator$Entry.getKey()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Collections$EmptyIterator.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Collections$SynchronizedCollection.iterator()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.LinkedHashMap$ValueIterator.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.TreeMap.size()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.ServiceLoader$1.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.TreeMap$NavigableSubMap$SubMapEntryIterator.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.TreeMap$ValueIterator.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) org.apache.commons.math3.util.CombinatoricsUtils$LexicographicCombinationIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.awt.RenderingHints.get(java.lang.Object)
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.AbstractMap$2$1.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.EnumMap$ValueIterator.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) javax.swing.MultiUIDefaults.get(java.lang.Object)
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.AbstractMap.get(java.lang.Object)
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) org.apache.commons.math3.util.DefaultTransformer.equals(java.lang.Object)
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) sun.nio.fs.AbstractPath$1.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.lang.ProcessEnvironment$StringValues$1.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Collections$CheckedMap$CheckedEntrySet.iterator()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.getValue()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.WeakHashMap$KeySet.iterator()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Collections$SetFromMap.iterator()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.TreeMap.get(java.lang.Object)
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.TreeMap$AscendingSubMap.entrySet()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.TreeMap$EntryIterator.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) org.apache.commons.math3.linear.RealVector$1.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) javax.swing.MultiUIDefaults.size()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.jar.Attributes.get(java.lang.Object)
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.IdentityHashMap$EntryIterator$Entry.getValue()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.getKey()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) org.apache.commons.math3.util.CombinatoricsUtils$SingletonIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.lang.ProcessEnvironment$StringEntry.getValue()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) sun.font.AttributeMap.entrySet()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Hashtable.entrySet()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) sun.awt.util.IdentityLinkedList$ListItr.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) javax.imageio.spi.PartiallyOrderedSet.iterator()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.security.Provider.get(java.lang.Object)
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) javax.security.auth.Subject$ClassSet.iterator()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.LinkedHashMap.get(java.lang.Object)
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.EnumMap$EntryIterator.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Collections$UnmodifiableList$1.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) org.apache.commons.math3.linear.RealVector$2$1.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.IdentityHashMap$EntrySet.iterator()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.ArrayList$Itr.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Collections$SingletonMap.size()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.nio.charset.Charset$1.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Collections$CheckedMap.entrySet()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Collections$UnmodifiableCollection$1.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.text.AttributeEntry.getKey()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.TreeMap.entrySet()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.lang.ProcessEnvironment$StringEnvironment.size()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) com.sun.imageio.plugins.jpeg.ImageTypeIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.EnumMap$EntryIterator$Entry.getValue()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.TreeMap$KeyIterator.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.SubList$1.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.lang.ProcessEnvironment$StringKeySet$1.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Collections$CheckedMap.size()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Collections$UnmodifiableCollection$1.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.TreeMap$SubMap.entrySet()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.HashMap$Entry.getValue()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.TreeSet.iterator()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.RegularEnumSet$EnumSetIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.HashMap$KeyIterator.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) sun.misc.SoftCache$EntrySet$1.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) sun.security.jca.ProviderList$ServiceList$1.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.TreeMap$Entry.getKey()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.PriorityQueue$Itr.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Collections$1.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.ArrayList$Itr.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.EnumMap$EnumMapIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.lang.Object.equals(java.lang.Object)
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Hashtable.get(java.lang.Object)
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.AbstractMap$2$1.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.ServiceLoader$1.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) javax.imageio.ImageIO$ImageTranscoderIterator.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.lang.ProcessEnvironment$StringEntrySet.iterator()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.HashMap.entrySet()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) javax.swing.UIDefaults.get(java.lang.Object)
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) sun.security.jca.ProviderList$ServiceList$1.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.IdentityHashMap.size()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object)
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.ServiceLoader$LazyIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.ArrayDeque$DeqIterator.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Vector$Itr.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Collections$SingletonSet.iterator()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) javax.print.MimeType$ParameterMapEntry.getValue()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.AbstractMap$SimpleEntry.getKey()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.lang.ProcessEnvironment$StringEntrySet$2.getKey()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.TreeMap$AscendingSubMap$AscendingEntrySetView.iterator()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Collections$CheckedCollection$1.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.AbstractList$Itr.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue$Itr.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.TreeMap$KeySet.iterator()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.TreeMap$EntrySet.iterator()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) sun.misc.Service$LazyIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.nio.charset.Charset$1.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.concurrent.ConcurrentLinkedQueue$Itr.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) sun.net.www.MessageHeader$HeaderIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) sun.nio.fs.UnixFileSystem$FileStoreIterator.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) sun.util.PreHashedMap.entrySet()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.HashMap$KeySet.iterator()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) sun.awt.util.IdentityLinkedList$DescendingIterator.next()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.WeakHashMap$EntrySet.iterator()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.awt.RenderingHints.entrySet()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.AbstractMap$SimpleEntry.getValue()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) sun.awt.util.IdentityLinkedList$ListItr.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) javax.imageio.spi.PartialOrderIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) javax.swing.MultiUIDefaults.entrySet()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.TreeMap$NavigableSubMap$SubMapIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.text.AttributedString$AttributeMap.get(java.lang.Object)
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.TreeMap$Entry.getValue()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) javax.print.MimeType$ParameterMap.entrySet()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) sun.nio.fs.UnixDirectoryStream$UnixDirectoryIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) javax.imageio.ImageIO$ImageTranscoderIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.AbstractList$Itr.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) java.util.HashMap$HashIterator.hasNext()
org.apache.commons.math3.util.TransformerMap.equals(java.lang.Object) org.apache.commons.math3.linear.RealVector$2$1.hasNext()
org.apache.commons.math3.fraction.ProperBigFractionFormat.parse(java.lang.String,java.text.ParsePosition) org.apache.commons.math3.fraction.BigFraction(java.math.BigInteger,java.math.BigInteger)
org.apache.commons.math3.fraction.ProperBigFractionFormat.parse(java.lang.String,java.text.ParsePosition) org.apache.commons.math3.fraction.BigFractionFormat.parse(java.lang.String,java.text.ParsePosition)
org.apache.commons.math3.fraction.ProperBigFractionFormat.parse(java.lang.String,java.text.ParsePosition) org.apache.commons.math3.fraction.BigFraction.clinit()
org.apache.commons.math3.fraction.ProperBigFractionFormat.parse(java.lang.String,java.text.ParsePosition) java.text.ParsePosition.setErrorIndex(int)
org.apache.commons.math3.fraction.ProperBigFractionFormat.parse(java.lang.String,java.text.ParsePosition) java.math.BigInteger.multiply(java.math.BigInteger)
org.apache.commons.math3.fraction.ProperBigFractionFormat.parse(java.lang.String,java.text.ParsePosition) org.apache.commons.math3.fraction.ProperBigFractionFormat.parse(java.lang.String,java.text.ParsePosition)
org.apache.commons.math3.fraction.ProperBigFractionFormat.parse(java.lang.String,java.text.ParsePosition) java.math.BigInteger.compareTo(java.math.BigInteger)
org.apache.commons.math3.fraction.ProperBigFractionFormat.parse(java.lang.String,java.text.ParsePosition) java.text.NumberFormat.clinit()
org.apache.commons.math3.fraction.ProperBigFractionFormat.parse(java.lang.String,java.text.ParsePosition) java.text.ParsePosition.setIndex(int)
org.apache.commons.math3.fraction.ProperBigFractionFormat.parse(java.lang.String,java.text.ParsePosition) java.math.BigInteger.clinit()
org.apache.commons.math3.fraction.ProperBigFractionFormat.parse(java.lang.String,java.text.ParsePosition) org.apache.commons.math3.fraction.BigFraction(java.math.BigInteger)
org.apache.commons.math3.fraction.ProperBigFractionFormat.parse(java.lang.String,java.text.ParsePosition) java.lang.Object.clinit()
org.apache.commons.math3.fraction.ProperBigFractionFormat.parse(java.lang.String,java.text.ParsePosition) java.math.BigInteger.add(java.math.BigInteger)
org.apache.commons.math3.fraction.ProperBigFractionFormat.parse(java.lang.String,java.text.ParsePosition) org.apache.commons.math3.fraction.BigFractionFormat.parseNextBigInteger(java.lang.String,java.text.ParsePosition)
org.apache.commons.math3.fraction.ProperBigFractionFormat.parse(java.lang.String,java.text.ParsePosition) java.text.ParsePosition.getIndex()
org.apache.commons.math3.fraction.ProperBigFractionFormat.parse(java.lang.String,java.text.ParsePosition) org.apache.commons.math3.fraction.AbstractFormat.parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition)
org.apache.commons.math3.fraction.ProperBigFractionFormat.parse(java.lang.String,java.text.ParsePosition) org.apache.commons.math3.fraction.AbstractFormat.parseNextCharacter(java.lang.String,java.text.ParsePosition)
org.apache.commons.math3.fraction.ProperBigFractionFormat.parse(java.lang.String,java.text.ParsePosition) java.math.BigInteger.negate()
org.apache.commons.math3.analysis.function.Acosh.derivative() org.apache.commons.math3.analysis.function.Cbrt.derivative()
org.apache.commons.math3.analysis.function.Acosh.derivative() org.apache.commons.math3.analysis.function.Minus.derivative()
org.apache.commons.math3.analysis.function.Acosh.derivative() org.apache.commons.math3.analysis.function.Tanh.derivative()
org.apache.commons.math3.analysis.function.Acosh.derivative() org.apache.commons.math3.analysis.FunctionUtils.toDifferentiableUnivariateFunction(org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction)
org.apache.commons.math3.analysis.function.Acosh.derivative() org.apache.commons.math3.analysis.function.Expm1.derivative()
org.apache.commons.math3.analysis.function.Acosh.derivative() org.apache.commons.math3.analysis.function.Power.derivative()
org.apache.commons.math3.analysis.function.Acosh.derivative() org.apache.commons.math3.analysis.function.Logit.derivative()
org.apache.commons.math3.analysis.function.Acosh.derivative() org.apache.commons.math3.analysis.function.Sinc.derivative()
org.apache.commons.math3.analysis.function.Acosh.derivative() org.apache.commons.math3.analysis.function.Constant.derivative()
org.apache.commons.math3.analysis.function.Acosh.derivative() org.apache.commons.math3.analysis.function.Log10.derivative()
org.apache.commons.math3.analysis.function.Acosh.derivative() org.apache.commons.math3.analysis.function.Sigmoid.derivative()
org.apache.commons.math3.analysis.function.Acosh.derivative() org.apache.commons.math3.analysis.function.Acosh.derivative()
org.apache.commons.math3.analysis.function.Acosh.derivative() org.apache.commons.math3.analysis.function.Exp.derivative()
org.apache.commons.math3.analysis.function.Acosh.derivative() org.apache.commons.math3.analysis.function.Sinh.derivative()
org.apache.commons.math3.analysis.function.Acosh.derivative() java.lang.Object.clinit()
org.apache.commons.math3.analysis.function.Acosh.derivative() org.apache.commons.math3.analysis.polynomials.PolynomialFunction.derivative()
org.apache.commons.math3.analysis.function.Acosh.derivative() org.apache.commons.math3.analysis.function.Gaussian.derivative()
org.apache.commons.math3.analysis.function.Acosh.derivative() org.apache.commons.math3.analysis.function.Atanh.derivative()
org.apache.commons.math3.analysis.function.Acosh.derivative() org.apache.commons.math3.analysis.function.Sqrt.derivative()
org.apache.commons.math3.analysis.function.Acosh.derivative() org.apache.commons.math3.analysis.FunctionUtils$3.derivative()
org.apache.commons.math3.analysis.function.Acosh.derivative() org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.derivative()
org.apache.commons.math3.analysis.function.Acosh.derivative() org.apache.commons.math3.analysis.function.Log1p.derivative()
org.apache.commons.math3.analysis.function.Acosh.derivative() org.apache.commons.math3.analysis.function.Asin.derivative()
org.apache.commons.math3.analysis.function.Acosh.derivative() org.apache.commons.math3.analysis.function.Cos.derivative()
org.apache.commons.math3.analysis.function.Acosh.derivative() org.apache.commons.math3.analysis.function.Asinh.derivative()
org.apache.commons.math3.analysis.function.Acosh.derivative() org.apache.commons.math3.analysis.function.Tan.derivative()
org.apache.commons.math3.analysis.function.Acosh.derivative() org.apache.commons.math3.analysis.FunctionUtils$6.derivative()
org.apache.commons.math3.analysis.function.Acosh.derivative() org.apache.commons.math3.analysis.function.Log.derivative()
org.apache.commons.math3.analysis.function.Acosh.derivative() org.apache.commons.math3.analysis.function.Atan.derivative()
org.apache.commons.math3.analysis.function.Acosh.derivative() org.apache.commons.math3.analysis.function.Acos.derivative()
org.apache.commons.math3.analysis.function.Acosh.derivative() org.apache.commons.math3.analysis.FunctionUtils$14.derivative()
org.apache.commons.math3.analysis.function.Acosh.derivative() org.apache.commons.math3.analysis.function.Identity.derivative()
org.apache.commons.math3.analysis.function.Acosh.derivative() org.apache.commons.math3.analysis.function.Cosh.derivative()
org.apache.commons.math3.analysis.function.Acosh.derivative() org.apache.commons.math3.analysis.FunctionUtils$9.derivative()
org.apache.commons.math3.analysis.function.Acosh.derivative() org.apache.commons.math3.analysis.function.Logistic.derivative()
org.apache.commons.math3.analysis.function.Acosh.derivative() org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative()
org.apache.commons.math3.analysis.function.Acosh.derivative() org.apache.commons.math3.analysis.function.Inverse.derivative()
org.apache.commons.math3.analysis.function.Acosh.derivative() org.apache.commons.math3.analysis.function.Sin.derivative()
org.apache.commons.math3.geometry.euclidean.threed.Plane.intersection(org.apache.commons.math3.geometry.euclidean.threed.Plane) org.apache.commons.math3.geometry.euclidean.threed.Vector3D.crossProduct(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
org.apache.commons.math3.geometry.euclidean.threed.Plane.intersection(org.apache.commons.math3.geometry.euclidean.threed.Plane) org.apache.commons.math3.geometry.euclidean.threed.Plane(org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
org.apache.commons.math3.geometry.euclidean.threed.Plane.intersection(org.apache.commons.math3.geometry.euclidean.threed.Plane) java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.threed.Plane.intersection(org.apache.commons.math3.geometry.euclidean.threed.Plane) org.apache.commons.math3.geometry.euclidean.threed.Vector3D.clinit()
org.apache.commons.math3.geometry.euclidean.threed.Plane.intersection(org.apache.commons.math3.geometry.euclidean.threed.Plane) org.apache.commons.math3.geometry.euclidean.threed.Plane.intersection(org.apache.commons.math3.geometry.euclidean.threed.Plane,org.apache.commons.math3.geometry.euclidean.threed.Plane,org.apache.commons.math3.geometry.euclidean.threed.Plane)
org.apache.commons.math3.geometry.euclidean.threed.Plane.intersection(org.apache.commons.math3.geometry.euclidean.threed.Plane) org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getNorm()
org.apache.commons.math3.geometry.euclidean.threed.Plane.intersection(org.apache.commons.math3.geometry.euclidean.threed.Plane) org.apache.commons.math3.geometry.euclidean.threed.Vector3D.add(org.apache.commons.math3.geometry.Vector)
org.apache.commons.math3.geometry.euclidean.threed.Plane.intersection(org.apache.commons.math3.geometry.euclidean.threed.Plane) org.apache.commons.math3.geometry.euclidean.threed.Line(org.apache.commons.math3.geometry.euclidean.threed.Vector3D,org.apache.commons.math3.geometry.euclidean.threed.Vector3D)
org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormat.getInstance() java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormat.getInstance() org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormat.getInstance(java.util.Locale)
org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormat.getInstance() java.util.Locale.clinit()
org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormat.getInstance() java.util.Locale.getDefault()
org.apache.commons.math3.random.ISAACRandom.isaac2() org.apache.commons.math3.random.ISAACRandom.isaac3()
org.apache.commons.math3.util.FastMath.log10(double) java.lang.Object.clinit()
org.apache.commons.math3.util.FastMath.log10(double) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.util.FastMath.log10(double) java.lang.Double.clinit()
org.apache.commons.math3.util.FastMath.log10(double) org.apache.commons.math3.util.FastMath.log(double,double[])
org.apache.commons.math3.util.FastMath.log10(double) java.lang.Double.isInfinite(double)
org.apache.commons.math3.optim.nonlinear.scalar.GoalType.clinit() org.apache.commons.math3.optim.nonlinear.scalar.GoalType(java.lang.String,int)
org.apache.commons.math3.optim.nonlinear.scalar.GoalType.clinit() java.lang.Object.clinit()
org.apache.commons.math3.optim.nonlinear.scalar.GoalType.clinit() org.apache.commons.math3.optim.nonlinear.scalar.GoalType.clinit()
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.isNaN() java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.isNaN() java.lang.Double.isNaN(double)
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.isNaN() java.lang.Double.clinit()
org.apache.commons.math3.fraction.AbstractFormat.parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition) java.lang.Object.clinit()
org.apache.commons.math3.fraction.AbstractFormat.parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition) java.text.ParsePosition.getIndex()
org.apache.commons.math3.fraction.AbstractFormat.parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition) org.apache.commons.math3.fraction.AbstractFormat.parseNextCharacter(java.lang.String,java.text.ParsePosition)
org.apache.commons.math3.fraction.AbstractFormat.parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition) java.text.ParsePosition.setIndex(int)
org.apache.commons.math3.fraction.AbstractFormat.parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition) java.text.NumberFormat.clinit()
org.apache.commons.math3.random.RandomGeneratorFactory$1.nextBytes(byte[]) java.security.SecureRandom.nextBytes(byte[])
org.apache.commons.math3.random.RandomGeneratorFactory$1.nextBytes(byte[]) org.apache.commons.math3.random.RandomAdaptor.nextBytes(byte[])
org.apache.commons.math3.random.RandomGeneratorFactory$1.nextBytes(byte[]) java.util.Random.nextBytes(byte[])
org.apache.commons.math3.util.CompositeFormat.getDefaultNumberFormat(java.util.Locale) java.lang.Object.clinit()
org.apache.commons.math3.util.CompositeFormat.getDefaultNumberFormat(java.util.Locale) java.text.NumberFormat.setMaximumFractionDigits(int)
org.apache.commons.math3.util.CompositeFormat.getDefaultNumberFormat(java.util.Locale) java.text.DecimalFormat.setMaximumFractionDigits(int)
org.apache.commons.math3.util.CompositeFormat.getDefaultNumberFormat(java.util.Locale) java.text.NumberFormat.clinit()
org.apache.commons.math3.util.CompositeFormat.getDefaultNumberFormat(java.util.Locale) java.text.NumberFormat.getInstance(java.util.Locale)
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getGeometricMean() org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getResults(org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic[])
org.apache.commons.math3.geometry.euclidean.twod.Line.getAngle() java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.twod.Line.getAngle() org.apache.commons.math3.util.MathUtils.normalizeAngle(double,double)
org.apache.commons.math3.dfp.DfpDec(org.apache.commons.math3.dfp.DfpField,java.lang.String) org.apache.commons.math3.dfp.Dfp(org.apache.commons.math3.dfp.DfpField,java.lang.String)
org.apache.commons.math3.dfp.DfpDec(org.apache.commons.math3.dfp.DfpField,java.lang.String) org.apache.commons.math3.dfp.DfpDec.round(int)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ComparableSegment.hashCode() org.apache.commons.math3.geometry.euclidean.twod.Segment.getLine()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ComparableSegment.hashCode() org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.hashCode()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ComparableSegment.hashCode() org.apache.commons.math3.geometry.euclidean.twod.Segment.getEnd()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ComparableSegment.hashCode() org.apache.commons.math3.geometry.euclidean.twod.Vector2D.hashCode()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ComparableSegment.hashCode() java.lang.Object.hashCode()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ComparableSegment.hashCode() org.apache.commons.math3.geometry.euclidean.twod.Segment.getStart()
org.apache.commons.math3.ml.clustering.DoublePoint.equals(java.lang.Object) java.util.Arrays.equals(double[],double[])
org.apache.commons.math3.ml.clustering.DoublePoint.equals(java.lang.Object) java.lang.Object.clinit()
org.apache.commons.math3.ml.clustering.DoublePoint.equals(java.lang.Object) java.util.Arrays.clinit()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) sun.text.CompactByteArray.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.awt.geom.AffineTransform.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.util.Hashtable.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) sun.security.krb5.internal.KerberosTime.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) sun.security.krb5.internal.Ticket.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) sun.text.IntHashtable.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) sun.security.util.BitArray.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) com.sun.imageio.plugins.jpeg.DHTMarkerSegment$Htable.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.util.SimpleTimeZone.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.util.IdentityHashMap.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.util.JapaneseImperialCalendar.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) sun.security.krb5.internal.ETypeInfo.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) sun.text.normalizer.NormalizerBase.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.util.Locale.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) sun.security.krb5.internal.TicketFlags.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) sun.java2d.SunGraphics2D.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) sun.security.provider.MD4.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) javax.swing.tree.DefaultTreeSelectionModel.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.awt.print.Paper.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.text.MessageFormat.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.lang.Object.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) javax.swing.text.SimpleAttributeSet.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) javax.swing.ArrayTable.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.text.SimpleDateFormat.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) sun.java2d.loops.FontInfo.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) sun.security.krb5.PrincipalName.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.awt.PageAttributes.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) com.sun.imageio.plugins.png.PNGMetadata.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.util.GregorianCalendar.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) com.sun.imageio.plugins.jpeg.SOFMarkerSegment.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.util.Vector.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) javax.swing.text.ElementIterator.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) org.apache.commons.math3.linear.AbstractRealMatrix()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.net.HttpCookie.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.awt.datatransfer.MimeType.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.awt.RenderingHints.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.text.DateFormatSymbols.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.util.HashSet.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) sun.util.calendar.ImmutableGregorianDate.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) javax.sound.midi.MetaMessage.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) sun.font.FontLineMetrics.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) sun.font.StandardGlyphVector.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.text.AttributedString$AttributedStringIterator.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.text.RuleBasedBreakIterator.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) javax.swing.text.Segment.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.awt.ImageCapabilities.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) sun.security.krb5.internal.LastReqEntry.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) javax.swing.text.StyleContext$SmallAttributeSet.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.text.RuleBasedCollator.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.text.RuleBasedBreakIterator$SafeCharIterator.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) javax.swing.text.ElementIterator$StackItem.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$ICCMarkerSegment.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.awt.geom.Line2D.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.util.ResourceBundle$CacheKey.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumbJPEG.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) sun.security.krb5.internal.ETypeInfo2.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.awt.font.TextMeasurer.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.util.LinkedList.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) sun.font.AttributeValues.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) javax.swing.text.StyledEditorKit$1.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.util.ArrayDeque.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) javax.swing.text.GlyphView.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.awt.datatransfer.DataFlavor.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) sun.security.krb5.internal.PAData.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) javax.swing.AbstractAction.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) sun.text.normalizer.ReplaceableUCharacterIterator.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.util.concurrent.CopyOnWriteArrayList.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumb.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.awt.geom.Point2D.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) javax.swing.text.html.OptionListModel.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) sun.security.krb5.internal.AuthorizationDataEntry.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) javax.swing.text.EditorKit.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) javax.swing.text.StyledEditorKit.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) com.sun.imageio.plugins.jpeg.DQTMarkerSegment.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.util.JumboEnumSet.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) sun.security.krb5.internal.HostAddresses.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) javax.crypto.Mac.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) javax.naming.Reference.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) com.sun.imageio.plugins.jpeg.SOSMarkerSegment.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.util.jar.Manifest.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) sun.security.krb5.EncryptedData.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.text.NumberFormat.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) sun.net.ProgressSource.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.util.EnumSet.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) sun.net.www.protocol.http.AuthenticationInfo.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.awt.datatransfer.MimeTypeParameterList.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.util.regex.Pattern$CharPropertyNames$CloneableProperty.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.security.SignatureSpi.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) sun.security.x509.GeneralSubtrees.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) org.apache.commons.math3.util.MathUtils.checkNotNull(java.lang.Object)
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.util.ArrayList.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) com.sun.imageio.plugins.jpeg.DHTMarkerSegment.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) javax.naming.CompositeName.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.awt.font.CharArrayIterator.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.security.Signature$Delegate.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.util.TreeSet.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.util.Hashtable$Entry.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.awt.image.ImageFilter.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) com.sun.imageio.plugins.jpeg.SOSMarkerSegment$ScanComponentSpec.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.awt.geom.Path2D$Float.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) sun.security.krb5.EncryptionKey.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.text.DecimalFormat.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.awt.BufferCapabilities.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.awt.image.Kernel.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.util.Date.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.awt.Insets.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) sun.net.www.MimeEntry.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) sun.util.calendar.CalendarDate.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.awt.print.PageFormat.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) com.sun.imageio.plugins.jpeg.SOFMarkerSegment$ComponentSpec.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.util.EnumMap.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) sun.security.krb5.internal.AuthorizationData.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFExtensionMarkerSegment.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.awt.geom.QuadCurve2D.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) sun.security.krb5.internal.crypto.crc32.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.util.zip.ZipEntry.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.security.MessageDigest$Delegate.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) sun.util.calendar.ZoneInfo.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) sun.text.normalizer.CharacterIteratorWrapper.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.lang.Object.clinit()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.text.DecimalFormatSymbols.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.awt.font.TextLayout.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) javax.swing.DefaultListSelectionModel.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.text.DigitList.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) javax.print.attribute.EnumSyntax.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) javax.sound.midi.ShortMessage.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.awt.geom.CubicCurve2D.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.text.ChoiceFormat.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.lang.Thread.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) com.sun.imageio.plugins.jpeg.MarkerSegment.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.awt.image.renderable.RenderContext.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) sun.security.krb5.Realm.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) com.sun.imageio.plugins.jpeg.DQTMarkerSegment$Qtable.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.awt.JobAttributes.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) com.sun.imageio.plugins.jpeg.JPEGMetadata.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.text.StringCharacterIterator.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.awt.geom.Dimension2D.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) sun.security.x509.NameConstraintsExtension.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.awt.geom.Area.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.util.jar.Attributes.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) sun.security.krb5.internal.HostAddress.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.util.TreeMap.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.awt.geom.Path2D$Double.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.text.BreakIterator.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.util.BitSet.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.lang.Enum.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.util.AbstractMap.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) javax.swing.tree.DefaultMutableTreeNode.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.awt.geom.RectangularShape.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) sun.security.provider.PolicyParser$GrantEntry.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) java.util.HashMap.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.clone()
org.apache.commons.math3.linear.DiagonalMatrix(double[],boolean) javax.swing.text.html.HTMLEditorKit.clone()
org.apache.commons.math3.linear.ArrayFieldVector.hashCode() org.apache.commons.math3.fraction.BigFraction.hashCode()
org.apache.commons.math3.linear.ArrayFieldVector.hashCode() org.apache.commons.math3.util.Decimal64.hashCode()
org.apache.commons.math3.linear.ArrayFieldVector.hashCode() org.apache.commons.math3.dfp.Dfp.hashCode()
org.apache.commons.math3.linear.ArrayFieldVector.hashCode() org.apache.commons.math3.util.BigReal.hashCode()
org.apache.commons.math3.linear.ArrayFieldVector.hashCode() java.lang.Object.hashCode()
org.apache.commons.math3.linear.ArrayFieldVector.hashCode() org.apache.commons.math3.fraction.Fraction.hashCode()
org.apache.commons.math3.linear.ArrayFieldVector.hashCode() org.apache.commons.math3.analysis.differentiation.DerivativeStructure.hashCode()
org.apache.commons.math3.linear.ArrayFieldVector.hashCode() org.apache.commons.math3.complex.Complex.hashCode()
org.apache.commons.math3.util.FastMath$ExpFracTable.clinit() java.lang.Object.clinit()
org.apache.commons.math3.util.FastMath$ExpFracTable.clinit() org.apache.commons.math3.util.FastMathLiteralArrays.clinit()
org.apache.commons.math3.util.FastMath$ExpFracTable.clinit() org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB()
org.apache.commons.math3.util.FastMath$ExpFracTable.clinit() org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA()
org.apache.commons.math3.util.FastMath$ExpFracTable.clinit() org.apache.commons.math3.util.FastMath$ExpFracTable.clinit()
org.apache.commons.math3.exception.util.ExceptionContext.getMessage(java.util.Locale) org.apache.commons.math3.exception.util.ExceptionContext.buildMessage(java.util.Locale,java.lang.String)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.buildNew(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet(org.apache.commons.math3.geometry.partitioning.BSPTree)
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.buildNew(org.apache.commons.math3.geometry.partitioning.BSPTree) java.lang.Object.clinit()
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.buildNew(org.apache.commons.math3.geometry.partitioning.BSPTree) org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.buildNew(org.apache.commons.math3.geometry.partitioning.BSPTree)
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet() org.apache.commons.math3.geometry.partitioning.AbstractRegion()
org.apache.commons.math3.dfp.Dfp.multiply(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.Dfp.newInstance(org.apache.commons.math3.dfp.Dfp)
org.apache.commons.math3.dfp.Dfp.multiply(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.Dfp.round(int)
org.apache.commons.math3.dfp.Dfp.multiply(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.Dfp.dotrap(int,java.lang.String,org.apache.commons.math3.dfp.Dfp,org.apache.commons.math3.dfp.Dfp)
org.apache.commons.math3.dfp.Dfp.multiply(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.DfpField.getRadixDigits()
org.apache.commons.math3.dfp.Dfp.multiply(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.DfpDec.round(int)
org.apache.commons.math3.dfp.Dfp.multiply(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.DfpField.setIEEEFlagsBits(int)
org.apache.commons.math3.dfp.Dfp.multiply(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.Dfp.getZero()
org.apache.commons.math3.dfp.Dfp.multiply(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.Dfp.isNaN()
org.apache.commons.math3.dfp.Dfp.multiply(org.apache.commons.math3.dfp.Dfp) org.apache.commons.math3.dfp.DfpDec.newInstance(org.apache.commons.math3.dfp.Dfp)
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree() java.lang.Object()
org.apache.commons.math3.geometry.partitioning.BSPTree(java.lang.Object) java.lang.Object()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() sun.text.CompactByteArray.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.awt.geom.AffineTransform.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() sun.security.krb5.internal.KerberosTime.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.util.Hashtable.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() sun.security.krb5.internal.Ticket.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() sun.text.IntHashtable.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() sun.security.util.BitArray.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() com.sun.imageio.plugins.jpeg.DHTMarkerSegment$Htable.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.util.SimpleTimeZone.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.util.IdentityHashMap.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.util.JapaneseImperialCalendar.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() sun.security.krb5.internal.ETypeInfo.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() sun.text.normalizer.NormalizerBase.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.util.Locale.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() sun.security.krb5.internal.TicketFlags.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() sun.java2d.SunGraphics2D.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() sun.security.provider.MD4.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() javax.swing.tree.DefaultTreeSelectionModel.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.awt.print.Paper.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.text.MessageFormat.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.lang.Object.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() javax.swing.text.SimpleAttributeSet.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() javax.swing.ArrayTable.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.text.SimpleDateFormat.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() sun.java2d.loops.FontInfo.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() sun.security.krb5.PrincipalName.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.awt.PageAttributes.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() com.sun.imageio.plugins.png.PNGMetadata.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.util.GregorianCalendar.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() com.sun.imageio.plugins.jpeg.SOFMarkerSegment.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.util.Vector.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() javax.swing.text.ElementIterator.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.net.HttpCookie.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.awt.datatransfer.MimeType.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.awt.RenderingHints.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.text.DateFormatSymbols.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.util.HashSet.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() sun.util.calendar.ImmutableGregorianDate.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() javax.sound.midi.MetaMessage.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() sun.font.FontLineMetrics.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() sun.font.StandardGlyphVector.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.text.AttributedString$AttributedStringIterator.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.text.RuleBasedBreakIterator.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() javax.swing.text.Segment.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.awt.ImageCapabilities.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() sun.security.krb5.internal.LastReqEntry.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() javax.swing.text.StyleContext$SmallAttributeSet.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.text.RuleBasedCollator.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.text.RuleBasedBreakIterator$SafeCharIterator.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() javax.swing.text.ElementIterator$StackItem.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$ICCMarkerSegment.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.awt.geom.Line2D.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() org.apache.commons.math3.util.FastMathLiteralArrays.clinit()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.util.ResourceBundle$CacheKey.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumbJPEG.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() sun.security.krb5.internal.ETypeInfo2.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.awt.font.TextMeasurer.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.util.LinkedList.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() sun.font.AttributeValues.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() javax.swing.text.StyledEditorKit$1.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.util.ArrayDeque.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() javax.swing.text.GlyphView.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.awt.datatransfer.DataFlavor.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() sun.security.krb5.internal.PAData.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() javax.swing.AbstractAction.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() sun.text.normalizer.ReplaceableUCharacterIterator.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.util.concurrent.CopyOnWriteArrayList.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFThumb.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.awt.geom.Point2D.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() javax.swing.text.html.OptionListModel.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() sun.security.krb5.internal.AuthorizationDataEntry.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() javax.swing.text.EditorKit.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() javax.swing.text.StyledEditorKit.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() com.sun.imageio.plugins.jpeg.DQTMarkerSegment.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.util.JumboEnumSet.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() sun.security.krb5.internal.HostAddresses.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() javax.crypto.Mac.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() javax.naming.Reference.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() com.sun.imageio.plugins.jpeg.SOSMarkerSegment.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.util.jar.Manifest.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() sun.security.krb5.EncryptedData.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.text.NumberFormat.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() sun.net.ProgressSource.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.util.EnumSet.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() sun.net.www.protocol.http.AuthenticationInfo.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.awt.datatransfer.MimeTypeParameterList.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.util.regex.Pattern$CharPropertyNames$CloneableProperty.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.security.SignatureSpi.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() sun.security.x509.GeneralSubtrees.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.util.ArrayList.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() com.sun.imageio.plugins.jpeg.DHTMarkerSegment.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() javax.naming.CompositeName.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.awt.font.CharArrayIterator.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.security.Signature$Delegate.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.util.TreeSet.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.util.Hashtable$Entry.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.awt.image.ImageFilter.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() com.sun.imageio.plugins.jpeg.SOSMarkerSegment$ScanComponentSpec.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.awt.geom.Path2D$Float.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() sun.security.krb5.EncryptionKey.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.text.DecimalFormat.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.awt.BufferCapabilities.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.awt.image.Kernel.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.util.Date.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.awt.Insets.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() sun.net.www.MimeEntry.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() sun.util.calendar.CalendarDate.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.awt.print.PageFormat.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() com.sun.imageio.plugins.jpeg.SOFMarkerSegment$ComponentSpec.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.util.EnumMap.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() sun.security.krb5.internal.AuthorizationData.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() com.sun.imageio.plugins.jpeg.JFIFMarkerSegment$JFIFExtensionMarkerSegment.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.awt.geom.QuadCurve2D.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() sun.security.krb5.internal.crypto.crc32.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.util.zip.ZipEntry.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.security.MessageDigest$Delegate.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() sun.util.calendar.ZoneInfo.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() sun.text.normalizer.CharacterIteratorWrapper.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.lang.Object.clinit()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.text.DecimalFormatSymbols.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.awt.font.TextLayout.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() javax.swing.DefaultListSelectionModel.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.text.DigitList.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() javax.print.attribute.EnumSyntax.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() javax.sound.midi.ShortMessage.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.awt.geom.CubicCurve2D.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.text.ChoiceFormat.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.lang.Thread.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() com.sun.imageio.plugins.jpeg.MarkerSegment.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.awt.image.renderable.RenderContext.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() sun.security.krb5.Realm.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() com.sun.imageio.plugins.jpeg.DQTMarkerSegment$Qtable.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.awt.JobAttributes.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() com.sun.imageio.plugins.jpeg.JPEGMetadata.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.text.StringCharacterIterator.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.awt.geom.Dimension2D.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() sun.security.x509.NameConstraintsExtension.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.awt.geom.Area.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.util.jar.Attributes.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() sun.security.krb5.internal.HostAddress.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.util.TreeMap.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.awt.geom.Path2D$Double.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.text.BreakIterator.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.util.BitSet.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.lang.Enum.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.util.AbstractMap.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() javax.swing.tree.DefaultMutableTreeNode.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.awt.geom.RectangularShape.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() sun.security.provider.PolicyParser$GrantEntry.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() java.util.HashMap.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.clone()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB() javax.swing.text.html.HTMLEditorKit.clone()
org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization$DataRow.hashCode() java.lang.Object.clinit()
org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization$DataRow.hashCode() java.util.Arrays.hashCode(double[])
org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization$DataRow.hashCode() java.util.Arrays.clinit()
org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizer$1.compare(org.apache.commons.math3.optim.univariate.UnivariatePointValuePair,org.apache.commons.math3.optim.univariate.UnivariatePointValuePair) org.apache.commons.math3.optim.univariate.UnivariatePointValuePair.getValue()
org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizer$1.compare(org.apache.commons.math3.optim.univariate.UnivariatePointValuePair,org.apache.commons.math3.optim.univariate.UnivariatePointValuePair) java.lang.Object.clinit()
org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizer$1.compare(org.apache.commons.math3.optim.univariate.UnivariatePointValuePair,org.apache.commons.math3.optim.univariate.UnivariatePointValuePair) java.lang.Double.compare(double,double)
org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizer$1.compare(org.apache.commons.math3.optim.univariate.UnivariatePointValuePair,org.apache.commons.math3.optim.univariate.UnivariatePointValuePair) org.apache.commons.math3.optim.nonlinear.scalar.GoalType.clinit()
org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizer$1.compare(org.apache.commons.math3.optim.univariate.UnivariatePointValuePair,org.apache.commons.math3.optim.univariate.UnivariatePointValuePair) java.lang.Double.clinit()
org.apache.commons.math3.ode.ExpandableStatefulODE.getTotalDimension() java.util.Collections$SynchronizedCollection.size()
org.apache.commons.math3.ode.ExpandableStatefulODE.getTotalDimension() sun.security.jca.ProviderList$3.get(int)
org.apache.commons.math3.ode.ExpandableStatefulODE.getTotalDimension() java.util.SubList.size()
org.apache.commons.math3.ode.ExpandableStatefulODE.getTotalDimension() java.util.concurrent.CopyOnWriteArrayList.get(int)
org.apache.commons.math3.ode.ExpandableStatefulODE.getTotalDimension() java.util.Collections$CheckedList.get(int)
org.apache.commons.math3.ode.ExpandableStatefulODE.getTotalDimension() java.util.Collections$UnmodifiableCollection.size()
org.apache.commons.math3.ode.ExpandableStatefulODE.getTotalDimension() sun.awt.util.IdentityArrayList.isEmpty()
org.apache.commons.math3.ode.ExpandableStatefulODE.getTotalDimension() java.util.Collections$CopiesList.get(int)
org.apache.commons.math3.ode.ExpandableStatefulODE.getTotalDimension() java.util.Arrays$ArrayList.size()
org.apache.commons.math3.ode.ExpandableStatefulODE.getTotalDimension() java.util.ArrayList.isEmpty()
org.apache.commons.math3.ode.ExpandableStatefulODE.getTotalDimension() java.util.concurrent.CopyOnWriteArrayList$COWSubList.get(int)
org.apache.commons.math3.ode.ExpandableStatefulODE.getTotalDimension() java.util.Arrays$ArrayList.get(int)
org.apache.commons.math3.ode.ExpandableStatefulODE.getTotalDimension() java.util.Vector.get(int)
org.apache.commons.math3.ode.ExpandableStatefulODE.getTotalDimension() java.util.concurrent.CopyOnWriteArrayList$COWSubList.size()
org.apache.commons.math3.ode.ExpandableStatefulODE.getTotalDimension() java.util.SubList.get(int)
org.apache.commons.math3.ode.ExpandableStatefulODE.getTotalDimension() java.util.LinkedList.get(int)
org.apache.commons.math3.ode.ExpandableStatefulODE.getTotalDimension() java.util.Collections$SingletonList.size()
org.apache.commons.math3.ode.ExpandableStatefulODE.getTotalDimension() sun.security.jca.ProviderList$ServiceList.get(int)
org.apache.commons.math3.ode.ExpandableStatefulODE.getTotalDimension() java.util.Collections$CheckedCollection.isEmpty()
org.apache.commons.math3.ode.ExpandableStatefulODE.getTotalDimension() java.util.Collections$UnmodifiableCollection.isEmpty()
org.apache.commons.math3.ode.ExpandableStatefulODE.getTotalDimension() java.util.ArrayList$SubList.size()
org.apache.commons.math3.ode.ExpandableStatefulODE.getTotalDimension() java.util.Vector.isEmpty()
org.apache.commons.math3.ode.ExpandableStatefulODE.getTotalDimension() org.apache.commons.math3.ode.EquationsMapper.getDimension()
org.apache.commons.math3.ode.ExpandableStatefulODE.getTotalDimension() java.util.concurrent.CopyOnWriteArrayList.isEmpty()
org.apache.commons.math3.ode.ExpandableStatefulODE.getTotalDimension() sun.awt.util.IdentityLinkedList.size()
org.apache.commons.math3.ode.ExpandableStatefulODE.getTotalDimension() sun.awt.util.IdentityArrayList.size()
org.apache.commons.math3.ode.ExpandableStatefulODE.getTotalDimension() sun.security.jca.ProviderList$ServiceList.size()
org.apache.commons.math3.ode.ExpandableStatefulODE.getTotalDimension() java.util.concurrent.CopyOnWriteArrayList.size()
org.apache.commons.math3.ode.ExpandableStatefulODE.getTotalDimension() java.util.LinkedList.size()
org.apache.commons.math3.ode.ExpandableStatefulODE.getTotalDimension() java.util.Collections$SynchronizedList.get(int)
org.apache.commons.math3.ode.ExpandableStatefulODE.getTotalDimension() java.util.Collections$EmptyList.size()
org.apache.commons.math3.ode.ExpandableStatefulODE.getTotalDimension() java.util.Collections$SingletonList.get(int)
org.apache.commons.math3.ode.ExpandableStatefulODE.getTotalDimension() java.util.ArrayList.get(int)
org.apache.commons.math3.ode.ExpandableStatefulODE.getTotalDimension() java.util.Vector.size()
org.apache.commons.math3.ode.ExpandableStatefulODE.getTotalDimension() java.lang.Object.clinit()
org.apache.commons.math3.ode.ExpandableStatefulODE.getTotalDimension() java.util.Collections$CopiesList.size()
org.apache.commons.math3.ode.ExpandableStatefulODE.getTotalDimension() sun.security.jca.ProviderList$3.size()
org.apache.commons.math3.ode.ExpandableStatefulODE.getTotalDimension() sun.awt.util.IdentityArrayList.get(int)
org.apache.commons.math3.ode.ExpandableStatefulODE.getTotalDimension() org.apache.commons.math3.ode.EquationsMapper.getFirstIndex()
org.apache.commons.math3.ode.ExpandableStatefulODE.getTotalDimension() org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent.access$000(org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent)
org.apache.commons.math3.ode.ExpandableStatefulODE.getTotalDimension() java.util.ArrayList$SubList.get(int)
org.apache.commons.math3.ode.ExpandableStatefulODE.getTotalDimension() java.util.ArrayList.size()
org.apache.commons.math3.ode.ExpandableStatefulODE.getTotalDimension() java.util.Collections$CheckedCollection.size()
org.apache.commons.math3.ode.ExpandableStatefulODE.getTotalDimension() java.util.Collections$SynchronizedCollection.isEmpty()
org.apache.commons.math3.ode.ExpandableStatefulODE.getTotalDimension() sun.security.jca.ProviderList$ServiceList.isEmpty()
org.apache.commons.math3.ode.ExpandableStatefulODE.getTotalDimension() java.util.AbstractCollection.isEmpty()
org.apache.commons.math3.ode.ExpandableStatefulODE.getTotalDimension() java.util.Collections$EmptyList.isEmpty()
org.apache.commons.math3.ode.ExpandableStatefulODE.getTotalDimension() sun.awt.util.IdentityLinkedList.get(int)
org.apache.commons.math3.ode.ExpandableStatefulODE.getTotalDimension() java.util.Collections$EmptyList.get(int)
org.apache.commons.math3.ode.ExpandableStatefulODE.getTotalDimension() java.util.Collections$UnmodifiableList.get(int)
org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics$AggregatingSummaryStatistics.hashCode() org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.hashCode()
org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics$AggregatingSummaryStatistics.hashCode() org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics$AggregatingSummaryStatistics.hashCode()
org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics$AggregatingSummaryStatistics.hashCode() org.apache.commons.math3.stat.descriptive.SummaryStatistics.hashCode()
org.apache.commons.math3.special.Beta.regularizedBeta(double,double,double,double,int) org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.special.Beta.regularizedBeta(double,double,double,double,int) java.lang.Object.clinit()
org.apache.commons.math3.special.Beta.regularizedBeta(double,double,double,double,int) org.apache.commons.math3.util.ContinuedFraction.evaluate(double,double,int)
org.apache.commons.math3.special.Beta.regularizedBeta(double,double,double,double,int) java.lang.Double.isNaN(double)
org.apache.commons.math3.special.Beta.regularizedBeta(double,double,double,double,int) org.apache.commons.math3.special.Beta.logBeta(double,double)
org.apache.commons.math3.special.Beta.regularizedBeta(double,double,double,double,int) org.apache.commons.math3.util.FastMath.exp(double)
org.apache.commons.math3.special.Beta.regularizedBeta(double,double,double,double,int) java.lang.Double.clinit()
org.apache.commons.math3.special.Beta.regularizedBeta(double,double,double,double,int) org.apache.commons.math3.special.Beta$1(double,double)
org.apache.commons.math3.special.Beta.regularizedBeta(double,double,double,double,int) org.apache.commons.math3.special.Beta.regularizedBeta(double,double,double,double,int)
org.apache.commons.math3.special.Beta.regularizedBeta(double,double,double,double,int) org.apache.commons.math3.util.FastMath.log(double)
org.apache.commons.math3.special.Beta.regularizedBeta(double,double,double,double,int) org.apache.commons.math3.special.Beta.clinit()
