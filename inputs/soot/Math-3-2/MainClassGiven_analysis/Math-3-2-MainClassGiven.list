java.io.PrintStream.print(java.lang.String)
java.io.PrintStream.printf(java.lang.String,java.lang.Object[])
java.io.PrintStream.println(java.lang.String)
java.lang.Class.getName()
java.lang.Double.clinit()
java.lang.Double.toString(double)
java.lang.Enum(java.lang.String,int)
java.lang.Enum.clone()
java.lang.Enum.toString()
java.lang.IllegalArgumentException()
java.lang.Integer.clinit()
java.lang.Integer.valueOf(int)
java.lang.Object()
java.lang.Object.clinit()
java.lang.Object.clone()
java.lang.StrictMath.clinit()
java.lang.StrictMath.log(double)
java.lang.String.equals(java.lang.Object)
java.lang.String.replaceAll(java.lang.String,java.lang.String)
java.lang.StringBuilder()
java.lang.StringBuilder.append(int)
java.lang.StringBuilder.append(java.lang.String)
java.lang.StringBuilder.toString()
java.lang.System.clinit()
java.lang.Thread.clone()
java.lang.Throwable.clinit()
java.net.HttpCookie.clone()
java.security.MessageDigest$Delegate.clone()
java.security.Signature$Delegate.clone()
java.security.SignatureSpi.clone()
java.text.AttributedString$AttributedStringIterator.clone()
java.text.ChoiceFormat.clone()
java.text.DateFormatSymbols.clone()
java.text.DecimalFormat.clone()
java.text.DecimalFormatSymbols.clone()
java.text.DigitList.clone()
java.text.Format.format(java.lang.Object)
java.text.MessageFormat(java.lang.String,java.util.Locale)
java.text.MessageFormat.clinit()
java.text.MessageFormat.clone()
java.text.RuleBasedBreakIterator$SafeCharIterator.clone()
java.text.RuleBasedBreakIterator.clone()
java.text.RuleBasedCollator.clone()
java.text.SimpleDateFormat.clone()
java.text.StringCharacterIterator.clone()
java.util.AbstractList.add(java.lang.Object)
java.util.AbstractMap.clone()
java.util.ArrayDeque.clone()
java.util.ArrayList$SubList.get(int)
java.util.ArrayList$SubList.size()
java.util.ArrayList()
java.util.ArrayList.add(java.lang.Object)
java.util.ArrayList.clinit()
java.util.ArrayList.clone()
java.util.ArrayList.get(int)
java.util.ArrayList.size()
java.util.ArrayList.toArray()
java.util.Arrays$ArrayList.get(int)
java.util.Arrays$ArrayList.size()
java.util.BitSet.clone()
java.util.Collections$CheckedCollection.add(java.lang.Object)
java.util.Collections$CheckedCollection.size()
java.util.Collections$CheckedList.get(int)
java.util.Collections$CopiesList.get(int)
java.util.Collections$CopiesList.size()
java.util.Collections$EmptyList.get(int)
java.util.Collections$EmptyList.size()
java.util.Collections$SingletonList.get(int)
java.util.Collections$SingletonList.size()
java.util.Collections$SynchronizedCollection.add(java.lang.Object)
java.util.Collections$SynchronizedCollection.size()
java.util.Collections$SynchronizedList.get(int)
java.util.Collections$UnmodifiableCollection.add(java.lang.Object)
java.util.Collections$UnmodifiableCollection.size()
java.util.Collections$UnmodifiableList.get(int)
java.util.Date.clone()
java.util.EnumSet.clone()
java.util.GregorianCalendar.clone()
java.util.HashMap()
java.util.HashMap.clinit()
java.util.HashMap.clone()
java.util.HashSet.clone()
java.util.Hashtable$Entry.clone()
java.util.Hashtable.clone()
java.util.IdentityHashMap.clone()
java.util.JapaneseImperialCalendar.clone()
java.util.JumboEnumSet.clone()
java.util.LinkedList.add(java.lang.Object)
java.util.LinkedList.clone()
java.util.LinkedList.get(int)
java.util.LinkedList.size()
java.util.Locale.clinit()
java.util.Locale.clone()
java.util.Locale.getDefault()
java.util.Locale.getLanguage()
java.util.ResourceBundle$CacheKey.clone()
java.util.ResourceBundle.clinit()
java.util.ResourceBundle.getBundle(java.lang.String,java.util.Locale)
java.util.ResourceBundle.getLocale()
java.util.ResourceBundle.getString(java.lang.String)
java.util.SimpleTimeZone.clone()
java.util.SubList.get(int)
java.util.SubList.size()
java.util.TreeMap.clone()
java.util.TreeSet.clone()
java.util.Vector.add(java.lang.Object)
java.util.Vector.clone()
java.util.Vector.get(int)
java.util.Vector.size()
java.util.jar.Attributes.clone()
java.util.jar.Manifest.clone()
java.util.regex.Pattern$CharPropertyNames$CloneableProperty.clone()
java.util.zip.ZipEntry.clone()
javax.crypto.Mac.clone()
javax.naming.CompositeName.clone()
javax.naming.Reference.clone()
org.apache.commons.math3.exception.DimensionMismatchException(int,int)
org.apache.commons.math3.exception.DimensionMismatchException(org.apache.commons.math3.exception.util.Localizable,int,int)
org.apache.commons.math3.exception.MathArithmeticException.getLocalizedMessage()
org.apache.commons.math3.exception.MathArithmeticException.getMessage()
org.apache.commons.math3.exception.MathIllegalArgumentException(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])
org.apache.commons.math3.exception.MathIllegalArgumentException.getLocalizedMessage()
org.apache.commons.math3.exception.MathIllegalArgumentException.getMessage()
org.apache.commons.math3.exception.MathIllegalNumberException(org.apache.commons.math3.exception.util.Localizable,java.lang.Number,java.lang.Object[])
org.apache.commons.math3.exception.MathIllegalNumberException.clinit()
org.apache.commons.math3.exception.util.ArgUtils.flatten(java.lang.Object[])
org.apache.commons.math3.exception.util.ExceptionContext(java.lang.Throwable)
org.apache.commons.math3.exception.util.ExceptionContext.addMessage(org.apache.commons.math3.exception.util.Localizable,java.lang.Object[])
org.apache.commons.math3.exception.util.ExceptionContext.buildMessage(java.util.Locale,java.lang.String)
org.apache.commons.math3.exception.util.ExceptionContext.getLocalizedMessage()
org.apache.commons.math3.exception.util.ExceptionContext.getMessage()
org.apache.commons.math3.exception.util.ExceptionContext.getMessage(java.util.Locale)
org.apache.commons.math3.exception.util.LocalizedFormats(java.lang.String,int,java.lang.String)
org.apache.commons.math3.exception.util.LocalizedFormats.clinit()
org.apache.commons.math3.exception.util.LocalizedFormats.getLocalizedString(java.util.Locale)
org.apache.commons.math3.util.FastMath$ExpFracTable.access$200()
org.apache.commons.math3.util.FastMath$ExpFracTable.access$300()
org.apache.commons.math3.util.FastMath$ExpFracTable.clinit()
org.apache.commons.math3.util.FastMath$ExpIntTable.access$000()
org.apache.commons.math3.util.FastMath$ExpIntTable.access$100()
org.apache.commons.math3.util.FastMath$ExpIntTable.clinit()
org.apache.commons.math3.util.FastMath$lnMant.access$400()
org.apache.commons.math3.util.FastMath$lnMant.clinit()
org.apache.commons.math3.util.FastMath.clinit()
org.apache.commons.math3.util.FastMath.main(java.lang.String[])
org.apache.commons.math3.util.FastMathCalc.checkLen(int,int)
org.apache.commons.math3.util.FastMathCalc.clinit()
org.apache.commons.math3.util.FastMathCalc.format(double)
org.apache.commons.math3.util.FastMathCalc.printarray(java.io.PrintStream,java.lang.String,int,double[])
org.apache.commons.math3.util.FastMathCalc.printarray(java.io.PrintStream,java.lang.String,int,double[][])
org.apache.commons.math3.util.FastMathLiteralArrays.clinit()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA()
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB()
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant()
sun.net.ProgressSource.clone()
sun.net.www.MimeEntry.clone()
sun.net.www.protocol.http.AuthenticationInfo.clone()
sun.security.jca.ProviderList$3.get(int)
sun.security.jca.ProviderList$3.size()
sun.security.jca.ProviderList$ServiceList.get(int)
sun.security.jca.ProviderList$ServiceList.size()
sun.security.krb5.EncryptedData.clone()
sun.security.krb5.EncryptionKey.clone()
sun.security.krb5.PrincipalName.clone()
sun.security.krb5.Realm.clone()
sun.security.krb5.internal.AuthorizationData.clone()
sun.security.krb5.internal.AuthorizationDataEntry.clone()
sun.security.krb5.internal.ETypeInfo.clone()
sun.security.krb5.internal.ETypeInfo2.clone()
sun.security.krb5.internal.HostAddress.clone()
sun.security.krb5.internal.HostAddresses.clone()
sun.security.krb5.internal.KerberosTime.clone()
sun.security.krb5.internal.LastReqEntry.clone()
sun.security.krb5.internal.PAData.clone()
sun.security.krb5.internal.Ticket.clone()
sun.security.krb5.internal.TicketFlags.clone()
sun.security.krb5.internal.crypto.crc32.clone()
sun.security.provider.MD4.clone()
sun.security.provider.PolicyParser$GrantEntry.clone()
sun.security.util.BitArray.clone()
sun.security.x509.GeneralSubtrees.clone()
sun.security.x509.NameConstraintsExtension.clone()
sun.text.CompactByteArray.clone()
sun.text.IntHashtable.clone()
sun.text.normalizer.CharacterIteratorWrapper.clone()
sun.text.normalizer.NormalizerBase.clone()
sun.text.normalizer.ReplaceableUCharacterIterator.clone()
sun.util.calendar.CalendarDate.clone()
sun.util.calendar.ImmutableGregorianDate.clone()
sun.util.calendar.ZoneInfo.clone()
