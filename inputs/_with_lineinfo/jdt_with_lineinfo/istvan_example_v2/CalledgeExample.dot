digraph graphname {
rankdir="LR";
54 [label="CallEdgeExamples$1.<init>():void::-1:-1:-1:-1"]
55 [label="CallEdgeExamples$1.foo():void:CallEdgeExamples.java:267:3:269:4"]
56 [label="CallEdgeExamples$2.<init>():void::-1:-1:-1:-1"]
57 [label="CallEdgeExamples$2.generic(Child1):void:CallEdgeExamples.java:275:3:278:4"]
60 [label="CallEdgeExamples$Local.<init>():void::-1:-1:-1:-1"]
59 [label="CallEdgeExamples$Local.foo():void:CallEdgeExamples.java:294:3:296:4"]
41 [label="CallEdgeExamples.<init>():void::-1:-1:-1:-1"]
44 [label="CallEdgeExamples.anonim():void:CallEdgeExamples.java:263:1:281:2"]
50 [label="CallEdgeExamples.contructor():void:CallEdgeExamples.java:328:1:332:2"]
47 [label="CallEdgeExamples.generic():void:CallEdgeExamples.java:301:1:319:2"]
48 [label="CallEdgeExamples.init():void:CallEdgeExamples.java:321:1:326:2"]
43 [label="CallEdgeExamples.innerClass():void:CallEdgeExamples.java:256:1:261:2"]
63 [label="Lambda.compare(int;int):boolean:CallEdgeExamples.java:337:13:337:87"]
49 [label="CallEdgeExamples.lambda():void:CallEdgeExamples.java:334:1:339:2"]
46 [label="CallEdgeExamples.local():void:CallEdgeExamples.java:290:1:299:2"]
40 [label="CallEdgeExamples.main(java.lang.String[]):void:CallEdgeExamples.java:223:1:236:2"]
45 [label="CallEdgeExamples.nested():void:CallEdgeExamples.java:283:1:288:2"]
51 [label="CallEdgeExamples.overload():void:CallEdgeExamples.java:340:1:348:2"]
52 [label="CallEdgeExamples.parser():void:CallEdgeExamples.java:350:1:357:2"]
42 [label="CallEdgeExamples.polimorphic():void:CallEdgeExamples.java:238:1:254:2"]
6 [label="Abstract.foo():void:CallEdgeExamples.java:25:1:27:2"]
5 [label="Base.base():void:CallEdgeExamples.java:19:1:21:2"]
15 [label="Child1.<init>():void:CallEdgeExamples.java:-1:-1:-1:-1"]
9 [label="Child1.child1():void:CallEdgeExamples.java:37:1:39:2"]
8 [label="Child1.foo():void:CallEdgeExamples.java:34:1:36:2"]
7 [label="Child1.goo():void:CallEdgeExamples.java:31:1:33:2"]
25 [label="Child2.<init>():void:CallEdgeExamples.java:-1:-1:-1:-1"]
10 [label="Child2.goo():void:CallEdgeExamples.java:43:1:45:2"]
11 [label="Child2.hoo():void:CallEdgeExamples.java:46:2:48:3"]
29 [label="Constructor.<init>():void:CallEdgeExamples.java:151:1:153:2"]
62 [label="ForParser.<init>():void:CallEdgeExamples.java:-1:-1:-1:-1"]
34 [label="ForParser.foo():void:CallEdgeExamples.java:182:1:184:2"]
35 [label="ForParser.goo():void:CallEdgeExamples.java:186:1:188:2"]
38 [label="ForParser.validGenericMethod(K;Generic1<Interface>;java.lang.Class<?>[]):Generic2<Interface,Generic1>:CallEdgeExamples.java:198:1:204:2"]
36 [label="ForParser.validMethod(Child2;Generic1<Interface>;java.lang.Class<?>[]):Generic2<Interface,Generic1>:CallEdgeExamples.java:190:1:196:2"]
39 [label="Generic1<Interface>.<init>():void:CallEdgeExamples.java:-1:-1:-1:-1"]
16 [label="Generic1<Interface>.generic(T):void:CallEdgeExamples.java:70:1:73:2"]
37 [label="Generic2<Interface,Generic1>.<init>():void:CallEdgeExamples.java:-1:-1:-1:-1"]
17 [label="Generic2<Interface,Generic1>.generic(T;K):void:CallEdgeExamples.java:77:1:81:2"]
61 [label="Generic3.<init>():void::-1:-1:-1:-1"]
18 [label="Generic3.foo():void:CallEdgeExamples.java:85:1:88:2"]
24 [label="Helper.<init>():void:CallEdgeExamples.java:-1:-1:-1:-1"]
13 [label="Helper.genericMethod(T):void:CallEdgeExamples.java:58:1:61:2"]
14 [label="Helper.instantiateChild1():Child1:CallEdgeExamples.java:62:1:65:2"]
12 [label="Helper.interfaceTest(Interface):void:CallEdgeExamples.java:54:1:57:2"]
26 [label="Init.<init>(Interface):void:CallEdgeExamples.java:124:1:127:2"]
2 [label="Interface.foo():void:CallEdgeExamples.java:11:1:11:12"]
3 [label="Interface.goo():void:CallEdgeExamples.java:12:1:12:12"]
4 [label="Interface.hoo():void:CallEdgeExamples.java:13:2:15:3"]
28 [label="Lambda.compare(int;int):boolean:CallEdgeExamples.java:147:2:147:34"]
0 [label="M.sg(java.lang.String):void:CallEdgeExamples.java:5:1:7:2"]
21 [label="Outer$Inner.<init>():void::-1:-1:-1:-1"]
20 [label="Outer$Inner.inner():void:CallEdgeExamples.java:98:2:100:3"]
58 [label="Outer$Nested.<init>():void::-1:-1:-1:-1"]
23 [label="Outer$Nested.nested():void:CallEdgeExamples.java:108:2:110:3"]
22 [label="Outer$Nested.staticNested():void:CallEdgeExamples.java:104:2:106:3"]
53 [label="Outer.<init>():void::-1:-1:-1:-1"]
19 [label="Outer.inner():void:CallEdgeExamples.java:92:1:95:2"]
64 [label="Overload.<init>():void::-1:-1:-1:-1"]
30 [label="Overload.foo():void:CallEdgeExamples.java:157:1:159:2"]
31 [label="Overload.foo(int):void:CallEdgeExamples.java:160:1:162:2"]
33 [label="Overload.foo(int;java.lang.Object[]):void:CallEdgeExamples.java:166:1:168:2"]
32 [label="Overload.foo(T):void:CallEdgeExamples.java:163:1:165:2"]
27 [label="StaticInit.staticInit():void:CallEdgeExamples.java:141:1:143:2"]
1 [label="java.io.PrintStream.println(java.lang.String):void::-1:-1:-1:-1"]
0 -> 1
4 -> 0
5 -> 0
6 -> 0
7 -> 0
8 -> 0
9 -> 0
10 -> 0
11 -> 0
12 -> 0
12 -> 2
13 -> 0
13 -> 2
14 -> 0
14 -> 15
16 -> 0
16 -> 2
17 -> 0
17 -> 2
17 -> 16
18 -> 0
18 -> 15
18 -> 16
19 -> 0
19 -> 20
19 -> 21
20 -> 0
22 -> 0
23 -> 0
26 -> 0
27 -> 0
29 -> 0
30 -> 0
31 -> 0
32 -> 0
33 -> 0
34 -> 0
35 -> 0
36 -> 0
36 -> 17
36 -> 37
38 -> 0
38 -> 17
38 -> 37
38 -> 39
40 -> 41
40 -> 42
40 -> 43
40 -> 44
40 -> 45
40 -> 46
40 -> 47
40 -> 48
40 -> 49
40 -> 50
40 -> 51
40 -> 52
42 -> 0
42 -> 2
42 -> 3
42 -> 4
42 -> 6
42 -> 8
42 -> 12
42 -> 15
42 -> 24
42 -> 25
43 -> 0
43 -> 19
43 -> 53
44 -> 0
44 -> 7
44 -> 8
44 -> 16
44 -> 54
44 -> 56
45 -> 0
45 -> 22
45 -> 23
45 -> 58
46 -> 0
46 -> 59
46 -> 60
47 -> 0
47 -> 13
47 -> 15
47 -> 16
47 -> 17
47 -> 18
47 -> 24
47 -> 25
47 -> 36
47 -> 37
47 -> 38
47 -> 39
47 -> 61
47 -> 62
48 -> 0
48 -> 15
48 -> 26
48 -> 27
49 -> 0
49 -> 28
50 -> 0
50 -> 29
51 -> 0
51 -> 30
51 -> 31
51 -> 32
51 -> 33
51 -> 64
52 -> 0
52 -> 34
52 -> 35
52 -> 62
55 -> 0
57 -> 0
57 -> 8
59 -> 0
}
