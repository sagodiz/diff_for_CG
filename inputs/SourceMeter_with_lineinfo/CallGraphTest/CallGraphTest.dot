digraph graphname {
rankdir="LR";
120 [label="anonymAndInner.AnonymAndInnerTest.<init>()V:-1:-1:-1:-1"]
121 [label="java.lang.Object.<init>()V:-1:-1:-1:-1"]
123 [label="anonymAndInner.AnonymAndInnerTest.innerClass()V:4:2:9:3"]
127 [label="helper.Debug.debug(Ljava/lang/String;)V:6:2:10:3"]
132 [label="anonymAndInner.Outer.<init>()V:-1:-1:-1:-1"]
134 [label="anonymAndInner.Outer.inner()V:5:2:8:3"]
136 [label="anonymAndInner.AnonymAndInnerTest.anonim()V:11:2:29:3"]
140 [label="anonymAndInner.AnonymAndInnerTest$1.<init>()V:-1:-1:-1:-1"]
143 [label="helper.Child1.<init>()V:-1:-1:-1:-1"]
145 [label="anonymAndInner.AnonymAndInnerTest$1.foo()V:15:4:17:5"]
146 [label="helper.Child1.foo()V:7:2:9:3"]
148 [label="helper.Child1.goo()V:4:2:6:3"]
156 [label="anonymAndInner.AnonymAndInnerTest$2.<init>()V:-1:-1:-1:-1"]
159 [label="generics.Generic1.<init>()V:-1:-1:-1:-1"]
161 [label="anonymAndInner.AnonymAndInnerTest$2.generic(Lhelper/Child1;)V:23:4:26:5"]
163 [label="generics.Generic1.generic(Lhelper/Interface;)V:4:2:7:3"]
165 [label="anonymAndInner.AnonymAndInnerTest.nested()V:31:2:36:3"]
166 [label="anonymAndInner.Outer$Nested.nested()V:21:3:23:4"]
171 [label="anonymAndInner.Outer$Nested.<init>()V:-1:-1:-1:-1"]
173 [label="anonymAndInner.Outer$Nested.staticNested()V:17:3:19:4"]
175 [label="anonymAndInner.AnonymAndInnerTest.test()V:38:2:42:3"]
179 [label="anonymAndInner.AnonymAndInnerTest.main([Ljava/lang/String;)V:44:2:47:3"]
190 [label="anonymAndInner.Outer$Inner.inner()V:11:3:13:4"]
195 [label="anonymAndInner.Outer$Inner.<init>()V:-1:-1:-1:-1"]
200 [label="CallGraphTest.<init>()V:-1:-1:-1:-1"]
201 [label="CallGraphTest.main([Ljava/lang/String;)V:4:2:12:3"]
203 [label="parser.ParserTest.test()V:11:2:20:3"]
208 [label="parser.ParserTest.<init>()V:-1:-1:-1:-1"]
210 [label="initialization.InitializationTest.test()V:11:5:16:6"]
215 [label="initialization.InitializationTest.<init>()V:-1:-1:-1:-1"]
217 [label="java8.Java8Test.test()V:30:2:35:3"]
222 [label="java8.Java8Test.<init>()V:-1:-1:-1:-1"]
224 [label="generics.GenericsTest.test()V:9:2:25:3"]
229 [label="generics.GenericsTest.<init>()V:-1:-1:-1:-1"]
231 [label="polimorph.PolimorphTest.test()V:23:2:26:3"]
236 [label="polimorph.PolimorphTest.<init>()V:-1:-1:-1:-1"]
238 [label="dynamic.DynamicTest.test()V:50:2:53:3"]
243 [label="dynamic.DynamicTest.<init>()V:-1:-1:-1:-1"]
248 [label="dynamic.DynamicTest.reflection()V:14:2:28:3"]
253 [label="java.lang.Class.getMethod(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;:-1:-1:-1:-1"]
255 [label="java.lang.Class.forName(Ljava/lang/String;)Ljava/lang/Class;:-1:-1:-1:-1"]
257 [label="java.lang.reflect.AccessibleObject.setAccessible(Z)V:-1:-1:-1:-1"]
259 [label="java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;:-1:-1:-1:-1"]
276 [label="java.io.PrintStream.println(Ljava/lang/String;)V:-1:-1:-1:-1"]
280 [label="dynamic.DynamicTest.methodHandle()V:35:2:49:3"]
285 [label="java.lang.invoke.MethodType.methodType(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/invoke/MethodType;:-1:-1:-1:-1"]
293 [label="java.lang.invoke.MethodHandles.lookup()Ljava/lang/invoke/MethodHandles$Lookup;:-1:-1:-1:-1"]
298 [label="java.lang.invoke.MethodHandles$Lookup.findStatic(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/MethodHandle;:-1:-1:-1:-1"]
303 [label="java.lang.invoke.MethodHandle.invokeWithArguments([Ljava/lang/Object;)Ljava/lang/Object;:-1:-1:-1:-1"]
308 [label="java.lang.Throwable.printStackTrace()V:-1:-1:-1:-1"]
312 [label="dynamic.DynamicTest.main([Ljava/lang/String;)V:54:2:57:3"]
324 [label="helper.Interface.foo()V:4:4:4:15"]
330 [label="generics.Generic2.<init>()V:-1:-1:-1:-1"]
331 [label="generics.Generic2.generic(Lhelper/Interface;Lgenerics/Generic1;)V:4:2:8:3"]
344 [label="generics.Generic3.<init>()V:-1:-1:-1:-1"]
345 [label="generics.Generic3.foo()V:4:2:7:3"]
346 [label="generics.GenericsTest.genericMethod(Lhelper/Interface;)V:4:2:7:3"]
357 [label="helper.Child2.<init>()V:-1:-1:-1:-1"]
371 [label="generics.GenericsTest.main([Ljava/lang/String;)V:26:2:28:3"]
383 [label="helper.Abstract.<init>()V:-1:-1:-1:-1"]
384 [label="helper.Abstract.foo()V:4:2:6:3"]
386 [label="helper.Base.<init>()V:-1:-1:-1:-1"]
387 [label="helper.Base.base()V:4:2:6:3"]
391 [label="helper.Child1.child1()V:10:2:12:3"]
392 [label="helper.Child2.goo()V:4:2:6:3"]
393 [label="helper.Child2.hoo()V:7:2:9:3"]
395 [label="helper.Child3.<init>()V:-1:-1:-1:-1"]
397 [label="helper.Debug.<init>()V:-1:-1:-1:-1"]
406 [label="helper.Interface.goo()V:5:4:5:15"]
407 [label="helper.Interface.hoo()V:6:4:8:5"]
416 [label="initialization.Constructor.<init>()V:4:2:6:3"]
421 [label="initialization.IntermediateInitialization.instantiateChild1()Lhelper/Child1;:7:2:10:3"]
428 [label="initialization.Init.<initblock>():12:4:15:5"]
431 [label="initialization.Init.<init>(Lhelper/Interface;)V:20:4:23:5"]
435 [label="initialization.StaticInit.staticInit()V:19:2:21:3"]
443 [label="initialization.InitializationTest.main([Ljava/lang/String;)V:21:5:23:3"]
446 [label="initialization.IntermediateInitialization.<init>()V:-1:-1:-1:-1"]
449 [label="initialization.StaticInit.<init>()V:-1:-1:-1:-1"]
452 [label="initialization.StaticInit.<clinit>():11:2:14:3"]
464 [label="java8.FunctionalInterface.doSomething(Ljava/lang/String;)Ljava/lang/String;:4:2:4:33"]
466 [label="java8.Java8Test.lambda()V:8:2:12:3"]
471 [label="java8.Lambda.compare(II)Z:4:2:4:34"]
473 [label="java8.Java8Test.methodReference()V:14:2:18:3"]
474 [label="java8.MethodReference.<init>()V:18:4:21:5"]
476 [label="java8.MethodReference.doSomething()V:27:4:29:5"]
478 [label="java8.Java8Test.functionalInterface()V:24:2:28:3"]
486 [label="java8.Java8Test.main([Ljava/lang/String;)V:37:2:39:3"]
506 [label="java8.MethodReference.print(Ljava/lang/String;)Ljava/lang/String;:9:4:12:5"]
508 [label="java8.MethodReference.privatePrint()V:14:4:16:5"]
509 [label="java.util.List.add(Ljava/lang/Object;)Z:-1:-1:-1:-1"]
513 [label="java.lang.Iterable.forEach(Ljava/util/function/Consumer;)V:-1:-1:-1:-1"]
520 [label="parser.ForParser.<init>()V:-1:-1:-1:-1"]
523 [label="parser.ForParser.foo()V:7:7:9:3"]
524 [label="parser.ForParser.goo()V:11:7:13:3"]
525 [label="parser.ForParser.validMethod(Lhelper/Child2;Lgenerics/Generic1;[Ljava/lang/Class;)Lgenerics/Generic2;:15:2:21:3"]
536 [label="parser.ForParser.validGenericMethod(Lhelper/Child2;Lgenerics/Generic1;[Ljava/lang/Class;)Lgenerics/Generic2;:23:2:29:3"]
558 [label="parser.ParserTest.main([Ljava/lang/String;)V:22:2:24:3"]
566 [label="polimorph.Overload.<init>()V:-1:-1:-1:-1"]
567 [label="polimorph.Overload.foo()V:4:2:6:3"]
568 [label="polimorph.Overload.foo(I)V:7:2:9:3"]
570 [label="polimorph.Overload.foo(Ljava/lang/Object;)V:10:2:12:3"]
575 [label="polimorph.Overload.foo(I[Ljava/lang/Object;)V:13:2:15:3"]
579 [label="polimorph.Overload.overload1()V:17:2:20:3"]
581 [label="polimorph.Overload.overload2()V:22:2:25:3"]
583 [label="polimorph.Overload.overload3()V:27:2:30:3"]
585 [label="polimorph.Overload.overload4()V:32:2:35:3"]
588 [label="polimorph.Polimorph.<init>()V:-1:-1:-1:-1"]
589 [label="polimorph.Polimorph.overloadedInterface(Lhelper/Interface;)V:4:2:7:3"]
591 [label="polimorph.Polimorph.interfaceImplementation()V:9:2:14:3"]
594 [label="polimorph.Polimorph.interfaceImplementation2()V:16:2:20:3"]
595 [label="polimorph.Polimorph.abstractClassImplementation()V:22:2:26:3"]
597 [label="polimorph.PolimorphTest.overload()V:4:2:12:3"]
605 [label="polimorph.PolimorphTest.polimorphic()V:14:2:21:3"]
617 [label="polimorph.PolimorphTest.main([Ljava/lang/String;)V:27:2:30:3"]
120 -> 121
123 -> 127
123 -> 132
123 -> 134
127 -> 276
132 -> 121
134 -> 127
134 -> 190
134 -> 195
136 -> 127
136 -> 140
136 -> 146
136 -> 148
136 -> 156
136 -> 163
140 -> 143
143 -> 383
145 -> 127
146 -> 127
148 -> 127
156 -> 159
159 -> 121
161 -> 127
161 -> 146
163 -> 127
163 -> 324
165 -> 127
165 -> 166
165 -> 171
165 -> 173
166 -> 127
171 -> 121
173 -> 127
175 -> 123
175 -> 136
175 -> 165
179 -> 120
179 -> 175
190 -> 127
195 -> 121
200 -> 121
201 -> 120
201 -> 175
201 -> 203
201 -> 208
201 -> 210
201 -> 215
201 -> 217
201 -> 222
201 -> 224
201 -> 229
201 -> 231
201 -> 236
201 -> 238
201 -> 243
203 -> 127
203 -> 159
203 -> 331
203 -> 357
203 -> 520
203 -> 523
203 -> 524
203 -> 525
203 -> 536
208 -> 121
210 -> 127
210 -> 143
210 -> 416
210 -> 431
210 -> 435
215 -> 121
217 -> 127
217 -> 466
217 -> 473
217 -> 478
222 -> 121
224 -> 127
224 -> 143
224 -> 159
224 -> 163
224 -> 330
224 -> 331
224 -> 344
224 -> 345
224 -> 346
224 -> 357
229 -> 121
231 -> 127
231 -> 597
236 -> 121
238 -> 248
238 -> 280
243 -> 121
248 -> 127
248 -> 253
248 -> 255
248 -> 257
248 -> 259
248 -> 276
280 -> 127
280 -> 276
280 -> 285
280 -> 293
280 -> 298
280 -> 303
280 -> 308
312 -> 238
312 -> 243
330 -> 121
331 -> 127
331 -> 163
331 -> 324
344 -> 159
345 -> 127
345 -> 143
345 -> 163
346 -> 127
346 -> 324
357 -> 383
371 -> 224
371 -> 229
383 -> 121
384 -> 127
386 -> 121
387 -> 127
391 -> 127
392 -> 127
393 -> 127
395 -> 357
397 -> 121
407 -> 127
416 -> 121
416 -> 127
421 -> 127
421 -> 143
428 -> 127
428 -> 143
428 -> 357
431 -> 121
431 -> 127
435 -> 127
443 -> 210
443 -> 215
446 -> 121
449 -> 121
452 -> 127
452 -> 357
452 -> 421
452 -> 446
466 -> 127
466 -> 471
473 -> 127
473 -> 474
473 -> 476
474 -> 121
474 -> 509
476 -> 513
478 -> 127
478 -> 464
486 -> 217
486 -> 222
506 -> 127
508 -> 127
520 -> 121
523 -> 127
524 -> 127
525 -> 127
525 -> 330
525 -> 331
536 -> 127
536 -> 159
536 -> 330
536 -> 331
558 -> 203
558 -> 208
566 -> 121
567 -> 127
568 -> 127
570 -> 127
575 -> 127
579 -> 127
579 -> 567
581 -> 127
581 -> 568
583 -> 127
583 -> 570
585 -> 127
585 -> 575
588 -> 121
589 -> 127
589 -> 324
591 -> 143
591 -> 324
591 -> 406
591 -> 407
594 -> 324
594 -> 357
594 -> 407
595 -> 143
595 -> 146
595 -> 384
597 -> 127
597 -> 566
597 -> 579
597 -> 581
597 -> 583
597 -> 585
605 -> 127
605 -> 395
605 -> 588
605 -> 589
605 -> 591
605 -> 594
605 -> 595
617 -> 231
617 -> 236
}
