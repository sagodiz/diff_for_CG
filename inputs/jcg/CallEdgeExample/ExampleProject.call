M:(9)dynamic.DynamicTest:<init>() (O)java.lang.Object:<init>()
M:(16)dynamic.DynamicTest:reflection() (S)helper.Debug:debug(java.lang.String)
M:(16)dynamic.DynamicTest:reflection() (S)java.lang.Class:forName(java.lang.String)
M:(16)dynamic.DynamicTest:reflection() (M)java.lang.Class:getMethod(java.lang.String,java.lang.Class[])
M:(16)dynamic.DynamicTest:reflection() (M)java.lang.reflect.Method:setAccessible(boolean)
M:(16)dynamic.DynamicTest:reflection() (M)java.lang.reflect.Method:invoke(java.lang.Object,java.lang.Object[])
M:(16)dynamic.DynamicTest:reflection() (M)java.io.PrintStream:println(java.lang.String)
M:(37)dynamic.DynamicTest:methodHandle() (S)helper.Debug:debug(java.lang.String)
M:(37)dynamic.DynamicTest:methodHandle() (S)java.lang.invoke.MethodType:methodType(java.lang.Class,java.lang.Class)
M:(37)dynamic.DynamicTest:methodHandle() (S)java.lang.invoke.MethodHandles:lookup()
M:(37)dynamic.DynamicTest:methodHandle() (M)java.lang.invoke.MethodHandles$Lookup:findStatic(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)
M:(37)dynamic.DynamicTest:methodHandle() (M)java.lang.invoke.MethodHandle:invokeWithArguments(java.lang.Object[])
M:(37)dynamic.DynamicTest:methodHandle() (M)java.io.PrintStream:println(java.lang.String)
M:(37)dynamic.DynamicTest:methodHandle() (M)java.lang.Throwable:printStackTrace()
M:(51)dynamic.DynamicTest:test() (M)dynamic.DynamicTest:methodHandle()
M:(51)dynamic.DynamicTest:test() (M)dynamic.DynamicTest:reflection()
M:(55)dynamic.DynamicTest:main(java.lang.String[]) (O)dynamic.DynamicTest:<init>()
M:(55)dynamic.DynamicTest:main(java.lang.String[]) (M)dynamic.DynamicTest:test()
M:(3)java8.Java8Test:<init>() (O)java.lang.Object:<init>()
M:(9)java8.Java8Test:lambda() (S)helper.Debug:debug(java.lang.String)
M:(9)java8.Java8Test:lambda() (D)java8.Lambda:compare()
M:(9)java8.Java8Test:lambda() (I)java8.Lambda:compare(int,int)
M:(15)java8.Java8Test:methodReference() (S)helper.Debug:debug(java.lang.String)
M:(15)java8.Java8Test:methodReference() (O)java8.MethodReference:<init>()
M:(15)java8.Java8Test:methodReference() (M)java8.MethodReference:doSomething()
M:(25)java8.Java8Test:functionalInterface() (S)helper.Debug:debug(java.lang.String)
M:(25)java8.Java8Test:functionalInterface() (D)java8.FunctionalInterface:doSomething()
M:(25)java8.Java8Test:functionalInterface() (I)java8.FunctionalInterface:doSomething(java.lang.String)
M:(35)java8.Java8Test:functionalInterface2() (S)helper.Debug:debug(java.lang.String)
M:(35)java8.Java8Test:functionalInterface2() (D)java8.FunctionalInterface:doSomething()
M:(35)java8.Java8Test:functionalInterface2() (D)java8.FunctionalInterface:doSomething()
M:(35)java8.Java8Test:functionalInterface2() (I)java8.FunctionalInterface:doSomething(java.lang.String)
M:(42)java8.Java8Test:test() (S)helper.Debug:debug(java.lang.String)
M:(42)java8.Java8Test:test() (O)java8.Java8Test:lambda()
M:(42)java8.Java8Test:test() (M)java8.Java8Test:methodReference()
M:(42)java8.Java8Test:test() (M)java8.Java8Test:functionalInterface()
M:(42)java8.Java8Test:test() (M)java8.Java8Test:functionalInterface2()
M:(50)java8.Java8Test:main(java.lang.String[]) (O)java8.Java8Test:<init>()
M:(50)java8.Java8Test:main(java.lang.String[]) (M)java8.Java8Test:test()
M:(10)java8.Java8Test:lambda$0(int,int) (S)helper.Debug:debug(java.lang.String)
M:(36)java8.Java8Test:lambda$3(java.lang.String) (O)helper.Child1:<init>()
M:(36)java8.Java8Test:lambda$3(java.lang.String) (O)java.lang.String:<init>(java.lang.String)
M:(36)java8.Java8Test:lambda$3(java.lang.String) (M)java.lang.String:toLowerCase()
M:(36)java8.Java8Test:lambda$3(java.lang.String) (M)java.io.PrintStream:println(java.lang.String)
M:(10)java8.MethodReference:print(java.lang.String) (S)helper.Debug:debug(java.lang.String)
M:(15)java8.MethodReference:privatePrint() (S)helper.Debug:debug(java.lang.String)
M:(18)java8.MethodReference:<init>() (O)java.lang.Object:<init>()
M:(18)java8.MethodReference:<init>() (O)java.util.ArrayList:<init>()
M:(18)java8.MethodReference:<init>() (I)java.util.List:add(java.lang.Object)
M:(18)java8.MethodReference:<init>() (I)java.util.List:add(java.lang.Object)
M:(28)java8.MethodReference:doSomething() (D)java.util.function.Consumer:accept()
M:(28)java8.MethodReference:doSomething() (I)java.util.List:forEach(java.util.function.Consumer)
M:(2)CallGraphTest:<init>() (O)java.lang.Object:<init>()
M:(5)CallGraphTest:main(java.lang.String[]) (O)parser.ParserTest:<init>()
M:(5)CallGraphTest:main(java.lang.String[]) (M)parser.ParserTest:test()
M:(5)CallGraphTest:main(java.lang.String[]) (O)anonymAndInner.AnonymAndInnerTest:<init>()
M:(5)CallGraphTest:main(java.lang.String[]) (M)anonymAndInner.AnonymAndInnerTest:test()
M:(5)CallGraphTest:main(java.lang.String[]) (O)initialization.InitializationTest:<init>()
M:(5)CallGraphTest:main(java.lang.String[]) (M)initialization.InitializationTest:test()
M:(5)CallGraphTest:main(java.lang.String[]) (O)java8.Java8Test:<init>()
M:(5)CallGraphTest:main(java.lang.String[]) (M)java8.Java8Test:test()
M:(5)CallGraphTest:main(java.lang.String[]) (O)generics.GenericsTest:<init>()
M:(5)CallGraphTest:main(java.lang.String[]) (M)generics.GenericsTest:test()
M:(5)CallGraphTest:main(java.lang.String[]) (O)polimorph.PolimorphTest:<init>()
M:(5)CallGraphTest:main(java.lang.String[]) (M)polimorph.PolimorphTest:test()
M:(5)CallGraphTest:main(java.lang.String[]) (O)dynamic.DynamicTest:<init>()
M:(5)CallGraphTest:main(java.lang.String[]) (M)dynamic.DynamicTest:test()
M:(3)generics.GenericsTest:<init>() (O)java.lang.Object:<init>()
M:(8)generics.GenericsTest:genericMethod(helper.Interface) (S)helper.Debug:debug(java.lang.String)
M:(8)generics.GenericsTest:genericMethod(helper.Interface) (I)helper.Interface:foo()
M:(13)generics.GenericsTest:test() (S)helper.Debug:debug(java.lang.String)
M:(13)generics.GenericsTest:test() (O)generics.Generic1:<init>()
M:(13)generics.GenericsTest:test() (O)helper.Child1:<init>()
M:(13)generics.GenericsTest:test() (M)generics.Generic1:generic(helper.Interface)
M:(13)generics.GenericsTest:test() (O)generics.Generic1:<init>()
M:(13)generics.GenericsTest:test() (O)helper.Child2:<init>()
M:(13)generics.GenericsTest:test() (M)generics.Generic1:generic(helper.Interface)
M:(13)generics.GenericsTest:test() (O)generics.Generic2:<init>()
M:(13)generics.GenericsTest:test() (O)helper.Child2:<init>()
M:(13)generics.GenericsTest:test() (M)generics.Generic2:generic(helper.Interface,generics.Generic1)
M:(13)generics.GenericsTest:test() (O)generics.Generic3:<init>()
M:(13)generics.GenericsTest:test() (M)generics.Generic3:foo()
M:(13)generics.GenericsTest:test() (O)helper.Child2:<init>()
M:(13)generics.GenericsTest:test() (M)generics.GenericsTest:genericMethod(helper.Interface)
M:(30)generics.GenericsTest:main(java.lang.String[]) (O)generics.GenericsTest:<init>()
M:(30)generics.GenericsTest:main(java.lang.String[]) (M)generics.GenericsTest:test()
M:(3)generics.Generic1:<init>() (O)java.lang.Object:<init>()
M:(9)generics.Generic1:generic(helper.Interface) (S)helper.Debug:debug(java.lang.String)
M:(9)generics.Generic1:generic(helper.Interface) (I)helper.Interface:foo()
M:(3)generics.Generic2:<init>() (O)java.lang.Object:<init>()
M:(8)generics.Generic2:generic(helper.Interface,generics.Generic1) (S)helper.Debug:debug(java.lang.String)
M:(8)generics.Generic2:generic(helper.Interface,generics.Generic1) (I)helper.Interface:foo()
M:(8)generics.Generic2:generic(helper.Interface,generics.Generic1) (M)generics.Generic1:generic(helper.Interface)
M:(3)generics.Generic3:<init>() (O)generics.Generic1:<init>()
M:(8)generics.Generic3:foo() (S)helper.Debug:debug(java.lang.String)
M:(8)generics.Generic3:foo() (O)helper.Child1:<init>()
M:(8)generics.Generic3:foo() (M)generics.Generic3:generic(helper.Interface)
M:(3)parser.ParserTest:<init>() (O)java.lang.Object:<init>()
M:(12)parser.ParserTest:test() (S)helper.Debug:debug(java.lang.String)
M:(12)parser.ParserTest:test() (O)parser.ForParser:<init>()
M:(12)parser.ParserTest:test() (M)parser.ForParser:foo()
M:(12)parser.ParserTest:test() (M)parser.ForParser:goo()
M:(12)parser.ParserTest:test() (O)generics.Generic1:<init>()
M:(12)parser.ParserTest:test() (O)parser.ForParser:<init>()
M:(12)parser.ParserTest:test() (O)helper.Child2:<init>()
M:(12)parser.ParserTest:test() (M)parser.ForParser:validMethod(helper.Child2,generics.Generic1,java.lang.Class[])
M:(12)parser.ParserTest:test() (O)helper.Child2:<init>()
M:(12)parser.ParserTest:test() (M)generics.Generic2:generic(helper.Interface,generics.Generic1)
M:(12)parser.ParserTest:test() (O)parser.ForParser:<init>()
M:(12)parser.ParserTest:test() (O)helper.Child2:<init>()
M:(12)parser.ParserTest:test() (M)parser.ForParser:validGenericMethod(helper.Child2,generics.Generic1,java.lang.Class[])
M:(12)parser.ParserTest:test() (O)helper.Child2:<init>()
M:(12)parser.ParserTest:test() (M)generics.Generic2:generic(helper.Interface,generics.Generic1)
M:(23)parser.ParserTest:main(java.lang.String[]) (O)parser.ParserTest:<init>()
M:(23)parser.ParserTest:main(java.lang.String[]) (M)parser.ParserTest:test()
M:(3)parser.ForParser:<init>() (O)java.lang.Object:<init>()
M:(8)parser.ForParser:foo() (S)helper.Debug:debug(java.lang.String)
M:(12)parser.ForParser:goo() (S)helper.Debug:debug(java.lang.String)
M:(17)parser.ForParser:validMethod(helper.Child2,generics.Generic1,java.lang.Class[]) (S)helper.Debug:debug(java.lang.String)
M:(17)parser.ForParser:validMethod(helper.Child2,generics.Generic1,java.lang.Class[]) (O)generics.Generic2:<init>()
M:(17)parser.ForParser:validMethod(helper.Child2,generics.Generic1,java.lang.Class[]) (M)generics.Generic2:generic(helper.Interface,generics.Generic1)
M:(25)parser.ForParser:validGenericMethod(helper.Child2,generics.Generic1,java.lang.Class[]) (S)helper.Debug:debug(java.lang.String)
M:(25)parser.ForParser:validGenericMethod(helper.Child2,generics.Generic1,java.lang.Class[]) (O)generics.Generic2:<init>()
M:(25)parser.ForParser:validGenericMethod(helper.Child2,generics.Generic1,java.lang.Class[]) (O)generics.Generic1:<init>()
M:(25)parser.ForParser:validGenericMethod(helper.Child2,generics.Generic1,java.lang.Class[]) (M)generics.Generic2:generic(helper.Interface,generics.Generic1)
M:(3)anonymAndInner.Outer:<init>() (O)java.lang.Object:<init>()
M:(6)anonymAndInner.Outer:inner() (S)helper.Debug:debug(java.lang.String)
M:(6)anonymAndInner.Outer:inner() (O)anonymAndInner.Outer$Inner:<init>(anonymAndInner.Outer)
M:(6)anonymAndInner.Outer:inner() (M)anonymAndInner.Outer$Inner:inner()
M:(1)anonymAndInner.AnonymAndInnerTest$1:<init>(anonymAndInner.AnonymAndInnerTest) (O)helper.Child1:<init>()
M:(25)anonymAndInner.AnonymAndInnerTest$1:foo() (S)helper.Debug:debug(java.lang.String)
M:(16)anonymAndInner.Outer$Nested:<init>() (O)java.lang.Object:<init>()
M:(18)anonymAndInner.Outer$Nested:staticNested() (S)helper.Debug:debug(java.lang.String)
M:(22)anonymAndInner.Outer$Nested:nested() (S)helper.Debug:debug(java.lang.String)
M:(10)anonymAndInner.Outer$Inner:<init>(anonymAndInner.Outer) (O)java.lang.Object:<init>()
M:(12)anonymAndInner.Outer$Inner:inner() (S)helper.Debug:debug(java.lang.String)
M:(3)anonymAndInner.AnonymAndInnerTest:<init>() (O)java.lang.Object:<init>()
M:(9)anonymAndInner.AnonymAndInnerTest:innerClass() (S)helper.Debug:debug(java.lang.String)
M:(9)anonymAndInner.AnonymAndInnerTest:innerClass() (O)anonymAndInner.Outer:<init>()
M:(9)anonymAndInner.AnonymAndInnerTest:innerClass() (M)anonymAndInner.Outer:inner()
M:(21)anonymAndInner.AnonymAndInnerTest:anonim() (S)helper.Debug:debug(java.lang.String)
M:(21)anonymAndInner.AnonymAndInnerTest:anonim() (O)anonymAndInner.AnonymAndInnerTest$1:<init>(anonymAndInner.AnonymAndInnerTest)
M:(21)anonymAndInner.AnonymAndInnerTest:anonim() (M)helper.Child1:foo()
M:(21)anonymAndInner.AnonymAndInnerTest:anonim() (M)helper.Child1:goo()
M:(21)anonymAndInner.AnonymAndInnerTest:anonim() (O)anonymAndInner.AnonymAndInnerTest$2:<init>(anonymAndInner.AnonymAndInnerTest)
M:(21)anonymAndInner.AnonymAndInnerTest:anonim() (M)generics.Generic1:generic(helper.Interface)
M:(48)anonymAndInner.AnonymAndInnerTest:nested() (S)helper.Debug:debug(java.lang.String)
M:(48)anonymAndInner.AnonymAndInnerTest:nested() (O)anonymAndInner.Outer$Nested:<init>()
M:(48)anonymAndInner.AnonymAndInnerTest:nested() (M)anonymAndInner.Outer$Nested:nested()
M:(48)anonymAndInner.AnonymAndInnerTest:nested() (S)anonymAndInner.Outer$Nested:staticNested()
M:(55)anonymAndInner.AnonymAndInnerTest:test() (M)anonymAndInner.AnonymAndInnerTest:innerClass()
M:(55)anonymAndInner.AnonymAndInnerTest:test() (M)anonymAndInner.AnonymAndInnerTest:anonim()
M:(55)anonymAndInner.AnonymAndInnerTest:test() (M)anonymAndInner.AnonymAndInnerTest:nested()
M:(61)anonymAndInner.AnonymAndInnerTest:main(java.lang.String[]) (O)anonymAndInner.AnonymAndInnerTest:<init>()
M:(61)anonymAndInner.AnonymAndInnerTest:main(java.lang.String[]) (M)anonymAndInner.AnonymAndInnerTest:test()
M:(1)anonymAndInner.AnonymAndInnerTest$2:<init>(anonymAndInner.AnonymAndInnerTest) (O)generics.Generic1:<init>()
M:(36)anonymAndInner.AnonymAndInnerTest$2:generic(helper.Child1) (S)helper.Debug:debug(java.lang.String)
M:(36)anonymAndInner.AnonymAndInnerTest$2:generic(helper.Child1) (M)helper.Child1:foo()
M:(1)anonymAndInner.AnonymAndInnerTest$2:generic(helper.Interface) (M)anonymAndInner.AnonymAndInnerTest$2:generic(helper.Child1)
M:(3)helper.Child2:<init>() (O)helper.Abstract:<init>()
M:(5)helper.Child2:goo() (S)helper.Debug:debug(java.lang.String)
M:(8)helper.Child2:hoo() (S)helper.Debug:debug(java.lang.String)
M:(7)helper.Interface:hoo() (S)helper.Debug:debug(java.lang.String)
M:(3)helper.Child3:<init>() (O)helper.Child2:<init>()
M:(5)helper.Child3:hoo() (S)helper.Debug:debug(java.lang.String)
M:(3)helper.Debug:<init>() (O)java.lang.Object:<init>()
M:(7)helper.Debug:debug(java.lang.String) (M)java.io.PrintStream:println(java.lang.String)
M:(3)helper.Abstract:<init>() (O)java.lang.Object:<init>()
M:(5)helper.Abstract:foo() (S)helper.Debug:debug(java.lang.String)
M:(3)helper.Child1:<init>() (O)helper.Abstract:<init>()
M:(5)helper.Child1:goo() (S)helper.Debug:debug(java.lang.String)
M:(8)helper.Child1:foo() (S)helper.Debug:debug(java.lang.String)
M:(11)helper.Child1:child1() (S)helper.Debug:debug(java.lang.String)
M:(3)helper.Base:<init>() (O)java.lang.Object:<init>()
M:(5)helper.Base:base() (S)helper.Debug:debug(java.lang.String)
M:(3)polimorph.Overload:<init>() (O)java.lang.Object:<init>()
M:(5)polimorph.Overload:foo() (S)helper.Debug:debug(java.lang.String)
M:(8)polimorph.Overload:foo(int) (S)helper.Debug:debug(java.lang.String)
M:(11)polimorph.Overload:foo(java.lang.Object) (S)helper.Debug:debug(java.lang.String)
M:(14)polimorph.Overload:foo(int,java.lang.Object[]) (S)helper.Debug:debug(java.lang.String)
M:(21)polimorph.Overload:overload1() (S)helper.Debug:debug(java.lang.String)
M:(21)polimorph.Overload:overload1() (M)polimorph.Overload:foo()
M:(29)polimorph.Overload:overload2() (S)helper.Debug:debug(java.lang.String)
M:(29)polimorph.Overload:overload2() (M)polimorph.Overload:foo(int)
M:(37)polimorph.Overload:overload3() (S)helper.Debug:debug(java.lang.String)
M:(37)polimorph.Overload:overload3() (M)polimorph.Overload:foo(java.lang.Object)
M:(45)polimorph.Overload:overload4() (S)helper.Debug:debug(java.lang.String)
M:(45)polimorph.Overload:overload4() (M)polimorph.Overload:foo(int,java.lang.Object[])
M:(3)polimorph.PolimorphTest:<init>() (O)java.lang.Object:<init>()
M:(5)polimorph.PolimorphTest:overload() (S)helper.Debug:debug(java.lang.String)
M:(5)polimorph.PolimorphTest:overload() (O)polimorph.Overload:<init>()
M:(5)polimorph.PolimorphTest:overload() (M)polimorph.Overload:overload1()
M:(5)polimorph.PolimorphTest:overload() (M)polimorph.Overload:overload2()
M:(5)polimorph.PolimorphTest:overload() (M)polimorph.Overload:overload3()
M:(5)polimorph.PolimorphTest:overload() (M)polimorph.Overload:overload4()
M:(15)polimorph.PolimorphTest:polimorphic() (S)helper.Debug:debug(java.lang.String)
M:(15)polimorph.PolimorphTest:polimorphic() (O)polimorph.Polimorph:<init>()
M:(15)polimorph.PolimorphTest:polimorphic() (M)polimorph.Polimorph:interfaceImplementation()
M:(15)polimorph.PolimorphTest:polimorphic() (M)polimorph.Polimorph:interfaceImplementation2()
M:(15)polimorph.PolimorphTest:polimorphic() (M)polimorph.Polimorph:abstractClassImplementation()
M:(15)polimorph.PolimorphTest:polimorphic() (O)helper.Child3:<init>()
M:(15)polimorph.PolimorphTest:polimorphic() (M)polimorph.Polimorph:overloadedInterface(helper.Interface)
M:(24)polimorph.PolimorphTest:test() (S)helper.Debug:debug(java.lang.String)
M:(24)polimorph.PolimorphTest:test() (M)polimorph.PolimorphTest:overload()
M:(24)polimorph.PolimorphTest:test() (M)polimorph.PolimorphTest:polimorphic()
M:(29)polimorph.PolimorphTest:main(java.lang.String[]) (O)polimorph.PolimorphTest:<init>()
M:(29)polimorph.PolimorphTest:main(java.lang.String[]) (M)polimorph.PolimorphTest:test()
M:(3)polimorph.Polimorph:<init>() (O)java.lang.Object:<init>()
M:(13)polimorph.Polimorph:overloadedInterface(helper.Interface) (S)helper.Debug:debug(java.lang.String)
M:(13)polimorph.Polimorph:overloadedInterface(helper.Interface) (I)helper.Interface:foo()
M:(13)polimorph.Polimorph:overloadedInterface(helper.Interface) (I)helper.Interface:goo()
M:(13)polimorph.Polimorph:overloadedInterface(helper.Interface) (I)helper.Interface:hoo()
M:(28)polimorph.Polimorph:overloadedInterface() (S)helper.Debug:debug(java.lang.String)
M:(28)polimorph.Polimorph:overloadedInterface() (O)helper.Child3:<init>()
M:(28)polimorph.Polimorph:overloadedInterface() (M)helper.Child3:foo()
M:(28)polimorph.Polimorph:overloadedInterface() (M)helper.Child3:goo()
M:(28)polimorph.Polimorph:overloadedInterface() (M)helper.Child3:hoo()
M:(43)polimorph.Polimorph:overloadedInterface2() (S)helper.Debug:debug(java.lang.String)
M:(43)polimorph.Polimorph:overloadedInterface2() (O)helper.Child2:<init>()
M:(43)polimorph.Polimorph:overloadedInterface2() (M)helper.Child2:foo()
M:(43)polimorph.Polimorph:overloadedInterface2() (M)helper.Child2:goo()
M:(43)polimorph.Polimorph:overloadedInterface2() (M)helper.Child2:hoo()
M:(59)polimorph.Polimorph:interfaceImplementation() (O)helper.Child1:<init>()
M:(59)polimorph.Polimorph:interfaceImplementation() (I)helper.Interface:foo()
M:(59)polimorph.Polimorph:interfaceImplementation() (I)helper.Interface:goo()
M:(59)polimorph.Polimorph:interfaceImplementation() (I)helper.Interface:hoo()
M:(74)polimorph.Polimorph:interfaceImplementation2() (O)helper.Child2:<init>()
M:(74)polimorph.Polimorph:interfaceImplementation2() (I)helper.Interface:foo()
M:(74)polimorph.Polimorph:interfaceImplementation2() (I)helper.Interface:hoo()
M:(84)polimorph.Polimorph:abstractClassImplementation() (O)helper.Child1:<init>()
M:(84)polimorph.Polimorph:abstractClassImplementation() (M)helper.Abstract:foo()
M:(84)polimorph.Polimorph:abstractClassImplementation() (O)helper.Child1:<init>()
M:(84)polimorph.Polimorph:abstractClassImplementation() (M)helper.Child1:foo()
M:(7)initialization.StaticInit:<clinit>() (S)helper.Debug:debug(java.lang.String)
M:(7)initialization.StaticInit:<clinit>() (O)initialization.IntermediateInitialization:<init>()
M:(7)initialization.StaticInit:<clinit>() (M)initialization.IntermediateInitialization:instantiateChild1()
M:(7)initialization.StaticInit:<clinit>() (O)helper.Child2:<init>()
M:(3)initialization.StaticInit:<init>() (O)java.lang.Object:<init>()
M:(15)initialization.StaticInit:staticInit() (S)helper.Debug:debug(java.lang.String)
M:(3)initialization.IntermediateInitialization:<init>() (O)java.lang.Object:<init>()
M:(6)initialization.IntermediateInitialization:instantiateChild1() (S)helper.Debug:debug(java.lang.String)
M:(6)initialization.IntermediateInitialization:instantiateChild1() (O)helper.Child1:<init>()
M:(14)initialization.Init:<init>(helper.Interface) (O)java.lang.Object:<init>()
M:(14)initialization.Init:<init>(helper.Interface) (O)initialization.IntermediateInitialization:<init>()
M:(14)initialization.Init:<init>(helper.Interface) (M)initialization.IntermediateInitialization:instantiateChild1()
M:(14)initialization.Init:<init>(helper.Interface) (S)helper.Debug:debug(java.lang.String)
M:(14)initialization.Init:<init>(helper.Interface) (O)helper.Child1:<init>()
M:(14)initialization.Init:<init>(helper.Interface) (O)helper.Child2:<init>()
M:(14)initialization.Init:<init>(helper.Interface) (S)helper.Debug:debug(java.lang.String)
M:(9)initialization.Constructor:callPrivate() (O)initialization.Constructor:privateMethod()
M:(12)initialization.Constructor:<init>() (O)java.lang.Object:<init>()
M:(12)initialization.Constructor:<init>() (S)helper.Debug:debug(java.lang.String)
M:(5)initialization.InitializationTest:<init>() (O)java.lang.Object:<init>()
M:(14)initialization.InitializationTest:test() (S)helper.Debug:debug(java.lang.String)
M:(14)initialization.InitializationTest:test() (S)initialization.StaticInit:staticInit()
M:(14)initialization.InitializationTest:test() (O)helper.Child1:<init>()
M:(14)initialization.InitializationTest:test() (O)initialization.Init:<init>(helper.Interface)
M:(14)initialization.InitializationTest:test() (O)initialization.Constructor:<init>()
M:(21)initialization.InitializationTest:main(java.lang.String[]) (O)initialization.InitializationTest:<init>()
M:(21)initialization.InitializationTest:main(java.lang.String[]) (M)initialization.InitializationTest:test()
M:(9)dynamic.DynamicTest:<init>() (O)java.lang.Object:<init>()
M:(16)dynamic.DynamicTest:reflection() (S)helper.Debug:debug(java.lang.String)
M:(16)dynamic.DynamicTest:reflection() (S)java.lang.Class:forName(java.lang.String)
M:(16)dynamic.DynamicTest:reflection() (M)java.lang.Class:getMethod(java.lang.String,java.lang.Class[])
M:(16)dynamic.DynamicTest:reflection() (M)java.lang.reflect.Method:setAccessible(boolean)
M:(16)dynamic.DynamicTest:reflection() (M)java.lang.reflect.Method:invoke(java.lang.Object,java.lang.Object[])
M:(16)dynamic.DynamicTest:reflection() (M)java.io.PrintStream:println(java.lang.String)
M:(37)dynamic.DynamicTest:methodHandle() (S)helper.Debug:debug(java.lang.String)
M:(37)dynamic.DynamicTest:methodHandle() (S)java.lang.invoke.MethodType:methodType(java.lang.Class,java.lang.Class)
M:(37)dynamic.DynamicTest:methodHandle() (S)java.lang.invoke.MethodHandles:lookup()
M:(37)dynamic.DynamicTest:methodHandle() (M)java.lang.invoke.MethodHandles$Lookup:findStatic(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)
M:(37)dynamic.DynamicTest:methodHandle() (M)java.lang.invoke.MethodHandle:invokeWithArguments(java.lang.Object[])
M:(37)dynamic.DynamicTest:methodHandle() (M)java.io.PrintStream:println(java.lang.String)
M:(37)dynamic.DynamicTest:methodHandle() (M)java.lang.Throwable:printStackTrace()
M:(51)dynamic.DynamicTest:test() (M)dynamic.DynamicTest:methodHandle()
M:(51)dynamic.DynamicTest:test() (M)dynamic.DynamicTest:reflection()
M:(55)dynamic.DynamicTest:main(java.lang.String[]) (O)dynamic.DynamicTest:<init>()
M:(55)dynamic.DynamicTest:main(java.lang.String[]) (M)dynamic.DynamicTest:test()
M:(3)java8.Java8Test:<init>() (O)java.lang.Object:<init>()
M:(9)java8.Java8Test:lambda() (S)helper.Debug:debug(java.lang.String)
M:(9)java8.Java8Test:lambda() (D)java.lang.Object:compare()
M:(9)java8.Java8Test:lambda() (I)java8.Lambda:compare(int,int)
M:(15)java8.Java8Test:methodReference() (S)helper.Debug:debug(java.lang.String)
M:(15)java8.Java8Test:methodReference() (O)java8.MethodReference:<init>()
M:(15)java8.Java8Test:methodReference() (M)java8.MethodReference:doSomething()
M:(25)java8.Java8Test:functionalInterface() (S)helper.Debug:debug(java.lang.String)
M:(25)java8.Java8Test:functionalInterface() (D)java.lang.Object:doSomething()
M:(25)java8.Java8Test:functionalInterface() (I)java8.FunctionalInterface:doSomething(java.lang.String)
M:(35)java8.Java8Test:functionalInterface2() (S)helper.Debug:debug(java.lang.String)
M:(35)java8.Java8Test:functionalInterface2() (D)java.lang.Object:doSomething()
M:(35)java8.Java8Test:functionalInterface2() (D)java.lang.Object:doSomething()
M:(35)java8.Java8Test:functionalInterface2() (I)java8.FunctionalInterface:doSomething(java.lang.String)
M:(42)java8.Java8Test:test() (S)helper.Debug:debug(java.lang.String)
M:(42)java8.Java8Test:test() (O)java8.Java8Test:lambda()
M:(42)java8.Java8Test:test() (M)java8.Java8Test:methodReference()
M:(42)java8.Java8Test:test() (M)java8.Java8Test:functionalInterface()
M:(42)java8.Java8Test:test() (M)java8.Java8Test:functionalInterface2()
M:(50)java8.Java8Test:main(java.lang.String[]) (O)java8.Java8Test:<init>()
M:(50)java8.Java8Test:main(java.lang.String[]) (M)java8.Java8Test:test()
M:(10)java8.Java8Test:lambda$0(int,int) (S)helper.Debug:debug(java.lang.String)
M:(36)java8.Java8Test:lambda$3(java.lang.String) (O)helper.Child1:<init>()
M:(36)java8.Java8Test:lambda$3(java.lang.String) (O)java.lang.String:<init>(java.lang.String)
M:(36)java8.Java8Test:lambda$3(java.lang.String) (M)java.lang.String:toLowerCase()
M:(36)java8.Java8Test:lambda$3(java.lang.String) (M)java.io.PrintStream:println(java.lang.String)
M:(10)java8.MethodReference:print(java.lang.String) (S)helper.Debug:debug(java.lang.String)
M:(15)java8.MethodReference:privatePrint() (S)helper.Debug:debug(java.lang.String)
M:(18)java8.MethodReference:<init>() (O)java.lang.Object:<init>()
M:(18)java8.MethodReference:<init>() (O)java.util.ArrayList:<init>()
M:(18)java8.MethodReference:<init>() (I)java.util.List:add(java.lang.Object)
M:(18)java8.MethodReference:<init>() (I)java.util.List:add(java.lang.Object)
M:(28)java8.MethodReference:doSomething() (D)java.lang.Object:accept()
M:(28)java8.MethodReference:doSomething() (I)java.util.List:forEach(java.util.function.Consumer)
M:(2)CallGraphTest:<init>() (O)java.lang.Object:<init>()
M:(5)CallGraphTest:main(java.lang.String[]) (O)parser.ParserTest:<init>()
M:(5)CallGraphTest:main(java.lang.String[]) (M)parser.ParserTest:test()
M:(5)CallGraphTest:main(java.lang.String[]) (O)anonymAndInner.AnonymAndInnerTest:<init>()
M:(5)CallGraphTest:main(java.lang.String[]) (M)anonymAndInner.AnonymAndInnerTest:test()
M:(5)CallGraphTest:main(java.lang.String[]) (O)initialization.InitializationTest:<init>()
M:(5)CallGraphTest:main(java.lang.String[]) (M)initialization.InitializationTest:test()
M:(5)CallGraphTest:main(java.lang.String[]) (O)java8.Java8Test:<init>()
M:(5)CallGraphTest:main(java.lang.String[]) (M)java8.Java8Test:test()
M:(5)CallGraphTest:main(java.lang.String[]) (O)generics.GenericsTest:<init>()
M:(5)CallGraphTest:main(java.lang.String[]) (M)generics.GenericsTest:test()
M:(5)CallGraphTest:main(java.lang.String[]) (O)polimorph.PolimorphTest:<init>()
M:(5)CallGraphTest:main(java.lang.String[]) (M)polimorph.PolimorphTest:test()
M:(5)CallGraphTest:main(java.lang.String[]) (O)dynamic.DynamicTest:<init>()
M:(5)CallGraphTest:main(java.lang.String[]) (M)dynamic.DynamicTest:test()
M:(3)generics.GenericsTest:<init>() (O)java.lang.Object:<init>()
M:(8)generics.GenericsTest:genericMethod(helper.Interface) (S)helper.Debug:debug(java.lang.String)
M:(8)generics.GenericsTest:genericMethod(helper.Interface) (I)helper.Interface:foo()
M:(13)generics.GenericsTest:test() (S)helper.Debug:debug(java.lang.String)
M:(13)generics.GenericsTest:test() (O)generics.Generic1:<init>()
M:(13)generics.GenericsTest:test() (O)helper.Child1:<init>()
M:(13)generics.GenericsTest:test() (M)generics.Generic1:generic(helper.Interface)
M:(13)generics.GenericsTest:test() (O)generics.Generic1:<init>()
M:(13)generics.GenericsTest:test() (O)helper.Child2:<init>()
M:(13)generics.GenericsTest:test() (M)generics.Generic1:generic(helper.Interface)
M:(13)generics.GenericsTest:test() (O)generics.Generic2:<init>()
M:(13)generics.GenericsTest:test() (O)helper.Child2:<init>()
M:(13)generics.GenericsTest:test() (M)generics.Generic2:generic(helper.Interface,generics.Generic1)
M:(13)generics.GenericsTest:test() (O)generics.Generic3:<init>()
M:(13)generics.GenericsTest:test() (M)generics.Generic3:foo()
M:(13)generics.GenericsTest:test() (O)helper.Child2:<init>()
M:(13)generics.GenericsTest:test() (M)generics.GenericsTest:genericMethod(helper.Interface)
M:(30)generics.GenericsTest:main(java.lang.String[]) (O)generics.GenericsTest:<init>()
M:(30)generics.GenericsTest:main(java.lang.String[]) (M)generics.GenericsTest:test()
M:(3)generics.Generic1:<init>() (O)java.lang.Object:<init>()
M:(9)generics.Generic1:generic(helper.Interface) (S)helper.Debug:debug(java.lang.String)
M:(9)generics.Generic1:generic(helper.Interface) (I)helper.Interface:foo()
M:(3)generics.Generic2:<init>() (O)java.lang.Object:<init>()
M:(8)generics.Generic2:generic(helper.Interface,generics.Generic1) (S)helper.Debug:debug(java.lang.String)
M:(8)generics.Generic2:generic(helper.Interface,generics.Generic1) (I)helper.Interface:foo()
M:(8)generics.Generic2:generic(helper.Interface,generics.Generic1) (M)generics.Generic1:generic(helper.Interface)
M:(3)generics.Generic3:<init>() (O)generics.Generic1:<init>()
M:(8)generics.Generic3:foo() (S)helper.Debug:debug(java.lang.String)
M:(8)generics.Generic3:foo() (O)helper.Child1:<init>()
M:(8)generics.Generic3:foo() (M)generics.Generic3:generic(helper.Interface)
M:(3)parser.ParserTest:<init>() (O)java.lang.Object:<init>()
M:(12)parser.ParserTest:test() (S)helper.Debug:debug(java.lang.String)
M:(12)parser.ParserTest:test() (O)parser.ForParser:<init>()
M:(12)parser.ParserTest:test() (M)parser.ForParser:foo()
M:(12)parser.ParserTest:test() (M)parser.ForParser:goo()
M:(12)parser.ParserTest:test() (O)generics.Generic1:<init>()
M:(12)parser.ParserTest:test() (O)parser.ForParser:<init>()
M:(12)parser.ParserTest:test() (O)helper.Child2:<init>()
M:(12)parser.ParserTest:test() (M)parser.ForParser:validMethod(helper.Child2,generics.Generic1,java.lang.Class[])
M:(12)parser.ParserTest:test() (O)helper.Child2:<init>()
M:(12)parser.ParserTest:test() (M)generics.Generic2:generic(helper.Interface,generics.Generic1)
M:(12)parser.ParserTest:test() (O)parser.ForParser:<init>()
M:(12)parser.ParserTest:test() (O)helper.Child2:<init>()
M:(12)parser.ParserTest:test() (M)parser.ForParser:validGenericMethod(helper.Child2,generics.Generic1,java.lang.Class[])
M:(12)parser.ParserTest:test() (O)helper.Child2:<init>()
M:(12)parser.ParserTest:test() (M)generics.Generic2:generic(helper.Interface,generics.Generic1)
M:(23)parser.ParserTest:main(java.lang.String[]) (O)parser.ParserTest:<init>()
M:(23)parser.ParserTest:main(java.lang.String[]) (M)parser.ParserTest:test()
M:(3)parser.ForParser:<init>() (O)java.lang.Object:<init>()
M:(8)parser.ForParser:foo() (S)helper.Debug:debug(java.lang.String)
M:(12)parser.ForParser:goo() (S)helper.Debug:debug(java.lang.String)
M:(17)parser.ForParser:validMethod(helper.Child2,generics.Generic1,java.lang.Class[]) (S)helper.Debug:debug(java.lang.String)
M:(17)parser.ForParser:validMethod(helper.Child2,generics.Generic1,java.lang.Class[]) (O)generics.Generic2:<init>()
M:(17)parser.ForParser:validMethod(helper.Child2,generics.Generic1,java.lang.Class[]) (M)generics.Generic2:generic(helper.Interface,generics.Generic1)
M:(25)parser.ForParser:validGenericMethod(helper.Child2,generics.Generic1,java.lang.Class[]) (S)helper.Debug:debug(java.lang.String)
M:(25)parser.ForParser:validGenericMethod(helper.Child2,generics.Generic1,java.lang.Class[]) (O)generics.Generic2:<init>()
M:(25)parser.ForParser:validGenericMethod(helper.Child2,generics.Generic1,java.lang.Class[]) (O)generics.Generic1:<init>()
M:(25)parser.ForParser:validGenericMethod(helper.Child2,generics.Generic1,java.lang.Class[]) (M)generics.Generic2:generic(helper.Interface,generics.Generic1)
M:(3)anonymAndInner.Outer:<init>() (O)java.lang.Object:<init>()
M:(6)anonymAndInner.Outer:inner() (S)helper.Debug:debug(java.lang.String)
M:(6)anonymAndInner.Outer:inner() (O)anonymAndInner.Outer$Inner:<init>(anonymAndInner.Outer)
M:(6)anonymAndInner.Outer:inner() (M)anonymAndInner.Outer$Inner:inner()
M:(1)anonymAndInner.AnonymAndInnerTest$1:<init>(anonymAndInner.AnonymAndInnerTest) (O)helper.Child1:<init>()
M:(25)anonymAndInner.AnonymAndInnerTest$1:foo() (S)helper.Debug:debug(java.lang.String)
M:(16)anonymAndInner.Outer$Nested:<init>() (O)java.lang.Object:<init>()
M:(18)anonymAndInner.Outer$Nested:staticNested() (S)helper.Debug:debug(java.lang.String)
M:(22)anonymAndInner.Outer$Nested:nested() (S)helper.Debug:debug(java.lang.String)
M:(10)anonymAndInner.Outer$Inner:<init>(anonymAndInner.Outer) (O)java.lang.Object:<init>()
M:(12)anonymAndInner.Outer$Inner:inner() (S)helper.Debug:debug(java.lang.String)
M:(3)anonymAndInner.AnonymAndInnerTest:<init>() (O)java.lang.Object:<init>()
M:(9)anonymAndInner.AnonymAndInnerTest:innerClass() (S)helper.Debug:debug(java.lang.String)
M:(9)anonymAndInner.AnonymAndInnerTest:innerClass() (O)anonymAndInner.Outer:<init>()
M:(9)anonymAndInner.AnonymAndInnerTest:innerClass() (M)anonymAndInner.Outer:inner()
M:(21)anonymAndInner.AnonymAndInnerTest:anonim() (S)helper.Debug:debug(java.lang.String)
M:(21)anonymAndInner.AnonymAndInnerTest:anonim() (O)anonymAndInner.AnonymAndInnerTest$1:<init>(anonymAndInner.AnonymAndInnerTest)
M:(21)anonymAndInner.AnonymAndInnerTest:anonim() (M)helper.Child1:foo()
M:(21)anonymAndInner.AnonymAndInnerTest:anonim() (M)helper.Child1:goo()
M:(21)anonymAndInner.AnonymAndInnerTest:anonim() (O)anonymAndInner.AnonymAndInnerTest$2:<init>(anonymAndInner.AnonymAndInnerTest)
M:(21)anonymAndInner.AnonymAndInnerTest:anonim() (M)generics.Generic1:generic(helper.Interface)
M:(48)anonymAndInner.AnonymAndInnerTest:nested() (S)helper.Debug:debug(java.lang.String)
M:(48)anonymAndInner.AnonymAndInnerTest:nested() (O)anonymAndInner.Outer$Nested:<init>()
M:(48)anonymAndInner.AnonymAndInnerTest:nested() (M)anonymAndInner.Outer$Nested:nested()
M:(48)anonymAndInner.AnonymAndInnerTest:nested() (S)anonymAndInner.Outer$Nested:staticNested()
M:(55)anonymAndInner.AnonymAndInnerTest:test() (M)anonymAndInner.AnonymAndInnerTest:innerClass()
M:(55)anonymAndInner.AnonymAndInnerTest:test() (M)anonymAndInner.AnonymAndInnerTest:anonim()
M:(55)anonymAndInner.AnonymAndInnerTest:test() (M)anonymAndInner.AnonymAndInnerTest:nested()
M:(61)anonymAndInner.AnonymAndInnerTest:main(java.lang.String[]) (O)anonymAndInner.AnonymAndInnerTest:<init>()
M:(61)anonymAndInner.AnonymAndInnerTest:main(java.lang.String[]) (M)anonymAndInner.AnonymAndInnerTest:test()
M:(1)anonymAndInner.AnonymAndInnerTest$2:<init>(anonymAndInner.AnonymAndInnerTest) (O)generics.Generic1:<init>()
M:(36)anonymAndInner.AnonymAndInnerTest$2:generic(helper.Child1) (S)helper.Debug:debug(java.lang.String)
M:(36)anonymAndInner.AnonymAndInnerTest$2:generic(helper.Child1) (M)helper.Child1:foo()
M:(1)anonymAndInner.AnonymAndInnerTest$2:generic(helper.Interface) (M)anonymAndInner.AnonymAndInnerTest$2:generic(helper.Child1)
M:(3)helper.Child2:<init>() (O)helper.Abstract:<init>()
M:(5)helper.Child2:goo() (S)helper.Debug:debug(java.lang.String)
M:(8)helper.Child2:hoo() (S)helper.Debug:debug(java.lang.String)
M:(7)helper.Interface:hoo() (S)helper.Debug:debug(java.lang.String)
M:(3)helper.Child3:<init>() (O)helper.Child2:<init>()
M:(5)helper.Child3:hoo() (S)helper.Debug:debug(java.lang.String)
M:(3)helper.Debug:<init>() (O)java.lang.Object:<init>()
M:(7)helper.Debug:debug(java.lang.String) (M)java.io.PrintStream:println(java.lang.String)
M:(3)helper.Abstract:<init>() (O)java.lang.Object:<init>()
M:(5)helper.Abstract:foo() (S)helper.Debug:debug(java.lang.String)
M:(3)helper.Child1:<init>() (O)helper.Abstract:<init>()
M:(5)helper.Child1:goo() (S)helper.Debug:debug(java.lang.String)
M:(8)helper.Child1:foo() (S)helper.Debug:debug(java.lang.String)
M:(11)helper.Child1:child1() (S)helper.Debug:debug(java.lang.String)
M:(3)helper.Base:<init>() (O)java.lang.Object:<init>()
M:(5)helper.Base:base() (S)helper.Debug:debug(java.lang.String)
M:(3)polimorph.Overload:<init>() (O)java.lang.Object:<init>()
M:(5)polimorph.Overload:foo() (S)helper.Debug:debug(java.lang.String)
M:(8)polimorph.Overload:foo(int) (S)helper.Debug:debug(java.lang.String)
M:(11)polimorph.Overload:foo(java.lang.Object) (S)helper.Debug:debug(java.lang.String)
M:(14)polimorph.Overload:foo(int,java.lang.Object[]) (S)helper.Debug:debug(java.lang.String)
M:(21)polimorph.Overload:overload1() (S)helper.Debug:debug(java.lang.String)
M:(21)polimorph.Overload:overload1() (M)polimorph.Overload:foo()
M:(29)polimorph.Overload:overload2() (S)helper.Debug:debug(java.lang.String)
M:(29)polimorph.Overload:overload2() (M)polimorph.Overload:foo(int)
M:(37)polimorph.Overload:overload3() (S)helper.Debug:debug(java.lang.String)
M:(37)polimorph.Overload:overload3() (M)polimorph.Overload:foo(java.lang.Object)
M:(45)polimorph.Overload:overload4() (S)helper.Debug:debug(java.lang.String)
M:(45)polimorph.Overload:overload4() (M)polimorph.Overload:foo(int,java.lang.Object[])
M:(3)polimorph.PolimorphTest:<init>() (O)java.lang.Object:<init>()
M:(5)polimorph.PolimorphTest:overload() (S)helper.Debug:debug(java.lang.String)
M:(5)polimorph.PolimorphTest:overload() (O)polimorph.Overload:<init>()
M:(5)polimorph.PolimorphTest:overload() (M)polimorph.Overload:overload1()
M:(5)polimorph.PolimorphTest:overload() (M)polimorph.Overload:overload2()
M:(5)polimorph.PolimorphTest:overload() (M)polimorph.Overload:overload3()
M:(5)polimorph.PolimorphTest:overload() (M)polimorph.Overload:overload4()
M:(15)polimorph.PolimorphTest:polimorphic() (S)helper.Debug:debug(java.lang.String)
M:(15)polimorph.PolimorphTest:polimorphic() (O)polimorph.Polimorph:<init>()
M:(15)polimorph.PolimorphTest:polimorphic() (M)polimorph.Polimorph:interfaceImplementation()
M:(15)polimorph.PolimorphTest:polimorphic() (M)polimorph.Polimorph:interfaceImplementation2()
M:(15)polimorph.PolimorphTest:polimorphic() (M)polimorph.Polimorph:abstractClassImplementation()
M:(15)polimorph.PolimorphTest:polimorphic() (O)helper.Child3:<init>()
M:(15)polimorph.PolimorphTest:polimorphic() (M)polimorph.Polimorph:overloadedInterface(helper.Interface)
M:(24)polimorph.PolimorphTest:test() (S)helper.Debug:debug(java.lang.String)
M:(24)polimorph.PolimorphTest:test() (M)polimorph.PolimorphTest:overload()
M:(24)polimorph.PolimorphTest:test() (M)polimorph.PolimorphTest:polimorphic()
M:(29)polimorph.PolimorphTest:main(java.lang.String[]) (O)polimorph.PolimorphTest:<init>()
M:(29)polimorph.PolimorphTest:main(java.lang.String[]) (M)polimorph.PolimorphTest:test()
M:(3)polimorph.Polimorph:<init>() (O)java.lang.Object:<init>()
M:(13)polimorph.Polimorph:overloadedInterface(helper.Interface) (S)helper.Debug:debug(java.lang.String)
M:(13)polimorph.Polimorph:overloadedInterface(helper.Interface) (I)helper.Interface:foo()
M:(13)polimorph.Polimorph:overloadedInterface(helper.Interface) (I)helper.Interface:goo()
M:(13)polimorph.Polimorph:overloadedInterface(helper.Interface) (I)helper.Interface:hoo()
M:(28)polimorph.Polimorph:overloadedInterface() (S)helper.Debug:debug(java.lang.String)
M:(28)polimorph.Polimorph:overloadedInterface() (O)helper.Child3:<init>()
M:(28)polimorph.Polimorph:overloadedInterface() (M)helper.Child3:foo()
M:(28)polimorph.Polimorph:overloadedInterface() (M)helper.Child3:goo()
M:(28)polimorph.Polimorph:overloadedInterface() (M)helper.Child3:hoo()
M:(43)polimorph.Polimorph:overloadedInterface2() (S)helper.Debug:debug(java.lang.String)
M:(43)polimorph.Polimorph:overloadedInterface2() (O)helper.Child2:<init>()
M:(43)polimorph.Polimorph:overloadedInterface2() (M)helper.Child2:foo()
M:(43)polimorph.Polimorph:overloadedInterface2() (M)helper.Child2:goo()
M:(43)polimorph.Polimorph:overloadedInterface2() (M)helper.Child2:hoo()
M:(59)polimorph.Polimorph:interfaceImplementation() (O)helper.Child1:<init>()
M:(59)polimorph.Polimorph:interfaceImplementation() (I)helper.Interface:foo()
M:(59)polimorph.Polimorph:interfaceImplementation() (I)helper.Interface:goo()
M:(59)polimorph.Polimorph:interfaceImplementation() (I)helper.Interface:hoo()
M:(74)polimorph.Polimorph:interfaceImplementation2() (O)helper.Child2:<init>()
M:(74)polimorph.Polimorph:interfaceImplementation2() (I)helper.Interface:foo()
M:(74)polimorph.Polimorph:interfaceImplementation2() (I)helper.Interface:hoo()
M:(84)polimorph.Polimorph:abstractClassImplementation() (O)helper.Child1:<init>()
M:(84)polimorph.Polimorph:abstractClassImplementation() (M)helper.Abstract:foo()
M:(84)polimorph.Polimorph:abstractClassImplementation() (O)helper.Child1:<init>()
M:(84)polimorph.Polimorph:abstractClassImplementation() (M)helper.Child1:foo()
M:(7)initialization.StaticInit:<clinit>() (S)helper.Debug:debug(java.lang.String)
M:(7)initialization.StaticInit:<clinit>() (O)initialization.IntermediateInitialization:<init>()
M:(7)initialization.StaticInit:<clinit>() (M)initialization.IntermediateInitialization:instantiateChild1()
M:(7)initialization.StaticInit:<clinit>() (O)helper.Child2:<init>()
M:(3)initialization.StaticInit:<init>() (O)java.lang.Object:<init>()
M:(15)initialization.StaticInit:staticInit() (S)helper.Debug:debug(java.lang.String)
M:(3)initialization.IntermediateInitialization:<init>() (O)java.lang.Object:<init>()
M:(6)initialization.IntermediateInitialization:instantiateChild1() (S)helper.Debug:debug(java.lang.String)
M:(6)initialization.IntermediateInitialization:instantiateChild1() (O)helper.Child1:<init>()
M:(14)initialization.Init:<init>(helper.Interface) (O)java.lang.Object:<init>()
M:(14)initialization.Init:<init>(helper.Interface) (O)initialization.IntermediateInitialization:<init>()
M:(14)initialization.Init:<init>(helper.Interface) (M)initialization.IntermediateInitialization:instantiateChild1()
M:(14)initialization.Init:<init>(helper.Interface) (S)helper.Debug:debug(java.lang.String)
M:(14)initialization.Init:<init>(helper.Interface) (O)helper.Child1:<init>()
M:(14)initialization.Init:<init>(helper.Interface) (O)helper.Child2:<init>()
M:(14)initialization.Init:<init>(helper.Interface) (S)helper.Debug:debug(java.lang.String)
M:(9)initialization.Constructor:callPrivate() (O)initialization.Constructor:privateMethod()
M:(12)initialization.Constructor:<init>() (O)java.lang.Object:<init>()
M:(12)initialization.Constructor:<init>() (S)helper.Debug:debug(java.lang.String)
M:(5)initialization.InitializationTest:<init>() (O)java.lang.Object:<init>()
M:(14)initialization.InitializationTest:test() (S)helper.Debug:debug(java.lang.String)
M:(14)initialization.InitializationTest:test() (S)initialization.StaticInit:staticInit()
M:(14)initialization.InitializationTest:test() (O)helper.Child1:<init>()
M:(14)initialization.InitializationTest:test() (O)initialization.Init:<init>(helper.Interface)
M:(14)initialization.InitializationTest:test() (O)initialization.Constructor:<init>()
M:(21)initialization.InitializationTest:main(java.lang.String[]) (O)initialization.InitializationTest:<init>()
M:(21)initialization.InitializationTest:main(java.lang.String[]) (M)initialization.InitializationTest:test()
