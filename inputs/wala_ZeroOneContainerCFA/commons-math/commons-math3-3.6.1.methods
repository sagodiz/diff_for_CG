INIT
1974
java.io.BufferedReader.<init>(Ljava/io/Reader;)V
java.io.FileInputStream.<init>(Ljava/io/File;)V
java.io.IOException.<init>()V
java.io.IOException.<init>(Ljava/lang/String;)V
java.io.InputStreamReader.<init>(Ljava/io/InputStream;Ljava/lang/String;)V
java.io.InputStreamReader.<init>(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V
java.lang.ArithmeticException.<init>()V
java.lang.ArrayIndexOutOfBoundsException.<init>(I)V
java.lang.AssertionError.<init>()V
java.lang.Enum.<init>(Ljava/lang/String;I)V
java.lang.IllegalArgumentException.<init>()V
java.lang.IllegalArgumentException.<init>(Ljava/lang/Throwable;)V
java.lang.IllegalStateException.<init>()V
java.lang.IllegalStateException.<init>(Ljava/lang/Throwable;)V
java.lang.Number.<init>()V
java.lang.Object.<init>()V
java.lang.RuntimeException.<init>()V
java.lang.RuntimeException.<init>(Ljava/lang/String;)V
java.lang.RuntimeException.<init>(Ljava/lang/Throwable;)V
java.lang.String.<init>([C)V
java.lang.String.<init>([CII)V
java.lang.StringBuffer.<init>()V
java.lang.StringBuilder.<init>()V
java.lang.UnsupportedOperationException.<init>()V
java.lang.UnsupportedOperationException.<init>(Ljava/lang/String;)V
java.math.BigDecimal.<init>(D)V
java.math.BigDecimal.<init>(DLjava/math/MathContext;)V
java.math.BigDecimal.<init>(I)V
java.math.BigDecimal.<init>(ILjava/math/MathContext;)V
java.math.BigDecimal.<init>(J)V
java.math.BigDecimal.<init>(JLjava/math/MathContext;)V
java.math.BigDecimal.<init>(Ljava/lang/String;)V
java.math.BigDecimal.<init>(Ljava/lang/String;Ljava/math/MathContext;)V
java.math.BigDecimal.<init>(Ljava/math/BigInteger;)V
java.math.BigDecimal.<init>(Ljava/math/BigInteger;I)V
java.math.BigDecimal.<init>(Ljava/math/BigInteger;ILjava/math/MathContext;)V
java.math.BigDecimal.<init>(Ljava/math/BigInteger;Ljava/math/MathContext;)V
java.math.BigDecimal.<init>([C)V
java.math.BigDecimal.<init>([CII)V
java.math.BigDecimal.<init>([CIILjava/math/MathContext;)V
java.math.BigDecimal.<init>([CLjava/math/MathContext;)V
java.math.BigInteger.<init>(Ljava/lang/String;)V
java.net.URL.<init>(Ljava/lang/String;)V
java.security.SecureRandom.<init>()V
java.text.DecimalFormat.<init>(Ljava/lang/String;)V
java.text.FieldPosition.<init>(I)V
java.text.MessageFormat.<init>(Ljava/lang/String;Ljava/util/Locale;)V
java.text.NumberFormat.<init>()V
java.text.ParsePosition.<init>(I)V
java.util.ArrayList.<init>()V
java.util.ArrayList.<init>(I)V
java.util.ArrayList.<init>(Ljava/util/Collection;)V
java.util.BitSet.<init>(I)V
java.util.ConcurrentModificationException.<init>()V
java.util.EventObject.<init>(Ljava/lang/Object;)V
java.util.HashMap.<init>()V
java.util.HashMap.<init>(I)V
java.util.HashSet.<init>()V
java.util.HashSet.<init>(I)V
java.util.HashSet.<init>(Ljava/util/Collection;)V
java.util.IdentityHashMap.<init>()V
java.util.LinkedHashSet.<init>()V
java.util.NoSuchElementException.<init>()V
java.util.NoSuchElementException.<init>(Ljava/lang/String;)V
java.util.Random.<init>()V
java.util.StringTokenizer.<init>(Ljava/lang/String;Ljava/lang/String;)V
java.util.TreeMap.<init>()V
java.util.TreeMap.<init>(Ljava/util/Comparator;)V
java.util.TreeSet.<init>()V
java.util.TreeSet.<init>(Ljava/util/Comparator;)V
java.util.concurrent.ConcurrentHashMap.<init>()V
java.util.concurrent.CopyOnWriteArrayList.<init>()V
java.util.concurrent.atomic.AtomicLong.<init>(J)V
java.util.concurrent.atomic.AtomicReference.<init>(Ljava/lang/Object;)V
org.apache.commons.math3.analysis.FunctionUtils$1.<init>([Lorg/apache/commons/math3/analysis/UnivariateFunction;)V
org.apache.commons.math3.analysis.FunctionUtils$10.<init>(Lorg/apache/commons/math3/analysis/BivariateFunction;Lorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/analysis/UnivariateFunction;)V
org.apache.commons.math3.analysis.FunctionUtils$11.<init>(Lorg/apache/commons/math3/analysis/BivariateFunction;DLorg/apache/commons/math3/analysis/UnivariateFunction;)V
org.apache.commons.math3.analysis.FunctionUtils$12.<init>(Lorg/apache/commons/math3/analysis/BivariateFunction;D)V
org.apache.commons.math3.analysis.FunctionUtils$13.<init>(Lorg/apache/commons/math3/analysis/BivariateFunction;D)V
org.apache.commons.math3.analysis.FunctionUtils$14$1.<init>(Lorg/apache/commons/math3/analysis/FunctionUtils$14;)V
org.apache.commons.math3.analysis.FunctionUtils$14.<init>(Lorg/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction;)V
org.apache.commons.math3.analysis.FunctionUtils$15.<init>(Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;)V
org.apache.commons.math3.analysis.FunctionUtils$16$1.<init>(Lorg/apache/commons/math3/analysis/FunctionUtils$16;I)V
org.apache.commons.math3.analysis.FunctionUtils$16$2.<init>(Lorg/apache/commons/math3/analysis/FunctionUtils$16;)V
org.apache.commons.math3.analysis.FunctionUtils$16.<init>(Lorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableFunction;)V
org.apache.commons.math3.analysis.FunctionUtils$17.<init>(Lorg/apache/commons/math3/analysis/DifferentiableMultivariateFunction;)V
org.apache.commons.math3.analysis.FunctionUtils$18$1.<init>(Lorg/apache/commons/math3/analysis/FunctionUtils$18;)V
org.apache.commons.math3.analysis.FunctionUtils$18.<init>(Lorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction;)V
org.apache.commons.math3.analysis.FunctionUtils$19.<init>(Lorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;)V
org.apache.commons.math3.analysis.FunctionUtils$2.<init>([Lorg/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction;)V
org.apache.commons.math3.analysis.FunctionUtils$3$1.<init>(Lorg/apache/commons/math3/analysis/FunctionUtils$3;)V
org.apache.commons.math3.analysis.FunctionUtils$3.<init>([Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;)V
org.apache.commons.math3.analysis.FunctionUtils$4.<init>([Lorg/apache/commons/math3/analysis/UnivariateFunction;)V
org.apache.commons.math3.analysis.FunctionUtils$5.<init>([Lorg/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction;)V
org.apache.commons.math3.analysis.FunctionUtils$6$1.<init>(Lorg/apache/commons/math3/analysis/FunctionUtils$6;)V
org.apache.commons.math3.analysis.FunctionUtils$6.<init>([Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;)V
org.apache.commons.math3.analysis.FunctionUtils$7.<init>([Lorg/apache/commons/math3/analysis/UnivariateFunction;)V
org.apache.commons.math3.analysis.FunctionUtils$8.<init>([Lorg/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction;)V
org.apache.commons.math3.analysis.FunctionUtils$9$1.<init>(Lorg/apache/commons/math3/analysis/FunctionUtils$9;)V
org.apache.commons.math3.analysis.FunctionUtils$9.<init>([Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;)V
org.apache.commons.math3.analysis.FunctionUtils.<init>()V
org.apache.commons.math3.analysis.differentiation.DSCompiler.<init>(IILorg/apache/commons/math3/analysis/differentiation/DSCompiler;Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V
org.apache.commons.math3.analysis.differentiation.DerivativeStructure$1.<init>(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)V
org.apache.commons.math3.analysis.differentiation.DerivativeStructure$DataTransferObject.<init>(II[D)V
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.<init>(DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)V
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.<init>(DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)V
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.<init>(DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)V
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.<init>(II)V
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.<init>(IID)V
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.<init>(IIID)V
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.<init>(II[D)V
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.<init>(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.<init>(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)V
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.<init>(Lorg/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator;Lorg/apache/commons/math3/analysis/UnivariateFunction;)V
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$2.<init>(Lorg/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator;Lorg/apache/commons/math3/analysis/UnivariateVectorFunction;)V
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$3.<init>(Lorg/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator;Lorg/apache/commons/math3/analysis/UnivariateMatrixFunction;)V
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator.<init>(ID)V
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator.<init>(IDDD)V
org.apache.commons.math3.analysis.differentiation.GradientFunction.<init>(Lorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableFunction;)V
org.apache.commons.math3.analysis.differentiation.JacobianFunction.<init>(Lorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction;)V
org.apache.commons.math3.analysis.differentiation.SparseGradient$1.<init>(Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)V
org.apache.commons.math3.analysis.differentiation.SparseGradient.<init>(DDLjava/util/Map;)V
org.apache.commons.math3.analysis.differentiation.SparseGradient.<init>(DLjava/util/Map;)V
org.apache.commons.math3.analysis.function.Abs.<init>()V
org.apache.commons.math3.analysis.function.Acos.<init>()V
org.apache.commons.math3.analysis.function.Acosh.<init>()V
org.apache.commons.math3.analysis.function.Add.<init>()V
org.apache.commons.math3.analysis.function.Asin.<init>()V
org.apache.commons.math3.analysis.function.Asinh.<init>()V
org.apache.commons.math3.analysis.function.Atan.<init>()V
org.apache.commons.math3.analysis.function.Atan2.<init>()V
org.apache.commons.math3.analysis.function.Atanh.<init>()V
org.apache.commons.math3.analysis.function.Cbrt.<init>()V
org.apache.commons.math3.analysis.function.Ceil.<init>()V
org.apache.commons.math3.analysis.function.Constant.<init>(D)V
org.apache.commons.math3.analysis.function.Cos.<init>()V
org.apache.commons.math3.analysis.function.Cosh.<init>()V
org.apache.commons.math3.analysis.function.Divide.<init>()V
org.apache.commons.math3.analysis.function.Exp.<init>()V
org.apache.commons.math3.analysis.function.Expm1.<init>()V
org.apache.commons.math3.analysis.function.Floor.<init>()V
org.apache.commons.math3.analysis.function.Gaussian$Parametric.<init>()V
org.apache.commons.math3.analysis.function.Gaussian.<init>()V
org.apache.commons.math3.analysis.function.Gaussian.<init>(DD)V
org.apache.commons.math3.analysis.function.Gaussian.<init>(DDD)V
org.apache.commons.math3.analysis.function.HarmonicOscillator$Parametric.<init>()V
org.apache.commons.math3.analysis.function.HarmonicOscillator.<init>(DDD)V
org.apache.commons.math3.analysis.function.Identity.<init>()V
org.apache.commons.math3.analysis.function.Inverse.<init>()V
org.apache.commons.math3.analysis.function.Log.<init>()V
org.apache.commons.math3.analysis.function.Log10.<init>()V
org.apache.commons.math3.analysis.function.Log1p.<init>()V
org.apache.commons.math3.analysis.function.Logistic$Parametric.<init>()V
org.apache.commons.math3.analysis.function.Logistic.<init>(DDDDDD)V
org.apache.commons.math3.analysis.function.Logit$Parametric.<init>()V
org.apache.commons.math3.analysis.function.Logit.<init>()V
org.apache.commons.math3.analysis.function.Logit.<init>(DD)V
org.apache.commons.math3.analysis.function.Max.<init>()V
org.apache.commons.math3.analysis.function.Min.<init>()V
org.apache.commons.math3.analysis.function.Minus.<init>()V
org.apache.commons.math3.analysis.function.Multiply.<init>()V
org.apache.commons.math3.analysis.function.Pow.<init>()V
org.apache.commons.math3.analysis.function.Power.<init>(D)V
org.apache.commons.math3.analysis.function.Rint.<init>()V
org.apache.commons.math3.analysis.function.Sigmoid$Parametric.<init>()V
org.apache.commons.math3.analysis.function.Sigmoid.<init>()V
org.apache.commons.math3.analysis.function.Sigmoid.<init>(DD)V
org.apache.commons.math3.analysis.function.Signum.<init>()V
org.apache.commons.math3.analysis.function.Sin.<init>()V
org.apache.commons.math3.analysis.function.Sinc.<init>()V
org.apache.commons.math3.analysis.function.Sinc.<init>(Z)V
org.apache.commons.math3.analysis.function.Sinh.<init>()V
org.apache.commons.math3.analysis.function.Sqrt.<init>()V
org.apache.commons.math3.analysis.function.StepFunction.<init>([D[D)V
org.apache.commons.math3.analysis.function.Subtract.<init>()V
org.apache.commons.math3.analysis.function.Tan.<init>()V
org.apache.commons.math3.analysis.function.Tanh.<init>()V
org.apache.commons.math3.analysis.function.Ulp.<init>()V
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.<init>(DDII)V
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.<init>(II)V
org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator$1.<init>(Lorg/apache/commons/math3/analysis/integration/IterativeLegendreGaussIntegrator;)V
org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator.<init>(IDD)V
org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator.<init>(IDDII)V
org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator.<init>(III)V
org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator.<init>(IDD)V
org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator.<init>(IDDII)V
org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator.<init>(III)V
org.apache.commons.math3.analysis.integration.MidPointIntegrator.<init>()V
org.apache.commons.math3.analysis.integration.MidPointIntegrator.<init>(DDII)V
org.apache.commons.math3.analysis.integration.MidPointIntegrator.<init>(II)V
org.apache.commons.math3.analysis.integration.RombergIntegrator.<init>()V
org.apache.commons.math3.analysis.integration.RombergIntegrator.<init>(DDII)V
org.apache.commons.math3.analysis.integration.RombergIntegrator.<init>(II)V
org.apache.commons.math3.analysis.integration.SimpsonIntegrator.<init>()V
org.apache.commons.math3.analysis.integration.SimpsonIntegrator.<init>(DDII)V
org.apache.commons.math3.analysis.integration.SimpsonIntegrator.<init>(II)V
org.apache.commons.math3.analysis.integration.TrapezoidIntegrator.<init>()V
org.apache.commons.math3.analysis.integration.TrapezoidIntegrator.<init>(DDII)V
org.apache.commons.math3.analysis.integration.TrapezoidIntegrator.<init>(II)V
org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory.<init>()V
org.apache.commons.math3.analysis.integration.gauss.GaussIntegrator.<init>(Lorg/apache/commons/math3/util/Pair;)V
org.apache.commons.math3.analysis.integration.gauss.GaussIntegrator.<init>([D[D)V
org.apache.commons.math3.analysis.integration.gauss.GaussIntegratorFactory.<init>()V
org.apache.commons.math3.analysis.integration.gauss.HermiteRuleFactory.<init>()V
org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory.<init>()V
org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory.<init>(Ljava/math/MathContext;)V
org.apache.commons.math3.analysis.integration.gauss.LegendreRuleFactory.<init>()V
org.apache.commons.math3.analysis.integration.gauss.SymmetricGaussIntegrator.<init>(Lorg/apache/commons/math3/util/Pair;)V
org.apache.commons.math3.analysis.integration.gauss.SymmetricGaussIntegrator.<init>([D[D)V
org.apache.commons.math3.analysis.interpolation.AkimaSplineInterpolator.<init>()V
org.apache.commons.math3.analysis.interpolation.BicubicFunction.<init>([D)V
org.apache.commons.math3.analysis.interpolation.BicubicInterpolatingFunction.<init>([D[D[[D[[D[[D[[D)V
org.apache.commons.math3.analysis.interpolation.BicubicInterpolator$1.<init>(Lorg/apache/commons/math3/analysis/interpolation/BicubicInterpolator;[D[D[[D[[D[[D[[D[D[D)V
org.apache.commons.math3.analysis.interpolation.BicubicInterpolator.<init>()V
org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$1.<init>(Lorg/apache/commons/math3/analysis/interpolation/BicubicSplineFunction;[[D)V
org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$2.<init>(Lorg/apache/commons/math3/analysis/interpolation/BicubicSplineFunction;[[D)V
org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$3.<init>(Lorg/apache/commons/math3/analysis/interpolation/BicubicSplineFunction;[[D)V
org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$4.<init>(Lorg/apache/commons/math3/analysis/interpolation/BicubicSplineFunction;[[D)V
org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$5.<init>(Lorg/apache/commons/math3/analysis/interpolation/BicubicSplineFunction;[[D)V
org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction.<init>([D)V
org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction.<init>([DZ)V
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction.<init>([D[D[[D[[D[[D[[D)V
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction.<init>([D[D[[D[[D[[D[[DZ)V
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolator.<init>()V
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolator.<init>(Z)V
org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolator.<init>()V
org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator.<init>()V
org.apache.commons.math3.analysis.interpolation.HermiteInterpolator.<init>()V
org.apache.commons.math3.analysis.interpolation.InterpolatingMicrosphere$Facet.<init>([D)V
org.apache.commons.math3.analysis.interpolation.InterpolatingMicrosphere$FacetData.<init>(DD)V
org.apache.commons.math3.analysis.interpolation.InterpolatingMicrosphere.<init>(IIDDD)V
org.apache.commons.math3.analysis.interpolation.InterpolatingMicrosphere.<init>(IIDDDLorg/apache/commons/math3/random/UnitSphereRandomVectorGenerator;)V
org.apache.commons.math3.analysis.interpolation.InterpolatingMicrosphere.<init>(Lorg/apache/commons/math3/analysis/interpolation/InterpolatingMicrosphere;)V
org.apache.commons.math3.analysis.interpolation.InterpolatingMicrosphere2D.<init>(IDDD)V
org.apache.commons.math3.analysis.interpolation.InterpolatingMicrosphere2D.<init>(Lorg/apache/commons/math3/analysis/interpolation/InterpolatingMicrosphere2D;)V
org.apache.commons.math3.analysis.interpolation.LinearInterpolator.<init>()V
org.apache.commons.math3.analysis.interpolation.LoessInterpolator.<init>()V
org.apache.commons.math3.analysis.interpolation.LoessInterpolator.<init>(DI)V
org.apache.commons.math3.analysis.interpolation.LoessInterpolator.<init>(DID)V
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction$MicrosphereSurfaceElement.<init>([D)V
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.<init>([[D[DIILorg/apache/commons/math3/random/UnitSphereRandomVectorGenerator;)V
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolator.<init>()V
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolator.<init>(II)V
org.apache.commons.math3.analysis.interpolation.MicrosphereProjectionInterpolator$1.<init>(Lorg/apache/commons/math3/analysis/interpolation/MicrosphereProjectionInterpolator;Lorg/apache/commons/math3/analysis/interpolation/InterpolatingMicrosphere;[[D[D)V
org.apache.commons.math3.analysis.interpolation.MicrosphereProjectionInterpolator.<init>(IIDDDDZD)V
org.apache.commons.math3.analysis.interpolation.MicrosphereProjectionInterpolator.<init>(Lorg/apache/commons/math3/analysis/interpolation/InterpolatingMicrosphere;DZD)V
org.apache.commons.math3.analysis.interpolation.NevilleInterpolator.<init>()V
org.apache.commons.math3.analysis.interpolation.PiecewiseBicubicSplineInterpolatingFunction.<init>([D[D[[D)V
org.apache.commons.math3.analysis.interpolation.PiecewiseBicubicSplineInterpolator.<init>()V
org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolator.<init>()V
org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolator.<init>(I)V
org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolator.<init>(II)V
org.apache.commons.math3.analysis.interpolation.SplineInterpolator.<init>()V
org.apache.commons.math3.analysis.interpolation.TricubicFunction.<init>([D)V
org.apache.commons.math3.analysis.interpolation.TricubicInterpolatingFunction.<init>([D[D[D[[[D[[[D[[[D[[[D[[[D[[[D[[[D[[[D)V
org.apache.commons.math3.analysis.interpolation.TricubicInterpolator$1.<init>(Lorg/apache/commons/math3/analysis/interpolation/TricubicInterpolator;[D[D[D[[[D[[[D[[[D[[[D[[[D[[[D[[[D[[[D[D[D[D)V
org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.<init>()V
org.apache.commons.math3.analysis.interpolation.TricubicSplineFunction.<init>([D)V
org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction.<init>([D[D[D[[[D[[[D[[[D[[[D[[[D[[[D[[[D[[[D)V
org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolator.<init>()V
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.<init>(Lorg/apache/commons/math3/analysis/interpolation/UnivariatePeriodicInterpolator;Lorg/apache/commons/math3/analysis/UnivariateFunction;D)V
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator.<init>(Lorg/apache/commons/math3/analysis/interpolation/UnivariateInterpolator;D)V
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator.<init>(Lorg/apache/commons/math3/analysis/interpolation/UnivariateInterpolator;DI)V
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric.<init>()V
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.<init>([D)V
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm.<init>([D[D)V
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.<init>([D[D)V
org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.<init>([D[Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;)V
org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$1.<init>()V
org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$2.<init>()V
org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$3.<init>()V
org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$4.<init>()V
org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5.<init>(II)V
org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$JacobiKey.<init>(II)V
org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.<init>()V
org.apache.commons.math3.analysis.solvers.AbstractDifferentiableUnivariateSolver.<init>(D)V
org.apache.commons.math3.analysis.solvers.AbstractPolynomialSolver.<init>(D)V
org.apache.commons.math3.analysis.solvers.AbstractPolynomialSolver.<init>(DD)V
org.apache.commons.math3.analysis.solvers.AbstractPolynomialSolver.<init>(DDD)V
org.apache.commons.math3.analysis.solvers.AbstractUnivariateDifferentiableSolver.<init>(D)V
org.apache.commons.math3.analysis.solvers.AbstractUnivariateSolver.<init>(D)V
org.apache.commons.math3.analysis.solvers.AbstractUnivariateSolver.<init>(DD)V
org.apache.commons.math3.analysis.solvers.AbstractUnivariateSolver.<init>(DDD)V
org.apache.commons.math3.analysis.solvers.AllowedSolution.<init>(Ljava/lang/String;I)V
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.<init>(D)V
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.<init>(DD)V
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.<init>(DDD)V
org.apache.commons.math3.analysis.solvers.BaseSecantSolver$Method.<init>(Ljava/lang/String;I)V
org.apache.commons.math3.analysis.solvers.BaseSecantSolver.<init>(DDDLorg/apache/commons/math3/analysis/solvers/BaseSecantSolver$Method;)V
org.apache.commons.math3.analysis.solvers.BaseSecantSolver.<init>(DDLorg/apache/commons/math3/analysis/solvers/BaseSecantSolver$Method;)V
org.apache.commons.math3.analysis.solvers.BaseSecantSolver.<init>(DLorg/apache/commons/math3/analysis/solvers/BaseSecantSolver$Method;)V
org.apache.commons.math3.analysis.solvers.BisectionSolver.<init>()V
org.apache.commons.math3.analysis.solvers.BisectionSolver.<init>(D)V
org.apache.commons.math3.analysis.solvers.BisectionSolver.<init>(DD)V
org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolver.<init>()V
org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolver.<init>(DDDI)V
org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolver.<init>(DDI)V
org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolver.<init>(DI)V
org.apache.commons.math3.analysis.solvers.BrentSolver.<init>()V
org.apache.commons.math3.analysis.solvers.BrentSolver.<init>(D)V
org.apache.commons.math3.analysis.solvers.BrentSolver.<init>(DD)V
org.apache.commons.math3.analysis.solvers.BrentSolver.<init>(DDD)V
org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver.<init>(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;I)V
org.apache.commons.math3.analysis.solvers.IllinoisSolver.<init>()V
org.apache.commons.math3.analysis.solvers.IllinoisSolver.<init>(D)V
org.apache.commons.math3.analysis.solvers.IllinoisSolver.<init>(DD)V
org.apache.commons.math3.analysis.solvers.IllinoisSolver.<init>(DDD)V
org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver.<init>(Lorg/apache/commons/math3/analysis/solvers/LaguerreSolver;)V
org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver.<init>(Lorg/apache/commons/math3/analysis/solvers/LaguerreSolver;Lorg/apache/commons/math3/analysis/solvers/LaguerreSolver$1;)V
org.apache.commons.math3.analysis.solvers.LaguerreSolver.<init>()V
org.apache.commons.math3.analysis.solvers.LaguerreSolver.<init>(D)V
org.apache.commons.math3.analysis.solvers.LaguerreSolver.<init>(DD)V
org.apache.commons.math3.analysis.solvers.LaguerreSolver.<init>(DDD)V
org.apache.commons.math3.analysis.solvers.MullerSolver.<init>()V
org.apache.commons.math3.analysis.solvers.MullerSolver.<init>(D)V
org.apache.commons.math3.analysis.solvers.MullerSolver.<init>(DD)V
org.apache.commons.math3.analysis.solvers.MullerSolver2.<init>()V
org.apache.commons.math3.analysis.solvers.MullerSolver2.<init>(D)V
org.apache.commons.math3.analysis.solvers.MullerSolver2.<init>(DD)V
org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolver.<init>()V
org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolver.<init>(D)V
org.apache.commons.math3.analysis.solvers.NewtonSolver.<init>()V
org.apache.commons.math3.analysis.solvers.NewtonSolver.<init>(D)V
org.apache.commons.math3.analysis.solvers.PegasusSolver.<init>()V
org.apache.commons.math3.analysis.solvers.PegasusSolver.<init>(D)V
org.apache.commons.math3.analysis.solvers.PegasusSolver.<init>(DD)V
org.apache.commons.math3.analysis.solvers.PegasusSolver.<init>(DDD)V
org.apache.commons.math3.analysis.solvers.RegulaFalsiSolver.<init>()V
org.apache.commons.math3.analysis.solvers.RegulaFalsiSolver.<init>(D)V
org.apache.commons.math3.analysis.solvers.RegulaFalsiSolver.<init>(DD)V
org.apache.commons.math3.analysis.solvers.RegulaFalsiSolver.<init>(DDD)V
org.apache.commons.math3.analysis.solvers.RiddersSolver.<init>()V
org.apache.commons.math3.analysis.solvers.RiddersSolver.<init>(D)V
org.apache.commons.math3.analysis.solvers.RiddersSolver.<init>(DD)V
org.apache.commons.math3.analysis.solvers.SecantSolver.<init>()V
org.apache.commons.math3.analysis.solvers.SecantSolver.<init>(D)V
org.apache.commons.math3.analysis.solvers.SecantSolver.<init>(DD)V
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.<init>()V
org.apache.commons.math3.complex.Complex.<init>(D)V
org.apache.commons.math3.complex.Complex.<init>(DD)V
org.apache.commons.math3.complex.ComplexField$LazyHolder.<init>()V
org.apache.commons.math3.complex.ComplexField.<init>()V
org.apache.commons.math3.complex.ComplexField.<init>(Lorg/apache/commons/math3/complex/ComplexField$1;)V
org.apache.commons.math3.complex.ComplexFormat.<init>()V
org.apache.commons.math3.complex.ComplexFormat.<init>(Ljava/lang/String;)V
org.apache.commons.math3.complex.ComplexFormat.<init>(Ljava/lang/String;Ljava/text/NumberFormat;)V
org.apache.commons.math3.complex.ComplexFormat.<init>(Ljava/lang/String;Ljava/text/NumberFormat;Ljava/text/NumberFormat;)V
org.apache.commons.math3.complex.ComplexFormat.<init>(Ljava/text/NumberFormat;)V
org.apache.commons.math3.complex.ComplexFormat.<init>(Ljava/text/NumberFormat;Ljava/text/NumberFormat;)V
org.apache.commons.math3.complex.ComplexUtils.<init>()V
org.apache.commons.math3.complex.Quaternion.<init>(DDDD)V
org.apache.commons.math3.complex.Quaternion.<init>(D[D)V
org.apache.commons.math3.complex.Quaternion.<init>([D)V
org.apache.commons.math3.complex.RootsOfUnity.<init>()V
org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP$1.<init>(Lorg/apache/commons/math3/dfp/BracketingNthOrderBrentSolverDFP;Lorg/apache/commons/math3/dfp/UnivariateDfpFunction;)V
org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP.<init>(Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;I)V
org.apache.commons.math3.dfp.Dfp.<init>(Lorg/apache/commons/math3/dfp/Dfp;)V
org.apache.commons.math3.dfp.Dfp.<init>(Lorg/apache/commons/math3/dfp/DfpField;)V
org.apache.commons.math3.dfp.Dfp.<init>(Lorg/apache/commons/math3/dfp/DfpField;B)V
org.apache.commons.math3.dfp.Dfp.<init>(Lorg/apache/commons/math3/dfp/DfpField;BB)V
org.apache.commons.math3.dfp.Dfp.<init>(Lorg/apache/commons/math3/dfp/DfpField;D)V
org.apache.commons.math3.dfp.Dfp.<init>(Lorg/apache/commons/math3/dfp/DfpField;I)V
org.apache.commons.math3.dfp.Dfp.<init>(Lorg/apache/commons/math3/dfp/DfpField;J)V
org.apache.commons.math3.dfp.Dfp.<init>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V
org.apache.commons.math3.dfp.DfpDec.<init>(Lorg/apache/commons/math3/dfp/Dfp;)V
org.apache.commons.math3.dfp.DfpDec.<init>(Lorg/apache/commons/math3/dfp/DfpField;)V
org.apache.commons.math3.dfp.DfpDec.<init>(Lorg/apache/commons/math3/dfp/DfpField;B)V
org.apache.commons.math3.dfp.DfpDec.<init>(Lorg/apache/commons/math3/dfp/DfpField;BB)V
org.apache.commons.math3.dfp.DfpDec.<init>(Lorg/apache/commons/math3/dfp/DfpField;D)V
org.apache.commons.math3.dfp.DfpDec.<init>(Lorg/apache/commons/math3/dfp/DfpField;I)V
org.apache.commons.math3.dfp.DfpDec.<init>(Lorg/apache/commons/math3/dfp/DfpField;J)V
org.apache.commons.math3.dfp.DfpDec.<init>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V
org.apache.commons.math3.dfp.DfpField$RoundingMode.<init>(Ljava/lang/String;I)V
org.apache.commons.math3.dfp.DfpField.<init>(I)V
org.apache.commons.math3.dfp.DfpField.<init>(IZ)V
org.apache.commons.math3.dfp.DfpMath.<init>()V
org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>()V
org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V
org.apache.commons.math3.distribution.AbstractMultivariateRealDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;I)V
org.apache.commons.math3.distribution.AbstractRealDistribution$1.<init>(Lorg/apache/commons/math3/distribution/AbstractRealDistribution;D)V
org.apache.commons.math3.distribution.AbstractRealDistribution.<init>()V
org.apache.commons.math3.distribution.AbstractRealDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V
org.apache.commons.math3.distribution.BetaDistribution$ChengBetaSampler.<init>()V
org.apache.commons.math3.distribution.BetaDistribution.<init>(DD)V
org.apache.commons.math3.distribution.BetaDistribution.<init>(DDD)V
org.apache.commons.math3.distribution.BetaDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DD)V
org.apache.commons.math3.distribution.BetaDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DDD)V
org.apache.commons.math3.distribution.BinomialDistribution.<init>(ID)V
org.apache.commons.math3.distribution.BinomialDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;ID)V
org.apache.commons.math3.distribution.CauchyDistribution.<init>()V
org.apache.commons.math3.distribution.CauchyDistribution.<init>(DD)V
org.apache.commons.math3.distribution.CauchyDistribution.<init>(DDD)V
org.apache.commons.math3.distribution.CauchyDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DD)V
org.apache.commons.math3.distribution.CauchyDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DDD)V
org.apache.commons.math3.distribution.ChiSquaredDistribution.<init>(D)V
org.apache.commons.math3.distribution.ChiSquaredDistribution.<init>(DD)V
org.apache.commons.math3.distribution.ChiSquaredDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;D)V
org.apache.commons.math3.distribution.ChiSquaredDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DD)V
org.apache.commons.math3.distribution.ConstantRealDistribution.<init>(D)V
org.apache.commons.math3.distribution.EnumeratedDistribution.<init>(Ljava/util/List;)V
org.apache.commons.math3.distribution.EnumeratedDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;Ljava/util/List;)V
org.apache.commons.math3.distribution.EnumeratedIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[I)V
org.apache.commons.math3.distribution.EnumeratedIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[I[D)V
org.apache.commons.math3.distribution.EnumeratedIntegerDistribution.<init>([I)V
org.apache.commons.math3.distribution.EnumeratedIntegerDistribution.<init>([I[D)V
org.apache.commons.math3.distribution.EnumeratedRealDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D)V
org.apache.commons.math3.distribution.EnumeratedRealDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[D)V
org.apache.commons.math3.distribution.EnumeratedRealDistribution.<init>([D)V
org.apache.commons.math3.distribution.EnumeratedRealDistribution.<init>([D[D)V
org.apache.commons.math3.distribution.ExponentialDistribution.<init>(D)V
org.apache.commons.math3.distribution.ExponentialDistribution.<init>(DD)V
org.apache.commons.math3.distribution.ExponentialDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;D)V
org.apache.commons.math3.distribution.ExponentialDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DD)V
org.apache.commons.math3.distribution.FDistribution.<init>(DD)V
org.apache.commons.math3.distribution.FDistribution.<init>(DDD)V
org.apache.commons.math3.distribution.FDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DD)V
org.apache.commons.math3.distribution.FDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DDD)V
org.apache.commons.math3.distribution.GammaDistribution.<init>(DD)V
org.apache.commons.math3.distribution.GammaDistribution.<init>(DDD)V
org.apache.commons.math3.distribution.GammaDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DD)V
org.apache.commons.math3.distribution.GammaDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DDD)V
org.apache.commons.math3.distribution.GeometricDistribution.<init>(D)V
org.apache.commons.math3.distribution.GeometricDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;D)V
org.apache.commons.math3.distribution.GumbelDistribution.<init>(DD)V
org.apache.commons.math3.distribution.GumbelDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DD)V
org.apache.commons.math3.distribution.HypergeometricDistribution.<init>(III)V
org.apache.commons.math3.distribution.HypergeometricDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;III)V
org.apache.commons.math3.distribution.KolmogorovSmirnovDistribution.<init>(I)V
org.apache.commons.math3.distribution.LaplaceDistribution.<init>(DD)V
org.apache.commons.math3.distribution.LaplaceDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DD)V
org.apache.commons.math3.distribution.LevyDistribution.<init>(DD)V
org.apache.commons.math3.distribution.LevyDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DD)V
org.apache.commons.math3.distribution.LogNormalDistribution.<init>()V
org.apache.commons.math3.distribution.LogNormalDistribution.<init>(DD)V
org.apache.commons.math3.distribution.LogNormalDistribution.<init>(DDD)V
org.apache.commons.math3.distribution.LogNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DD)V
org.apache.commons.math3.distribution.LogNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DDD)V
org.apache.commons.math3.distribution.LogisticDistribution.<init>(DD)V
org.apache.commons.math3.distribution.LogisticDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DD)V
org.apache.commons.math3.distribution.MixtureMultivariateNormalDistribution.<init>(Ljava/util/List;)V
org.apache.commons.math3.distribution.MixtureMultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;Ljava/util/List;)V
org.apache.commons.math3.distribution.MixtureMultivariateNormalDistribution.<init>([D[[D[[[D)V
org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution.<init>(Ljava/util/List;)V
org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;Ljava/util/List;)V
org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V
org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>([D[[D)V
org.apache.commons.math3.distribution.NakagamiDistribution.<init>(DD)V
org.apache.commons.math3.distribution.NakagamiDistribution.<init>(DDD)V
org.apache.commons.math3.distribution.NakagamiDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DDD)V
org.apache.commons.math3.distribution.NormalDistribution.<init>()V
org.apache.commons.math3.distribution.NormalDistribution.<init>(DD)V
org.apache.commons.math3.distribution.NormalDistribution.<init>(DDD)V
org.apache.commons.math3.distribution.NormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DD)V
org.apache.commons.math3.distribution.NormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DDD)V
org.apache.commons.math3.distribution.ParetoDistribution.<init>()V
org.apache.commons.math3.distribution.ParetoDistribution.<init>(DD)V
org.apache.commons.math3.distribution.ParetoDistribution.<init>(DDD)V
org.apache.commons.math3.distribution.ParetoDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DD)V
org.apache.commons.math3.distribution.ParetoDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DDD)V
org.apache.commons.math3.distribution.PascalDistribution.<init>(ID)V
org.apache.commons.math3.distribution.PascalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;ID)V
org.apache.commons.math3.distribution.PoissonDistribution.<init>(D)V
org.apache.commons.math3.distribution.PoissonDistribution.<init>(DD)V
org.apache.commons.math3.distribution.PoissonDistribution.<init>(DDI)V
org.apache.commons.math3.distribution.PoissonDistribution.<init>(DI)V
org.apache.commons.math3.distribution.PoissonDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DDI)V
org.apache.commons.math3.distribution.SaddlePointExpansion.<init>()V
org.apache.commons.math3.distribution.TDistribution.<init>(D)V
org.apache.commons.math3.distribution.TDistribution.<init>(DD)V
org.apache.commons.math3.distribution.TDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;D)V
org.apache.commons.math3.distribution.TDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DD)V
org.apache.commons.math3.distribution.TriangularDistribution.<init>(DDD)V
org.apache.commons.math3.distribution.TriangularDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DDD)V
org.apache.commons.math3.distribution.UniformIntegerDistribution.<init>(II)V
org.apache.commons.math3.distribution.UniformIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;II)V
org.apache.commons.math3.distribution.UniformRealDistribution.<init>()V
org.apache.commons.math3.distribution.UniformRealDistribution.<init>(DD)V
org.apache.commons.math3.distribution.UniformRealDistribution.<init>(DDD)V
org.apache.commons.math3.distribution.UniformRealDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DD)V
org.apache.commons.math3.distribution.UniformRealDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DDD)V
org.apache.commons.math3.distribution.WeibullDistribution.<init>(DD)V
org.apache.commons.math3.distribution.WeibullDistribution.<init>(DDD)V
org.apache.commons.math3.distribution.WeibullDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DD)V
org.apache.commons.math3.distribution.WeibullDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DDD)V
org.apache.commons.math3.distribution.ZipfDistribution$ZipfRejectionInversionSampler.<init>(ID)V
org.apache.commons.math3.distribution.ZipfDistribution.<init>(ID)V
org.apache.commons.math3.distribution.ZipfDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;ID)V
org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization$DataRow.<init>([D)V
org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization.<init>([[D)V
org.apache.commons.math3.exception.ConvergenceException.<init>()V
org.apache.commons.math3.exception.ConvergenceException.<init>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
org.apache.commons.math3.exception.DimensionMismatchException.<init>(II)V
org.apache.commons.math3.exception.DimensionMismatchException.<init>(Lorg/apache/commons/math3/exception/util/Localizable;II)V
org.apache.commons.math3.exception.InsufficientDataException.<init>()V
org.apache.commons.math3.exception.InsufficientDataException.<init>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
org.apache.commons.math3.exception.MathArithmeticException.<init>()V
org.apache.commons.math3.exception.MathArithmeticException.<init>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
org.apache.commons.math3.exception.MathIllegalArgumentException.<init>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
org.apache.commons.math3.exception.MathIllegalNumberException.<init>(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;[Ljava/lang/Object;)V
org.apache.commons.math3.exception.MathIllegalStateException.<init>()V
org.apache.commons.math3.exception.MathIllegalStateException.<init>(Ljava/lang/Throwable;Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
org.apache.commons.math3.exception.MathIllegalStateException.<init>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
org.apache.commons.math3.exception.MathInternalError.<init>()V
org.apache.commons.math3.exception.MathInternalError.<init>(Ljava/lang/Throwable;)V
org.apache.commons.math3.exception.MathInternalError.<init>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
org.apache.commons.math3.exception.MathParseException.<init>(Ljava/lang/String;I)V
org.apache.commons.math3.exception.MathParseException.<init>(Ljava/lang/String;ILjava/lang/Class;)V
org.apache.commons.math3.exception.MathRuntimeException.<init>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
org.apache.commons.math3.exception.MathUnsupportedOperationException.<init>()V
org.apache.commons.math3.exception.MathUnsupportedOperationException.<init>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
org.apache.commons.math3.exception.MaxCountExceededException.<init>(Ljava/lang/Number;)V
org.apache.commons.math3.exception.MaxCountExceededException.<init>(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;[Ljava/lang/Object;)V
org.apache.commons.math3.exception.MultiDimensionMismatchException.<init>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Integer;[Ljava/lang/Integer;)V
org.apache.commons.math3.exception.MultiDimensionMismatchException.<init>([Ljava/lang/Integer;[Ljava/lang/Integer;)V
org.apache.commons.math3.exception.NoBracketingException.<init>(DDDD)V
org.apache.commons.math3.exception.NoBracketingException.<init>(Lorg/apache/commons/math3/exception/util/Localizable;DDDD[Ljava/lang/Object;)V
org.apache.commons.math3.exception.NoDataException.<init>()V
org.apache.commons.math3.exception.NoDataException.<init>(Lorg/apache/commons/math3/exception/util/Localizable;)V
org.apache.commons.math3.exception.NonMonotonicSequenceException.<init>(Ljava/lang/Number;Ljava/lang/Number;I)V
org.apache.commons.math3.exception.NonMonotonicSequenceException.<init>(Ljava/lang/Number;Ljava/lang/Number;ILorg/apache/commons/math3/util/MathArrays$OrderDirection;Z)V
org.apache.commons.math3.exception.NotANumberException.<init>()V
org.apache.commons.math3.exception.NotFiniteNumberException.<init>(Ljava/lang/Number;[Ljava/lang/Object;)V
org.apache.commons.math3.exception.NotFiniteNumberException.<init>(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;[Ljava/lang/Object;)V
org.apache.commons.math3.exception.NotPositiveException.<init>(Ljava/lang/Number;)V
org.apache.commons.math3.exception.NotPositiveException.<init>(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;)V
org.apache.commons.math3.exception.NotStrictlyPositiveException.<init>(Ljava/lang/Number;)V
org.apache.commons.math3.exception.NotStrictlyPositiveException.<init>(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;)V
org.apache.commons.math3.exception.NullArgumentException.<init>()V
org.apache.commons.math3.exception.NullArgumentException.<init>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
org.apache.commons.math3.exception.NumberIsTooLargeException.<init>(Ljava/lang/Number;Ljava/lang/Number;Z)V
org.apache.commons.math3.exception.NumberIsTooLargeException.<init>(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;Ljava/lang/Number;Z)V
org.apache.commons.math3.exception.NumberIsTooSmallException.<init>(Ljava/lang/Number;Ljava/lang/Number;Z)V
org.apache.commons.math3.exception.NumberIsTooSmallException.<init>(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;Ljava/lang/Number;Z)V
org.apache.commons.math3.exception.OutOfRangeException.<init>(Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)V
org.apache.commons.math3.exception.OutOfRangeException.<init>(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)V
org.apache.commons.math3.exception.TooManyEvaluationsException.<init>(Ljava/lang/Number;)V
org.apache.commons.math3.exception.TooManyIterationsException.<init>(Ljava/lang/Number;)V
org.apache.commons.math3.exception.ZeroException.<init>()V
org.apache.commons.math3.exception.ZeroException.<init>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
org.apache.commons.math3.exception.util.ArgUtils.<init>()V
org.apache.commons.math3.exception.util.DummyLocalizable.<init>(Ljava/lang/String;)V
org.apache.commons.math3.exception.util.ExceptionContext.<init>(Ljava/lang/Throwable;)V
org.apache.commons.math3.exception.util.LocalizedFormats.<init>(Ljava/lang/String;ILjava/lang/String;)V
org.apache.commons.math3.filter.DefaultMeasurementModel.<init>(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)V
org.apache.commons.math3.filter.DefaultMeasurementModel.<init>([[D[[D)V
org.apache.commons.math3.filter.DefaultProcessModel.<init>(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealMatrix;)V
org.apache.commons.math3.filter.DefaultProcessModel.<init>([[D[[D[[D)V
org.apache.commons.math3.filter.DefaultProcessModel.<init>([[D[[D[[D[D[[D)V
org.apache.commons.math3.filter.KalmanFilter.<init>(Lorg/apache/commons/math3/filter/ProcessModel;Lorg/apache/commons/math3/filter/MeasurementModel;)V
org.apache.commons.math3.fitting.AbstractCurveFitter$TheoreticalValuesFunction$1.<init>(Lorg/apache/commons/math3/fitting/AbstractCurveFitter$TheoreticalValuesFunction;)V
org.apache.commons.math3.fitting.AbstractCurveFitter$TheoreticalValuesFunction$2.<init>(Lorg/apache/commons/math3/fitting/AbstractCurveFitter$TheoreticalValuesFunction;)V
org.apache.commons.math3.fitting.AbstractCurveFitter$TheoreticalValuesFunction.<init>(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;Ljava/util/Collection;)V
org.apache.commons.math3.fitting.AbstractCurveFitter.<init>()V
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2.<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction.<init>(Lorg/apache/commons/math3/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V
org.apache.commons.math3.fitting.CurveFitter.<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V
org.apache.commons.math3.fitting.GaussianCurveFitter$1.<init>()V
org.apache.commons.math3.fitting.GaussianCurveFitter$ParameterGuesser$1.<init>(Lorg/apache/commons/math3/fitting/GaussianCurveFitter$ParameterGuesser;)V
org.apache.commons.math3.fitting.GaussianCurveFitter$ParameterGuesser.<init>(Ljava/util/Collection;)V
org.apache.commons.math3.fitting.GaussianCurveFitter.<init>([DI)V
org.apache.commons.math3.fitting.GaussianFitter$1.<init>(Lorg/apache/commons/math3/fitting/GaussianFitter;)V
org.apache.commons.math3.fitting.GaussianFitter$ParameterGuesser$1.<init>(Lorg/apache/commons/math3/fitting/GaussianFitter$ParameterGuesser;)V
org.apache.commons.math3.fitting.GaussianFitter$ParameterGuesser.<init>([Lorg/apache/commons/math3/fitting/WeightedObservedPoint;)V
org.apache.commons.math3.fitting.GaussianFitter.<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V
org.apache.commons.math3.fitting.HarmonicCurveFitter$ParameterGuesser.<init>(Ljava/util/Collection;)V
org.apache.commons.math3.fitting.HarmonicCurveFitter.<init>([DI)V
org.apache.commons.math3.fitting.HarmonicFitter$ParameterGuesser.<init>([Lorg/apache/commons/math3/fitting/WeightedObservedPoint;)V
org.apache.commons.math3.fitting.HarmonicFitter.<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V
org.apache.commons.math3.fitting.PolynomialCurveFitter.<init>([DI)V
org.apache.commons.math3.fitting.PolynomialFitter.<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V
org.apache.commons.math3.fitting.SimpleCurveFitter.<init>(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[DI)V
org.apache.commons.math3.fitting.WeightedObservedPoint.<init>(DDD)V
org.apache.commons.math3.fitting.WeightedObservedPoints.<init>()V
org.apache.commons.math3.fitting.leastsquares.AbstractEvaluation.<init>(I)V
org.apache.commons.math3.fitting.leastsquares.DenseWeightedEvaluation.<init>(Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem$Evaluation;Lorg/apache/commons/math3/linear/RealMatrix;)V
org.apache.commons.math3.fitting.leastsquares.EvaluationRmsChecker.<init>(D)V
org.apache.commons.math3.fitting.leastsquares.EvaluationRmsChecker.<init>(DD)V
org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer$Decomposition$1.<init>(Ljava/lang/String;I)V
org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer$Decomposition$2.<init>(Ljava/lang/String;I)V
org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer$Decomposition$3.<init>(Ljava/lang/String;I)V
org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer$Decomposition$4.<init>(Ljava/lang/String;I)V
org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer$Decomposition.<init>(Ljava/lang/String;I)V
org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer$Decomposition.<init>(Ljava/lang/String;ILorg/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizer$1;)V
org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer.<init>()V
org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer.<init>(Lorg/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizer$Decomposition;)V
org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter.<init>(Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem;)V
org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder.<init>()V
org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$1.<init>(Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem;Lorg/apache/commons/math3/linear/RealMatrix;)V
org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$2.<init>(Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem;Lorg/apache/commons/math3/util/Incrementor;)V
org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$3.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V
org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem$LazyUnweightedEvaluation.<init>(Lorg/apache/commons/math3/fitting/leastsquares/ValueAndJacobianFunction;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;)V
org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem$LazyUnweightedEvaluation.<init>(Lorg/apache/commons/math3/fitting/leastsquares/ValueAndJacobianFunction;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory$1;)V
org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem$UnweightedEvaluation.<init>(Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;)V
org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem$UnweightedEvaluation.<init>(Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresFactory$1;)V
org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem.<init>(Lorg/apache/commons/math3/fitting/leastsquares/MultivariateJacobianFunction;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/optim/ConvergenceChecker;IIZLorg/apache/commons/math3/fitting/leastsquares/ParameterValidator;)V
org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalValueAndJacobianFunction.<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V
org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory.<init>()V
org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer$InternalData.<init>([[D[II[D[D[D)V
org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.<init>()V
org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.<init>(DDDDD)V
org.apache.commons.math3.fitting.leastsquares.OptimumImpl.<init>(Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem$Evaluation;II)V
org.apache.commons.math3.fraction.AbstractFormat.<init>()V
org.apache.commons.math3.fraction.AbstractFormat.<init>(Ljava/text/NumberFormat;)V
org.apache.commons.math3.fraction.AbstractFormat.<init>(Ljava/text/NumberFormat;Ljava/text/NumberFormat;)V
org.apache.commons.math3.fraction.BigFraction.<init>(D)V
org.apache.commons.math3.fraction.BigFraction.<init>(DDI)V
org.apache.commons.math3.fraction.BigFraction.<init>(DDII)V
org.apache.commons.math3.fraction.BigFraction.<init>(DI)V
org.apache.commons.math3.fraction.BigFraction.<init>(I)V
org.apache.commons.math3.fraction.BigFraction.<init>(II)V
org.apache.commons.math3.fraction.BigFraction.<init>(J)V
org.apache.commons.math3.fraction.BigFraction.<init>(JJ)V
org.apache.commons.math3.fraction.BigFraction.<init>(Ljava/math/BigInteger;)V
org.apache.commons.math3.fraction.BigFraction.<init>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V
org.apache.commons.math3.fraction.BigFractionField$LazyHolder.<init>()V
org.apache.commons.math3.fraction.BigFractionField.<init>()V
org.apache.commons.math3.fraction.BigFractionField.<init>(Lorg/apache/commons/math3/fraction/BigFractionField$1;)V
org.apache.commons.math3.fraction.BigFractionFormat.<init>()V
org.apache.commons.math3.fraction.BigFractionFormat.<init>(Ljava/text/NumberFormat;)V
org.apache.commons.math3.fraction.BigFractionFormat.<init>(Ljava/text/NumberFormat;Ljava/text/NumberFormat;)V
org.apache.commons.math3.fraction.Fraction.<init>(D)V
org.apache.commons.math3.fraction.Fraction.<init>(DDI)V
org.apache.commons.math3.fraction.Fraction.<init>(DDII)V
org.apache.commons.math3.fraction.Fraction.<init>(DI)V
org.apache.commons.math3.fraction.Fraction.<init>(I)V
org.apache.commons.math3.fraction.Fraction.<init>(II)V
org.apache.commons.math3.fraction.FractionConversionException.<init>(DI)V
org.apache.commons.math3.fraction.FractionConversionException.<init>(DJJ)V
org.apache.commons.math3.fraction.FractionField$LazyHolder.<init>()V
org.apache.commons.math3.fraction.FractionField.<init>()V
org.apache.commons.math3.fraction.FractionField.<init>(Lorg/apache/commons/math3/fraction/FractionField$1;)V
org.apache.commons.math3.fraction.FractionFormat.<init>()V
org.apache.commons.math3.fraction.FractionFormat.<init>(Ljava/text/NumberFormat;)V
org.apache.commons.math3.fraction.FractionFormat.<init>(Ljava/text/NumberFormat;Ljava/text/NumberFormat;)V
org.apache.commons.math3.fraction.ProperBigFractionFormat.<init>()V
org.apache.commons.math3.fraction.ProperBigFractionFormat.<init>(Ljava/text/NumberFormat;)V
org.apache.commons.math3.fraction.ProperBigFractionFormat.<init>(Ljava/text/NumberFormat;Ljava/text/NumberFormat;Ljava/text/NumberFormat;)V
org.apache.commons.math3.fraction.ProperFractionFormat.<init>()V
org.apache.commons.math3.fraction.ProperFractionFormat.<init>(Ljava/text/NumberFormat;)V
org.apache.commons.math3.fraction.ProperFractionFormat.<init>(Ljava/text/NumberFormat;Ljava/text/NumberFormat;Ljava/text/NumberFormat;)V
org.apache.commons.math3.genetics.BinaryMutation.<init>()V
org.apache.commons.math3.genetics.ChromosomePair.<init>(Lorg/apache/commons/math3/genetics/Chromosome;Lorg/apache/commons/math3/genetics/Chromosome;)V
org.apache.commons.math3.genetics.CycleCrossover.<init>()V
org.apache.commons.math3.genetics.CycleCrossover.<init>(Z)V
org.apache.commons.math3.genetics.ElitisticListPopulation.<init>(ID)V
org.apache.commons.math3.genetics.ElitisticListPopulation.<init>(Ljava/util/List;ID)V
org.apache.commons.math3.genetics.FixedElapsedTime.<init>(J)V
org.apache.commons.math3.genetics.FixedElapsedTime.<init>(JLjava/util/concurrent/TimeUnit;)V
org.apache.commons.math3.genetics.FixedGenerationCount.<init>(I)V
org.apache.commons.math3.genetics.GeneticAlgorithm.<init>(Lorg/apache/commons/math3/genetics/CrossoverPolicy;DLorg/apache/commons/math3/genetics/MutationPolicy;DLorg/apache/commons/math3/genetics/SelectionPolicy;)V
org.apache.commons.math3.genetics.InvalidRepresentationException.<init>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
org.apache.commons.math3.genetics.ListPopulation.<init>(I)V
org.apache.commons.math3.genetics.ListPopulation.<init>(Ljava/util/List;I)V
org.apache.commons.math3.genetics.NPointCrossover.<init>(I)V
org.apache.commons.math3.genetics.OnePointCrossover.<init>()V
org.apache.commons.math3.genetics.OrderedCrossover.<init>()V
org.apache.commons.math3.genetics.RandomKeyMutation.<init>()V
org.apache.commons.math3.genetics.TournamentSelection$1.<init>(Lorg/apache/commons/math3/genetics/TournamentSelection;I)V
org.apache.commons.math3.genetics.TournamentSelection.<init>(I)V
org.apache.commons.math3.genetics.UniformCrossover.<init>(D)V
org.apache.commons.math3.geometry.VectorFormat.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/text/NumberFormat;)V
org.apache.commons.math3.geometry.enclosing.EnclosingBall.<init>(Lorg/apache/commons/math3/geometry/Point;D[Lorg/apache/commons/math3/geometry/Point;)V
org.apache.commons.math3.geometry.enclosing.WelzlEncloser.<init>(DLorg/apache/commons/math3/geometry/enclosing/SupportBallGenerator;)V
org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D$LazyHolder.<init>()V
org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D$NoSubSpaceException.<init>()V
org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D.<init>()V
org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D.<init>(Lorg/apache/commons/math3/geometry/euclidean/oned/Euclidean1D$1;)V
org.apache.commons.math3.geometry.euclidean.oned.Interval.<init>(DD)V
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator.<init>(Lorg/apache/commons/math3/geometry/euclidean/oned/IntervalsSet;)V
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.<init>()V
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.<init>(D)V
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.<init>(DD)V
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.<init>(DDD)V
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.<init>(Ljava/util/Collection;)V
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.<init>(Ljava/util/Collection;D)V
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.<init>(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.<init>(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;D)V
org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.<init>(Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;Z)V
org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.<init>(Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;ZD)V
org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint.<init>(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Region;)V
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.<init>(D)V
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.<init>(DLorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;)V
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.<init>(DLorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;DLorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;)V
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.<init>(DLorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;DLorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;DLorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;)V
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.<init>(DLorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;DLorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;DLorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;DLorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;)V
org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormat.<init>()V
org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormat.<init>(Ljava/lang/String;Ljava/lang/String;)V
org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormat.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/text/NumberFormat;)V
org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormat.<init>(Ljava/text/NumberFormat;)V
org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException.<init>(Z)V
org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D$LazyHolder.<init>()V
org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D.<init>()V
org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Euclidean3D$1;)V
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.<init>(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Z)V
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/RealFieldElement;)V
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)V
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)V
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)V
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)V
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)V
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.<init>([[Lorg/apache/commons/math3/RealFieldElement;D)V
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.<init>(DLorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)V
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.<init>(DLorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)V
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.<init>(DLorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)V
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.<init>(DLorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)V
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.<init>(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)V
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.<init>(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)V
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.<init>(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)V
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.<init>(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)V
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.<init>(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)V
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.<init>(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)V
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.<init>(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.<init>(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.<init>(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.<init>(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.<init>([Lorg/apache/commons/math3/RealFieldElement;)V
org.apache.commons.math3.geometry.euclidean.threed.Line.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Line;)V
org.apache.commons.math3.geometry.euclidean.threed.Line.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
org.apache.commons.math3.geometry.euclidean.threed.Line.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;D)V
org.apache.commons.math3.geometry.euclidean.threed.NotARotationMatrixException.<init>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor$BoundaryProjector.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/OutlineExtractor;D)V
org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
org.apache.commons.math3.geometry.euclidean.threed.Plane.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Plane;)V
org.apache.commons.math3.geometry.euclidean.threed.Plane.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
org.apache.commons.math3.geometry.euclidean.threed.Plane.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;D)V
org.apache.commons.math3.geometry.euclidean.threed.Plane.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
org.apache.commons.math3.geometry.euclidean.threed.Plane.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;D)V
org.apache.commons.math3.geometry.euclidean.threed.Plane.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
org.apache.commons.math3.geometry.euclidean.threed.Plane.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;D)V
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$FacetsContributionVisitor.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet;)V
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$RotationTransform.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)V
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$TranslationTransform.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.<init>()V
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.<init>(D)V
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.<init>(DDDDDD)V
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.<init>(DDDDDDD)V
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.<init>(Ljava/util/Collection;)V
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.<init>(Ljava/util/Collection;D)V
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.<init>(Ljava/util/List;Ljava/util/List;D)V
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.<init>(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.<init>(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;D)V
org.apache.commons.math3.geometry.euclidean.threed.Rotation.<init>(DDDDZ)V
org.apache.commons.math3.geometry.euclidean.threed.Rotation.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;DDD)V
org.apache.commons.math3.geometry.euclidean.threed.Rotation.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;DDD)V
org.apache.commons.math3.geometry.euclidean.threed.Rotation.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;D)V
org.apache.commons.math3.geometry.euclidean.threed.Rotation.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)V
org.apache.commons.math3.geometry.euclidean.threed.Rotation.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
org.apache.commons.math3.geometry.euclidean.threed.Rotation.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
org.apache.commons.math3.geometry.euclidean.threed.Rotation.<init>([[DD)V
org.apache.commons.math3.geometry.euclidean.threed.RotationConvention.<init>(Ljava/lang/String;I)V
org.apache.commons.math3.geometry.euclidean.threed.RotationOrder.<init>(Ljava/lang/String;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
org.apache.commons.math3.geometry.euclidean.threed.Segment.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Line;)V
org.apache.commons.math3.geometry.euclidean.threed.SphereGenerator.<init>()V
org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates$DataTransferObject.<init>(DDD)V
org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates.<init>(DDD)V
org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
org.apache.commons.math3.geometry.euclidean.threed.SubLine.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Line;Lorg/apache/commons/math3/geometry/euclidean/oned/IntervalsSet;)V
org.apache.commons.math3.geometry.euclidean.threed.SubLine.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Segment;)V
org.apache.commons.math3.geometry.euclidean.threed.SubLine.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
org.apache.commons.math3.geometry.euclidean.threed.SubLine.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;D)V
org.apache.commons.math3.geometry.euclidean.threed.SubPlane.<init>(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Region;)V
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.<init>(DD)V
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.<init>(DDD)V
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.<init>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.<init>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.<init>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.<init>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.<init>([D)V
org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat.<init>()V
org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/text/NumberFormat;)V
org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat.<init>(Ljava/text/NumberFormat;)V
org.apache.commons.math3.geometry.euclidean.twod.DiskGenerator.<init>()V
org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D$LazyHolder.<init>()V
org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D.<init>()V
org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D.<init>(Lorg/apache/commons/math3/geometry/euclidean/twod/Euclidean2D$1;)V
org.apache.commons.math3.geometry.euclidean.twod.Line$LineTransform.<init>(DDDDDD)V
org.apache.commons.math3.geometry.euclidean.twod.Line.<init>(DDDDD)V
org.apache.commons.math3.geometry.euclidean.twod.Line.<init>(DDDDDLorg/apache/commons/math3/geometry/euclidean/twod/Line$1;)V
org.apache.commons.math3.geometry.euclidean.twod.Line.<init>(Lorg/apache/commons/math3/geometry/euclidean/twod/Line;)V
org.apache.commons.math3.geometry.euclidean.twod.Line.<init>(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;D)V
org.apache.commons.math3.geometry.euclidean.twod.Line.<init>(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;DD)V
org.apache.commons.math3.geometry.euclidean.twod.Line.<init>(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)V
org.apache.commons.math3.geometry.euclidean.twod.Line.<init>(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;D)V
org.apache.commons.math3.geometry.euclidean.twod.NestedLoops.<init>(D)V
org.apache.commons.math3.geometry.euclidean.twod.NestedLoops.<init>([Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;D)V
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ConnectableSegment.<init>(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Line;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$Edge.<init>(Lorg/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$Vertex;Lorg/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$Vertex;Lorg/apache/commons/math3/geometry/euclidean/twod/Line;)V
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.<init>(D)V
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$Vertex.<init>(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)V
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>()V
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(D)V
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(DDDD)V
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(DDDDD)V
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(D[Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)V
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(Ljava/util/Collection;)V
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(Ljava/util/Collection;D)V
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;D)V
org.apache.commons.math3.geometry.euclidean.twod.Segment.<init>(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Line;)V
org.apache.commons.math3.geometry.euclidean.twod.SubLine.<init>(Lorg/apache/commons/math3/geometry/euclidean/twod/Segment;)V
org.apache.commons.math3.geometry.euclidean.twod.SubLine.<init>(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)V
org.apache.commons.math3.geometry.euclidean.twod.SubLine.<init>(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;D)V
org.apache.commons.math3.geometry.euclidean.twod.SubLine.<init>(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Region;)V
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.<init>(DD)V
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.<init>(DLorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)V
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.<init>(DLorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;DLorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)V
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.<init>(DLorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;DLorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;DLorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)V
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.<init>(DLorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;DLorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;DLorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;DLorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)V
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.<init>([D)V
org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormat.<init>()V
org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormat.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormat.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/text/NumberFormat;)V
org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormat.<init>(Ljava/text/NumberFormat;)V
org.apache.commons.math3.geometry.euclidean.twod.hull.AbstractConvexHullGenerator2D.<init>(Z)V
org.apache.commons.math3.geometry.euclidean.twod.hull.AbstractConvexHullGenerator2D.<init>(ZD)V
org.apache.commons.math3.geometry.euclidean.twod.hull.AklToussaintHeuristic.<init>()V
org.apache.commons.math3.geometry.euclidean.twod.hull.ConvexHull2D.<init>([Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;D)V
org.apache.commons.math3.geometry.euclidean.twod.hull.MonotoneChain$1.<init>(Lorg/apache/commons/math3/geometry/euclidean/twod/hull/MonotoneChain;)V
org.apache.commons.math3.geometry.euclidean.twod.hull.MonotoneChain.<init>()V
org.apache.commons.math3.geometry.euclidean.twod.hull.MonotoneChain.<init>(Z)V
org.apache.commons.math3.geometry.euclidean.twod.hull.MonotoneChain.<init>(ZD)V
org.apache.commons.math3.geometry.partitioning.AbstractRegion$1.<init>(Lorg/apache/commons/math3/geometry/partitioning/AbstractRegion;)V
org.apache.commons.math3.geometry.partitioning.AbstractRegion$2.<init>(Lorg/apache/commons/math3/geometry/partitioning/AbstractRegion;)V
org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(D)V
org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(Ljava/util/Collection;D)V
org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;D)V
org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>([Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;D)V
org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.<init>(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Region;)V
org.apache.commons.math3.geometry.partitioning.BSPTree$1.<init>(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V
org.apache.commons.math3.geometry.partitioning.BSPTree.<init>()V
org.apache.commons.math3.geometry.partitioning.BSPTree.<init>(Ljava/lang/Object;)V
org.apache.commons.math3.geometry.partitioning.BSPTree.<init>(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Ljava/lang/Object;)V
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.<init>(Ljava/lang/String;I)V
org.apache.commons.math3.geometry.partitioning.BoundaryAttribute.<init>(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)V
org.apache.commons.math3.geometry.partitioning.BoundaryAttribute.<init>(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/NodesSet;)V
org.apache.commons.math3.geometry.partitioning.BoundaryBuilder.<init>()V
org.apache.commons.math3.geometry.partitioning.BoundaryProjection.<init>(Lorg/apache/commons/math3/geometry/Point;Lorg/apache/commons/math3/geometry/Point;D)V
org.apache.commons.math3.geometry.partitioning.BoundaryProjector.<init>(Lorg/apache/commons/math3/geometry/Point;)V
org.apache.commons.math3.geometry.partitioning.BoundarySizeVisitor.<init>()V
org.apache.commons.math3.geometry.partitioning.Characterization.<init>(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)V
org.apache.commons.math3.geometry.partitioning.InsideFinder.<init>(Lorg/apache/commons/math3/geometry/partitioning/Region;)V
org.apache.commons.math3.geometry.partitioning.NodesSet.<init>()V
org.apache.commons.math3.geometry.partitioning.Region$Location.<init>(Ljava/lang/String;I)V
org.apache.commons.math3.geometry.partitioning.RegionFactory$DifferenceMerger.<init>(Lorg/apache/commons/math3/geometry/partitioning/RegionFactory;Lorg/apache/commons/math3/geometry/partitioning/Region;Lorg/apache/commons/math3/geometry/partitioning/Region;)V
org.apache.commons.math3.geometry.partitioning.RegionFactory$IntersectionMerger.<init>(Lorg/apache/commons/math3/geometry/partitioning/RegionFactory;)V
org.apache.commons.math3.geometry.partitioning.RegionFactory$IntersectionMerger.<init>(Lorg/apache/commons/math3/geometry/partitioning/RegionFactory;Lorg/apache/commons/math3/geometry/partitioning/RegionFactory$1;)V
org.apache.commons.math3.geometry.partitioning.RegionFactory$NodesCleaner.<init>(Lorg/apache/commons/math3/geometry/partitioning/RegionFactory;)V
org.apache.commons.math3.geometry.partitioning.RegionFactory$NodesCleaner.<init>(Lorg/apache/commons/math3/geometry/partitioning/RegionFactory;Lorg/apache/commons/math3/geometry/partitioning/RegionFactory$1;)V
org.apache.commons.math3.geometry.partitioning.RegionFactory$UnionMerger.<init>(Lorg/apache/commons/math3/geometry/partitioning/RegionFactory;)V
org.apache.commons.math3.geometry.partitioning.RegionFactory$UnionMerger.<init>(Lorg/apache/commons/math3/geometry/partitioning/RegionFactory;Lorg/apache/commons/math3/geometry/partitioning/RegionFactory$1;)V
org.apache.commons.math3.geometry.partitioning.RegionFactory$VanishingToLeaf.<init>(Lorg/apache/commons/math3/geometry/partitioning/RegionFactory;Z)V
org.apache.commons.math3.geometry.partitioning.RegionFactory$XorMerger.<init>(Lorg/apache/commons/math3/geometry/partitioning/RegionFactory;)V
org.apache.commons.math3.geometry.partitioning.RegionFactory$XorMerger.<init>(Lorg/apache/commons/math3/geometry/partitioning/RegionFactory;Lorg/apache/commons/math3/geometry/partitioning/RegionFactory$1;)V
org.apache.commons.math3.geometry.partitioning.RegionFactory.<init>()V
org.apache.commons.math3.geometry.partitioning.Side.<init>(Ljava/lang/String;I)V
org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane.<init>(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)V
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.<init>(Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree;Ljava/lang/Comparable;Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;)V
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.<init>(Ljava/lang/String;I)V
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.<init>()V
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.<init>([D)V
org.apache.commons.math3.geometry.spherical.oned.Arc.<init>(DDD)V
org.apache.commons.math3.geometry.spherical.oned.ArcsSet$InconsistentStateAt2PiWrapping.<init>()V
org.apache.commons.math3.geometry.spherical.oned.ArcsSet$Split.<init>(Lorg/apache/commons/math3/geometry/spherical/oned/ArcsSet;Lorg/apache/commons/math3/geometry/spherical/oned/ArcsSet;)V
org.apache.commons.math3.geometry.spherical.oned.ArcsSet$Split.<init>(Lorg/apache/commons/math3/geometry/spherical/oned/ArcsSet;Lorg/apache/commons/math3/geometry/spherical/oned/ArcsSet;Lorg/apache/commons/math3/geometry/spherical/oned/ArcsSet$1;)V
org.apache.commons.math3.geometry.spherical.oned.ArcsSet$SubArcsIterator.<init>(Lorg/apache/commons/math3/geometry/spherical/oned/ArcsSet;)V
org.apache.commons.math3.geometry.spherical.oned.ArcsSet.<init>(D)V
org.apache.commons.math3.geometry.spherical.oned.ArcsSet.<init>(DDD)V
org.apache.commons.math3.geometry.spherical.oned.ArcsSet.<init>(Ljava/util/Collection;D)V
org.apache.commons.math3.geometry.spherical.oned.ArcsSet.<init>(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;D)V
org.apache.commons.math3.geometry.spherical.oned.LimitAngle.<init>(Lorg/apache/commons/math3/geometry/spherical/oned/S1Point;ZD)V
org.apache.commons.math3.geometry.spherical.oned.S1Point.<init>(D)V
org.apache.commons.math3.geometry.spherical.oned.S1Point.<init>(DLorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)V
org.apache.commons.math3.geometry.spherical.oned.Sphere1D$LazyHolder.<init>()V
org.apache.commons.math3.geometry.spherical.oned.Sphere1D$NoSubSpaceException.<init>()V
org.apache.commons.math3.geometry.spherical.oned.Sphere1D.<init>()V
org.apache.commons.math3.geometry.spherical.oned.Sphere1D.<init>(Lorg/apache/commons/math3/geometry/spherical/oned/Sphere1D$1;)V
org.apache.commons.math3.geometry.spherical.oned.SubLimitAngle.<init>(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Region;)V
org.apache.commons.math3.geometry.spherical.twod.Circle$CircleTransform.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)V
org.apache.commons.math3.geometry.spherical.twod.Circle.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;D)V
org.apache.commons.math3.geometry.spherical.twod.Circle.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;D)V
org.apache.commons.math3.geometry.spherical.twod.Circle.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/spherical/twod/Circle$1;)V
org.apache.commons.math3.geometry.spherical.twod.Circle.<init>(Lorg/apache/commons/math3/geometry/spherical/twod/Circle;)V
org.apache.commons.math3.geometry.spherical.twod.Circle.<init>(Lorg/apache/commons/math3/geometry/spherical/twod/S2Point;Lorg/apache/commons/math3/geometry/spherical/twod/S2Point;D)V
org.apache.commons.math3.geometry.spherical.twod.Edge.<init>(Lorg/apache/commons/math3/geometry/spherical/twod/Vertex;Lorg/apache/commons/math3/geometry/spherical/twod/Vertex;DLorg/apache/commons/math3/geometry/spherical/twod/Circle;)V
org.apache.commons.math3.geometry.spherical.twod.EdgesBuilder.<init>(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;D)V
org.apache.commons.math3.geometry.spherical.twod.PropertiesComputer.<init>(D)V
org.apache.commons.math3.geometry.spherical.twod.S2Point.<init>(DD)V
org.apache.commons.math3.geometry.spherical.twod.S2Point.<init>(DDLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
org.apache.commons.math3.geometry.spherical.twod.S2Point.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
org.apache.commons.math3.geometry.spherical.twod.Sphere2D$LazyHolder.<init>()V
org.apache.commons.math3.geometry.spherical.twod.Sphere2D.<init>()V
org.apache.commons.math3.geometry.spherical.twod.Sphere2D.<init>(Lorg/apache/commons/math3/geometry/spherical/twod/Sphere2D$1;)V
org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSet.<init>(D)V
org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSet.<init>(D[Lorg/apache/commons/math3/geometry/spherical/twod/S2Point;)V
org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSet.<init>(Ljava/util/Collection;D)V
org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSet.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;D)V
org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSet.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DID)V
org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSet.<init>(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;D)V
org.apache.commons.math3.geometry.spherical.twod.SubCircle.<init>(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Region;)V
org.apache.commons.math3.geometry.spherical.twod.Vertex.<init>(Lorg/apache/commons/math3/geometry/spherical/twod/S2Point;)V
org.apache.commons.math3.linear.AbstractFieldMatrix$1.<init>(Lorg/apache/commons/math3/linear/AbstractFieldMatrix;Lorg/apache/commons/math3/FieldElement;[I[I)V
org.apache.commons.math3.linear.AbstractFieldMatrix$2.<init>(Lorg/apache/commons/math3/linear/AbstractFieldMatrix;Lorg/apache/commons/math3/FieldElement;[[Lorg/apache/commons/math3/FieldElement;)V
org.apache.commons.math3.linear.AbstractFieldMatrix$3.<init>(Lorg/apache/commons/math3/linear/AbstractFieldMatrix;Lorg/apache/commons/math3/FieldElement;Lorg/apache/commons/math3/linear/FieldMatrix;)V
org.apache.commons.math3.linear.AbstractFieldMatrix.<init>()V
org.apache.commons.math3.linear.AbstractFieldMatrix.<init>(Lorg/apache/commons/math3/Field;)V
org.apache.commons.math3.linear.AbstractFieldMatrix.<init>(Lorg/apache/commons/math3/Field;II)V
org.apache.commons.math3.linear.AbstractRealMatrix$1.<init>(Lorg/apache/commons/math3/linear/AbstractRealMatrix;)V
org.apache.commons.math3.linear.AbstractRealMatrix$2.<init>(Lorg/apache/commons/math3/linear/AbstractRealMatrix;)V
org.apache.commons.math3.linear.AbstractRealMatrix$3.<init>(Lorg/apache/commons/math3/linear/AbstractRealMatrix;[I[I)V
org.apache.commons.math3.linear.AbstractRealMatrix$4.<init>(Lorg/apache/commons/math3/linear/AbstractRealMatrix;[[D)V
org.apache.commons.math3.linear.AbstractRealMatrix$5.<init>(Lorg/apache/commons/math3/linear/AbstractRealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)V
org.apache.commons.math3.linear.AbstractRealMatrix.<init>()V
org.apache.commons.math3.linear.AbstractRealMatrix.<init>(II)V
org.apache.commons.math3.linear.Array2DRowFieldMatrix.<init>(Lorg/apache/commons/math3/Field;)V
org.apache.commons.math3.linear.Array2DRowFieldMatrix.<init>(Lorg/apache/commons/math3/Field;II)V
org.apache.commons.math3.linear.Array2DRowFieldMatrix.<init>(Lorg/apache/commons/math3/Field;[Lorg/apache/commons/math3/FieldElement;)V
org.apache.commons.math3.linear.Array2DRowFieldMatrix.<init>(Lorg/apache/commons/math3/Field;[[Lorg/apache/commons/math3/FieldElement;)V
org.apache.commons.math3.linear.Array2DRowFieldMatrix.<init>(Lorg/apache/commons/math3/Field;[[Lorg/apache/commons/math3/FieldElement;Z)V
org.apache.commons.math3.linear.Array2DRowFieldMatrix.<init>([Lorg/apache/commons/math3/FieldElement;)V
org.apache.commons.math3.linear.Array2DRowFieldMatrix.<init>([[Lorg/apache/commons/math3/FieldElement;)V
org.apache.commons.math3.linear.Array2DRowFieldMatrix.<init>([[Lorg/apache/commons/math3/FieldElement;Z)V
org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>()V
org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(II)V
org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>([D)V
org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>([[D)V
org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>([[DZ)V
org.apache.commons.math3.linear.ArrayFieldVector.<init>(ILorg/apache/commons/math3/FieldElement;)V
org.apache.commons.math3.linear.ArrayFieldVector.<init>(Lorg/apache/commons/math3/Field;)V
org.apache.commons.math3.linear.ArrayFieldVector.<init>(Lorg/apache/commons/math3/Field;I)V
org.apache.commons.math3.linear.ArrayFieldVector.<init>(Lorg/apache/commons/math3/Field;[Lorg/apache/commons/math3/FieldElement;)V
org.apache.commons.math3.linear.ArrayFieldVector.<init>(Lorg/apache/commons/math3/Field;[Lorg/apache/commons/math3/FieldElement;II)V
org.apache.commons.math3.linear.ArrayFieldVector.<init>(Lorg/apache/commons/math3/Field;[Lorg/apache/commons/math3/FieldElement;Z)V
org.apache.commons.math3.linear.ArrayFieldVector.<init>(Lorg/apache/commons/math3/Field;[Lorg/apache/commons/math3/FieldElement;[Lorg/apache/commons/math3/FieldElement;)V
org.apache.commons.math3.linear.ArrayFieldVector.<init>(Lorg/apache/commons/math3/linear/ArrayFieldVector;)V
org.apache.commons.math3.linear.ArrayFieldVector.<init>(Lorg/apache/commons/math3/linear/ArrayFieldVector;Lorg/apache/commons/math3/linear/ArrayFieldVector;)V
org.apache.commons.math3.linear.ArrayFieldVector.<init>(Lorg/apache/commons/math3/linear/ArrayFieldVector;Z)V
org.apache.commons.math3.linear.ArrayFieldVector.<init>(Lorg/apache/commons/math3/linear/ArrayFieldVector;[Lorg/apache/commons/math3/FieldElement;)V
org.apache.commons.math3.linear.ArrayFieldVector.<init>(Lorg/apache/commons/math3/linear/FieldVector;)V
org.apache.commons.math3.linear.ArrayFieldVector.<init>(Lorg/apache/commons/math3/linear/FieldVector;Lorg/apache/commons/math3/linear/FieldVector;)V
org.apache.commons.math3.linear.ArrayFieldVector.<init>(Lorg/apache/commons/math3/linear/FieldVector;[Lorg/apache/commons/math3/FieldElement;)V
org.apache.commons.math3.linear.ArrayFieldVector.<init>([Lorg/apache/commons/math3/FieldElement;)V
org.apache.commons.math3.linear.ArrayFieldVector.<init>([Lorg/apache/commons/math3/FieldElement;II)V
org.apache.commons.math3.linear.ArrayFieldVector.<init>([Lorg/apache/commons/math3/FieldElement;Lorg/apache/commons/math3/linear/ArrayFieldVector;)V
org.apache.commons.math3.linear.ArrayFieldVector.<init>([Lorg/apache/commons/math3/FieldElement;Lorg/apache/commons/math3/linear/FieldVector;)V
org.apache.commons.math3.linear.ArrayFieldVector.<init>([Lorg/apache/commons/math3/FieldElement;Z)V
org.apache.commons.math3.linear.ArrayFieldVector.<init>([Lorg/apache/commons/math3/FieldElement;[Lorg/apache/commons/math3/FieldElement;)V
org.apache.commons.math3.linear.ArrayRealVector.<init>()V
org.apache.commons.math3.linear.ArrayRealVector.<init>(I)V
org.apache.commons.math3.linear.ArrayRealVector.<init>(ID)V
org.apache.commons.math3.linear.ArrayRealVector.<init>(Lorg/apache/commons/math3/linear/ArrayRealVector;)V
org.apache.commons.math3.linear.ArrayRealVector.<init>(Lorg/apache/commons/math3/linear/ArrayRealVector;Lorg/apache/commons/math3/linear/ArrayRealVector;)V
org.apache.commons.math3.linear.ArrayRealVector.<init>(Lorg/apache/commons/math3/linear/ArrayRealVector;Lorg/apache/commons/math3/linear/RealVector;)V
org.apache.commons.math3.linear.ArrayRealVector.<init>(Lorg/apache/commons/math3/linear/ArrayRealVector;Z)V
org.apache.commons.math3.linear.ArrayRealVector.<init>(Lorg/apache/commons/math3/linear/ArrayRealVector;[D)V
org.apache.commons.math3.linear.ArrayRealVector.<init>(Lorg/apache/commons/math3/linear/RealVector;)V
org.apache.commons.math3.linear.ArrayRealVector.<init>(Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/ArrayRealVector;)V
org.apache.commons.math3.linear.ArrayRealVector.<init>([D)V
org.apache.commons.math3.linear.ArrayRealVector.<init>([DII)V
org.apache.commons.math3.linear.ArrayRealVector.<init>([DLorg/apache/commons/math3/linear/ArrayRealVector;)V
org.apache.commons.math3.linear.ArrayRealVector.<init>([DZ)V
org.apache.commons.math3.linear.ArrayRealVector.<init>([D[D)V
org.apache.commons.math3.linear.ArrayRealVector.<init>([Ljava/lang/Double;)V
org.apache.commons.math3.linear.ArrayRealVector.<init>([Ljava/lang/Double;II)V
org.apache.commons.math3.linear.BiDiagonalTransformer.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V
org.apache.commons.math3.linear.BlockFieldMatrix.<init>(II[[Lorg/apache/commons/math3/FieldElement;Z)V
org.apache.commons.math3.linear.BlockFieldMatrix.<init>(Lorg/apache/commons/math3/Field;II)V
org.apache.commons.math3.linear.BlockFieldMatrix.<init>([[Lorg/apache/commons/math3/FieldElement;)V
org.apache.commons.math3.linear.BlockRealMatrix.<init>(II)V
org.apache.commons.math3.linear.BlockRealMatrix.<init>(II[[DZ)V
org.apache.commons.math3.linear.BlockRealMatrix.<init>([[D)V
org.apache.commons.math3.linear.CholeskyDecomposition$Solver.<init>([[D)V
org.apache.commons.math3.linear.CholeskyDecomposition$Solver.<init>([[DLorg/apache/commons/math3/linear/CholeskyDecomposition$1;)V
org.apache.commons.math3.linear.CholeskyDecomposition.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V
org.apache.commons.math3.linear.CholeskyDecomposition.<init>(Lorg/apache/commons/math3/linear/RealMatrix;DD)V
org.apache.commons.math3.linear.ConjugateGradient.<init>(IDZ)V
org.apache.commons.math3.linear.ConjugateGradient.<init>(Lorg/apache/commons/math3/util/IterationManager;DZ)V
org.apache.commons.math3.linear.DefaultFieldMatrixChangingVisitor.<init>(Lorg/apache/commons/math3/FieldElement;)V
org.apache.commons.math3.linear.DefaultFieldMatrixPreservingVisitor.<init>(Lorg/apache/commons/math3/FieldElement;)V
org.apache.commons.math3.linear.DefaultIterativeLinearSolverEvent.<init>(Ljava/lang/Object;ILorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;D)V
org.apache.commons.math3.linear.DefaultIterativeLinearSolverEvent.<init>(Ljava/lang/Object;ILorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;D)V
org.apache.commons.math3.linear.DefaultRealMatrixChangingVisitor.<init>()V
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor.<init>()V
org.apache.commons.math3.linear.DiagonalMatrix.<init>(I)V
org.apache.commons.math3.linear.DiagonalMatrix.<init>([D)V
org.apache.commons.math3.linear.DiagonalMatrix.<init>([DZ)V
org.apache.commons.math3.linear.EigenDecomposition$Solver.<init>([D[D[Lorg/apache/commons/math3/linear/ArrayRealVector;)V
org.apache.commons.math3.linear.EigenDecomposition$Solver.<init>([D[D[Lorg/apache/commons/math3/linear/ArrayRealVector;Lorg/apache/commons/math3/linear/EigenDecomposition$1;)V
org.apache.commons.math3.linear.EigenDecomposition.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V
org.apache.commons.math3.linear.EigenDecomposition.<init>(Lorg/apache/commons/math3/linear/RealMatrix;D)V
org.apache.commons.math3.linear.EigenDecomposition.<init>([D[D)V
org.apache.commons.math3.linear.EigenDecomposition.<init>([D[DD)V
org.apache.commons.math3.linear.FieldLUDecomposition$Solver.<init>(Lorg/apache/commons/math3/Field;[[Lorg/apache/commons/math3/FieldElement;[IZ)V
org.apache.commons.math3.linear.FieldLUDecomposition$Solver.<init>(Lorg/apache/commons/math3/Field;[[Lorg/apache/commons/math3/FieldElement;[IZLorg/apache/commons/math3/linear/FieldLUDecomposition$1;)V
org.apache.commons.math3.linear.FieldLUDecomposition.<init>(Lorg/apache/commons/math3/linear/FieldMatrix;)V
org.apache.commons.math3.linear.HessenbergTransformer.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V
org.apache.commons.math3.linear.IllConditionedOperatorException.<init>(D)V
org.apache.commons.math3.linear.IterativeLinearSolver.<init>(I)V
org.apache.commons.math3.linear.IterativeLinearSolver.<init>(Lorg/apache/commons/math3/util/IterationManager;)V
org.apache.commons.math3.linear.IterativeLinearSolverEvent.<init>(Ljava/lang/Object;I)V
org.apache.commons.math3.linear.JacobiPreconditioner$1.<init>(Lorg/apache/commons/math3/linear/JacobiPreconditioner;Lorg/apache/commons/math3/linear/RealVector;)V
org.apache.commons.math3.linear.JacobiPreconditioner.<init>([DZ)V
org.apache.commons.math3.linear.LUDecomposition$Solver.<init>([[D[IZ)V
org.apache.commons.math3.linear.LUDecomposition$Solver.<init>([[D[IZLorg/apache/commons/math3/linear/LUDecomposition$1;)V
org.apache.commons.math3.linear.LUDecomposition.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V
org.apache.commons.math3.linear.LUDecomposition.<init>(Lorg/apache/commons/math3/linear/RealMatrix;D)V
org.apache.commons.math3.linear.MatrixDimensionMismatchException.<init>(IIII)V
org.apache.commons.math3.linear.MatrixUtils$BigFractionMatrixConverter.<init>()V
org.apache.commons.math3.linear.MatrixUtils$FractionMatrixConverter.<init>()V
org.apache.commons.math3.linear.MatrixUtils.<init>()V
org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException.<init>(DID)V
org.apache.commons.math3.linear.NonPositiveDefiniteOperatorException.<init>()V
org.apache.commons.math3.linear.NonSelfAdjointOperatorException.<init>()V
org.apache.commons.math3.linear.NonSquareMatrixException.<init>(II)V
org.apache.commons.math3.linear.NonSquareOperatorException.<init>(II)V
org.apache.commons.math3.linear.NonSymmetricMatrixException.<init>(IID)V
org.apache.commons.math3.linear.OpenMapRealMatrix.<init>(II)V
org.apache.commons.math3.linear.OpenMapRealMatrix.<init>(Lorg/apache/commons/math3/linear/OpenMapRealMatrix;)V
org.apache.commons.math3.linear.OpenMapRealVector$OpenMapEntry.<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator;)V
org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V
org.apache.commons.math3.linear.OpenMapRealVector.<init>()V
org.apache.commons.math3.linear.OpenMapRealVector.<init>(I)V
org.apache.commons.math3.linear.OpenMapRealVector.<init>(ID)V
org.apache.commons.math3.linear.OpenMapRealVector.<init>(II)V
org.apache.commons.math3.linear.OpenMapRealVector.<init>(IID)V
org.apache.commons.math3.linear.OpenMapRealVector.<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V
org.apache.commons.math3.linear.OpenMapRealVector.<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;I)V
org.apache.commons.math3.linear.OpenMapRealVector.<init>(Lorg/apache/commons/math3/linear/RealVector;)V
org.apache.commons.math3.linear.OpenMapRealVector.<init>([D)V
org.apache.commons.math3.linear.OpenMapRealVector.<init>([DD)V
org.apache.commons.math3.linear.OpenMapRealVector.<init>([Ljava/lang/Double;)V
org.apache.commons.math3.linear.OpenMapRealVector.<init>([Ljava/lang/Double;D)V
org.apache.commons.math3.linear.PreconditionedIterativeLinearSolver.<init>(I)V
org.apache.commons.math3.linear.PreconditionedIterativeLinearSolver.<init>(Lorg/apache/commons/math3/util/IterationManager;)V
org.apache.commons.math3.linear.QRDecomposition$Solver.<init>([[D[DD)V
org.apache.commons.math3.linear.QRDecomposition$Solver.<init>([[D[DDLorg/apache/commons/math3/linear/QRDecomposition$1;)V
org.apache.commons.math3.linear.QRDecomposition.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V
org.apache.commons.math3.linear.QRDecomposition.<init>(Lorg/apache/commons/math3/linear/RealMatrix;D)V
org.apache.commons.math3.linear.RRQRDecomposition$Solver.<init>(Lorg/apache/commons/math3/linear/DecompositionSolver;Lorg/apache/commons/math3/linear/RealMatrix;)V
org.apache.commons.math3.linear.RRQRDecomposition$Solver.<init>(Lorg/apache/commons/math3/linear/DecompositionSolver;Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RRQRDecomposition$1;)V
org.apache.commons.math3.linear.RRQRDecomposition.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V
org.apache.commons.math3.linear.RRQRDecomposition.<init>(Lorg/apache/commons/math3/linear/RealMatrix;D)V
org.apache.commons.math3.linear.RealLinearOperator.<init>()V
org.apache.commons.math3.linear.RealMatrixFormat.<init>()V
org.apache.commons.math3.linear.RealMatrixFormat.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
org.apache.commons.math3.linear.RealMatrixFormat.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/text/NumberFormat;)V
org.apache.commons.math3.linear.RealMatrixFormat.<init>(Ljava/text/NumberFormat;)V
org.apache.commons.math3.linear.RealVector$1.<init>(Lorg/apache/commons/math3/linear/RealVector;I)V
org.apache.commons.math3.linear.RealVector$2$1.<init>(Lorg/apache/commons/math3/linear/RealVector$2;Ljava/util/Iterator;)V
org.apache.commons.math3.linear.RealVector$2$2.<init>(Lorg/apache/commons/math3/linear/RealVector$2;Ljava/util/Iterator;)V
org.apache.commons.math3.linear.RealVector$2$UnmodifiableEntry.<init>(Lorg/apache/commons/math3/linear/RealVector$2;)V
org.apache.commons.math3.linear.RealVector$2.<init>(Lorg/apache/commons/math3/linear/RealVector;)V
org.apache.commons.math3.linear.RealVector$Entry.<init>(Lorg/apache/commons/math3/linear/RealVector;)V
org.apache.commons.math3.linear.RealVector$SparseEntryIterator.<init>(Lorg/apache/commons/math3/linear/RealVector;)V
org.apache.commons.math3.linear.RealVector.<init>()V
org.apache.commons.math3.linear.RealVectorFormat.<init>()V
org.apache.commons.math3.linear.RealVectorFormat.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
org.apache.commons.math3.linear.RealVectorFormat.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/text/NumberFormat;)V
org.apache.commons.math3.linear.RealVectorFormat.<init>(Ljava/text/NumberFormat;)V
org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V
org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(Lorg/apache/commons/math3/linear/RealMatrix;D)V
org.apache.commons.math3.linear.SchurTransformer$ShiftInfo.<init>()V
org.apache.commons.math3.linear.SchurTransformer$ShiftInfo.<init>(Lorg/apache/commons/math3/linear/SchurTransformer$1;)V
org.apache.commons.math3.linear.SchurTransformer.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V
org.apache.commons.math3.linear.SingularMatrixException.<init>()V
org.apache.commons.math3.linear.SingularOperatorException.<init>()V
org.apache.commons.math3.linear.SingularValueDecomposition$1.<init>(Lorg/apache/commons/math3/linear/SingularValueDecomposition;[[D)V
org.apache.commons.math3.linear.SingularValueDecomposition$Solver.<init>([DLorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;ZD)V
org.apache.commons.math3.linear.SingularValueDecomposition$Solver.<init>([DLorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;ZDLorg/apache/commons/math3/linear/SingularValueDecomposition$1;)V
org.apache.commons.math3.linear.SingularValueDecomposition.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V
org.apache.commons.math3.linear.SparseFieldMatrix.<init>(Lorg/apache/commons/math3/Field;)V
org.apache.commons.math3.linear.SparseFieldMatrix.<init>(Lorg/apache/commons/math3/Field;II)V
org.apache.commons.math3.linear.SparseFieldMatrix.<init>(Lorg/apache/commons/math3/linear/FieldMatrix;)V
org.apache.commons.math3.linear.SparseFieldMatrix.<init>(Lorg/apache/commons/math3/linear/SparseFieldMatrix;)V
org.apache.commons.math3.linear.SparseFieldVector.<init>(Lorg/apache/commons/math3/Field;)V
org.apache.commons.math3.linear.SparseFieldVector.<init>(Lorg/apache/commons/math3/Field;I)V
org.apache.commons.math3.linear.SparseFieldVector.<init>(Lorg/apache/commons/math3/Field;II)V
org.apache.commons.math3.linear.SparseFieldVector.<init>(Lorg/apache/commons/math3/Field;[Lorg/apache/commons/math3/FieldElement;)V
org.apache.commons.math3.linear.SparseFieldVector.<init>(Lorg/apache/commons/math3/linear/SparseFieldVector;)V
org.apache.commons.math3.linear.SparseFieldVector.<init>(Lorg/apache/commons/math3/linear/SparseFieldVector;I)V
org.apache.commons.math3.linear.SparseRealVector.<init>()V
org.apache.commons.math3.linear.SymmLQ$State.<init>(Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealVector;ZDDZ)V
org.apache.commons.math3.linear.SymmLQ.<init>(IDZ)V
org.apache.commons.math3.linear.SymmLQ.<init>(Lorg/apache/commons/math3/util/IterationManager;DZ)V
org.apache.commons.math3.linear.TriDiagonalTransformer.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V
org.apache.commons.math3.ml.clustering.CentroidCluster.<init>(Lorg/apache/commons/math3/ml/clustering/Clusterable;)V
org.apache.commons.math3.ml.clustering.Cluster.<init>()V
org.apache.commons.math3.ml.clustering.Clusterer.<init>(Lorg/apache/commons/math3/ml/distance/DistanceMeasure;)V
org.apache.commons.math3.ml.clustering.DBSCANClusterer$PointStatus.<init>(Ljava/lang/String;I)V
org.apache.commons.math3.ml.clustering.DBSCANClusterer.<init>(DI)V
org.apache.commons.math3.ml.clustering.DBSCANClusterer.<init>(DILorg/apache/commons/math3/ml/distance/DistanceMeasure;)V
org.apache.commons.math3.ml.clustering.DoublePoint.<init>([D)V
org.apache.commons.math3.ml.clustering.DoublePoint.<init>([I)V
org.apache.commons.math3.ml.clustering.FuzzyKMeansClusterer.<init>(ID)V
org.apache.commons.math3.ml.clustering.FuzzyKMeansClusterer.<init>(IDILorg/apache/commons/math3/ml/distance/DistanceMeasure;)V
org.apache.commons.math3.ml.clustering.FuzzyKMeansClusterer.<init>(IDILorg/apache/commons/math3/ml/distance/DistanceMeasure;DLorg/apache/commons/math3/random/RandomGenerator;)V
org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy.<init>(Ljava/lang/String;I)V
org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer.<init>(I)V
org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer.<init>(II)V
org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer.<init>(IILorg/apache/commons/math3/ml/distance/DistanceMeasure;)V
org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer.<init>(IILorg/apache/commons/math3/ml/distance/DistanceMeasure;Lorg/apache/commons/math3/random/RandomGenerator;)V
org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer.<init>(IILorg/apache/commons/math3/ml/distance/DistanceMeasure;Lorg/apache/commons/math3/random/RandomGenerator;Lorg/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer$EmptyClusterStrategy;)V
org.apache.commons.math3.ml.clustering.MultiKMeansPlusPlusClusterer.<init>(Lorg/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer;I)V
org.apache.commons.math3.ml.clustering.MultiKMeansPlusPlusClusterer.<init>(Lorg/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer;ILorg/apache/commons/math3/ml/clustering/evaluation/ClusterEvaluator;)V
org.apache.commons.math3.ml.clustering.evaluation.ClusterEvaluator.<init>()V
org.apache.commons.math3.ml.clustering.evaluation.ClusterEvaluator.<init>(Lorg/apache/commons/math3/ml/distance/DistanceMeasure;)V
org.apache.commons.math3.ml.clustering.evaluation.SumOfClusterVariances.<init>(Lorg/apache/commons/math3/ml/distance/DistanceMeasure;)V
org.apache.commons.math3.ml.distance.CanberraDistance.<init>()V
org.apache.commons.math3.ml.distance.ChebyshevDistance.<init>()V
org.apache.commons.math3.ml.distance.EarthMoversDistance.<init>()V
org.apache.commons.math3.ml.distance.EuclideanDistance.<init>()V
org.apache.commons.math3.ml.distance.ManhattanDistance.<init>()V
org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory$1.<init>(DLorg/apache/commons/math3/analysis/UnivariateFunction;D)V
org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory$2.<init>(Lorg/apache/commons/math3/ml/neuralnet/FeatureInitializer;Lorg/apache/commons/math3/distribution/RealDistribution;)V
org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory.<init>()V
org.apache.commons.math3.ml.neuralnet.MapUtils$PairNeuronDouble$1.<init>()V
org.apache.commons.math3.ml.neuralnet.MapUtils$PairNeuronDouble.<init>(Lorg/apache/commons/math3/ml/neuralnet/Neuron;D)V
org.apache.commons.math3.ml.neuralnet.MapUtils.<init>()V
org.apache.commons.math3.ml.neuralnet.Network$NeuronIdentifierComparator.<init>()V
org.apache.commons.math3.ml.neuralnet.Network$SerializationProxy.<init>(JI[Lorg/apache/commons/math3/ml/neuralnet/Neuron;[[J)V
org.apache.commons.math3.ml.neuralnet.Network.<init>(JI)V
org.apache.commons.math3.ml.neuralnet.Network.<init>(JI[Lorg/apache/commons/math3/ml/neuralnet/Neuron;[[J)V
org.apache.commons.math3.ml.neuralnet.Neuron$SerializationProxy.<init>(J[D)V
org.apache.commons.math3.ml.neuralnet.Neuron.<init>(J[D)V
org.apache.commons.math3.ml.neuralnet.SquareNeighbourhood.<init>(Ljava/lang/String;I)V
org.apache.commons.math3.ml.neuralnet.oned.NeuronString$SerializationProxy.<init>(Z[[D)V
org.apache.commons.math3.ml.neuralnet.oned.NeuronString.<init>(IZ[Lorg/apache/commons/math3/ml/neuralnet/FeatureInitializer;)V
org.apache.commons.math3.ml.neuralnet.oned.NeuronString.<init>(Z[[D)V
org.apache.commons.math3.ml.neuralnet.sofm.KohonenTrainingTask.<init>(Lorg/apache/commons/math3/ml/neuralnet/Network;Ljava/util/Iterator;Lorg/apache/commons/math3/ml/neuralnet/sofm/KohonenUpdateAction;)V
org.apache.commons.math3.ml.neuralnet.sofm.KohonenUpdateAction.<init>(Lorg/apache/commons/math3/ml/distance/DistanceMeasure;Lorg/apache/commons/math3/ml/neuralnet/sofm/LearningFactorFunction;Lorg/apache/commons/math3/ml/neuralnet/sofm/NeighbourhoodSizeFunction;)V
org.apache.commons.math3.ml.neuralnet.sofm.LearningFactorFunctionFactory$1.<init>(DDJ)V
org.apache.commons.math3.ml.neuralnet.sofm.LearningFactorFunctionFactory$2.<init>(DDJ)V
org.apache.commons.math3.ml.neuralnet.sofm.LearningFactorFunctionFactory.<init>()V
org.apache.commons.math3.ml.neuralnet.sofm.NeighbourhoodSizeFunctionFactory$1.<init>(DDJ)V
org.apache.commons.math3.ml.neuralnet.sofm.NeighbourhoodSizeFunctionFactory$2.<init>(DDJ)V
org.apache.commons.math3.ml.neuralnet.sofm.NeighbourhoodSizeFunctionFactory.<init>()V
org.apache.commons.math3.ml.neuralnet.sofm.util.ExponentialDecayFunction.<init>(DDJ)V
org.apache.commons.math3.ml.neuralnet.sofm.util.QuasiSigmoidDecayFunction.<init>(DDJ)V
org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$HorizontalDirection.<init>(Ljava/lang/String;I)V
org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$SerializationProxy.<init>(ZZLorg/apache/commons/math3/ml/neuralnet/SquareNeighbourhood;[[[D)V
org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$VerticalDirection.<init>(Ljava/lang/String;I)V
org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D.<init>(IZIZLorg/apache/commons/math3/ml/neuralnet/SquareNeighbourhood;[Lorg/apache/commons/math3/ml/neuralnet/FeatureInitializer;)V
org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D.<init>(ZZLorg/apache/commons/math3/ml/neuralnet/SquareNeighbourhood;Lorg/apache/commons/math3/ml/neuralnet/Network;[[J)V
org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D.<init>(ZZLorg/apache/commons/math3/ml/neuralnet/SquareNeighbourhood;[[[D)V
org.apache.commons.math3.ml.neuralnet.twod.util.HitHistogram.<init>(ZLorg/apache/commons/math3/ml/distance/DistanceMeasure;)V
org.apache.commons.math3.ml.neuralnet.twod.util.LocationFinder$Location.<init>(II)V
org.apache.commons.math3.ml.neuralnet.twod.util.LocationFinder.<init>(Lorg/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D;)V
org.apache.commons.math3.ml.neuralnet.twod.util.QuantizationError.<init>(Lorg/apache/commons/math3/ml/distance/DistanceMeasure;)V
org.apache.commons.math3.ml.neuralnet.twod.util.SmoothedDataHistogram.<init>(ILorg/apache/commons/math3/ml/distance/DistanceMeasure;)V
org.apache.commons.math3.ml.neuralnet.twod.util.TopographicErrorHistogram.<init>(ZLorg/apache/commons/math3/ml/distance/DistanceMeasure;)V
org.apache.commons.math3.ml.neuralnet.twod.util.UnifiedDistanceMatrix.<init>(ZLorg/apache/commons/math3/ml/distance/DistanceMeasure;)V
org.apache.commons.math3.ode.AbstractFieldIntegrator$1.<init>(Lorg/apache/commons/math3/ode/AbstractFieldIntegrator;I)V
org.apache.commons.math3.ode.AbstractFieldIntegrator.<init>(Lorg/apache/commons/math3/Field;Ljava/lang/String;)V
org.apache.commons.math3.ode.AbstractIntegrator$1.<init>(Lorg/apache/commons/math3/ode/AbstractIntegrator;I)V
org.apache.commons.math3.ode.AbstractIntegrator.<init>()V
org.apache.commons.math3.ode.AbstractIntegrator.<init>(Ljava/lang/String;)V
org.apache.commons.math3.ode.ContinuousOutputFieldModel.<init>()V
org.apache.commons.math3.ode.ContinuousOutputModel.<init>()V
org.apache.commons.math3.ode.EquationsMapper.<init>(II)V
org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent.<init>(Lorg/apache/commons/math3/ode/SecondaryEquations;I)V
org.apache.commons.math3.ode.ExpandableStatefulODE.<init>(Lorg/apache/commons/math3/ode/FirstOrderDifferentialEquations;)V
org.apache.commons.math3.ode.FieldEquationsMapper.<init>(Lorg/apache/commons/math3/ode/FieldEquationsMapper;I)V
org.apache.commons.math3.ode.FieldExpandableODE.<init>(Lorg/apache/commons/math3/ode/FirstOrderFieldDifferentialEquations;)V
org.apache.commons.math3.ode.FieldODEState.<init>(Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;)V
org.apache.commons.math3.ode.FieldODEState.<init>(Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;[[Lorg/apache/commons/math3/RealFieldElement;)V
org.apache.commons.math3.ode.FieldODEStateAndDerivative.<init>(Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;)V
org.apache.commons.math3.ode.FieldODEStateAndDerivative.<init>(Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;[[Lorg/apache/commons/math3/RealFieldElement;[[Lorg/apache/commons/math3/RealFieldElement;)V
org.apache.commons.math3.ode.FirstOrderConverter.<init>(Lorg/apache/commons/math3/ode/SecondOrderDifferentialEquations;)V
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.<init>(Lorg/apache/commons/math3/ode/JacobianMatrices;)V
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.<init>(Lorg/apache/commons/math3/ode/JacobianMatrices;Lorg/apache/commons/math3/ode/JacobianMatrices$1;)V
org.apache.commons.math3.ode.JacobianMatrices$MainStateJacobianWrapper.<init>(Lorg/apache/commons/math3/ode/FirstOrderDifferentialEquations;[D)V
org.apache.commons.math3.ode.JacobianMatrices$MismatchedEquations.<init>()V
org.apache.commons.math3.ode.JacobianMatrices.<init>(Lorg/apache/commons/math3/ode/FirstOrderDifferentialEquations;[D[Ljava/lang/String;)V
org.apache.commons.math3.ode.JacobianMatrices.<init>(Lorg/apache/commons/math3/ode/MainStateJacobianProvider;[Ljava/lang/String;)V
org.apache.commons.math3.ode.MultistepFieldIntegrator$FieldNordsieckInitializer.<init>(Lorg/apache/commons/math3/ode/MultistepFieldIntegrator;Lorg/apache/commons/math3/ode/FieldEquationsMapper;I)V
org.apache.commons.math3.ode.MultistepFieldIntegrator$InitializationCompletedMarkerException.<init>()V
org.apache.commons.math3.ode.MultistepFieldIntegrator.<init>(Lorg/apache/commons/math3/Field;Ljava/lang/String;IIDDDD)V
org.apache.commons.math3.ode.MultistepFieldIntegrator.<init>(Lorg/apache/commons/math3/Field;Ljava/lang/String;IIDD[D[D)V
org.apache.commons.math3.ode.MultistepIntegrator$1.<init>(Lorg/apache/commons/math3/ode/MultistepIntegrator;)V
org.apache.commons.math3.ode.MultistepIntegrator$InitializationCompletedMarkerException.<init>()V
org.apache.commons.math3.ode.MultistepIntegrator$NordsieckInitializer.<init>(Lorg/apache/commons/math3/ode/MultistepIntegrator;II)V
org.apache.commons.math3.ode.MultistepIntegrator.<init>(Ljava/lang/String;IIDDDD)V
org.apache.commons.math3.ode.MultistepIntegrator.<init>(Ljava/lang/String;IIDD[D[D)V
org.apache.commons.math3.ode.ParameterConfiguration.<init>(Ljava/lang/String;D)V
org.apache.commons.math3.ode.ParameterJacobianWrapper.<init>(Lorg/apache/commons/math3/ode/FirstOrderDifferentialEquations;Lorg/apache/commons/math3/ode/ParameterizedODE;[Lorg/apache/commons/math3/ode/ParameterConfiguration;)V
org.apache.commons.math3.ode.ParameterizedWrapper.<init>(Lorg/apache/commons/math3/ode/FirstOrderDifferentialEquations;)V
org.apache.commons.math3.ode.UnknownParameterException.<init>(Ljava/lang/String;)V
org.apache.commons.math3.ode.events.Action.<init>(Ljava/lang/String;I)V
org.apache.commons.math3.ode.events.EventFilter.<init>(Lorg/apache/commons/math3/ode/events/EventHandler;Lorg/apache/commons/math3/ode/events/FilterType;)V
org.apache.commons.math3.ode.events.EventHandler$Action.<init>(Ljava/lang/String;I)V
org.apache.commons.math3.ode.events.EventState$1.<init>(Lorg/apache/commons/math3/ode/events/EventState;Lorg/apache/commons/math3/ode/sampling/StepInterpolator;)V
org.apache.commons.math3.ode.events.EventState$LocalMaxCountExceededException.<init>(Lorg/apache/commons/math3/exception/MaxCountExceededException;)V
org.apache.commons.math3.ode.events.EventState.<init>(Lorg/apache/commons/math3/ode/events/EventHandler;DDILorg/apache/commons/math3/analysis/solvers/UnivariateSolver;)V
org.apache.commons.math3.ode.events.FieldEventState$1.<init>(Lorg/apache/commons/math3/ode/events/FieldEventState;Lorg/apache/commons/math3/ode/sampling/FieldStepInterpolator;)V
org.apache.commons.math3.ode.events.FieldEventState.<init>(Lorg/apache/commons/math3/ode/events/FieldEventHandler;DLorg/apache/commons/math3/RealFieldElement;ILorg/apache/commons/math3/analysis/solvers/BracketedRealFieldUnivariateSolver;)V
org.apache.commons.math3.ode.events.FilterType$1.<init>(Ljava/lang/String;I)V
org.apache.commons.math3.ode.events.FilterType$2.<init>(Ljava/lang/String;I)V
org.apache.commons.math3.ode.events.FilterType.<init>(Ljava/lang/String;I)V
org.apache.commons.math3.ode.events.FilterType.<init>(Ljava/lang/String;ILorg/apache/commons/math3/ode/events/FilterType$1;)V
org.apache.commons.math3.ode.events.Transformer$1.<init>(Ljava/lang/String;I)V
org.apache.commons.math3.ode.events.Transformer$2.<init>(Ljava/lang/String;I)V
org.apache.commons.math3.ode.events.Transformer$3.<init>(Ljava/lang/String;I)V
org.apache.commons.math3.ode.events.Transformer$4.<init>(Ljava/lang/String;I)V
org.apache.commons.math3.ode.events.Transformer$5.<init>(Ljava/lang/String;I)V
org.apache.commons.math3.ode.events.Transformer.<init>(Ljava/lang/String;I)V
org.apache.commons.math3.ode.events.Transformer.<init>(Ljava/lang/String;ILorg/apache/commons/math3/ode/events/Transformer$1;)V
org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator.<init>(Lorg/apache/commons/math3/Field;IDDDD)V
org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator.<init>(Lorg/apache/commons/math3/Field;IDD[D[D)V
org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegrator.<init>(IDDDD)V
org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegrator.<init>(IDD[D[D)V
org.apache.commons.math3.ode.nonstiff.AdamsFieldIntegrator.<init>(Lorg/apache/commons/math3/Field;Ljava/lang/String;IIDDDD)V
org.apache.commons.math3.ode.nonstiff.AdamsFieldIntegrator.<init>(Lorg/apache/commons/math3/Field;Ljava/lang/String;IIDD[D[D)V
org.apache.commons.math3.ode.nonstiff.AdamsFieldStepInterpolator.<init>(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/linear/Array2DRowFieldMatrix;ZLorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)V
org.apache.commons.math3.ode.nonstiff.AdamsFieldStepInterpolator.<init>(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/linear/Array2DRowFieldMatrix;ZLorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)V
org.apache.commons.math3.ode.nonstiff.AdamsIntegrator.<init>(Ljava/lang/String;IIDDDD)V
org.apache.commons.math3.ode.nonstiff.AdamsIntegrator.<init>(Ljava/lang/String;IIDD[D[D)V
org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator$Corrector.<init>(Lorg/apache/commons/math3/ode/nonstiff/AdamsMoultonFieldIntegrator;[Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;)V
org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator.<init>(Lorg/apache/commons/math3/Field;IDDDD)V
org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator.<init>(Lorg/apache/commons/math3/Field;IDD[D[D)V
org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegrator$Corrector.<init>(Lorg/apache/commons/math3/ode/nonstiff/AdamsMoultonIntegrator;[D[D[D)V
org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegrator.<init>(IDDDD)V
org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegrator.<init>(IDD[D[D)V
org.apache.commons.math3.ode.nonstiff.AdamsNordsieckFieldTransformer.<init>(Lorg/apache/commons/math3/Field;I)V
org.apache.commons.math3.ode.nonstiff.AdamsNordsieckTransformer.<init>(I)V
org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator.<init>(Lorg/apache/commons/math3/Field;Ljava/lang/String;DDDD)V
org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator.<init>(Lorg/apache/commons/math3/Field;Ljava/lang/String;DD[D[D)V
org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator.<init>(Ljava/lang/String;DDDD)V
org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator.<init>(Ljava/lang/String;DD[D[D)V
org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaFieldIntegrator.<init>(Lorg/apache/commons/math3/Field;Lorg/apache/commons/math3/RealFieldElement;)V
org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaFieldStepInterpolator.<init>(Lorg/apache/commons/math3/Field;Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)V
org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegrator.<init>(D)V
org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolator.<init>()V
org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolator.<init>(Lorg/apache/commons/math3/ode/nonstiff/ClassicalRungeKuttaStepInterpolator;)V
org.apache.commons.math3.ode.nonstiff.DormandPrince54FieldIntegrator.<init>(Lorg/apache/commons/math3/Field;DDDD)V
org.apache.commons.math3.ode.nonstiff.DormandPrince54FieldIntegrator.<init>(Lorg/apache/commons/math3/Field;DD[D[D)V
org.apache.commons.math3.ode.nonstiff.DormandPrince54FieldStepInterpolator.<init>(Lorg/apache/commons/math3/Field;Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)V
org.apache.commons.math3.ode.nonstiff.DormandPrince54Integrator.<init>(DDDD)V
org.apache.commons.math3.ode.nonstiff.DormandPrince54Integrator.<init>(DD[D[D)V
org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator.<init>()V
org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator.<init>(Lorg/apache/commons/math3/ode/nonstiff/DormandPrince54StepInterpolator;)V
org.apache.commons.math3.ode.nonstiff.DormandPrince853FieldIntegrator.<init>(Lorg/apache/commons/math3/Field;DDDD)V
org.apache.commons.math3.ode.nonstiff.DormandPrince853FieldIntegrator.<init>(Lorg/apache/commons/math3/Field;DD[D[D)V
org.apache.commons.math3.ode.nonstiff.DormandPrince853FieldStepInterpolator.<init>(Lorg/apache/commons/math3/Field;Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)V
org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator.<init>(DDDD)V
org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator.<init>(DD[D[D)V
org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator.<init>()V
org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator.<init>(Lorg/apache/commons/math3/ode/nonstiff/DormandPrince853StepInterpolator;)V
org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaFieldIntegrator.<init>(Lorg/apache/commons/math3/Field;Ljava/lang/String;IDDDD)V
org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaFieldIntegrator.<init>(Lorg/apache/commons/math3/Field;Ljava/lang/String;IDD[D[D)V
org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaIntegrator.<init>(Ljava/lang/String;Z[D[[D[DLorg/apache/commons/math3/ode/nonstiff/RungeKuttaStepInterpolator;DDDD)V
org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaIntegrator.<init>(Ljava/lang/String;Z[D[[D[DLorg/apache/commons/math3/ode/nonstiff/RungeKuttaStepInterpolator;DD[D[D)V
org.apache.commons.math3.ode.nonstiff.EulerFieldIntegrator.<init>(Lorg/apache/commons/math3/Field;Lorg/apache/commons/math3/RealFieldElement;)V
org.apache.commons.math3.ode.nonstiff.EulerFieldStepInterpolator.<init>(Lorg/apache/commons/math3/Field;Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)V
org.apache.commons.math3.ode.nonstiff.EulerIntegrator.<init>(D)V
org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator.<init>()V
org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator.<init>(Lorg/apache/commons/math3/ode/nonstiff/EulerStepInterpolator;)V
org.apache.commons.math3.ode.nonstiff.GillFieldIntegrator.<init>(Lorg/apache/commons/math3/Field;Lorg/apache/commons/math3/RealFieldElement;)V
org.apache.commons.math3.ode.nonstiff.GillFieldStepInterpolator.<init>(Lorg/apache/commons/math3/Field;Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)V
org.apache.commons.math3.ode.nonstiff.GillIntegrator.<init>(D)V
org.apache.commons.math3.ode.nonstiff.GillStepInterpolator.<init>()V
org.apache.commons.math3.ode.nonstiff.GillStepInterpolator.<init>(Lorg/apache/commons/math3/ode/nonstiff/GillStepInterpolator;)V
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator.<init>(DDDD)V
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator.<init>(DD[D[D)V
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator.<init>()V
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator.<init>(Lorg/apache/commons/math3/ode/nonstiff/GraggBulirschStoerStepInterpolator;)V
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator.<init>([D[D[D[D[[DZLorg/apache/commons/math3/ode/EquationsMapper;[Lorg/apache/commons/math3/ode/EquationsMapper;)V
org.apache.commons.math3.ode.nonstiff.HighamHall54FieldIntegrator.<init>(Lorg/apache/commons/math3/Field;DDDD)V
org.apache.commons.math3.ode.nonstiff.HighamHall54FieldIntegrator.<init>(Lorg/apache/commons/math3/Field;DD[D[D)V
org.apache.commons.math3.ode.nonstiff.HighamHall54FieldStepInterpolator.<init>(Lorg/apache/commons/math3/Field;Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)V
org.apache.commons.math3.ode.nonstiff.HighamHall54Integrator.<init>(DDDD)V
org.apache.commons.math3.ode.nonstiff.HighamHall54Integrator.<init>(DD[D[D)V
org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator.<init>()V
org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator.<init>(Lorg/apache/commons/math3/ode/nonstiff/HighamHall54StepInterpolator;)V
org.apache.commons.math3.ode.nonstiff.LutherFieldIntegrator.<init>(Lorg/apache/commons/math3/Field;Lorg/apache/commons/math3/RealFieldElement;)V
org.apache.commons.math3.ode.nonstiff.LutherFieldStepInterpolator.<init>(Lorg/apache/commons/math3/Field;Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)V
org.apache.commons.math3.ode.nonstiff.LutherIntegrator.<init>(D)V
org.apache.commons.math3.ode.nonstiff.LutherStepInterpolator.<init>()V
org.apache.commons.math3.ode.nonstiff.LutherStepInterpolator.<init>(Lorg/apache/commons/math3/ode/nonstiff/LutherStepInterpolator;)V
org.apache.commons.math3.ode.nonstiff.MidpointFieldIntegrator.<init>(Lorg/apache/commons/math3/Field;Lorg/apache/commons/math3/RealFieldElement;)V
org.apache.commons.math3.ode.nonstiff.MidpointFieldStepInterpolator.<init>(Lorg/apache/commons/math3/Field;Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)V
org.apache.commons.math3.ode.nonstiff.MidpointIntegrator.<init>(D)V
org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolator.<init>()V
org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolator.<init>(Lorg/apache/commons/math3/ode/nonstiff/MidpointStepInterpolator;)V
org.apache.commons.math3.ode.nonstiff.RungeKuttaFieldIntegrator.<init>(Lorg/apache/commons/math3/Field;Ljava/lang/String;Lorg/apache/commons/math3/RealFieldElement;)V
org.apache.commons.math3.ode.nonstiff.RungeKuttaFieldStepInterpolator.<init>(Lorg/apache/commons/math3/Field;Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)V
org.apache.commons.math3.ode.nonstiff.RungeKuttaIntegrator.<init>(Ljava/lang/String;[D[[D[DLorg/apache/commons/math3/ode/nonstiff/RungeKuttaStepInterpolator;D)V
org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator.<init>()V
org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator.<init>(Lorg/apache/commons/math3/ode/nonstiff/RungeKuttaStepInterpolator;)V
org.apache.commons.math3.ode.nonstiff.ThreeEighthesFieldIntegrator.<init>(Lorg/apache/commons/math3/Field;Lorg/apache/commons/math3/RealFieldElement;)V
org.apache.commons.math3.ode.nonstiff.ThreeEighthesFieldStepInterpolator.<init>(Lorg/apache/commons/math3/Field;Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)V
org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegrator.<init>(D)V
org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolator.<init>()V
org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolator.<init>(Lorg/apache/commons/math3/ode/nonstiff/ThreeEighthesStepInterpolator;)V
org.apache.commons.math3.ode.sampling.AbstractFieldStepInterpolator.<init>(ZLorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)V
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.<init>()V
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.<init>(Lorg/apache/commons/math3/ode/sampling/AbstractStepInterpolator;)V
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.<init>([DZLorg/apache/commons/math3/ode/EquationsMapper;[Lorg/apache/commons/math3/ode/EquationsMapper;)V
org.apache.commons.math3.ode.sampling.DummyStepHandler$LazyHolder.<init>()V
org.apache.commons.math3.ode.sampling.DummyStepHandler.<init>()V
org.apache.commons.math3.ode.sampling.DummyStepHandler.<init>(Lorg/apache/commons/math3/ode/sampling/DummyStepHandler$1;)V
org.apache.commons.math3.ode.sampling.FieldStepNormalizer.<init>(DLorg/apache/commons/math3/ode/sampling/FieldFixedStepHandler;)V
org.apache.commons.math3.ode.sampling.FieldStepNormalizer.<init>(DLorg/apache/commons/math3/ode/sampling/FieldFixedStepHandler;Lorg/apache/commons/math3/ode/sampling/StepNormalizerBounds;)V
org.apache.commons.math3.ode.sampling.FieldStepNormalizer.<init>(DLorg/apache/commons/math3/ode/sampling/FieldFixedStepHandler;Lorg/apache/commons/math3/ode/sampling/StepNormalizerMode;)V
org.apache.commons.math3.ode.sampling.FieldStepNormalizer.<init>(DLorg/apache/commons/math3/ode/sampling/FieldFixedStepHandler;Lorg/apache/commons/math3/ode/sampling/StepNormalizerMode;Lorg/apache/commons/math3/ode/sampling/StepNormalizerBounds;)V
org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator.<init>()V
org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator.<init>(Lorg/apache/commons/math3/ode/sampling/NordsieckStepInterpolator;)V
org.apache.commons.math3.ode.sampling.StepNormalizer.<init>(DLorg/apache/commons/math3/ode/sampling/FixedStepHandler;)V
org.apache.commons.math3.ode.sampling.StepNormalizer.<init>(DLorg/apache/commons/math3/ode/sampling/FixedStepHandler;Lorg/apache/commons/math3/ode/sampling/StepNormalizerBounds;)V
org.apache.commons.math3.ode.sampling.StepNormalizer.<init>(DLorg/apache/commons/math3/ode/sampling/FixedStepHandler;Lorg/apache/commons/math3/ode/sampling/StepNormalizerMode;)V
org.apache.commons.math3.ode.sampling.StepNormalizer.<init>(DLorg/apache/commons/math3/ode/sampling/FixedStepHandler;Lorg/apache/commons/math3/ode/sampling/StepNormalizerMode;Lorg/apache/commons/math3/ode/sampling/StepNormalizerBounds;)V
org.apache.commons.math3.ode.sampling.StepNormalizerBounds.<init>(Ljava/lang/String;IZZ)V
org.apache.commons.math3.ode.sampling.StepNormalizerMode.<init>(Ljava/lang/String;I)V
org.apache.commons.math3.optim.AbstractConvergenceChecker.<init>(DD)V
org.apache.commons.math3.optim.AbstractOptimizationProblem$MaxEvalCallback.<init>()V
org.apache.commons.math3.optim.AbstractOptimizationProblem$MaxEvalCallback.<init>(Lorg/apache/commons/math3/optim/AbstractOptimizationProblem$1;)V
org.apache.commons.math3.optim.AbstractOptimizationProblem$MaxIterCallback.<init>()V
org.apache.commons.math3.optim.AbstractOptimizationProblem$MaxIterCallback.<init>(Lorg/apache/commons/math3/optim/AbstractOptimizationProblem$1;)V
org.apache.commons.math3.optim.AbstractOptimizationProblem.<init>(IILorg/apache/commons/math3/optim/ConvergenceChecker;)V
org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer.<init>(Lorg/apache/commons/math3/optim/BaseMultivariateOptimizer;ILorg/apache/commons/math3/random/RandomVectorGenerator;)V
org.apache.commons.math3.optim.BaseMultivariateOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback.<init>()V
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback.<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback.<init>()V
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback.<init>(Lorg/apache/commons/math3/optim/BaseOptimizer$1;)V
org.apache.commons.math3.optim.BaseOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V
org.apache.commons.math3.optim.BaseOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;II)V
org.apache.commons.math3.optim.InitialGuess.<init>([D)V
org.apache.commons.math3.optim.MaxEval.<init>(I)V
org.apache.commons.math3.optim.MaxIter.<init>(I)V
org.apache.commons.math3.optim.PointValuePair$DataTransferObject.<init>([DD)V
org.apache.commons.math3.optim.PointValuePair.<init>([DD)V
org.apache.commons.math3.optim.PointValuePair.<init>([DDZ)V
org.apache.commons.math3.optim.PointVectorValuePair$DataTransferObject.<init>([D[D)V
org.apache.commons.math3.optim.PointVectorValuePair.<init>([D[D)V
org.apache.commons.math3.optim.PointVectorValuePair.<init>([D[DZ)V
org.apache.commons.math3.optim.SimpleBounds.<init>([D[D)V
org.apache.commons.math3.optim.SimplePointChecker.<init>(DD)V
org.apache.commons.math3.optim.SimplePointChecker.<init>(DDI)V
org.apache.commons.math3.optim.SimpleValueChecker.<init>(DD)V
org.apache.commons.math3.optim.SimpleValueChecker.<init>(DDI)V
org.apache.commons.math3.optim.SimpleVectorValueChecker.<init>(DD)V
org.apache.commons.math3.optim.SimpleVectorValueChecker.<init>(DDI)V
org.apache.commons.math3.optim.linear.LinearConstraint.<init>(Lorg/apache/commons/math3/linear/RealVector;DLorg/apache/commons/math3/optim/linear/Relationship;Lorg/apache/commons/math3/linear/RealVector;D)V
org.apache.commons.math3.optim.linear.LinearConstraint.<init>(Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/optim/linear/Relationship;D)V
org.apache.commons.math3.optim.linear.LinearConstraint.<init>([DDLorg/apache/commons/math3/optim/linear/Relationship;[DD)V
org.apache.commons.math3.optim.linear.LinearConstraint.<init>([DLorg/apache/commons/math3/optim/linear/Relationship;D)V
org.apache.commons.math3.optim.linear.LinearConstraintSet.<init>(Ljava/util/Collection;)V
org.apache.commons.math3.optim.linear.LinearConstraintSet.<init>([Lorg/apache/commons/math3/optim/linear/LinearConstraint;)V
org.apache.commons.math3.optim.linear.LinearObjectiveFunction.<init>(Lorg/apache/commons/math3/linear/RealVector;D)V
org.apache.commons.math3.optim.linear.LinearObjectiveFunction.<init>([DD)V
org.apache.commons.math3.optim.linear.LinearOptimizer.<init>()V
org.apache.commons.math3.optim.linear.NoFeasibleSolutionException.<init>()V
org.apache.commons.math3.optim.linear.NonNegativeConstraint.<init>(Z)V
org.apache.commons.math3.optim.linear.PivotSelectionRule.<init>(Ljava/lang/String;I)V
org.apache.commons.math3.optim.linear.Relationship.<init>(Ljava/lang/String;ILjava/lang/String;)V
org.apache.commons.math3.optim.linear.SimplexSolver.<init>()V
org.apache.commons.math3.optim.linear.SimplexSolver.<init>(D)V
org.apache.commons.math3.optim.linear.SimplexSolver.<init>(DI)V
org.apache.commons.math3.optim.linear.SimplexSolver.<init>(DID)V
org.apache.commons.math3.optim.linear.SimplexTableau.<init>(Lorg/apache/commons/math3/optim/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math3/optim/nonlinear/scalar/GoalType;ZD)V
org.apache.commons.math3.optim.linear.SimplexTableau.<init>(Lorg/apache/commons/math3/optim/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math3/optim/nonlinear/scalar/GoalType;ZDI)V
org.apache.commons.math3.optim.linear.SolutionCallback.<init>()V
org.apache.commons.math3.optim.linear.UnboundedSolutionException.<init>()V
org.apache.commons.math3.optim.nonlinear.scalar.GoalType.<init>(Ljava/lang/String;I)V
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V
org.apache.commons.math3.optim.nonlinear.scalar.LeastSquaresConverter.<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;[D)V
org.apache.commons.math3.optim.nonlinear.scalar.LeastSquaresConverter.<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;[DLorg/apache/commons/math3/linear/RealMatrix;)V
org.apache.commons.math3.optim.nonlinear.scalar.LeastSquaresConverter.<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;[D[D)V
org.apache.commons.math3.optim.nonlinear.scalar.LineSearch$1.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/LineSearch;I[D[D)V
org.apache.commons.math3.optim.nonlinear.scalar.LineSearch.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/MultivariateOptimizer;DDD)V
org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer$1.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/MultiStartMultivariateOptimizer;)V
org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/MultivariateOptimizer;ILorg/apache/commons/math3/random/RandomVectorGenerator;)V
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerBoundMapper.<init>(D)V
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.<init>(DD)V
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$NoBoundsMapper.<init>()V
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$NoBoundsMapper.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/MultivariateFunctionMappingAdapter$1;)V
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$UpperBoundMapper.<init>(D)V
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.<init>(Lorg/apache/commons/math3/analysis/MultivariateFunction;[D[D)V
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapter.<init>(Lorg/apache/commons/math3/analysis/MultivariateFunction;[D[DD[D)V
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V
org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunction.<init>(Lorg/apache/commons/math3/analysis/MultivariateFunction;)V
org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunctionGradient.<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$BracketingStep.<init>(D)V
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$Formula.<init>(Ljava/lang/String;I)V
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$IdentityPreconditioner.<init>()V
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer$Formula;Lorg/apache/commons/math3/optim/ConvergenceChecker;)V
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer$Formula;Lorg/apache/commons/math3/optim/ConvergenceChecker;DDD)V
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer$Formula;Lorg/apache/commons/math3/optim/ConvergenceChecker;DDDLorg/apache/commons/math3/optim/nonlinear/scalar/gradient/Preconditioner;)V
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer$Formula;Lorg/apache/commons/math3/optim/ConvergenceChecker;Lorg/apache/commons/math3/analysis/solvers/UnivariateSolver;)V
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer$Formula;Lorg/apache/commons/math3/optim/ConvergenceChecker;Lorg/apache/commons/math3/analysis/solvers/UnivariateSolver;Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/Preconditioner;)V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.<init>(ID)V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.<init>([D)V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.<init>([[D)V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer$PathIsExploredException.<init>()V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer.<init>(I)V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer.<init>(IDD)V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex.<init>(DI)V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer;)V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$PopulationSize.<init>(I)V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$Sigma.<init>([D)V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$ValuePenaltyPair.<init>(DD)V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.<init>(IDZIILorg/apache/commons/math3/random/RandomGenerator;ZLorg/apache/commons/math3/optim/ConvergenceChecker;)V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex.<init>(I)V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex.<init>(ID)V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex.<init>(IDD)V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex.<init>(IDDD)V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex.<init>([D)V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex.<init>([DDD)V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex.<init>([[D)V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex.<init>([[DDD)V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex.<init>(I)V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex.<init>(ID)V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex.<init>(IDDDD)V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex.<init>(IDDDDD)V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex.<init>([D)V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex.<init>([DDDDD)V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex.<init>([[D)V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex.<init>([[DDDDD)V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.<init>(DD)V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.<init>(DDDD)V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.<init>(DDDDLorg/apache/commons/math3/optim/ConvergenceChecker;)V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.<init>(DDLorg/apache/commons/math3/optim/ConvergenceChecker;)V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$1.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer;)V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$2.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer;Z)V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.<init>(DD)V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction.<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian.<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V
org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1.<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizer;)V
org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer.<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;ILorg/apache/commons/math3/random/RandomVectorGenerator;)V
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V
org.apache.commons.math3.optim.nonlinear.vector.Target.<init>([D)V
org.apache.commons.math3.optim.nonlinear.vector.Weight.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V
org.apache.commons.math3.optim.nonlinear.vector.Weight.<init>([D)V
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer.<init>(ZLorg/apache/commons/math3/optim/ConvergenceChecker;)V
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.<init>()V
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.<init>(DDD)V
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.<init>(DDDDD)V
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.<init>(DLorg/apache/commons/math3/optim/ConvergenceChecker;DDDD)V
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V
org.apache.commons.math3.optim.univariate.BracketFinder.<init>()V
org.apache.commons.math3.optim.univariate.BracketFinder.<init>(DI)V
org.apache.commons.math3.optim.univariate.BrentOptimizer.<init>(DD)V
org.apache.commons.math3.optim.univariate.BrentOptimizer.<init>(DDLorg/apache/commons/math3/optim/ConvergenceChecker;)V
org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizer$1.<init>(Lorg/apache/commons/math3/optim/univariate/MultiStartUnivariateOptimizer;Lorg/apache/commons/math3/optim/nonlinear/scalar/GoalType;)V
org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizer.<init>(Lorg/apache/commons/math3/optim/univariate/UnivariateOptimizer;ILorg/apache/commons/math3/random/RandomGenerator;)V
org.apache.commons.math3.optim.univariate.SearchInterval.<init>(DD)V
org.apache.commons.math3.optim.univariate.SearchInterval.<init>(DDD)V
org.apache.commons.math3.optim.univariate.SimpleUnivariateValueChecker.<init>(DD)V
org.apache.commons.math3.optim.univariate.SimpleUnivariateValueChecker.<init>(DDI)V
org.apache.commons.math3.optim.univariate.UnivariateObjectiveFunction.<init>(Lorg/apache/commons/math3/analysis/UnivariateFunction;)V
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V
org.apache.commons.math3.optim.univariate.UnivariatePointValuePair.<init>(DD)V
org.apache.commons.math3.optimization.AbstractConvergenceChecker.<init>()V
org.apache.commons.math3.optimization.AbstractConvergenceChecker.<init>(DD)V
org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer$1.<init>(Lorg/apache/commons/math3/optimization/BaseMultivariateMultiStartOptimizer;Lorg/apache/commons/math3/optimization/GoalType;)V
org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer.<init>(Lorg/apache/commons/math3/optimization/BaseMultivariateOptimizer;ILorg/apache/commons/math3/random/RandomVectorGenerator;)V
org.apache.commons.math3.optimization.BaseMultivariateVectorMultiStartOptimizer$1.<init>(Lorg/apache/commons/math3/optimization/BaseMultivariateVectorMultiStartOptimizer;[D[D)V
org.apache.commons.math3.optimization.BaseMultivariateVectorMultiStartOptimizer.<init>(Lorg/apache/commons/math3/optimization/BaseMultivariateVectorOptimizer;ILorg/apache/commons/math3/random/RandomVectorGenerator;)V
org.apache.commons.math3.optimization.DifferentiableMultivariateMultiStartOptimizer.<init>(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateOptimizer;ILorg/apache/commons/math3/random/RandomVectorGenerator;)V
org.apache.commons.math3.optimization.DifferentiableMultivariateVectorMultiStartOptimizer.<init>(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;ILorg/apache/commons/math3/random/RandomVectorGenerator;)V
org.apache.commons.math3.optimization.GoalType.<init>(Ljava/lang/String;I)V
org.apache.commons.math3.optimization.InitialGuess.<init>([D)V
org.apache.commons.math3.optimization.LeastSquaresConverter.<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;[D)V
org.apache.commons.math3.optimization.LeastSquaresConverter.<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;[DLorg/apache/commons/math3/linear/RealMatrix;)V
org.apache.commons.math3.optimization.LeastSquaresConverter.<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;[D[D)V
org.apache.commons.math3.optimization.MultivariateDifferentiableMultiStartOptimizer.<init>(Lorg/apache/commons/math3/optimization/MultivariateDifferentiableOptimizer;ILorg/apache/commons/math3/random/RandomVectorGenerator;)V
org.apache.commons.math3.optimization.MultivariateDifferentiableVectorMultiStartOptimizer.<init>(Lorg/apache/commons/math3/optimization/MultivariateDifferentiableVectorOptimizer;ILorg/apache/commons/math3/random/RandomVectorGenerator;)V
org.apache.commons.math3.optimization.MultivariateMultiStartOptimizer.<init>(Lorg/apache/commons/math3/optimization/MultivariateOptimizer;ILorg/apache/commons/math3/random/RandomVectorGenerator;)V
org.apache.commons.math3.optimization.PointValuePair$DataTransferObject.<init>([DD)V
org.apache.commons.math3.optimization.PointValuePair.<init>([DD)V
org.apache.commons.math3.optimization.PointValuePair.<init>([DDZ)V
org.apache.commons.math3.optimization.PointVectorValuePair$DataTransferObject.<init>([D[D)V
org.apache.commons.math3.optimization.PointVectorValuePair.<init>([D[D)V
org.apache.commons.math3.optimization.PointVectorValuePair.<init>([D[DZ)V
org.apache.commons.math3.optimization.SimpleBounds.<init>([D[D)V
org.apache.commons.math3.optimization.SimplePointChecker.<init>()V
org.apache.commons.math3.optimization.SimplePointChecker.<init>(DD)V
org.apache.commons.math3.optimization.SimplePointChecker.<init>(DDI)V
org.apache.commons.math3.optimization.SimpleValueChecker.<init>()V
org.apache.commons.math3.optimization.SimpleValueChecker.<init>(DD)V
org.apache.commons.math3.optimization.SimpleValueChecker.<init>(DDI)V
org.apache.commons.math3.optimization.SimpleVectorValueChecker.<init>()V
org.apache.commons.math3.optimization.SimpleVectorValueChecker.<init>(DD)V
org.apache.commons.math3.optimization.SimpleVectorValueChecker.<init>(DDI)V
org.apache.commons.math3.optimization.Target.<init>([D)V
org.apache.commons.math3.optimization.Weight.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V
org.apache.commons.math3.optimization.Weight.<init>([D)V
org.apache.commons.math3.optimization.direct.AbstractSimplex.<init>(ID)V
org.apache.commons.math3.optimization.direct.AbstractSimplex.<init>([D)V
org.apache.commons.math3.optimization.direct.AbstractSimplex.<init>([[D)V
org.apache.commons.math3.optimization.direct.BOBYQAOptimizer$PathIsExploredException.<init>()V
org.apache.commons.math3.optimization.direct.BOBYQAOptimizer.<init>(I)V
org.apache.commons.math3.optimization.direct.BOBYQAOptimizer.<init>(IDD)V
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.<init>()V
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.<init>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer.<init>()V
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer.<init>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.<init>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V
org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex.<init>(DI)V
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction.<init>(Lorg/apache/commons/math3/optimization/direct/CMAESOptimizer;)V
org.apache.commons.math3.optimization.direct.CMAESOptimizer$PopulationSize.<init>(I)V
org.apache.commons.math3.optimization.direct.CMAESOptimizer$Sigma.<init>([D)V
org.apache.commons.math3.optimization.direct.CMAESOptimizer.<init>()V
org.apache.commons.math3.optimization.direct.CMAESOptimizer.<init>(I)V
org.apache.commons.math3.optimization.direct.CMAESOptimizer.<init>(IDZIILorg/apache/commons/math3/random/RandomGenerator;ZLorg/apache/commons/math3/optimization/ConvergenceChecker;)V
org.apache.commons.math3.optimization.direct.CMAESOptimizer.<init>(I[D)V
org.apache.commons.math3.optimization.direct.CMAESOptimizer.<init>(I[DIDZIILorg/apache/commons/math3/random/RandomGenerator;Z)V
org.apache.commons.math3.optimization.direct.CMAESOptimizer.<init>(I[DIDZIILorg/apache/commons/math3/random/RandomGenerator;ZLorg/apache/commons/math3/optimization/ConvergenceChecker;)V
org.apache.commons.math3.optimization.direct.MultiDirectionalSimplex.<init>(I)V
org.apache.commons.math3.optimization.direct.MultiDirectionalSimplex.<init>(ID)V
org.apache.commons.math3.optimization.direct.MultiDirectionalSimplex.<init>(IDD)V
org.apache.commons.math3.optimization.direct.MultiDirectionalSimplex.<init>(IDDD)V
org.apache.commons.math3.optimization.direct.MultiDirectionalSimplex.<init>([D)V
org.apache.commons.math3.optimization.direct.MultiDirectionalSimplex.<init>([DDD)V
org.apache.commons.math3.optimization.direct.MultiDirectionalSimplex.<init>([[D)V
org.apache.commons.math3.optimization.direct.MultiDirectionalSimplex.<init>([[DDD)V
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerBoundMapper.<init>(D)V
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.<init>(DD)V
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$NoBoundsMapper.<init>()V
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$UpperBoundMapper.<init>(D)V
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.<init>(Lorg/apache/commons/math3/analysis/MultivariateFunction;[D[D)V
org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapter.<init>(Lorg/apache/commons/math3/analysis/MultivariateFunction;[D[DD[D)V
org.apache.commons.math3.optimization.direct.NelderMeadSimplex.<init>(I)V
org.apache.commons.math3.optimization.direct.NelderMeadSimplex.<init>(ID)V
org.apache.commons.math3.optimization.direct.NelderMeadSimplex.<init>(IDDDD)V
org.apache.commons.math3.optimization.direct.NelderMeadSimplex.<init>(IDDDDD)V
org.apache.commons.math3.optimization.direct.NelderMeadSimplex.<init>([D)V
org.apache.commons.math3.optimization.direct.NelderMeadSimplex.<init>([DDDDD)V
org.apache.commons.math3.optimization.direct.NelderMeadSimplex.<init>([[D)V
org.apache.commons.math3.optimization.direct.NelderMeadSimplex.<init>([[DDDDD)V
org.apache.commons.math3.optimization.direct.PowellOptimizer$LineSearch$1.<init>(Lorg/apache/commons/math3/optimization/direct/PowellOptimizer$LineSearch;I[D[D)V
org.apache.commons.math3.optimization.direct.PowellOptimizer$LineSearch.<init>(Lorg/apache/commons/math3/optimization/direct/PowellOptimizer;DD)V
org.apache.commons.math3.optimization.direct.PowellOptimizer.<init>(DD)V
org.apache.commons.math3.optimization.direct.PowellOptimizer.<init>(DDDD)V
org.apache.commons.math3.optimization.direct.PowellOptimizer.<init>(DDDDLorg/apache/commons/math3/optimization/ConvergenceChecker;)V
org.apache.commons.math3.optimization.direct.PowellOptimizer.<init>(DDLorg/apache/commons/math3/optimization/ConvergenceChecker;)V
org.apache.commons.math3.optimization.direct.SimplexOptimizer$1.<init>(Lorg/apache/commons/math3/optimization/direct/SimplexOptimizer;)V
org.apache.commons.math3.optimization.direct.SimplexOptimizer$2.<init>(Lorg/apache/commons/math3/optimization/direct/SimplexOptimizer;Z)V
org.apache.commons.math3.optimization.direct.SimplexOptimizer.<init>()V
org.apache.commons.math3.optimization.direct.SimplexOptimizer.<init>(DD)V
org.apache.commons.math3.optimization.direct.SimplexOptimizer.<init>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction$1.<init>(Lorg/apache/commons/math3/optimization/fitting/CurveFitter$OldTheoreticalValuesFunction;)V
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.<init>(Lorg/apache/commons/math3/optimization/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.<init>(Lorg/apache/commons/math3/optimization/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V
org.apache.commons.math3.optimization.fitting.CurveFitter.<init>(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;)V
org.apache.commons.math3.optimization.fitting.CurveFitter.<init>(Lorg/apache/commons/math3/optimization/MultivariateDifferentiableVectorOptimizer;)V
org.apache.commons.math3.optimization.fitting.GaussianFitter$1.<init>(Lorg/apache/commons/math3/optimization/fitting/GaussianFitter;)V
org.apache.commons.math3.optimization.fitting.GaussianFitter$ParameterGuesser$1.<init>(Lorg/apache/commons/math3/optimization/fitting/GaussianFitter$ParameterGuesser;)V
org.apache.commons.math3.optimization.fitting.GaussianFitter$ParameterGuesser.<init>([Lorg/apache/commons/math3/optimization/fitting/WeightedObservedPoint;)V
org.apache.commons.math3.optimization.fitting.GaussianFitter.<init>(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;)V
org.apache.commons.math3.optimization.fitting.HarmonicFitter$ParameterGuesser.<init>([Lorg/apache/commons/math3/optimization/fitting/WeightedObservedPoint;)V
org.apache.commons.math3.optimization.fitting.HarmonicFitter.<init>(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;)V
org.apache.commons.math3.optimization.fitting.PolynomialFitter.<init>(ILorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;)V
org.apache.commons.math3.optimization.fitting.PolynomialFitter.<init>(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;)V
org.apache.commons.math3.optimization.fitting.WeightedObservedPoint.<init>(DDD)V
org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.<init>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V
org.apache.commons.math3.optimization.general.AbstractScalarDifferentiableOptimizer.<init>()V
org.apache.commons.math3.optimization.general.AbstractScalarDifferentiableOptimizer.<init>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V
org.apache.commons.math3.optimization.general.ConjugateGradientFormula.<init>(Ljava/lang/String;I)V
org.apache.commons.math3.optimization.general.GaussNewtonOptimizer.<init>()V
org.apache.commons.math3.optimization.general.GaussNewtonOptimizer.<init>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V
org.apache.commons.math3.optimization.general.GaussNewtonOptimizer.<init>(Z)V
org.apache.commons.math3.optimization.general.GaussNewtonOptimizer.<init>(ZLorg/apache/commons/math3/optimization/ConvergenceChecker;)V
org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer.<init>()V
org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer.<init>(DDD)V
org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer.<init>(DDDDD)V
org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer.<init>(DLorg/apache/commons/math3/optimization/ConvergenceChecker;DDDD)V
org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer.<init>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$IdentityPreconditioner.<init>()V
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.<init>(Lorg/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizer;[D)V
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer.<init>(Lorg/apache/commons/math3/optimization/general/ConjugateGradientFormula;)V
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer.<init>(Lorg/apache/commons/math3/optimization/general/ConjugateGradientFormula;Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer.<init>(Lorg/apache/commons/math3/optimization/general/ConjugateGradientFormula;Lorg/apache/commons/math3/optimization/ConvergenceChecker;Lorg/apache/commons/math3/analysis/solvers/UnivariateSolver;)V
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer.<init>(Lorg/apache/commons/math3/optimization/general/ConjugateGradientFormula;Lorg/apache/commons/math3/optimization/ConvergenceChecker;Lorg/apache/commons/math3/analysis/solvers/UnivariateSolver;Lorg/apache/commons/math3/optimization/general/Preconditioner;)V
org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer.<init>()V
org.apache.commons.math3.optimization.linear.LinearConstraint.<init>(Lorg/apache/commons/math3/linear/RealVector;DLorg/apache/commons/math3/optimization/linear/Relationship;Lorg/apache/commons/math3/linear/RealVector;D)V
org.apache.commons.math3.optimization.linear.LinearConstraint.<init>(Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/optimization/linear/Relationship;D)V
org.apache.commons.math3.optimization.linear.LinearConstraint.<init>([DDLorg/apache/commons/math3/optimization/linear/Relationship;[DD)V
org.apache.commons.math3.optimization.linear.LinearConstraint.<init>([DLorg/apache/commons/math3/optimization/linear/Relationship;D)V
org.apache.commons.math3.optimization.linear.LinearObjectiveFunction.<init>(Lorg/apache/commons/math3/linear/RealVector;D)V
org.apache.commons.math3.optimization.linear.LinearObjectiveFunction.<init>([DD)V
org.apache.commons.math3.optimization.linear.NoFeasibleSolutionException.<init>()V
org.apache.commons.math3.optimization.linear.Relationship.<init>(Ljava/lang/String;ILjava/lang/String;)V
org.apache.commons.math3.optimization.linear.SimplexSolver.<init>()V
org.apache.commons.math3.optimization.linear.SimplexSolver.<init>(DI)V
org.apache.commons.math3.optimization.linear.SimplexTableau.<init>(Lorg/apache/commons/math3/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math3/optimization/GoalType;ZD)V
org.apache.commons.math3.optimization.linear.SimplexTableau.<init>(Lorg/apache/commons/math3/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math3/optimization/GoalType;ZDI)V
org.apache.commons.math3.optimization.linear.UnboundedSolutionException.<init>()V
org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer.<init>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V
org.apache.commons.math3.optimization.univariate.BracketFinder.<init>()V
org.apache.commons.math3.optimization.univariate.BracketFinder.<init>(DI)V
org.apache.commons.math3.optimization.univariate.BrentOptimizer.<init>(DD)V
org.apache.commons.math3.optimization.univariate.BrentOptimizer.<init>(DDLorg/apache/commons/math3/optimization/ConvergenceChecker;)V
org.apache.commons.math3.optimization.univariate.SimpleUnivariateValueChecker.<init>()V
org.apache.commons.math3.optimization.univariate.SimpleUnivariateValueChecker.<init>(DD)V
org.apache.commons.math3.optimization.univariate.SimpleUnivariateValueChecker.<init>(DDI)V
org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer$1.<init>(Lorg/apache/commons/math3/optimization/univariate/UnivariateMultiStartOptimizer;Lorg/apache/commons/math3/optimization/GoalType;)V
org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer.<init>(Lorg/apache/commons/math3/optimization/univariate/BaseUnivariateOptimizer;ILorg/apache/commons/math3/random/RandomGenerator;)V
org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair.<init>(DD)V
org.apache.commons.math3.primes.PollardRho.<init>()V
org.apache.commons.math3.primes.Primes.<init>()V
org.apache.commons.math3.primes.SmallPrimes.<init>()V
org.apache.commons.math3.random.AbstractWell.<init>(IIII)V
org.apache.commons.math3.random.AbstractWell.<init>(IIIII)V
org.apache.commons.math3.random.AbstractWell.<init>(IIIIJ)V
org.apache.commons.math3.random.AbstractWell.<init>(IIII[I)V
org.apache.commons.math3.random.BitsStreamGenerator.<init>()V
org.apache.commons.math3.random.CorrelatedRandomVectorGenerator.<init>(Lorg/apache/commons/math3/linear/RealMatrix;DLorg/apache/commons/math3/random/NormalizedRandomGenerator;)V
org.apache.commons.math3.random.CorrelatedRandomVectorGenerator.<init>([DLorg/apache/commons/math3/linear/RealMatrix;DLorg/apache/commons/math3/random/NormalizedRandomGenerator;)V
org.apache.commons.math3.random.EmpiricalDistribution$ArrayDataAdapter.<init>(Lorg/apache/commons/math3/random/EmpiricalDistribution;[D)V
org.apache.commons.math3.random.EmpiricalDistribution$DataAdapter.<init>(Lorg/apache/commons/math3/random/EmpiricalDistribution;)V
org.apache.commons.math3.random.EmpiricalDistribution$DataAdapter.<init>(Lorg/apache/commons/math3/random/EmpiricalDistribution;Lorg/apache/commons/math3/random/EmpiricalDistribution$1;)V
org.apache.commons.math3.random.EmpiricalDistribution$StreamDataAdapter.<init>(Lorg/apache/commons/math3/random/EmpiricalDistribution;Ljava/io/BufferedReader;)V
org.apache.commons.math3.random.EmpiricalDistribution.<init>()V
org.apache.commons.math3.random.EmpiricalDistribution.<init>(I)V
org.apache.commons.math3.random.EmpiricalDistribution.<init>(ILorg/apache/commons/math3/random/RandomDataGenerator;)V
org.apache.commons.math3.random.EmpiricalDistribution.<init>(ILorg/apache/commons/math3/random/RandomDataImpl;)V
org.apache.commons.math3.random.EmpiricalDistribution.<init>(ILorg/apache/commons/math3/random/RandomGenerator;)V
org.apache.commons.math3.random.EmpiricalDistribution.<init>(Lorg/apache/commons/math3/random/RandomDataImpl;)V
org.apache.commons.math3.random.EmpiricalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V
org.apache.commons.math3.random.GaussianRandomGenerator.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V
org.apache.commons.math3.random.HaltonSequenceGenerator.<init>(I)V
org.apache.commons.math3.random.HaltonSequenceGenerator.<init>(I[I[I)V
org.apache.commons.math3.random.ISAACRandom.<init>()V
org.apache.commons.math3.random.ISAACRandom.<init>(J)V
org.apache.commons.math3.random.ISAACRandom.<init>([I)V
org.apache.commons.math3.random.JDKRandomGenerator.<init>()V
org.apache.commons.math3.random.JDKRandomGenerator.<init>(I)V
org.apache.commons.math3.random.MersenneTwister.<init>()V
org.apache.commons.math3.random.MersenneTwister.<init>(I)V
org.apache.commons.math3.random.MersenneTwister.<init>(J)V
org.apache.commons.math3.random.MersenneTwister.<init>([I)V
org.apache.commons.math3.random.RandomAdaptor.<init>()V
org.apache.commons.math3.random.RandomAdaptor.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V
org.apache.commons.math3.random.RandomDataGenerator.<init>()V
org.apache.commons.math3.random.RandomDataGenerator.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V
org.apache.commons.math3.random.RandomDataImpl.<init>()V
org.apache.commons.math3.random.RandomDataImpl.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V
org.apache.commons.math3.random.RandomGeneratorFactory$1.<init>(Ljava/util/Random;)V
org.apache.commons.math3.random.RandomGeneratorFactory.<init>()V
org.apache.commons.math3.random.SobolSequenceGenerator.<init>(I)V
org.apache.commons.math3.random.SobolSequenceGenerator.<init>(ILjava/io/InputStream;)V
org.apache.commons.math3.random.StableRandomGenerator.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DD)V
org.apache.commons.math3.random.SynchronizedRandomGenerator.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V
org.apache.commons.math3.random.UncorrelatedRandomVectorGenerator.<init>(ILorg/apache/commons/math3/random/NormalizedRandomGenerator;)V
org.apache.commons.math3.random.UncorrelatedRandomVectorGenerator.<init>([D[DLorg/apache/commons/math3/random/NormalizedRandomGenerator;)V
org.apache.commons.math3.random.UniformRandomGenerator.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V
org.apache.commons.math3.random.UnitSphereRandomVectorGenerator.<init>(I)V
org.apache.commons.math3.random.UnitSphereRandomVectorGenerator.<init>(ILorg/apache/commons/math3/random/RandomGenerator;)V
org.apache.commons.math3.random.ValueServer.<init>()V
org.apache.commons.math3.random.ValueServer.<init>(Lorg/apache/commons/math3/random/RandomDataImpl;)V
org.apache.commons.math3.random.ValueServer.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V
org.apache.commons.math3.random.Well1024a.<init>()V
org.apache.commons.math3.random.Well1024a.<init>(I)V
org.apache.commons.math3.random.Well1024a.<init>(J)V
org.apache.commons.math3.random.Well1024a.<init>([I)V
org.apache.commons.math3.random.Well19937a.<init>()V
org.apache.commons.math3.random.Well19937a.<init>(I)V
org.apache.commons.math3.random.Well19937a.<init>(J)V
org.apache.commons.math3.random.Well19937a.<init>([I)V
org.apache.commons.math3.random.Well19937c.<init>()V
org.apache.commons.math3.random.Well19937c.<init>(I)V
org.apache.commons.math3.random.Well19937c.<init>(J)V
org.apache.commons.math3.random.Well19937c.<init>([I)V
org.apache.commons.math3.random.Well44497a.<init>()V
org.apache.commons.math3.random.Well44497a.<init>(I)V
org.apache.commons.math3.random.Well44497a.<init>(J)V
org.apache.commons.math3.random.Well44497a.<init>([I)V
org.apache.commons.math3.random.Well44497b.<init>()V
org.apache.commons.math3.random.Well44497b.<init>(I)V
org.apache.commons.math3.random.Well44497b.<init>(J)V
org.apache.commons.math3.random.Well44497b.<init>([I)V
org.apache.commons.math3.random.Well512a.<init>()V
org.apache.commons.math3.random.Well512a.<init>(I)V
org.apache.commons.math3.random.Well512a.<init>(J)V
org.apache.commons.math3.random.Well512a.<init>([I)V
org.apache.commons.math3.special.BesselJ$BesselJResult.<init>([DI)V
org.apache.commons.math3.special.BesselJ.<init>(D)V
org.apache.commons.math3.special.Beta$1.<init>(DD)V
org.apache.commons.math3.special.Beta.<init>()V
org.apache.commons.math3.special.Erf.<init>()V
org.apache.commons.math3.special.Gamma$1.<init>(D)V
org.apache.commons.math3.special.Gamma.<init>()V
org.apache.commons.math3.stat.Frequency$NaturalComparator.<init>()V
org.apache.commons.math3.stat.Frequency$NaturalComparator.<init>(Lorg/apache/commons/math3/stat/Frequency$1;)V
org.apache.commons.math3.stat.Frequency.<init>()V
org.apache.commons.math3.stat.Frequency.<init>(Ljava/util/Comparator;)V
org.apache.commons.math3.stat.StatUtils.<init>()V
org.apache.commons.math3.stat.clustering.Cluster.<init>(Lorg/apache/commons/math3/stat/clustering/Clusterable;)V
org.apache.commons.math3.stat.clustering.DBSCANClusterer$PointStatus.<init>(Ljava/lang/String;I)V
org.apache.commons.math3.stat.clustering.DBSCANClusterer.<init>(DI)V
org.apache.commons.math3.stat.clustering.EuclideanDoublePoint.<init>([D)V
org.apache.commons.math3.stat.clustering.EuclideanIntegerPoint.<init>([I)V
org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy.<init>(Ljava/lang/String;I)V
org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer.<init>(Ljava/util/Random;)V
org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer.<init>(Ljava/util/Random;Lorg/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer$EmptyClusterStrategy;)V
org.apache.commons.math3.stat.correlation.Covariance.<init>()V
org.apache.commons.math3.stat.correlation.Covariance.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V
org.apache.commons.math3.stat.correlation.Covariance.<init>(Lorg/apache/commons/math3/linear/RealMatrix;Z)V
org.apache.commons.math3.stat.correlation.Covariance.<init>([[D)V
org.apache.commons.math3.stat.correlation.Covariance.<init>([[DZ)V
org.apache.commons.math3.stat.correlation.KendallsCorrelation$1.<init>(Lorg/apache/commons/math3/stat/correlation/KendallsCorrelation;)V
org.apache.commons.math3.stat.correlation.KendallsCorrelation.<init>()V
org.apache.commons.math3.stat.correlation.KendallsCorrelation.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V
org.apache.commons.math3.stat.correlation.KendallsCorrelation.<init>([[D)V
org.apache.commons.math3.stat.correlation.PearsonsCorrelation.<init>()V
org.apache.commons.math3.stat.correlation.PearsonsCorrelation.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V
org.apache.commons.math3.stat.correlation.PearsonsCorrelation.<init>(Lorg/apache/commons/math3/linear/RealMatrix;I)V
org.apache.commons.math3.stat.correlation.PearsonsCorrelation.<init>(Lorg/apache/commons/math3/stat/correlation/Covariance;)V
org.apache.commons.math3.stat.correlation.PearsonsCorrelation.<init>([[D)V
org.apache.commons.math3.stat.correlation.SpearmansCorrelation.<init>()V
org.apache.commons.math3.stat.correlation.SpearmansCorrelation.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V
org.apache.commons.math3.stat.correlation.SpearmansCorrelation.<init>(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/stat/ranking/RankingAlgorithm;)V
org.apache.commons.math3.stat.correlation.SpearmansCorrelation.<init>(Lorg/apache/commons/math3/stat/ranking/RankingAlgorithm;)V
org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance.<init>()V
org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance.<init>(Z)V
org.apache.commons.math3.stat.correlation.StorelessCovariance.<init>(I)V
org.apache.commons.math3.stat.correlation.StorelessCovariance.<init>(IZ)V
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.<init>()V
org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.<init>()V
org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics$AggregatingSummaryStatistics.<init>(Lorg/apache/commons/math3/stat/descriptive/SummaryStatistics;)V
org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics.<init>()V
org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics.<init>(Lorg/apache/commons/math3/stat/descriptive/SummaryStatistics;)V
org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics.<init>(Lorg/apache/commons/math3/stat/descriptive/SummaryStatistics;Lorg/apache/commons/math3/stat/descriptive/SummaryStatistics;)V
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.<init>()V
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.<init>(I)V
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.<init>(Lorg/apache/commons/math3/stat/descriptive/DescriptiveStatistics;)V
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.<init>([D)V
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.<init>(IZ)V
org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.<init>(DDJDDD)V
org.apache.commons.math3.stat.descriptive.SummaryStatistics.<init>()V
org.apache.commons.math3.stat.descriptive.SummaryStatistics.<init>(Lorg/apache/commons/math3/stat/descriptive/SummaryStatistics;)V
org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics.<init>()V
org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics.<init>(I)V
org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics.<init>(Lorg/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatistics;)V
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.<init>(IZ)V
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.<init>()V
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.<init>(Lorg/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics;)V
org.apache.commons.math3.stat.descriptive.moment.FirstMoment.<init>()V
org.apache.commons.math3.stat.descriptive.moment.FirstMoment.<init>(Lorg/apache/commons/math3/stat/descriptive/moment/FirstMoment;)V
org.apache.commons.math3.stat.descriptive.moment.FourthMoment.<init>()V
org.apache.commons.math3.stat.descriptive.moment.FourthMoment.<init>(Lorg/apache/commons/math3/stat/descriptive/moment/FourthMoment;)V
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.<init>()V
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.<init>(Lorg/apache/commons/math3/stat/descriptive/moment/GeometricMean;)V
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.<init>(Lorg/apache/commons/math3/stat/descriptive/summary/SumOfLogs;)V
org.apache.commons.math3.stat.descriptive.moment.Kurtosis.<init>()V
org.apache.commons.math3.stat.descriptive.moment.Kurtosis.<init>(Lorg/apache/commons/math3/stat/descriptive/moment/FourthMoment;)V
org.apache.commons.math3.stat.descriptive.moment.Kurtosis.<init>(Lorg/apache/commons/math3/stat/descriptive/moment/Kurtosis;)V
org.apache.commons.math3.stat.descriptive.moment.Mean.<init>()V
org.apache.commons.math3.stat.descriptive.moment.Mean.<init>(Lorg/apache/commons/math3/stat/descriptive/moment/FirstMoment;)V
org.apache.commons.math3.stat.descriptive.moment.Mean.<init>(Lorg/apache/commons/math3/stat/descriptive/moment/Mean;)V
org.apache.commons.math3.stat.descriptive.moment.SecondMoment.<init>()V
org.apache.commons.math3.stat.descriptive.moment.SecondMoment.<init>(Lorg/apache/commons/math3/stat/descriptive/moment/SecondMoment;)V
org.apache.commons.math3.stat.descriptive.moment.SemiVariance$Direction.<init>(Ljava/lang/String;IZ)V
org.apache.commons.math3.stat.descriptive.moment.SemiVariance.<init>()V
org.apache.commons.math3.stat.descriptive.moment.SemiVariance.<init>(Lorg/apache/commons/math3/stat/descriptive/moment/SemiVariance$Direction;)V
org.apache.commons.math3.stat.descriptive.moment.SemiVariance.<init>(Lorg/apache/commons/math3/stat/descriptive/moment/SemiVariance;)V
org.apache.commons.math3.stat.descriptive.moment.SemiVariance.<init>(Z)V
org.apache.commons.math3.stat.descriptive.moment.SemiVariance.<init>(ZLorg/apache/commons/math3/stat/descriptive/moment/SemiVariance$Direction;)V
org.apache.commons.math3.stat.descriptive.moment.Skewness.<init>()V
org.apache.commons.math3.stat.descriptive.moment.Skewness.<init>(Lorg/apache/commons/math3/stat/descriptive/moment/Skewness;)V
org.apache.commons.math3.stat.descriptive.moment.Skewness.<init>(Lorg/apache/commons/math3/stat/descriptive/moment/ThirdMoment;)V
org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.<init>()V
org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.<init>(Lorg/apache/commons/math3/stat/descriptive/moment/SecondMoment;)V
org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.<init>(Lorg/apache/commons/math3/stat/descriptive/moment/StandardDeviation;)V
org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.<init>(Z)V
org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.<init>(ZLorg/apache/commons/math3/stat/descriptive/moment/SecondMoment;)V
org.apache.commons.math3.stat.descriptive.moment.ThirdMoment.<init>()V
org.apache.commons.math3.stat.descriptive.moment.ThirdMoment.<init>(Lorg/apache/commons/math3/stat/descriptive/moment/ThirdMoment;)V
org.apache.commons.math3.stat.descriptive.moment.Variance.<init>()V
org.apache.commons.math3.stat.descriptive.moment.Variance.<init>(Lorg/apache/commons/math3/stat/descriptive/moment/SecondMoment;)V
org.apache.commons.math3.stat.descriptive.moment.Variance.<init>(Lorg/apache/commons/math3/stat/descriptive/moment/Variance;)V
org.apache.commons.math3.stat.descriptive.moment.Variance.<init>(Z)V
org.apache.commons.math3.stat.descriptive.moment.Variance.<init>(ZLorg/apache/commons/math3/stat/descriptive/moment/SecondMoment;)V
org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance.<init>(IZ)V
org.apache.commons.math3.stat.descriptive.moment.VectorialMean.<init>(I)V
org.apache.commons.math3.stat.descriptive.rank.Max.<init>()V
org.apache.commons.math3.stat.descriptive.rank.Max.<init>(Lorg/apache/commons/math3/stat/descriptive/rank/Max;)V
org.apache.commons.math3.stat.descriptive.rank.Median.<init>()V
org.apache.commons.math3.stat.descriptive.rank.Median.<init>(Lorg/apache/commons/math3/stat/descriptive/rank/Median;)V
org.apache.commons.math3.stat.descriptive.rank.Median.<init>(Lorg/apache/commons/math3/stat/descriptive/rank/Percentile$EstimationType;Lorg/apache/commons/math3/stat/ranking/NaNStrategy;Lorg/apache/commons/math3/util/KthSelector;)V
org.apache.commons.math3.stat.descriptive.rank.Min.<init>()V
org.apache.commons.math3.stat.descriptive.rank.Min.<init>(Lorg/apache/commons/math3/stat/descriptive/rank/Min;)V
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$FixedCapacityList.<init>(I)V
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker.<init>()V
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker.<init>(DDDD)V
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker.<init>(DDDDLorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$1;)V
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker.<init>(Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$1;)V
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Markers.<init>(Ljava/util/List;D)V
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Markers.<init>(Ljava/util/List;DLorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$1;)V
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Markers.<init>([Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker;)V
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile.<init>()V
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile.<init>(D)V
org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$1.<init>(Ljava/lang/String;ILjava/lang/String;)V
org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$10.<init>(Ljava/lang/String;ILjava/lang/String;)V
org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$2.<init>(Ljava/lang/String;ILjava/lang/String;)V
org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$3.<init>(Ljava/lang/String;ILjava/lang/String;)V
org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$4.<init>(Ljava/lang/String;ILjava/lang/String;)V
org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$5.<init>(Ljava/lang/String;ILjava/lang/String;)V
org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$6.<init>(Ljava/lang/String;ILjava/lang/String;)V
org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$7.<init>(Ljava/lang/String;ILjava/lang/String;)V
org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$8.<init>(Ljava/lang/String;ILjava/lang/String;)V
org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$9.<init>(Ljava/lang/String;ILjava/lang/String;)V
org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType.<init>(Ljava/lang/String;ILjava/lang/String;)V
org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType.<init>(Ljava/lang/String;ILjava/lang/String;Lorg/apache/commons/math3/stat/descriptive/rank/Percentile$1;)V
org.apache.commons.math3.stat.descriptive.rank.Percentile.<init>()V
org.apache.commons.math3.stat.descriptive.rank.Percentile.<init>(D)V
org.apache.commons.math3.stat.descriptive.rank.Percentile.<init>(DLorg/apache/commons/math3/stat/descriptive/rank/Percentile$EstimationType;Lorg/apache/commons/math3/stat/ranking/NaNStrategy;Lorg/apache/commons/math3/util/KthSelector;)V
org.apache.commons.math3.stat.descriptive.rank.Percentile.<init>(Lorg/apache/commons/math3/stat/descriptive/rank/Percentile;)V
org.apache.commons.math3.stat.descriptive.summary.Product.<init>()V
org.apache.commons.math3.stat.descriptive.summary.Product.<init>(Lorg/apache/commons/math3/stat/descriptive/summary/Product;)V
org.apache.commons.math3.stat.descriptive.summary.Sum.<init>()V
org.apache.commons.math3.stat.descriptive.summary.Sum.<init>(Lorg/apache/commons/math3/stat/descriptive/summary/Sum;)V
org.apache.commons.math3.stat.descriptive.summary.SumOfLogs.<init>()V
org.apache.commons.math3.stat.descriptive.summary.SumOfLogs.<init>(Lorg/apache/commons/math3/stat/descriptive/summary/SumOfLogs;)V
org.apache.commons.math3.stat.descriptive.summary.SumOfSquares.<init>()V
org.apache.commons.math3.stat.descriptive.summary.SumOfSquares.<init>(Lorg/apache/commons/math3/stat/descriptive/summary/SumOfSquares;)V
org.apache.commons.math3.stat.inference.AlternativeHypothesis.<init>(Ljava/lang/String;I)V
org.apache.commons.math3.stat.inference.BinomialTest.<init>()V
org.apache.commons.math3.stat.inference.ChiSquareTest.<init>()V
org.apache.commons.math3.stat.inference.GTest.<init>()V
org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.<init>()V
org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V
org.apache.commons.math3.stat.inference.MannWhitneyUTest.<init>()V
org.apache.commons.math3.stat.inference.MannWhitneyUTest.<init>(Lorg/apache/commons/math3/stat/ranking/NaNStrategy;Lorg/apache/commons/math3/stat/ranking/TiesStrategy;)V
org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats.<init>(IID)V
org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats.<init>(IIDLorg/apache/commons/math3/stat/inference/OneWayAnova$1;)V
org.apache.commons.math3.stat.inference.OneWayAnova.<init>()V
org.apache.commons.math3.stat.inference.TTest.<init>()V
org.apache.commons.math3.stat.inference.TestUtils.<init>()V
org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest.<init>()V
org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest.<init>(Lorg/apache/commons/math3/stat/ranking/NaNStrategy;Lorg/apache/commons/math3/stat/ranking/TiesStrategy;)V
org.apache.commons.math3.stat.interval.AgrestiCoullInterval.<init>()V
org.apache.commons.math3.stat.interval.ClopperPearsonInterval.<init>()V
org.apache.commons.math3.stat.interval.ConfidenceInterval.<init>(DDD)V
org.apache.commons.math3.stat.interval.IntervalUtils.<init>()V
org.apache.commons.math3.stat.interval.NormalApproximationInterval.<init>()V
org.apache.commons.math3.stat.interval.WilsonScoreInterval.<init>()V
org.apache.commons.math3.stat.ranking.NaNStrategy.<init>(Ljava/lang/String;I)V
org.apache.commons.math3.stat.ranking.NaturalRanking$IntDoublePair.<init>(DI)V
org.apache.commons.math3.stat.ranking.NaturalRanking.<init>()V
org.apache.commons.math3.stat.ranking.NaturalRanking.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V
org.apache.commons.math3.stat.ranking.NaturalRanking.<init>(Lorg/apache/commons/math3/stat/ranking/NaNStrategy;)V
org.apache.commons.math3.stat.ranking.NaturalRanking.<init>(Lorg/apache/commons/math3/stat/ranking/NaNStrategy;Lorg/apache/commons/math3/random/RandomGenerator;)V
org.apache.commons.math3.stat.ranking.NaturalRanking.<init>(Lorg/apache/commons/math3/stat/ranking/NaNStrategy;Lorg/apache/commons/math3/stat/ranking/TiesStrategy;)V
org.apache.commons.math3.stat.ranking.NaturalRanking.<init>(Lorg/apache/commons/math3/stat/ranking/TiesStrategy;)V
org.apache.commons.math3.stat.ranking.TiesStrategy.<init>(Ljava/lang/String;I)V
org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression.<init>()V
org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression.<init>()V
org.apache.commons.math3.stat.regression.MillerUpdatingRegression.<init>()V
org.apache.commons.math3.stat.regression.MillerUpdatingRegression.<init>(IZ)V
org.apache.commons.math3.stat.regression.MillerUpdatingRegression.<init>(IZD)V
org.apache.commons.math3.stat.regression.ModelSpecificationException.<init>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.<init>()V
org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.<init>(D)V
org.apache.commons.math3.stat.regression.RegressionResults.<init>()V
org.apache.commons.math3.stat.regression.RegressionResults.<init>([D[[DZJIDDDZZ)V
org.apache.commons.math3.stat.regression.SimpleRegression.<init>()V
org.apache.commons.math3.stat.regression.SimpleRegression.<init>(Z)V
org.apache.commons.math3.transform.DctNormalization.<init>(Ljava/lang/String;I)V
org.apache.commons.math3.transform.DftNormalization.<init>(Ljava/lang/String;I)V
org.apache.commons.math3.transform.DstNormalization.<init>(Ljava/lang/String;I)V
org.apache.commons.math3.transform.FastCosineTransformer.<init>(Lorg/apache/commons/math3/transform/DctNormalization;)V
org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.<init>(Ljava/lang/Object;)V
org.apache.commons.math3.transform.FastFourierTransformer.<init>(Lorg/apache/commons/math3/transform/DftNormalization;)V
org.apache.commons.math3.transform.FastHadamardTransformer.<init>()V
org.apache.commons.math3.transform.FastSineTransformer.<init>(Lorg/apache/commons/math3/transform/DstNormalization;)V
org.apache.commons.math3.transform.TransformType.<init>(Ljava/lang/String;I)V
org.apache.commons.math3.transform.TransformUtils.<init>()V
org.apache.commons.math3.util.ArithmeticUtils.<init>()V
org.apache.commons.math3.util.BigReal.<init>(D)V
org.apache.commons.math3.util.BigReal.<init>(DLjava/math/MathContext;)V
org.apache.commons.math3.util.BigReal.<init>(I)V
org.apache.commons.math3.util.BigReal.<init>(ILjava/math/MathContext;)V
org.apache.commons.math3.util.BigReal.<init>(J)V
org.apache.commons.math3.util.BigReal.<init>(JLjava/math/MathContext;)V
org.apache.commons.math3.util.BigReal.<init>(Ljava/lang/String;)V
org.apache.commons.math3.util.BigReal.<init>(Ljava/lang/String;Ljava/math/MathContext;)V
org.apache.commons.math3.util.BigReal.<init>(Ljava/math/BigDecimal;)V
org.apache.commons.math3.util.BigReal.<init>(Ljava/math/BigInteger;)V
org.apache.commons.math3.util.BigReal.<init>(Ljava/math/BigInteger;I)V
org.apache.commons.math3.util.BigReal.<init>(Ljava/math/BigInteger;ILjava/math/MathContext;)V
org.apache.commons.math3.util.BigReal.<init>(Ljava/math/BigInteger;Ljava/math/MathContext;)V
org.apache.commons.math3.util.BigReal.<init>([C)V
org.apache.commons.math3.util.BigReal.<init>([CII)V
org.apache.commons.math3.util.BigReal.<init>([CIILjava/math/MathContext;)V
org.apache.commons.math3.util.BigReal.<init>([CLjava/math/MathContext;)V
org.apache.commons.math3.util.BigRealField$LazyHolder.<init>()V
org.apache.commons.math3.util.BigRealField.<init>()V
org.apache.commons.math3.util.BigRealField.<init>(Lorg/apache/commons/math3/util/BigRealField$1;)V
org.apache.commons.math3.util.CentralPivotingStrategy.<init>()V
org.apache.commons.math3.util.Combinations$IterationOrder.<init>(Ljava/lang/String;I)V
org.apache.commons.math3.util.Combinations$LexicographicComparator.<init>(II)V
org.apache.commons.math3.util.Combinations$LexicographicIterator.<init>(II)V
org.apache.commons.math3.util.Combinations$SingletonIterator.<init>([I)V
org.apache.commons.math3.util.Combinations.<init>(II)V
org.apache.commons.math3.util.Combinations.<init>(IILorg/apache/commons/math3/util/Combinations$IterationOrder;)V
org.apache.commons.math3.util.CombinatoricsUtils.<init>()V
org.apache.commons.math3.util.CompositeFormat.<init>()V
org.apache.commons.math3.util.ContinuedFraction.<init>()V
org.apache.commons.math3.util.Decimal64.<init>(D)V
org.apache.commons.math3.util.Decimal64Field.<init>()V
org.apache.commons.math3.util.DefaultTransformer.<init>()V
org.apache.commons.math3.util.FastMath$CodyWaite.<init>(D)V
org.apache.commons.math3.util.FastMath$ExpFracTable.<init>()V
org.apache.commons.math3.util.FastMath$ExpIntTable.<init>()V
org.apache.commons.math3.util.FastMath$Split.<init>(D)V
org.apache.commons.math3.util.FastMath$Split.<init>(DD)V
org.apache.commons.math3.util.FastMath$Split.<init>(DDD)V
org.apache.commons.math3.util.FastMath$lnMant.<init>()V
org.apache.commons.math3.util.FastMath.<init>()V
org.apache.commons.math3.util.FastMathCalc.<init>()V
org.apache.commons.math3.util.FastMathLiteralArrays.<init>()V
org.apache.commons.math3.util.Incrementor$1.<init>()V
org.apache.commons.math3.util.Incrementor$2.<init>(Lorg/apache/commons/math3/util/IntegerSequence$Incrementor;)V
org.apache.commons.math3.util.Incrementor.<init>()V
org.apache.commons.math3.util.Incrementor.<init>(I)V
org.apache.commons.math3.util.Incrementor.<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V
org.apache.commons.math3.util.IntegerSequence$Incrementor$1.<init>()V
org.apache.commons.math3.util.IntegerSequence$Incrementor.<init>(IIILorg/apache/commons/math3/util/IntegerSequence$Incrementor$MaxCountExceededCallback;)V
org.apache.commons.math3.util.IntegerSequence$Range.<init>(III)V
org.apache.commons.math3.util.IntegerSequence.<init>()V
org.apache.commons.math3.util.IterationEvent.<init>(Ljava/lang/Object;I)V
org.apache.commons.math3.util.IterationManager$1.<init>(Lorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V
org.apache.commons.math3.util.IterationManager.<init>(I)V
org.apache.commons.math3.util.IterationManager.<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V
org.apache.commons.math3.util.IterationManager.<init>(ILorg/apache/commons/math3/util/IntegerSequence$Incrementor$MaxCountExceededCallback;)V
org.apache.commons.math3.util.KthSelector.<init>()V
org.apache.commons.math3.util.KthSelector.<init>(Lorg/apache/commons/math3/util/PivotingStrategyInterface;)V
org.apache.commons.math3.util.MathArrays$1.<init>()V
org.apache.commons.math3.util.MathArrays$2.<init>()V
org.apache.commons.math3.util.MathArrays$OrderDirection.<init>(Ljava/lang/String;I)V
org.apache.commons.math3.util.MathArrays$PairDoubleInteger.<init>(DI)V
org.apache.commons.math3.util.MathArrays$Position.<init>(Ljava/lang/String;I)V
org.apache.commons.math3.util.MathArrays.<init>()V
org.apache.commons.math3.util.MathUtils.<init>()V
org.apache.commons.math3.util.MedianOf3PivotingStrategy.<init>()V
org.apache.commons.math3.util.MultidimensionalCounter$Iterator.<init>(Lorg/apache/commons/math3/util/MultidimensionalCounter;)V
org.apache.commons.math3.util.MultidimensionalCounter.<init>([I)V
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$1;)V
org.apache.commons.math3.util.OpenIntToDoubleHashMap.<init>()V
org.apache.commons.math3.util.OpenIntToDoubleHashMap.<init>(D)V
org.apache.commons.math3.util.OpenIntToDoubleHashMap.<init>(I)V
org.apache.commons.math3.util.OpenIntToDoubleHashMap.<init>(ID)V
org.apache.commons.math3.util.OpenIntToDoubleHashMap.<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V
org.apache.commons.math3.util.OpenIntToFieldHashMap$Iterator.<init>(Lorg/apache/commons/math3/util/OpenIntToFieldHashMap;)V
org.apache.commons.math3.util.OpenIntToFieldHashMap$Iterator.<init>(Lorg/apache/commons/math3/util/OpenIntToFieldHashMap;Lorg/apache/commons/math3/util/OpenIntToFieldHashMap$1;)V
org.apache.commons.math3.util.OpenIntToFieldHashMap.<init>(Lorg/apache/commons/math3/Field;)V
org.apache.commons.math3.util.OpenIntToFieldHashMap.<init>(Lorg/apache/commons/math3/Field;I)V
org.apache.commons.math3.util.OpenIntToFieldHashMap.<init>(Lorg/apache/commons/math3/Field;ILorg/apache/commons/math3/FieldElement;)V
org.apache.commons.math3.util.OpenIntToFieldHashMap.<init>(Lorg/apache/commons/math3/Field;Lorg/apache/commons/math3/FieldElement;)V
org.apache.commons.math3.util.OpenIntToFieldHashMap.<init>(Lorg/apache/commons/math3/util/OpenIntToFieldHashMap;)V
org.apache.commons.math3.util.Pair.<init>(Ljava/lang/Object;Ljava/lang/Object;)V
org.apache.commons.math3.util.Pair.<init>(Lorg/apache/commons/math3/util/Pair;)V
org.apache.commons.math3.util.Precision.<init>()V
org.apache.commons.math3.util.RandomPivotingStrategy.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V
org.apache.commons.math3.util.ResizableDoubleArray$ExpansionMode.<init>(Ljava/lang/String;I)V
org.apache.commons.math3.util.ResizableDoubleArray.<init>()V
org.apache.commons.math3.util.ResizableDoubleArray.<init>(I)V
org.apache.commons.math3.util.ResizableDoubleArray.<init>(ID)V
org.apache.commons.math3.util.ResizableDoubleArray.<init>(IDD)V
org.apache.commons.math3.util.ResizableDoubleArray.<init>(IDDLorg/apache/commons/math3/util/ResizableDoubleArray$ExpansionMode;[D)V
org.apache.commons.math3.util.ResizableDoubleArray.<init>(IF)V
org.apache.commons.math3.util.ResizableDoubleArray.<init>(IFF)V
org.apache.commons.math3.util.ResizableDoubleArray.<init>(IFFI)V
org.apache.commons.math3.util.ResizableDoubleArray.<init>(Lorg/apache/commons/math3/util/ResizableDoubleArray;)V
org.apache.commons.math3.util.ResizableDoubleArray.<init>([D)V
org.apache.commons.math3.util.TransformerMap.<init>()V
CLINIT
164
org.apache.commons.math3.analysis.differentiation.DSCompiler.<clinit>()V
org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator.<clinit>()V
org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator.<clinit>()V
org.apache.commons.math3.analysis.interpolation.BicubicInterpolatingFunction.<clinit>()V
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction.<clinit>()V
org.apache.commons.math3.analysis.interpolation.TricubicInterpolatingFunction.<clinit>()V
org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction.<clinit>()V
org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.<clinit>()V
org.apache.commons.math3.analysis.solvers.AllowedSolution.<clinit>()V
org.apache.commons.math3.analysis.solvers.BaseSecantSolver$1.<clinit>()V
org.apache.commons.math3.analysis.solvers.BaseSecantSolver$Method.<clinit>()V
org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolver$1.<clinit>()V
org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver$1.<clinit>()V
org.apache.commons.math3.complex.Complex.<clinit>()V
org.apache.commons.math3.complex.ComplexField$LazyHolder.<clinit>()V
org.apache.commons.math3.complex.Quaternion.<clinit>()V
org.apache.commons.math3.dfp.Dfp$1.<clinit>()V
org.apache.commons.math3.dfp.DfpDec$1.<clinit>()V
org.apache.commons.math3.dfp.DfpField$RoundingMode.<clinit>()V
org.apache.commons.math3.distribution.ExponentialDistribution.<clinit>()V
org.apache.commons.math3.distribution.LogNormalDistribution.<clinit>()V
org.apache.commons.math3.distribution.NormalDistribution.<clinit>()V
org.apache.commons.math3.distribution.SaddlePointExpansion.<clinit>()V
org.apache.commons.math3.exception.MathIllegalNumberException.<clinit>()V
org.apache.commons.math3.exception.util.LocalizedFormats.<clinit>()V
org.apache.commons.math3.fitting.GaussianCurveFitter.<clinit>()V
org.apache.commons.math3.fitting.HarmonicCurveFitter.<clinit>()V
org.apache.commons.math3.fitting.PolynomialCurveFitter.<clinit>()V
org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer$Decomposition.<clinit>()V
org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.<clinit>()V
org.apache.commons.math3.fraction.BigFraction.<clinit>()V
org.apache.commons.math3.fraction.BigFractionField$LazyHolder.<clinit>()V
org.apache.commons.math3.fraction.Fraction.<clinit>()V
org.apache.commons.math3.fraction.FractionField$LazyHolder.<clinit>()V
org.apache.commons.math3.genetics.GeneticAlgorithm.<clinit>()V
org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D$LazyHolder.<clinit>()V
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.<clinit>()V
org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D$LazyHolder.<clinit>()V
org.apache.commons.math3.geometry.euclidean.threed.Rotation.<clinit>()V
org.apache.commons.math3.geometry.euclidean.threed.RotationConvention.<clinit>()V
org.apache.commons.math3.geometry.euclidean.threed.RotationOrder.<clinit>()V
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.<clinit>()V
org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D$LazyHolder.<clinit>()V
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$1.<clinit>()V
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.<clinit>()V
org.apache.commons.math3.geometry.partitioning.AbstractRegion$3.<clinit>()V
org.apache.commons.math3.geometry.partitioning.BSPTree$2.<clinit>()V
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.<clinit>()V
org.apache.commons.math3.geometry.partitioning.Characterization$1.<clinit>()V
org.apache.commons.math3.geometry.partitioning.InsideFinder$1.<clinit>()V
org.apache.commons.math3.geometry.partitioning.Region$Location.<clinit>()V
org.apache.commons.math3.geometry.partitioning.RegionFactory$1.<clinit>()V
org.apache.commons.math3.geometry.partitioning.Side.<clinit>()V
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$1.<clinit>()V
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.<clinit>()V
org.apache.commons.math3.geometry.spherical.oned.S1Point.<clinit>()V
org.apache.commons.math3.geometry.spherical.oned.Sphere1D$LazyHolder.<clinit>()V
org.apache.commons.math3.geometry.spherical.twod.S2Point.<clinit>()V
org.apache.commons.math3.geometry.spherical.twod.Sphere2D$LazyHolder.<clinit>()V
org.apache.commons.math3.linear.AbstractRealMatrix.<clinit>()V
org.apache.commons.math3.linear.ArrayRealVector.<clinit>()V
org.apache.commons.math3.linear.MatrixUtils.<clinit>()V
org.apache.commons.math3.linear.SymmLQ$State.<clinit>()V
org.apache.commons.math3.ml.clustering.DBSCANClusterer$PointStatus.<clinit>()V
org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$1.<clinit>()V
org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy.<clinit>()V
org.apache.commons.math3.ml.neuralnet.MapUtils$PairNeuronDouble.<clinit>()V
org.apache.commons.math3.ml.neuralnet.SquareNeighbourhood.<clinit>()V
org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$1.<clinit>()V
org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$HorizontalDirection.<clinit>()V
org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$VerticalDirection.<clinit>()V
org.apache.commons.math3.ode.events.Action.<clinit>()V
org.apache.commons.math3.ode.events.EventHandler$Action.<clinit>()V
org.apache.commons.math3.ode.events.FilterType$3.<clinit>()V
org.apache.commons.math3.ode.events.FilterType.<clinit>()V
org.apache.commons.math3.ode.events.Transformer.<clinit>()V
org.apache.commons.math3.ode.nonstiff.AdamsNordsieckFieldTransformer.<clinit>()V
org.apache.commons.math3.ode.nonstiff.AdamsNordsieckTransformer.<clinit>()V
org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegrator.<clinit>()V
org.apache.commons.math3.ode.nonstiff.DormandPrince54Integrator.<clinit>()V
org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator.<clinit>()V
org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator.<clinit>()V
org.apache.commons.math3.ode.nonstiff.EulerIntegrator.<clinit>()V
org.apache.commons.math3.ode.nonstiff.GillIntegrator.<clinit>()V
org.apache.commons.math3.ode.nonstiff.GillStepInterpolator.<clinit>()V
org.apache.commons.math3.ode.nonstiff.HighamHall54Integrator.<clinit>()V
org.apache.commons.math3.ode.nonstiff.LutherIntegrator.<clinit>()V
org.apache.commons.math3.ode.nonstiff.LutherStepInterpolator.<clinit>()V
org.apache.commons.math3.ode.nonstiff.MidpointIntegrator.<clinit>()V
org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegrator.<clinit>()V
org.apache.commons.math3.ode.sampling.DummyStepHandler$LazyHolder.<clinit>()V
org.apache.commons.math3.ode.sampling.StepNormalizerBounds.<clinit>()V
org.apache.commons.math3.ode.sampling.StepNormalizerMode.<clinit>()V
org.apache.commons.math3.optim.AbstractOptimizationProblem.<clinit>()V
org.apache.commons.math3.optim.linear.PivotSelectionRule.<clinit>()V
org.apache.commons.math3.optim.linear.Relationship$1.<clinit>()V
org.apache.commons.math3.optim.linear.Relationship.<clinit>()V
org.apache.commons.math3.optim.nonlinear.scalar.GoalType.<clinit>()V
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$1.<clinit>()V
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$Formula.<clinit>()V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.<clinit>()V
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.<clinit>()V
org.apache.commons.math3.optim.univariate.BrentOptimizer.<clinit>()V
org.apache.commons.math3.optimization.AbstractConvergenceChecker.<clinit>()V
org.apache.commons.math3.optimization.GoalType.<clinit>()V
org.apache.commons.math3.optimization.direct.CMAESOptimizer.<clinit>()V
org.apache.commons.math3.optimization.direct.PowellOptimizer.<clinit>()V
org.apache.commons.math3.optimization.general.ConjugateGradientFormula.<clinit>()V
org.apache.commons.math3.optimization.linear.Relationship$1.<clinit>()V
org.apache.commons.math3.optimization.linear.Relationship.<clinit>()V
org.apache.commons.math3.optimization.univariate.BrentOptimizer.<clinit>()V
org.apache.commons.math3.primes.SmallPrimes.<clinit>()V
org.apache.commons.math3.random.HaltonSequenceGenerator.<clinit>()V
org.apache.commons.math3.random.MersenneTwister.<clinit>()V
org.apache.commons.math3.random.SobolSequenceGenerator.<clinit>()V
org.apache.commons.math3.random.UniformRandomGenerator.<clinit>()V
org.apache.commons.math3.special.BesselJ.<clinit>()V
org.apache.commons.math3.special.Beta.<clinit>()V
org.apache.commons.math3.special.Gamma.<clinit>()V
org.apache.commons.math3.stat.StatUtils.<clinit>()V
org.apache.commons.math3.stat.clustering.DBSCANClusterer$PointStatus.<clinit>()V
org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer$1.<clinit>()V
org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy.<clinit>()V
org.apache.commons.math3.stat.descriptive.moment.SemiVariance$Direction.<clinit>()V
org.apache.commons.math3.stat.descriptive.moment.SemiVariance.<clinit>()V
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile.<clinit>()V
org.apache.commons.math3.stat.descriptive.rank.Percentile$1.<clinit>()V
org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType.<clinit>()V
org.apache.commons.math3.stat.inference.AlternativeHypothesis.<clinit>()V
org.apache.commons.math3.stat.inference.BinomialTest$1.<clinit>()V
org.apache.commons.math3.stat.inference.TestUtils.<clinit>()V
org.apache.commons.math3.stat.interval.IntervalUtils.<clinit>()V
org.apache.commons.math3.stat.ranking.NaNStrategy.<clinit>()V
org.apache.commons.math3.stat.ranking.NaturalRanking$1.<clinit>()V
org.apache.commons.math3.stat.ranking.NaturalRanking.<clinit>()V
org.apache.commons.math3.stat.ranking.TiesStrategy.<clinit>()V
org.apache.commons.math3.transform.DctNormalization.<clinit>()V
org.apache.commons.math3.transform.DftNormalization.<clinit>()V
org.apache.commons.math3.transform.DstNormalization.<clinit>()V
org.apache.commons.math3.transform.FastFourierTransformer$1.<clinit>()V
org.apache.commons.math3.transform.FastFourierTransformer.<clinit>()V
org.apache.commons.math3.transform.TransformType.<clinit>()V
org.apache.commons.math3.transform.TransformUtils.<clinit>()V
org.apache.commons.math3.util.BigReal.<clinit>()V
org.apache.commons.math3.util.BigRealField$LazyHolder.<clinit>()V
org.apache.commons.math3.util.Combinations$1.<clinit>()V
org.apache.commons.math3.util.Combinations$IterationOrder.<clinit>()V
org.apache.commons.math3.util.CombinatoricsUtils.<clinit>()V
org.apache.commons.math3.util.Decimal64.<clinit>()V
org.apache.commons.math3.util.Decimal64Field.<clinit>()V
org.apache.commons.math3.util.FastMath$ExpFracTable.<clinit>()V
org.apache.commons.math3.util.FastMath$ExpIntTable.<clinit>()V
org.apache.commons.math3.util.FastMath$Split.<clinit>()V
org.apache.commons.math3.util.FastMath$lnMant.<clinit>()V
org.apache.commons.math3.util.FastMath.<clinit>()V
org.apache.commons.math3.util.FastMathCalc.<clinit>()V
org.apache.commons.math3.util.FastMathLiteralArrays.<clinit>()V
org.apache.commons.math3.util.IntegerSequence$Incrementor.<clinit>()V
org.apache.commons.math3.util.MathArrays$3.<clinit>()V
org.apache.commons.math3.util.MathArrays$OrderDirection.<clinit>()V
org.apache.commons.math3.util.MathArrays$Position.<clinit>()V
org.apache.commons.math3.util.Precision.<clinit>()V
org.apache.commons.math3.util.ResizableDoubleArray$1.<clinit>()V
org.apache.commons.math3.util.ResizableDoubleArray$ExpansionMode.<clinit>()V
SYNTHETIC
10
java.lang.Class.getComponentType()Ljava/lang/Class;
java.lang.Class.getName()Ljava/lang/String;
java.lang.Object.clone()Ljava/lang/Object;
java.lang.Object.getClass()Ljava/lang/Class;
java.lang.Object.hashCode()I
java.lang.System.arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
java.lang.System.currentTimeMillis()J
java.lang.System.getProperty(Ljava/lang/String;)Ljava/lang/String;
java.lang.System.identityHashCode(Ljava/lang/Object;)I
java.lang.reflect.Array.getLength(Ljava/lang/Object;)I
NORMAL
6810
java.io.BufferedReader.close()V
java.io.BufferedReader.readLine()Ljava/lang/String;
java.io.ObjectInputStream.defaultReadObject()V
java.io.ObjectInputStream.readDouble()D
java.io.ObjectInputStream.readInt()I
java.io.ObjectInputStream.readObject()Ljava/lang/Object;
java.io.ObjectOutputStream.defaultWriteObject()V
java.io.ObjectOutputStream.writeDouble(D)V
java.io.ObjectOutputStream.writeInt(I)V
java.io.ObjectOutputStream.writeObject(Ljava/lang/Object;)V
java.io.PrintStream.print(Ljava/lang/String;)V
java.io.PrintStream.printf(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;
java.io.PrintStream.println(Ljava/lang/String;)V
java.lang.Boolean.booleanValue()Z
java.lang.Boolean.equals(Ljava/lang/Object;)Z
java.lang.Class.desiredAssertionStatus()Z
java.lang.Class.getDeclaredField(Ljava/lang/String;)Ljava/lang/reflect/Field;
java.lang.Class.getMethod(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
java.lang.Class.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;
java.lang.Double.doubleValue()D
java.lang.Double.parseDouble(Ljava/lang/String;)D
java.lang.Enum.equals(Ljava/lang/Object;)Z
java.lang.Enum.hashCode()I
java.lang.Enum.ordinal()I
java.lang.Enum.toString()Ljava/lang/String;
java.lang.Enum.valueOf(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
java.lang.Integer.intValue()I
java.lang.Integer.parseInt(Ljava/lang/String;)I
java.lang.Long.parseLong(Ljava/lang/String;)J
java.lang.Math.random()D
java.lang.Object.equals(Ljava/lang/Object;)Z
java.lang.Object.toString()Ljava/lang/String;
java.lang.String.charAt(I)C
java.lang.String.compareTo(Ljava/lang/String;)I
java.lang.String.equals(Ljava/lang/Object;)Z
java.lang.String.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
java.lang.String.indexOf(Ljava/lang/String;)I
java.lang.String.lastIndexOf(I)I
java.lang.String.length()I
java.lang.String.replaceAll(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
java.lang.String.substring(I)Ljava/lang/String;
java.lang.String.substring(II)Ljava/lang/String;
java.lang.String.trim()Ljava/lang/String;
java.lang.StringBuffer.append(C)Ljava/lang/StringBuffer;
java.lang.StringBuffer.append(D)Ljava/lang/StringBuffer;
java.lang.StringBuffer.append(J)Ljava/lang/StringBuffer;
java.lang.StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer;
java.lang.StringBuffer.append(Ljava/lang/StringBuffer;)Ljava/lang/StringBuffer;
java.lang.StringBuffer.setLength(I)V
java.lang.StringBuffer.toString()Ljava/lang/String;
java.lang.StringBuilder.append(C)Ljava/lang/StringBuilder;
java.lang.StringBuilder.append(D)Ljava/lang/StringBuilder;
java.lang.StringBuilder.append(I)Ljava/lang/StringBuilder;
java.lang.StringBuilder.append(J)Ljava/lang/StringBuilder;
java.lang.StringBuilder.append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
java.lang.StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder;
java.lang.StringBuilder.length()I
java.lang.StringBuilder.toString()Ljava/lang/String;
java.lang.System.nanoTime()J
java.lang.Throwable.initCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;
java.lang.reflect.Array.newInstance(Ljava/lang/Class;I)Ljava/lang/Object;
java.lang.reflect.Array.newInstance(Ljava/lang/Class;[I)Ljava/lang/Object;
java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
java.math.BigDecimal.add(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;
java.math.BigDecimal.add(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;
java.math.BigDecimal.compareTo(Ljava/math/BigDecimal;)I
java.math.BigDecimal.divide(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;
java.math.BigDecimal.divide(Ljava/math/BigDecimal;I)Ljava/math/BigDecimal;
java.math.BigDecimal.divide(Ljava/math/BigDecimal;II)Ljava/math/BigDecimal;
java.math.BigDecimal.divide(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;
java.math.BigDecimal.divide(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;
java.math.BigDecimal.doubleValue()D
java.math.BigDecimal.equals(Ljava/lang/Object;)Z
java.math.BigDecimal.hashCode()I
java.math.BigDecimal.multiply(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;
java.math.BigDecimal.multiply(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;
java.math.BigDecimal.negate()Ljava/math/BigDecimal;
java.math.BigDecimal.negate(Ljava/math/MathContext;)Ljava/math/BigDecimal;
java.math.BigDecimal.pow(ILjava/math/MathContext;)Ljava/math/BigDecimal;
java.math.BigDecimal.signum()I
java.math.BigDecimal.subtract(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;
java.math.BigDecimal.subtract(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;
java.math.BigDecimal.ulp()Ljava/math/BigDecimal;
java.math.BigInteger.add(Ljava/math/BigInteger;)Ljava/math/BigInteger;
java.math.BigInteger.bitLength()I
java.math.BigInteger.compareTo(Ljava/math/BigInteger;)I
java.math.BigInteger.divide(Ljava/math/BigInteger;)Ljava/math/BigInteger;
java.math.BigInteger.doubleValue()D
java.math.BigInteger.equals(Ljava/lang/Object;)Z
java.math.BigInteger.flipBit(I)Ljava/math/BigInteger;
java.math.BigInteger.floatValue()F
java.math.BigInteger.gcd(Ljava/math/BigInteger;)Ljava/math/BigInteger;
java.math.BigInteger.hashCode()I
java.math.BigInteger.intValue()I
java.math.BigInteger.longValue()J
java.math.BigInteger.multiply(Ljava/math/BigInteger;)Ljava/math/BigInteger;
java.math.BigInteger.negate()Ljava/math/BigInteger;
java.math.BigInteger.pow(I)Ljava/math/BigInteger;
java.math.BigInteger.remainder(Ljava/math/BigInteger;)Ljava/math/BigInteger;
java.math.BigInteger.shiftRight(I)Ljava/math/BigInteger;
java.math.BigInteger.signum()I
java.math.BigInteger.subtract(Ljava/math/BigInteger;)Ljava/math/BigInteger;
java.math.BigInteger.testBit(I)Z
java.math.BigInteger.toString()Ljava/lang/String;
java.net.URL.openStream()Ljava/io/InputStream;
java.nio.charset.Charset.forName(Ljava/lang/String;)Ljava/nio/charset/Charset;
java.security.MessageDigest.digest()[B
java.security.MessageDigest.getInstance(Ljava/lang/String;)Ljava/security/MessageDigest;
java.security.MessageDigest.reset()V
java.security.MessageDigest.update([B)V
java.security.SecureRandom.getInstance(Ljava/lang/String;Ljava/lang/String;)Ljava/security/SecureRandom;
java.security.SecureRandom.nextBytes([B)V
java.security.SecureRandom.setSeed(J)V
java.text.FieldPosition.setBeginIndex(I)V
java.text.FieldPosition.setEndIndex(I)V
java.text.Format.format(Ljava/lang/Object;)Ljava/lang/String;
java.text.NumberFormat.format(D)Ljava/lang/String;
java.text.NumberFormat.getAvailableLocales()[Ljava/util/Locale;
java.text.NumberFormat.getInstance(Ljava/util/Locale;)Ljava/text/NumberFormat;
java.text.NumberFormat.getNumberInstance(Ljava/util/Locale;)Ljava/text/NumberFormat;
java.text.NumberFormat.getPercentInstance()Ljava/text/NumberFormat;
java.text.ParsePosition.getErrorIndex()I
java.text.ParsePosition.getIndex()I
java.text.ParsePosition.setErrorIndex(I)V
java.text.ParsePosition.setIndex(I)V
java.util.AbstractCollection.addAll(Ljava/util/Collection;)Z
java.util.AbstractCollection.toArray([Ljava/lang/Object;)[Ljava/lang/Object;
java.util.AbstractList.add(Ljava/lang/Object;)Z
java.util.AbstractList.clear()V
java.util.AbstractList.equals(Ljava/lang/Object;)Z
java.util.AbstractList.hashCode()I
java.util.AbstractMap.equals(Ljava/lang/Object;)Z
java.util.AbstractMap.hashCode()I
java.util.ArrayList$Itr.hasNext()Z
java.util.ArrayList$Itr.next()Ljava/lang/Object;
java.util.ArrayList$Itr.remove()V
java.util.ArrayList.add(ILjava/lang/Object;)V
java.util.ArrayList.add(Ljava/lang/Object;)Z
java.util.ArrayList.addAll(Ljava/util/Collection;)Z
java.util.ArrayList.clear()V
java.util.ArrayList.contains(Ljava/lang/Object;)Z
java.util.ArrayList.get(I)Ljava/lang/Object;
java.util.ArrayList.indexOf(Ljava/lang/Object;)I
java.util.ArrayList.isEmpty()Z
java.util.ArrayList.iterator()Ljava/util/Iterator;
java.util.ArrayList.remove(I)Ljava/lang/Object;
java.util.ArrayList.set(ILjava/lang/Object;)Ljava/lang/Object;
java.util.ArrayList.size()I
java.util.ArrayList.subList(II)Ljava/util/List;
java.util.ArrayList.toArray()[Ljava/lang/Object;
java.util.ArrayList.toArray([Ljava/lang/Object;)[Ljava/lang/Object;
java.util.Arrays$ArrayList.get(I)Ljava/lang/Object;
java.util.Arrays$ArrayList.size()I
java.util.Arrays.asList([Ljava/lang/Object;)Ljava/util/List;
java.util.Arrays.binarySearch([DD)I
java.util.Arrays.equals([D[D)Z
java.util.Arrays.fill([DD)V
java.util.Arrays.fill([DIID)V
java.util.Arrays.fill([II)V
java.util.Arrays.fill([Ljava/lang/Object;Ljava/lang/Object;)V
java.util.Arrays.fill([ZZ)V
java.util.Arrays.hashCode([D)I
java.util.Arrays.hashCode([I)I
java.util.Arrays.sort([D)V
java.util.Arrays.sort([DII)V
java.util.Arrays.sort([I)V
java.util.Arrays.sort([Ljava/lang/Object;)V
java.util.Arrays.sort([Ljava/lang/Object;Ljava/util/Comparator;)V
java.util.BitSet.cardinality()I
java.util.BitSet.isEmpty()Z
java.util.BitSet.nextClearBit(I)I
java.util.BitSet.nextSetBit(I)I
java.util.BitSet.set(I)V
java.util.Collections$EmptyList.size()I
java.util.Collections$UnmodifiableCollection$1.hasNext()Z
java.util.Collections$UnmodifiableCollection$1.next()Ljava/lang/Object;
java.util.Collections$UnmodifiableCollection.iterator()Ljava/util/Iterator;
java.util.Collections$UnmodifiableCollection.size()I
java.util.Collections$UnmodifiableList.get(I)Ljava/lang/Object;
java.util.Collections.emptyList()Ljava/util/List;
java.util.Collections.emptyMap()Ljava/util/Map;
java.util.Collections.rotate(Ljava/util/List;I)V
java.util.Collections.sort(Ljava/util/List;)V
java.util.Collections.sort(Ljava/util/List;Ljava/util/Comparator;)V
java.util.Collections.unmodifiableList(Ljava/util/List;)Ljava/util/List;
java.util.HashMap$EntryIterator.next()Ljava/lang/Object;
java.util.HashMap$EntrySet.iterator()Ljava/util/Iterator;
java.util.HashMap$HashIterator.hasNext()Z
java.util.HashMap$KeyIterator.next()Ljava/lang/Object;
java.util.HashMap$Node.getKey()Ljava/lang/Object;
java.util.HashMap$Node.getValue()Ljava/lang/Object;
java.util.HashMap$ValueIterator.next()Ljava/lang/Object;
java.util.HashMap$Values.iterator()Ljava/util/Iterator;
java.util.HashMap.clear()V
java.util.HashMap.containsKey(Ljava/lang/Object;)Z
java.util.HashMap.containsValue(Ljava/lang/Object;)Z
java.util.HashMap.entrySet()Ljava/util/Set;
java.util.HashMap.get(Ljava/lang/Object;)Ljava/lang/Object;
java.util.HashMap.keySet()Ljava/util/Set;
java.util.HashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
java.util.HashMap.putAll(Ljava/util/Map;)V
java.util.HashMap.remove(Ljava/lang/Object;)Ljava/lang/Object;
java.util.HashMap.size()I
java.util.HashMap.values()Ljava/util/Collection;
java.util.HashSet.add(Ljava/lang/Object;)Z
java.util.HashSet.contains(Ljava/lang/Object;)Z
java.util.HashSet.isEmpty()Z
java.util.HashSet.iterator()Ljava/util/Iterator;
java.util.HashSet.remove(Ljava/lang/Object;)Z
java.util.HashSet.size()I
java.util.IdentityHashMap$IdentityHashMapIterator.hasNext()Z
java.util.IdentityHashMap$KeyIterator.next()Ljava/lang/Object;
java.util.IdentityHashMap$KeySet.iterator()Ljava/util/Iterator;
java.util.IdentityHashMap.get(Ljava/lang/Object;)Ljava/lang/Object;
java.util.IdentityHashMap.keySet()Ljava/util/Set;
java.util.IdentityHashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
java.util.Locale.getDefault()Ljava/util/Locale;
java.util.Locale.getLanguage()Ljava/lang/String;
java.util.Random.nextBytes([B)V
java.util.Random.nextDouble()D
java.util.Random.nextGaussian()D
java.util.Random.nextInt()I
java.util.Random.nextInt(I)I
java.util.Random.nextLong()J
java.util.Random.setSeed(J)V
java.util.ResourceBundle.getBundle(Ljava/lang/String;Ljava/util/Locale;)Ljava/util/ResourceBundle;
java.util.ResourceBundle.getLocale()Ljava/util/Locale;
java.util.ResourceBundle.getString(Ljava/lang/String;)Ljava/lang/String;
java.util.StringTokenizer.nextToken()Ljava/lang/String;
java.util.TreeMap$Entry.getKey()Ljava/lang/Object;
java.util.TreeMap$Entry.getValue()Ljava/lang/Object;
java.util.TreeMap$EntryIterator.next()Ljava/lang/Object;
java.util.TreeMap$EntrySet.iterator()Ljava/util/Iterator;
java.util.TreeMap$KeyIterator.next()Ljava/lang/Object;
java.util.TreeMap$KeySet.iterator()Ljava/util/Iterator;
java.util.TreeMap$KeySet.size()I
java.util.TreeMap$PrivateEntryIterator.hasNext()Z
java.util.TreeMap$PrivateEntryIterator.remove()V
java.util.TreeMap$ValueIterator.next()Ljava/lang/Object;
java.util.TreeMap$Values.iterator()Ljava/util/Iterator;
java.util.TreeMap.clear()V
java.util.TreeMap.comparator()Ljava/util/Comparator;
java.util.TreeMap.entrySet()Ljava/util/Set;
java.util.TreeMap.firstKey()Ljava/lang/Object;
java.util.TreeMap.get(Ljava/lang/Object;)Ljava/lang/Object;
java.util.TreeMap.keySet()Ljava/util/Set;
java.util.TreeMap.lastKey()Ljava/lang/Object;
java.util.TreeMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
java.util.TreeMap.values()Ljava/util/Collection;
java.util.TreeSet.add(Ljava/lang/Object;)Z
java.util.TreeSet.addAll(Ljava/util/Collection;)Z
java.util.TreeSet.contains(Ljava/lang/Object;)Z
java.util.TreeSet.isEmpty()Z
java.util.TreeSet.iterator()Ljava/util/Iterator;
java.util.TreeSet.size()I
java.util.concurrent.ConcurrentHashMap$BaseIterator.hasNext()Z
java.util.concurrent.ConcurrentHashMap$CollectionView.toArray([Ljava/lang/Object;)[Ljava/lang/Object;
java.util.concurrent.ConcurrentHashMap$EntryIterator.next()Ljava/lang/Object;
java.util.concurrent.ConcurrentHashMap$EntrySetView.iterator()Ljava/util/Iterator;
java.util.concurrent.ConcurrentHashMap$MapEntry.getKey()Ljava/lang/Object;
java.util.concurrent.ConcurrentHashMap$MapEntry.getValue()Ljava/lang/Object;
java.util.concurrent.ConcurrentHashMap$ValueIterator.next()Ljava/lang/Object;
java.util.concurrent.ConcurrentHashMap$ValuesView.iterator()Ljava/util/Iterator;
java.util.concurrent.ConcurrentHashMap.entrySet()Ljava/util/Set;
java.util.concurrent.ConcurrentHashMap.get(Ljava/lang/Object;)Ljava/lang/Object;
java.util.concurrent.ConcurrentHashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
java.util.concurrent.ConcurrentHashMap.remove(Ljava/lang/Object;)Ljava/lang/Object;
java.util.concurrent.ConcurrentHashMap.values()Ljava/util/Collection;
java.util.concurrent.TimeUnit$4.toNanos(J)J
java.util.concurrent.atomic.AtomicLong.get()J
java.util.concurrent.atomic.AtomicLong.getAndIncrement()J
java.util.concurrent.atomic.AtomicLong.incrementAndGet()J
java.util.concurrent.atomic.AtomicLong.set(J)V
java.util.concurrent.atomic.AtomicReference.compareAndSet(Ljava/lang/Object;Ljava/lang/Object;)Z
java.util.concurrent.atomic.AtomicReference.get()Ljava/lang/Object;
org.apache.commons.math3.analysis.FunctionUtils$1.value(D)D
org.apache.commons.math3.analysis.FunctionUtils$10.value(D)D
org.apache.commons.math3.analysis.FunctionUtils$11.value([D)D
org.apache.commons.math3.analysis.FunctionUtils$12.value(D)D
org.apache.commons.math3.analysis.FunctionUtils$13.value(D)D
org.apache.commons.math3.analysis.FunctionUtils$14$1.value(D)D
org.apache.commons.math3.analysis.FunctionUtils$14.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
org.apache.commons.math3.analysis.FunctionUtils$14.value(D)D
org.apache.commons.math3.analysis.FunctionUtils$15.value(D)D
org.apache.commons.math3.analysis.FunctionUtils$15.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.FunctionUtils$16$1.value([D)D
org.apache.commons.math3.analysis.FunctionUtils$16$2.value([D)[D
org.apache.commons.math3.analysis.FunctionUtils$16.gradient()Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;
org.apache.commons.math3.analysis.FunctionUtils$16.partialDerivative(I)Lorg/apache/commons/math3/analysis/MultivariateFunction;
org.apache.commons.math3.analysis.FunctionUtils$16.value([D)D
org.apache.commons.math3.analysis.FunctionUtils$17.value([D)D
org.apache.commons.math3.analysis.FunctionUtils$17.value([Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.FunctionUtils$18$1.value([D)[[D
org.apache.commons.math3.analysis.FunctionUtils$18.jacobian()Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;
org.apache.commons.math3.analysis.FunctionUtils$18.value([D)[D
org.apache.commons.math3.analysis.FunctionUtils$19.value([D)[D
org.apache.commons.math3.analysis.FunctionUtils$19.value([Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)[Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.FunctionUtils$2.value(D)D
org.apache.commons.math3.analysis.FunctionUtils$2.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.FunctionUtils$3$1.value(D)D
org.apache.commons.math3.analysis.FunctionUtils$3.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
org.apache.commons.math3.analysis.FunctionUtils$3.value(D)D
org.apache.commons.math3.analysis.FunctionUtils$4.value(D)D
org.apache.commons.math3.analysis.FunctionUtils$5.value(D)D
org.apache.commons.math3.analysis.FunctionUtils$5.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.FunctionUtils$6$1.value(D)D
org.apache.commons.math3.analysis.FunctionUtils$6.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
org.apache.commons.math3.analysis.FunctionUtils$6.value(D)D
org.apache.commons.math3.analysis.FunctionUtils$7.value(D)D
org.apache.commons.math3.analysis.FunctionUtils$8.value(D)D
org.apache.commons.math3.analysis.FunctionUtils$8.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.FunctionUtils$9$1.value(D)D
org.apache.commons.math3.analysis.FunctionUtils$9.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
org.apache.commons.math3.analysis.FunctionUtils$9.value(D)D
org.apache.commons.math3.analysis.FunctionUtils.add([Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;)Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;
org.apache.commons.math3.analysis.FunctionUtils.add([Lorg/apache/commons/math3/analysis/UnivariateFunction;)Lorg/apache/commons/math3/analysis/UnivariateFunction;
org.apache.commons.math3.analysis.FunctionUtils.add([Lorg/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction;)Lorg/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction;
org.apache.commons.math3.analysis.FunctionUtils.compose([Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;)Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;
org.apache.commons.math3.analysis.FunctionUtils.compose([Lorg/apache/commons/math3/analysis/UnivariateFunction;)Lorg/apache/commons/math3/analysis/UnivariateFunction;
org.apache.commons.math3.analysis.FunctionUtils.compose([Lorg/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction;)Lorg/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction;
org.apache.commons.math3.analysis.FunctionUtils.multiply([Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;)Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;
org.apache.commons.math3.analysis.FunctionUtils.multiply([Lorg/apache/commons/math3/analysis/UnivariateFunction;)Lorg/apache/commons/math3/analysis/UnivariateFunction;
org.apache.commons.math3.analysis.FunctionUtils.multiply([Lorg/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction;)Lorg/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction;
org.apache.commons.math3.analysis.FunctionUtils.toDifferentiableUnivariateFunction(Lorg/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction;)Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;
org.apache.commons.math3.analysis.differentiation.DSCompiler.acos([DI[DI)V
org.apache.commons.math3.analysis.differentiation.DSCompiler.acosh([DI[DI)V
org.apache.commons.math3.analysis.differentiation.DSCompiler.add([DI[DI[DI)V
org.apache.commons.math3.analysis.differentiation.DSCompiler.asin([DI[DI)V
org.apache.commons.math3.analysis.differentiation.DSCompiler.asinh([DI[DI)V
org.apache.commons.math3.analysis.differentiation.DSCompiler.atan([DI[DI)V
org.apache.commons.math3.analysis.differentiation.DSCompiler.atan2([DI[DI[DI)V
org.apache.commons.math3.analysis.differentiation.DSCompiler.atanh([DI[DI)V
org.apache.commons.math3.analysis.differentiation.DSCompiler.checkCompatibility(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V
org.apache.commons.math3.analysis.differentiation.DSCompiler.compose([DI[D[DI)V
org.apache.commons.math3.analysis.differentiation.DSCompiler.cos([DI[DI)V
org.apache.commons.math3.analysis.differentiation.DSCompiler.cosh([DI[DI)V
org.apache.commons.math3.analysis.differentiation.DSCompiler.divide([DI[DI[DI)V
org.apache.commons.math3.analysis.differentiation.DSCompiler.exp([DI[DI)V
org.apache.commons.math3.analysis.differentiation.DSCompiler.expm1([DI[DI)V
org.apache.commons.math3.analysis.differentiation.DSCompiler.getFreeParameters()I
org.apache.commons.math3.analysis.differentiation.DSCompiler.getOrder()I
org.apache.commons.math3.analysis.differentiation.DSCompiler.getPartialDerivativeIndex([I)I
org.apache.commons.math3.analysis.differentiation.DSCompiler.getPartialDerivativeOrders(I)[I
org.apache.commons.math3.analysis.differentiation.DSCompiler.getSize()I
org.apache.commons.math3.analysis.differentiation.DSCompiler.linearCombination(D[DID[DID[DID[DI[DI)V
org.apache.commons.math3.analysis.differentiation.DSCompiler.linearCombination(D[DID[DID[DI[DI)V
org.apache.commons.math3.analysis.differentiation.DSCompiler.linearCombination(D[DID[DI[DI)V
org.apache.commons.math3.analysis.differentiation.DSCompiler.log([DI[DI)V
org.apache.commons.math3.analysis.differentiation.DSCompiler.log10([DI[DI)V
org.apache.commons.math3.analysis.differentiation.DSCompiler.log1p([DI[DI)V
org.apache.commons.math3.analysis.differentiation.DSCompiler.multiply([DI[DI[DI)V
org.apache.commons.math3.analysis.differentiation.DSCompiler.pow(D[DI[DI)V
org.apache.commons.math3.analysis.differentiation.DSCompiler.pow([DID[DI)V
org.apache.commons.math3.analysis.differentiation.DSCompiler.pow([DII[DI)V
org.apache.commons.math3.analysis.differentiation.DSCompiler.pow([DI[DI[DI)V
org.apache.commons.math3.analysis.differentiation.DSCompiler.remainder([DI[DI[DI)V
org.apache.commons.math3.analysis.differentiation.DSCompiler.rootN([DII[DI)V
org.apache.commons.math3.analysis.differentiation.DSCompiler.sin([DI[DI)V
org.apache.commons.math3.analysis.differentiation.DSCompiler.sinh([DI[DI)V
org.apache.commons.math3.analysis.differentiation.DSCompiler.subtract([DI[DI[DI)V
org.apache.commons.math3.analysis.differentiation.DSCompiler.tan([DI[DI)V
org.apache.commons.math3.analysis.differentiation.DSCompiler.tanh([DI[DI)V
org.apache.commons.math3.analysis.differentiation.DSCompiler.taylor([DI[D)D
org.apache.commons.math3.analysis.differentiation.DerivativeStructure$1.getOne()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure$1.getOne()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure$1.getRuntimeClass()Ljava/lang/Class;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure$1.getZero()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure$1.getZero()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure$DataTransferObject.readResolve()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.abs()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.abs()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.access$000(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.acos()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.acos()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.acosh()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.acosh()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.add(D)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.add(D)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.add(Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.add(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.asin()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.asin()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.asinh()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.asinh()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.atan()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.atan()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.atan2(Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.atan2(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.atan2(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.atanh()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.atanh()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.cbrt()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.cbrt()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.ceil()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.ceil()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.compose([D)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.copySign(D)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.copySign(D)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.copySign(Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.copySign(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.cos()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.cos()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.cosh()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.cosh()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.createConstant(D)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.divide(D)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.divide(D)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.divide(Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.divide(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.equals(Ljava/lang/Object;)Z
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.exp()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.exp()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.expm1()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.expm1()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.floor()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.floor()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives()[D
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getExponent()I
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getField()Lorg/apache/commons/math3/Field;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getFreeParameters()I
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getOrder()I
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getPartialDerivative([I)D
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getReal()D
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getValue()D
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.hashCode()I
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.hypot(Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.hypot(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.hypot(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.linearCombination(DLjava/lang/Object;DLjava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.linearCombination(DLjava/lang/Object;DLjava/lang/Object;DLjava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.linearCombination(DLjava/lang/Object;DLjava/lang/Object;DLjava/lang/Object;DLjava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.linearCombination(DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.linearCombination(DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.linearCombination(DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.linearCombination(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.linearCombination(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.linearCombination(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.linearCombination(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.linearCombination(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.linearCombination(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.linearCombination([D[Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.linearCombination([D[Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.linearCombination([Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.linearCombination([Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;[Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.log()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.log()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.log10()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.log1p()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.log1p()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.multiply(D)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.multiply(D)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.multiply(I)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.multiply(I)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.multiply(Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.multiply(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.negate()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.negate()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.pow(D)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.pow(D)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.pow(I)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.pow(I)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.pow(Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.pow(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.reciprocal()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.reciprocal()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.remainder(D)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.remainder(D)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.remainder(Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.remainder(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.rint()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.rint()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.rootN(I)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.rootN(I)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.round()J
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.scalb(I)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.scalb(I)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.signum()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.signum()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.sin()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.sin()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.sinh()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.sinh()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.sqrt()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.sqrt()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.subtract(D)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.subtract(D)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.subtract(Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.subtract(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.tan()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.tan()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.tanh()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.tanh()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.taylor([D)D
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.toDegrees()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.toRadians()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.DerivativeStructure.writeReplace()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(D)D
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$2.value(D)[D
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$2.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)[Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$3.value(D)[[D
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$3.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)[[Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator.access$000(Lorg/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator;)I
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator.access$100(Lorg/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator;)D
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator.access$200(Lorg/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator;)D
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator.access$300(Lorg/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator;)D
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator.access$400(Lorg/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator;)D
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator.access$500(Lorg/apache/commons/math3/analysis/differentiation/FiniteDifferencesDifferentiator;Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;D[D)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator.differentiate(Lorg/apache/commons/math3/analysis/UnivariateFunction;)Lorg/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction;
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator.differentiate(Lorg/apache/commons/math3/analysis/UnivariateMatrixFunction;)Lorg/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableMatrixFunction;
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator.differentiate(Lorg/apache/commons/math3/analysis/UnivariateVectorFunction;)Lorg/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableVectorFunction;
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator.evaluate(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;D[D)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator.getNbPoints()I
org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator.getStepSize()D
org.apache.commons.math3.analysis.differentiation.GradientFunction.value([D)[D
org.apache.commons.math3.analysis.differentiation.JacobianFunction.value([D)[[D
org.apache.commons.math3.analysis.differentiation.SparseGradient$1.getOne()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient$1.getOne()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient$1.getRuntimeClass()Ljava/lang/Class;
org.apache.commons.math3.analysis.differentiation.SparseGradient$1.getZero()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient$1.getZero()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.abs()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient.abs()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.acos()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient.acos()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.acosh()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient.acosh()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.add(D)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient.add(D)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.add(Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient.add(Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.addInPlace(Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)V
org.apache.commons.math3.analysis.differentiation.SparseGradient.asin()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient.asin()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.asinh()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient.asinh()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.atan()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient.atan()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.atan2(Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient.atan2(Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.atan2(Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.atanh()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient.atanh()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.cbrt()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient.cbrt()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.ceil()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient.ceil()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.compose(DD)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.copySign(D)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient.copySign(D)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.copySign(Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient.copySign(Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.cos()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient.cos()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.cosh()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient.cosh()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.divide(D)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient.divide(D)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.divide(Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient.divide(Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.equals(Ljava/lang/Object;)Z
org.apache.commons.math3.analysis.differentiation.SparseGradient.exp()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient.exp()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.expm1()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient.expm1()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.floor()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient.floor()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.getDerivative(I)D
org.apache.commons.math3.analysis.differentiation.SparseGradient.getField()Lorg/apache/commons/math3/Field;
org.apache.commons.math3.analysis.differentiation.SparseGradient.getReal()D
org.apache.commons.math3.analysis.differentiation.SparseGradient.getValue()D
org.apache.commons.math3.analysis.differentiation.SparseGradient.hashCode()I
org.apache.commons.math3.analysis.differentiation.SparseGradient.hypot(Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient.hypot(Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.hypot(Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.linearCombination(DLjava/lang/Object;DLjava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient.linearCombination(DLjava/lang/Object;DLjava/lang/Object;DLjava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient.linearCombination(DLjava/lang/Object;DLjava/lang/Object;DLjava/lang/Object;DLjava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient.linearCombination(DLorg/apache/commons/math3/analysis/differentiation/SparseGradient;DLorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.linearCombination(DLorg/apache/commons/math3/analysis/differentiation/SparseGradient;DLorg/apache/commons/math3/analysis/differentiation/SparseGradient;DLorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.linearCombination(DLorg/apache/commons/math3/analysis/differentiation/SparseGradient;DLorg/apache/commons/math3/analysis/differentiation/SparseGradient;DLorg/apache/commons/math3/analysis/differentiation/SparseGradient;DLorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.linearCombination(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient.linearCombination(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient.linearCombination(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient.linearCombination(Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.linearCombination(Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.linearCombination(Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.linearCombination([D[Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient.linearCombination([D[Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.linearCombination([Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient.linearCombination([Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;[Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.log()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient.log()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.log10()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.log1p()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient.log1p()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.multiply(D)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient.multiply(D)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.multiply(I)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient.multiply(I)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.multiply(Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient.multiply(Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.multiplyInPlace(Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)V
org.apache.commons.math3.analysis.differentiation.SparseGradient.negate()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient.negate()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.numVars()I
org.apache.commons.math3.analysis.differentiation.SparseGradient.pow(D)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient.pow(D)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.pow(I)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient.pow(I)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.pow(Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient.pow(Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.reciprocal()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient.reciprocal()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.remainder(D)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient.remainder(D)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.remainder(Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient.remainder(Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.rint()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient.rint()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.rootN(I)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient.rootN(I)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.round()J
org.apache.commons.math3.analysis.differentiation.SparseGradient.scalb(I)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient.scalb(I)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.signum()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient.signum()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.sin()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient.sin()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.sinh()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient.sinh()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.sqrt()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient.sqrt()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.subtract(D)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient.subtract(D)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.subtract(Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient.subtract(Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.tan()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient.tan()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.tanh()Ljava/lang/Object;
org.apache.commons.math3.analysis.differentiation.SparseGradient.tanh()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.taylor([D)D
org.apache.commons.math3.analysis.differentiation.SparseGradient.toDegrees()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.differentiation.SparseGradient.toRadians()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;
org.apache.commons.math3.analysis.function.Abs.value(D)D
org.apache.commons.math3.analysis.function.Acos.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
org.apache.commons.math3.analysis.function.Acos.value(D)D
org.apache.commons.math3.analysis.function.Acos.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.function.Acosh.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
org.apache.commons.math3.analysis.function.Acosh.value(D)D
org.apache.commons.math3.analysis.function.Acosh.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.function.Add.value(DD)D
org.apache.commons.math3.analysis.function.Asin.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
org.apache.commons.math3.analysis.function.Asin.value(D)D
org.apache.commons.math3.analysis.function.Asin.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.function.Asinh.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
org.apache.commons.math3.analysis.function.Asinh.value(D)D
org.apache.commons.math3.analysis.function.Asinh.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.function.Atan.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
org.apache.commons.math3.analysis.function.Atan.value(D)D
org.apache.commons.math3.analysis.function.Atan.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.function.Atan2.value(DD)D
org.apache.commons.math3.analysis.function.Atanh.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
org.apache.commons.math3.analysis.function.Atanh.value(D)D
org.apache.commons.math3.analysis.function.Atanh.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.function.Cbrt.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
org.apache.commons.math3.analysis.function.Cbrt.value(D)D
org.apache.commons.math3.analysis.function.Cbrt.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.function.Ceil.value(D)D
org.apache.commons.math3.analysis.function.Constant.derivative()Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;
org.apache.commons.math3.analysis.function.Constant.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
org.apache.commons.math3.analysis.function.Constant.value(D)D
org.apache.commons.math3.analysis.function.Constant.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.function.Cos.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
org.apache.commons.math3.analysis.function.Cos.value(D)D
org.apache.commons.math3.analysis.function.Cos.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.function.Cosh.derivative()Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;
org.apache.commons.math3.analysis.function.Cosh.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
org.apache.commons.math3.analysis.function.Cosh.value(D)D
org.apache.commons.math3.analysis.function.Cosh.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.function.Divide.value(DD)D
org.apache.commons.math3.analysis.function.Exp.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
org.apache.commons.math3.analysis.function.Exp.value(D)D
org.apache.commons.math3.analysis.function.Exp.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.function.Expm1.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
org.apache.commons.math3.analysis.function.Expm1.value(D)D
org.apache.commons.math3.analysis.function.Expm1.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.function.Floor.value(D)D
org.apache.commons.math3.analysis.function.Gaussian$Parametric.gradient(D[D)[D
org.apache.commons.math3.analysis.function.Gaussian$Parametric.validateParameters([D)V
org.apache.commons.math3.analysis.function.Gaussian$Parametric.value(D[D)D
org.apache.commons.math3.analysis.function.Gaussian.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
org.apache.commons.math3.analysis.function.Gaussian.value(D)D
org.apache.commons.math3.analysis.function.Gaussian.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.function.HarmonicOscillator$Parametric.gradient(D[D)[D
org.apache.commons.math3.analysis.function.HarmonicOscillator$Parametric.validateParameters([D)V
org.apache.commons.math3.analysis.function.HarmonicOscillator$Parametric.value(D[D)D
org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
org.apache.commons.math3.analysis.function.HarmonicOscillator.value(D)D
org.apache.commons.math3.analysis.function.HarmonicOscillator.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.function.Identity.derivative()Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;
org.apache.commons.math3.analysis.function.Identity.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
org.apache.commons.math3.analysis.function.Identity.value(D)D
org.apache.commons.math3.analysis.function.Identity.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.function.Inverse.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
org.apache.commons.math3.analysis.function.Inverse.value(D)D
org.apache.commons.math3.analysis.function.Inverse.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.function.Log.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
org.apache.commons.math3.analysis.function.Log.value(D)D
org.apache.commons.math3.analysis.function.Log.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.function.Log10.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
org.apache.commons.math3.analysis.function.Log10.value(D)D
org.apache.commons.math3.analysis.function.Log10.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.function.Log1p.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
org.apache.commons.math3.analysis.function.Log1p.value(D)D
org.apache.commons.math3.analysis.function.Log1p.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.function.Logistic$Parametric.gradient(D[D)[D
org.apache.commons.math3.analysis.function.Logistic$Parametric.validateParameters([D)V
org.apache.commons.math3.analysis.function.Logistic$Parametric.value(D[D)D
org.apache.commons.math3.analysis.function.Logistic.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
org.apache.commons.math3.analysis.function.Logistic.value(D)D
org.apache.commons.math3.analysis.function.Logistic.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.function.Logit$Parametric.gradient(D[D)[D
org.apache.commons.math3.analysis.function.Logit$Parametric.validateParameters([D)V
org.apache.commons.math3.analysis.function.Logit$Parametric.value(D[D)D
org.apache.commons.math3.analysis.function.Logit.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
org.apache.commons.math3.analysis.function.Logit.value(D)D
org.apache.commons.math3.analysis.function.Logit.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.function.Max.value(DD)D
org.apache.commons.math3.analysis.function.Min.value(DD)D
org.apache.commons.math3.analysis.function.Minus.derivative()Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;
org.apache.commons.math3.analysis.function.Minus.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
org.apache.commons.math3.analysis.function.Minus.value(D)D
org.apache.commons.math3.analysis.function.Minus.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.function.Multiply.value(DD)D
org.apache.commons.math3.analysis.function.Pow.value(DD)D
org.apache.commons.math3.analysis.function.Power.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
org.apache.commons.math3.analysis.function.Power.value(D)D
org.apache.commons.math3.analysis.function.Power.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.function.Rint.value(D)D
org.apache.commons.math3.analysis.function.Sigmoid$Parametric.gradient(D[D)[D
org.apache.commons.math3.analysis.function.Sigmoid$Parametric.validateParameters([D)V
org.apache.commons.math3.analysis.function.Sigmoid$Parametric.value(D[D)D
org.apache.commons.math3.analysis.function.Sigmoid.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
org.apache.commons.math3.analysis.function.Sigmoid.value(D)D
org.apache.commons.math3.analysis.function.Sigmoid.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.function.Signum.value(D)D
org.apache.commons.math3.analysis.function.Sin.derivative()Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;
org.apache.commons.math3.analysis.function.Sin.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
org.apache.commons.math3.analysis.function.Sin.value(D)D
org.apache.commons.math3.analysis.function.Sin.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.function.Sinc.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
org.apache.commons.math3.analysis.function.Sinc.value(D)D
org.apache.commons.math3.analysis.function.Sinc.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.function.Sinh.derivative()Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;
org.apache.commons.math3.analysis.function.Sinh.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
org.apache.commons.math3.analysis.function.Sinh.value(D)D
org.apache.commons.math3.analysis.function.Sinh.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.function.Sqrt.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
org.apache.commons.math3.analysis.function.Sqrt.value(D)D
org.apache.commons.math3.analysis.function.Sqrt.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.function.StepFunction.value(D)D
org.apache.commons.math3.analysis.function.Subtract.value(DD)D
org.apache.commons.math3.analysis.function.Tan.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
org.apache.commons.math3.analysis.function.Tan.value(D)D
org.apache.commons.math3.analysis.function.Tan.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.function.Tanh.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
org.apache.commons.math3.analysis.function.Tanh.value(D)D
org.apache.commons.math3.analysis.function.Tanh.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.function.Ulp.value(D)D
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(D)D
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.getAbsoluteAccuracy()D
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.getIterations()I
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.getMax()D
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.getMaximalIterationCount()I
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.getMin()D
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.getMinimalIterationCount()I
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.getRelativeAccuracy()D
org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.incrementCount()V
org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator$1.value(D)D
org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator.doIntegrate()D
org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator.stage(I)D
org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator.doIntegrate()D
org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator.stage(I)D
org.apache.commons.math3.analysis.integration.MidPointIntegrator.doIntegrate()D
org.apache.commons.math3.analysis.integration.MidPointIntegrator.stage(IDDD)D
org.apache.commons.math3.analysis.integration.RombergIntegrator.doIntegrate()D
org.apache.commons.math3.analysis.integration.SimpsonIntegrator.doIntegrate()D
org.apache.commons.math3.analysis.integration.TrapezoidIntegrator.doIntegrate()D
org.apache.commons.math3.analysis.integration.TrapezoidIntegrator.stage(Lorg/apache/commons/math3/analysis/integration/BaseAbstractUnivariateIntegrator;I)D
org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory.addRule(Lorg/apache/commons/math3/util/Pair;)V
org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory.convertToDouble(Lorg/apache/commons/math3/util/Pair;)Lorg/apache/commons/math3/util/Pair;
org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory.getRule(I)Lorg/apache/commons/math3/util/Pair;
org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory.getRuleInternal(I)Lorg/apache/commons/math3/util/Pair;
org.apache.commons.math3.analysis.integration.gauss.GaussIntegrator.getNumberOfPoints()I
org.apache.commons.math3.analysis.integration.gauss.GaussIntegrator.getPoint(I)D
org.apache.commons.math3.analysis.integration.gauss.GaussIntegrator.getWeight(I)D
org.apache.commons.math3.analysis.integration.gauss.GaussIntegrator.integrate(Lorg/apache/commons/math3/analysis/UnivariateFunction;)D
org.apache.commons.math3.analysis.integration.gauss.GaussIntegratorFactory.getRule(Lorg/apache/commons/math3/analysis/integration/gauss/BaseRuleFactory;I)Lorg/apache/commons/math3/util/Pair;
org.apache.commons.math3.analysis.integration.gauss.GaussIntegratorFactory.hermite(I)Lorg/apache/commons/math3/analysis/integration/gauss/SymmetricGaussIntegrator;
org.apache.commons.math3.analysis.integration.gauss.GaussIntegratorFactory.legendre(I)Lorg/apache/commons/math3/analysis/integration/gauss/GaussIntegrator;
org.apache.commons.math3.analysis.integration.gauss.GaussIntegratorFactory.legendre(IDD)Lorg/apache/commons/math3/analysis/integration/gauss/GaussIntegrator;
org.apache.commons.math3.analysis.integration.gauss.GaussIntegratorFactory.legendreHighPrecision(I)Lorg/apache/commons/math3/analysis/integration/gauss/GaussIntegrator;
org.apache.commons.math3.analysis.integration.gauss.GaussIntegratorFactory.legendreHighPrecision(IDD)Lorg/apache/commons/math3/analysis/integration/gauss/GaussIntegrator;
org.apache.commons.math3.analysis.integration.gauss.GaussIntegratorFactory.transform(Lorg/apache/commons/math3/util/Pair;DD)Lorg/apache/commons/math3/util/Pair;
org.apache.commons.math3.analysis.integration.gauss.HermiteRuleFactory.computeRule(I)Lorg/apache/commons/math3/util/Pair;
org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory.computeRule(I)Lorg/apache/commons/math3/util/Pair;
org.apache.commons.math3.analysis.integration.gauss.LegendreRuleFactory.computeRule(I)Lorg/apache/commons/math3/util/Pair;
org.apache.commons.math3.analysis.integration.gauss.SymmetricGaussIntegrator.integrate(Lorg/apache/commons/math3/analysis/UnivariateFunction;)D
org.apache.commons.math3.analysis.interpolation.AkimaSplineInterpolator.differentiateThreePoint([D[DIIII)D
org.apache.commons.math3.analysis.interpolation.AkimaSplineInterpolator.interpolate([D[D)Lorg/apache/commons/math3/analysis/UnivariateFunction;
org.apache.commons.math3.analysis.interpolation.AkimaSplineInterpolator.interpolate([D[D)Lorg/apache/commons/math3/analysis/polynomials/PolynomialSplineFunction;
org.apache.commons.math3.analysis.interpolation.AkimaSplineInterpolator.interpolateHermiteSorted([D[D[D)Lorg/apache/commons/math3/analysis/polynomials/PolynomialSplineFunction;
org.apache.commons.math3.analysis.interpolation.BicubicFunction.apply([D[D[[D)D
org.apache.commons.math3.analysis.interpolation.BicubicFunction.value(DD)D
org.apache.commons.math3.analysis.interpolation.BicubicInterpolatingFunction.computeSplineCoefficients([D)[D
org.apache.commons.math3.analysis.interpolation.BicubicInterpolatingFunction.isValidPoint(DD)Z
org.apache.commons.math3.analysis.interpolation.BicubicInterpolatingFunction.searchIndex(D[D)I
org.apache.commons.math3.analysis.interpolation.BicubicInterpolatingFunction.value(DD)D
org.apache.commons.math3.analysis.interpolation.BicubicInterpolator$1.isValidPoint(DD)Z
org.apache.commons.math3.analysis.interpolation.BicubicInterpolator.interpolate([D[D[[D)Lorg/apache/commons/math3/analysis/BivariateFunction;
org.apache.commons.math3.analysis.interpolation.BicubicInterpolator.interpolate([D[D[[D)Lorg/apache/commons/math3/analysis/interpolation/BicubicInterpolatingFunction;
org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$1.value(DD)D
org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$2.value(DD)D
org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$3.value(DD)D
org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$4.value(DD)D
org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$5.value(DD)D
org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction.access$000(Lorg/apache/commons/math3/analysis/interpolation/BicubicSplineFunction;[D[D[[D)D
org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction.apply([D[D[[D)D
org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction.partialDerivativeX()Lorg/apache/commons/math3/analysis/BivariateFunction;
org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction.partialDerivativeXX()Lorg/apache/commons/math3/analysis/BivariateFunction;
org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction.partialDerivativeXY()Lorg/apache/commons/math3/analysis/BivariateFunction;
org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction.partialDerivativeY()Lorg/apache/commons/math3/analysis/BivariateFunction;
org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction.partialDerivativeYY()Lorg/apache/commons/math3/analysis/BivariateFunction;
org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction.value(DD)D
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction.computeSplineCoefficients([D)[D
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction.isValidPoint(DD)Z
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction.partialDerivative(IDD)D
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction.partialDerivativeX(DD)D
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction.partialDerivativeXX(DD)D
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction.partialDerivativeXY(DD)D
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction.partialDerivativeY(DD)D
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction.partialDerivativeYY(DD)D
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction.searchIndex(D[D)I
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction.value(DD)D
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolator.interpolate([D[D[[D)Lorg/apache/commons/math3/analysis/BivariateFunction;
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolator.interpolate([D[D[[D)Lorg/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction;
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolator.nextIndex(II)I
org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolator.previousIndex(I)I
org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolator.computeDividedDifference([D[D)[D
org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolator.interpolate([D[D)Lorg/apache/commons/math3/analysis/UnivariateFunction;
org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolator.interpolate([D[D)Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm;
org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator.addSamplePoint(Lorg/apache/commons/math3/FieldElement;[[Lorg/apache/commons/math3/FieldElement;)V
org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator.derivatives(Lorg/apache/commons/math3/FieldElement;I)[[Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator.value(Lorg/apache/commons/math3/FieldElement;)[Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.analysis.interpolation.HermiteInterpolator.addSamplePoint(D[[D)V
org.apache.commons.math3.analysis.interpolation.HermiteInterpolator.checkInterpolation()V
org.apache.commons.math3.analysis.interpolation.HermiteInterpolator.getPolynomials()[Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;
org.apache.commons.math3.analysis.interpolation.HermiteInterpolator.polynomial([D)Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;
org.apache.commons.math3.analysis.interpolation.HermiteInterpolator.value(D)[D
org.apache.commons.math3.analysis.interpolation.HermiteInterpolator.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)[Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.interpolation.InterpolatingMicrosphere$Facet.getNormal()[D
org.apache.commons.math3.analysis.interpolation.InterpolatingMicrosphere$FacetData.illumination()D
org.apache.commons.math3.analysis.interpolation.InterpolatingMicrosphere$FacetData.sample()D
org.apache.commons.math3.analysis.interpolation.InterpolatingMicrosphere.add([DZ)V
org.apache.commons.math3.analysis.interpolation.InterpolatingMicrosphere.clear()V
org.apache.commons.math3.analysis.interpolation.InterpolatingMicrosphere.copy()Lorg/apache/commons/math3/analysis/interpolation/InterpolatingMicrosphere;
org.apache.commons.math3.analysis.interpolation.InterpolatingMicrosphere.getDimension()I
org.apache.commons.math3.analysis.interpolation.InterpolatingMicrosphere.getSize()I
org.apache.commons.math3.analysis.interpolation.InterpolatingMicrosphere.illuminate([DDD)V
org.apache.commons.math3.analysis.interpolation.InterpolatingMicrosphere.interpolate()D
org.apache.commons.math3.analysis.interpolation.InterpolatingMicrosphere.value([D[[D[DDD)D
org.apache.commons.math3.analysis.interpolation.InterpolatingMicrosphere2D.copy()Lorg/apache/commons/math3/analysis/interpolation/InterpolatingMicrosphere2D;
org.apache.commons.math3.analysis.interpolation.InterpolatingMicrosphere2D.copy()Lorg/apache/commons/math3/analysis/interpolation/InterpolatingMicrosphere;
org.apache.commons.math3.analysis.interpolation.LinearInterpolator.interpolate([D[D)Lorg/apache/commons/math3/analysis/UnivariateFunction;
org.apache.commons.math3.analysis.interpolation.LinearInterpolator.interpolate([D[D)Lorg/apache/commons/math3/analysis/polynomials/PolynomialSplineFunction;
org.apache.commons.math3.analysis.interpolation.LoessInterpolator.checkAllFiniteReal([D)V
org.apache.commons.math3.analysis.interpolation.LoessInterpolator.interpolate([D[D)Lorg/apache/commons/math3/analysis/UnivariateFunction;
org.apache.commons.math3.analysis.interpolation.LoessInterpolator.interpolate([D[D)Lorg/apache/commons/math3/analysis/polynomials/PolynomialSplineFunction;
org.apache.commons.math3.analysis.interpolation.LoessInterpolator.nextNonzero([DI)I
org.apache.commons.math3.analysis.interpolation.LoessInterpolator.smooth([D[D)[D
org.apache.commons.math3.analysis.interpolation.LoessInterpolator.smooth([D[D[D)[D
org.apache.commons.math3.analysis.interpolation.LoessInterpolator.updateBandwidthInterval([D[DI[I)V
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction$MicrosphereSurfaceElement.illumination()D
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction$MicrosphereSurfaceElement.normal()Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction$MicrosphereSurfaceElement.reset()V
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction$MicrosphereSurfaceElement.sample()Ljava/util/Map$Entry;
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction$MicrosphereSurfaceElement.store(DLjava/util/Map$Entry;)V
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.cosAngle(Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;)D
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value([D)D
org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolator.interpolate([[D[D)Lorg/apache/commons/math3/analysis/MultivariateFunction;
org.apache.commons.math3.analysis.interpolation.MicrosphereProjectionInterpolator$1.value([D)D
org.apache.commons.math3.analysis.interpolation.MicrosphereProjectionInterpolator.access$000(Lorg/apache/commons/math3/analysis/interpolation/MicrosphereProjectionInterpolator;)D
org.apache.commons.math3.analysis.interpolation.MicrosphereProjectionInterpolator.access$100(Lorg/apache/commons/math3/analysis/interpolation/MicrosphereProjectionInterpolator;)D
org.apache.commons.math3.analysis.interpolation.MicrosphereProjectionInterpolator.interpolate([[D[D)Lorg/apache/commons/math3/analysis/MultivariateFunction;
org.apache.commons.math3.analysis.interpolation.NevilleInterpolator.interpolate([D[D)Lorg/apache/commons/math3/analysis/UnivariateFunction;
org.apache.commons.math3.analysis.interpolation.NevilleInterpolator.interpolate([D[D)Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunctionLagrangeForm;
org.apache.commons.math3.analysis.interpolation.PiecewiseBicubicSplineInterpolatingFunction.isValidPoint(DD)Z
org.apache.commons.math3.analysis.interpolation.PiecewiseBicubicSplineInterpolatingFunction.searchIndex(D[DII)I
org.apache.commons.math3.analysis.interpolation.PiecewiseBicubicSplineInterpolatingFunction.value(DD)D
org.apache.commons.math3.analysis.interpolation.PiecewiseBicubicSplineInterpolator.interpolate([D[D[[D)Lorg/apache/commons/math3/analysis/BivariateFunction;
org.apache.commons.math3.analysis.interpolation.PiecewiseBicubicSplineInterpolator.interpolate([D[D[[D)Lorg/apache/commons/math3/analysis/interpolation/PiecewiseBicubicSplineInterpolatingFunction;
org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolator.interpolate([D[D[[D)Lorg/apache/commons/math3/analysis/BivariateFunction;
org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolator.interpolate([D[D[[D)Lorg/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction;
org.apache.commons.math3.analysis.interpolation.SplineInterpolator.interpolate([D[D)Lorg/apache/commons/math3/analysis/UnivariateFunction;
org.apache.commons.math3.analysis.interpolation.SplineInterpolator.interpolate([D[D)Lorg/apache/commons/math3/analysis/polynomials/PolynomialSplineFunction;
org.apache.commons.math3.analysis.interpolation.TricubicFunction.value(DDD)D
org.apache.commons.math3.analysis.interpolation.TricubicInterpolatingFunction.computeCoefficients([D)[D
org.apache.commons.math3.analysis.interpolation.TricubicInterpolatingFunction.isValidPoint(DDD)Z
org.apache.commons.math3.analysis.interpolation.TricubicInterpolatingFunction.searchIndex(D[D)I
org.apache.commons.math3.analysis.interpolation.TricubicInterpolatingFunction.value(DDD)D
org.apache.commons.math3.analysis.interpolation.TricubicInterpolator$1.isValidPoint(DDD)Z
org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate([D[D[D[[[D)Lorg/apache/commons/math3/analysis/TrivariateFunction;
org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate([D[D[D[[[D)Lorg/apache/commons/math3/analysis/interpolation/TricubicInterpolatingFunction;
org.apache.commons.math3.analysis.interpolation.TricubicSplineFunction.value(DDD)D
org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction.computeSplineCoefficients([D)[D
org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction.searchIndex(D[D)I
org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction.value(DDD)D
org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolator.interpolate([D[D[D[[[D)Lorg/apache/commons/math3/analysis/TrivariateFunction;
org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolator.interpolate([D[D[D[[[D)Lorg/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatingFunction;
org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolator.nextIndex(II)I
org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolator.previousIndex(I)I
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(D)D
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator.access$000(Lorg/apache/commons/math3/analysis/interpolation/UnivariatePeriodicInterpolator;)D
org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator.interpolate([D[D)Lorg/apache/commons/math3/analysis/UnivariateFunction;
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric.gradient(D[D)[D
org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric.value(D[D)D
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.add(Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;)Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.degree()I
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.differentiate([D)[D
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.equals(Ljava/lang/Object;)Z
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.evaluate([DD)D
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.getCoefficients()[D
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.hashCode()I
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.multiply(Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;)Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.negate()Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.polynomialDerivative()Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.subtract(Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;)Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.toString()Ljava/lang/String;
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(D)D
org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm.computeCoefficients()V
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm.degree()I
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm.evaluate([D[DD)D
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm.evaluateInternal([D[DD)D
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm.getCoefficients()[D
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm.getInterpolatingPoints()[D
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm.getInterpolatingValues()[D
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm.value(D)D
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm.verifyInterpolationArray([D[DZ)Z
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.computeCoefficients()V
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.degree()I
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.evaluate([D[DD)D
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.getCenters()[D
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.getCoefficients()[D
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.getNewtonCoefficients()[D
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.value(D)D
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.verifyInputArray([D[D)V
org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;
org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.getKnots()[D
org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.getN()I
org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.getPolynomials()[Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;
org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.isValidPoint(D)Z
org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.polynomialSplineDerivative()Lorg/apache/commons/math3/analysis/polynomials/PolynomialSplineFunction;
org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.value(D)D
org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$1.generate(I)[Lorg/apache/commons/math3/fraction/BigFraction;
org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$2.generate(I)[Lorg/apache/commons/math3/fraction/BigFraction;
org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$3.generate(I)[Lorg/apache/commons/math3/fraction/BigFraction;
org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$4.generate(I)[Lorg/apache/commons/math3/fraction/BigFraction;
org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5.generate(I)[Lorg/apache/commons/math3/fraction/BigFraction;
org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$JacobiKey.equals(Ljava/lang/Object;)Z
org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$JacobiKey.hashCode()I
org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.shift([DD)[D
org.apache.commons.math3.analysis.solvers.AbstractDifferentiableUnivariateSolver.computeDerivativeObjectiveValue(D)D
org.apache.commons.math3.analysis.solvers.AbstractDifferentiableUnivariateSolver.setup(ILorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;DDD)V
org.apache.commons.math3.analysis.solvers.AbstractDifferentiableUnivariateSolver.setup(ILorg/apache/commons/math3/analysis/UnivariateFunction;DDD)V
org.apache.commons.math3.analysis.solvers.AbstractPolynomialSolver.getCoefficients()[D
org.apache.commons.math3.analysis.solvers.AbstractPolynomialSolver.setup(ILorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;DDD)V
org.apache.commons.math3.analysis.solvers.AbstractUnivariateDifferentiableSolver.computeObjectiveValueAndDerivative(D)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.analysis.solvers.AbstractUnivariateDifferentiableSolver.setup(ILorg/apache/commons/math3/analysis/UnivariateFunction;DDD)V
org.apache.commons.math3.analysis.solvers.AbstractUnivariateDifferentiableSolver.setup(ILorg/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction;DDD)V
org.apache.commons.math3.analysis.solvers.AllowedSolution.valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/analysis/solvers/AllowedSolution;
org.apache.commons.math3.analysis.solvers.AllowedSolution.values()[Lorg/apache/commons/math3/analysis/solvers/AllowedSolution;
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.computeObjectiveValue(D)D
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getAbsoluteAccuracy()D
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getFunctionValueAccuracy()D
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getMax()D
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getMin()D
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getRelativeAccuracy()D
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getStartValue()D
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.incrementEvaluationCount()V
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.isBracketing(DD)Z
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.isSequence(DDD)Z
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.setup(ILorg/apache/commons/math3/analysis/UnivariateFunction;DDD)V
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.solve(ILorg/apache/commons/math3/analysis/UnivariateFunction;D)D
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.solve(ILorg/apache/commons/math3/analysis/UnivariateFunction;DD)D
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.solve(ILorg/apache/commons/math3/analysis/UnivariateFunction;DDD)D
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.verifyBracketing(DD)V
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.verifyInterval(DD)V
org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.verifySequence(DDD)V
org.apache.commons.math3.analysis.solvers.BaseSecantSolver$Method.valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/analysis/solvers/BaseSecantSolver$Method;
org.apache.commons.math3.analysis.solvers.BaseSecantSolver$Method.values()[Lorg/apache/commons/math3/analysis/solvers/BaseSecantSolver$Method;
org.apache.commons.math3.analysis.solvers.BisectionSolver.doSolve()D
org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolver.doSolve()D
org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolver.getMaximalOrder()I
org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolver.guessX(D[D[DII)D
org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolver.solve(ILorg/apache/commons/math3/analysis/UnivariateFunction;DDDLorg/apache/commons/math3/analysis/solvers/AllowedSolution;)D
org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolver.solve(ILorg/apache/commons/math3/analysis/UnivariateFunction;DDLorg/apache/commons/math3/analysis/solvers/AllowedSolution;)D
org.apache.commons.math3.analysis.solvers.BrentSolver.brent(DDDD)D
org.apache.commons.math3.analysis.solvers.BrentSolver.doSolve()D
org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver.getAbsoluteAccuracy()Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver.getEvaluations()I
org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver.getFunctionValueAccuracy()Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver.getMaxEvaluations()I
org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver.getMaximalOrder()I
org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver.getRelativeAccuracy()Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver.guessX(Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;II)Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver.solve(ILorg/apache/commons/math3/analysis/RealFieldUnivariateFunction;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/analysis/solvers/AllowedSolution;)Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver.solve(ILorg/apache/commons/math3/analysis/RealFieldUnivariateFunction;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/analysis/solvers/AllowedSolution;)Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver.isRoot(DDLorg/apache/commons/math3/complex/Complex;)Z
org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver.solve([Lorg/apache/commons/math3/complex/Complex;Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;
org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver.solveAll([Lorg/apache/commons/math3/complex/Complex;Lorg/apache/commons/math3/complex/Complex;)[Lorg/apache/commons/math3/complex/Complex;
org.apache.commons.math3.analysis.solvers.LaguerreSolver.doSolve()D
org.apache.commons.math3.analysis.solvers.LaguerreSolver.laguerre(DDDD)D
org.apache.commons.math3.analysis.solvers.LaguerreSolver.solveAllComplex([DD)[Lorg/apache/commons/math3/complex/Complex;
org.apache.commons.math3.analysis.solvers.LaguerreSolver.solveAllComplex([DDI)[Lorg/apache/commons/math3/complex/Complex;
org.apache.commons.math3.analysis.solvers.LaguerreSolver.solveComplex([DD)Lorg/apache/commons/math3/complex/Complex;
org.apache.commons.math3.analysis.solvers.LaguerreSolver.solveComplex([DDI)Lorg/apache/commons/math3/complex/Complex;
org.apache.commons.math3.analysis.solvers.MullerSolver.doSolve()D
org.apache.commons.math3.analysis.solvers.MullerSolver.solve(DDDD)D
org.apache.commons.math3.analysis.solvers.MullerSolver2.doSolve()D
org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolver.doSolve()D
org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolver.solve(ILorg/apache/commons/math3/analysis/UnivariateFunction;DD)D
org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolver.solve(ILorg/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction;DD)D
org.apache.commons.math3.analysis.solvers.NewtonSolver.doSolve()D
org.apache.commons.math3.analysis.solvers.NewtonSolver.solve(ILorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;DD)D
org.apache.commons.math3.analysis.solvers.NewtonSolver.solve(ILorg/apache/commons/math3/analysis/UnivariateFunction;DD)D
org.apache.commons.math3.analysis.solvers.RiddersSolver.doSolve()D
org.apache.commons.math3.analysis.solvers.SecantSolver.doSolve()D
org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.solve(Lorg/apache/commons/math3/analysis/UnivariateFunction;DDD)D
org.apache.commons.math3.complex.Complex.abs()D
org.apache.commons.math3.complex.Complex.acos()Lorg/apache/commons/math3/complex/Complex;
org.apache.commons.math3.complex.Complex.add(D)Lorg/apache/commons/math3/complex/Complex;
org.apache.commons.math3.complex.Complex.add(Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.complex.Complex.add(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;
org.apache.commons.math3.complex.Complex.asin()Lorg/apache/commons/math3/complex/Complex;
org.apache.commons.math3.complex.Complex.atan()Lorg/apache/commons/math3/complex/Complex;
org.apache.commons.math3.complex.Complex.conjugate()Lorg/apache/commons/math3/complex/Complex;
org.apache.commons.math3.complex.Complex.cos()Lorg/apache/commons/math3/complex/Complex;
org.apache.commons.math3.complex.Complex.cosh()Lorg/apache/commons/math3/complex/Complex;
org.apache.commons.math3.complex.Complex.createComplex(DD)Lorg/apache/commons/math3/complex/Complex;
org.apache.commons.math3.complex.Complex.divide(D)Lorg/apache/commons/math3/complex/Complex;
org.apache.commons.math3.complex.Complex.divide(Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.complex.Complex.divide(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;
org.apache.commons.math3.complex.Complex.equals(Ljava/lang/Object;)Z
org.apache.commons.math3.complex.Complex.equals(Lorg/apache/commons/math3/complex/Complex;Lorg/apache/commons/math3/complex/Complex;)Z
org.apache.commons.math3.complex.Complex.equals(Lorg/apache/commons/math3/complex/Complex;Lorg/apache/commons/math3/complex/Complex;D)Z
org.apache.commons.math3.complex.Complex.equals(Lorg/apache/commons/math3/complex/Complex;Lorg/apache/commons/math3/complex/Complex;I)Z
org.apache.commons.math3.complex.Complex.equalsWithRelativeTolerance(Lorg/apache/commons/math3/complex/Complex;Lorg/apache/commons/math3/complex/Complex;D)Z
org.apache.commons.math3.complex.Complex.exp()Lorg/apache/commons/math3/complex/Complex;
org.apache.commons.math3.complex.Complex.getArgument()D
org.apache.commons.math3.complex.Complex.getField()Lorg/apache/commons/math3/Field;
org.apache.commons.math3.complex.Complex.getField()Lorg/apache/commons/math3/complex/ComplexField;
org.apache.commons.math3.complex.Complex.getImaginary()D
org.apache.commons.math3.complex.Complex.getReal()D
org.apache.commons.math3.complex.Complex.hashCode()I
org.apache.commons.math3.complex.Complex.isInfinite()Z
org.apache.commons.math3.complex.Complex.isNaN()Z
org.apache.commons.math3.complex.Complex.log()Lorg/apache/commons/math3/complex/Complex;
org.apache.commons.math3.complex.Complex.multiply(D)Lorg/apache/commons/math3/complex/Complex;
org.apache.commons.math3.complex.Complex.multiply(I)Ljava/lang/Object;
org.apache.commons.math3.complex.Complex.multiply(I)Lorg/apache/commons/math3/complex/Complex;
org.apache.commons.math3.complex.Complex.multiply(Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.complex.Complex.multiply(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;
org.apache.commons.math3.complex.Complex.negate()Ljava/lang/Object;
org.apache.commons.math3.complex.Complex.negate()Lorg/apache/commons/math3/complex/Complex;
org.apache.commons.math3.complex.Complex.nthRoot(I)Ljava/util/List;
org.apache.commons.math3.complex.Complex.pow(D)Lorg/apache/commons/math3/complex/Complex;
org.apache.commons.math3.complex.Complex.pow(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;
org.apache.commons.math3.complex.Complex.readResolve()Ljava/lang/Object;
org.apache.commons.math3.complex.Complex.reciprocal()Ljava/lang/Object;
org.apache.commons.math3.complex.Complex.reciprocal()Lorg/apache/commons/math3/complex/Complex;
org.apache.commons.math3.complex.Complex.sin()Lorg/apache/commons/math3/complex/Complex;
org.apache.commons.math3.complex.Complex.sinh()Lorg/apache/commons/math3/complex/Complex;
org.apache.commons.math3.complex.Complex.sqrt()Lorg/apache/commons/math3/complex/Complex;
org.apache.commons.math3.complex.Complex.sqrt1z()Lorg/apache/commons/math3/complex/Complex;
org.apache.commons.math3.complex.Complex.subtract(D)Lorg/apache/commons/math3/complex/Complex;
org.apache.commons.math3.complex.Complex.subtract(Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.complex.Complex.subtract(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;
org.apache.commons.math3.complex.Complex.tan()Lorg/apache/commons/math3/complex/Complex;
org.apache.commons.math3.complex.Complex.tanh()Lorg/apache/commons/math3/complex/Complex;
org.apache.commons.math3.complex.Complex.toString()Ljava/lang/String;
org.apache.commons.math3.complex.ComplexField$LazyHolder.access$000()Lorg/apache/commons/math3/complex/ComplexField;
org.apache.commons.math3.complex.ComplexField.getInstance()Lorg/apache/commons/math3/complex/ComplexField;
org.apache.commons.math3.complex.ComplexField.getOne()Ljava/lang/Object;
org.apache.commons.math3.complex.ComplexField.getOne()Lorg/apache/commons/math3/complex/Complex;
org.apache.commons.math3.complex.ComplexField.getRuntimeClass()Ljava/lang/Class;
org.apache.commons.math3.complex.ComplexField.getZero()Ljava/lang/Object;
org.apache.commons.math3.complex.ComplexField.getZero()Lorg/apache/commons/math3/complex/Complex;
org.apache.commons.math3.complex.ComplexField.readResolve()Ljava/lang/Object;
org.apache.commons.math3.complex.ComplexFormat.format(Ljava/lang/Double;)Ljava/lang/String;
org.apache.commons.math3.complex.ComplexFormat.format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;
org.apache.commons.math3.complex.ComplexFormat.format(Lorg/apache/commons/math3/complex/Complex;)Ljava/lang/String;
org.apache.commons.math3.complex.ComplexFormat.format(Lorg/apache/commons/math3/complex/Complex;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;
org.apache.commons.math3.complex.ComplexFormat.formatImaginary(DLjava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;
org.apache.commons.math3.complex.ComplexFormat.getAvailableLocales()[Ljava/util/Locale;
org.apache.commons.math3.complex.ComplexFormat.getImaginaryCharacter()Ljava/lang/String;
org.apache.commons.math3.complex.ComplexFormat.getImaginaryFormat()Ljava/text/NumberFormat;
org.apache.commons.math3.complex.ComplexFormat.getInstance()Lorg/apache/commons/math3/complex/ComplexFormat;
org.apache.commons.math3.complex.ComplexFormat.getInstance(Ljava/lang/String;Ljava/util/Locale;)Lorg/apache/commons/math3/complex/ComplexFormat;
org.apache.commons.math3.complex.ComplexFormat.getInstance(Ljava/util/Locale;)Lorg/apache/commons/math3/complex/ComplexFormat;
org.apache.commons.math3.complex.ComplexFormat.getRealFormat()Ljava/text/NumberFormat;
org.apache.commons.math3.complex.ComplexFormat.parse(Ljava/lang/String;)Lorg/apache/commons/math3/complex/Complex;
org.apache.commons.math3.complex.ComplexFormat.parse(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math3/complex/Complex;
org.apache.commons.math3.complex.ComplexUtils.convertToComplex([D)[Lorg/apache/commons/math3/complex/Complex;
org.apache.commons.math3.complex.Quaternion.add(Lorg/apache/commons/math3/complex/Quaternion;)Lorg/apache/commons/math3/complex/Quaternion;
org.apache.commons.math3.complex.Quaternion.add(Lorg/apache/commons/math3/complex/Quaternion;Lorg/apache/commons/math3/complex/Quaternion;)Lorg/apache/commons/math3/complex/Quaternion;
org.apache.commons.math3.complex.Quaternion.dotProduct(Lorg/apache/commons/math3/complex/Quaternion;)D
org.apache.commons.math3.complex.Quaternion.dotProduct(Lorg/apache/commons/math3/complex/Quaternion;Lorg/apache/commons/math3/complex/Quaternion;)D
org.apache.commons.math3.complex.Quaternion.equals(Ljava/lang/Object;)Z
org.apache.commons.math3.complex.Quaternion.equals(Lorg/apache/commons/math3/complex/Quaternion;D)Z
org.apache.commons.math3.complex.Quaternion.getConjugate()Lorg/apache/commons/math3/complex/Quaternion;
org.apache.commons.math3.complex.Quaternion.getInverse()Lorg/apache/commons/math3/complex/Quaternion;
org.apache.commons.math3.complex.Quaternion.getNorm()D
org.apache.commons.math3.complex.Quaternion.getPositivePolarForm()Lorg/apache/commons/math3/complex/Quaternion;
org.apache.commons.math3.complex.Quaternion.getQ0()D
org.apache.commons.math3.complex.Quaternion.getQ1()D
org.apache.commons.math3.complex.Quaternion.getQ2()D
org.apache.commons.math3.complex.Quaternion.getQ3()D
org.apache.commons.math3.complex.Quaternion.getScalarPart()D
org.apache.commons.math3.complex.Quaternion.getVectorPart()[D
org.apache.commons.math3.complex.Quaternion.hashCode()I
org.apache.commons.math3.complex.Quaternion.isPureQuaternion(D)Z
org.apache.commons.math3.complex.Quaternion.isUnitQuaternion(D)Z
org.apache.commons.math3.complex.Quaternion.multiply(D)Lorg/apache/commons/math3/complex/Quaternion;
org.apache.commons.math3.complex.Quaternion.multiply(Lorg/apache/commons/math3/complex/Quaternion;)Lorg/apache/commons/math3/complex/Quaternion;
org.apache.commons.math3.complex.Quaternion.multiply(Lorg/apache/commons/math3/complex/Quaternion;Lorg/apache/commons/math3/complex/Quaternion;)Lorg/apache/commons/math3/complex/Quaternion;
org.apache.commons.math3.complex.Quaternion.normalize()Lorg/apache/commons/math3/complex/Quaternion;
org.apache.commons.math3.complex.Quaternion.subtract(Lorg/apache/commons/math3/complex/Quaternion;)Lorg/apache/commons/math3/complex/Quaternion;
org.apache.commons.math3.complex.Quaternion.subtract(Lorg/apache/commons/math3/complex/Quaternion;Lorg/apache/commons/math3/complex/Quaternion;)Lorg/apache/commons/math3/complex/Quaternion;
org.apache.commons.math3.complex.Quaternion.toString()Ljava/lang/String;
org.apache.commons.math3.complex.RootsOfUnity.computeRoots(I)V
org.apache.commons.math3.complex.RootsOfUnity.getImaginary(I)D
org.apache.commons.math3.complex.RootsOfUnity.getNumberOfRoots()I
org.apache.commons.math3.complex.RootsOfUnity.getReal(I)D
org.apache.commons.math3.complex.RootsOfUnity.isCounterClockWise()Z
org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP$1.value(Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP$1.value(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP.getAbsoluteAccuracy()Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP.getAbsoluteAccuracy()Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP.getFunctionValueAccuracy()Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP.getFunctionValueAccuracy()Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP.getRelativeAccuracy()Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP.getRelativeAccuracy()Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP.solve(ILorg/apache/commons/math3/dfp/UnivariateDfpFunction;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/analysis/solvers/AllowedSolution;)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP.solve(ILorg/apache/commons/math3/dfp/UnivariateDfpFunction;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/analysis/solvers/AllowedSolution;)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.abs()Ljava/lang/Object;
org.apache.commons.math3.dfp.Dfp.abs()Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.acos()Ljava/lang/Object;
org.apache.commons.math3.dfp.Dfp.acos()Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.acosh()Ljava/lang/Object;
org.apache.commons.math3.dfp.Dfp.acosh()Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.add(D)Ljava/lang/Object;
org.apache.commons.math3.dfp.Dfp.add(D)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.add(Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.dfp.Dfp.add(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.align(I)I
org.apache.commons.math3.dfp.Dfp.asin()Ljava/lang/Object;
org.apache.commons.math3.dfp.Dfp.asin()Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.asinh()Ljava/lang/Object;
org.apache.commons.math3.dfp.Dfp.asinh()Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.atan()Ljava/lang/Object;
org.apache.commons.math3.dfp.Dfp.atan()Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.atan2(Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.dfp.Dfp.atan2(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.atanh()Ljava/lang/Object;
org.apache.commons.math3.dfp.Dfp.atanh()Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.cbrt()Ljava/lang/Object;
org.apache.commons.math3.dfp.Dfp.cbrt()Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.ceil()Ljava/lang/Object;
org.apache.commons.math3.dfp.Dfp.ceil()Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.classify()I
org.apache.commons.math3.dfp.Dfp.compare(Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;)I
org.apache.commons.math3.dfp.Dfp.complement(I)I
org.apache.commons.math3.dfp.Dfp.copySign(D)Ljava/lang/Object;
org.apache.commons.math3.dfp.Dfp.copySign(D)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.copySign(Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.dfp.Dfp.copySign(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.copysign(Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.cos()Ljava/lang/Object;
org.apache.commons.math3.dfp.Dfp.cos()Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.cosh()Ljava/lang/Object;
org.apache.commons.math3.dfp.Dfp.cosh()Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.dfp2sci()Ljava/lang/String;
org.apache.commons.math3.dfp.Dfp.dfp2string()Ljava/lang/String;
org.apache.commons.math3.dfp.Dfp.divide(D)Ljava/lang/Object;
org.apache.commons.math3.dfp.Dfp.divide(D)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.divide(I)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.divide(Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.dfp.Dfp.divide(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.dotrap(ILjava/lang/String;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.equals(Ljava/lang/Object;)Z
org.apache.commons.math3.dfp.Dfp.exp()Ljava/lang/Object;
org.apache.commons.math3.dfp.Dfp.exp()Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.expm1()Ljava/lang/Object;
org.apache.commons.math3.dfp.Dfp.expm1()Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.floor()Ljava/lang/Object;
org.apache.commons.math3.dfp.Dfp.floor()Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.getField()Lorg/apache/commons/math3/Field;
org.apache.commons.math3.dfp.Dfp.getField()Lorg/apache/commons/math3/dfp/DfpField;
org.apache.commons.math3.dfp.Dfp.getOne()Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.getRadixDigits()I
org.apache.commons.math3.dfp.Dfp.getReal()D
org.apache.commons.math3.dfp.Dfp.getTwo()Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.getZero()Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.greaterThan(Lorg/apache/commons/math3/dfp/Dfp;)Z
org.apache.commons.math3.dfp.Dfp.hashCode()I
org.apache.commons.math3.dfp.Dfp.hypot(Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.dfp.Dfp.hypot(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.intLog10()I
org.apache.commons.math3.dfp.Dfp.intValue()I
org.apache.commons.math3.dfp.Dfp.isInfinite()Z
org.apache.commons.math3.dfp.Dfp.isNaN()Z
org.apache.commons.math3.dfp.Dfp.isZero()Z
org.apache.commons.math3.dfp.Dfp.lessThan(Lorg/apache/commons/math3/dfp/Dfp;)Z
org.apache.commons.math3.dfp.Dfp.linearCombination(DLjava/lang/Object;DLjava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.dfp.Dfp.linearCombination(DLjava/lang/Object;DLjava/lang/Object;DLjava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.dfp.Dfp.linearCombination(DLjava/lang/Object;DLjava/lang/Object;DLjava/lang/Object;DLjava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.dfp.Dfp.linearCombination(DLorg/apache/commons/math3/dfp/Dfp;DLorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.linearCombination(DLorg/apache/commons/math3/dfp/Dfp;DLorg/apache/commons/math3/dfp/Dfp;DLorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.linearCombination(DLorg/apache/commons/math3/dfp/Dfp;DLorg/apache/commons/math3/dfp/Dfp;DLorg/apache/commons/math3/dfp/Dfp;DLorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.linearCombination(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.dfp.Dfp.linearCombination(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.dfp.Dfp.linearCombination(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.dfp.Dfp.linearCombination(Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.linearCombination(Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.linearCombination(Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.linearCombination([D[Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.dfp.Dfp.linearCombination([D[Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.linearCombination([Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.dfp.Dfp.linearCombination([Lorg/apache/commons/math3/dfp/Dfp;[Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.log()Ljava/lang/Object;
org.apache.commons.math3.dfp.Dfp.log()Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.log10()I
org.apache.commons.math3.dfp.Dfp.log10K()I
org.apache.commons.math3.dfp.Dfp.log1p()Ljava/lang/Object;
org.apache.commons.math3.dfp.Dfp.log1p()Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.multiply(D)Ljava/lang/Object;
org.apache.commons.math3.dfp.Dfp.multiply(D)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.multiply(I)Ljava/lang/Object;
org.apache.commons.math3.dfp.Dfp.multiply(I)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.multiply(Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.dfp.Dfp.multiply(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.multiplyFast(I)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.negate()Ljava/lang/Object;
org.apache.commons.math3.dfp.Dfp.negate()Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.negativeOrNull()Z
org.apache.commons.math3.dfp.Dfp.newInstance()Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.newInstance(B)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.newInstance(BB)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.newInstance(D)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.newInstance(I)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.newInstance(J)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.newInstance(Ljava/lang/String;)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.newInstance(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.nextAfter(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.positiveOrNull()Z
org.apache.commons.math3.dfp.Dfp.pow(D)Ljava/lang/Object;
org.apache.commons.math3.dfp.Dfp.pow(D)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.pow(I)Ljava/lang/Object;
org.apache.commons.math3.dfp.Dfp.pow(I)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.pow(Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.dfp.Dfp.pow(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.power10(I)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.power10K(I)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.reciprocal()Ljava/lang/Object;
org.apache.commons.math3.dfp.Dfp.reciprocal()Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.remainder(D)Ljava/lang/Object;
org.apache.commons.math3.dfp.Dfp.remainder(D)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.remainder(Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.dfp.Dfp.remainder(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.rint()Ljava/lang/Object;
org.apache.commons.math3.dfp.Dfp.rint()Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.rootN(I)Ljava/lang/Object;
org.apache.commons.math3.dfp.Dfp.rootN(I)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.round()J
org.apache.commons.math3.dfp.Dfp.round(I)I
org.apache.commons.math3.dfp.Dfp.scalb(I)Ljava/lang/Object;
org.apache.commons.math3.dfp.Dfp.scalb(I)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.shiftLeft()V
org.apache.commons.math3.dfp.Dfp.shiftRight()V
org.apache.commons.math3.dfp.Dfp.signum()Ljava/lang/Object;
org.apache.commons.math3.dfp.Dfp.signum()Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.sin()Ljava/lang/Object;
org.apache.commons.math3.dfp.Dfp.sin()Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.sinh()Ljava/lang/Object;
org.apache.commons.math3.dfp.Dfp.sinh()Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.sqrt()Ljava/lang/Object;
org.apache.commons.math3.dfp.Dfp.sqrt()Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.strictlyNegative()Z
org.apache.commons.math3.dfp.Dfp.strictlyPositive()Z
org.apache.commons.math3.dfp.Dfp.subtract(D)Ljava/lang/Object;
org.apache.commons.math3.dfp.Dfp.subtract(D)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.subtract(Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.dfp.Dfp.subtract(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.tan()Ljava/lang/Object;
org.apache.commons.math3.dfp.Dfp.tan()Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.tanh()Ljava/lang/Object;
org.apache.commons.math3.dfp.Dfp.tanh()Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.toDouble()D
org.apache.commons.math3.dfp.Dfp.toSplitDouble()[D
org.apache.commons.math3.dfp.Dfp.toString()Ljava/lang/String;
org.apache.commons.math3.dfp.Dfp.trap(ILjava/lang/String;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.trunc(Lorg/apache/commons/math3/dfp/DfpField$RoundingMode;)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.Dfp.unequal(Lorg/apache/commons/math3/dfp/Dfp;)Z
org.apache.commons.math3.dfp.DfpDec.getDecimalDigits()I
org.apache.commons.math3.dfp.DfpDec.newInstance()Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpDec.newInstance(B)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpDec.newInstance(BB)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpDec.newInstance(D)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpDec.newInstance(I)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpDec.newInstance(J)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpDec.newInstance(Ljava/lang/String;)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpDec.newInstance(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpDec.nextAfter(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpDec.round(I)I
org.apache.commons.math3.dfp.DfpField$RoundingMode.valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/dfp/DfpField$RoundingMode;
org.apache.commons.math3.dfp.DfpField$RoundingMode.values()[Lorg/apache/commons/math3/dfp/DfpField$RoundingMode;
org.apache.commons.math3.dfp.DfpField.clearIEEEFlags()V
org.apache.commons.math3.dfp.DfpField.computeExp(Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpField.computeLn(Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpField.computePi(Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpField.getE()Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpField.getESplit()[Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpField.getIEEEFlags()I
org.apache.commons.math3.dfp.DfpField.getLn10()Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpField.getLn2()Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpField.getLn2Split()[Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpField.getLn5()Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpField.getLn5Split()[Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpField.getOne()Ljava/lang/Object;
org.apache.commons.math3.dfp.DfpField.getOne()Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpField.getPi()Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpField.getPiSplit()[Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpField.getRadixDigits()I
org.apache.commons.math3.dfp.DfpField.getRoundingMode()Lorg/apache/commons/math3/dfp/DfpField$RoundingMode;
org.apache.commons.math3.dfp.DfpField.getRuntimeClass()Ljava/lang/Class;
org.apache.commons.math3.dfp.DfpField.getSqr2()Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpField.getSqr2Reciprocal()Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpField.getSqr2Split()[Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpField.getSqr3()Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpField.getSqr3Reciprocal()Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpField.getTwo()Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpField.getZero()Ljava/lang/Object;
org.apache.commons.math3.dfp.DfpField.getZero()Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpField.newDfp()Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpField.newDfp(B)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpField.newDfp(BB)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpField.newDfp(D)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpField.newDfp(I)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpField.newDfp(J)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpField.newDfp(Ljava/lang/String;)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpField.newDfp(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpField.setIEEEFlags(I)V
org.apache.commons.math3.dfp.DfpField.setIEEEFlagsBits(I)V
org.apache.commons.math3.dfp.DfpField.setRoundingMode(Lorg/apache/commons/math3/dfp/DfpField$RoundingMode;)V
org.apache.commons.math3.dfp.DfpField.split(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpMath.acos(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpMath.asin(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpMath.atan(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpMath.atanInternal(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpMath.cos(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpMath.cosInternal([Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpMath.exp(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpMath.expInternal(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpMath.log(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpMath.logInternal([Lorg/apache/commons/math3/dfp/Dfp;)[Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpMath.pow(Lorg/apache/commons/math3/dfp/Dfp;I)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpMath.pow(Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpMath.sin(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpMath.sinInternal([Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpMath.split(Lorg/apache/commons/math3/dfp/Dfp;)[Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpMath.split(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpMath.splitDiv([Lorg/apache/commons/math3/dfp/Dfp;[Lorg/apache/commons/math3/dfp/Dfp;)[Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpMath.splitMult([Lorg/apache/commons/math3/dfp/Dfp;[Lorg/apache/commons/math3/dfp/Dfp;)[Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpMath.splitPow([Lorg/apache/commons/math3/dfp/Dfp;I)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.dfp.DfpMath.tan(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;
org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D
org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I
org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample()I
org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I
org.apache.commons.math3.distribution.AbstractMultivariateRealDistribution.getDimension()I
org.apache.commons.math3.distribution.AbstractMultivariateRealDistribution.reseedRandomGenerator(J)V
org.apache.commons.math3.distribution.AbstractRealDistribution$1.value(D)D
org.apache.commons.math3.distribution.AbstractRealDistribution.cumulativeProbability(DD)D
org.apache.commons.math3.distribution.AbstractRealDistribution.getSolverAbsoluteAccuracy()D
org.apache.commons.math3.distribution.AbstractRealDistribution.inverseCumulativeProbability(D)D
org.apache.commons.math3.distribution.AbstractRealDistribution.probability(DD)D
org.apache.commons.math3.distribution.AbstractRealDistribution.sample()D
org.apache.commons.math3.distribution.AbstractRealDistribution.sample(I)[D
org.apache.commons.math3.distribution.BetaDistribution$ChengBetaSampler.algorithmBB(Lorg/apache/commons/math3/random/RandomGenerator;DDD)D
org.apache.commons.math3.distribution.BetaDistribution$ChengBetaSampler.algorithmBC(Lorg/apache/commons/math3/random/RandomGenerator;DDD)D
org.apache.commons.math3.distribution.BetaDistribution$ChengBetaSampler.sample(Lorg/apache/commons/math3/random/RandomGenerator;DD)D
org.apache.commons.math3.distribution.BetaDistribution.cumulativeProbability(D)D
org.apache.commons.math3.distribution.BetaDistribution.density(D)D
org.apache.commons.math3.distribution.BetaDistribution.getAlpha()D
org.apache.commons.math3.distribution.BetaDistribution.getBeta()D
org.apache.commons.math3.distribution.BetaDistribution.getNumericalMean()D
org.apache.commons.math3.distribution.BetaDistribution.getNumericalVariance()D
org.apache.commons.math3.distribution.BetaDistribution.getSolverAbsoluteAccuracy()D
org.apache.commons.math3.distribution.BetaDistribution.getSupportLowerBound()D
org.apache.commons.math3.distribution.BetaDistribution.getSupportUpperBound()D
org.apache.commons.math3.distribution.BetaDistribution.isSupportConnected()Z
org.apache.commons.math3.distribution.BetaDistribution.isSupportLowerBoundInclusive()Z
org.apache.commons.math3.distribution.BetaDistribution.isSupportUpperBoundInclusive()Z
org.apache.commons.math3.distribution.BetaDistribution.logDensity(D)D
org.apache.commons.math3.distribution.BetaDistribution.recomputeZ()V
org.apache.commons.math3.distribution.BetaDistribution.sample()D
org.apache.commons.math3.distribution.BinomialDistribution.cumulativeProbability(I)D
org.apache.commons.math3.distribution.BinomialDistribution.getNumberOfTrials()I
org.apache.commons.math3.distribution.BinomialDistribution.getNumericalMean()D
org.apache.commons.math3.distribution.BinomialDistribution.getNumericalVariance()D
org.apache.commons.math3.distribution.BinomialDistribution.getProbabilityOfSuccess()D
org.apache.commons.math3.distribution.BinomialDistribution.getSupportLowerBound()I
org.apache.commons.math3.distribution.BinomialDistribution.getSupportUpperBound()I
org.apache.commons.math3.distribution.BinomialDistribution.isSupportConnected()Z
org.apache.commons.math3.distribution.BinomialDistribution.logProbability(I)D
org.apache.commons.math3.distribution.BinomialDistribution.probability(I)D
org.apache.commons.math3.distribution.CauchyDistribution.cumulativeProbability(D)D
org.apache.commons.math3.distribution.CauchyDistribution.density(D)D
org.apache.commons.math3.distribution.CauchyDistribution.getMedian()D
org.apache.commons.math3.distribution.CauchyDistribution.getNumericalMean()D
org.apache.commons.math3.distribution.CauchyDistribution.getNumericalVariance()D
org.apache.commons.math3.distribution.CauchyDistribution.getScale()D
org.apache.commons.math3.distribution.CauchyDistribution.getSolverAbsoluteAccuracy()D
org.apache.commons.math3.distribution.CauchyDistribution.getSupportLowerBound()D
org.apache.commons.math3.distribution.CauchyDistribution.getSupportUpperBound()D
org.apache.commons.math3.distribution.CauchyDistribution.inverseCumulativeProbability(D)D
org.apache.commons.math3.distribution.CauchyDistribution.isSupportConnected()Z
org.apache.commons.math3.distribution.CauchyDistribution.isSupportLowerBoundInclusive()Z
org.apache.commons.math3.distribution.CauchyDistribution.isSupportUpperBoundInclusive()Z
org.apache.commons.math3.distribution.ChiSquaredDistribution.cumulativeProbability(D)D
org.apache.commons.math3.distribution.ChiSquaredDistribution.density(D)D
org.apache.commons.math3.distribution.ChiSquaredDistribution.getDegreesOfFreedom()D
org.apache.commons.math3.distribution.ChiSquaredDistribution.getNumericalMean()D
org.apache.commons.math3.distribution.ChiSquaredDistribution.getNumericalVariance()D
org.apache.commons.math3.distribution.ChiSquaredDistribution.getSolverAbsoluteAccuracy()D
org.apache.commons.math3.distribution.ChiSquaredDistribution.getSupportLowerBound()D
org.apache.commons.math3.distribution.ChiSquaredDistribution.getSupportUpperBound()D
org.apache.commons.math3.distribution.ChiSquaredDistribution.isSupportConnected()Z
org.apache.commons.math3.distribution.ChiSquaredDistribution.isSupportLowerBoundInclusive()Z
org.apache.commons.math3.distribution.ChiSquaredDistribution.isSupportUpperBoundInclusive()Z
org.apache.commons.math3.distribution.ChiSquaredDistribution.logDensity(D)D
org.apache.commons.math3.distribution.ConstantRealDistribution.cumulativeProbability(D)D
org.apache.commons.math3.distribution.ConstantRealDistribution.density(D)D
org.apache.commons.math3.distribution.ConstantRealDistribution.getNumericalMean()D
org.apache.commons.math3.distribution.ConstantRealDistribution.getNumericalVariance()D
org.apache.commons.math3.distribution.ConstantRealDistribution.getSupportLowerBound()D
org.apache.commons.math3.distribution.ConstantRealDistribution.getSupportUpperBound()D
org.apache.commons.math3.distribution.ConstantRealDistribution.inverseCumulativeProbability(D)D
org.apache.commons.math3.distribution.ConstantRealDistribution.isSupportConnected()Z
org.apache.commons.math3.distribution.ConstantRealDistribution.isSupportLowerBoundInclusive()Z
org.apache.commons.math3.distribution.ConstantRealDistribution.isSupportUpperBoundInclusive()Z
org.apache.commons.math3.distribution.ConstantRealDistribution.reseedRandomGenerator(J)V
org.apache.commons.math3.distribution.ConstantRealDistribution.sample()D
org.apache.commons.math3.distribution.EnumeratedDistribution.getPmf()Ljava/util/List;
org.apache.commons.math3.distribution.EnumeratedDistribution.probability(Ljava/lang/Object;)D
org.apache.commons.math3.distribution.EnumeratedDistribution.reseedRandomGenerator(J)V
org.apache.commons.math3.distribution.EnumeratedDistribution.sample()Ljava/lang/Object;
org.apache.commons.math3.distribution.EnumeratedDistribution.sample(I)[Ljava/lang/Object;
org.apache.commons.math3.distribution.EnumeratedDistribution.sample(I[Ljava/lang/Object;)[Ljava/lang/Object;
org.apache.commons.math3.distribution.EnumeratedIntegerDistribution.createDistribution([I[D)Ljava/util/List;
org.apache.commons.math3.distribution.EnumeratedIntegerDistribution.cumulativeProbability(I)D
org.apache.commons.math3.distribution.EnumeratedIntegerDistribution.getNumericalMean()D
org.apache.commons.math3.distribution.EnumeratedIntegerDistribution.getNumericalVariance()D
org.apache.commons.math3.distribution.EnumeratedIntegerDistribution.getSupportLowerBound()I
org.apache.commons.math3.distribution.EnumeratedIntegerDistribution.getSupportUpperBound()I
org.apache.commons.math3.distribution.EnumeratedIntegerDistribution.isSupportConnected()Z
org.apache.commons.math3.distribution.EnumeratedIntegerDistribution.probability(I)D
org.apache.commons.math3.distribution.EnumeratedIntegerDistribution.sample()I
org.apache.commons.math3.distribution.EnumeratedRealDistribution.createDistribution([D[D)Ljava/util/List;
org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(D)D
org.apache.commons.math3.distribution.EnumeratedRealDistribution.density(D)D
org.apache.commons.math3.distribution.EnumeratedRealDistribution.getNumericalMean()D
org.apache.commons.math3.distribution.EnumeratedRealDistribution.getNumericalVariance()D
org.apache.commons.math3.distribution.EnumeratedRealDistribution.getSupportLowerBound()D
org.apache.commons.math3.distribution.EnumeratedRealDistribution.getSupportUpperBound()D
org.apache.commons.math3.distribution.EnumeratedRealDistribution.inverseCumulativeProbability(D)D
org.apache.commons.math3.distribution.EnumeratedRealDistribution.isSupportConnected()Z
org.apache.commons.math3.distribution.EnumeratedRealDistribution.isSupportLowerBoundInclusive()Z
org.apache.commons.math3.distribution.EnumeratedRealDistribution.isSupportUpperBoundInclusive()Z
org.apache.commons.math3.distribution.EnumeratedRealDistribution.probability(D)D
org.apache.commons.math3.distribution.EnumeratedRealDistribution.sample()D
org.apache.commons.math3.distribution.ExponentialDistribution.cumulativeProbability(D)D
org.apache.commons.math3.distribution.ExponentialDistribution.density(D)D
org.apache.commons.math3.distribution.ExponentialDistribution.getMean()D
org.apache.commons.math3.distribution.ExponentialDistribution.getNumericalMean()D
org.apache.commons.math3.distribution.ExponentialDistribution.getNumericalVariance()D
org.apache.commons.math3.distribution.ExponentialDistribution.getSolverAbsoluteAccuracy()D
org.apache.commons.math3.distribution.ExponentialDistribution.getSupportLowerBound()D
org.apache.commons.math3.distribution.ExponentialDistribution.getSupportUpperBound()D
org.apache.commons.math3.distribution.ExponentialDistribution.inverseCumulativeProbability(D)D
org.apache.commons.math3.distribution.ExponentialDistribution.isSupportConnected()Z
org.apache.commons.math3.distribution.ExponentialDistribution.isSupportLowerBoundInclusive()Z
org.apache.commons.math3.distribution.ExponentialDistribution.isSupportUpperBoundInclusive()Z
org.apache.commons.math3.distribution.ExponentialDistribution.logDensity(D)D
org.apache.commons.math3.distribution.ExponentialDistribution.sample()D
org.apache.commons.math3.distribution.FDistribution.calculateNumericalVariance()D
org.apache.commons.math3.distribution.FDistribution.cumulativeProbability(D)D
org.apache.commons.math3.distribution.FDistribution.density(D)D
org.apache.commons.math3.distribution.FDistribution.getDenominatorDegreesOfFreedom()D
org.apache.commons.math3.distribution.FDistribution.getNumeratorDegreesOfFreedom()D
org.apache.commons.math3.distribution.FDistribution.getNumericalMean()D
org.apache.commons.math3.distribution.FDistribution.getNumericalVariance()D
org.apache.commons.math3.distribution.FDistribution.getSolverAbsoluteAccuracy()D
org.apache.commons.math3.distribution.FDistribution.getSupportLowerBound()D
org.apache.commons.math3.distribution.FDistribution.getSupportUpperBound()D
org.apache.commons.math3.distribution.FDistribution.isSupportConnected()Z
org.apache.commons.math3.distribution.FDistribution.isSupportLowerBoundInclusive()Z
org.apache.commons.math3.distribution.FDistribution.isSupportUpperBoundInclusive()Z
org.apache.commons.math3.distribution.FDistribution.logDensity(D)D
org.apache.commons.math3.distribution.GammaDistribution.cumulativeProbability(D)D
org.apache.commons.math3.distribution.GammaDistribution.density(D)D
org.apache.commons.math3.distribution.GammaDistribution.getAlpha()D
org.apache.commons.math3.distribution.GammaDistribution.getBeta()D
org.apache.commons.math3.distribution.GammaDistribution.getNumericalMean()D
org.apache.commons.math3.distribution.GammaDistribution.getNumericalVariance()D
org.apache.commons.math3.distribution.GammaDistribution.getScale()D
org.apache.commons.math3.distribution.GammaDistribution.getShape()D
org.apache.commons.math3.distribution.GammaDistribution.getSolverAbsoluteAccuracy()D
org.apache.commons.math3.distribution.GammaDistribution.getSupportLowerBound()D
org.apache.commons.math3.distribution.GammaDistribution.getSupportUpperBound()D
org.apache.commons.math3.distribution.GammaDistribution.isSupportConnected()Z
org.apache.commons.math3.distribution.GammaDistribution.isSupportLowerBoundInclusive()Z
org.apache.commons.math3.distribution.GammaDistribution.isSupportUpperBoundInclusive()Z
org.apache.commons.math3.distribution.GammaDistribution.logDensity(D)D
org.apache.commons.math3.distribution.GammaDistribution.sample()D
org.apache.commons.math3.distribution.GeometricDistribution.cumulativeProbability(I)D
org.apache.commons.math3.distribution.GeometricDistribution.getNumericalMean()D
org.apache.commons.math3.distribution.GeometricDistribution.getNumericalVariance()D
org.apache.commons.math3.distribution.GeometricDistribution.getProbabilityOfSuccess()D
org.apache.commons.math3.distribution.GeometricDistribution.getSupportLowerBound()I
org.apache.commons.math3.distribution.GeometricDistribution.getSupportUpperBound()I
org.apache.commons.math3.distribution.GeometricDistribution.inverseCumulativeProbability(D)I
org.apache.commons.math3.distribution.GeometricDistribution.isSupportConnected()Z
org.apache.commons.math3.distribution.GeometricDistribution.logProbability(I)D
org.apache.commons.math3.distribution.GeometricDistribution.probability(I)D
org.apache.commons.math3.distribution.GumbelDistribution.cumulativeProbability(D)D
org.apache.commons.math3.distribution.GumbelDistribution.density(D)D
org.apache.commons.math3.distribution.GumbelDistribution.getLocation()D
org.apache.commons.math3.distribution.GumbelDistribution.getNumericalMean()D
org.apache.commons.math3.distribution.GumbelDistribution.getNumericalVariance()D
org.apache.commons.math3.distribution.GumbelDistribution.getScale()D
org.apache.commons.math3.distribution.GumbelDistribution.getSupportLowerBound()D
org.apache.commons.math3.distribution.GumbelDistribution.getSupportUpperBound()D
org.apache.commons.math3.distribution.GumbelDistribution.inverseCumulativeProbability(D)D
org.apache.commons.math3.distribution.GumbelDistribution.isSupportConnected()Z
org.apache.commons.math3.distribution.GumbelDistribution.isSupportLowerBoundInclusive()Z
org.apache.commons.math3.distribution.GumbelDistribution.isSupportUpperBoundInclusive()Z
org.apache.commons.math3.distribution.HypergeometricDistribution.calculateNumericalVariance()D
org.apache.commons.math3.distribution.HypergeometricDistribution.cumulativeProbability(I)D
org.apache.commons.math3.distribution.HypergeometricDistribution.getDomain(III)[I
org.apache.commons.math3.distribution.HypergeometricDistribution.getLowerDomain(III)I
org.apache.commons.math3.distribution.HypergeometricDistribution.getNumberOfSuccesses()I
org.apache.commons.math3.distribution.HypergeometricDistribution.getNumericalMean()D
org.apache.commons.math3.distribution.HypergeometricDistribution.getNumericalVariance()D
org.apache.commons.math3.distribution.HypergeometricDistribution.getPopulationSize()I
org.apache.commons.math3.distribution.HypergeometricDistribution.getSampleSize()I
org.apache.commons.math3.distribution.HypergeometricDistribution.getSupportLowerBound()I
org.apache.commons.math3.distribution.HypergeometricDistribution.getSupportUpperBound()I
org.apache.commons.math3.distribution.HypergeometricDistribution.getUpperDomain(II)I
org.apache.commons.math3.distribution.HypergeometricDistribution.innerCumulativeProbability(III)D
org.apache.commons.math3.distribution.HypergeometricDistribution.isSupportConnected()Z
org.apache.commons.math3.distribution.HypergeometricDistribution.logProbability(I)D
org.apache.commons.math3.distribution.HypergeometricDistribution.probability(I)D
org.apache.commons.math3.distribution.HypergeometricDistribution.upperCumulativeProbability(I)D
org.apache.commons.math3.distribution.KolmogorovSmirnovDistribution.cdf(D)D
org.apache.commons.math3.distribution.KolmogorovSmirnovDistribution.cdf(DZ)D
org.apache.commons.math3.distribution.KolmogorovSmirnovDistribution.cdfExact(D)D
org.apache.commons.math3.distribution.KolmogorovSmirnovDistribution.createH(D)Lorg/apache/commons/math3/linear/FieldMatrix;
org.apache.commons.math3.distribution.KolmogorovSmirnovDistribution.exactK(D)D
org.apache.commons.math3.distribution.KolmogorovSmirnovDistribution.roundedK(D)D
org.apache.commons.math3.distribution.LaplaceDistribution.cumulativeProbability(D)D
org.apache.commons.math3.distribution.LaplaceDistribution.density(D)D
org.apache.commons.math3.distribution.LaplaceDistribution.getLocation()D
org.apache.commons.math3.distribution.LaplaceDistribution.getNumericalMean()D
org.apache.commons.math3.distribution.LaplaceDistribution.getNumericalVariance()D
org.apache.commons.math3.distribution.LaplaceDistribution.getScale()D
org.apache.commons.math3.distribution.LaplaceDistribution.getSupportLowerBound()D
org.apache.commons.math3.distribution.LaplaceDistribution.getSupportUpperBound()D
org.apache.commons.math3.distribution.LaplaceDistribution.inverseCumulativeProbability(D)D
org.apache.commons.math3.distribution.LaplaceDistribution.isSupportConnected()Z
org.apache.commons.math3.distribution.LaplaceDistribution.isSupportLowerBoundInclusive()Z
org.apache.commons.math3.distribution.LaplaceDistribution.isSupportUpperBoundInclusive()Z
org.apache.commons.math3.distribution.LevyDistribution.cumulativeProbability(D)D
org.apache.commons.math3.distribution.LevyDistribution.density(D)D
org.apache.commons.math3.distribution.LevyDistribution.getLocation()D
org.apache.commons.math3.distribution.LevyDistribution.getNumericalMean()D
org.apache.commons.math3.distribution.LevyDistribution.getNumericalVariance()D
org.apache.commons.math3.distribution.LevyDistribution.getScale()D
org.apache.commons.math3.distribution.LevyDistribution.getSupportLowerBound()D
org.apache.commons.math3.distribution.LevyDistribution.getSupportUpperBound()D
org.apache.commons.math3.distribution.LevyDistribution.inverseCumulativeProbability(D)D
org.apache.commons.math3.distribution.LevyDistribution.isSupportConnected()Z
org.apache.commons.math3.distribution.LevyDistribution.isSupportLowerBoundInclusive()Z
org.apache.commons.math3.distribution.LevyDistribution.isSupportUpperBoundInclusive()Z
org.apache.commons.math3.distribution.LevyDistribution.logDensity(D)D
org.apache.commons.math3.distribution.LogNormalDistribution.cumulativeProbability(D)D
org.apache.commons.math3.distribution.LogNormalDistribution.cumulativeProbability(DD)D
org.apache.commons.math3.distribution.LogNormalDistribution.density(D)D
org.apache.commons.math3.distribution.LogNormalDistribution.getNumericalMean()D
org.apache.commons.math3.distribution.LogNormalDistribution.getNumericalVariance()D
org.apache.commons.math3.distribution.LogNormalDistribution.getScale()D
org.apache.commons.math3.distribution.LogNormalDistribution.getShape()D
org.apache.commons.math3.distribution.LogNormalDistribution.getSolverAbsoluteAccuracy()D
org.apache.commons.math3.distribution.LogNormalDistribution.getSupportLowerBound()D
org.apache.commons.math3.distribution.LogNormalDistribution.getSupportUpperBound()D
org.apache.commons.math3.distribution.LogNormalDistribution.isSupportConnected()Z
org.apache.commons.math3.distribution.LogNormalDistribution.isSupportLowerBoundInclusive()Z
org.apache.commons.math3.distribution.LogNormalDistribution.isSupportUpperBoundInclusive()Z
org.apache.commons.math3.distribution.LogNormalDistribution.logDensity(D)D
org.apache.commons.math3.distribution.LogNormalDistribution.probability(DD)D
org.apache.commons.math3.distribution.LogNormalDistribution.sample()D
org.apache.commons.math3.distribution.LogisticDistribution.cumulativeProbability(D)D
org.apache.commons.math3.distribution.LogisticDistribution.density(D)D
org.apache.commons.math3.distribution.LogisticDistribution.getLocation()D
org.apache.commons.math3.distribution.LogisticDistribution.getNumericalMean()D
org.apache.commons.math3.distribution.LogisticDistribution.getNumericalVariance()D
org.apache.commons.math3.distribution.LogisticDistribution.getScale()D
org.apache.commons.math3.distribution.LogisticDistribution.getSupportLowerBound()D
org.apache.commons.math3.distribution.LogisticDistribution.getSupportUpperBound()D
org.apache.commons.math3.distribution.LogisticDistribution.inverseCumulativeProbability(D)D
org.apache.commons.math3.distribution.LogisticDistribution.isSupportConnected()Z
org.apache.commons.math3.distribution.LogisticDistribution.isSupportLowerBoundInclusive()Z
org.apache.commons.math3.distribution.LogisticDistribution.isSupportUpperBoundInclusive()Z
org.apache.commons.math3.distribution.MixtureMultivariateNormalDistribution.createComponents([D[[D[[[D)Ljava/util/List;
org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution.density([D)D
org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution.getComponents()Ljava/util/List;
org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution.reseedRandomGenerator(J)V
org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution.sample()[D
org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D
org.apache.commons.math3.distribution.MultivariateNormalDistribution.getCovariances()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D
org.apache.commons.math3.distribution.MultivariateNormalDistribution.getMeans()[D
org.apache.commons.math3.distribution.MultivariateNormalDistribution.getStandardDeviations()[D
org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D
org.apache.commons.math3.distribution.NakagamiDistribution.cumulativeProbability(D)D
org.apache.commons.math3.distribution.NakagamiDistribution.density(D)D
org.apache.commons.math3.distribution.NakagamiDistribution.getNumericalMean()D
org.apache.commons.math3.distribution.NakagamiDistribution.getNumericalVariance()D
org.apache.commons.math3.distribution.NakagamiDistribution.getScale()D
org.apache.commons.math3.distribution.NakagamiDistribution.getShape()D
org.apache.commons.math3.distribution.NakagamiDistribution.getSolverAbsoluteAccuracy()D
org.apache.commons.math3.distribution.NakagamiDistribution.getSupportLowerBound()D
org.apache.commons.math3.distribution.NakagamiDistribution.getSupportUpperBound()D
org.apache.commons.math3.distribution.NakagamiDistribution.isSupportConnected()Z
org.apache.commons.math3.distribution.NakagamiDistribution.isSupportLowerBoundInclusive()Z
org.apache.commons.math3.distribution.NakagamiDistribution.isSupportUpperBoundInclusive()Z
org.apache.commons.math3.distribution.NormalDistribution.cumulativeProbability(D)D
org.apache.commons.math3.distribution.NormalDistribution.cumulativeProbability(DD)D
org.apache.commons.math3.distribution.NormalDistribution.density(D)D
org.apache.commons.math3.distribution.NormalDistribution.getMean()D
org.apache.commons.math3.distribution.NormalDistribution.getNumericalMean()D
org.apache.commons.math3.distribution.NormalDistribution.getNumericalVariance()D
org.apache.commons.math3.distribution.NormalDistribution.getSolverAbsoluteAccuracy()D
org.apache.commons.math3.distribution.NormalDistribution.getStandardDeviation()D
org.apache.commons.math3.distribution.NormalDistribution.getSupportLowerBound()D
org.apache.commons.math3.distribution.NormalDistribution.getSupportUpperBound()D
org.apache.commons.math3.distribution.NormalDistribution.inverseCumulativeProbability(D)D
org.apache.commons.math3.distribution.NormalDistribution.isSupportConnected()Z
org.apache.commons.math3.distribution.NormalDistribution.isSupportLowerBoundInclusive()Z
org.apache.commons.math3.distribution.NormalDistribution.isSupportUpperBoundInclusive()Z
org.apache.commons.math3.distribution.NormalDistribution.logDensity(D)D
org.apache.commons.math3.distribution.NormalDistribution.probability(DD)D
org.apache.commons.math3.distribution.NormalDistribution.sample()D
org.apache.commons.math3.distribution.ParetoDistribution.cumulativeProbability(D)D
org.apache.commons.math3.distribution.ParetoDistribution.cumulativeProbability(DD)D
org.apache.commons.math3.distribution.ParetoDistribution.density(D)D
org.apache.commons.math3.distribution.ParetoDistribution.getNumericalMean()D
org.apache.commons.math3.distribution.ParetoDistribution.getNumericalVariance()D
org.apache.commons.math3.distribution.ParetoDistribution.getScale()D
org.apache.commons.math3.distribution.ParetoDistribution.getShape()D
org.apache.commons.math3.distribution.ParetoDistribution.getSolverAbsoluteAccuracy()D
org.apache.commons.math3.distribution.ParetoDistribution.getSupportLowerBound()D
org.apache.commons.math3.distribution.ParetoDistribution.getSupportUpperBound()D
org.apache.commons.math3.distribution.ParetoDistribution.isSupportConnected()Z
org.apache.commons.math3.distribution.ParetoDistribution.isSupportLowerBoundInclusive()Z
org.apache.commons.math3.distribution.ParetoDistribution.isSupportUpperBoundInclusive()Z
org.apache.commons.math3.distribution.ParetoDistribution.logDensity(D)D
org.apache.commons.math3.distribution.ParetoDistribution.sample()D
org.apache.commons.math3.distribution.PascalDistribution.cumulativeProbability(I)D
org.apache.commons.math3.distribution.PascalDistribution.getNumberOfSuccesses()I
org.apache.commons.math3.distribution.PascalDistribution.getNumericalMean()D
org.apache.commons.math3.distribution.PascalDistribution.getNumericalVariance()D
org.apache.commons.math3.distribution.PascalDistribution.getProbabilityOfSuccess()D
org.apache.commons.math3.distribution.PascalDistribution.getSupportLowerBound()I
org.apache.commons.math3.distribution.PascalDistribution.getSupportUpperBound()I
org.apache.commons.math3.distribution.PascalDistribution.isSupportConnected()Z
org.apache.commons.math3.distribution.PascalDistribution.logProbability(I)D
org.apache.commons.math3.distribution.PascalDistribution.probability(I)D
org.apache.commons.math3.distribution.PoissonDistribution.cumulativeProbability(I)D
org.apache.commons.math3.distribution.PoissonDistribution.getMean()D
org.apache.commons.math3.distribution.PoissonDistribution.getNumericalMean()D
org.apache.commons.math3.distribution.PoissonDistribution.getNumericalVariance()D
org.apache.commons.math3.distribution.PoissonDistribution.getSupportLowerBound()I
org.apache.commons.math3.distribution.PoissonDistribution.getSupportUpperBound()I
org.apache.commons.math3.distribution.PoissonDistribution.isSupportConnected()Z
org.apache.commons.math3.distribution.PoissonDistribution.logProbability(I)D
org.apache.commons.math3.distribution.PoissonDistribution.nextPoisson(D)J
org.apache.commons.math3.distribution.PoissonDistribution.normalApproximateProbability(I)D
org.apache.commons.math3.distribution.PoissonDistribution.probability(I)D
org.apache.commons.math3.distribution.PoissonDistribution.sample()I
org.apache.commons.math3.distribution.TDistribution.cumulativeProbability(D)D
org.apache.commons.math3.distribution.TDistribution.density(D)D
org.apache.commons.math3.distribution.TDistribution.getDegreesOfFreedom()D
org.apache.commons.math3.distribution.TDistribution.getNumericalMean()D
org.apache.commons.math3.distribution.TDistribution.getNumericalVariance()D
org.apache.commons.math3.distribution.TDistribution.getSolverAbsoluteAccuracy()D
org.apache.commons.math3.distribution.TDistribution.getSupportLowerBound()D
org.apache.commons.math3.distribution.TDistribution.getSupportUpperBound()D
org.apache.commons.math3.distribution.TDistribution.isSupportConnected()Z
org.apache.commons.math3.distribution.TDistribution.isSupportLowerBoundInclusive()Z
org.apache.commons.math3.distribution.TDistribution.isSupportUpperBoundInclusive()Z
org.apache.commons.math3.distribution.TDistribution.logDensity(D)D
org.apache.commons.math3.distribution.TriangularDistribution.cumulativeProbability(D)D
org.apache.commons.math3.distribution.TriangularDistribution.density(D)D
org.apache.commons.math3.distribution.TriangularDistribution.getMode()D
org.apache.commons.math3.distribution.TriangularDistribution.getNumericalMean()D
org.apache.commons.math3.distribution.TriangularDistribution.getNumericalVariance()D
org.apache.commons.math3.distribution.TriangularDistribution.getSolverAbsoluteAccuracy()D
org.apache.commons.math3.distribution.TriangularDistribution.getSupportLowerBound()D
org.apache.commons.math3.distribution.TriangularDistribution.getSupportUpperBound()D
org.apache.commons.math3.distribution.TriangularDistribution.inverseCumulativeProbability(D)D
org.apache.commons.math3.distribution.TriangularDistribution.isSupportConnected()Z
org.apache.commons.math3.distribution.TriangularDistribution.isSupportLowerBoundInclusive()Z
org.apache.commons.math3.distribution.TriangularDistribution.isSupportUpperBoundInclusive()Z
org.apache.commons.math3.distribution.UniformIntegerDistribution.cumulativeProbability(I)D
org.apache.commons.math3.distribution.UniformIntegerDistribution.getNumericalMean()D
org.apache.commons.math3.distribution.UniformIntegerDistribution.getNumericalVariance()D
org.apache.commons.math3.distribution.UniformIntegerDistribution.getSupportLowerBound()I
org.apache.commons.math3.distribution.UniformIntegerDistribution.getSupportUpperBound()I
org.apache.commons.math3.distribution.UniformIntegerDistribution.isSupportConnected()Z
org.apache.commons.math3.distribution.UniformIntegerDistribution.probability(I)D
org.apache.commons.math3.distribution.UniformIntegerDistribution.sample()I
org.apache.commons.math3.distribution.UniformRealDistribution.cumulativeProbability(D)D
org.apache.commons.math3.distribution.UniformRealDistribution.density(D)D
org.apache.commons.math3.distribution.UniformRealDistribution.getNumericalMean()D
org.apache.commons.math3.distribution.UniformRealDistribution.getNumericalVariance()D
org.apache.commons.math3.distribution.UniformRealDistribution.getSupportLowerBound()D
org.apache.commons.math3.distribution.UniformRealDistribution.getSupportUpperBound()D
org.apache.commons.math3.distribution.UniformRealDistribution.inverseCumulativeProbability(D)D
org.apache.commons.math3.distribution.UniformRealDistribution.isSupportConnected()Z
org.apache.commons.math3.distribution.UniformRealDistribution.isSupportLowerBoundInclusive()Z
org.apache.commons.math3.distribution.UniformRealDistribution.isSupportUpperBoundInclusive()Z
org.apache.commons.math3.distribution.UniformRealDistribution.sample()D
org.apache.commons.math3.distribution.WeibullDistribution.calculateNumericalMean()D
org.apache.commons.math3.distribution.WeibullDistribution.calculateNumericalVariance()D
org.apache.commons.math3.distribution.WeibullDistribution.cumulativeProbability(D)D
org.apache.commons.math3.distribution.WeibullDistribution.density(D)D
org.apache.commons.math3.distribution.WeibullDistribution.getNumericalMean()D
org.apache.commons.math3.distribution.WeibullDistribution.getNumericalVariance()D
org.apache.commons.math3.distribution.WeibullDistribution.getScale()D
org.apache.commons.math3.distribution.WeibullDistribution.getShape()D
org.apache.commons.math3.distribution.WeibullDistribution.getSolverAbsoluteAccuracy()D
org.apache.commons.math3.distribution.WeibullDistribution.getSupportLowerBound()D
org.apache.commons.math3.distribution.WeibullDistribution.getSupportUpperBound()D
org.apache.commons.math3.distribution.WeibullDistribution.inverseCumulativeProbability(D)D
org.apache.commons.math3.distribution.WeibullDistribution.isSupportConnected()Z
org.apache.commons.math3.distribution.WeibullDistribution.isSupportLowerBoundInclusive()Z
org.apache.commons.math3.distribution.WeibullDistribution.isSupportUpperBoundInclusive()Z
org.apache.commons.math3.distribution.WeibullDistribution.logDensity(D)D
org.apache.commons.math3.distribution.ZipfDistribution$ZipfRejectionInversionSampler.h(D)D
org.apache.commons.math3.distribution.ZipfDistribution$ZipfRejectionInversionSampler.hIntegral(D)D
org.apache.commons.math3.distribution.ZipfDistribution$ZipfRejectionInversionSampler.hIntegralInverse(D)D
org.apache.commons.math3.distribution.ZipfDistribution$ZipfRejectionInversionSampler.sample(Lorg/apache/commons/math3/random/RandomGenerator;)I
org.apache.commons.math3.distribution.ZipfDistribution.calculateNumericalMean()D
org.apache.commons.math3.distribution.ZipfDistribution.calculateNumericalVariance()D
org.apache.commons.math3.distribution.ZipfDistribution.cumulativeProbability(I)D
org.apache.commons.math3.distribution.ZipfDistribution.generalizedHarmonic(ID)D
org.apache.commons.math3.distribution.ZipfDistribution.getExponent()D
org.apache.commons.math3.distribution.ZipfDistribution.getNumberOfElements()I
org.apache.commons.math3.distribution.ZipfDistribution.getNumericalMean()D
org.apache.commons.math3.distribution.ZipfDistribution.getNumericalVariance()D
org.apache.commons.math3.distribution.ZipfDistribution.getSupportLowerBound()I
org.apache.commons.math3.distribution.ZipfDistribution.getSupportUpperBound()I
org.apache.commons.math3.distribution.ZipfDistribution.isSupportConnected()Z
org.apache.commons.math3.distribution.ZipfDistribution.logProbability(I)D
org.apache.commons.math3.distribution.ZipfDistribution.probability(I)D
org.apache.commons.math3.distribution.ZipfDistribution.sample()I
org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization$DataRow.compareTo(Ljava/lang/Object;)I
org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization$DataRow.compareTo(Lorg/apache/commons/math3/distribution/fitting/MultivariateNormalMixtureExpectationMaximization$DataRow;)I
org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization$DataRow.equals(Ljava/lang/Object;)Z
org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization$DataRow.getRow()[D
org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization$DataRow.hashCode()I
org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization.estimate([[DI)Lorg/apache/commons/math3/distribution/MixtureMultivariateNormalDistribution;
org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization.fit(Lorg/apache/commons/math3/distribution/MixtureMultivariateNormalDistribution;)V
org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization.fit(Lorg/apache/commons/math3/distribution/MixtureMultivariateNormalDistribution;ID)V
org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization.getFittedModel()Lorg/apache/commons/math3/distribution/MixtureMultivariateNormalDistribution;
org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization.getLogLikelihood()D
org.apache.commons.math3.exception.DimensionMismatchException.getDimension()I
org.apache.commons.math3.exception.MathArithmeticException.getContext()Lorg/apache/commons/math3/exception/util/ExceptionContext;
org.apache.commons.math3.exception.MathArithmeticException.getLocalizedMessage()Ljava/lang/String;
org.apache.commons.math3.exception.MathArithmeticException.getMessage()Ljava/lang/String;
org.apache.commons.math3.exception.MathIllegalArgumentException.getContext()Lorg/apache/commons/math3/exception/util/ExceptionContext;
org.apache.commons.math3.exception.MathIllegalArgumentException.getLocalizedMessage()Ljava/lang/String;
org.apache.commons.math3.exception.MathIllegalArgumentException.getMessage()Ljava/lang/String;
org.apache.commons.math3.exception.MathIllegalNumberException.getArgument()Ljava/lang/Number;
org.apache.commons.math3.exception.MathIllegalStateException.getContext()Lorg/apache/commons/math3/exception/util/ExceptionContext;
org.apache.commons.math3.exception.MathIllegalStateException.getLocalizedMessage()Ljava/lang/String;
org.apache.commons.math3.exception.MathIllegalStateException.getMessage()Ljava/lang/String;
org.apache.commons.math3.exception.MathRuntimeException.getContext()Lorg/apache/commons/math3/exception/util/ExceptionContext;
org.apache.commons.math3.exception.MathRuntimeException.getLocalizedMessage()Ljava/lang/String;
org.apache.commons.math3.exception.MathRuntimeException.getMessage()Ljava/lang/String;
org.apache.commons.math3.exception.MathUnsupportedOperationException.getContext()Lorg/apache/commons/math3/exception/util/ExceptionContext;
org.apache.commons.math3.exception.MathUnsupportedOperationException.getLocalizedMessage()Ljava/lang/String;
org.apache.commons.math3.exception.MathUnsupportedOperationException.getMessage()Ljava/lang/String;
org.apache.commons.math3.exception.MaxCountExceededException.getMax()Ljava/lang/Number;
org.apache.commons.math3.exception.MultiDimensionMismatchException.getExpectedDimension(I)I
org.apache.commons.math3.exception.MultiDimensionMismatchException.getExpectedDimensions()[Ljava/lang/Integer;
org.apache.commons.math3.exception.MultiDimensionMismatchException.getWrongDimension(I)I
org.apache.commons.math3.exception.MultiDimensionMismatchException.getWrongDimensions()[Ljava/lang/Integer;
org.apache.commons.math3.exception.NoBracketingException.getFHi()D
org.apache.commons.math3.exception.NoBracketingException.getFLo()D
org.apache.commons.math3.exception.NoBracketingException.getHi()D
org.apache.commons.math3.exception.NoBracketingException.getLo()D
org.apache.commons.math3.exception.NonMonotonicSequenceException.getDirection()Lorg/apache/commons/math3/util/MathArrays$OrderDirection;
org.apache.commons.math3.exception.NonMonotonicSequenceException.getIndex()I
org.apache.commons.math3.exception.NonMonotonicSequenceException.getPrevious()Ljava/lang/Number;
org.apache.commons.math3.exception.NonMonotonicSequenceException.getStrict()Z
org.apache.commons.math3.exception.NumberIsTooLargeException.getBoundIsAllowed()Z
org.apache.commons.math3.exception.NumberIsTooLargeException.getMax()Ljava/lang/Number;
org.apache.commons.math3.exception.NumberIsTooSmallException.getBoundIsAllowed()Z
org.apache.commons.math3.exception.NumberIsTooSmallException.getMin()Ljava/lang/Number;
org.apache.commons.math3.exception.OutOfRangeException.getHi()Ljava/lang/Number;
org.apache.commons.math3.exception.OutOfRangeException.getLo()Ljava/lang/Number;
org.apache.commons.math3.exception.util.ArgUtils.flatten([Ljava/lang/Object;)[Ljava/lang/Object;
org.apache.commons.math3.exception.util.DummyLocalizable.getLocalizedString(Ljava/util/Locale;)Ljava/lang/String;
org.apache.commons.math3.exception.util.DummyLocalizable.getSourceString()Ljava/lang/String;
org.apache.commons.math3.exception.util.DummyLocalizable.toString()Ljava/lang/String;
org.apache.commons.math3.exception.util.ExceptionContext.addMessage(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
org.apache.commons.math3.exception.util.ExceptionContext.buildMessage(Ljava/util/Locale;Ljava/lang/String;)Ljava/lang/String;
org.apache.commons.math3.exception.util.ExceptionContext.deSerializeContext(Ljava/io/ObjectInputStream;)V
org.apache.commons.math3.exception.util.ExceptionContext.deSerializeMessages(Ljava/io/ObjectInputStream;)V
org.apache.commons.math3.exception.util.ExceptionContext.getKeys()Ljava/util/Set;
org.apache.commons.math3.exception.util.ExceptionContext.getLocalizedMessage()Ljava/lang/String;
org.apache.commons.math3.exception.util.ExceptionContext.getMessage()Ljava/lang/String;
org.apache.commons.math3.exception.util.ExceptionContext.getMessage(Ljava/util/Locale;)Ljava/lang/String;
org.apache.commons.math3.exception.util.ExceptionContext.getMessage(Ljava/util/Locale;Ljava/lang/String;)Ljava/lang/String;
org.apache.commons.math3.exception.util.ExceptionContext.getThrowable()Ljava/lang/Throwable;
org.apache.commons.math3.exception.util.ExceptionContext.getValue(Ljava/lang/String;)Ljava/lang/Object;
org.apache.commons.math3.exception.util.ExceptionContext.nonSerializableReplacement(Ljava/lang/Object;)Ljava/lang/String;
org.apache.commons.math3.exception.util.ExceptionContext.readObject(Ljava/io/ObjectInputStream;)V
org.apache.commons.math3.exception.util.ExceptionContext.serializeContext(Ljava/io/ObjectOutputStream;)V
org.apache.commons.math3.exception.util.ExceptionContext.serializeMessages(Ljava/io/ObjectOutputStream;)V
org.apache.commons.math3.exception.util.ExceptionContext.setValue(Ljava/lang/String;Ljava/lang/Object;)V
org.apache.commons.math3.exception.util.ExceptionContext.writeObject(Ljava/io/ObjectOutputStream;)V
org.apache.commons.math3.exception.util.LocalizedFormats.getLocalizedString(Ljava/util/Locale;)Ljava/lang/String;
org.apache.commons.math3.exception.util.LocalizedFormats.getSourceString()Ljava/lang/String;
org.apache.commons.math3.exception.util.LocalizedFormats.valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/exception/util/LocalizedFormats;
org.apache.commons.math3.exception.util.LocalizedFormats.values()[Lorg/apache/commons/math3/exception/util/LocalizedFormats;
org.apache.commons.math3.filter.DefaultMeasurementModel.getMeasurementMatrix()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.filter.DefaultMeasurementModel.getMeasurementNoise()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.filter.DefaultProcessModel.getControlMatrix()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.filter.DefaultProcessModel.getInitialErrorCovariance()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.filter.DefaultProcessModel.getInitialStateEstimate()Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.filter.DefaultProcessModel.getProcessNoise()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.filter.DefaultProcessModel.getStateTransitionMatrix()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.filter.KalmanFilter.correct(Lorg/apache/commons/math3/linear/RealVector;)V
org.apache.commons.math3.filter.KalmanFilter.correct([D)V
org.apache.commons.math3.filter.KalmanFilter.getErrorCovariance()[[D
org.apache.commons.math3.filter.KalmanFilter.getErrorCovarianceMatrix()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.filter.KalmanFilter.getMeasurementDimension()I
org.apache.commons.math3.filter.KalmanFilter.getStateDimension()I
org.apache.commons.math3.filter.KalmanFilter.getStateEstimation()[D
org.apache.commons.math3.filter.KalmanFilter.getStateEstimationVector()Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.filter.KalmanFilter.predict()V
org.apache.commons.math3.filter.KalmanFilter.predict(Lorg/apache/commons/math3/linear/RealVector;)V
org.apache.commons.math3.filter.KalmanFilter.predict([D)V
org.apache.commons.math3.fitting.AbstractCurveFitter$TheoreticalValuesFunction$1.value([D)[D
org.apache.commons.math3.fitting.AbstractCurveFitter$TheoreticalValuesFunction$2.value([D)[[D
org.apache.commons.math3.fitting.AbstractCurveFitter$TheoreticalValuesFunction.access$000(Lorg/apache/commons/math3/fitting/AbstractCurveFitter$TheoreticalValuesFunction;)[D
org.apache.commons.math3.fitting.AbstractCurveFitter$TheoreticalValuesFunction.access$100(Lorg/apache/commons/math3/fitting/AbstractCurveFitter$TheoreticalValuesFunction;)Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;
org.apache.commons.math3.fitting.AbstractCurveFitter$TheoreticalValuesFunction.getModelFunction()Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;
org.apache.commons.math3.fitting.AbstractCurveFitter$TheoreticalValuesFunction.getModelFunctionJacobian()Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value([D)[D
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2.value([D)[[D
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction.access$100(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction.getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction;
org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction.getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian;
org.apache.commons.math3.fitting.CurveFitter.access$000(Lorg/apache/commons/math3/fitting/CurveFitter;)Ljava/util/List;
org.apache.commons.math3.fitting.CurveFitter.addObservedPoint(DD)V
org.apache.commons.math3.fitting.CurveFitter.addObservedPoint(DDD)V
org.apache.commons.math3.fitting.CurveFitter.addObservedPoint(Lorg/apache/commons/math3/fitting/WeightedObservedPoint;)V
org.apache.commons.math3.fitting.CurveFitter.clearObservations()V
org.apache.commons.math3.fitting.CurveFitter.fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D
org.apache.commons.math3.fitting.CurveFitter.fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D
org.apache.commons.math3.fitting.CurveFitter.getObservations()[Lorg/apache/commons/math3/fitting/WeightedObservedPoint;
org.apache.commons.math3.fitting.GaussianCurveFitter$1.gradient(D[D)[D
org.apache.commons.math3.fitting.GaussianCurveFitter$1.value(D[D)D
org.apache.commons.math3.fitting.GaussianCurveFitter$ParameterGuesser$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I
org.apache.commons.math3.fitting.GaussianCurveFitter$ParameterGuesser$1.compare(Lorg/apache/commons/math3/fitting/WeightedObservedPoint;Lorg/apache/commons/math3/fitting/WeightedObservedPoint;)I
org.apache.commons.math3.fitting.GaussianCurveFitter$ParameterGuesser.basicGuess([Lorg/apache/commons/math3/fitting/WeightedObservedPoint;)[D
org.apache.commons.math3.fitting.GaussianCurveFitter$ParameterGuesser.findMaxY([Lorg/apache/commons/math3/fitting/WeightedObservedPoint;)I
org.apache.commons.math3.fitting.GaussianCurveFitter$ParameterGuesser.getInterpolationPointsForY([Lorg/apache/commons/math3/fitting/WeightedObservedPoint;IID)[Lorg/apache/commons/math3/fitting/WeightedObservedPoint;
org.apache.commons.math3.fitting.GaussianCurveFitter$ParameterGuesser.guess()[D
org.apache.commons.math3.fitting.GaussianCurveFitter$ParameterGuesser.interpolateXAtY([Lorg/apache/commons/math3/fitting/WeightedObservedPoint;IID)D
org.apache.commons.math3.fitting.GaussianCurveFitter$ParameterGuesser.isBetween(DDD)Z
org.apache.commons.math3.fitting.GaussianCurveFitter$ParameterGuesser.sortObservations(Ljava/util/Collection;)Ljava/util/List;
org.apache.commons.math3.fitting.GaussianCurveFitter.create()Lorg/apache/commons/math3/fitting/GaussianCurveFitter;
org.apache.commons.math3.fitting.GaussianCurveFitter.getProblem(Ljava/util/Collection;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem;
org.apache.commons.math3.fitting.GaussianCurveFitter.withMaxIterations(I)Lorg/apache/commons/math3/fitting/GaussianCurveFitter;
org.apache.commons.math3.fitting.GaussianCurveFitter.withStartPoint([D)Lorg/apache/commons/math3/fitting/GaussianCurveFitter;
org.apache.commons.math3.fitting.GaussianFitter$1.gradient(D[D)[D
org.apache.commons.math3.fitting.GaussianFitter$1.value(D[D)D
org.apache.commons.math3.fitting.GaussianFitter$ParameterGuesser$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I
org.apache.commons.math3.fitting.GaussianFitter$ParameterGuesser$1.compare(Lorg/apache/commons/math3/fitting/WeightedObservedPoint;Lorg/apache/commons/math3/fitting/WeightedObservedPoint;)I
org.apache.commons.math3.fitting.GaussianFitter$ParameterGuesser.basicGuess([Lorg/apache/commons/math3/fitting/WeightedObservedPoint;)[D
org.apache.commons.math3.fitting.GaussianFitter$ParameterGuesser.findMaxY([Lorg/apache/commons/math3/fitting/WeightedObservedPoint;)I
org.apache.commons.math3.fitting.GaussianFitter$ParameterGuesser.getInterpolationPointsForY([Lorg/apache/commons/math3/fitting/WeightedObservedPoint;IID)[Lorg/apache/commons/math3/fitting/WeightedObservedPoint;
org.apache.commons.math3.fitting.GaussianFitter$ParameterGuesser.guess()[D
org.apache.commons.math3.fitting.GaussianFitter$ParameterGuesser.interpolateXAtY([Lorg/apache/commons/math3/fitting/WeightedObservedPoint;IID)D
org.apache.commons.math3.fitting.GaussianFitter$ParameterGuesser.isBetween(DDD)Z
org.apache.commons.math3.fitting.GaussianFitter$ParameterGuesser.sortObservations([Lorg/apache/commons/math3/fitting/WeightedObservedPoint;)[Lorg/apache/commons/math3/fitting/WeightedObservedPoint;
org.apache.commons.math3.fitting.GaussianFitter.fit()[D
org.apache.commons.math3.fitting.GaussianFitter.fit([D)[D
org.apache.commons.math3.fitting.HarmonicCurveFitter$ParameterGuesser.guess()[D
org.apache.commons.math3.fitting.HarmonicCurveFitter$ParameterGuesser.guessAOmega([Lorg/apache/commons/math3/fitting/WeightedObservedPoint;)[D
org.apache.commons.math3.fitting.HarmonicCurveFitter$ParameterGuesser.guessPhi([Lorg/apache/commons/math3/fitting/WeightedObservedPoint;)D
org.apache.commons.math3.fitting.HarmonicCurveFitter$ParameterGuesser.sortObservations(Ljava/util/Collection;)Ljava/util/List;
org.apache.commons.math3.fitting.HarmonicCurveFitter.create()Lorg/apache/commons/math3/fitting/HarmonicCurveFitter;
org.apache.commons.math3.fitting.HarmonicCurveFitter.getProblem(Ljava/util/Collection;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem;
org.apache.commons.math3.fitting.HarmonicCurveFitter.withMaxIterations(I)Lorg/apache/commons/math3/fitting/HarmonicCurveFitter;
org.apache.commons.math3.fitting.HarmonicCurveFitter.withStartPoint([D)Lorg/apache/commons/math3/fitting/HarmonicCurveFitter;
org.apache.commons.math3.fitting.HarmonicFitter$ParameterGuesser.guess()[D
org.apache.commons.math3.fitting.HarmonicFitter$ParameterGuesser.guessAOmega([Lorg/apache/commons/math3/fitting/WeightedObservedPoint;)[D
org.apache.commons.math3.fitting.HarmonicFitter$ParameterGuesser.guessPhi([Lorg/apache/commons/math3/fitting/WeightedObservedPoint;)D
org.apache.commons.math3.fitting.HarmonicFitter$ParameterGuesser.sortObservations([Lorg/apache/commons/math3/fitting/WeightedObservedPoint;)[Lorg/apache/commons/math3/fitting/WeightedObservedPoint;
org.apache.commons.math3.fitting.HarmonicFitter.fit()[D
org.apache.commons.math3.fitting.HarmonicFitter.fit([D)[D
org.apache.commons.math3.fitting.PolynomialCurveFitter.getProblem(Ljava/util/Collection;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem;
org.apache.commons.math3.fitting.PolynomialCurveFitter.withMaxIterations(I)Lorg/apache/commons/math3/fitting/PolynomialCurveFitter;
org.apache.commons.math3.fitting.PolynomialCurveFitter.withStartPoint([D)Lorg/apache/commons/math3/fitting/PolynomialCurveFitter;
org.apache.commons.math3.fitting.PolynomialFitter.fit(I[D)[D
org.apache.commons.math3.fitting.PolynomialFitter.fit([D)[D
org.apache.commons.math3.fitting.SimpleCurveFitter.getProblem(Ljava/util/Collection;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem;
org.apache.commons.math3.fitting.SimpleCurveFitter.withMaxIterations(I)Lorg/apache/commons/math3/fitting/SimpleCurveFitter;
org.apache.commons.math3.fitting.SimpleCurveFitter.withStartPoint([D)Lorg/apache/commons/math3/fitting/SimpleCurveFitter;
org.apache.commons.math3.fitting.WeightedObservedPoint.getWeight()D
org.apache.commons.math3.fitting.WeightedObservedPoint.getX()D
org.apache.commons.math3.fitting.WeightedObservedPoint.getY()D
org.apache.commons.math3.fitting.WeightedObservedPoints.add(DD)V
org.apache.commons.math3.fitting.WeightedObservedPoints.add(DDD)V
org.apache.commons.math3.fitting.WeightedObservedPoints.add(Lorg/apache/commons/math3/fitting/WeightedObservedPoint;)V
org.apache.commons.math3.fitting.WeightedObservedPoints.clear()V
org.apache.commons.math3.fitting.WeightedObservedPoints.toList()Ljava/util/List;
org.apache.commons.math3.fitting.leastsquares.DenseWeightedEvaluation.getJacobian()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.fitting.leastsquares.DenseWeightedEvaluation.getPoint()Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.fitting.leastsquares.DenseWeightedEvaluation.getResiduals()Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.fitting.leastsquares.EvaluationRmsChecker.converged(ILjava/lang/Object;Ljava/lang/Object;)Z
org.apache.commons.math3.fitting.leastsquares.EvaluationRmsChecker.converged(ILorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem$Evaluation;Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem$Evaluation;)Z
org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer$Decomposition$1.solve(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer$Decomposition$2.solve(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer$Decomposition$3.solve(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer$Decomposition$4.solve(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer$Decomposition.valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizer$Decomposition;
org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer$Decomposition.values()[Lorg/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizer$Decomposition;
org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer.getDecomposition()Lorg/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizer$Decomposition;
org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer.optimize(Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresOptimizer$Optimum;
org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer.toString()Ljava/lang/String;
org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer.withDecomposition(Lorg/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizer$Decomposition;)Lorg/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizer;
org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter.evaluate(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem$Evaluation;
org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter.getConvergenceChecker()Lorg/apache/commons/math3/optim/ConvergenceChecker;
org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter.getEvaluationCounter()Lorg/apache/commons/math3/util/Incrementor;
org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter.getIterationCounter()Lorg/apache/commons/math3/util/Incrementor;
org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter.getObservationSize()I
org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter.getParameterSize()I
org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter.getStart()Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder.build()Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem;
org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder.checker(Lorg/apache/commons/math3/optim/ConvergenceChecker;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder;
org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder.checkerPair(Lorg/apache/commons/math3/optim/ConvergenceChecker;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder;
org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder.lazyEvaluation(Z)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder;
org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder.maxEvaluations(I)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder;
org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder.maxIterations(I)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder;
org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder.model(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder;
org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder.model(Lorg/apache/commons/math3/fitting/leastsquares/MultivariateJacobianFunction;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder;
org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder.parameterValidator(Lorg/apache/commons/math3/fitting/leastsquares/ParameterValidator;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder;
org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder.start(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder;
org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder.start([D)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder;
org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder.target(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder;
org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder.target([D)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder;
org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder.weight(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder;
org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$1.evaluate(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem$Evaluation;
org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$2.evaluate(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem$Evaluation;
org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$3.converged(ILjava/lang/Object;Ljava/lang/Object;)Z
org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$3.converged(ILorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem$Evaluation;Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem$Evaluation;)Z
org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem$LazyUnweightedEvaluation.getJacobian()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem$LazyUnweightedEvaluation.getPoint()Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem$LazyUnweightedEvaluation.getResiduals()Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem$UnweightedEvaluation.getJacobian()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem$UnweightedEvaluation.getPoint()Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem$UnweightedEvaluation.getResiduals()Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem.evaluate(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem$Evaluation;
org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem.getObservationSize()I
org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem.getParameterSize()I
org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem.getStart()Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalValueAndJacobianFunction.computeJacobian([D)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalValueAndJacobianFunction.computeValue([D)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalValueAndJacobianFunction.value(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/util/Pair;
org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory.create(Lorg/apache/commons/math3/fitting/leastsquares/MultivariateJacobianFunction;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/optim/ConvergenceChecker;IIZLorg/apache/commons/math3/fitting/leastsquares/ParameterValidator;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem;
org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory.model(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)Lorg/apache/commons/math3/fitting/leastsquares/MultivariateJacobianFunction;
org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory.squareRoot(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory.weightMatrix(Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem;Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem;
org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer$InternalData.access$000(Lorg/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer$InternalData;)[[D
org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer$InternalData.access$100(Lorg/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer$InternalData;)[I
org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer$InternalData.access$200(Lorg/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer$InternalData;)[D
org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer$InternalData.access$300(Lorg/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer$InternalData;)[D
org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer$InternalData.access$400(Lorg/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer$InternalData;)I
org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer$InternalData.access$500(Lorg/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer$InternalData;)[D
org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.determineLMDirection([D[D[DLorg/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer$InternalData;I[D[D)V
org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.determineLMParameter([DD[DLorg/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer$InternalData;I[D[D[D[DD)D
org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.getCostRelativeTolerance()D
org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.getInitialStepBoundFactor()D
org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.getOrthoTolerance()D
org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.getParameterRelativeTolerance()D
org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.getRankingThreshold()D
org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresOptimizer$Optimum;
org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.qTy([DLorg/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer$InternalData;)V
org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.qrDecomposition(Lorg/apache/commons/math3/linear/RealMatrix;I)Lorg/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer$InternalData;
org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.withCostRelativeTolerance(D)Lorg/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer;
org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.withInitialStepBoundFactor(D)Lorg/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer;
org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.withOrthoTolerance(D)Lorg/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer;
org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.withParameterRelativeTolerance(D)Lorg/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer;
org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.withRankingThreshold(D)Lorg/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer;
org.apache.commons.math3.fitting.leastsquares.OptimumImpl.getCost()D
org.apache.commons.math3.fitting.leastsquares.OptimumImpl.getCovariances(D)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.fitting.leastsquares.OptimumImpl.getEvaluations()I
org.apache.commons.math3.fitting.leastsquares.OptimumImpl.getIterations()I
org.apache.commons.math3.fitting.leastsquares.OptimumImpl.getJacobian()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.fitting.leastsquares.OptimumImpl.getPoint()Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.fitting.leastsquares.OptimumImpl.getRMS()D
org.apache.commons.math3.fitting.leastsquares.OptimumImpl.getResiduals()Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.fitting.leastsquares.OptimumImpl.getSigma(D)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.fraction.AbstractFormat.getDefaultNumberFormat()Ljava/text/NumberFormat;
org.apache.commons.math3.fraction.AbstractFormat.getDefaultNumberFormat(Ljava/util/Locale;)Ljava/text/NumberFormat;
org.apache.commons.math3.fraction.AbstractFormat.getDenominatorFormat()Ljava/text/NumberFormat;
org.apache.commons.math3.fraction.AbstractFormat.getNumeratorFormat()Ljava/text/NumberFormat;
org.apache.commons.math3.fraction.AbstractFormat.parseAndIgnoreWhitespace(Ljava/lang/String;Ljava/text/ParsePosition;)V
org.apache.commons.math3.fraction.AbstractFormat.parseNextCharacter(Ljava/lang/String;Ljava/text/ParsePosition;)C
org.apache.commons.math3.fraction.BigFraction.abs()Lorg/apache/commons/math3/fraction/BigFraction;
org.apache.commons.math3.fraction.BigFraction.add(I)Lorg/apache/commons/math3/fraction/BigFraction;
org.apache.commons.math3.fraction.BigFraction.add(J)Lorg/apache/commons/math3/fraction/BigFraction;
org.apache.commons.math3.fraction.BigFraction.add(Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.fraction.BigFraction.add(Ljava/math/BigInteger;)Lorg/apache/commons/math3/fraction/BigFraction;
org.apache.commons.math3.fraction.BigFraction.add(Lorg/apache/commons/math3/fraction/BigFraction;)Lorg/apache/commons/math3/fraction/BigFraction;
org.apache.commons.math3.fraction.BigFraction.bigDecimalValue()Ljava/math/BigDecimal;
org.apache.commons.math3.fraction.BigFraction.bigDecimalValue(I)Ljava/math/BigDecimal;
org.apache.commons.math3.fraction.BigFraction.bigDecimalValue(II)Ljava/math/BigDecimal;
org.apache.commons.math3.fraction.BigFraction.compareTo(Ljava/lang/Object;)I
org.apache.commons.math3.fraction.BigFraction.compareTo(Lorg/apache/commons/math3/fraction/BigFraction;)I
org.apache.commons.math3.fraction.BigFraction.divide(I)Lorg/apache/commons/math3/fraction/BigFraction;
org.apache.commons.math3.fraction.BigFraction.divide(J)Lorg/apache/commons/math3/fraction/BigFraction;
org.apache.commons.math3.fraction.BigFraction.divide(Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.fraction.BigFraction.divide(Ljava/math/BigInteger;)Lorg/apache/commons/math3/fraction/BigFraction;
org.apache.commons.math3.fraction.BigFraction.divide(Lorg/apache/commons/math3/fraction/BigFraction;)Lorg/apache/commons/math3/fraction/BigFraction;
org.apache.commons.math3.fraction.BigFraction.doubleValue()D
org.apache.commons.math3.fraction.BigFraction.equals(Ljava/lang/Object;)Z
org.apache.commons.math3.fraction.BigFraction.floatValue()F
org.apache.commons.math3.fraction.BigFraction.getDenominator()Ljava/math/BigInteger;
org.apache.commons.math3.fraction.BigFraction.getDenominatorAsInt()I
org.apache.commons.math3.fraction.BigFraction.getDenominatorAsLong()J
org.apache.commons.math3.fraction.BigFraction.getField()Lorg/apache/commons/math3/Field;
org.apache.commons.math3.fraction.BigFraction.getField()Lorg/apache/commons/math3/fraction/BigFractionField;
org.apache.commons.math3.fraction.BigFraction.getNumerator()Ljava/math/BigInteger;
org.apache.commons.math3.fraction.BigFraction.getNumeratorAsInt()I
org.apache.commons.math3.fraction.BigFraction.getNumeratorAsLong()J
org.apache.commons.math3.fraction.BigFraction.hashCode()I
org.apache.commons.math3.fraction.BigFraction.intValue()I
org.apache.commons.math3.fraction.BigFraction.longValue()J
org.apache.commons.math3.fraction.BigFraction.multiply(I)Ljava/lang/Object;
org.apache.commons.math3.fraction.BigFraction.multiply(I)Lorg/apache/commons/math3/fraction/BigFraction;
org.apache.commons.math3.fraction.BigFraction.multiply(J)Lorg/apache/commons/math3/fraction/BigFraction;
org.apache.commons.math3.fraction.BigFraction.multiply(Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.fraction.BigFraction.multiply(Ljava/math/BigInteger;)Lorg/apache/commons/math3/fraction/BigFraction;
org.apache.commons.math3.fraction.BigFraction.multiply(Lorg/apache/commons/math3/fraction/BigFraction;)Lorg/apache/commons/math3/fraction/BigFraction;
org.apache.commons.math3.fraction.BigFraction.negate()Ljava/lang/Object;
org.apache.commons.math3.fraction.BigFraction.negate()Lorg/apache/commons/math3/fraction/BigFraction;
org.apache.commons.math3.fraction.BigFraction.percentageValue()D
org.apache.commons.math3.fraction.BigFraction.pow(D)D
org.apache.commons.math3.fraction.BigFraction.pow(I)Lorg/apache/commons/math3/fraction/BigFraction;
org.apache.commons.math3.fraction.BigFraction.pow(J)Lorg/apache/commons/math3/fraction/BigFraction;
org.apache.commons.math3.fraction.BigFraction.pow(Ljava/math/BigInteger;)Lorg/apache/commons/math3/fraction/BigFraction;
org.apache.commons.math3.fraction.BigFraction.reciprocal()Ljava/lang/Object;
org.apache.commons.math3.fraction.BigFraction.reciprocal()Lorg/apache/commons/math3/fraction/BigFraction;
org.apache.commons.math3.fraction.BigFraction.reduce()Lorg/apache/commons/math3/fraction/BigFraction;
org.apache.commons.math3.fraction.BigFraction.subtract(I)Lorg/apache/commons/math3/fraction/BigFraction;
org.apache.commons.math3.fraction.BigFraction.subtract(J)Lorg/apache/commons/math3/fraction/BigFraction;
org.apache.commons.math3.fraction.BigFraction.subtract(Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.fraction.BigFraction.subtract(Ljava/math/BigInteger;)Lorg/apache/commons/math3/fraction/BigFraction;
org.apache.commons.math3.fraction.BigFraction.subtract(Lorg/apache/commons/math3/fraction/BigFraction;)Lorg/apache/commons/math3/fraction/BigFraction;
org.apache.commons.math3.fraction.BigFraction.toString()Ljava/lang/String;
org.apache.commons.math3.fraction.BigFractionField$LazyHolder.access$000()Lorg/apache/commons/math3/fraction/BigFractionField;
org.apache.commons.math3.fraction.BigFractionField.getInstance()Lorg/apache/commons/math3/fraction/BigFractionField;
org.apache.commons.math3.fraction.BigFractionField.getOne()Ljava/lang/Object;
org.apache.commons.math3.fraction.BigFractionField.getOne()Lorg/apache/commons/math3/fraction/BigFraction;
org.apache.commons.math3.fraction.BigFractionField.getRuntimeClass()Ljava/lang/Class;
org.apache.commons.math3.fraction.BigFractionField.getZero()Ljava/lang/Object;
org.apache.commons.math3.fraction.BigFractionField.getZero()Lorg/apache/commons/math3/fraction/BigFraction;
org.apache.commons.math3.fraction.BigFractionField.readResolve()Ljava/lang/Object;
org.apache.commons.math3.fraction.BigFractionFormat.format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;
org.apache.commons.math3.fraction.BigFractionFormat.format(Lorg/apache/commons/math3/fraction/BigFraction;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;
org.apache.commons.math3.fraction.BigFractionFormat.formatBigFraction(Lorg/apache/commons/math3/fraction/BigFraction;)Ljava/lang/String;
org.apache.commons.math3.fraction.BigFractionFormat.getAvailableLocales()[Ljava/util/Locale;
org.apache.commons.math3.fraction.BigFractionFormat.getImproperInstance()Lorg/apache/commons/math3/fraction/BigFractionFormat;
org.apache.commons.math3.fraction.BigFractionFormat.getImproperInstance(Ljava/util/Locale;)Lorg/apache/commons/math3/fraction/BigFractionFormat;
org.apache.commons.math3.fraction.BigFractionFormat.getProperInstance()Lorg/apache/commons/math3/fraction/BigFractionFormat;
org.apache.commons.math3.fraction.BigFractionFormat.getProperInstance(Ljava/util/Locale;)Lorg/apache/commons/math3/fraction/BigFractionFormat;
org.apache.commons.math3.fraction.BigFractionFormat.parse(Ljava/lang/String;)Ljava/lang/Number;
org.apache.commons.math3.fraction.BigFractionFormat.parse(Ljava/lang/String;)Lorg/apache/commons/math3/fraction/BigFraction;
org.apache.commons.math3.fraction.BigFractionFormat.parse(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Number;
org.apache.commons.math3.fraction.BigFractionFormat.parse(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math3/fraction/BigFraction;
org.apache.commons.math3.fraction.BigFractionFormat.parseNextBigInteger(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/math/BigInteger;
org.apache.commons.math3.fraction.Fraction.abs()Lorg/apache/commons/math3/fraction/Fraction;
org.apache.commons.math3.fraction.Fraction.add(I)Lorg/apache/commons/math3/fraction/Fraction;
org.apache.commons.math3.fraction.Fraction.add(Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.fraction.Fraction.add(Lorg/apache/commons/math3/fraction/Fraction;)Lorg/apache/commons/math3/fraction/Fraction;
org.apache.commons.math3.fraction.Fraction.addSub(Lorg/apache/commons/math3/fraction/Fraction;Z)Lorg/apache/commons/math3/fraction/Fraction;
org.apache.commons.math3.fraction.Fraction.compareTo(Ljava/lang/Object;)I
org.apache.commons.math3.fraction.Fraction.compareTo(Lorg/apache/commons/math3/fraction/Fraction;)I
org.apache.commons.math3.fraction.Fraction.divide(I)Lorg/apache/commons/math3/fraction/Fraction;
org.apache.commons.math3.fraction.Fraction.divide(Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.fraction.Fraction.divide(Lorg/apache/commons/math3/fraction/Fraction;)Lorg/apache/commons/math3/fraction/Fraction;
org.apache.commons.math3.fraction.Fraction.doubleValue()D
org.apache.commons.math3.fraction.Fraction.equals(Ljava/lang/Object;)Z
org.apache.commons.math3.fraction.Fraction.floatValue()F
org.apache.commons.math3.fraction.Fraction.getDenominator()I
org.apache.commons.math3.fraction.Fraction.getField()Lorg/apache/commons/math3/Field;
org.apache.commons.math3.fraction.Fraction.getField()Lorg/apache/commons/math3/fraction/FractionField;
org.apache.commons.math3.fraction.Fraction.getNumerator()I
org.apache.commons.math3.fraction.Fraction.hashCode()I
org.apache.commons.math3.fraction.Fraction.intValue()I
org.apache.commons.math3.fraction.Fraction.longValue()J
org.apache.commons.math3.fraction.Fraction.multiply(I)Ljava/lang/Object;
org.apache.commons.math3.fraction.Fraction.multiply(I)Lorg/apache/commons/math3/fraction/Fraction;
org.apache.commons.math3.fraction.Fraction.multiply(Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.fraction.Fraction.multiply(Lorg/apache/commons/math3/fraction/Fraction;)Lorg/apache/commons/math3/fraction/Fraction;
org.apache.commons.math3.fraction.Fraction.negate()Ljava/lang/Object;
org.apache.commons.math3.fraction.Fraction.negate()Lorg/apache/commons/math3/fraction/Fraction;
org.apache.commons.math3.fraction.Fraction.percentageValue()D
org.apache.commons.math3.fraction.Fraction.reciprocal()Ljava/lang/Object;
org.apache.commons.math3.fraction.Fraction.reciprocal()Lorg/apache/commons/math3/fraction/Fraction;
org.apache.commons.math3.fraction.Fraction.subtract(I)Lorg/apache/commons/math3/fraction/Fraction;
org.apache.commons.math3.fraction.Fraction.subtract(Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.fraction.Fraction.subtract(Lorg/apache/commons/math3/fraction/Fraction;)Lorg/apache/commons/math3/fraction/Fraction;
org.apache.commons.math3.fraction.Fraction.toString()Ljava/lang/String;
org.apache.commons.math3.fraction.FractionField$LazyHolder.access$000()Lorg/apache/commons/math3/fraction/FractionField;
org.apache.commons.math3.fraction.FractionField.getInstance()Lorg/apache/commons/math3/fraction/FractionField;
org.apache.commons.math3.fraction.FractionField.getOne()Ljava/lang/Object;
org.apache.commons.math3.fraction.FractionField.getOne()Lorg/apache/commons/math3/fraction/Fraction;
org.apache.commons.math3.fraction.FractionField.getRuntimeClass()Ljava/lang/Class;
org.apache.commons.math3.fraction.FractionField.getZero()Ljava/lang/Object;
org.apache.commons.math3.fraction.FractionField.getZero()Lorg/apache/commons/math3/fraction/Fraction;
org.apache.commons.math3.fraction.FractionField.readResolve()Ljava/lang/Object;
org.apache.commons.math3.fraction.FractionFormat.format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;
org.apache.commons.math3.fraction.FractionFormat.format(Lorg/apache/commons/math3/fraction/Fraction;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;
org.apache.commons.math3.fraction.FractionFormat.formatFraction(Lorg/apache/commons/math3/fraction/Fraction;)Ljava/lang/String;
org.apache.commons.math3.fraction.FractionFormat.getAvailableLocales()[Ljava/util/Locale;
org.apache.commons.math3.fraction.FractionFormat.getDefaultNumberFormat()Ljava/text/NumberFormat;
org.apache.commons.math3.fraction.FractionFormat.getImproperInstance()Lorg/apache/commons/math3/fraction/FractionFormat;
org.apache.commons.math3.fraction.FractionFormat.getImproperInstance(Ljava/util/Locale;)Lorg/apache/commons/math3/fraction/FractionFormat;
org.apache.commons.math3.fraction.FractionFormat.getProperInstance()Lorg/apache/commons/math3/fraction/FractionFormat;
org.apache.commons.math3.fraction.FractionFormat.getProperInstance(Ljava/util/Locale;)Lorg/apache/commons/math3/fraction/FractionFormat;
org.apache.commons.math3.fraction.FractionFormat.parse(Ljava/lang/String;)Ljava/lang/Number;
org.apache.commons.math3.fraction.FractionFormat.parse(Ljava/lang/String;)Lorg/apache/commons/math3/fraction/Fraction;
org.apache.commons.math3.fraction.FractionFormat.parse(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Number;
org.apache.commons.math3.fraction.FractionFormat.parse(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math3/fraction/Fraction;
org.apache.commons.math3.fraction.ProperBigFractionFormat.format(Lorg/apache/commons/math3/fraction/BigFraction;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;
org.apache.commons.math3.fraction.ProperBigFractionFormat.getWholeFormat()Ljava/text/NumberFormat;
org.apache.commons.math3.fraction.ProperBigFractionFormat.parse(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Number;
org.apache.commons.math3.fraction.ProperBigFractionFormat.parse(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math3/fraction/BigFraction;
org.apache.commons.math3.fraction.ProperBigFractionFormat.setWholeFormat(Ljava/text/NumberFormat;)V
org.apache.commons.math3.fraction.ProperFractionFormat.format(Lorg/apache/commons/math3/fraction/Fraction;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;
org.apache.commons.math3.fraction.ProperFractionFormat.getWholeFormat()Ljava/text/NumberFormat;
org.apache.commons.math3.fraction.ProperFractionFormat.parse(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Number;
org.apache.commons.math3.fraction.ProperFractionFormat.parse(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math3/fraction/Fraction;
org.apache.commons.math3.fraction.ProperFractionFormat.setWholeFormat(Ljava/text/NumberFormat;)V
org.apache.commons.math3.genetics.BinaryMutation.mutate(Lorg/apache/commons/math3/genetics/Chromosome;)Lorg/apache/commons/math3/genetics/Chromosome;
org.apache.commons.math3.genetics.ChromosomePair.getFirst()Lorg/apache/commons/math3/genetics/Chromosome;
org.apache.commons.math3.genetics.ChromosomePair.getSecond()Lorg/apache/commons/math3/genetics/Chromosome;
org.apache.commons.math3.genetics.ChromosomePair.toString()Ljava/lang/String;
org.apache.commons.math3.genetics.CycleCrossover.crossover(Lorg/apache/commons/math3/genetics/Chromosome;Lorg/apache/commons/math3/genetics/Chromosome;)Lorg/apache/commons/math3/genetics/ChromosomePair;
org.apache.commons.math3.genetics.CycleCrossover.isRandomStart()Z
org.apache.commons.math3.genetics.CycleCrossover.mate(Lorg/apache/commons/math3/genetics/AbstractListChromosome;Lorg/apache/commons/math3/genetics/AbstractListChromosome;)Lorg/apache/commons/math3/genetics/ChromosomePair;
org.apache.commons.math3.genetics.ElitisticListPopulation.getElitismRate()D
org.apache.commons.math3.genetics.ElitisticListPopulation.nextGeneration()Lorg/apache/commons/math3/genetics/Population;
org.apache.commons.math3.genetics.ElitisticListPopulation.setElitismRate(D)V
org.apache.commons.math3.genetics.FixedElapsedTime.isSatisfied(Lorg/apache/commons/math3/genetics/Population;)Z
org.apache.commons.math3.genetics.FixedGenerationCount.getNumGenerations()I
org.apache.commons.math3.genetics.FixedGenerationCount.isSatisfied(Lorg/apache/commons/math3/genetics/Population;)Z
org.apache.commons.math3.genetics.GeneticAlgorithm.evolve(Lorg/apache/commons/math3/genetics/Population;Lorg/apache/commons/math3/genetics/StoppingCondition;)Lorg/apache/commons/math3/genetics/Population;
org.apache.commons.math3.genetics.GeneticAlgorithm.getCrossoverPolicy()Lorg/apache/commons/math3/genetics/CrossoverPolicy;
org.apache.commons.math3.genetics.GeneticAlgorithm.getCrossoverRate()D
org.apache.commons.math3.genetics.GeneticAlgorithm.getGenerationsEvolved()I
org.apache.commons.math3.genetics.GeneticAlgorithm.getMutationPolicy()Lorg/apache/commons/math3/genetics/MutationPolicy;
org.apache.commons.math3.genetics.GeneticAlgorithm.getMutationRate()D
org.apache.commons.math3.genetics.GeneticAlgorithm.getRandomGenerator()Lorg/apache/commons/math3/random/RandomGenerator;
org.apache.commons.math3.genetics.GeneticAlgorithm.getSelectionPolicy()Lorg/apache/commons/math3/genetics/SelectionPolicy;
org.apache.commons.math3.genetics.GeneticAlgorithm.nextGeneration(Lorg/apache/commons/math3/genetics/Population;)Lorg/apache/commons/math3/genetics/Population;
org.apache.commons.math3.genetics.ListPopulation.addChromosome(Lorg/apache/commons/math3/genetics/Chromosome;)V
org.apache.commons.math3.genetics.ListPopulation.getChromosomeList()Ljava/util/List;
org.apache.commons.math3.genetics.ListPopulation.getFittestChromosome()Lorg/apache/commons/math3/genetics/Chromosome;
org.apache.commons.math3.genetics.ListPopulation.getPopulationLimit()I
org.apache.commons.math3.genetics.NPointCrossover.crossover(Lorg/apache/commons/math3/genetics/Chromosome;Lorg/apache/commons/math3/genetics/Chromosome;)Lorg/apache/commons/math3/genetics/ChromosomePair;
org.apache.commons.math3.genetics.NPointCrossover.getCrossoverPoints()I
org.apache.commons.math3.genetics.NPointCrossover.mate(Lorg/apache/commons/math3/genetics/AbstractListChromosome;Lorg/apache/commons/math3/genetics/AbstractListChromosome;)Lorg/apache/commons/math3/genetics/ChromosomePair;
org.apache.commons.math3.genetics.OnePointCrossover.crossover(Lorg/apache/commons/math3/genetics/AbstractListChromosome;Lorg/apache/commons/math3/genetics/AbstractListChromosome;)Lorg/apache/commons/math3/genetics/ChromosomePair;
org.apache.commons.math3.genetics.OnePointCrossover.crossover(Lorg/apache/commons/math3/genetics/Chromosome;Lorg/apache/commons/math3/genetics/Chromosome;)Lorg/apache/commons/math3/genetics/ChromosomePair;
org.apache.commons.math3.genetics.OrderedCrossover.crossover(Lorg/apache/commons/math3/genetics/Chromosome;Lorg/apache/commons/math3/genetics/Chromosome;)Lorg/apache/commons/math3/genetics/ChromosomePair;
org.apache.commons.math3.genetics.OrderedCrossover.mate(Lorg/apache/commons/math3/genetics/AbstractListChromosome;Lorg/apache/commons/math3/genetics/AbstractListChromosome;)Lorg/apache/commons/math3/genetics/ChromosomePair;
org.apache.commons.math3.genetics.RandomKeyMutation.mutate(Lorg/apache/commons/math3/genetics/Chromosome;)Lorg/apache/commons/math3/genetics/Chromosome;
org.apache.commons.math3.genetics.TournamentSelection$1.nextGeneration()Lorg/apache/commons/math3/genetics/Population;
org.apache.commons.math3.genetics.TournamentSelection.getArity()I
org.apache.commons.math3.genetics.TournamentSelection.select(Lorg/apache/commons/math3/genetics/Population;)Lorg/apache/commons/math3/genetics/ChromosomePair;
org.apache.commons.math3.genetics.TournamentSelection.setArity(I)V
org.apache.commons.math3.genetics.TournamentSelection.tournament(Lorg/apache/commons/math3/genetics/ListPopulation;)Lorg/apache/commons/math3/genetics/Chromosome;
org.apache.commons.math3.genetics.UniformCrossover.crossover(Lorg/apache/commons/math3/genetics/Chromosome;Lorg/apache/commons/math3/genetics/Chromosome;)Lorg/apache/commons/math3/genetics/ChromosomePair;
org.apache.commons.math3.genetics.UniformCrossover.getRatio()D
org.apache.commons.math3.genetics.UniformCrossover.mate(Lorg/apache/commons/math3/genetics/AbstractListChromosome;Lorg/apache/commons/math3/genetics/AbstractListChromosome;)Lorg/apache/commons/math3/genetics/ChromosomePair;
org.apache.commons.math3.geometry.VectorFormat.format(Ljava/lang/StringBuffer;Ljava/text/FieldPosition;[D)Ljava/lang/StringBuffer;
org.apache.commons.math3.geometry.VectorFormat.format(Lorg/apache/commons/math3/geometry/Vector;)Ljava/lang/String;
org.apache.commons.math3.geometry.VectorFormat.getAvailableLocales()[Ljava/util/Locale;
org.apache.commons.math3.geometry.VectorFormat.parseCoordinates(ILjava/lang/String;Ljava/text/ParsePosition;)[D
org.apache.commons.math3.geometry.enclosing.EnclosingBall.contains(Lorg/apache/commons/math3/geometry/Point;)Z
org.apache.commons.math3.geometry.enclosing.EnclosingBall.contains(Lorg/apache/commons/math3/geometry/Point;D)Z
org.apache.commons.math3.geometry.enclosing.EnclosingBall.getCenter()Lorg/apache/commons/math3/geometry/Point;
org.apache.commons.math3.geometry.enclosing.EnclosingBall.getRadius()D
org.apache.commons.math3.geometry.enclosing.EnclosingBall.getSupport()[Lorg/apache/commons/math3/geometry/Point;
org.apache.commons.math3.geometry.enclosing.EnclosingBall.getSupportSize()I
org.apache.commons.math3.geometry.enclosing.WelzlEncloser.enclose(Ljava/lang/Iterable;)Lorg/apache/commons/math3/geometry/enclosing/EnclosingBall;
org.apache.commons.math3.geometry.enclosing.WelzlEncloser.moveToFrontBall(Ljava/util/List;ILjava/util/List;)Lorg/apache/commons/math3/geometry/enclosing/EnclosingBall;
org.apache.commons.math3.geometry.enclosing.WelzlEncloser.pivotingBall(Ljava/lang/Iterable;)Lorg/apache/commons/math3/geometry/enclosing/EnclosingBall;
org.apache.commons.math3.geometry.enclosing.WelzlEncloser.selectFarthest(Ljava/lang/Iterable;Lorg/apache/commons/math3/geometry/enclosing/EnclosingBall;)Lorg/apache/commons/math3/geometry/Point;
org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D$LazyHolder.access$000()Lorg/apache/commons/math3/geometry/euclidean/oned/Euclidean1D;
org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D.getDimension()I
org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D.getInstance()Lorg/apache/commons/math3/geometry/euclidean/oned/Euclidean1D;
org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D.getSubSpace()Lorg/apache/commons/math3/geometry/Space;
org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D.readResolve()Ljava/lang/Object;
org.apache.commons.math3.geometry.euclidean.oned.Interval.checkPoint(DD)Lorg/apache/commons/math3/geometry/partitioning/Region$Location;
org.apache.commons.math3.geometry.euclidean.oned.Interval.getBarycenter()D
org.apache.commons.math3.geometry.euclidean.oned.Interval.getInf()D
org.apache.commons.math3.geometry.euclidean.oned.Interval.getLength()D
org.apache.commons.math3.geometry.euclidean.oned.Interval.getLower()D
org.apache.commons.math3.geometry.euclidean.oned.Interval.getMidPoint()D
org.apache.commons.math3.geometry.euclidean.oned.Interval.getSize()D
org.apache.commons.math3.geometry.euclidean.oned.Interval.getSup()D
org.apache.commons.math3.geometry.euclidean.oned.Interval.getUpper()D
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator.hasNext()Z
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator.next()Ljava/lang/Object;
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator.next()[D
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator.remove()V
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator.selectPending()V
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.access$000(Lorg/apache/commons/math3/geometry/euclidean/oned/IntervalsSet;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.access$100(Lorg/apache/commons/math3/geometry/euclidean/oned/IntervalsSet;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.access$200(Lorg/apache/commons/math3/geometry/euclidean/oned/IntervalsSet;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.access$300(Lorg/apache/commons/math3/geometry/euclidean/oned/IntervalsSet;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)D
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.access$400(Lorg/apache/commons/math3/geometry/euclidean/oned/IntervalsSet;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.access$500(Lorg/apache/commons/math3/geometry/euclidean/oned/IntervalsSet;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.asList()Ljava/util/List;
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.buildNew(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/euclidean/oned/IntervalsSet;
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.buildNew(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/AbstractRegion;
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.buildNew(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/Region;
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.childAfter(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.childBefore(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties()V
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.finiteOrNullPoint(D)Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.getAngle(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)D
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.getFirstIntervalBoundary()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.getFirstLeaf(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.getInf()D
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.getSup()D
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.isAfterParent(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.isBeforeParent(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.isDirect(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.isIntervalEnd(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.isIntervalStart(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.iterator()Ljava/util/Iterator;
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.leafAfter(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.leafBefore(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.nextInternalNode(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.previousInternalNode(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.projectToBoundary(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/partitioning/BoundaryProjection;
org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.copySelf()Lorg/apache/commons/math3/geometry/euclidean/oned/OrientedPoint;
org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.copySelf()Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.getLocation()Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;
org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.getOffset(Lorg/apache/commons/math3/geometry/Point;)D
org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.getOffset(Lorg/apache/commons/math3/geometry/Vector;)D
org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.getTolerance()D
org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.isDirect()Z
org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.project(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/Point;
org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.revertSelf()V
org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.sameOrientationAs(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Z
org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.wholeHyperplane()Lorg/apache/commons/math3/geometry/euclidean/oned/SubOrientedPoint;
org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.wholeHyperplane()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.wholeSpace()Lorg/apache/commons/math3/geometry/euclidean/oned/IntervalsSet;
org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.wholeSpace()Lorg/apache/commons/math3/geometry/partitioning/Region;
org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint.buildNew(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Region;)Lorg/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane;
org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint.getSize()D
org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint.isEmpty()Z
org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint.split(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane;
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.add(DLorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/Vector;
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.add(DLorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.add(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/Vector;
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.add(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.distance(Lorg/apache/commons/math3/geometry/Point;)D
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.distance(Lorg/apache/commons/math3/geometry/Vector;)D
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.distance(Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;)D
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.distance1(Lorg/apache/commons/math3/geometry/Vector;)D
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.distanceInf(Lorg/apache/commons/math3/geometry/Vector;)D
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.distanceInf(Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;)D
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.distanceSq(Lorg/apache/commons/math3/geometry/Vector;)D
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.distanceSq(Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;)D
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.dotProduct(Lorg/apache/commons/math3/geometry/Vector;)D
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.equals(Ljava/lang/Object;)Z
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.getNorm()D
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.getNorm1()D
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.getNormInf()D
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.getNormSq()D
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.getSpace()Lorg/apache/commons/math3/geometry/Space;
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.getX()D
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.getZero()Lorg/apache/commons/math3/geometry/Vector;
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.getZero()Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.hashCode()I
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.isInfinite()Z
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.isNaN()Z
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.negate()Lorg/apache/commons/math3/geometry/Vector;
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.negate()Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.normalize()Lorg/apache/commons/math3/geometry/Vector;
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.normalize()Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.scalarMultiply(D)Lorg/apache/commons/math3/geometry/Vector;
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.scalarMultiply(D)Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.subtract(DLorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/Vector;
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.subtract(DLorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.subtract(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/Vector;
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.subtract(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.toString()Ljava/lang/String;
org.apache.commons.math3.geometry.euclidean.oned.Vector1D.toString(Ljava/text/NumberFormat;)Ljava/lang/String;
org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormat.format(Lorg/apache/commons/math3/geometry/Vector;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;
org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormat.getInstance()Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1DFormat;
org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormat.getInstance(Ljava/util/Locale;)Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1DFormat;
org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormat.parse(Ljava/lang/String;)Lorg/apache/commons/math3/geometry/Vector;
org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormat.parse(Ljava/lang/String;)Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;
org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormat.parse(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math3/geometry/Vector;
org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormat.parse(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;
org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D$LazyHolder.access$000()Lorg/apache/commons/math3/geometry/euclidean/threed/Euclidean3D;
org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D.getDimension()I
org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D.getInstance()Lorg/apache/commons/math3/geometry/euclidean/threed/Euclidean3D;
org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D.getSubSpace()Lorg/apache/commons/math3/geometry/Space;
org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D.getSubSpace()Lorg/apache/commons/math3/geometry/euclidean/twod/Euclidean2D;
org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D.readResolve()Ljava/lang/Object;
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.applyInverseTo(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.applyInverseTo(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.applyInverseTo(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.applyInverseTo(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.applyInverseTo(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.applyInverseTo(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.applyInverseTo([D[Lorg/apache/commons/math3/RealFieldElement;)V
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.applyInverseTo([Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;)V
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.applyTo(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.applyTo(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.applyTo(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.applyTo(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.applyTo(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.applyTo(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.applyTo([D[Lorg/apache/commons/math3/RealFieldElement;)V
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.applyTo([Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;)V
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.buildArray(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)[Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.compose(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.compose(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.composeInternal(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.composeInternal(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.composeInverse(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.composeInverse(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.composeInverseInternal(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.composeInverseInternal(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.distance(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;)Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.getAngle()Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.getAngles(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;)[Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.getAngles(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.getAxis()Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.getAxis(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.getMatrix()[[Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.getQ0()Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.getQ1()Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.getQ2()Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.getQ3()Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.mat2quat([[Lorg/apache/commons/math3/RealFieldElement;)[Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.orthogonalizeMatrix([[Lorg/apache/commons/math3/RealFieldElement;D)[[Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.revert()Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.toRotation()Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;
org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.vector(DDD)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.add(DLorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.add(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.add(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.add(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.add(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.add(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.angle(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.angle(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.angle(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.crossProduct(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.crossProduct(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.crossProduct(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.crossProduct(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.crossProduct(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.distance(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.distance(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.distance(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.distance(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.distance(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.distance1(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.distance1(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.distance1(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.distance1(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.distance1(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.distanceInf(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.distanceInf(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.distanceInf(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.distanceInf(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.distanceInf(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.distanceSq(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.distanceSq(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.distanceSq(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.distanceSq(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.distanceSq(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.dotProduct(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.dotProduct(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.dotProduct(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.dotProduct(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.dotProduct(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.equals(Ljava/lang/Object;)Z
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.getAlpha()Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.getDelta()Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.getNorm()Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.getNorm1()Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.getNormInf()Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.getNormSq()Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.getX()Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.getY()Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.getZ()Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.hashCode()I
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.isInfinite()Z
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.isNaN()Z
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.negate()Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.normalize()Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.orthogonal()Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.scalarMultiply(D)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.scalarMultiply(Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.subtract(DLorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.subtract(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.subtract(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.subtract(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.subtract(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.subtract(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.toArray()[Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.toString()Ljava/lang/String;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.toString(Ljava/text/NumberFormat;)Ljava/lang/String;
org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.toVector3D()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.euclidean.threed.Line.closestPoint(Lorg/apache/commons/math3/geometry/euclidean/threed/Line;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.euclidean.threed.Line.contains(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Z
org.apache.commons.math3.geometry.euclidean.threed.Line.distance(Lorg/apache/commons/math3/geometry/euclidean/threed/Line;)D
org.apache.commons.math3.geometry.euclidean.threed.Line.distance(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)D
org.apache.commons.math3.geometry.euclidean.threed.Line.getAbscissa(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)D
org.apache.commons.math3.geometry.euclidean.threed.Line.getDirection()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.euclidean.threed.Line.getOrigin()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.euclidean.threed.Line.getTolerance()D
org.apache.commons.math3.geometry.euclidean.threed.Line.intersection(Lorg/apache/commons/math3/geometry/euclidean/threed/Line;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.euclidean.threed.Line.isSimilarTo(Lorg/apache/commons/math3/geometry/euclidean/threed/Line;)Z
org.apache.commons.math3.geometry.euclidean.threed.Line.pointAt(D)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.euclidean.threed.Line.reset(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
org.apache.commons.math3.geometry.euclidean.threed.Line.revert()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;
org.apache.commons.math3.geometry.euclidean.threed.Line.toSpace(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/Point;
org.apache.commons.math3.geometry.euclidean.threed.Line.toSpace(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.euclidean.threed.Line.toSpace(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.euclidean.threed.Line.toSubSpace(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/Point;
org.apache.commons.math3.geometry.euclidean.threed.Line.toSubSpace(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;
org.apache.commons.math3.geometry.euclidean.threed.Line.toSubSpace(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;
org.apache.commons.math3.geometry.euclidean.threed.Line.wholeLine()Lorg/apache/commons/math3/geometry/euclidean/threed/SubLine;
org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor$BoundaryProjector.addContribution(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Z)V
org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor$BoundaryProjector.getProjected()Lorg/apache/commons/math3/geometry/euclidean/twod/PolygonsSet;
org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor$BoundaryProjector.visitInternalNode(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V
org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor$BoundaryProjector.visitLeafNode(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V
org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor$BoundaryProjector.visitOrder(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTreeVisitor$Order;
org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor.access$000(Lorg/apache/commons/math3/geometry/euclidean/threed/OutlineExtractor;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor.access$100(Lorg/apache/commons/math3/geometry/euclidean/threed/OutlineExtractor;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor.access$200(Lorg/apache/commons/math3/geometry/euclidean/threed/OutlineExtractor;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor.getOutline(Lorg/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet;)[[Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor.pointIsBetween([Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;II)Z
org.apache.commons.math3.geometry.euclidean.threed.Plane.contains(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Z
org.apache.commons.math3.geometry.euclidean.threed.Plane.copySelf()Lorg/apache/commons/math3/geometry/euclidean/threed/Plane;
org.apache.commons.math3.geometry.euclidean.threed.Plane.copySelf()Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
org.apache.commons.math3.geometry.euclidean.threed.Plane.getNormal()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.euclidean.threed.Plane.getOffset(Lorg/apache/commons/math3/geometry/Point;)D
org.apache.commons.math3.geometry.euclidean.threed.Plane.getOffset(Lorg/apache/commons/math3/geometry/Vector;)D
org.apache.commons.math3.geometry.euclidean.threed.Plane.getOffset(Lorg/apache/commons/math3/geometry/euclidean/threed/Plane;)D
org.apache.commons.math3.geometry.euclidean.threed.Plane.getOrigin()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.euclidean.threed.Plane.getPointAt(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;D)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.euclidean.threed.Plane.getTolerance()D
org.apache.commons.math3.geometry.euclidean.threed.Plane.getU()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.euclidean.threed.Plane.getV()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.euclidean.threed.Plane.intersection(Lorg/apache/commons/math3/geometry/euclidean/threed/Line;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.euclidean.threed.Plane.intersection(Lorg/apache/commons/math3/geometry/euclidean/threed/Plane;)Lorg/apache/commons/math3/geometry/euclidean/threed/Line;
org.apache.commons.math3.geometry.euclidean.threed.Plane.intersection(Lorg/apache/commons/math3/geometry/euclidean/threed/Plane;Lorg/apache/commons/math3/geometry/euclidean/threed/Plane;Lorg/apache/commons/math3/geometry/euclidean/threed/Plane;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.euclidean.threed.Plane.isSimilarTo(Lorg/apache/commons/math3/geometry/euclidean/threed/Plane;)Z
org.apache.commons.math3.geometry.euclidean.threed.Plane.project(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/Point;
org.apache.commons.math3.geometry.euclidean.threed.Plane.reset(Lorg/apache/commons/math3/geometry/euclidean/threed/Plane;)V
org.apache.commons.math3.geometry.euclidean.threed.Plane.reset(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
org.apache.commons.math3.geometry.euclidean.threed.Plane.revertSelf()V
org.apache.commons.math3.geometry.euclidean.threed.Plane.rotate(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Plane;
org.apache.commons.math3.geometry.euclidean.threed.Plane.sameOrientationAs(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Z
org.apache.commons.math3.geometry.euclidean.threed.Plane.setFrame()V
org.apache.commons.math3.geometry.euclidean.threed.Plane.setNormal(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
org.apache.commons.math3.geometry.euclidean.threed.Plane.toSpace(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/Point;
org.apache.commons.math3.geometry.euclidean.threed.Plane.toSpace(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.euclidean.threed.Plane.toSpace(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.euclidean.threed.Plane.toSubSpace(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/Point;
org.apache.commons.math3.geometry.euclidean.threed.Plane.toSubSpace(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
org.apache.commons.math3.geometry.euclidean.threed.Plane.toSubSpace(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
org.apache.commons.math3.geometry.euclidean.threed.Plane.translate(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Plane;
org.apache.commons.math3.geometry.euclidean.threed.Plane.wholeHyperplane()Lorg/apache/commons/math3/geometry/euclidean/threed/SubPlane;
org.apache.commons.math3.geometry.euclidean.threed.Plane.wholeHyperplane()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
org.apache.commons.math3.geometry.euclidean.threed.Plane.wholeSpace()Lorg/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet;
org.apache.commons.math3.geometry.euclidean.threed.Plane.wholeSpace()Lorg/apache/commons/math3/geometry/partitioning/Region;
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$FacetsContributionVisitor.addContribution(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Z)V
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$FacetsContributionVisitor.visitInternalNode(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$FacetsContributionVisitor.visitLeafNode(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$FacetsContributionVisitor.visitOrder(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTreeVisitor$Order;
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$RotationTransform.apply(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/Point;
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$RotationTransform.apply(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$RotationTransform.apply(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/euclidean/threed/Plane;
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$RotationTransform.apply(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$RotationTransform.apply(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$TranslationTransform.apply(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/Point;
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$TranslationTransform.apply(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$TranslationTransform.apply(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/euclidean/threed/Plane;
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$TranslationTransform.apply(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$TranslationTransform.apply(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.access$000(Lorg/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet;D)V
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.access$100(Lorg/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet;Lorg/apache/commons/math3/geometry/Point;)V
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.access$200(Lorg/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet;D)V
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.access$300(Lorg/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet;Lorg/apache/commons/math3/geometry/Point;)V
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.access$400(Lorg/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet;D)V
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.access$500(Lorg/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet;Lorg/apache/commons/math3/geometry/Point;)V
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.boundaryFacet(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.buildNew(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet;
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.buildNew(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/AbstractRegion;
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.buildNew(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/Region;
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.computeGeometricalProperties()V
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.firstIntersection(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Line;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.recurseFirstIntersection(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Line;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.rotate(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet;
org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.translate(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet;
org.apache.commons.math3.geometry.euclidean.threed.Rotation.applyInverseTo(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;
org.apache.commons.math3.geometry.euclidean.threed.Rotation.applyInverseTo(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.euclidean.threed.Rotation.applyInverseTo([D[D)V
org.apache.commons.math3.geometry.euclidean.threed.Rotation.applyTo(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;
org.apache.commons.math3.geometry.euclidean.threed.Rotation.applyTo(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.euclidean.threed.Rotation.applyTo([D[D)V
org.apache.commons.math3.geometry.euclidean.threed.Rotation.compose(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;
org.apache.commons.math3.geometry.euclidean.threed.Rotation.composeInternal(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;
org.apache.commons.math3.geometry.euclidean.threed.Rotation.composeInverse(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;
org.apache.commons.math3.geometry.euclidean.threed.Rotation.composeInverseInternal(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;
org.apache.commons.math3.geometry.euclidean.threed.Rotation.distance(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)D
org.apache.commons.math3.geometry.euclidean.threed.Rotation.getAngle()D
org.apache.commons.math3.geometry.euclidean.threed.Rotation.getAngles(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;)[D
org.apache.commons.math3.geometry.euclidean.threed.Rotation.getAngles(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D
org.apache.commons.math3.geometry.euclidean.threed.Rotation.getAxis()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.euclidean.threed.Rotation.getAxis(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.euclidean.threed.Rotation.getMatrix()[[D
org.apache.commons.math3.geometry.euclidean.threed.Rotation.getQ0()D
org.apache.commons.math3.geometry.euclidean.threed.Rotation.getQ1()D
org.apache.commons.math3.geometry.euclidean.threed.Rotation.getQ2()D
org.apache.commons.math3.geometry.euclidean.threed.Rotation.getQ3()D
org.apache.commons.math3.geometry.euclidean.threed.Rotation.mat2quat([[D)[D
org.apache.commons.math3.geometry.euclidean.threed.Rotation.orthogonalizeMatrix([[DD)[[D
org.apache.commons.math3.geometry.euclidean.threed.Rotation.revert()Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;
org.apache.commons.math3.geometry.euclidean.threed.RotationConvention.valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;
org.apache.commons.math3.geometry.euclidean.threed.RotationConvention.values()[Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;
org.apache.commons.math3.geometry.euclidean.threed.RotationOrder.getA1()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.euclidean.threed.RotationOrder.getA2()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.euclidean.threed.RotationOrder.getA3()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.euclidean.threed.RotationOrder.toString()Ljava/lang/String;
org.apache.commons.math3.geometry.euclidean.threed.Segment.getEnd()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.euclidean.threed.Segment.getLine()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;
org.apache.commons.math3.geometry.euclidean.threed.Segment.getStart()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.euclidean.threed.SphereGenerator.ballOnSupport(Ljava/util/List;)Lorg/apache/commons/math3/geometry/enclosing/EnclosingBall;
org.apache.commons.math3.geometry.euclidean.threed.SphereGenerator.minor([Lorg/apache/commons/math3/fraction/BigFraction;[Lorg/apache/commons/math3/fraction/BigFraction;[Lorg/apache/commons/math3/fraction/BigFraction;)Lorg/apache/commons/math3/fraction/BigFraction;
org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates$DataTransferObject.readResolve()Ljava/lang/Object;
org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates.computeHessians()V
org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates.computeJacobian()V
org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates.getCartesian()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates.getPhi()D
org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates.getR()D
org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates.getTheta()D
org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates.toCartesianGradient([D)[D
org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates.toCartesianHessian([[D[D)[[D
org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates.writeReplace()Ljava/lang/Object;
org.apache.commons.math3.geometry.euclidean.threed.SubLine.buildIntervalSet(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;D)Lorg/apache/commons/math3/geometry/euclidean/oned/IntervalsSet;
org.apache.commons.math3.geometry.euclidean.threed.SubLine.getSegments()Ljava/util/List;
org.apache.commons.math3.geometry.euclidean.threed.SubLine.intersection(Lorg/apache/commons/math3/geometry/euclidean/threed/SubLine;Z)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.euclidean.threed.SubPlane.buildNew(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Region;)Lorg/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane;
org.apache.commons.math3.geometry.euclidean.threed.SubPlane.split(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane;
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.add(DLorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/Vector;
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.add(DLorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.add(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/Vector;
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.add(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.angle(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)D
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.crossProduct(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.crossProduct(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.distance(Lorg/apache/commons/math3/geometry/Point;)D
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.distance(Lorg/apache/commons/math3/geometry/Vector;)D
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.distance(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)D
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.distance1(Lorg/apache/commons/math3/geometry/Vector;)D
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.distance1(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)D
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.distanceInf(Lorg/apache/commons/math3/geometry/Vector;)D
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.distanceInf(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)D
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.distanceSq(Lorg/apache/commons/math3/geometry/Vector;)D
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.distanceSq(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)D
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.dotProduct(Lorg/apache/commons/math3/geometry/Vector;)D
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.dotProduct(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)D
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.equals(Ljava/lang/Object;)Z
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getAlpha()D
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getDelta()D
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getNorm()D
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getNorm1()D
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getNormInf()D
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getNormSq()D
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getSpace()Lorg/apache/commons/math3/geometry/Space;
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getX()D
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getY()D
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getZ()D
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getZero()Lorg/apache/commons/math3/geometry/Vector;
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getZero()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.hashCode()I
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.isInfinite()Z
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.isNaN()Z
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.negate()Lorg/apache/commons/math3/geometry/Vector;
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.negate()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.normalize()Lorg/apache/commons/math3/geometry/Vector;
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.normalize()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.orthogonal()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.scalarMultiply(D)Lorg/apache/commons/math3/geometry/Vector;
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.scalarMultiply(D)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.subtract(DLorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/Vector;
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.subtract(DLorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.subtract(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/Vector;
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.subtract(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.toArray()[D
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.toString()Ljava/lang/String;
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.toString(Ljava/text/NumberFormat;)Ljava/lang/String;
org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat.format(Lorg/apache/commons/math3/geometry/Vector;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;
org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat.getInstance()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3DFormat;
org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat.getInstance(Ljava/util/Locale;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3DFormat;
org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat.parse(Ljava/lang/String;)Lorg/apache/commons/math3/geometry/Vector;
org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat.parse(Ljava/lang/String;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat.parse(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math3/geometry/Vector;
org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat.parse(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.euclidean.twod.DiskGenerator.ballOnSupport(Ljava/util/List;)Lorg/apache/commons/math3/geometry/enclosing/EnclosingBall;
org.apache.commons.math3.geometry.euclidean.twod.DiskGenerator.minor([Lorg/apache/commons/math3/fraction/BigFraction;[Lorg/apache/commons/math3/fraction/BigFraction;)Lorg/apache/commons/math3/fraction/BigFraction;
org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D$LazyHolder.access$000()Lorg/apache/commons/math3/geometry/euclidean/twod/Euclidean2D;
org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D.getDimension()I
org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D.getInstance()Lorg/apache/commons/math3/geometry/euclidean/twod/Euclidean2D;
org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D.getSubSpace()Lorg/apache/commons/math3/geometry/Space;
org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D.getSubSpace()Lorg/apache/commons/math3/geometry/euclidean/oned/Euclidean1D;
org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D.readResolve()Ljava/lang/Object;
org.apache.commons.math3.geometry.euclidean.twod.Line$LineTransform.apply(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/Point;
org.apache.commons.math3.geometry.euclidean.twod.Line$LineTransform.apply(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
org.apache.commons.math3.geometry.euclidean.twod.Line$LineTransform.apply(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/euclidean/twod/Line;
org.apache.commons.math3.geometry.euclidean.twod.Line$LineTransform.apply(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
org.apache.commons.math3.geometry.euclidean.twod.Line$LineTransform.apply(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
org.apache.commons.math3.geometry.euclidean.twod.Line.access$000(Lorg/apache/commons/math3/geometry/euclidean/twod/Line;)D
org.apache.commons.math3.geometry.euclidean.twod.Line.access$100(Lorg/apache/commons/math3/geometry/euclidean/twod/Line;)D
org.apache.commons.math3.geometry.euclidean.twod.Line.access$200(Lorg/apache/commons/math3/geometry/euclidean/twod/Line;)D
org.apache.commons.math3.geometry.euclidean.twod.Line.access$300(Lorg/apache/commons/math3/geometry/euclidean/twod/Line;)D
org.apache.commons.math3.geometry.euclidean.twod.Line.contains(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)Z
org.apache.commons.math3.geometry.euclidean.twod.Line.copySelf()Lorg/apache/commons/math3/geometry/euclidean/twod/Line;
org.apache.commons.math3.geometry.euclidean.twod.Line.copySelf()Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
org.apache.commons.math3.geometry.euclidean.twod.Line.distance(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)D
org.apache.commons.math3.geometry.euclidean.twod.Line.getAngle()D
org.apache.commons.math3.geometry.euclidean.twod.Line.getOffset(Lorg/apache/commons/math3/geometry/Point;)D
org.apache.commons.math3.geometry.euclidean.twod.Line.getOffset(Lorg/apache/commons/math3/geometry/Vector;)D
org.apache.commons.math3.geometry.euclidean.twod.Line.getOffset(Lorg/apache/commons/math3/geometry/euclidean/twod/Line;)D
org.apache.commons.math3.geometry.euclidean.twod.Line.getOriginOffset()D
org.apache.commons.math3.geometry.euclidean.twod.Line.getPointAt(Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;D)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
org.apache.commons.math3.geometry.euclidean.twod.Line.getReverse()Lorg/apache/commons/math3/geometry/euclidean/twod/Line;
org.apache.commons.math3.geometry.euclidean.twod.Line.getTolerance()D
org.apache.commons.math3.geometry.euclidean.twod.Line.intersection(Lorg/apache/commons/math3/geometry/euclidean/twod/Line;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
org.apache.commons.math3.geometry.euclidean.twod.Line.isParallelTo(Lorg/apache/commons/math3/geometry/euclidean/twod/Line;)Z
org.apache.commons.math3.geometry.euclidean.twod.Line.project(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/Point;
org.apache.commons.math3.geometry.euclidean.twod.Line.reset(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;D)V
org.apache.commons.math3.geometry.euclidean.twod.Line.reset(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)V
org.apache.commons.math3.geometry.euclidean.twod.Line.revertSelf()V
org.apache.commons.math3.geometry.euclidean.twod.Line.sameOrientationAs(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Z
org.apache.commons.math3.geometry.euclidean.twod.Line.setAngle(D)V
org.apache.commons.math3.geometry.euclidean.twod.Line.setOriginOffset(D)V
org.apache.commons.math3.geometry.euclidean.twod.Line.toSpace(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/Point;
org.apache.commons.math3.geometry.euclidean.twod.Line.toSpace(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
org.apache.commons.math3.geometry.euclidean.twod.Line.toSpace(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
org.apache.commons.math3.geometry.euclidean.twod.Line.toSubSpace(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/Point;
org.apache.commons.math3.geometry.euclidean.twod.Line.toSubSpace(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;
org.apache.commons.math3.geometry.euclidean.twod.Line.toSubSpace(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;
org.apache.commons.math3.geometry.euclidean.twod.Line.translateToPoint(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)V
org.apache.commons.math3.geometry.euclidean.twod.Line.unlinkReverse()V
org.apache.commons.math3.geometry.euclidean.twod.Line.wholeHyperplane()Lorg/apache/commons/math3/geometry/euclidean/twod/SubLine;
org.apache.commons.math3.geometry.euclidean.twod.Line.wholeHyperplane()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
org.apache.commons.math3.geometry.euclidean.twod.Line.wholeSpace()Lorg/apache/commons/math3/geometry/euclidean/twod/PolygonsSet;
org.apache.commons.math3.geometry.euclidean.twod.Line.wholeSpace()Lorg/apache/commons/math3/geometry/partitioning/Region;
org.apache.commons.math3.geometry.euclidean.twod.NestedLoops.add(Lorg/apache/commons/math3/geometry/euclidean/twod/NestedLoops;)V
org.apache.commons.math3.geometry.euclidean.twod.NestedLoops.add([Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)V
org.apache.commons.math3.geometry.euclidean.twod.NestedLoops.correctOrientation()V
org.apache.commons.math3.geometry.euclidean.twod.NestedLoops.setClockWise(Z)V
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ConnectableSegment.getEndNode()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ConnectableSegment.getNext()Lorg/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$ConnectableSegment;
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ConnectableSegment.getNode()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ConnectableSegment.getPrevious()Lorg/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$ConnectableSegment;
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ConnectableSegment.getStartNode()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ConnectableSegment.isProcessed()Z
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ConnectableSegment.setNext(Lorg/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$ConnectableSegment;)V
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ConnectableSegment.setPrevious(Lorg/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$ConnectableSegment;)V
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ConnectableSegment.setProcessed(Z)V
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$Edge.getEnd()Lorg/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$Vertex;
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$Edge.getLine()Lorg/apache/commons/math3/geometry/euclidean/twod/Line;
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$Edge.getNode()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$Edge.getStart()Lorg/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$Vertex;
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$Edge.setNode(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$Edge.split(Lorg/apache/commons/math3/geometry/euclidean/twod/Line;)Lorg/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$Vertex;
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Ljava/lang/Iterable;Z)V
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.getSegments()Ljava/util/List;
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.selectClosest(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Ljava/lang/Iterable;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.visitInternalNode(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.visitLeafNode(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.visitOrder(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTreeVisitor$Order;
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$Vertex.bindWith(Lorg/apache/commons/math3/geometry/euclidean/twod/Line;)V
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$Vertex.getIncoming()Lorg/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$Edge;
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$Vertex.getLocation()Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$Vertex.getOutgoing()Lorg/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$Edge;
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$Vertex.setIncoming(Lorg/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$Edge;)V
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$Vertex.setOutgoing(Lorg/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$Edge;)V
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$Vertex.sharedLineWith(Lorg/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$Vertex;)Lorg/apache/commons/math3/geometry/euclidean/twod/Line;
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.buildNew(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/euclidean/twod/PolygonsSet;
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.buildNew(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/AbstractRegion;
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.buildNew(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/Region;
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.closeVerticesConnections(Ljava/util/List;)I
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.computeGeometricalProperties()V
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.filterSpuriousVertices(Ljava/util/List;)V
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.followLoop(Lorg/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$ConnectableSegment;)Ljava/util/List;
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getUnprocessed(Ljava/util/List;)Lorg/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$ConnectableSegment;
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices()[[Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.naturalFollowerConnections(Ljava/util/List;)I
org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.splitEdgeConnections(Ljava/util/List;)I
org.apache.commons.math3.geometry.euclidean.twod.Segment.distance(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)D
org.apache.commons.math3.geometry.euclidean.twod.Segment.getEnd()Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
org.apache.commons.math3.geometry.euclidean.twod.Segment.getLine()Lorg/apache/commons/math3/geometry/euclidean/twod/Line;
org.apache.commons.math3.geometry.euclidean.twod.Segment.getStart()Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
org.apache.commons.math3.geometry.euclidean.twod.SubLine.buildIntervalSet(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;D)Lorg/apache/commons/math3/geometry/euclidean/oned/IntervalsSet;
org.apache.commons.math3.geometry.euclidean.twod.SubLine.buildNew(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Region;)Lorg/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane;
org.apache.commons.math3.geometry.euclidean.twod.SubLine.getSegments()Ljava/util/List;
org.apache.commons.math3.geometry.euclidean.twod.SubLine.intersection(Lorg/apache/commons/math3/geometry/euclidean/twod/SubLine;Z)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
org.apache.commons.math3.geometry.euclidean.twod.SubLine.split(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane;
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.add(DLorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/Vector;
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.add(DLorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.add(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/Vector;
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.add(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.angle(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)D
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.crossProduct(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)D
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.distance(Lorg/apache/commons/math3/geometry/Point;)D
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.distance(Lorg/apache/commons/math3/geometry/Vector;)D
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.distance(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)D
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.distance1(Lorg/apache/commons/math3/geometry/Vector;)D
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.distanceInf(Lorg/apache/commons/math3/geometry/Vector;)D
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.distanceInf(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)D
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.distanceSq(Lorg/apache/commons/math3/geometry/Vector;)D
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.distanceSq(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)D
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.dotProduct(Lorg/apache/commons/math3/geometry/Vector;)D
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.equals(Ljava/lang/Object;)Z
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.getNorm()D
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.getNorm1()D
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.getNormInf()D
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.getNormSq()D
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.getSpace()Lorg/apache/commons/math3/geometry/Space;
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.getX()D
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.getY()D
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.getZero()Lorg/apache/commons/math3/geometry/Vector;
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.getZero()Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.hashCode()I
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.isInfinite()Z
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.isNaN()Z
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.negate()Lorg/apache/commons/math3/geometry/Vector;
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.negate()Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.normalize()Lorg/apache/commons/math3/geometry/Vector;
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.normalize()Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.scalarMultiply(D)Lorg/apache/commons/math3/geometry/Vector;
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.scalarMultiply(D)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.subtract(DLorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/Vector;
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.subtract(DLorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.subtract(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/Vector;
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.subtract(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.toArray()[D
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.toString()Ljava/lang/String;
org.apache.commons.math3.geometry.euclidean.twod.Vector2D.toString(Ljava/text/NumberFormat;)Ljava/lang/String;
org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormat.format(Lorg/apache/commons/math3/geometry/Vector;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;
org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormat.getInstance()Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2DFormat;
org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormat.getInstance(Ljava/util/Locale;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2DFormat;
org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormat.parse(Ljava/lang/String;)Lorg/apache/commons/math3/geometry/Vector;
org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormat.parse(Ljava/lang/String;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormat.parse(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math3/geometry/Vector;
org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormat.parse(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
org.apache.commons.math3.geometry.euclidean.twod.hull.AbstractConvexHullGenerator2D.generate(Ljava/util/Collection;)Lorg/apache/commons/math3/geometry/euclidean/twod/hull/ConvexHull2D;
org.apache.commons.math3.geometry.euclidean.twod.hull.AbstractConvexHullGenerator2D.getTolerance()D
org.apache.commons.math3.geometry.euclidean.twod.hull.AbstractConvexHullGenerator2D.isIncludeCollinearPoints()Z
org.apache.commons.math3.geometry.euclidean.twod.hull.AklToussaintHeuristic.buildQuadrilateral([Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)Ljava/util/List;
org.apache.commons.math3.geometry.euclidean.twod.hull.AklToussaintHeuristic.insideQuadrilateral(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Ljava/util/List;)Z
org.apache.commons.math3.geometry.euclidean.twod.hull.ConvexHull2D.createRegion()Lorg/apache/commons/math3/geometry/partitioning/Region;
org.apache.commons.math3.geometry.euclidean.twod.hull.ConvexHull2D.getLineSegments()[Lorg/apache/commons/math3/geometry/euclidean/twod/Segment;
org.apache.commons.math3.geometry.euclidean.twod.hull.ConvexHull2D.getVertices()[Lorg/apache/commons/math3/geometry/Point;
org.apache.commons.math3.geometry.euclidean.twod.hull.ConvexHull2D.getVertices()[Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
org.apache.commons.math3.geometry.euclidean.twod.hull.ConvexHull2D.isConvex([Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)Z
org.apache.commons.math3.geometry.euclidean.twod.hull.ConvexHull2D.retrieveLineSegments()[Lorg/apache/commons/math3/geometry/euclidean/twod/Segment;
org.apache.commons.math3.geometry.euclidean.twod.hull.MonotoneChain$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I
org.apache.commons.math3.geometry.euclidean.twod.hull.MonotoneChain$1.compare(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)I
org.apache.commons.math3.geometry.euclidean.twod.hull.MonotoneChain.findHullVertices(Ljava/util/Collection;)Ljava/util/Collection;
org.apache.commons.math3.geometry.euclidean.twod.hull.MonotoneChain.generate(Ljava/util/Collection;)Lorg/apache/commons/math3/geometry/euclidean/twod/hull/ConvexHull2D;
org.apache.commons.math3.geometry.euclidean.twod.hull.MonotoneChain.getTolerance()D
org.apache.commons.math3.geometry.euclidean.twod.hull.MonotoneChain.isIncludeCollinearPoints()Z
org.apache.commons.math3.geometry.euclidean.twod.hull.MonotoneChain.updateHull(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Ljava/util/List;)V
org.apache.commons.math3.geometry.partitioning.AbstractRegion$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I
org.apache.commons.math3.geometry.partitioning.AbstractRegion$1.compare(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)I
org.apache.commons.math3.geometry.partitioning.AbstractRegion$2.visitInternalNode(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V
org.apache.commons.math3.geometry.partitioning.AbstractRegion$2.visitLeafNode(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V
org.apache.commons.math3.geometry.partitioning.AbstractRegion$2.visitOrder(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTreeVisitor$Order;
org.apache.commons.math3.geometry.partitioning.AbstractRegion.applyTransform(Lorg/apache/commons/math3/geometry/partitioning/Transform;)Lorg/apache/commons/math3/geometry/partitioning/AbstractRegion;
org.apache.commons.math3.geometry.partitioning.AbstractRegion.checkPoint(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/partitioning/Region$Location;
org.apache.commons.math3.geometry.partitioning.AbstractRegion.checkPoint(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/partitioning/Region$Location;
org.apache.commons.math3.geometry.partitioning.AbstractRegion.contains(Lorg/apache/commons/math3/geometry/partitioning/Region;)Z
org.apache.commons.math3.geometry.partitioning.AbstractRegion.copySelf()Lorg/apache/commons/math3/geometry/partitioning/AbstractRegion;
org.apache.commons.math3.geometry.partitioning.AbstractRegion.copySelf()Lorg/apache/commons/math3/geometry/partitioning/Region;
org.apache.commons.math3.geometry.partitioning.AbstractRegion.getBarycenter()Lorg/apache/commons/math3/geometry/Point;
org.apache.commons.math3.geometry.partitioning.AbstractRegion.getSize()D
org.apache.commons.math3.geometry.partitioning.AbstractRegion.getTolerance()D
org.apache.commons.math3.geometry.partitioning.AbstractRegion.getTree(Z)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Ljava/util/Collection;)V
org.apache.commons.math3.geometry.partitioning.AbstractRegion.isEmpty()Z
org.apache.commons.math3.geometry.partitioning.AbstractRegion.isEmpty(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z
org.apache.commons.math3.geometry.partitioning.AbstractRegion.isFull()Z
org.apache.commons.math3.geometry.partitioning.AbstractRegion.isFull(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z
org.apache.commons.math3.geometry.partitioning.AbstractRegion.projectToBoundary(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/partitioning/BoundaryProjection;
org.apache.commons.math3.geometry.partitioning.AbstractRegion.recurseTransform(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/Transform;Ljava/util/Map;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
org.apache.commons.math3.geometry.partitioning.AbstractRegion.setBarycenter(Lorg/apache/commons/math3/geometry/Point;)V
org.apache.commons.math3.geometry.partitioning.AbstractRegion.setSize(D)V
org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.applyTransform(Lorg/apache/commons/math3/geometry/partitioning/Transform;)Lorg/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane;
org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.copySelf()Lorg/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane;
org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.copySelf()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.getHyperplane()Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.getRemainingRegion()Lorg/apache/commons/math3/geometry/partitioning/Region;
org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.getSize()D
org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.isEmpty()Z
org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.recurseTransform(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Transform;Ljava/util/Map;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.reunite(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)Lorg/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane;
org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.reunite(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
org.apache.commons.math3.geometry.partitioning.BSPTree$1.fixNode(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
org.apache.commons.math3.geometry.partitioning.BSPTree.chopOffMinus(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/BSPTree$VanishingCutHandler;)V
org.apache.commons.math3.geometry.partitioning.BSPTree.chopOffPlus(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/BSPTree$VanishingCutHandler;)V
org.apache.commons.math3.geometry.partitioning.BSPTree.condense()V
org.apache.commons.math3.geometry.partitioning.BSPTree.copySelf()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
org.apache.commons.math3.geometry.partitioning.BSPTree.getAttribute()Ljava/lang/Object;
org.apache.commons.math3.geometry.partitioning.BSPTree.getCell(Lorg/apache/commons/math3/geometry/Point;D)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
org.apache.commons.math3.geometry.partitioning.BSPTree.getCell(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
org.apache.commons.math3.geometry.partitioning.BSPTree.getCloseCuts(Lorg/apache/commons/math3/geometry/Point;D)Ljava/util/List;
org.apache.commons.math3.geometry.partitioning.BSPTree.getCut()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
org.apache.commons.math3.geometry.partitioning.BSPTree.getMinus()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
org.apache.commons.math3.geometry.partitioning.BSPTree.getParent()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
org.apache.commons.math3.geometry.partitioning.BSPTree.getPlus()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Z
org.apache.commons.math3.geometry.partitioning.BSPTree.insertInTree(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Z)V
org.apache.commons.math3.geometry.partitioning.BSPTree.insertInTree(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;ZLorg/apache/commons/math3/geometry/partitioning/BSPTree$VanishingCutHandler;)V
org.apache.commons.math3.geometry.partitioning.BSPTree.merge(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/BSPTree$LeafMerger;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
org.apache.commons.math3.geometry.partitioning.BSPTree.merge(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/BSPTree$LeafMerger;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Z)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
org.apache.commons.math3.geometry.partitioning.BSPTree.pruneAroundConvexCell(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
org.apache.commons.math3.geometry.partitioning.BSPTree.recurseCloseCuts(Lorg/apache/commons/math3/geometry/Point;DLjava/util/List;)V
org.apache.commons.math3.geometry.partitioning.BSPTree.setAttribute(Ljava/lang/Object;)V
org.apache.commons.math3.geometry.partitioning.BSPTree.split(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
org.apache.commons.math3.geometry.partitioning.BSPTree.visit(Lorg/apache/commons/math3/geometry/partitioning/BSPTreeVisitor;)V
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/geometry/partitioning/BSPTreeVisitor$Order;
org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.values()[Lorg/apache/commons/math3/geometry/partitioning/BSPTreeVisitor$Order;
org.apache.commons.math3.geometry.partitioning.BoundaryAttribute.getPlusInside()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
org.apache.commons.math3.geometry.partitioning.BoundaryAttribute.getPlusOutside()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
org.apache.commons.math3.geometry.partitioning.BoundaryAttribute.getSplitters()Lorg/apache/commons/math3/geometry/partitioning/NodesSet;
org.apache.commons.math3.geometry.partitioning.BoundaryBuilder.visitInternalNode(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V
org.apache.commons.math3.geometry.partitioning.BoundaryBuilder.visitLeafNode(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V
org.apache.commons.math3.geometry.partitioning.BoundaryBuilder.visitOrder(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTreeVisitor$Order;
org.apache.commons.math3.geometry.partitioning.BoundaryProjection.getOffset()D
org.apache.commons.math3.geometry.partitioning.BoundaryProjection.getOriginal()Lorg/apache/commons/math3/geometry/Point;
org.apache.commons.math3.geometry.partitioning.BoundaryProjection.getProjected()Lorg/apache/commons/math3/geometry/Point;
org.apache.commons.math3.geometry.partitioning.BoundaryProjector.addRegion(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Ljava/util/List;)V
org.apache.commons.math3.geometry.partitioning.BoundaryProjector.belongsToPart(Lorg/apache/commons/math3/geometry/Point;Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Region;)Z
org.apache.commons.math3.geometry.partitioning.BoundaryProjector.boundaryRegions(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Ljava/util/List;
org.apache.commons.math3.geometry.partitioning.BoundaryProjector.getProjection()Lorg/apache/commons/math3/geometry/partitioning/BoundaryProjection;
org.apache.commons.math3.geometry.partitioning.BoundaryProjector.singularProjection(Lorg/apache/commons/math3/geometry/Point;Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Region;)Lorg/apache/commons/math3/geometry/Point;
org.apache.commons.math3.geometry.partitioning.BoundaryProjector.visitInternalNode(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V
org.apache.commons.math3.geometry.partitioning.BoundaryProjector.visitLeafNode(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V
org.apache.commons.math3.geometry.partitioning.BoundaryProjector.visitOrder(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTreeVisitor$Order;
org.apache.commons.math3.geometry.partitioning.BoundarySizeVisitor.getSize()D
org.apache.commons.math3.geometry.partitioning.BoundarySizeVisitor.visitInternalNode(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V
org.apache.commons.math3.geometry.partitioning.BoundarySizeVisitor.visitLeafNode(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V
org.apache.commons.math3.geometry.partitioning.BoundarySizeVisitor.visitOrder(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTreeVisitor$Order;
org.apache.commons.math3.geometry.partitioning.Characterization.addInsideTouching(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Ljava/util/List;)V
org.apache.commons.math3.geometry.partitioning.Characterization.addOutsideTouching(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Ljava/util/List;)V
org.apache.commons.math3.geometry.partitioning.Characterization.characterize(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Ljava/util/List;)V
org.apache.commons.math3.geometry.partitioning.Characterization.getInsideSplitters()Lorg/apache/commons/math3/geometry/partitioning/NodesSet;
org.apache.commons.math3.geometry.partitioning.Characterization.getOutsideSplitters()Lorg/apache/commons/math3/geometry/partitioning/NodesSet;
org.apache.commons.math3.geometry.partitioning.Characterization.insideTouching()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
org.apache.commons.math3.geometry.partitioning.Characterization.outsideTouching()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
org.apache.commons.math3.geometry.partitioning.Characterization.touchInside()Z
org.apache.commons.math3.geometry.partitioning.Characterization.touchOutside()Z
org.apache.commons.math3.geometry.partitioning.InsideFinder.minusFound()Z
org.apache.commons.math3.geometry.partitioning.InsideFinder.plusFound()Z
org.apache.commons.math3.geometry.partitioning.InsideFinder.recurseSides(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)V
org.apache.commons.math3.geometry.partitioning.NodesSet.add(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V
org.apache.commons.math3.geometry.partitioning.NodesSet.addAll(Ljava/lang/Iterable;)V
org.apache.commons.math3.geometry.partitioning.NodesSet.iterator()Ljava/util/Iterator;
org.apache.commons.math3.geometry.partitioning.Region$Location.valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/geometry/partitioning/Region$Location;
org.apache.commons.math3.geometry.partitioning.Region$Location.values()[Lorg/apache/commons/math3/geometry/partitioning/Region$Location;
org.apache.commons.math3.geometry.partitioning.RegionFactory$DifferenceMerger.fixNode(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
org.apache.commons.math3.geometry.partitioning.RegionFactory$DifferenceMerger.merge(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;ZZ)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
org.apache.commons.math3.geometry.partitioning.RegionFactory$IntersectionMerger.merge(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;ZZ)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
org.apache.commons.math3.geometry.partitioning.RegionFactory$NodesCleaner.visitInternalNode(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V
org.apache.commons.math3.geometry.partitioning.RegionFactory$NodesCleaner.visitLeafNode(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V
org.apache.commons.math3.geometry.partitioning.RegionFactory$NodesCleaner.visitOrder(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTreeVisitor$Order;
org.apache.commons.math3.geometry.partitioning.RegionFactory$UnionMerger.merge(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;ZZ)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
org.apache.commons.math3.geometry.partitioning.RegionFactory$VanishingToLeaf.fixNode(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
org.apache.commons.math3.geometry.partitioning.RegionFactory$XorMerger.merge(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;ZZ)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
org.apache.commons.math3.geometry.partitioning.RegionFactory.access$400(Lorg/apache/commons/math3/geometry/partitioning/RegionFactory;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
org.apache.commons.math3.geometry.partitioning.RegionFactory.buildConvex([Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/Region;
org.apache.commons.math3.geometry.partitioning.RegionFactory.difference(Lorg/apache/commons/math3/geometry/partitioning/Region;Lorg/apache/commons/math3/geometry/partitioning/Region;)Lorg/apache/commons/math3/geometry/partitioning/Region;
org.apache.commons.math3.geometry.partitioning.RegionFactory.getComplement(Lorg/apache/commons/math3/geometry/partitioning/Region;)Lorg/apache/commons/math3/geometry/partitioning/Region;
org.apache.commons.math3.geometry.partitioning.RegionFactory.intersection(Lorg/apache/commons/math3/geometry/partitioning/Region;Lorg/apache/commons/math3/geometry/partitioning/Region;)Lorg/apache/commons/math3/geometry/partitioning/Region;
org.apache.commons.math3.geometry.partitioning.RegionFactory.recurseComplement(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
org.apache.commons.math3.geometry.partitioning.RegionFactory.recurseComplement(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Ljava/util/Map;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
org.apache.commons.math3.geometry.partitioning.RegionFactory.union(Lorg/apache/commons/math3/geometry/partitioning/Region;Lorg/apache/commons/math3/geometry/partitioning/Region;)Lorg/apache/commons/math3/geometry/partitioning/Region;
org.apache.commons.math3.geometry.partitioning.RegionFactory.xor(Lorg/apache/commons/math3/geometry/partitioning/Region;Lorg/apache/commons/math3/geometry/partitioning/Region;)Lorg/apache/commons/math3/geometry/partitioning/Region;
org.apache.commons.math3.geometry.partitioning.Side.valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/geometry/partitioning/Side;
org.apache.commons.math3.geometry.partitioning.Side.values()[Lorg/apache/commons/math3/geometry/partitioning/Side;
org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane.getMinus()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane.getPlus()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane.getSide()Lorg/apache/commons/math3/geometry/partitioning/Side;
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.access$000(Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;)Ljava/lang/Comparable;
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.access$100(Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;)Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.access$200(Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;)Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.delete()V
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.getElement()Ljava/lang/Comparable;
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.getLargest()Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.getNext()Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.getPrevious()Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.getSmallest()Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(Ljava/lang/Comparable;)Z
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.rebalanceLeftGrown()Z
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.rebalanceLeftShrunk()Z
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.rebalanceRightGrown()Z
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.rebalanceRightShrunk()Z
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.rotateCCW()V
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.rotateCW()V
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.size()I
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.values()[Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Skew;
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.access$302(Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree;Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;)Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.delete(Ljava/lang/Comparable;)Z
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getLargest()Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotLarger(Ljava/lang/Comparable;)Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(Ljava/lang/Comparable;)Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getSmallest()Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.insert(Ljava/lang/Comparable;)V
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.isEmpty()Z
org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.size()I
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.compareTo(Ljava/lang/Object;)I
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.compareTo(Lorg/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple;)I
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.encode(I)V
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.equals(Ljava/lang/Object;)Z
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.getBit(II)I
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.getComponents()[D
org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.hashCode()I
org.apache.commons.math3.geometry.spherical.oned.Arc.checkPoint(D)Lorg/apache/commons/math3/geometry/partitioning/Region$Location;
org.apache.commons.math3.geometry.spherical.oned.Arc.getBarycenter()D
org.apache.commons.math3.geometry.spherical.oned.Arc.getInf()D
org.apache.commons.math3.geometry.spherical.oned.Arc.getSize()D
org.apache.commons.math3.geometry.spherical.oned.Arc.getSup()D
org.apache.commons.math3.geometry.spherical.oned.Arc.getTolerance()D
org.apache.commons.math3.geometry.spherical.oned.ArcsSet$Split.getMinus()Lorg/apache/commons/math3/geometry/spherical/oned/ArcsSet;
org.apache.commons.math3.geometry.spherical.oned.ArcsSet$Split.getPlus()Lorg/apache/commons/math3/geometry/spherical/oned/ArcsSet;
org.apache.commons.math3.geometry.spherical.oned.ArcsSet$Split.getSide()Lorg/apache/commons/math3/geometry/partitioning/Side;
org.apache.commons.math3.geometry.spherical.oned.ArcsSet$SubArcsIterator.hasNext()Z
org.apache.commons.math3.geometry.spherical.oned.ArcsSet$SubArcsIterator.next()Ljava/lang/Object;
org.apache.commons.math3.geometry.spherical.oned.ArcsSet$SubArcsIterator.next()[D
org.apache.commons.math3.geometry.spherical.oned.ArcsSet$SubArcsIterator.remove()V
org.apache.commons.math3.geometry.spherical.oned.ArcsSet$SubArcsIterator.selectPending()V
org.apache.commons.math3.geometry.spherical.oned.ArcsSet.access$000(Lorg/apache/commons/math3/geometry/spherical/oned/ArcsSet;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
org.apache.commons.math3.geometry.spherical.oned.ArcsSet.access$100(Lorg/apache/commons/math3/geometry/spherical/oned/ArcsSet;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
org.apache.commons.math3.geometry.spherical.oned.ArcsSet.access$200(Lorg/apache/commons/math3/geometry/spherical/oned/ArcsSet;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z
org.apache.commons.math3.geometry.spherical.oned.ArcsSet.access$300(Lorg/apache/commons/math3/geometry/spherical/oned/ArcsSet;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
org.apache.commons.math3.geometry.spherical.oned.ArcsSet.access$400(Lorg/apache/commons/math3/geometry/spherical/oned/ArcsSet;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z
org.apache.commons.math3.geometry.spherical.oned.ArcsSet.access$500(Lorg/apache/commons/math3/geometry/spherical/oned/ArcsSet;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)D
org.apache.commons.math3.geometry.spherical.oned.ArcsSet.access$600(Lorg/apache/commons/math3/geometry/spherical/oned/ArcsSet;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
org.apache.commons.math3.geometry.spherical.oned.ArcsSet.addArcLimit(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;DZ)V
org.apache.commons.math3.geometry.spherical.oned.ArcsSet.asList()Ljava/util/List;
org.apache.commons.math3.geometry.spherical.oned.ArcsSet.buildNew(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/AbstractRegion;
org.apache.commons.math3.geometry.spherical.oned.ArcsSet.buildNew(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/Region;
org.apache.commons.math3.geometry.spherical.oned.ArcsSet.buildNew(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/spherical/oned/ArcsSet;
org.apache.commons.math3.geometry.spherical.oned.ArcsSet.check2PiConsistency()V
org.apache.commons.math3.geometry.spherical.oned.ArcsSet.childAfter(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
org.apache.commons.math3.geometry.spherical.oned.ArcsSet.childBefore(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
org.apache.commons.math3.geometry.spherical.oned.ArcsSet.computeGeometricalProperties()V
org.apache.commons.math3.geometry.spherical.oned.ArcsSet.createSplitPart(Ljava/util/List;)Lorg/apache/commons/math3/geometry/spherical/oned/ArcsSet;
org.apache.commons.math3.geometry.spherical.oned.ArcsSet.getAngle(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)D
org.apache.commons.math3.geometry.spherical.oned.ArcsSet.getFirstArcStart()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
org.apache.commons.math3.geometry.spherical.oned.ArcsSet.getFirstLeaf(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
org.apache.commons.math3.geometry.spherical.oned.ArcsSet.getLastLeaf(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
org.apache.commons.math3.geometry.spherical.oned.ArcsSet.isAfterParent(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z
org.apache.commons.math3.geometry.spherical.oned.ArcsSet.isArcEnd(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z
org.apache.commons.math3.geometry.spherical.oned.ArcsSet.isArcStart(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z
org.apache.commons.math3.geometry.spherical.oned.ArcsSet.isBeforeParent(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z
org.apache.commons.math3.geometry.spherical.oned.ArcsSet.isDirect(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z
org.apache.commons.math3.geometry.spherical.oned.ArcsSet.iterator()Ljava/util/Iterator;
org.apache.commons.math3.geometry.spherical.oned.ArcsSet.leafAfter(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
org.apache.commons.math3.geometry.spherical.oned.ArcsSet.leafBefore(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
org.apache.commons.math3.geometry.spherical.oned.ArcsSet.nextInternalNode(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
org.apache.commons.math3.geometry.spherical.oned.ArcsSet.previousInternalNode(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;
org.apache.commons.math3.geometry.spherical.oned.ArcsSet.projectToBoundary(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/partitioning/BoundaryProjection;
org.apache.commons.math3.geometry.spherical.oned.ArcsSet.side(Lorg/apache/commons/math3/geometry/spherical/oned/Arc;)Lorg/apache/commons/math3/geometry/partitioning/Side;
org.apache.commons.math3.geometry.spherical.oned.ArcsSet.split(Lorg/apache/commons/math3/geometry/spherical/oned/Arc;)Lorg/apache/commons/math3/geometry/spherical/oned/ArcsSet$Split;
org.apache.commons.math3.geometry.spherical.oned.LimitAngle.copySelf()Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
org.apache.commons.math3.geometry.spherical.oned.LimitAngle.copySelf()Lorg/apache/commons/math3/geometry/spherical/oned/LimitAngle;
org.apache.commons.math3.geometry.spherical.oned.LimitAngle.getLocation()Lorg/apache/commons/math3/geometry/spherical/oned/S1Point;
org.apache.commons.math3.geometry.spherical.oned.LimitAngle.getOffset(Lorg/apache/commons/math3/geometry/Point;)D
org.apache.commons.math3.geometry.spherical.oned.LimitAngle.getReverse()Lorg/apache/commons/math3/geometry/spherical/oned/LimitAngle;
org.apache.commons.math3.geometry.spherical.oned.LimitAngle.getTolerance()D
org.apache.commons.math3.geometry.spherical.oned.LimitAngle.isDirect()Z
org.apache.commons.math3.geometry.spherical.oned.LimitAngle.project(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/Point;
org.apache.commons.math3.geometry.spherical.oned.LimitAngle.sameOrientationAs(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Z
org.apache.commons.math3.geometry.spherical.oned.LimitAngle.wholeHyperplane()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
org.apache.commons.math3.geometry.spherical.oned.LimitAngle.wholeHyperplane()Lorg/apache/commons/math3/geometry/spherical/oned/SubLimitAngle;
org.apache.commons.math3.geometry.spherical.oned.LimitAngle.wholeSpace()Lorg/apache/commons/math3/geometry/partitioning/Region;
org.apache.commons.math3.geometry.spherical.oned.LimitAngle.wholeSpace()Lorg/apache/commons/math3/geometry/spherical/oned/ArcsSet;
org.apache.commons.math3.geometry.spherical.oned.S1Point.distance(Lorg/apache/commons/math3/geometry/Point;)D
org.apache.commons.math3.geometry.spherical.oned.S1Point.distance(Lorg/apache/commons/math3/geometry/spherical/oned/S1Point;Lorg/apache/commons/math3/geometry/spherical/oned/S1Point;)D
org.apache.commons.math3.geometry.spherical.oned.S1Point.equals(Ljava/lang/Object;)Z
org.apache.commons.math3.geometry.spherical.oned.S1Point.getAlpha()D
org.apache.commons.math3.geometry.spherical.oned.S1Point.getSpace()Lorg/apache/commons/math3/geometry/Space;
org.apache.commons.math3.geometry.spherical.oned.S1Point.getVector()Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;
org.apache.commons.math3.geometry.spherical.oned.S1Point.hashCode()I
org.apache.commons.math3.geometry.spherical.oned.S1Point.isNaN()Z
org.apache.commons.math3.geometry.spherical.oned.Sphere1D$LazyHolder.access$000()Lorg/apache/commons/math3/geometry/spherical/oned/Sphere1D;
org.apache.commons.math3.geometry.spherical.oned.Sphere1D.getDimension()I
org.apache.commons.math3.geometry.spherical.oned.Sphere1D.getInstance()Lorg/apache/commons/math3/geometry/spherical/oned/Sphere1D;
org.apache.commons.math3.geometry.spherical.oned.Sphere1D.getSubSpace()Lorg/apache/commons/math3/geometry/Space;
org.apache.commons.math3.geometry.spherical.oned.Sphere1D.readResolve()Ljava/lang/Object;
org.apache.commons.math3.geometry.spherical.oned.SubLimitAngle.buildNew(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Region;)Lorg/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane;
org.apache.commons.math3.geometry.spherical.oned.SubLimitAngle.getSize()D
org.apache.commons.math3.geometry.spherical.oned.SubLimitAngle.isEmpty()Z
org.apache.commons.math3.geometry.spherical.oned.SubLimitAngle.split(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane;
org.apache.commons.math3.geometry.spherical.twod.Circle$CircleTransform.apply(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/Point;
org.apache.commons.math3.geometry.spherical.twod.Circle$CircleTransform.apply(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/spherical/twod/S2Point;
org.apache.commons.math3.geometry.spherical.twod.Circle$CircleTransform.apply(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
org.apache.commons.math3.geometry.spherical.twod.Circle$CircleTransform.apply(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/spherical/twod/Circle;
org.apache.commons.math3.geometry.spherical.twod.Circle$CircleTransform.apply(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
org.apache.commons.math3.geometry.spherical.twod.Circle.access$000(Lorg/apache/commons/math3/geometry/spherical/twod/Circle;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.spherical.twod.Circle.access$100(Lorg/apache/commons/math3/geometry/spherical/twod/Circle;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.spherical.twod.Circle.access$200(Lorg/apache/commons/math3/geometry/spherical/twod/Circle;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.spherical.twod.Circle.access$300(Lorg/apache/commons/math3/geometry/spherical/twod/Circle;)D
org.apache.commons.math3.geometry.spherical.twod.Circle.copySelf()Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;
org.apache.commons.math3.geometry.spherical.twod.Circle.copySelf()Lorg/apache/commons/math3/geometry/spherical/twod/Circle;
org.apache.commons.math3.geometry.spherical.twod.Circle.getInsideArc(Lorg/apache/commons/math3/geometry/spherical/twod/Circle;)Lorg/apache/commons/math3/geometry/spherical/oned/Arc;
org.apache.commons.math3.geometry.spherical.twod.Circle.getOffset(Lorg/apache/commons/math3/geometry/Point;)D
org.apache.commons.math3.geometry.spherical.twod.Circle.getOffset(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)D
org.apache.commons.math3.geometry.spherical.twod.Circle.getPhase(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)D
org.apache.commons.math3.geometry.spherical.twod.Circle.getPointAt(D)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.spherical.twod.Circle.getPole()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.spherical.twod.Circle.getReverse()Lorg/apache/commons/math3/geometry/spherical/twod/Circle;
org.apache.commons.math3.geometry.spherical.twod.Circle.getTolerance()D
org.apache.commons.math3.geometry.spherical.twod.Circle.getTransform(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/partitioning/Transform;
org.apache.commons.math3.geometry.spherical.twod.Circle.getXAxis()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.spherical.twod.Circle.getYAxis()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.spherical.twod.Circle.project(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/Point;
org.apache.commons.math3.geometry.spherical.twod.Circle.reset(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V
org.apache.commons.math3.geometry.spherical.twod.Circle.revertSelf()V
org.apache.commons.math3.geometry.spherical.twod.Circle.sameOrientationAs(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Z
org.apache.commons.math3.geometry.spherical.twod.Circle.toSpace(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/Point;
org.apache.commons.math3.geometry.spherical.twod.Circle.toSpace(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/spherical/twod/S2Point;
org.apache.commons.math3.geometry.spherical.twod.Circle.toSubSpace(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/Point;
org.apache.commons.math3.geometry.spherical.twod.Circle.toSubSpace(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/spherical/oned/S1Point;
org.apache.commons.math3.geometry.spherical.twod.Circle.wholeHyperplane()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;
org.apache.commons.math3.geometry.spherical.twod.Circle.wholeHyperplane()Lorg/apache/commons/math3/geometry/spherical/twod/SubCircle;
org.apache.commons.math3.geometry.spherical.twod.Circle.wholeSpace()Lorg/apache/commons/math3/geometry/partitioning/Region;
org.apache.commons.math3.geometry.spherical.twod.Circle.wholeSpace()Lorg/apache/commons/math3/geometry/spherical/twod/SphericalPolygonsSet;
org.apache.commons.math3.geometry.spherical.twod.Edge.addSubEdge(Lorg/apache/commons/math3/geometry/spherical/twod/Vertex;Lorg/apache/commons/math3/geometry/spherical/twod/Vertex;DLjava/util/List;Lorg/apache/commons/math3/geometry/spherical/twod/Circle;)Lorg/apache/commons/math3/geometry/spherical/twod/Vertex;
org.apache.commons.math3.geometry.spherical.twod.Edge.getCircle()Lorg/apache/commons/math3/geometry/spherical/twod/Circle;
org.apache.commons.math3.geometry.spherical.twod.Edge.getEnd()Lorg/apache/commons/math3/geometry/spherical/twod/Vertex;
org.apache.commons.math3.geometry.spherical.twod.Edge.getLength()D
org.apache.commons.math3.geometry.spherical.twod.Edge.getPointAt(D)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.spherical.twod.Edge.getStart()Lorg/apache/commons/math3/geometry/spherical/twod/Vertex;
org.apache.commons.math3.geometry.spherical.twod.Edge.setNextEdge(Lorg/apache/commons/math3/geometry/spherical/twod/Edge;)V
org.apache.commons.math3.geometry.spherical.twod.Edge.split(Lorg/apache/commons/math3/geometry/spherical/twod/Circle;Ljava/util/List;Ljava/util/List;)V
org.apache.commons.math3.geometry.spherical.twod.EdgesBuilder.addContribution(Lorg/apache/commons/math3/geometry/spherical/twod/SubCircle;ZLorg/apache/commons/math3/geometry/partitioning/BSPTree;)V
org.apache.commons.math3.geometry.spherical.twod.EdgesBuilder.getEdges()Ljava/util/List;
org.apache.commons.math3.geometry.spherical.twod.EdgesBuilder.getFollowingEdge(Lorg/apache/commons/math3/geometry/spherical/twod/Edge;)Lorg/apache/commons/math3/geometry/spherical/twod/Edge;
org.apache.commons.math3.geometry.spherical.twod.EdgesBuilder.visitInternalNode(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V
org.apache.commons.math3.geometry.spherical.twod.EdgesBuilder.visitLeafNode(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V
org.apache.commons.math3.geometry.spherical.twod.EdgesBuilder.visitOrder(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTreeVisitor$Order;
org.apache.commons.math3.geometry.spherical.twod.PropertiesComputer.convexCellArea(Lorg/apache/commons/math3/geometry/spherical/twod/Vertex;)D
org.apache.commons.math3.geometry.spherical.twod.PropertiesComputer.convexCellBarycenter(Lorg/apache/commons/math3/geometry/spherical/twod/Vertex;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.spherical.twod.PropertiesComputer.getArea()D
org.apache.commons.math3.geometry.spherical.twod.PropertiesComputer.getBarycenter()Lorg/apache/commons/math3/geometry/spherical/twod/S2Point;
org.apache.commons.math3.geometry.spherical.twod.PropertiesComputer.getConvexCellsInsidePoints()Ljava/util/List;
org.apache.commons.math3.geometry.spherical.twod.PropertiesComputer.visitInternalNode(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V
org.apache.commons.math3.geometry.spherical.twod.PropertiesComputer.visitLeafNode(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V
org.apache.commons.math3.geometry.spherical.twod.PropertiesComputer.visitOrder(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTreeVisitor$Order;
org.apache.commons.math3.geometry.spherical.twod.S2Point.distance(Lorg/apache/commons/math3/geometry/Point;)D
org.apache.commons.math3.geometry.spherical.twod.S2Point.distance(Lorg/apache/commons/math3/geometry/spherical/twod/S2Point;Lorg/apache/commons/math3/geometry/spherical/twod/S2Point;)D
org.apache.commons.math3.geometry.spherical.twod.S2Point.equals(Ljava/lang/Object;)Z
org.apache.commons.math3.geometry.spherical.twod.S2Point.getPhi()D
org.apache.commons.math3.geometry.spherical.twod.S2Point.getSpace()Lorg/apache/commons/math3/geometry/Space;
org.apache.commons.math3.geometry.spherical.twod.S2Point.getTheta()D
org.apache.commons.math3.geometry.spherical.twod.S2Point.getVector()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;
org.apache.commons.math3.geometry.spherical.twod.S2Point.hashCode()I
org.apache.commons.math3.geometry.spherical.twod.S2Point.isNaN()Z
org.apache.commons.math3.geometry.spherical.twod.S2Point.negate()Lorg/apache/commons/math3/geometry/spherical/twod/S2Point;
org.apache.commons.math3.geometry.spherical.twod.Sphere2D$LazyHolder.access$000()Lorg/apache/commons/math3/geometry/spherical/twod/Sphere2D;
org.apache.commons.math3.geometry.spherical.twod.Sphere2D.getDimension()I
org.apache.commons.math3.geometry.spherical.twod.Sphere2D.getInstance()Lorg/apache/commons/math3/geometry/spherical/twod/Sphere2D;
org.apache.commons.math3.geometry.spherical.twod.Sphere2D.getSubSpace()Lorg/apache/commons/math3/geometry/Space;
org.apache.commons.math3.geometry.spherical.twod.Sphere2D.getSubSpace()Lorg/apache/commons/math3/geometry/spherical/oned/Sphere1D;
org.apache.commons.math3.geometry.spherical.twod.Sphere2D.readResolve()Ljava/lang/Object;
org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSet.buildNew(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/AbstractRegion;
org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSet.buildNew(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/Region;
org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSet.buildNew(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/spherical/twod/SphericalPolygonsSet;
org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSet.computeGeometricalProperties()V
org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSet.createRegularPolygonVertices(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DI)[Lorg/apache/commons/math3/geometry/spherical/twod/S2Point;
org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSet.getBoundaryLoops()Ljava/util/List;
org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSet.getEnclosingCap()Lorg/apache/commons/math3/geometry/enclosing/EnclosingBall;
org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSet.getInsidePoints()Ljava/util/List;
org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSet.getOutsidePoints()Ljava/util/List;
org.apache.commons.math3.geometry.spherical.twod.SubCircle.buildNew(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Region;)Lorg/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane;
org.apache.commons.math3.geometry.spherical.twod.SubCircle.split(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane;
org.apache.commons.math3.geometry.spherical.twod.Vertex.bindWith(Lorg/apache/commons/math3/geometry/spherical/twod/Circle;)V
org.apache.commons.math3.geometry.spherical.twod.Vertex.getIncoming()Lorg/apache/commons/math3/geometry/spherical/twod/Edge;
org.apache.commons.math3.geometry.spherical.twod.Vertex.getLocation()Lorg/apache/commons/math3/geometry/spherical/twod/S2Point;
org.apache.commons.math3.geometry.spherical.twod.Vertex.getOutgoing()Lorg/apache/commons/math3/geometry/spherical/twod/Edge;
org.apache.commons.math3.geometry.spherical.twod.Vertex.setIncoming(Lorg/apache/commons/math3/geometry/spherical/twod/Edge;)V
org.apache.commons.math3.geometry.spherical.twod.Vertex.setOutgoing(Lorg/apache/commons/math3/geometry/spherical/twod/Edge;)V
org.apache.commons.math3.geometry.spherical.twod.Vertex.sharedCircleWith(Lorg/apache/commons/math3/geometry/spherical/twod/Vertex;)Lorg/apache/commons/math3/geometry/spherical/twod/Circle;
org.apache.commons.math3.linear.AbstractFieldMatrix$1.visit(IILorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.AbstractFieldMatrix$2.start(IIIIII)V
org.apache.commons.math3.linear.AbstractFieldMatrix$2.visit(IILorg/apache/commons/math3/FieldElement;)V
org.apache.commons.math3.linear.AbstractFieldMatrix$3.visit(IILorg/apache/commons/math3/FieldElement;)V
org.apache.commons.math3.linear.AbstractFieldMatrix.checkAdditionCompatible(Lorg/apache/commons/math3/linear/FieldMatrix;)V
org.apache.commons.math3.linear.AbstractFieldMatrix.checkColumnIndex(I)V
org.apache.commons.math3.linear.AbstractFieldMatrix.checkMultiplicationCompatible(Lorg/apache/commons/math3/linear/FieldMatrix;)V
org.apache.commons.math3.linear.AbstractFieldMatrix.checkRowIndex(I)V
org.apache.commons.math3.linear.AbstractFieldMatrix.checkSubMatrixIndex(IIII)V
org.apache.commons.math3.linear.AbstractFieldMatrix.checkSubtractionCompatible(Lorg/apache/commons/math3/linear/FieldMatrix;)V
org.apache.commons.math3.linear.AbstractFieldMatrix.extractField([Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/Field;
org.apache.commons.math3.linear.AbstractFieldMatrix.extractField([[Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/Field;
org.apache.commons.math3.linear.AbstractFieldMatrix.getField()Lorg/apache/commons/math3/Field;
org.apache.commons.math3.linear.AbstractFieldMatrix.isSquare()Z
org.apache.commons.math3.linear.AbstractFieldMatrix.multiply(Lorg/apache/commons/math3/linear/FieldMatrix;)Lorg/apache/commons/math3/linear/FieldMatrix;
org.apache.commons.math3.linear.AbstractFieldMatrix.power(I)Lorg/apache/commons/math3/linear/FieldMatrix;
org.apache.commons.math3.linear.AbstractFieldMatrix.setColumnMatrix(ILorg/apache/commons/math3/linear/FieldMatrix;)V
org.apache.commons.math3.linear.AbstractFieldMatrix.setColumnVector(ILorg/apache/commons/math3/linear/FieldVector;)V
org.apache.commons.math3.linear.AbstractFieldMatrix.setRowMatrix(ILorg/apache/commons/math3/linear/FieldMatrix;)V
org.apache.commons.math3.linear.AbstractFieldMatrix.setRowVector(ILorg/apache/commons/math3/linear/FieldVector;)V
org.apache.commons.math3.linear.AbstractFieldMatrix.setSubMatrix([[Lorg/apache/commons/math3/FieldElement;II)V
org.apache.commons.math3.linear.AbstractFieldMatrix.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/FieldMatrixPreservingVisitor;)Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.AbstractRealMatrix$1.end()D
org.apache.commons.math3.linear.AbstractRealMatrix$1.start(IIIIII)V
org.apache.commons.math3.linear.AbstractRealMatrix$1.visit(IID)V
org.apache.commons.math3.linear.AbstractRealMatrix$2.end()D
org.apache.commons.math3.linear.AbstractRealMatrix$2.start(IIIIII)V
org.apache.commons.math3.linear.AbstractRealMatrix$2.visit(IID)V
org.apache.commons.math3.linear.AbstractRealMatrix$3.visit(IID)D
org.apache.commons.math3.linear.AbstractRealMatrix$4.start(IIIIII)V
org.apache.commons.math3.linear.AbstractRealMatrix$4.visit(IID)V
org.apache.commons.math3.linear.AbstractRealMatrix$5.visit(IID)V
org.apache.commons.math3.linear.AbstractRealMatrix.add(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.AbstractRealMatrix.copySubMatrix(IIII[[D)V
org.apache.commons.math3.linear.AbstractRealMatrix.equals(Ljava/lang/Object;)Z
org.apache.commons.math3.linear.AbstractRealMatrix.getColumn(I)[D
org.apache.commons.math3.linear.AbstractRealMatrix.getColumnMatrix(I)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.AbstractRealMatrix.getData()[[D
org.apache.commons.math3.linear.AbstractRealMatrix.getFrobeniusNorm()D
org.apache.commons.math3.linear.AbstractRealMatrix.getRow(I)[D
org.apache.commons.math3.linear.AbstractRealMatrix.getRowVector(I)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.AbstractRealMatrix.getSubMatrix(IIII)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.AbstractRealMatrix.hashCode()I
org.apache.commons.math3.linear.AbstractRealMatrix.isSquare()Z
org.apache.commons.math3.linear.AbstractRealMatrix.multiply(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.AbstractRealMatrix.operate(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.AbstractRealMatrix.operate([D)[D
org.apache.commons.math3.linear.AbstractRealMatrix.power(I)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.AbstractRealMatrix.scalarMultiply(D)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.AbstractRealMatrix.setColumn(I[D)V
org.apache.commons.math3.linear.AbstractRealMatrix.setColumnMatrix(ILorg/apache/commons/math3/linear/RealMatrix;)V
org.apache.commons.math3.linear.AbstractRealMatrix.setColumnVector(ILorg/apache/commons/math3/linear/RealVector;)V
org.apache.commons.math3.linear.AbstractRealMatrix.setRowMatrix(ILorg/apache/commons/math3/linear/RealMatrix;)V
org.apache.commons.math3.linear.AbstractRealMatrix.setRowVector(ILorg/apache/commons/math3/linear/RealVector;)V
org.apache.commons.math3.linear.AbstractRealMatrix.setSubMatrix([[DII)V
org.apache.commons.math3.linear.AbstractRealMatrix.subtract(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.AbstractRealMatrix.toString()Ljava/lang/String;
org.apache.commons.math3.linear.AbstractRealMatrix.transpose()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.AbstractRealMatrix.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D
org.apache.commons.math3.linear.AbstractRealMatrix.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D
org.apache.commons.math3.linear.AbstractRealMatrix.walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D
org.apache.commons.math3.linear.AbstractRealMatrix.walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D
org.apache.commons.math3.linear.Array2DRowFieldMatrix.add(Lorg/apache/commons/math3/linear/Array2DRowFieldMatrix;)Lorg/apache/commons/math3/linear/Array2DRowFieldMatrix;
org.apache.commons.math3.linear.Array2DRowFieldMatrix.addToEntry(IILorg/apache/commons/math3/FieldElement;)V
org.apache.commons.math3.linear.Array2DRowFieldMatrix.copy()Lorg/apache/commons/math3/linear/FieldMatrix;
org.apache.commons.math3.linear.Array2DRowFieldMatrix.copyIn([[Lorg/apache/commons/math3/FieldElement;)V
org.apache.commons.math3.linear.Array2DRowFieldMatrix.copyOut()[[Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.Array2DRowFieldMatrix.createMatrix(II)Lorg/apache/commons/math3/linear/FieldMatrix;
org.apache.commons.math3.linear.Array2DRowFieldMatrix.getColumnDimension()I
org.apache.commons.math3.linear.Array2DRowFieldMatrix.getData()[[Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.Array2DRowFieldMatrix.getDataRef()[[Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.Array2DRowFieldMatrix.getEntry(II)Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.Array2DRowFieldMatrix.getRowDimension()I
org.apache.commons.math3.linear.Array2DRowFieldMatrix.multiply(Lorg/apache/commons/math3/linear/Array2DRowFieldMatrix;)Lorg/apache/commons/math3/linear/Array2DRowFieldMatrix;
org.apache.commons.math3.linear.Array2DRowFieldMatrix.multiplyEntry(IILorg/apache/commons/math3/FieldElement;)V
org.apache.commons.math3.linear.Array2DRowFieldMatrix.operate([Lorg/apache/commons/math3/FieldElement;)[Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.Array2DRowFieldMatrix.preMultiply([Lorg/apache/commons/math3/FieldElement;)[Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.Array2DRowFieldMatrix.setEntry(IILorg/apache/commons/math3/FieldElement;)V
org.apache.commons.math3.linear.Array2DRowFieldMatrix.setSubMatrix([[Lorg/apache/commons/math3/FieldElement;II)V
org.apache.commons.math3.linear.Array2DRowFieldMatrix.subtract(Lorg/apache/commons/math3/linear/Array2DRowFieldMatrix;)Lorg/apache/commons/math3/linear/Array2DRowFieldMatrix;
org.apache.commons.math3.linear.Array2DRowFieldMatrix.walkInColumnOrder(Lorg/apache/commons/math3/linear/FieldMatrixChangingVisitor;)Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.Array2DRowFieldMatrix.walkInColumnOrder(Lorg/apache/commons/math3/linear/FieldMatrixChangingVisitor;IIII)Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.Array2DRowFieldMatrix.walkInColumnOrder(Lorg/apache/commons/math3/linear/FieldMatrixPreservingVisitor;)Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.Array2DRowFieldMatrix.walkInColumnOrder(Lorg/apache/commons/math3/linear/FieldMatrixPreservingVisitor;IIII)Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.Array2DRowFieldMatrix.walkInRowOrder(Lorg/apache/commons/math3/linear/FieldMatrixChangingVisitor;)Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.Array2DRowFieldMatrix.walkInRowOrder(Lorg/apache/commons/math3/linear/FieldMatrixChangingVisitor;IIII)Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.Array2DRowFieldMatrix.walkInRowOrder(Lorg/apache/commons/math3/linear/FieldMatrixPreservingVisitor;)Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.Array2DRowFieldMatrix.walkInRowOrder(Lorg/apache/commons/math3/linear/FieldMatrixPreservingVisitor;IIII)Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.Array2DRowRealMatrix.add(Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;
org.apache.commons.math3.linear.Array2DRowRealMatrix.addToEntry(IID)V
org.apache.commons.math3.linear.Array2DRowRealMatrix.copy()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn([[D)V
org.apache.commons.math3.linear.Array2DRowRealMatrix.copyOut()[[D
org.apache.commons.math3.linear.Array2DRowRealMatrix.createMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension()I
org.apache.commons.math3.linear.Array2DRowRealMatrix.getData()[[D
org.apache.commons.math3.linear.Array2DRowRealMatrix.getDataRef()[[D
org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry(II)D
org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension()I
org.apache.commons.math3.linear.Array2DRowRealMatrix.multiply(Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;
org.apache.commons.math3.linear.Array2DRowRealMatrix.multiplyEntry(IID)V
org.apache.commons.math3.linear.Array2DRowRealMatrix.operate([D)[D
org.apache.commons.math3.linear.Array2DRowRealMatrix.preMultiply([D)[D
org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry(IID)V
org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix([[DII)V
org.apache.commons.math3.linear.Array2DRowRealMatrix.subtract(Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;
org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder(Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D
org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder(Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D
org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D
org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D
org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D
org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D
org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D
org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D
org.apache.commons.math3.linear.ArrayFieldVector.add(Lorg/apache/commons/math3/linear/ArrayFieldVector;)Lorg/apache/commons/math3/linear/ArrayFieldVector;
org.apache.commons.math3.linear.ArrayFieldVector.add(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldVector;
org.apache.commons.math3.linear.ArrayFieldVector.append(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;
org.apache.commons.math3.linear.ArrayFieldVector.append(Lorg/apache/commons/math3/linear/ArrayFieldVector;)Lorg/apache/commons/math3/linear/ArrayFieldVector;
org.apache.commons.math3.linear.ArrayFieldVector.append(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldVector;
org.apache.commons.math3.linear.ArrayFieldVector.checkIndex(I)V
org.apache.commons.math3.linear.ArrayFieldVector.checkIndices(II)V
org.apache.commons.math3.linear.ArrayFieldVector.checkVectorDimensions(I)V
org.apache.commons.math3.linear.ArrayFieldVector.checkVectorDimensions(Lorg/apache/commons/math3/linear/FieldVector;)V
org.apache.commons.math3.linear.ArrayFieldVector.copy()Lorg/apache/commons/math3/linear/FieldVector;
org.apache.commons.math3.linear.ArrayFieldVector.dotProduct(Lorg/apache/commons/math3/linear/ArrayFieldVector;)Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.ArrayFieldVector.dotProduct(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.ArrayFieldVector.ebeDivide(Lorg/apache/commons/math3/linear/ArrayFieldVector;)Lorg/apache/commons/math3/linear/ArrayFieldVector;
org.apache.commons.math3.linear.ArrayFieldVector.ebeDivide(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldVector;
org.apache.commons.math3.linear.ArrayFieldVector.ebeMultiply(Lorg/apache/commons/math3/linear/ArrayFieldVector;)Lorg/apache/commons/math3/linear/ArrayFieldVector;
org.apache.commons.math3.linear.ArrayFieldVector.ebeMultiply(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldVector;
org.apache.commons.math3.linear.ArrayFieldVector.equals(Ljava/lang/Object;)Z
org.apache.commons.math3.linear.ArrayFieldVector.getData()[Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.ArrayFieldVector.getDataRef()[Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.ArrayFieldVector.getDimension()I
org.apache.commons.math3.linear.ArrayFieldVector.getEntry(I)Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.ArrayFieldVector.getField()Lorg/apache/commons/math3/Field;
org.apache.commons.math3.linear.ArrayFieldVector.getSubVector(II)Lorg/apache/commons/math3/linear/FieldVector;
org.apache.commons.math3.linear.ArrayFieldVector.hashCode()I
org.apache.commons.math3.linear.ArrayFieldVector.mapAdd(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;
org.apache.commons.math3.linear.ArrayFieldVector.mapAddToSelf(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;
org.apache.commons.math3.linear.ArrayFieldVector.mapDivide(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;
org.apache.commons.math3.linear.ArrayFieldVector.mapDivideToSelf(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;
org.apache.commons.math3.linear.ArrayFieldVector.mapInv()Lorg/apache/commons/math3/linear/FieldVector;
org.apache.commons.math3.linear.ArrayFieldVector.mapInvToSelf()Lorg/apache/commons/math3/linear/FieldVector;
org.apache.commons.math3.linear.ArrayFieldVector.mapMultiply(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;
org.apache.commons.math3.linear.ArrayFieldVector.mapMultiplyToSelf(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;
org.apache.commons.math3.linear.ArrayFieldVector.mapSubtract(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;
org.apache.commons.math3.linear.ArrayFieldVector.mapSubtractToSelf(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;
org.apache.commons.math3.linear.ArrayFieldVector.outerProduct(Lorg/apache/commons/math3/linear/ArrayFieldVector;)Lorg/apache/commons/math3/linear/FieldMatrix;
org.apache.commons.math3.linear.ArrayFieldVector.outerProduct(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldMatrix;
org.apache.commons.math3.linear.ArrayFieldVector.projection(Lorg/apache/commons/math3/linear/ArrayFieldVector;)Lorg/apache/commons/math3/linear/ArrayFieldVector;
org.apache.commons.math3.linear.ArrayFieldVector.projection(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldVector;
org.apache.commons.math3.linear.ArrayFieldVector.set(ILorg/apache/commons/math3/linear/ArrayFieldVector;)V
org.apache.commons.math3.linear.ArrayFieldVector.set(Lorg/apache/commons/math3/FieldElement;)V
org.apache.commons.math3.linear.ArrayFieldVector.setEntry(ILorg/apache/commons/math3/FieldElement;)V
org.apache.commons.math3.linear.ArrayFieldVector.setSubVector(ILorg/apache/commons/math3/linear/FieldVector;)V
org.apache.commons.math3.linear.ArrayFieldVector.subtract(Lorg/apache/commons/math3/linear/ArrayFieldVector;)Lorg/apache/commons/math3/linear/ArrayFieldVector;
org.apache.commons.math3.linear.ArrayFieldVector.subtract(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldVector;
org.apache.commons.math3.linear.ArrayFieldVector.toArray()[Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.ArrayFieldVector.walkInDefaultOrder(Lorg/apache/commons/math3/linear/FieldVectorChangingVisitor;)Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.ArrayFieldVector.walkInDefaultOrder(Lorg/apache/commons/math3/linear/FieldVectorChangingVisitor;II)Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.ArrayFieldVector.walkInDefaultOrder(Lorg/apache/commons/math3/linear/FieldVectorPreservingVisitor;)Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.ArrayFieldVector.walkInDefaultOrder(Lorg/apache/commons/math3/linear/FieldVectorPreservingVisitor;II)Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.ArrayFieldVector.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/FieldVectorChangingVisitor;)Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.ArrayFieldVector.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/FieldVectorChangingVisitor;II)Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.ArrayFieldVector.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/FieldVectorPreservingVisitor;)Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.ArrayFieldVector.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/FieldVectorPreservingVisitor;II)Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.ArrayRealVector.add(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/ArrayRealVector;
org.apache.commons.math3.linear.ArrayRealVector.add(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.ArrayRealVector.addToEntry(ID)V
org.apache.commons.math3.linear.ArrayRealVector.append(D)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.ArrayRealVector.append(Lorg/apache/commons/math3/linear/ArrayRealVector;)Lorg/apache/commons/math3/linear/ArrayRealVector;
org.apache.commons.math3.linear.ArrayRealVector.append(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.ArrayRealVector.checkVectorDimensions(I)V
org.apache.commons.math3.linear.ArrayRealVector.checkVectorDimensions(Lorg/apache/commons/math3/linear/RealVector;)V
org.apache.commons.math3.linear.ArrayRealVector.combine(DDLorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/ArrayRealVector;
org.apache.commons.math3.linear.ArrayRealVector.combine(DDLorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.ArrayRealVector.combineToSelf(DDLorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/ArrayRealVector;
org.apache.commons.math3.linear.ArrayRealVector.combineToSelf(DDLorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.ArrayRealVector.copy()Lorg/apache/commons/math3/linear/ArrayRealVector;
org.apache.commons.math3.linear.ArrayRealVector.copy()Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.ArrayRealVector.dotProduct(Lorg/apache/commons/math3/linear/RealVector;)D
org.apache.commons.math3.linear.ArrayRealVector.ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/ArrayRealVector;
org.apache.commons.math3.linear.ArrayRealVector.ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.ArrayRealVector.ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/ArrayRealVector;
org.apache.commons.math3.linear.ArrayRealVector.ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.ArrayRealVector.equals(Ljava/lang/Object;)Z
org.apache.commons.math3.linear.ArrayRealVector.getDataRef()[D
org.apache.commons.math3.linear.ArrayRealVector.getDimension()I
org.apache.commons.math3.linear.ArrayRealVector.getDistance(Lorg/apache/commons/math3/linear/RealVector;)D
org.apache.commons.math3.linear.ArrayRealVector.getEntry(I)D
org.apache.commons.math3.linear.ArrayRealVector.getL1Distance(Lorg/apache/commons/math3/linear/RealVector;)D
org.apache.commons.math3.linear.ArrayRealVector.getL1Norm()D
org.apache.commons.math3.linear.ArrayRealVector.getLInfDistance(Lorg/apache/commons/math3/linear/RealVector;)D
org.apache.commons.math3.linear.ArrayRealVector.getLInfNorm()D
org.apache.commons.math3.linear.ArrayRealVector.getNorm()D
org.apache.commons.math3.linear.ArrayRealVector.getSubVector(II)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.ArrayRealVector.hashCode()I
org.apache.commons.math3.linear.ArrayRealVector.isInfinite()Z
org.apache.commons.math3.linear.ArrayRealVector.isNaN()Z
org.apache.commons.math3.linear.ArrayRealVector.map(Lorg/apache/commons/math3/analysis/UnivariateFunction;)Lorg/apache/commons/math3/linear/ArrayRealVector;
org.apache.commons.math3.linear.ArrayRealVector.map(Lorg/apache/commons/math3/analysis/UnivariateFunction;)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.ArrayRealVector.mapAddToSelf(D)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.ArrayRealVector.mapDivideToSelf(D)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.ArrayRealVector.mapMultiplyToSelf(D)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.ArrayRealVector.mapSubtractToSelf(D)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(Lorg/apache/commons/math3/analysis/UnivariateFunction;)Lorg/apache/commons/math3/linear/ArrayRealVector;
org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(Lorg/apache/commons/math3/analysis/UnivariateFunction;)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.ArrayRealVector.outerProduct(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.ArrayRealVector.set(D)V
org.apache.commons.math3.linear.ArrayRealVector.setEntry(ID)V
org.apache.commons.math3.linear.ArrayRealVector.setSubVector(ILorg/apache/commons/math3/linear/RealVector;)V
org.apache.commons.math3.linear.ArrayRealVector.setSubVector(I[D)V
org.apache.commons.math3.linear.ArrayRealVector.subtract(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/ArrayRealVector;
org.apache.commons.math3.linear.ArrayRealVector.subtract(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.ArrayRealVector.toArray()[D
org.apache.commons.math3.linear.ArrayRealVector.toString()Ljava/lang/String;
org.apache.commons.math3.linear.ArrayRealVector.walkInDefaultOrder(Lorg/apache/commons/math3/linear/RealVectorChangingVisitor;)D
org.apache.commons.math3.linear.ArrayRealVector.walkInDefaultOrder(Lorg/apache/commons/math3/linear/RealVectorChangingVisitor;II)D
org.apache.commons.math3.linear.ArrayRealVector.walkInDefaultOrder(Lorg/apache/commons/math3/linear/RealVectorPreservingVisitor;)D
org.apache.commons.math3.linear.ArrayRealVector.walkInDefaultOrder(Lorg/apache/commons/math3/linear/RealVectorPreservingVisitor;II)D
org.apache.commons.math3.linear.ArrayRealVector.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealVectorChangingVisitor;)D
org.apache.commons.math3.linear.ArrayRealVector.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealVectorChangingVisitor;II)D
org.apache.commons.math3.linear.ArrayRealVector.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealVectorPreservingVisitor;)D
org.apache.commons.math3.linear.ArrayRealVector.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealVectorPreservingVisitor;II)D
org.apache.commons.math3.linear.BiDiagonalTransformer.getB()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.BiDiagonalTransformer.getHouseholderVectorsRef()[[D
org.apache.commons.math3.linear.BiDiagonalTransformer.getMainDiagonalRef()[D
org.apache.commons.math3.linear.BiDiagonalTransformer.getSecondaryDiagonalRef()[D
org.apache.commons.math3.linear.BiDiagonalTransformer.getU()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.BiDiagonalTransformer.getV()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.BiDiagonalTransformer.isUpperBiDiagonal()Z
org.apache.commons.math3.linear.BiDiagonalTransformer.transformToLowerBiDiagonal()V
org.apache.commons.math3.linear.BiDiagonalTransformer.transformToUpperBiDiagonal()V
org.apache.commons.math3.linear.BlockFieldMatrix.add(Lorg/apache/commons/math3/linear/BlockFieldMatrix;)Lorg/apache/commons/math3/linear/BlockFieldMatrix;
org.apache.commons.math3.linear.BlockFieldMatrix.add(Lorg/apache/commons/math3/linear/FieldMatrix;)Lorg/apache/commons/math3/linear/FieldMatrix;
org.apache.commons.math3.linear.BlockFieldMatrix.addToEntry(IILorg/apache/commons/math3/FieldElement;)V
org.apache.commons.math3.linear.BlockFieldMatrix.blockHeight(I)I
org.apache.commons.math3.linear.BlockFieldMatrix.blockWidth(I)I
org.apache.commons.math3.linear.BlockFieldMatrix.copy()Lorg/apache/commons/math3/linear/FieldMatrix;
org.apache.commons.math3.linear.BlockFieldMatrix.copyBlockPart([Lorg/apache/commons/math3/FieldElement;IIIII[Lorg/apache/commons/math3/FieldElement;III)V
org.apache.commons.math3.linear.BlockFieldMatrix.createBlocksLayout(Lorg/apache/commons/math3/Field;II)[[Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.BlockFieldMatrix.createMatrix(II)Lorg/apache/commons/math3/linear/FieldMatrix;
org.apache.commons.math3.linear.BlockFieldMatrix.getColumn(I)[Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.BlockFieldMatrix.getColumnDimension()I
org.apache.commons.math3.linear.BlockFieldMatrix.getColumnMatrix(I)Lorg/apache/commons/math3/linear/FieldMatrix;
org.apache.commons.math3.linear.BlockFieldMatrix.getColumnVector(I)Lorg/apache/commons/math3/linear/FieldVector;
org.apache.commons.math3.linear.BlockFieldMatrix.getData()[[Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.BlockFieldMatrix.getEntry(II)Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.BlockFieldMatrix.getRow(I)[Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.BlockFieldMatrix.getRowDimension()I
org.apache.commons.math3.linear.BlockFieldMatrix.getRowMatrix(I)Lorg/apache/commons/math3/linear/FieldMatrix;
org.apache.commons.math3.linear.BlockFieldMatrix.getRowVector(I)Lorg/apache/commons/math3/linear/FieldVector;
org.apache.commons.math3.linear.BlockFieldMatrix.getSubMatrix(IIII)Lorg/apache/commons/math3/linear/FieldMatrix;
org.apache.commons.math3.linear.BlockFieldMatrix.multiply(Lorg/apache/commons/math3/linear/BlockFieldMatrix;)Lorg/apache/commons/math3/linear/BlockFieldMatrix;
org.apache.commons.math3.linear.BlockFieldMatrix.multiply(Lorg/apache/commons/math3/linear/FieldMatrix;)Lorg/apache/commons/math3/linear/FieldMatrix;
org.apache.commons.math3.linear.BlockFieldMatrix.multiplyEntry(IILorg/apache/commons/math3/FieldElement;)V
org.apache.commons.math3.linear.BlockFieldMatrix.operate([Lorg/apache/commons/math3/FieldElement;)[Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.BlockFieldMatrix.preMultiply([Lorg/apache/commons/math3/FieldElement;)[Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.BlockFieldMatrix.scalarAdd(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldMatrix;
org.apache.commons.math3.linear.BlockFieldMatrix.scalarMultiply(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldMatrix;
org.apache.commons.math3.linear.BlockFieldMatrix.setColumn(I[Lorg/apache/commons/math3/FieldElement;)V
org.apache.commons.math3.linear.BlockFieldMatrix.setColumnMatrix(ILorg/apache/commons/math3/linear/BlockFieldMatrix;)V
org.apache.commons.math3.linear.BlockFieldMatrix.setColumnMatrix(ILorg/apache/commons/math3/linear/FieldMatrix;)V
org.apache.commons.math3.linear.BlockFieldMatrix.setColumnVector(ILorg/apache/commons/math3/linear/FieldVector;)V
org.apache.commons.math3.linear.BlockFieldMatrix.setEntry(IILorg/apache/commons/math3/FieldElement;)V
org.apache.commons.math3.linear.BlockFieldMatrix.setRow(I[Lorg/apache/commons/math3/FieldElement;)V
org.apache.commons.math3.linear.BlockFieldMatrix.setRowMatrix(ILorg/apache/commons/math3/linear/BlockFieldMatrix;)V
org.apache.commons.math3.linear.BlockFieldMatrix.setRowMatrix(ILorg/apache/commons/math3/linear/FieldMatrix;)V
org.apache.commons.math3.linear.BlockFieldMatrix.setRowVector(ILorg/apache/commons/math3/linear/FieldVector;)V
org.apache.commons.math3.linear.BlockFieldMatrix.setSubMatrix([[Lorg/apache/commons/math3/FieldElement;II)V
org.apache.commons.math3.linear.BlockFieldMatrix.subtract(Lorg/apache/commons/math3/linear/BlockFieldMatrix;)Lorg/apache/commons/math3/linear/BlockFieldMatrix;
org.apache.commons.math3.linear.BlockFieldMatrix.subtract(Lorg/apache/commons/math3/linear/FieldMatrix;)Lorg/apache/commons/math3/linear/FieldMatrix;
org.apache.commons.math3.linear.BlockFieldMatrix.toBlocksLayout([[Lorg/apache/commons/math3/FieldElement;)[[Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.BlockFieldMatrix.transpose()Lorg/apache/commons/math3/linear/FieldMatrix;
org.apache.commons.math3.linear.BlockFieldMatrix.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/FieldMatrixChangingVisitor;)Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.BlockFieldMatrix.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/FieldMatrixChangingVisitor;IIII)Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.BlockFieldMatrix.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/FieldMatrixPreservingVisitor;)Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.BlockFieldMatrix.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/FieldMatrixPreservingVisitor;IIII)Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.BlockFieldMatrix.walkInRowOrder(Lorg/apache/commons/math3/linear/FieldMatrixChangingVisitor;)Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.BlockFieldMatrix.walkInRowOrder(Lorg/apache/commons/math3/linear/FieldMatrixChangingVisitor;IIII)Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.BlockFieldMatrix.walkInRowOrder(Lorg/apache/commons/math3/linear/FieldMatrixPreservingVisitor;)Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.BlockFieldMatrix.walkInRowOrder(Lorg/apache/commons/math3/linear/FieldMatrixPreservingVisitor;IIII)Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.BlockRealMatrix.add(Lorg/apache/commons/math3/linear/BlockRealMatrix;)Lorg/apache/commons/math3/linear/BlockRealMatrix;
org.apache.commons.math3.linear.BlockRealMatrix.add(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/BlockRealMatrix;
org.apache.commons.math3.linear.BlockRealMatrix.add(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.BlockRealMatrix.addToEntry(IID)V
org.apache.commons.math3.linear.BlockRealMatrix.blockHeight(I)I
org.apache.commons.math3.linear.BlockRealMatrix.blockWidth(I)I
org.apache.commons.math3.linear.BlockRealMatrix.copy()Lorg/apache/commons/math3/linear/BlockRealMatrix;
org.apache.commons.math3.linear.BlockRealMatrix.copy()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.BlockRealMatrix.copyBlockPart([DIIIII[DIII)V
org.apache.commons.math3.linear.BlockRealMatrix.createMatrix(II)Lorg/apache/commons/math3/linear/BlockRealMatrix;
org.apache.commons.math3.linear.BlockRealMatrix.createMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.BlockRealMatrix.getColumn(I)[D
org.apache.commons.math3.linear.BlockRealMatrix.getColumnDimension()I
org.apache.commons.math3.linear.BlockRealMatrix.getColumnMatrix(I)Lorg/apache/commons/math3/linear/BlockRealMatrix;
org.apache.commons.math3.linear.BlockRealMatrix.getColumnMatrix(I)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.BlockRealMatrix.getColumnVector(I)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.BlockRealMatrix.getData()[[D
org.apache.commons.math3.linear.BlockRealMatrix.getEntry(II)D
org.apache.commons.math3.linear.BlockRealMatrix.getFrobeniusNorm()D
org.apache.commons.math3.linear.BlockRealMatrix.getNorm()D
org.apache.commons.math3.linear.BlockRealMatrix.getRow(I)[D
org.apache.commons.math3.linear.BlockRealMatrix.getRowDimension()I
org.apache.commons.math3.linear.BlockRealMatrix.getRowMatrix(I)Lorg/apache/commons/math3/linear/BlockRealMatrix;
org.apache.commons.math3.linear.BlockRealMatrix.getRowMatrix(I)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.BlockRealMatrix.getRowVector(I)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.BlockRealMatrix.getSubMatrix(IIII)Lorg/apache/commons/math3/linear/BlockRealMatrix;
org.apache.commons.math3.linear.BlockRealMatrix.getSubMatrix(IIII)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.BlockRealMatrix.multiply(Lorg/apache/commons/math3/linear/BlockRealMatrix;)Lorg/apache/commons/math3/linear/BlockRealMatrix;
org.apache.commons.math3.linear.BlockRealMatrix.multiply(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/BlockRealMatrix;
org.apache.commons.math3.linear.BlockRealMatrix.multiply(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.BlockRealMatrix.multiplyEntry(IID)V
org.apache.commons.math3.linear.BlockRealMatrix.operate([D)[D
org.apache.commons.math3.linear.BlockRealMatrix.preMultiply([D)[D
org.apache.commons.math3.linear.BlockRealMatrix.scalarAdd(D)Lorg/apache/commons/math3/linear/BlockRealMatrix;
org.apache.commons.math3.linear.BlockRealMatrix.scalarAdd(D)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.BlockRealMatrix.scalarMultiply(D)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.BlockRealMatrix.setColumn(I[D)V
org.apache.commons.math3.linear.BlockRealMatrix.setColumnMatrix(ILorg/apache/commons/math3/linear/BlockRealMatrix;)V
org.apache.commons.math3.linear.BlockRealMatrix.setColumnMatrix(ILorg/apache/commons/math3/linear/RealMatrix;)V
org.apache.commons.math3.linear.BlockRealMatrix.setColumnVector(ILorg/apache/commons/math3/linear/RealVector;)V
org.apache.commons.math3.linear.BlockRealMatrix.setEntry(IID)V
org.apache.commons.math3.linear.BlockRealMatrix.setRow(I[D)V
org.apache.commons.math3.linear.BlockRealMatrix.setRowMatrix(ILorg/apache/commons/math3/linear/BlockRealMatrix;)V
org.apache.commons.math3.linear.BlockRealMatrix.setRowMatrix(ILorg/apache/commons/math3/linear/RealMatrix;)V
org.apache.commons.math3.linear.BlockRealMatrix.setRowVector(ILorg/apache/commons/math3/linear/RealVector;)V
org.apache.commons.math3.linear.BlockRealMatrix.setSubMatrix([[DII)V
org.apache.commons.math3.linear.BlockRealMatrix.subtract(Lorg/apache/commons/math3/linear/BlockRealMatrix;)Lorg/apache/commons/math3/linear/BlockRealMatrix;
org.apache.commons.math3.linear.BlockRealMatrix.subtract(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/BlockRealMatrix;
org.apache.commons.math3.linear.BlockRealMatrix.subtract(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.BlockRealMatrix.toBlocksLayout([[D)[[D
org.apache.commons.math3.linear.BlockRealMatrix.transpose()Lorg/apache/commons/math3/linear/BlockRealMatrix;
org.apache.commons.math3.linear.BlockRealMatrix.transpose()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.BlockRealMatrix.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D
org.apache.commons.math3.linear.BlockRealMatrix.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D
org.apache.commons.math3.linear.BlockRealMatrix.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D
org.apache.commons.math3.linear.BlockRealMatrix.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D
org.apache.commons.math3.linear.BlockRealMatrix.walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D
org.apache.commons.math3.linear.BlockRealMatrix.walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D
org.apache.commons.math3.linear.BlockRealMatrix.walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D
org.apache.commons.math3.linear.BlockRealMatrix.walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D
org.apache.commons.math3.linear.CholeskyDecomposition$Solver.getInverse()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.CholeskyDecomposition$Solver.isNonSingular()Z
org.apache.commons.math3.linear.CholeskyDecomposition$Solver.solve(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.CholeskyDecomposition$Solver.solve(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.CholeskyDecomposition.getDeterminant()D
org.apache.commons.math3.linear.CholeskyDecomposition.getL()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.CholeskyDecomposition.getLT()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.CholeskyDecomposition.getSolver()Lorg/apache/commons/math3/linear/DecompositionSolver;
org.apache.commons.math3.linear.ConjugateGradient.getCheck()Z
org.apache.commons.math3.linear.ConjugateGradient.solveInPlace(Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.DefaultFieldMatrixChangingVisitor.end()Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.DefaultFieldMatrixChangingVisitor.start(IIIIII)V
org.apache.commons.math3.linear.DefaultFieldMatrixChangingVisitor.visit(IILorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.DefaultFieldMatrixPreservingVisitor.end()Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.DefaultFieldMatrixPreservingVisitor.start(IIIIII)V
org.apache.commons.math3.linear.DefaultFieldMatrixPreservingVisitor.visit(IILorg/apache/commons/math3/FieldElement;)V
org.apache.commons.math3.linear.DefaultIterativeLinearSolverEvent.getNormOfResidual()D
org.apache.commons.math3.linear.DefaultIterativeLinearSolverEvent.getResidual()Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.DefaultIterativeLinearSolverEvent.getRightHandSideVector()Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.DefaultIterativeLinearSolverEvent.getSolution()Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.DefaultIterativeLinearSolverEvent.providesResidual()Z
org.apache.commons.math3.linear.DefaultRealMatrixChangingVisitor.end()D
org.apache.commons.math3.linear.DefaultRealMatrixChangingVisitor.start(IIIIII)V
org.apache.commons.math3.linear.DefaultRealMatrixChangingVisitor.visit(IID)D
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor.end()D
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor.start(IIIIII)V
org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor.visit(IID)V
org.apache.commons.math3.linear.DiagonalMatrix.add(Lorg/apache/commons/math3/linear/DiagonalMatrix;)Lorg/apache/commons/math3/linear/DiagonalMatrix;
org.apache.commons.math3.linear.DiagonalMatrix.addToEntry(IID)V
org.apache.commons.math3.linear.DiagonalMatrix.copy()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.DiagonalMatrix.createMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.DiagonalMatrix.ensureZero(D)V
org.apache.commons.math3.linear.DiagonalMatrix.getColumnDimension()I
org.apache.commons.math3.linear.DiagonalMatrix.getData()[[D
org.apache.commons.math3.linear.DiagonalMatrix.getDataRef()[D
org.apache.commons.math3.linear.DiagonalMatrix.getEntry(II)D
org.apache.commons.math3.linear.DiagonalMatrix.getRowDimension()I
org.apache.commons.math3.linear.DiagonalMatrix.inverse()Lorg/apache/commons/math3/linear/DiagonalMatrix;
org.apache.commons.math3.linear.DiagonalMatrix.inverse(D)Lorg/apache/commons/math3/linear/DiagonalMatrix;
org.apache.commons.math3.linear.DiagonalMatrix.isSingular(D)Z
org.apache.commons.math3.linear.DiagonalMatrix.multiply(Lorg/apache/commons/math3/linear/DiagonalMatrix;)Lorg/apache/commons/math3/linear/DiagonalMatrix;
org.apache.commons.math3.linear.DiagonalMatrix.multiply(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.DiagonalMatrix.multiplyEntry(IID)V
org.apache.commons.math3.linear.DiagonalMatrix.operate([D)[D
org.apache.commons.math3.linear.DiagonalMatrix.preMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.DiagonalMatrix.preMultiply([D)[D
org.apache.commons.math3.linear.DiagonalMatrix.setEntry(IID)V
org.apache.commons.math3.linear.DiagonalMatrix.subtract(Lorg/apache/commons/math3/linear/DiagonalMatrix;)Lorg/apache/commons/math3/linear/DiagonalMatrix;
org.apache.commons.math3.linear.EigenDecomposition$Solver.eigenvalueNorm(I)D
org.apache.commons.math3.linear.EigenDecomposition$Solver.getInverse()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.EigenDecomposition$Solver.isNonSingular()Z
org.apache.commons.math3.linear.EigenDecomposition$Solver.solve(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.EigenDecomposition$Solver.solve(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.EigenDecomposition.cdiv(DDDD)Lorg/apache/commons/math3/complex/Complex;
org.apache.commons.math3.linear.EigenDecomposition.findEigenVectors([[D)V
org.apache.commons.math3.linear.EigenDecomposition.findEigenVectorsFromSchur(Lorg/apache/commons/math3/linear/SchurTransformer;)V
org.apache.commons.math3.linear.EigenDecomposition.getD()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.EigenDecomposition.getDeterminant()D
org.apache.commons.math3.linear.EigenDecomposition.getEigenvector(I)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.EigenDecomposition.getImagEigenvalue(I)D
org.apache.commons.math3.linear.EigenDecomposition.getImagEigenvalues()[D
org.apache.commons.math3.linear.EigenDecomposition.getRealEigenvalue(I)D
org.apache.commons.math3.linear.EigenDecomposition.getRealEigenvalues()[D
org.apache.commons.math3.linear.EigenDecomposition.getSolver()Lorg/apache/commons/math3/linear/DecompositionSolver;
org.apache.commons.math3.linear.EigenDecomposition.getSquareRoot()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.EigenDecomposition.getV()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.EigenDecomposition.getVT()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.EigenDecomposition.hasComplexEigenvalues()Z
org.apache.commons.math3.linear.EigenDecomposition.transformToSchur(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/SchurTransformer;
org.apache.commons.math3.linear.EigenDecomposition.transformToTridiagonal(Lorg/apache/commons/math3/linear/RealMatrix;)V
org.apache.commons.math3.linear.FieldLUDecomposition$Solver.getInverse()Lorg/apache/commons/math3/linear/FieldMatrix;
org.apache.commons.math3.linear.FieldLUDecomposition$Solver.isNonSingular()Z
org.apache.commons.math3.linear.FieldLUDecomposition$Solver.solve(Lorg/apache/commons/math3/linear/ArrayFieldVector;)Lorg/apache/commons/math3/linear/ArrayFieldVector;
org.apache.commons.math3.linear.FieldLUDecomposition$Solver.solve(Lorg/apache/commons/math3/linear/FieldMatrix;)Lorg/apache/commons/math3/linear/FieldMatrix;
org.apache.commons.math3.linear.FieldLUDecomposition$Solver.solve(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldVector;
org.apache.commons.math3.linear.FieldLUDecomposition.getDeterminant()Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.FieldLUDecomposition.getL()Lorg/apache/commons/math3/linear/FieldMatrix;
org.apache.commons.math3.linear.FieldLUDecomposition.getP()Lorg/apache/commons/math3/linear/FieldMatrix;
org.apache.commons.math3.linear.FieldLUDecomposition.getPivot()[I
org.apache.commons.math3.linear.FieldLUDecomposition.getSolver()Lorg/apache/commons/math3/linear/FieldDecompositionSolver;
org.apache.commons.math3.linear.FieldLUDecomposition.getU()Lorg/apache/commons/math3/linear/FieldMatrix;
org.apache.commons.math3.linear.HessenbergTransformer.getH()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.HessenbergTransformer.getHouseholderVectorsRef()[[D
org.apache.commons.math3.linear.HessenbergTransformer.getP()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.HessenbergTransformer.getPT()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.HessenbergTransformer.transform()V
org.apache.commons.math3.linear.IterativeLinearSolver.getIterationManager()Lorg/apache/commons/math3/util/IterationManager;
org.apache.commons.math3.linear.JacobiPreconditioner$1.getColumnDimension()I
org.apache.commons.math3.linear.JacobiPreconditioner$1.getRowDimension()I
org.apache.commons.math3.linear.JacobiPreconditioner$1.operate(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.JacobiPreconditioner.getColumnDimension()I
org.apache.commons.math3.linear.JacobiPreconditioner.getRowDimension()I
org.apache.commons.math3.linear.JacobiPreconditioner.operate(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.JacobiPreconditioner.sqrt()Lorg/apache/commons/math3/linear/RealLinearOperator;
org.apache.commons.math3.linear.LUDecomposition$Solver.getInverse()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.LUDecomposition$Solver.isNonSingular()Z
org.apache.commons.math3.linear.LUDecomposition$Solver.solve(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.LUDecomposition$Solver.solve(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.LUDecomposition.getDeterminant()D
org.apache.commons.math3.linear.LUDecomposition.getL()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.LUDecomposition.getP()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.LUDecomposition.getPivot()[I
org.apache.commons.math3.linear.LUDecomposition.getSolver()Lorg/apache/commons/math3/linear/DecompositionSolver;
org.apache.commons.math3.linear.LUDecomposition.getU()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.MatrixDimensionMismatchException.getExpectedColumnDimension()I
org.apache.commons.math3.linear.MatrixDimensionMismatchException.getExpectedRowDimension()I
org.apache.commons.math3.linear.MatrixDimensionMismatchException.getWrongColumnDimension()I
org.apache.commons.math3.linear.MatrixDimensionMismatchException.getWrongRowDimension()I
org.apache.commons.math3.linear.MatrixUtils$BigFractionMatrixConverter.getConvertedMatrix()Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;
org.apache.commons.math3.linear.MatrixUtils$BigFractionMatrixConverter.start(IIIIII)V
org.apache.commons.math3.linear.MatrixUtils$BigFractionMatrixConverter.visit(IILorg/apache/commons/math3/FieldElement;)V
org.apache.commons.math3.linear.MatrixUtils$BigFractionMatrixConverter.visit(IILorg/apache/commons/math3/fraction/BigFraction;)V
org.apache.commons.math3.linear.MatrixUtils$FractionMatrixConverter.getConvertedMatrix()Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;
org.apache.commons.math3.linear.MatrixUtils$FractionMatrixConverter.start(IIIIII)V
org.apache.commons.math3.linear.MatrixUtils$FractionMatrixConverter.visit(IILorg/apache/commons/math3/FieldElement;)V
org.apache.commons.math3.linear.MatrixUtils$FractionMatrixConverter.visit(IILorg/apache/commons/math3/fraction/Fraction;)V
org.apache.commons.math3.linear.MatrixUtils.bigFractionMatrixToRealMatrix(Lorg/apache/commons/math3/linear/FieldMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;
org.apache.commons.math3.linear.MatrixUtils.checkAdditionCompatible(Lorg/apache/commons/math3/linear/AnyMatrix;Lorg/apache/commons/math3/linear/AnyMatrix;)V
org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V
org.apache.commons.math3.linear.MatrixUtils.checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V
org.apache.commons.math3.linear.MatrixUtils.checkMultiplicationCompatible(Lorg/apache/commons/math3/linear/AnyMatrix;Lorg/apache/commons/math3/linear/AnyMatrix;)V
org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V
org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;IIII)V
org.apache.commons.math3.linear.MatrixUtils.checkSubtractionCompatible(Lorg/apache/commons/math3/linear/AnyMatrix;Lorg/apache/commons/math3/linear/AnyMatrix;)V
org.apache.commons.math3.linear.MatrixUtils.createColumnFieldMatrix([Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldMatrix;
org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix([D)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.MatrixUtils.createFieldDiagonalMatrix([Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldMatrix;
org.apache.commons.math3.linear.MatrixUtils.createFieldIdentityMatrix(Lorg/apache/commons/math3/Field;I)Lorg/apache/commons/math3/linear/FieldMatrix;
org.apache.commons.math3.linear.MatrixUtils.createFieldMatrix(Lorg/apache/commons/math3/Field;II)Lorg/apache/commons/math3/linear/FieldMatrix;
org.apache.commons.math3.linear.MatrixUtils.createFieldMatrix([[Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldMatrix;
org.apache.commons.math3.linear.MatrixUtils.createFieldVector([Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;
org.apache.commons.math3.linear.MatrixUtils.createRealDiagonalMatrix([D)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.MatrixUtils.createRealMatrix([[D)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.MatrixUtils.createRealVector([D)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.MatrixUtils.createRowFieldMatrix([Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldMatrix;
org.apache.commons.math3.linear.MatrixUtils.createRowRealMatrix([D)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.MatrixUtils.deserializeRealMatrix(Ljava/lang/Object;Ljava/lang/String;Ljava/io/ObjectInputStream;)V
org.apache.commons.math3.linear.MatrixUtils.deserializeRealVector(Ljava/lang/Object;Ljava/lang/String;Ljava/io/ObjectInputStream;)V
org.apache.commons.math3.linear.MatrixUtils.isSymmetric(Lorg/apache/commons/math3/linear/RealMatrix;D)Z
org.apache.commons.math3.linear.MatrixUtils.isSymmetricInternal(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z
org.apache.commons.math3.linear.MatrixUtils.serializeRealMatrix(Lorg/apache/commons/math3/linear/RealMatrix;Ljava/io/ObjectOutputStream;)V
org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException.getColumn()I
org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException.getRow()I
org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException.getThreshold()D
org.apache.commons.math3.linear.NonSymmetricMatrixException.getColumn()I
org.apache.commons.math3.linear.NonSymmetricMatrixException.getRow()I
org.apache.commons.math3.linear.NonSymmetricMatrixException.getThreshold()D
org.apache.commons.math3.linear.OpenMapRealMatrix.add(Lorg/apache/commons/math3/linear/OpenMapRealMatrix;)Lorg/apache/commons/math3/linear/OpenMapRealMatrix;
org.apache.commons.math3.linear.OpenMapRealMatrix.addToEntry(IID)V
org.apache.commons.math3.linear.OpenMapRealMatrix.computeKey(II)I
org.apache.commons.math3.linear.OpenMapRealMatrix.copy()Lorg/apache/commons/math3/linear/OpenMapRealMatrix;
org.apache.commons.math3.linear.OpenMapRealMatrix.copy()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.OpenMapRealMatrix.createMatrix(II)Lorg/apache/commons/math3/linear/OpenMapRealMatrix;
org.apache.commons.math3.linear.OpenMapRealMatrix.createMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.OpenMapRealMatrix.getColumnDimension()I
org.apache.commons.math3.linear.OpenMapRealMatrix.getEntry(II)D
org.apache.commons.math3.linear.OpenMapRealMatrix.getRowDimension()I
org.apache.commons.math3.linear.OpenMapRealMatrix.multiply(Lorg/apache/commons/math3/linear/OpenMapRealMatrix;)Lorg/apache/commons/math3/linear/OpenMapRealMatrix;
org.apache.commons.math3.linear.OpenMapRealMatrix.multiply(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.OpenMapRealMatrix.multiplyEntry(IID)V
org.apache.commons.math3.linear.OpenMapRealMatrix.setEntry(IID)V
org.apache.commons.math3.linear.OpenMapRealMatrix.subtract(Lorg/apache/commons/math3/linear/OpenMapRealMatrix;)Lorg/apache/commons/math3/linear/OpenMapRealMatrix;
org.apache.commons.math3.linear.OpenMapRealMatrix.subtract(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/OpenMapRealMatrix;
org.apache.commons.math3.linear.OpenMapRealMatrix.subtract(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.OpenMapRealVector$OpenMapEntry.getIndex()I
org.apache.commons.math3.linear.OpenMapRealVector$OpenMapEntry.getValue()D
org.apache.commons.math3.linear.OpenMapRealVector$OpenMapEntry.setValue(D)V
org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.hasNext()Z
org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.next()Ljava/lang/Object;
org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.next()Lorg/apache/commons/math3/linear/RealVector$Entry;
org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.remove()V
org.apache.commons.math3.linear.OpenMapRealVector.access$000(Lorg/apache/commons/math3/linear/OpenMapRealVector;)Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;
org.apache.commons.math3.linear.OpenMapRealVector.add(Lorg/apache/commons/math3/linear/OpenMapRealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;
org.apache.commons.math3.linear.OpenMapRealVector.add(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.OpenMapRealVector.append(D)Lorg/apache/commons/math3/linear/OpenMapRealVector;
org.apache.commons.math3.linear.OpenMapRealVector.append(D)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.OpenMapRealVector.append(Lorg/apache/commons/math3/linear/OpenMapRealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;
org.apache.commons.math3.linear.OpenMapRealVector.append(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;
org.apache.commons.math3.linear.OpenMapRealVector.append(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.OpenMapRealVector.copy()Lorg/apache/commons/math3/linear/OpenMapRealVector;
org.apache.commons.math3.linear.OpenMapRealVector.copy()Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.OpenMapRealVector.dotProduct(Lorg/apache/commons/math3/linear/OpenMapRealVector;)D
org.apache.commons.math3.linear.OpenMapRealVector.ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;
org.apache.commons.math3.linear.OpenMapRealVector.ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.OpenMapRealVector.ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;
org.apache.commons.math3.linear.OpenMapRealVector.ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.OpenMapRealVector.equals(Ljava/lang/Object;)Z
org.apache.commons.math3.linear.OpenMapRealVector.getDimension()I
org.apache.commons.math3.linear.OpenMapRealVector.getDistance(Lorg/apache/commons/math3/linear/OpenMapRealVector;)D
org.apache.commons.math3.linear.OpenMapRealVector.getDistance(Lorg/apache/commons/math3/linear/RealVector;)D
org.apache.commons.math3.linear.OpenMapRealVector.getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;
org.apache.commons.math3.linear.OpenMapRealVector.getEntry(I)D
org.apache.commons.math3.linear.OpenMapRealVector.getL1Distance(Lorg/apache/commons/math3/linear/OpenMapRealVector;)D
org.apache.commons.math3.linear.OpenMapRealVector.getL1Distance(Lorg/apache/commons/math3/linear/RealVector;)D
org.apache.commons.math3.linear.OpenMapRealVector.getLInfDistance(Lorg/apache/commons/math3/linear/OpenMapRealVector;)D
org.apache.commons.math3.linear.OpenMapRealVector.getLInfDistance(Lorg/apache/commons/math3/linear/RealVector;)D
org.apache.commons.math3.linear.OpenMapRealVector.getSparsity()D
org.apache.commons.math3.linear.OpenMapRealVector.getSubVector(II)Lorg/apache/commons/math3/linear/OpenMapRealVector;
org.apache.commons.math3.linear.OpenMapRealVector.getSubVector(II)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.OpenMapRealVector.hashCode()I
org.apache.commons.math3.linear.OpenMapRealVector.isDefaultValue(D)Z
org.apache.commons.math3.linear.OpenMapRealVector.isInfinite()Z
org.apache.commons.math3.linear.OpenMapRealVector.isNaN()Z
org.apache.commons.math3.linear.OpenMapRealVector.mapAdd(D)Lorg/apache/commons/math3/linear/OpenMapRealVector;
org.apache.commons.math3.linear.OpenMapRealVector.mapAdd(D)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.OpenMapRealVector.mapAddToSelf(D)Lorg/apache/commons/math3/linear/OpenMapRealVector;
org.apache.commons.math3.linear.OpenMapRealVector.mapAddToSelf(D)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.OpenMapRealVector.set(D)V
org.apache.commons.math3.linear.OpenMapRealVector.setEntry(ID)V
org.apache.commons.math3.linear.OpenMapRealVector.setSubVector(ILorg/apache/commons/math3/linear/RealVector;)V
org.apache.commons.math3.linear.OpenMapRealVector.sparseIterator()Ljava/util/Iterator;
org.apache.commons.math3.linear.OpenMapRealVector.subtract(Lorg/apache/commons/math3/linear/OpenMapRealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;
org.apache.commons.math3.linear.OpenMapRealVector.subtract(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.OpenMapRealVector.toArray()[D
org.apache.commons.math3.linear.OpenMapRealVector.unitVector()Lorg/apache/commons/math3/linear/OpenMapRealVector;
org.apache.commons.math3.linear.OpenMapRealVector.unitVector()Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.OpenMapRealVector.unitize()V
org.apache.commons.math3.linear.QRDecomposition$Solver.getInverse()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.QRDecomposition$Solver.isNonSingular()Z
org.apache.commons.math3.linear.QRDecomposition$Solver.solve(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.QRDecomposition$Solver.solve(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.QRDecomposition.decompose([[D)V
org.apache.commons.math3.linear.QRDecomposition.getH()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.QRDecomposition.getQ()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.QRDecomposition.getQT()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.QRDecomposition.getR()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.QRDecomposition.getSolver()Lorg/apache/commons/math3/linear/DecompositionSolver;
org.apache.commons.math3.linear.QRDecomposition.performHouseholderReflection(I[[D)V
org.apache.commons.math3.linear.RRQRDecomposition$Solver.getInverse()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.RRQRDecomposition$Solver.isNonSingular()Z
org.apache.commons.math3.linear.RRQRDecomposition$Solver.solve(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.RRQRDecomposition$Solver.solve(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.RRQRDecomposition.decompose([[D)V
org.apache.commons.math3.linear.RRQRDecomposition.getP()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.RRQRDecomposition.getRank(D)I
org.apache.commons.math3.linear.RRQRDecomposition.getSolver()Lorg/apache/commons/math3/linear/DecompositionSolver;
org.apache.commons.math3.linear.RRQRDecomposition.performHouseholderReflection(I[[D)V
org.apache.commons.math3.linear.RealMatrixFormat.format(Lorg/apache/commons/math3/linear/RealMatrix;)Ljava/lang/String;
org.apache.commons.math3.linear.RealMatrixFormat.format(Lorg/apache/commons/math3/linear/RealMatrix;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;
org.apache.commons.math3.linear.RealMatrixFormat.getAvailableLocales()[Ljava/util/Locale;
org.apache.commons.math3.linear.RealMatrixFormat.getColumnSeparator()Ljava/lang/String;
org.apache.commons.math3.linear.RealMatrixFormat.getFormat()Ljava/text/NumberFormat;
org.apache.commons.math3.linear.RealMatrixFormat.getInstance()Lorg/apache/commons/math3/linear/RealMatrixFormat;
org.apache.commons.math3.linear.RealMatrixFormat.getInstance(Ljava/util/Locale;)Lorg/apache/commons/math3/linear/RealMatrixFormat;
org.apache.commons.math3.linear.RealMatrixFormat.getPrefix()Ljava/lang/String;
org.apache.commons.math3.linear.RealMatrixFormat.getRowPrefix()Ljava/lang/String;
org.apache.commons.math3.linear.RealMatrixFormat.getRowSeparator()Ljava/lang/String;
org.apache.commons.math3.linear.RealMatrixFormat.getRowSuffix()Ljava/lang/String;
org.apache.commons.math3.linear.RealMatrixFormat.getSuffix()Ljava/lang/String;
org.apache.commons.math3.linear.RealMatrixFormat.parse(Ljava/lang/String;)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.RealMatrixFormat.parse(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.RealVector$1.hasNext()Z
org.apache.commons.math3.linear.RealVector$1.next()Ljava/lang/Object;
org.apache.commons.math3.linear.RealVector$1.next()Lorg/apache/commons/math3/linear/RealVector$Entry;
org.apache.commons.math3.linear.RealVector$1.remove()V
org.apache.commons.math3.linear.RealVector$2$1.hasNext()Z
org.apache.commons.math3.linear.RealVector$2$1.next()Ljava/lang/Object;
org.apache.commons.math3.linear.RealVector$2$1.next()Lorg/apache/commons/math3/linear/RealVector$Entry;
org.apache.commons.math3.linear.RealVector$2$1.remove()V
org.apache.commons.math3.linear.RealVector$2$2.hasNext()Z
org.apache.commons.math3.linear.RealVector$2$2.next()Ljava/lang/Object;
org.apache.commons.math3.linear.RealVector$2$2.next()Lorg/apache/commons/math3/linear/RealVector$Entry;
org.apache.commons.math3.linear.RealVector$2$2.remove()V
org.apache.commons.math3.linear.RealVector$2$UnmodifiableEntry.getValue()D
org.apache.commons.math3.linear.RealVector$2$UnmodifiableEntry.setValue(D)V
org.apache.commons.math3.linear.RealVector$2.add(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.RealVector$2.addToEntry(ID)V
org.apache.commons.math3.linear.RealVector$2.append(D)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.RealVector$2.append(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.RealVector$2.combine(DDLorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.RealVector$2.combineToSelf(DDLorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.RealVector$2.copy()Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.RealVector$2.cosine(Lorg/apache/commons/math3/linear/RealVector;)D
org.apache.commons.math3.linear.RealVector$2.dotProduct(Lorg/apache/commons/math3/linear/RealVector;)D
org.apache.commons.math3.linear.RealVector$2.ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.RealVector$2.ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.RealVector$2.getDimension()I
org.apache.commons.math3.linear.RealVector$2.getDistance(Lorg/apache/commons/math3/linear/RealVector;)D
org.apache.commons.math3.linear.RealVector$2.getEntry(I)D
org.apache.commons.math3.linear.RealVector$2.getL1Distance(Lorg/apache/commons/math3/linear/RealVector;)D
org.apache.commons.math3.linear.RealVector$2.getL1Norm()D
org.apache.commons.math3.linear.RealVector$2.getLInfDistance(Lorg/apache/commons/math3/linear/RealVector;)D
org.apache.commons.math3.linear.RealVector$2.getLInfNorm()D
org.apache.commons.math3.linear.RealVector$2.getNorm()D
org.apache.commons.math3.linear.RealVector$2.getSubVector(II)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.RealVector$2.isInfinite()Z
org.apache.commons.math3.linear.RealVector$2.isNaN()Z
org.apache.commons.math3.linear.RealVector$2.iterator()Ljava/util/Iterator;
org.apache.commons.math3.linear.RealVector$2.map(Lorg/apache/commons/math3/analysis/UnivariateFunction;)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.RealVector$2.mapAdd(D)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.RealVector$2.mapAddToSelf(D)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.RealVector$2.mapDivide(D)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.RealVector$2.mapDivideToSelf(D)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.RealVector$2.mapMultiply(D)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.RealVector$2.mapMultiplyToSelf(D)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.RealVector$2.mapSubtract(D)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.RealVector$2.mapSubtractToSelf(D)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.RealVector$2.mapToSelf(Lorg/apache/commons/math3/analysis/UnivariateFunction;)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.RealVector$2.outerProduct(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.RealVector$2.set(D)V
org.apache.commons.math3.linear.RealVector$2.setEntry(ID)V
org.apache.commons.math3.linear.RealVector$2.setSubVector(ILorg/apache/commons/math3/linear/RealVector;)V
org.apache.commons.math3.linear.RealVector$2.sparseIterator()Ljava/util/Iterator;
org.apache.commons.math3.linear.RealVector$2.subtract(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.RealVector$2.toArray()[D
org.apache.commons.math3.linear.RealVector$2.unitVector()Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.RealVector$2.unitize()V
org.apache.commons.math3.linear.RealVector$Entry.getIndex()I
org.apache.commons.math3.linear.RealVector$Entry.getValue()D
org.apache.commons.math3.linear.RealVector$Entry.setIndex(I)V
org.apache.commons.math3.linear.RealVector$Entry.setValue(D)V
org.apache.commons.math3.linear.RealVector$SparseEntryIterator.advance(Lorg/apache/commons/math3/linear/RealVector$Entry;)V
org.apache.commons.math3.linear.RealVector$SparseEntryIterator.hasNext()Z
org.apache.commons.math3.linear.RealVector$SparseEntryIterator.next()Ljava/lang/Object;
org.apache.commons.math3.linear.RealVector$SparseEntryIterator.next()Lorg/apache/commons/math3/linear/RealVector$Entry;
org.apache.commons.math3.linear.RealVector$SparseEntryIterator.remove()V
org.apache.commons.math3.linear.RealVector.add(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.RealVector.checkIndex(I)V
org.apache.commons.math3.linear.RealVector.checkIndices(II)V
org.apache.commons.math3.linear.RealVector.checkVectorDimensions(I)V
org.apache.commons.math3.linear.RealVector.checkVectorDimensions(Lorg/apache/commons/math3/linear/RealVector;)V
org.apache.commons.math3.linear.RealVector.dotProduct(Lorg/apache/commons/math3/linear/RealVector;)D
org.apache.commons.math3.linear.RealVector.getDistance(Lorg/apache/commons/math3/linear/RealVector;)D
org.apache.commons.math3.linear.RealVector.getL1Distance(Lorg/apache/commons/math3/linear/RealVector;)D
org.apache.commons.math3.linear.RealVector.getLInfDistance(Lorg/apache/commons/math3/linear/RealVector;)D
org.apache.commons.math3.linear.RealVector.getNorm()D
org.apache.commons.math3.linear.RealVector.iterator()Ljava/util/Iterator;
org.apache.commons.math3.linear.RealVector.mapMultiply(D)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.RealVector.subtract(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.RealVectorFormat.format(Lorg/apache/commons/math3/linear/RealVector;)Ljava/lang/String;
org.apache.commons.math3.linear.RealVectorFormat.format(Lorg/apache/commons/math3/linear/RealVector;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;
org.apache.commons.math3.linear.RealVectorFormat.getAvailableLocales()[Ljava/util/Locale;
org.apache.commons.math3.linear.RealVectorFormat.getFormat()Ljava/text/NumberFormat;
org.apache.commons.math3.linear.RealVectorFormat.getInstance()Lorg/apache/commons/math3/linear/RealVectorFormat;
org.apache.commons.math3.linear.RealVectorFormat.getInstance(Ljava/util/Locale;)Lorg/apache/commons/math3/linear/RealVectorFormat;
org.apache.commons.math3.linear.RealVectorFormat.getPrefix()Ljava/lang/String;
org.apache.commons.math3.linear.RealVectorFormat.getSeparator()Ljava/lang/String;
org.apache.commons.math3.linear.RealVectorFormat.getSuffix()Ljava/lang/String;
org.apache.commons.math3.linear.RealVectorFormat.parse(Ljava/lang/String;)Lorg/apache/commons/math3/linear/ArrayRealVector;
org.apache.commons.math3.linear.RealVectorFormat.parse(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math3/linear/ArrayRealVector;
org.apache.commons.math3.linear.RectangularCholeskyDecomposition.getRank()I
org.apache.commons.math3.linear.RectangularCholeskyDecomposition.getRootMatrix()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.SchurTransformer.computeShift(IIILorg/apache/commons/math3/linear/SchurTransformer$ShiftInfo;)V
org.apache.commons.math3.linear.SchurTransformer.findSmallSubDiagonalElement(ID)I
org.apache.commons.math3.linear.SchurTransformer.getNorm()D
org.apache.commons.math3.linear.SchurTransformer.getP()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.SchurTransformer.getPT()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.SchurTransformer.getT()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.SchurTransformer.initQRStep(IILorg/apache/commons/math3/linear/SchurTransformer$ShiftInfo;[D)I
org.apache.commons.math3.linear.SchurTransformer.performDoubleQRStep(IIILorg/apache/commons/math3/linear/SchurTransformer$ShiftInfo;[D)V
org.apache.commons.math3.linear.SchurTransformer.transform()V
org.apache.commons.math3.linear.SingularValueDecomposition$1.visit(IID)V
org.apache.commons.math3.linear.SingularValueDecomposition$Solver.getInverse()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.SingularValueDecomposition$Solver.isNonSingular()Z
org.apache.commons.math3.linear.SingularValueDecomposition$Solver.solve(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.SingularValueDecomposition$Solver.solve(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.SingularValueDecomposition.access$000(Lorg/apache/commons/math3/linear/SingularValueDecomposition;)[D
org.apache.commons.math3.linear.SingularValueDecomposition.getConditionNumber()D
org.apache.commons.math3.linear.SingularValueDecomposition.getCovariance(D)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.SingularValueDecomposition.getInverseConditionNumber()D
org.apache.commons.math3.linear.SingularValueDecomposition.getNorm()D
org.apache.commons.math3.linear.SingularValueDecomposition.getRank()I
org.apache.commons.math3.linear.SingularValueDecomposition.getS()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.SingularValueDecomposition.getSingularValues()[D
org.apache.commons.math3.linear.SingularValueDecomposition.getSolver()Lorg/apache/commons/math3/linear/DecompositionSolver;
org.apache.commons.math3.linear.SingularValueDecomposition.getU()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.SingularValueDecomposition.getUT()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.SingularValueDecomposition.getV()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.SingularValueDecomposition.getVT()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.SparseFieldMatrix.addToEntry(IILorg/apache/commons/math3/FieldElement;)V
org.apache.commons.math3.linear.SparseFieldMatrix.computeKey(II)I
org.apache.commons.math3.linear.SparseFieldMatrix.copy()Lorg/apache/commons/math3/linear/FieldMatrix;
org.apache.commons.math3.linear.SparseFieldMatrix.createMatrix(II)Lorg/apache/commons/math3/linear/FieldMatrix;
org.apache.commons.math3.linear.SparseFieldMatrix.getColumnDimension()I
org.apache.commons.math3.linear.SparseFieldMatrix.getEntry(II)Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.SparseFieldMatrix.getRowDimension()I
org.apache.commons.math3.linear.SparseFieldMatrix.multiplyEntry(IILorg/apache/commons/math3/FieldElement;)V
org.apache.commons.math3.linear.SparseFieldMatrix.setEntry(IILorg/apache/commons/math3/FieldElement;)V
org.apache.commons.math3.linear.SparseFieldVector.add(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldVector;
org.apache.commons.math3.linear.SparseFieldVector.add(Lorg/apache/commons/math3/linear/SparseFieldVector;)Lorg/apache/commons/math3/linear/FieldVector;
org.apache.commons.math3.linear.SparseFieldVector.append(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;
org.apache.commons.math3.linear.SparseFieldVector.append(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldVector;
org.apache.commons.math3.linear.SparseFieldVector.append(Lorg/apache/commons/math3/linear/SparseFieldVector;)Lorg/apache/commons/math3/linear/FieldVector;
org.apache.commons.math3.linear.SparseFieldVector.checkIndex(I)V
org.apache.commons.math3.linear.SparseFieldVector.checkIndices(II)V
org.apache.commons.math3.linear.SparseFieldVector.checkVectorDimensions(I)V
org.apache.commons.math3.linear.SparseFieldVector.copy()Lorg/apache/commons/math3/linear/FieldVector;
org.apache.commons.math3.linear.SparseFieldVector.dotProduct(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.SparseFieldVector.ebeDivide(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldVector;
org.apache.commons.math3.linear.SparseFieldVector.ebeMultiply(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldVector;
org.apache.commons.math3.linear.SparseFieldVector.equals(Ljava/lang/Object;)Z
org.apache.commons.math3.linear.SparseFieldVector.getData()[Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.SparseFieldVector.getDimension()I
org.apache.commons.math3.linear.SparseFieldVector.getEntries()Lorg/apache/commons/math3/util/OpenIntToFieldHashMap;
org.apache.commons.math3.linear.SparseFieldVector.getEntry(I)Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.SparseFieldVector.getField()Lorg/apache/commons/math3/Field;
org.apache.commons.math3.linear.SparseFieldVector.getSubVector(II)Lorg/apache/commons/math3/linear/FieldVector;
org.apache.commons.math3.linear.SparseFieldVector.hashCode()I
org.apache.commons.math3.linear.SparseFieldVector.mapAdd(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;
org.apache.commons.math3.linear.SparseFieldVector.mapAddToSelf(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;
org.apache.commons.math3.linear.SparseFieldVector.mapDivide(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;
org.apache.commons.math3.linear.SparseFieldVector.mapDivideToSelf(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;
org.apache.commons.math3.linear.SparseFieldVector.mapInv()Lorg/apache/commons/math3/linear/FieldVector;
org.apache.commons.math3.linear.SparseFieldVector.mapInvToSelf()Lorg/apache/commons/math3/linear/FieldVector;
org.apache.commons.math3.linear.SparseFieldVector.mapMultiply(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;
org.apache.commons.math3.linear.SparseFieldVector.mapMultiplyToSelf(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;
org.apache.commons.math3.linear.SparseFieldVector.mapSubtract(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;
org.apache.commons.math3.linear.SparseFieldVector.mapSubtractToSelf(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;
org.apache.commons.math3.linear.SparseFieldVector.outerProduct(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldMatrix;
org.apache.commons.math3.linear.SparseFieldVector.outerProduct(Lorg/apache/commons/math3/linear/SparseFieldVector;)Lorg/apache/commons/math3/linear/FieldMatrix;
org.apache.commons.math3.linear.SparseFieldVector.projection(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldVector;
org.apache.commons.math3.linear.SparseFieldVector.set(Lorg/apache/commons/math3/FieldElement;)V
org.apache.commons.math3.linear.SparseFieldVector.setEntry(ILorg/apache/commons/math3/FieldElement;)V
org.apache.commons.math3.linear.SparseFieldVector.setSubVector(ILorg/apache/commons/math3/linear/FieldVector;)V
org.apache.commons.math3.linear.SparseFieldVector.subtract(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldVector;
org.apache.commons.math3.linear.SparseFieldVector.subtract(Lorg/apache/commons/math3/linear/SparseFieldVector;)Lorg/apache/commons/math3/linear/SparseFieldVector;
org.apache.commons.math3.linear.SparseFieldVector.toArray()[Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.SparseFieldVector.walkInDefaultOrder(Lorg/apache/commons/math3/linear/FieldVectorChangingVisitor;)Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.SparseFieldVector.walkInDefaultOrder(Lorg/apache/commons/math3/linear/FieldVectorChangingVisitor;II)Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.SparseFieldVector.walkInDefaultOrder(Lorg/apache/commons/math3/linear/FieldVectorPreservingVisitor;)Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.SparseFieldVector.walkInDefaultOrder(Lorg/apache/commons/math3/linear/FieldVectorPreservingVisitor;II)Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.SparseFieldVector.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/FieldVectorChangingVisitor;)Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.SparseFieldVector.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/FieldVectorChangingVisitor;II)Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.SparseFieldVector.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/FieldVectorPreservingVisitor;)Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.SparseFieldVector.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/FieldVectorPreservingVisitor;II)Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.linear.SymmLQ$State.bEqualsNullVector()Z
org.apache.commons.math3.linear.SymmLQ$State.betaEqualsZero()Z
org.apache.commons.math3.linear.SymmLQ$State.getNormOfResidual()D
org.apache.commons.math3.linear.SymmLQ$State.hasConverged()Z
org.apache.commons.math3.linear.SymmLQ$State.init()V
org.apache.commons.math3.linear.SymmLQ$State.refineSolution(Lorg/apache/commons/math3/linear/RealVector;)V
org.apache.commons.math3.linear.SymmLQ$State.update()V
org.apache.commons.math3.linear.SymmLQ$State.updateNorms()V
org.apache.commons.math3.linear.SymmLQ.getCheck()Z
org.apache.commons.math3.linear.SymmLQ.solve(Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.SymmLQ.solve(Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.SymmLQ.solve(Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealVector;ZD)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.SymmLQ.solve(Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.SymmLQ.solve(Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.SymmLQ.solve(Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealVector;ZD)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.SymmLQ.solveInPlace(Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.SymmLQ.solveInPlace(Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;ZD)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.SymmLQ.solveInPlace(Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.linear.TriDiagonalTransformer.getHouseholderVectorsRef()[[D
org.apache.commons.math3.linear.TriDiagonalTransformer.getMainDiagonalRef()[D
org.apache.commons.math3.linear.TriDiagonalTransformer.getQ()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.TriDiagonalTransformer.getQT()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.TriDiagonalTransformer.getSecondaryDiagonalRef()[D
org.apache.commons.math3.linear.TriDiagonalTransformer.getT()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.linear.TriDiagonalTransformer.transform()V
org.apache.commons.math3.ml.clustering.CentroidCluster.getCenter()Lorg/apache/commons/math3/ml/clustering/Clusterable;
org.apache.commons.math3.ml.clustering.Cluster.addPoint(Lorg/apache/commons/math3/ml/clustering/Clusterable;)V
org.apache.commons.math3.ml.clustering.Cluster.getPoints()Ljava/util/List;
org.apache.commons.math3.ml.clustering.Clusterer.distance(Lorg/apache/commons/math3/ml/clustering/Clusterable;Lorg/apache/commons/math3/ml/clustering/Clusterable;)D
org.apache.commons.math3.ml.clustering.Clusterer.getDistanceMeasure()Lorg/apache/commons/math3/ml/distance/DistanceMeasure;
org.apache.commons.math3.ml.clustering.DBSCANClusterer$PointStatus.valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/ml/clustering/DBSCANClusterer$PointStatus;
org.apache.commons.math3.ml.clustering.DBSCANClusterer$PointStatus.values()[Lorg/apache/commons/math3/ml/clustering/DBSCANClusterer$PointStatus;
org.apache.commons.math3.ml.clustering.DBSCANClusterer.cluster(Ljava/util/Collection;)Ljava/util/List;
org.apache.commons.math3.ml.clustering.DBSCANClusterer.expandCluster(Lorg/apache/commons/math3/ml/clustering/Cluster;Lorg/apache/commons/math3/ml/clustering/Clusterable;Ljava/util/List;Ljava/util/Collection;Ljava/util/Map;)Lorg/apache/commons/math3/ml/clustering/Cluster;
org.apache.commons.math3.ml.clustering.DBSCANClusterer.getEps()D
org.apache.commons.math3.ml.clustering.DBSCANClusterer.getMinPts()I
org.apache.commons.math3.ml.clustering.DBSCANClusterer.getNeighbors(Lorg/apache/commons/math3/ml/clustering/Clusterable;Ljava/util/Collection;)Ljava/util/List;
org.apache.commons.math3.ml.clustering.DBSCANClusterer.merge(Ljava/util/List;Ljava/util/List;)Ljava/util/List;
org.apache.commons.math3.ml.clustering.DoublePoint.equals(Ljava/lang/Object;)Z
org.apache.commons.math3.ml.clustering.DoublePoint.getPoint()[D
org.apache.commons.math3.ml.clustering.DoublePoint.hashCode()I
org.apache.commons.math3.ml.clustering.DoublePoint.toString()Ljava/lang/String;
org.apache.commons.math3.ml.clustering.FuzzyKMeansClusterer.calculateMaxMembershipChange([[D)D
org.apache.commons.math3.ml.clustering.FuzzyKMeansClusterer.cluster(Ljava/util/Collection;)Ljava/util/List;
org.apache.commons.math3.ml.clustering.FuzzyKMeansClusterer.getClusters()Ljava/util/List;
org.apache.commons.math3.ml.clustering.FuzzyKMeansClusterer.getDataPoints()Ljava/util/List;
org.apache.commons.math3.ml.clustering.FuzzyKMeansClusterer.getEpsilon()D
org.apache.commons.math3.ml.clustering.FuzzyKMeansClusterer.getFuzziness()D
org.apache.commons.math3.ml.clustering.FuzzyKMeansClusterer.getK()I
org.apache.commons.math3.ml.clustering.FuzzyKMeansClusterer.getMaxIterations()I
org.apache.commons.math3.ml.clustering.FuzzyKMeansClusterer.getMembershipMatrix()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.ml.clustering.FuzzyKMeansClusterer.getObjectiveFunctionValue()D
org.apache.commons.math3.ml.clustering.FuzzyKMeansClusterer.getRandomGenerator()Lorg/apache/commons/math3/random/RandomGenerator;
org.apache.commons.math3.ml.clustering.FuzzyKMeansClusterer.initializeMembershipMatrix()V
org.apache.commons.math3.ml.clustering.FuzzyKMeansClusterer.saveMembershipMatrix([[D)V
org.apache.commons.math3.ml.clustering.FuzzyKMeansClusterer.updateClusterCenters()V
org.apache.commons.math3.ml.clustering.FuzzyKMeansClusterer.updateMembershipMatrix()V
org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy.valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer$EmptyClusterStrategy;
org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy.values()[Lorg/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer$EmptyClusterStrategy;
org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer.assignPointsToClusters(Ljava/util/List;Ljava/util/Collection;[I)I
org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer.centroidOf(Ljava/util/Collection;I)Lorg/apache/commons/math3/ml/clustering/Clusterable;
org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer.chooseInitialCenters(Ljava/util/Collection;)Ljava/util/List;
org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer.cluster(Ljava/util/Collection;)Ljava/util/List;
org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer.getEmptyClusterStrategy()Lorg/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer$EmptyClusterStrategy;
org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer.getFarthestPoint(Ljava/util/Collection;)Lorg/apache/commons/math3/ml/clustering/Clusterable;
org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer.getK()I
org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer.getMaxIterations()I
org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer.getNearestCluster(Ljava/util/Collection;Lorg/apache/commons/math3/ml/clustering/Clusterable;)I
org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer.getPointFromLargestNumberCluster(Ljava/util/Collection;)Lorg/apache/commons/math3/ml/clustering/Clusterable;
org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer.getPointFromLargestVarianceCluster(Ljava/util/Collection;)Lorg/apache/commons/math3/ml/clustering/Clusterable;
org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer.getRandomGenerator()Lorg/apache/commons/math3/random/RandomGenerator;
org.apache.commons.math3.ml.clustering.MultiKMeansPlusPlusClusterer.cluster(Ljava/util/Collection;)Ljava/util/List;
org.apache.commons.math3.ml.clustering.MultiKMeansPlusPlusClusterer.getClusterEvaluator()Lorg/apache/commons/math3/ml/clustering/evaluation/ClusterEvaluator;
org.apache.commons.math3.ml.clustering.MultiKMeansPlusPlusClusterer.getClusterer()Lorg/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer;
org.apache.commons.math3.ml.clustering.MultiKMeansPlusPlusClusterer.getNumTrials()I
org.apache.commons.math3.ml.clustering.evaluation.ClusterEvaluator.centroidOf(Lorg/apache/commons/math3/ml/clustering/Cluster;)Lorg/apache/commons/math3/ml/clustering/Clusterable;
org.apache.commons.math3.ml.clustering.evaluation.ClusterEvaluator.distance(Lorg/apache/commons/math3/ml/clustering/Clusterable;Lorg/apache/commons/math3/ml/clustering/Clusterable;)D
org.apache.commons.math3.ml.clustering.evaluation.SumOfClusterVariances.score(Ljava/util/List;)D
org.apache.commons.math3.ml.distance.CanberraDistance.compute([D[D)D
org.apache.commons.math3.ml.distance.ChebyshevDistance.compute([D[D)D
org.apache.commons.math3.ml.distance.EarthMoversDistance.compute([D[D)D
org.apache.commons.math3.ml.distance.EuclideanDistance.compute([D[D)D
org.apache.commons.math3.ml.distance.ManhattanDistance.compute([D[D)D
org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory$1.value()D
org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory$2.value()D
org.apache.commons.math3.ml.neuralnet.MapUtils$PairNeuronDouble$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I
org.apache.commons.math3.ml.neuralnet.MapUtils$PairNeuronDouble$1.compare(Lorg/apache/commons/math3/ml/neuralnet/MapUtils$PairNeuronDouble;Lorg/apache/commons/math3/ml/neuralnet/MapUtils$PairNeuronDouble;)I
org.apache.commons.math3.ml.neuralnet.MapUtils$PairNeuronDouble.access$000(Lorg/apache/commons/math3/ml/neuralnet/MapUtils$PairNeuronDouble;)D
org.apache.commons.math3.ml.neuralnet.MapUtils$PairNeuronDouble.getNeuron()Lorg/apache/commons/math3/ml/neuralnet/Neuron;
org.apache.commons.math3.ml.neuralnet.MapUtils.computeU(Lorg/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D;Lorg/apache/commons/math3/ml/distance/DistanceMeasure;)[[D
org.apache.commons.math3.ml.neuralnet.MapUtils.findBest([DLjava/lang/Iterable;Lorg/apache/commons/math3/ml/distance/DistanceMeasure;)Lorg/apache/commons/math3/ml/neuralnet/Neuron;
org.apache.commons.math3.ml.neuralnet.MapUtils.findBestAndSecondBest([DLjava/lang/Iterable;Lorg/apache/commons/math3/ml/distance/DistanceMeasure;)Lorg/apache/commons/math3/util/Pair;
org.apache.commons.math3.ml.neuralnet.MapUtils.sort([DLjava/lang/Iterable;Lorg/apache/commons/math3/ml/distance/DistanceMeasure;)[Lorg/apache/commons/math3/ml/neuralnet/Neuron;
org.apache.commons.math3.ml.neuralnet.Network$NeuronIdentifierComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I
org.apache.commons.math3.ml.neuralnet.Network$NeuronIdentifierComparator.compare(Lorg/apache/commons/math3/ml/neuralnet/Neuron;Lorg/apache/commons/math3/ml/neuralnet/Neuron;)I
org.apache.commons.math3.ml.neuralnet.Network$SerializationProxy.readResolve()Ljava/lang/Object;
org.apache.commons.math3.ml.neuralnet.Network.addLink(Lorg/apache/commons/math3/ml/neuralnet/Neuron;Lorg/apache/commons/math3/ml/neuralnet/Neuron;)V
org.apache.commons.math3.ml.neuralnet.Network.addLinkToLinkSet(Ljava/util/Set;J)V
org.apache.commons.math3.ml.neuralnet.Network.copy()Lorg/apache/commons/math3/ml/neuralnet/Network;
org.apache.commons.math3.ml.neuralnet.Network.createNeuron([D)J
org.apache.commons.math3.ml.neuralnet.Network.createNextId()Ljava/lang/Long;
org.apache.commons.math3.ml.neuralnet.Network.deleteLink(Lorg/apache/commons/math3/ml/neuralnet/Neuron;Lorg/apache/commons/math3/ml/neuralnet/Neuron;)V
org.apache.commons.math3.ml.neuralnet.Network.deleteLinkFromLinkSet(Ljava/util/Set;J)V
org.apache.commons.math3.ml.neuralnet.Network.deleteNeuron(Lorg/apache/commons/math3/ml/neuralnet/Neuron;)V
org.apache.commons.math3.ml.neuralnet.Network.getFeaturesSize()I
org.apache.commons.math3.ml.neuralnet.Network.getNeighbours(Ljava/lang/Iterable;)Ljava/util/Collection;
org.apache.commons.math3.ml.neuralnet.Network.getNeighbours(Ljava/lang/Iterable;Ljava/lang/Iterable;)Ljava/util/Collection;
org.apache.commons.math3.ml.neuralnet.Network.getNeighbours(Lorg/apache/commons/math3/ml/neuralnet/Neuron;)Ljava/util/Collection;
org.apache.commons.math3.ml.neuralnet.Network.getNeighbours(Lorg/apache/commons/math3/ml/neuralnet/Neuron;Ljava/lang/Iterable;)Ljava/util/Collection;
org.apache.commons.math3.ml.neuralnet.Network.getNeuron(J)Lorg/apache/commons/math3/ml/neuralnet/Neuron;
org.apache.commons.math3.ml.neuralnet.Network.getNeurons(Ljava/util/Comparator;)Ljava/util/Collection;
org.apache.commons.math3.ml.neuralnet.Network.iterator()Ljava/util/Iterator;
org.apache.commons.math3.ml.neuralnet.Network.readObject(Ljava/io/ObjectInputStream;)V
org.apache.commons.math3.ml.neuralnet.Network.writeReplace()Ljava/lang/Object;
org.apache.commons.math3.ml.neuralnet.Neuron$SerializationProxy.readResolve()Ljava/lang/Object;
org.apache.commons.math3.ml.neuralnet.Neuron.compareAndSetFeatures([D[D)Z
org.apache.commons.math3.ml.neuralnet.Neuron.containSameValues([D[D)Z
org.apache.commons.math3.ml.neuralnet.Neuron.copy()Lorg/apache/commons/math3/ml/neuralnet/Neuron;
org.apache.commons.math3.ml.neuralnet.Neuron.getFeatures()[D
org.apache.commons.math3.ml.neuralnet.Neuron.getIdentifier()J
org.apache.commons.math3.ml.neuralnet.Neuron.getNumberOfAttemptedUpdates()J
org.apache.commons.math3.ml.neuralnet.Neuron.getNumberOfSuccessfulUpdates()J
org.apache.commons.math3.ml.neuralnet.Neuron.getSize()I
org.apache.commons.math3.ml.neuralnet.Neuron.readObject(Ljava/io/ObjectInputStream;)V
org.apache.commons.math3.ml.neuralnet.Neuron.writeReplace()Ljava/lang/Object;
org.apache.commons.math3.ml.neuralnet.SquareNeighbourhood.valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/ml/neuralnet/SquareNeighbourhood;
org.apache.commons.math3.ml.neuralnet.SquareNeighbourhood.values()[Lorg/apache/commons/math3/ml/neuralnet/SquareNeighbourhood;
org.apache.commons.math3.ml.neuralnet.oned.NeuronString$SerializationProxy.readResolve()Ljava/lang/Object;
org.apache.commons.math3.ml.neuralnet.oned.NeuronString.createLinks()V
org.apache.commons.math3.ml.neuralnet.oned.NeuronString.getFeatures(I)[D
org.apache.commons.math3.ml.neuralnet.oned.NeuronString.getNetwork()Lorg/apache/commons/math3/ml/neuralnet/Network;
org.apache.commons.math3.ml.neuralnet.oned.NeuronString.getSize()I
org.apache.commons.math3.ml.neuralnet.oned.NeuronString.readObject(Ljava/io/ObjectInputStream;)V
org.apache.commons.math3.ml.neuralnet.oned.NeuronString.writeReplace()Ljava/lang/Object;
org.apache.commons.math3.ml.neuralnet.sofm.KohonenTrainingTask.run()V
org.apache.commons.math3.ml.neuralnet.sofm.KohonenUpdateAction.attemptNeuronUpdate(Lorg/apache/commons/math3/ml/neuralnet/Neuron;[DD)Z
org.apache.commons.math3.ml.neuralnet.sofm.KohonenUpdateAction.computeFeatures([D[DD)[D
org.apache.commons.math3.ml.neuralnet.sofm.KohonenUpdateAction.findAndUpdateBestNeuron(Lorg/apache/commons/math3/ml/neuralnet/Network;[DD)Lorg/apache/commons/math3/ml/neuralnet/Neuron;
org.apache.commons.math3.ml.neuralnet.sofm.KohonenUpdateAction.getNumberOfCalls()J
org.apache.commons.math3.ml.neuralnet.sofm.KohonenUpdateAction.update(Lorg/apache/commons/math3/ml/neuralnet/Network;[D)V
org.apache.commons.math3.ml.neuralnet.sofm.KohonenUpdateAction.updateNeighbouringNeuron(Lorg/apache/commons/math3/ml/neuralnet/Neuron;[DD)V
org.apache.commons.math3.ml.neuralnet.sofm.LearningFactorFunctionFactory$1.value(J)D
org.apache.commons.math3.ml.neuralnet.sofm.LearningFactorFunctionFactory$2.value(J)D
org.apache.commons.math3.ml.neuralnet.sofm.NeighbourhoodSizeFunctionFactory$1.value(J)I
org.apache.commons.math3.ml.neuralnet.sofm.NeighbourhoodSizeFunctionFactory$2.value(J)I
org.apache.commons.math3.ml.neuralnet.sofm.util.ExponentialDecayFunction.value(J)D
org.apache.commons.math3.ml.neuralnet.sofm.util.QuasiSigmoidDecayFunction.value(J)D
org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$HorizontalDirection.valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D$HorizontalDirection;
org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$HorizontalDirection.values()[Lorg/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D$HorizontalDirection;
org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$SerializationProxy.readResolve()Ljava/lang/Object;
org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$VerticalDirection.valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D$VerticalDirection;
org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$VerticalDirection.values()[Lorg/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D$VerticalDirection;
org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D.copy()Lorg/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D;
org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D.createLinks()V
org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D.getLocation(IILorg/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D$HorizontalDirection;Lorg/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D$VerticalDirection;)[I
org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D.getNetwork()Lorg/apache/commons/math3/ml/neuralnet/Network;
org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D.getNeuron(II)Lorg/apache/commons/math3/ml/neuralnet/Neuron;
org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D.getNeuron(IILorg/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D$HorizontalDirection;Lorg/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D$VerticalDirection;)Lorg/apache/commons/math3/ml/neuralnet/Neuron;
org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D.getNumberOfColumns()I
org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D.getNumberOfRows()I
org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D.iterator()Ljava/util/Iterator;
org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D.readObject(Ljava/io/ObjectInputStream;)V
org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D.writeReplace()Ljava/lang/Object;
org.apache.commons.math3.ml.neuralnet.twod.util.HitHistogram.computeImage(Lorg/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D;Ljava/lang/Iterable;)[[D
org.apache.commons.math3.ml.neuralnet.twod.util.LocationFinder$Location.getColumn()I
org.apache.commons.math3.ml.neuralnet.twod.util.LocationFinder$Location.getRow()I
org.apache.commons.math3.ml.neuralnet.twod.util.LocationFinder.getLocation(Lorg/apache/commons/math3/ml/neuralnet/Neuron;)Lorg/apache/commons/math3/ml/neuralnet/twod/util/LocationFinder$Location;
org.apache.commons.math3.ml.neuralnet.twod.util.QuantizationError.computeImage(Lorg/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D;Ljava/lang/Iterable;)[[D
org.apache.commons.math3.ml.neuralnet.twod.util.SmoothedDataHistogram.computeImage(Lorg/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D;Ljava/lang/Iterable;)[[D
org.apache.commons.math3.ml.neuralnet.twod.util.TopographicErrorHistogram.computeImage(Lorg/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D;Ljava/lang/Iterable;)[[D
org.apache.commons.math3.ml.neuralnet.twod.util.UnifiedDistanceMatrix.averageDistances(Lorg/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D;)[[D
org.apache.commons.math3.ml.neuralnet.twod.util.UnifiedDistanceMatrix.computeImage(Lorg/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D;)[[D
org.apache.commons.math3.ml.neuralnet.twod.util.UnifiedDistanceMatrix.individualDistances(Lorg/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D;)[[D
org.apache.commons.math3.ode.AbstractFieldIntegrator$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I
org.apache.commons.math3.ode.AbstractFieldIntegrator$1.compare(Lorg/apache/commons/math3/ode/events/FieldEventState;Lorg/apache/commons/math3/ode/events/FieldEventState;)I
org.apache.commons.math3.ode.AbstractFieldIntegrator.acceptStep(Lorg/apache/commons/math3/ode/sampling/AbstractFieldStepInterpolator;Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;
org.apache.commons.math3.ode.AbstractFieldIntegrator.computeDerivatives(Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;)[Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.AbstractFieldIntegrator.getEvaluationsCounter()Lorg/apache/commons/math3/util/IntegerSequence$Incrementor;
org.apache.commons.math3.ode.AbstractFieldIntegrator.getField()Lorg/apache/commons/math3/Field;
org.apache.commons.math3.ode.AbstractFieldIntegrator.getStepSize()Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.AbstractFieldIntegrator.getStepStart()Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;
org.apache.commons.math3.ode.AbstractFieldIntegrator.initIntegration(Lorg/apache/commons/math3/ode/FieldExpandableODE;Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;
org.apache.commons.math3.ode.AbstractFieldIntegrator.isLastStep()Z
org.apache.commons.math3.ode.AbstractFieldIntegrator.resetOccurred()Z
org.apache.commons.math3.ode.AbstractFieldIntegrator.sanityChecks(Lorg/apache/commons/math3/ode/FieldODEState;Lorg/apache/commons/math3/RealFieldElement;)V
org.apache.commons.math3.ode.AbstractFieldIntegrator.setIsLastStep(Z)V
org.apache.commons.math3.ode.AbstractFieldIntegrator.setStateInitialized(Z)V
org.apache.commons.math3.ode.AbstractFieldIntegrator.setStepSize(Lorg/apache/commons/math3/RealFieldElement;)V
org.apache.commons.math3.ode.AbstractFieldIntegrator.setStepStart(Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;)V
org.apache.commons.math3.ode.AbstractIntegrator$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I
org.apache.commons.math3.ode.AbstractIntegrator$1.compare(Lorg/apache/commons/math3/ode/events/EventState;Lorg/apache/commons/math3/ode/events/EventState;)I
org.apache.commons.math3.ode.AbstractIntegrator.acceptStep(Lorg/apache/commons/math3/ode/sampling/AbstractStepInterpolator;[D[DD)D
org.apache.commons.math3.ode.AbstractIntegrator.addEventHandler(Lorg/apache/commons/math3/ode/events/EventHandler;DDILorg/apache/commons/math3/analysis/solvers/UnivariateSolver;)V
org.apache.commons.math3.ode.AbstractIntegrator.addStepHandler(Lorg/apache/commons/math3/ode/sampling/StepHandler;)V
org.apache.commons.math3.ode.AbstractIntegrator.computeDerivatives(D[D[D)V
org.apache.commons.math3.ode.AbstractIntegrator.getCounter()Lorg/apache/commons/math3/util/IntegerSequence$Incrementor;
org.apache.commons.math3.ode.AbstractIntegrator.getExpandable()Lorg/apache/commons/math3/ode/ExpandableStatefulODE;
org.apache.commons.math3.ode.AbstractIntegrator.initIntegration(D[DD)V
org.apache.commons.math3.ode.AbstractIntegrator.sanityChecks(Lorg/apache/commons/math3/ode/ExpandableStatefulODE;D)V
org.apache.commons.math3.ode.AbstractIntegrator.setEquations(Lorg/apache/commons/math3/ode/ExpandableStatefulODE;)V
org.apache.commons.math3.ode.AbstractIntegrator.setStateInitialized(Z)V
org.apache.commons.math3.ode.ContinuousOutputFieldModel.append(Lorg/apache/commons/math3/ode/ContinuousOutputFieldModel;)V
org.apache.commons.math3.ode.ContinuousOutputFieldModel.checkDimensionsEquality(II)V
org.apache.commons.math3.ode.ContinuousOutputFieldModel.getFinalTime()Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.ContinuousOutputFieldModel.getInitialTime()Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.ContinuousOutputFieldModel.getInterpolatedState(Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;
org.apache.commons.math3.ode.ContinuousOutputFieldModel.handleStep(Lorg/apache/commons/math3/ode/sampling/FieldStepInterpolator;Z)V
org.apache.commons.math3.ode.ContinuousOutputFieldModel.init(Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/RealFieldElement;)V
org.apache.commons.math3.ode.ContinuousOutputFieldModel.locatePoint(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/sampling/FieldStepInterpolator;)I
org.apache.commons.math3.ode.ContinuousOutputModel.append(Lorg/apache/commons/math3/ode/ContinuousOutputModel;)V
org.apache.commons.math3.ode.ContinuousOutputModel.getFinalTime()D
org.apache.commons.math3.ode.ContinuousOutputModel.getInitialTime()D
org.apache.commons.math3.ode.ContinuousOutputModel.getInterpolatedDerivatives()[D
org.apache.commons.math3.ode.ContinuousOutputModel.getInterpolatedSecondaryDerivatives(I)[D
org.apache.commons.math3.ode.ContinuousOutputModel.getInterpolatedSecondaryState(I)[D
org.apache.commons.math3.ode.ContinuousOutputModel.getInterpolatedState()[D
org.apache.commons.math3.ode.ContinuousOutputModel.getInterpolatedTime()D
org.apache.commons.math3.ode.ContinuousOutputModel.handleStep(Lorg/apache/commons/math3/ode/sampling/StepInterpolator;Z)V
org.apache.commons.math3.ode.ContinuousOutputModel.init(D[DD)V
org.apache.commons.math3.ode.ContinuousOutputModel.locatePoint(DLorg/apache/commons/math3/ode/sampling/StepInterpolator;)I
org.apache.commons.math3.ode.ContinuousOutputModel.setInterpolatedTime(D)V
org.apache.commons.math3.ode.EquationsMapper.extractEquationData([D[D)V
org.apache.commons.math3.ode.EquationsMapper.getDimension()I
org.apache.commons.math3.ode.EquationsMapper.getFirstIndex()I
org.apache.commons.math3.ode.EquationsMapper.insertEquationData([D[D)V
org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent.access$000(Lorg/apache/commons/math3/ode/ExpandableStatefulODE$SecondaryComponent;)Lorg/apache/commons/math3/ode/EquationsMapper;
org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent.access$100(Lorg/apache/commons/math3/ode/ExpandableStatefulODE$SecondaryComponent;)[D
org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent.access$200(Lorg/apache/commons/math3/ode/ExpandableStatefulODE$SecondaryComponent;)[D
org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent.access$300(Lorg/apache/commons/math3/ode/ExpandableStatefulODE$SecondaryComponent;)Lorg/apache/commons/math3/ode/SecondaryEquations;
org.apache.commons.math3.ode.ExpandableStatefulODE.addSecondaryEquations(Lorg/apache/commons/math3/ode/SecondaryEquations;)I
org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(D[D[D)V
org.apache.commons.math3.ode.ExpandableStatefulODE.getCompleteState()[D
org.apache.commons.math3.ode.ExpandableStatefulODE.getPrimary()Lorg/apache/commons/math3/ode/FirstOrderDifferentialEquations;
org.apache.commons.math3.ode.ExpandableStatefulODE.getPrimaryMapper()Lorg/apache/commons/math3/ode/EquationsMapper;
org.apache.commons.math3.ode.ExpandableStatefulODE.getPrimaryState()[D
org.apache.commons.math3.ode.ExpandableStatefulODE.getPrimaryStateDot()[D
org.apache.commons.math3.ode.ExpandableStatefulODE.getSecondaryMappers()[Lorg/apache/commons/math3/ode/EquationsMapper;
org.apache.commons.math3.ode.ExpandableStatefulODE.getSecondaryState(I)[D
org.apache.commons.math3.ode.ExpandableStatefulODE.getSecondaryStateDot(I)[D
org.apache.commons.math3.ode.ExpandableStatefulODE.getTime()D
org.apache.commons.math3.ode.ExpandableStatefulODE.getTotalDimension()I
org.apache.commons.math3.ode.ExpandableStatefulODE.setCompleteState([D)V
org.apache.commons.math3.ode.ExpandableStatefulODE.setPrimaryState([D)V
org.apache.commons.math3.ode.ExpandableStatefulODE.setSecondaryState(I[D)V
org.apache.commons.math3.ode.ExpandableStatefulODE.setTime(D)V
org.apache.commons.math3.ode.FieldEquationsMapper.checkIndex(I)V
org.apache.commons.math3.ode.FieldEquationsMapper.extractEquationData(I[Lorg/apache/commons/math3/RealFieldElement;)[Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.FieldEquationsMapper.getNumberOfEquations()I
org.apache.commons.math3.ode.FieldEquationsMapper.getTotalDimension()I
org.apache.commons.math3.ode.FieldEquationsMapper.insertEquationData(I[Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;)V
org.apache.commons.math3.ode.FieldEquationsMapper.mapDerivative(Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;)[Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.FieldEquationsMapper.mapState(Lorg/apache/commons/math3/ode/FieldODEState;)[Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.FieldEquationsMapper.mapStateAndDerivative(Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;
org.apache.commons.math3.ode.FieldExpandableODE.addSecondaryEquations(Lorg/apache/commons/math3/ode/FieldSecondaryEquations;)I
org.apache.commons.math3.ode.FieldExpandableODE.computeDerivatives(Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;)[Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.FieldExpandableODE.getMapper()Lorg/apache/commons/math3/ode/FieldEquationsMapper;
org.apache.commons.math3.ode.FieldExpandableODE.init(Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)V
org.apache.commons.math3.ode.FieldODEState.copy(Lorg/apache/commons/math3/Field;[[Lorg/apache/commons/math3/RealFieldElement;)[[Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.FieldODEState.getNumberOfSecondaryStates()I
org.apache.commons.math3.ode.FieldODEState.getSecondaryState(I)[Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.FieldODEState.getSecondaryStateDimension(I)I
org.apache.commons.math3.ode.FieldODEState.getState()[Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.FieldODEState.getStateDimension()I
org.apache.commons.math3.ode.FieldODEState.getTime()Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.FieldODEStateAndDerivative.getDerivative()[Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.FieldODEStateAndDerivative.getSecondaryDerivative(I)[Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.FirstOrderConverter.computeDerivatives(D[D[D)V
org.apache.commons.math3.ode.FirstOrderConverter.getDimension()I
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(D[D[D[D[D)V
org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.getDimension()I
org.apache.commons.math3.ode.JacobianMatrices$MainStateJacobianWrapper.access$000(Lorg/apache/commons/math3/ode/JacobianMatrices$MainStateJacobianWrapper;)Lorg/apache/commons/math3/ode/FirstOrderDifferentialEquations;
org.apache.commons.math3.ode.JacobianMatrices$MainStateJacobianWrapper.computeDerivatives(D[D[D)V
org.apache.commons.math3.ode.JacobianMatrices$MainStateJacobianWrapper.computeMainStateJacobian(D[D[D[[D)V
org.apache.commons.math3.ode.JacobianMatrices$MainStateJacobianWrapper.getDimension()I
org.apache.commons.math3.ode.JacobianMatrices.access$200(Lorg/apache/commons/math3/ode/JacobianMatrices;)I
org.apache.commons.math3.ode.JacobianMatrices.access$300(Lorg/apache/commons/math3/ode/JacobianMatrices;)I
org.apache.commons.math3.ode.JacobianMatrices.access$400(Lorg/apache/commons/math3/ode/JacobianMatrices;)Z
org.apache.commons.math3.ode.JacobianMatrices.access$402(Lorg/apache/commons/math3/ode/JacobianMatrices;Z)Z
org.apache.commons.math3.ode.JacobianMatrices.access$500(Lorg/apache/commons/math3/ode/JacobianMatrices;)Lorg/apache/commons/math3/ode/MainStateJacobianProvider;
org.apache.commons.math3.ode.JacobianMatrices.access$600(Lorg/apache/commons/math3/ode/JacobianMatrices;)Lorg/apache/commons/math3/ode/ParameterizedODE;
org.apache.commons.math3.ode.JacobianMatrices.access$700(Lorg/apache/commons/math3/ode/JacobianMatrices;)[Lorg/apache/commons/math3/ode/ParameterConfiguration;
org.apache.commons.math3.ode.JacobianMatrices.access$800(Lorg/apache/commons/math3/ode/JacobianMatrices;)Ljava/util/List;
org.apache.commons.math3.ode.JacobianMatrices.addParameterJacobianProvider(Lorg/apache/commons/math3/ode/ParameterJacobianProvider;)V
org.apache.commons.math3.ode.JacobianMatrices.checkDimension(ILjava/lang/Object;)V
org.apache.commons.math3.ode.JacobianMatrices.getCurrentMainSetJacobian([[D)V
org.apache.commons.math3.ode.JacobianMatrices.getCurrentParameterJacobian(Ljava/lang/String;[D)V
org.apache.commons.math3.ode.JacobianMatrices.registerVariationalEquations(Lorg/apache/commons/math3/ode/ExpandableStatefulODE;)V
org.apache.commons.math3.ode.JacobianMatrices.setInitialMainStateJacobian([[D)V
org.apache.commons.math3.ode.JacobianMatrices.setInitialParameterJacobian(Ljava/lang/String;[D)V
org.apache.commons.math3.ode.JacobianMatrices.setParameterStep(Ljava/lang/String;D)V
org.apache.commons.math3.ode.JacobianMatrices.setParameterizedODE(Lorg/apache/commons/math3/ode/ParameterizedODE;)V
org.apache.commons.math3.ode.MultistepFieldIntegrator$FieldNordsieckInitializer.handleStep(Lorg/apache/commons/math3/ode/sampling/FieldStepInterpolator;Z)V
org.apache.commons.math3.ode.MultistepFieldIntegrator$FieldNordsieckInitializer.init(Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/RealFieldElement;)V
org.apache.commons.math3.ode.MultistepFieldIntegrator.computeStepGrowShrinkFactor(Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.MultistepFieldIntegrator.rescale(Lorg/apache/commons/math3/RealFieldElement;)V
org.apache.commons.math3.ode.MultistepFieldIntegrator.setMaxGrowth(D)V
org.apache.commons.math3.ode.MultistepFieldIntegrator.setMinReduction(D)V
org.apache.commons.math3.ode.MultistepFieldIntegrator.setSafety(D)V
org.apache.commons.math3.ode.MultistepFieldIntegrator.start(Lorg/apache/commons/math3/ode/FieldExpandableODE;Lorg/apache/commons/math3/ode/FieldODEState;Lorg/apache/commons/math3/RealFieldElement;)V
org.apache.commons.math3.ode.MultistepIntegrator$1.computeDerivatives(D[D[D)V
org.apache.commons.math3.ode.MultistepIntegrator$1.getDimension()I
org.apache.commons.math3.ode.MultistepIntegrator$NordsieckInitializer.handleStep(Lorg/apache/commons/math3/ode/sampling/StepInterpolator;Z)V
org.apache.commons.math3.ode.MultistepIntegrator$NordsieckInitializer.init(D[DD)V
org.apache.commons.math3.ode.MultistepIntegrator.computeStepGrowShrinkFactor(D)D
org.apache.commons.math3.ode.MultistepIntegrator.setMaxGrowth(D)V
org.apache.commons.math3.ode.MultistepIntegrator.setMinReduction(D)V
org.apache.commons.math3.ode.MultistepIntegrator.setSafety(D)V
org.apache.commons.math3.ode.MultistepIntegrator.start(D[DD)V
org.apache.commons.math3.ode.ParameterConfiguration.getHP()D
org.apache.commons.math3.ode.ParameterConfiguration.getParameterName()Ljava/lang/String;
org.apache.commons.math3.ode.ParameterConfiguration.setHP(D)V
org.apache.commons.math3.ode.ParameterJacobianWrapper.computeParameterJacobian(D[D[DLjava/lang/String;[D)V
org.apache.commons.math3.ode.ParameterJacobianWrapper.getParametersNames()Ljava/util/Collection;
org.apache.commons.math3.ode.ParameterJacobianWrapper.isSupported(Ljava/lang/String;)Z
org.apache.commons.math3.ode.ParameterizedWrapper.computeDerivatives(D[D[D)V
org.apache.commons.math3.ode.ParameterizedWrapper.getDimension()I
org.apache.commons.math3.ode.ParameterizedWrapper.getParameter(Ljava/lang/String;)D
org.apache.commons.math3.ode.ParameterizedWrapper.getParametersNames()Ljava/util/Collection;
org.apache.commons.math3.ode.ParameterizedWrapper.isSupported(Ljava/lang/String;)Z
org.apache.commons.math3.ode.ParameterizedWrapper.setParameter(Ljava/lang/String;D)V
org.apache.commons.math3.ode.UnknownParameterException.getName()Ljava/lang/String;
org.apache.commons.math3.ode.events.Action.valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/ode/events/Action;
org.apache.commons.math3.ode.events.Action.values()[Lorg/apache/commons/math3/ode/events/Action;
org.apache.commons.math3.ode.events.EventFilter.eventOccurred(D[DZ)Lorg/apache/commons/math3/ode/events/EventHandler$Action;
org.apache.commons.math3.ode.events.EventFilter.g(D[D)D
org.apache.commons.math3.ode.events.EventFilter.init(D[DD)V
org.apache.commons.math3.ode.events.EventFilter.resetState(D[D)V
org.apache.commons.math3.ode.events.EventHandler$Action.valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/ode/events/EventHandler$Action;
org.apache.commons.math3.ode.events.EventHandler$Action.values()[Lorg/apache/commons/math3/ode/events/EventHandler$Action;
org.apache.commons.math3.ode.events.EventState$1.value(D)D
org.apache.commons.math3.ode.events.EventState$LocalMaxCountExceededException.getException()Lorg/apache/commons/math3/exception/MaxCountExceededException;
org.apache.commons.math3.ode.events.EventState.access$000(Lorg/apache/commons/math3/ode/events/EventState;Lorg/apache/commons/math3/ode/sampling/StepInterpolator;)[D
org.apache.commons.math3.ode.events.EventState.access$100(Lorg/apache/commons/math3/ode/events/EventState;)Lorg/apache/commons/math3/ode/events/EventHandler;
org.apache.commons.math3.ode.events.EventState.evaluateStep(Lorg/apache/commons/math3/ode/sampling/StepInterpolator;)Z
org.apache.commons.math3.ode.events.EventState.getCompleteState(Lorg/apache/commons/math3/ode/sampling/StepInterpolator;)[D
org.apache.commons.math3.ode.events.EventState.getConvergence()D
org.apache.commons.math3.ode.events.EventState.getEventHandler()Lorg/apache/commons/math3/ode/events/EventHandler;
org.apache.commons.math3.ode.events.EventState.getEventTime()D
org.apache.commons.math3.ode.events.EventState.getMaxCheckInterval()D
org.apache.commons.math3.ode.events.EventState.getMaxIterationCount()I
org.apache.commons.math3.ode.events.EventState.reinitializeBegin(Lorg/apache/commons/math3/ode/sampling/StepInterpolator;)V
org.apache.commons.math3.ode.events.EventState.reset(D[D)Z
org.apache.commons.math3.ode.events.EventState.setExpandable(Lorg/apache/commons/math3/ode/ExpandableStatefulODE;)V
org.apache.commons.math3.ode.events.EventState.stepAccepted(D[D)V
org.apache.commons.math3.ode.events.EventState.stop()Z
org.apache.commons.math3.ode.events.FieldEventState$1.value(Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.events.FieldEventState.access$000(Lorg/apache/commons/math3/ode/events/FieldEventState;)Lorg/apache/commons/math3/ode/events/FieldEventHandler;
org.apache.commons.math3.ode.events.FieldEventState.evaluateStep(Lorg/apache/commons/math3/ode/sampling/FieldStepInterpolator;)Z
org.apache.commons.math3.ode.events.FieldEventState.getConvergence()Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.events.FieldEventState.getEventHandler()Lorg/apache/commons/math3/ode/events/FieldEventHandler;
org.apache.commons.math3.ode.events.FieldEventState.getEventTime()Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.events.FieldEventState.getMaxCheckInterval()D
org.apache.commons.math3.ode.events.FieldEventState.getMaxIterationCount()I
org.apache.commons.math3.ode.events.FieldEventState.reinitializeBegin(Lorg/apache/commons/math3/ode/sampling/FieldStepInterpolator;)V
org.apache.commons.math3.ode.events.FieldEventState.reset(Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;)Lorg/apache/commons/math3/ode/FieldODEState;
org.apache.commons.math3.ode.events.FieldEventState.stepAccepted(Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;)V
org.apache.commons.math3.ode.events.FieldEventState.stop()Z
org.apache.commons.math3.ode.events.FilterType$1.getTriggeredIncreasing()Z
org.apache.commons.math3.ode.events.FilterType$1.selectTransformer(Lorg/apache/commons/math3/ode/events/Transformer;DZ)Lorg/apache/commons/math3/ode/events/Transformer;
org.apache.commons.math3.ode.events.FilterType$2.getTriggeredIncreasing()Z
org.apache.commons.math3.ode.events.FilterType$2.selectTransformer(Lorg/apache/commons/math3/ode/events/Transformer;DZ)Lorg/apache/commons/math3/ode/events/Transformer;
org.apache.commons.math3.ode.events.FilterType.valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/ode/events/FilterType;
org.apache.commons.math3.ode.events.FilterType.values()[Lorg/apache/commons/math3/ode/events/FilterType;
org.apache.commons.math3.ode.events.Transformer$1.transformed(D)D
org.apache.commons.math3.ode.events.Transformer$2.transformed(D)D
org.apache.commons.math3.ode.events.Transformer$3.transformed(D)D
org.apache.commons.math3.ode.events.Transformer$4.transformed(D)D
org.apache.commons.math3.ode.events.Transformer$5.transformed(D)D
org.apache.commons.math3.ode.events.Transformer.valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/ode/events/Transformer;
org.apache.commons.math3.ode.events.Transformer.values()[Lorg/apache/commons/math3/ode/events/Transformer;
org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator.errorEstimation([Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/linear/FieldMatrix;)Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator.integrate(Lorg/apache/commons/math3/ode/FieldExpandableODE;Lorg/apache/commons/math3/ode/FieldODEState;Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;
org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegrator.errorEstimation([D[D[DLorg/apache/commons/math3/linear/RealMatrix;)D
org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegrator.integrate(Lorg/apache/commons/math3/ode/ExpandableStatefulODE;D)V
org.apache.commons.math3.ode.nonstiff.AdamsFieldIntegrator.updateHighOrderDerivativesPhase1(Lorg/apache/commons/math3/linear/Array2DRowFieldMatrix;)Lorg/apache/commons/math3/linear/Array2DRowFieldMatrix;
org.apache.commons.math3.ode.nonstiff.AdamsFieldIntegrator.updateHighOrderDerivativesPhase2([Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/linear/Array2DRowFieldMatrix;)V
org.apache.commons.math3.ode.nonstiff.AdamsFieldStepInterpolator.computeInterpolatedStateAndDerivatives(Lorg/apache/commons/math3/ode/FieldEquationsMapper;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;
org.apache.commons.math3.ode.nonstiff.AdamsFieldStepInterpolator.create(ZLorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/AdamsFieldStepInterpolator;
org.apache.commons.math3.ode.nonstiff.AdamsFieldStepInterpolator.create(ZLorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/sampling/AbstractFieldStepInterpolator;
org.apache.commons.math3.ode.nonstiff.AdamsFieldStepInterpolator.taylor(Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/linear/Array2DRowFieldMatrix;)Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;
org.apache.commons.math3.ode.nonstiff.AdamsIntegrator.updateHighOrderDerivativesPhase1(Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;
org.apache.commons.math3.ode.nonstiff.AdamsIntegrator.updateHighOrderDerivativesPhase2([D[DLorg/apache/commons/math3/linear/Array2DRowRealMatrix;)V
org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator$Corrector.end()Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator$Corrector.end()Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator$Corrector.start(IIIIII)V
org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator$Corrector.visit(IILorg/apache/commons/math3/FieldElement;)V
org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator$Corrector.visit(IILorg/apache/commons/math3/RealFieldElement;)V
org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator.integrate(Lorg/apache/commons/math3/ode/FieldExpandableODE;Lorg/apache/commons/math3/ode/FieldODEState;Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;
org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegrator$Corrector.end()D
org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegrator$Corrector.start(IIIIII)V
org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegrator$Corrector.visit(IID)V
org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegrator.integrate(Lorg/apache/commons/math3/ode/ExpandableStatefulODE;D)V
org.apache.commons.math3.ode.nonstiff.AdamsNordsieckFieldTransformer.buildP(I)Lorg/apache/commons/math3/linear/FieldMatrix;
org.apache.commons.math3.ode.nonstiff.AdamsNordsieckFieldTransformer.initializeHighOrderDerivatives(Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;[[Lorg/apache/commons/math3/RealFieldElement;[[Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/linear/Array2DRowFieldMatrix;
org.apache.commons.math3.ode.nonstiff.AdamsNordsieckFieldTransformer.updateHighOrderDerivativesPhase1(Lorg/apache/commons/math3/linear/Array2DRowFieldMatrix;)Lorg/apache/commons/math3/linear/Array2DRowFieldMatrix;
org.apache.commons.math3.ode.nonstiff.AdamsNordsieckFieldTransformer.updateHighOrderDerivativesPhase2([Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/linear/Array2DRowFieldMatrix;)V
org.apache.commons.math3.ode.nonstiff.AdamsNordsieckTransformer.buildP(I)Lorg/apache/commons/math3/linear/FieldMatrix;
org.apache.commons.math3.ode.nonstiff.AdamsNordsieckTransformer.getNSteps()I
org.apache.commons.math3.ode.nonstiff.AdamsNordsieckTransformer.initializeHighOrderDerivatives(D[D[[D[[D)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;
org.apache.commons.math3.ode.nonstiff.AdamsNordsieckTransformer.updateHighOrderDerivativesPhase1(Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;
org.apache.commons.math3.ode.nonstiff.AdamsNordsieckTransformer.updateHighOrderDerivativesPhase2([D[DLorg/apache/commons/math3/linear/Array2DRowRealMatrix;)V
org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator.filterStep(Lorg/apache/commons/math3/RealFieldElement;ZZ)Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator.resetInternalState()V
org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator.sanityChecks(Lorg/apache/commons/math3/ode/FieldODEState;Lorg/apache/commons/math3/RealFieldElement;)V
org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator.setStepSizeControl(DDDD)V
org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator.setStepSizeControl(DD[D[D)V
org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator.filterStep(DZZ)D
org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator.getMaxStep()D
org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator.getMinStep()D
org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator.initializeStep(ZI[DD[D[D[D[D)D
org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator.resetInternalState()V
org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator.sanityChecks(Lorg/apache/commons/math3/ode/ExpandableStatefulODE;D)V
org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator.setStepSizeControl(DDDD)V
org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator.setStepSizeControl(DD[D[D)V
org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaFieldIntegrator.createInterpolator(Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/ClassicalRungeKuttaFieldStepInterpolator;
org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaFieldIntegrator.createInterpolator(Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/RungeKuttaFieldStepInterpolator;
org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaFieldIntegrator.getA()[[Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaFieldIntegrator.getB()[Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaFieldIntegrator.getC()[Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaFieldStepInterpolator.computeInterpolatedStateAndDerivatives(Lorg/apache/commons/math3/ode/FieldEquationsMapper;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;
org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaFieldStepInterpolator.create(Lorg/apache/commons/math3/Field;Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/ClassicalRungeKuttaFieldStepInterpolator;
org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaFieldStepInterpolator.create(Lorg/apache/commons/math3/Field;Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/RungeKuttaFieldStepInterpolator;
org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolator.computeInterpolatedStateAndDerivatives(DD)V
org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolator.doCopy()Lorg/apache/commons/math3/ode/sampling/StepInterpolator;
org.apache.commons.math3.ode.nonstiff.DormandPrince54FieldIntegrator.createInterpolator(Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/DormandPrince54FieldStepInterpolator;
org.apache.commons.math3.ode.nonstiff.DormandPrince54FieldIntegrator.createInterpolator(Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/RungeKuttaFieldStepInterpolator;
org.apache.commons.math3.ode.nonstiff.DormandPrince54FieldIntegrator.estimateError([[Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.nonstiff.DormandPrince54FieldIntegrator.getA()[[Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.nonstiff.DormandPrince54FieldIntegrator.getB()[Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.nonstiff.DormandPrince54FieldIntegrator.getC()[Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.nonstiff.DormandPrince54FieldIntegrator.getOrder()I
org.apache.commons.math3.ode.nonstiff.DormandPrince54FieldStepInterpolator.computeInterpolatedStateAndDerivatives(Lorg/apache/commons/math3/ode/FieldEquationsMapper;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;
org.apache.commons.math3.ode.nonstiff.DormandPrince54FieldStepInterpolator.create(Lorg/apache/commons/math3/Field;Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/DormandPrince54FieldStepInterpolator;
org.apache.commons.math3.ode.nonstiff.DormandPrince54FieldStepInterpolator.create(Lorg/apache/commons/math3/Field;Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/RungeKuttaFieldStepInterpolator;
org.apache.commons.math3.ode.nonstiff.DormandPrince54Integrator.estimateError([[D[D[DD)D
org.apache.commons.math3.ode.nonstiff.DormandPrince54Integrator.getOrder()I
org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator.computeInterpolatedStateAndDerivatives(DD)V
org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator.doCopy()Lorg/apache/commons/math3/ode/sampling/StepInterpolator;
org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator.reinitialize(Lorg/apache/commons/math3/ode/AbstractIntegrator;[D[[DZLorg/apache/commons/math3/ode/EquationsMapper;[Lorg/apache/commons/math3/ode/EquationsMapper;)V
org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator.storeTime(D)V
org.apache.commons.math3.ode.nonstiff.DormandPrince853FieldIntegrator.createInterpolator(Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/DormandPrince853FieldStepInterpolator;
org.apache.commons.math3.ode.nonstiff.DormandPrince853FieldIntegrator.createInterpolator(Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/RungeKuttaFieldStepInterpolator;
org.apache.commons.math3.ode.nonstiff.DormandPrince853FieldIntegrator.estimateError([[Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.nonstiff.DormandPrince853FieldIntegrator.getA()[[Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.nonstiff.DormandPrince853FieldIntegrator.getB()[Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.nonstiff.DormandPrince853FieldIntegrator.getC()[Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.nonstiff.DormandPrince853FieldIntegrator.getOrder()I
org.apache.commons.math3.ode.nonstiff.DormandPrince853FieldStepInterpolator.computeInterpolatedStateAndDerivatives(Lorg/apache/commons/math3/ode/FieldEquationsMapper;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;
org.apache.commons.math3.ode.nonstiff.DormandPrince853FieldStepInterpolator.create(Lorg/apache/commons/math3/Field;Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/DormandPrince853FieldStepInterpolator;
org.apache.commons.math3.ode.nonstiff.DormandPrince853FieldStepInterpolator.create(Lorg/apache/commons/math3/Field;Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/RungeKuttaFieldStepInterpolator;
org.apache.commons.math3.ode.nonstiff.DormandPrince853FieldStepInterpolator.fraction(Lorg/apache/commons/math3/Field;DD)Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator.estimateError([[D[D[DD)D
org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator.getOrder()I
org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator.computeInterpolatedStateAndDerivatives(DD)V
org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator.doCopy()Lorg/apache/commons/math3/ode/sampling/StepInterpolator;
org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator.doFinalize()V
org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator.readExternal(Ljava/io/ObjectInput;)V
org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator.reinitialize(Lorg/apache/commons/math3/ode/AbstractIntegrator;[D[[DZLorg/apache/commons/math3/ode/EquationsMapper;[Lorg/apache/commons/math3/ode/EquationsMapper;)V
org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator.storeTime(D)V
org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator.writeExternal(Ljava/io/ObjectOutput;)V
org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaFieldIntegrator.fraction(DD)Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaFieldIntegrator.fraction(II)Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaFieldIntegrator.setMaxGrowth(Lorg/apache/commons/math3/RealFieldElement;)V
org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaFieldIntegrator.setMinReduction(Lorg/apache/commons/math3/RealFieldElement;)V
org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaFieldIntegrator.setSafety(Lorg/apache/commons/math3/RealFieldElement;)V
org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaIntegrator.setMaxGrowth(D)V
org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaIntegrator.setMinReduction(D)V
org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaIntegrator.setSafety(D)V
org.apache.commons.math3.ode.nonstiff.EulerFieldIntegrator.createInterpolator(Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/EulerFieldStepInterpolator;
org.apache.commons.math3.ode.nonstiff.EulerFieldIntegrator.createInterpolator(Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/RungeKuttaFieldStepInterpolator;
org.apache.commons.math3.ode.nonstiff.EulerFieldIntegrator.getA()[[Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.nonstiff.EulerFieldIntegrator.getB()[Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.nonstiff.EulerFieldIntegrator.getC()[Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.nonstiff.EulerFieldStepInterpolator.computeInterpolatedStateAndDerivatives(Lorg/apache/commons/math3/ode/FieldEquationsMapper;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;
org.apache.commons.math3.ode.nonstiff.EulerFieldStepInterpolator.create(Lorg/apache/commons/math3/Field;Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/EulerFieldStepInterpolator;
org.apache.commons.math3.ode.nonstiff.EulerFieldStepInterpolator.create(Lorg/apache/commons/math3/Field;Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/RungeKuttaFieldStepInterpolator;
org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator.computeInterpolatedStateAndDerivatives(DD)V
org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator.doCopy()Lorg/apache/commons/math3/ode/sampling/StepInterpolator;
org.apache.commons.math3.ode.nonstiff.GillFieldIntegrator.createInterpolator(Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/GillFieldStepInterpolator;
org.apache.commons.math3.ode.nonstiff.GillFieldIntegrator.createInterpolator(Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/RungeKuttaFieldStepInterpolator;
org.apache.commons.math3.ode.nonstiff.GillFieldIntegrator.getA()[[Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.nonstiff.GillFieldIntegrator.getB()[Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.nonstiff.GillFieldIntegrator.getC()[Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.nonstiff.GillFieldStepInterpolator.computeInterpolatedStateAndDerivatives(Lorg/apache/commons/math3/ode/FieldEquationsMapper;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;
org.apache.commons.math3.ode.nonstiff.GillFieldStepInterpolator.create(Lorg/apache/commons/math3/Field;Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/GillFieldStepInterpolator;
org.apache.commons.math3.ode.nonstiff.GillFieldStepInterpolator.create(Lorg/apache/commons/math3/Field;Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/RungeKuttaFieldStepInterpolator;
org.apache.commons.math3.ode.nonstiff.GillStepInterpolator.computeInterpolatedStateAndDerivatives(DD)V
org.apache.commons.math3.ode.nonstiff.GillStepInterpolator.doCopy()Lorg/apache/commons/math3/ode/sampling/StepInterpolator;
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator.addEventHandler(Lorg/apache/commons/math3/ode/events/EventHandler;DDILorg/apache/commons/math3/analysis/solvers/UnivariateSolver;)V
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator.addStepHandler(Lorg/apache/commons/math3/ode/sampling/StepHandler;)V
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator.extrapolate(II[[D[D)V
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator.initializeArrays()V
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator.integrate(Lorg/apache/commons/math3/ode/ExpandableStatefulODE;D)V
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator.rescale([D[D[D)V
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator.setControlFactors(DDDD)V
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator.setInterpolationControl(ZI)V
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator.setOrderControl(IDD)V
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator.setStabilityCheck(ZIID)V
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator.tryStep(D[DDI[D[[D[D[D[D)Z
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator.computeCoefficients(ID)V
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator.computeInterpolatedStateAndDerivatives(DD)V
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator.doCopy()Lorg/apache/commons/math3/ode/sampling/StepInterpolator;
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator.estimateError([D)D
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator.readExternal(Ljava/io/ObjectInput;)V
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator.resetTables(I)V
org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator.writeExternal(Ljava/io/ObjectOutput;)V
org.apache.commons.math3.ode.nonstiff.HighamHall54FieldIntegrator.createInterpolator(Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/HighamHall54FieldStepInterpolator;
org.apache.commons.math3.ode.nonstiff.HighamHall54FieldIntegrator.createInterpolator(Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/RungeKuttaFieldStepInterpolator;
org.apache.commons.math3.ode.nonstiff.HighamHall54FieldIntegrator.estimateError([[Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.nonstiff.HighamHall54FieldIntegrator.getA()[[Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.nonstiff.HighamHall54FieldIntegrator.getB()[Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.nonstiff.HighamHall54FieldIntegrator.getC()[Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.nonstiff.HighamHall54FieldIntegrator.getOrder()I
org.apache.commons.math3.ode.nonstiff.HighamHall54FieldStepInterpolator.computeInterpolatedStateAndDerivatives(Lorg/apache/commons/math3/ode/FieldEquationsMapper;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;
org.apache.commons.math3.ode.nonstiff.HighamHall54FieldStepInterpolator.create(Lorg/apache/commons/math3/Field;Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/HighamHall54FieldStepInterpolator;
org.apache.commons.math3.ode.nonstiff.HighamHall54FieldStepInterpolator.create(Lorg/apache/commons/math3/Field;Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/RungeKuttaFieldStepInterpolator;
org.apache.commons.math3.ode.nonstiff.HighamHall54Integrator.estimateError([[D[D[DD)D
org.apache.commons.math3.ode.nonstiff.HighamHall54Integrator.getOrder()I
org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator.computeInterpolatedStateAndDerivatives(DD)V
org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator.doCopy()Lorg/apache/commons/math3/ode/sampling/StepInterpolator;
org.apache.commons.math3.ode.nonstiff.LutherFieldIntegrator.createInterpolator(Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/LutherFieldStepInterpolator;
org.apache.commons.math3.ode.nonstiff.LutherFieldIntegrator.createInterpolator(Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/RungeKuttaFieldStepInterpolator;
org.apache.commons.math3.ode.nonstiff.LutherFieldIntegrator.getA()[[Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.nonstiff.LutherFieldIntegrator.getB()[Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.nonstiff.LutherFieldIntegrator.getC()[Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.nonstiff.LutherFieldStepInterpolator.computeInterpolatedStateAndDerivatives(Lorg/apache/commons/math3/ode/FieldEquationsMapper;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;
org.apache.commons.math3.ode.nonstiff.LutherFieldStepInterpolator.create(Lorg/apache/commons/math3/Field;Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/LutherFieldStepInterpolator;
org.apache.commons.math3.ode.nonstiff.LutherFieldStepInterpolator.create(Lorg/apache/commons/math3/Field;Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/RungeKuttaFieldStepInterpolator;
org.apache.commons.math3.ode.nonstiff.LutherStepInterpolator.computeInterpolatedStateAndDerivatives(DD)V
org.apache.commons.math3.ode.nonstiff.LutherStepInterpolator.doCopy()Lorg/apache/commons/math3/ode/sampling/StepInterpolator;
org.apache.commons.math3.ode.nonstiff.MidpointFieldIntegrator.createInterpolator(Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/MidpointFieldStepInterpolator;
org.apache.commons.math3.ode.nonstiff.MidpointFieldIntegrator.createInterpolator(Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/RungeKuttaFieldStepInterpolator;
org.apache.commons.math3.ode.nonstiff.MidpointFieldIntegrator.getA()[[Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.nonstiff.MidpointFieldIntegrator.getB()[Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.nonstiff.MidpointFieldIntegrator.getC()[Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.nonstiff.MidpointFieldStepInterpolator.computeInterpolatedStateAndDerivatives(Lorg/apache/commons/math3/ode/FieldEquationsMapper;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;
org.apache.commons.math3.ode.nonstiff.MidpointFieldStepInterpolator.create(Lorg/apache/commons/math3/Field;Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/MidpointFieldStepInterpolator;
org.apache.commons.math3.ode.nonstiff.MidpointFieldStepInterpolator.create(Lorg/apache/commons/math3/Field;Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/RungeKuttaFieldStepInterpolator;
org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolator.computeInterpolatedStateAndDerivatives(DD)V
org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolator.doCopy()Lorg/apache/commons/math3/ode/sampling/StepInterpolator;
org.apache.commons.math3.ode.nonstiff.RungeKuttaFieldIntegrator.fraction(II)Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.nonstiff.RungeKuttaFieldStepInterpolator.combine([Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;)[Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.nonstiff.RungeKuttaFieldStepInterpolator.currentStateLinearCombination([Lorg/apache/commons/math3/RealFieldElement;)[Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.nonstiff.RungeKuttaFieldStepInterpolator.derivativeLinearCombination([Lorg/apache/commons/math3/RealFieldElement;)[Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.nonstiff.RungeKuttaFieldStepInterpolator.previousStateLinearCombination([Lorg/apache/commons/math3/RealFieldElement;)[Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator.readExternal(Ljava/io/ObjectInput;)V
org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator.reinitialize(Lorg/apache/commons/math3/ode/AbstractIntegrator;[D[[DZLorg/apache/commons/math3/ode/EquationsMapper;[Lorg/apache/commons/math3/ode/EquationsMapper;)V
org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator.writeExternal(Ljava/io/ObjectOutput;)V
org.apache.commons.math3.ode.nonstiff.ThreeEighthesFieldIntegrator.createInterpolator(Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/RungeKuttaFieldStepInterpolator;
org.apache.commons.math3.ode.nonstiff.ThreeEighthesFieldIntegrator.createInterpolator(Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/ThreeEighthesFieldStepInterpolator;
org.apache.commons.math3.ode.nonstiff.ThreeEighthesFieldIntegrator.getA()[[Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.nonstiff.ThreeEighthesFieldIntegrator.getB()[Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.nonstiff.ThreeEighthesFieldIntegrator.getC()[Lorg/apache/commons/math3/RealFieldElement;
org.apache.commons.math3.ode.nonstiff.ThreeEighthesFieldStepInterpolator.computeInterpolatedStateAndDerivatives(Lorg/apache/commons/math3/ode/FieldEquationsMapper;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;
org.apache.commons.math3.ode.nonstiff.ThreeEighthesFieldStepInterpolator.create(Lorg/apache/commons/math3/Field;Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/RungeKuttaFieldStepInterpolator;
org.apache.commons.math3.ode.nonstiff.ThreeEighthesFieldStepInterpolator.create(Lorg/apache/commons/math3/Field;Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/ThreeEighthesFieldStepInterpolator;
org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolator.computeInterpolatedStateAndDerivatives(DD)V
org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolator.doCopy()Lorg/apache/commons/math3/ode/sampling/StepInterpolator;
org.apache.commons.math3.ode.sampling.AbstractFieldStepInterpolator.getCurrentState()Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;
org.apache.commons.math3.ode.sampling.AbstractFieldStepInterpolator.getGlobalCurrentState()Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;
org.apache.commons.math3.ode.sampling.AbstractFieldStepInterpolator.getGlobalPreviousState()Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;
org.apache.commons.math3.ode.sampling.AbstractFieldStepInterpolator.getInterpolatedState(Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;
org.apache.commons.math3.ode.sampling.AbstractFieldStepInterpolator.getPreviousState()Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;
org.apache.commons.math3.ode.sampling.AbstractFieldStepInterpolator.isForward()Z
org.apache.commons.math3.ode.sampling.AbstractFieldStepInterpolator.restrictStep(Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;)Lorg/apache/commons/math3/ode/sampling/AbstractFieldStepInterpolator;
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.allocateInterpolatedArrays(I)V
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.doFinalize()V
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.evaluateCompleteInterpolatedState()V
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.finalizeStep()V
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.getCurrentTime()D
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.getGlobalCurrentTime()D
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.getGlobalPreviousTime()D
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.getInterpolatedSecondaryState(I)[D
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.getInterpolatedState()[D
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.getInterpolatedTime()D
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.getPreviousTime()D
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.isForward()Z
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.readBaseExternal(Ljava/io/ObjectInput;)D
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.reinitialize([DZLorg/apache/commons/math3/ode/EquationsMapper;[Lorg/apache/commons/math3/ode/EquationsMapper;)V
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.setInterpolatedTime(D)V
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.setSoftCurrentTime(D)V
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.setSoftPreviousTime(D)V
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.shift()V
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.storeTime(D)V
org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.writeBaseExternal(Ljava/io/ObjectOutput;)V
org.apache.commons.math3.ode.sampling.DummyStepHandler$LazyHolder.access$000()Lorg/apache/commons/math3/ode/sampling/DummyStepHandler;
org.apache.commons.math3.ode.sampling.DummyStepHandler.getInstance()Lorg/apache/commons/math3/ode/sampling/DummyStepHandler;
org.apache.commons.math3.ode.sampling.DummyStepHandler.handleStep(Lorg/apache/commons/math3/ode/sampling/StepInterpolator;Z)V
org.apache.commons.math3.ode.sampling.DummyStepHandler.init(D[DD)V
org.apache.commons.math3.ode.sampling.DummyStepHandler.readResolve()Ljava/lang/Object;
org.apache.commons.math3.ode.sampling.FieldStepNormalizer.doNormalizedStep(Z)V
org.apache.commons.math3.ode.sampling.FieldStepNormalizer.handleStep(Lorg/apache/commons/math3/ode/sampling/FieldStepInterpolator;Z)V
org.apache.commons.math3.ode.sampling.FieldStepNormalizer.init(Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/RealFieldElement;)V
org.apache.commons.math3.ode.sampling.FieldStepNormalizer.isNextInStep(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/sampling/FieldStepInterpolator;)Z
org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator.computeInterpolatedStateAndDerivatives(DD)V
org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator.doCopy()Lorg/apache/commons/math3/ode/sampling/StepInterpolator;
org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator.getInterpolatedStateVariation()[D
org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator.readExternal(Ljava/io/ObjectInput;)V
org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator.reinitialize(DD[DLorg/apache/commons/math3/linear/Array2DRowRealMatrix;)V
org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator.reinitialize([DZLorg/apache/commons/math3/ode/EquationsMapper;[Lorg/apache/commons/math3/ode/EquationsMapper;)V
org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator.rescale(D)V
org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator.writeExternal(Ljava/io/ObjectOutput;)V
org.apache.commons.math3.ode.sampling.StepNormalizer.doNormalizedStep(Z)V
org.apache.commons.math3.ode.sampling.StepNormalizer.handleStep(Lorg/apache/commons/math3/ode/sampling/StepInterpolator;Z)V
org.apache.commons.math3.ode.sampling.StepNormalizer.init(D[DD)V
org.apache.commons.math3.ode.sampling.StepNormalizer.isNextInStep(DLorg/apache/commons/math3/ode/sampling/StepInterpolator;)Z
org.apache.commons.math3.ode.sampling.StepNormalizer.storeStep(Lorg/apache/commons/math3/ode/sampling/StepInterpolator;D)V
org.apache.commons.math3.ode.sampling.StepNormalizerBounds.firstIncluded()Z
org.apache.commons.math3.ode.sampling.StepNormalizerBounds.lastIncluded()Z
org.apache.commons.math3.ode.sampling.StepNormalizerBounds.valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/ode/sampling/StepNormalizerBounds;
org.apache.commons.math3.ode.sampling.StepNormalizerBounds.values()[Lorg/apache/commons/math3/ode/sampling/StepNormalizerBounds;
org.apache.commons.math3.ode.sampling.StepNormalizerMode.valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/ode/sampling/StepNormalizerMode;
org.apache.commons.math3.ode.sampling.StepNormalizerMode.values()[Lorg/apache/commons/math3/ode/sampling/StepNormalizerMode;
org.apache.commons.math3.optim.AbstractConvergenceChecker.getAbsoluteThreshold()D
org.apache.commons.math3.optim.AbstractConvergenceChecker.getRelativeThreshold()D
org.apache.commons.math3.optim.AbstractOptimizationProblem$MaxEvalCallback.trigger(I)V
org.apache.commons.math3.optim.AbstractOptimizationProblem$MaxIterCallback.trigger(I)V
org.apache.commons.math3.optim.BaseMultivariateOptimizer.checkParameters()V
org.apache.commons.math3.optim.BaseMultivariateOptimizer.getLowerBound()[D
org.apache.commons.math3.optim.BaseMultivariateOptimizer.getStartPoint()[D
org.apache.commons.math3.optim.BaseMultivariateOptimizer.getUpperBound()[D
org.apache.commons.math3.optim.BaseMultivariateOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Ljava/lang/Object;
org.apache.commons.math3.optim.BaseMultivariateOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V
org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback.trigger(I)V
org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback.trigger(I)V
org.apache.commons.math3.optim.BaseOptimizer.getConvergenceChecker()Lorg/apache/commons/math3/optim/ConvergenceChecker;
org.apache.commons.math3.optim.BaseOptimizer.getEvaluations()I
org.apache.commons.math3.optim.BaseOptimizer.getIterations()I
org.apache.commons.math3.optim.BaseOptimizer.getMaxEvaluations()I
org.apache.commons.math3.optim.BaseOptimizer.incrementEvaluationCount()V
org.apache.commons.math3.optim.BaseOptimizer.incrementIterationCount()V
org.apache.commons.math3.optim.BaseOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Ljava/lang/Object;
org.apache.commons.math3.optim.BaseOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V
org.apache.commons.math3.optim.InitialGuess.getInitialGuess()[D
org.apache.commons.math3.optim.MaxEval.getMaxEval()I
org.apache.commons.math3.optim.MaxEval.unlimited()Lorg/apache/commons/math3/optim/MaxEval;
org.apache.commons.math3.optim.MaxIter.getMaxIter()I
org.apache.commons.math3.optim.MaxIter.unlimited()Lorg/apache/commons/math3/optim/MaxIter;
org.apache.commons.math3.optim.PointValuePair$DataTransferObject.readResolve()Ljava/lang/Object;
org.apache.commons.math3.optim.PointValuePair.getPoint()[D
org.apache.commons.math3.optim.PointValuePair.getPointRef()[D
org.apache.commons.math3.optim.PointValuePair.writeReplace()Ljava/lang/Object;
org.apache.commons.math3.optim.PointVectorValuePair$DataTransferObject.readResolve()Ljava/lang/Object;
org.apache.commons.math3.optim.PointVectorValuePair.getPoint()[D
org.apache.commons.math3.optim.PointVectorValuePair.getPointRef()[D
org.apache.commons.math3.optim.PointVectorValuePair.getValue()Ljava/lang/Object;
org.apache.commons.math3.optim.PointVectorValuePair.getValue()[D
org.apache.commons.math3.optim.PointVectorValuePair.getValueRef()[D
org.apache.commons.math3.optim.PointVectorValuePair.writeReplace()Ljava/lang/Object;
org.apache.commons.math3.optim.SimpleBounds.getLower()[D
org.apache.commons.math3.optim.SimpleBounds.getUpper()[D
org.apache.commons.math3.optim.SimplePointChecker.converged(ILjava/lang/Object;Ljava/lang/Object;)Z
org.apache.commons.math3.optim.SimplePointChecker.converged(ILorg/apache/commons/math3/util/Pair;Lorg/apache/commons/math3/util/Pair;)Z
org.apache.commons.math3.optim.SimpleValueChecker.converged(ILjava/lang/Object;Ljava/lang/Object;)Z
org.apache.commons.math3.optim.SimpleValueChecker.converged(ILorg/apache/commons/math3/optim/PointValuePair;Lorg/apache/commons/math3/optim/PointValuePair;)Z
org.apache.commons.math3.optim.SimpleVectorValueChecker.converged(ILjava/lang/Object;Ljava/lang/Object;)Z
org.apache.commons.math3.optim.SimpleVectorValueChecker.converged(ILorg/apache/commons/math3/optim/PointVectorValuePair;Lorg/apache/commons/math3/optim/PointVectorValuePair;)Z
org.apache.commons.math3.optim.linear.LinearConstraint.equals(Ljava/lang/Object;)Z
org.apache.commons.math3.optim.linear.LinearConstraint.getCoefficients()Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.optim.linear.LinearConstraint.getRelationship()Lorg/apache/commons/math3/optim/linear/Relationship;
org.apache.commons.math3.optim.linear.LinearConstraint.getValue()D
org.apache.commons.math3.optim.linear.LinearConstraint.hashCode()I
org.apache.commons.math3.optim.linear.LinearConstraint.readObject(Ljava/io/ObjectInputStream;)V
org.apache.commons.math3.optim.linear.LinearConstraint.writeObject(Ljava/io/ObjectOutputStream;)V
org.apache.commons.math3.optim.linear.LinearConstraintSet.getConstraints()Ljava/util/Collection;
org.apache.commons.math3.optim.linear.LinearObjectiveFunction.equals(Ljava/lang/Object;)Z
org.apache.commons.math3.optim.linear.LinearObjectiveFunction.getCoefficients()Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.optim.linear.LinearObjectiveFunction.getConstantTerm()D
org.apache.commons.math3.optim.linear.LinearObjectiveFunction.hashCode()I
org.apache.commons.math3.optim.linear.LinearObjectiveFunction.readObject(Ljava/io/ObjectInputStream;)V
org.apache.commons.math3.optim.linear.LinearObjectiveFunction.value(Lorg/apache/commons/math3/linear/RealVector;)D
org.apache.commons.math3.optim.linear.LinearObjectiveFunction.value([D)D
org.apache.commons.math3.optim.linear.LinearObjectiveFunction.writeObject(Ljava/io/ObjectOutputStream;)V
org.apache.commons.math3.optim.linear.LinearOptimizer.getConstraints()Ljava/util/Collection;
org.apache.commons.math3.optim.linear.LinearOptimizer.getFunction()Lorg/apache/commons/math3/optim/linear/LinearObjectiveFunction;
org.apache.commons.math3.optim.linear.LinearOptimizer.isRestrictedToNonNegative()Z
org.apache.commons.math3.optim.linear.LinearOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;
org.apache.commons.math3.optim.linear.LinearOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V
org.apache.commons.math3.optim.linear.NonNegativeConstraint.isRestrictedToNonNegative()Z
org.apache.commons.math3.optim.linear.PivotSelectionRule.valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/optim/linear/PivotSelectionRule;
org.apache.commons.math3.optim.linear.PivotSelectionRule.values()[Lorg/apache/commons/math3/optim/linear/PivotSelectionRule;
org.apache.commons.math3.optim.linear.Relationship.oppositeRelationship()Lorg/apache/commons/math3/optim/linear/Relationship;
org.apache.commons.math3.optim.linear.Relationship.toString()Ljava/lang/String;
org.apache.commons.math3.optim.linear.Relationship.valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/optim/linear/Relationship;
org.apache.commons.math3.optim.linear.Relationship.values()[Lorg/apache/commons/math3/optim/linear/Relationship;
org.apache.commons.math3.optim.linear.SimplexSolver.doIteration(Lorg/apache/commons/math3/optim/linear/SimplexTableau;)V
org.apache.commons.math3.optim.linear.SimplexSolver.doOptimize()Ljava/lang/Object;
org.apache.commons.math3.optim.linear.SimplexSolver.doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;
org.apache.commons.math3.optim.linear.SimplexSolver.getPivotColumn(Lorg/apache/commons/math3/optim/linear/SimplexTableau;)Ljava/lang/Integer;
org.apache.commons.math3.optim.linear.SimplexSolver.getPivotRow(Lorg/apache/commons/math3/optim/linear/SimplexTableau;I)Ljava/lang/Integer;
org.apache.commons.math3.optim.linear.SimplexSolver.isValidPivotColumn(Lorg/apache/commons/math3/optim/linear/SimplexTableau;I)Z
org.apache.commons.math3.optim.linear.SimplexSolver.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Ljava/lang/Object;
org.apache.commons.math3.optim.linear.SimplexSolver.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;
org.apache.commons.math3.optim.linear.SimplexSolver.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V
org.apache.commons.math3.optim.linear.SimplexSolver.solvePhase1(Lorg/apache/commons/math3/optim/linear/SimplexTableau;)V
org.apache.commons.math3.optim.linear.SimplexTableau.copyArray([D[D)V
org.apache.commons.math3.optim.linear.SimplexTableau.createTableau(Z)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;
org.apache.commons.math3.optim.linear.SimplexTableau.divideRow(ID)V
org.apache.commons.math3.optim.linear.SimplexTableau.dropPhase1Objective()V
org.apache.commons.math3.optim.linear.SimplexTableau.equals(Ljava/lang/Object;)Z
org.apache.commons.math3.optim.linear.SimplexTableau.findBasicRow(I)Ljava/lang/Integer;
org.apache.commons.math3.optim.linear.SimplexTableau.getArtificialVariableOffset()I
org.apache.commons.math3.optim.linear.SimplexTableau.getBasicRow(I)Ljava/lang/Integer;
org.apache.commons.math3.optim.linear.SimplexTableau.getBasicVariable(I)I
org.apache.commons.math3.optim.linear.SimplexTableau.getConstraintTypeCounts(Lorg/apache/commons/math3/optim/linear/Relationship;)I
org.apache.commons.math3.optim.linear.SimplexTableau.getData()[[D
org.apache.commons.math3.optim.linear.SimplexTableau.getEntry(II)D
org.apache.commons.math3.optim.linear.SimplexTableau.getHeight()I
org.apache.commons.math3.optim.linear.SimplexTableau.getInvertedCoefficientSum(Lorg/apache/commons/math3/linear/RealVector;)D
org.apache.commons.math3.optim.linear.SimplexTableau.getNumArtificialVariables()I
org.apache.commons.math3.optim.linear.SimplexTableau.getNumDecisionVariables()I
org.apache.commons.math3.optim.linear.SimplexTableau.getNumObjectiveFunctions()I
org.apache.commons.math3.optim.linear.SimplexTableau.getNumSlackVariables()I
org.apache.commons.math3.optim.linear.SimplexTableau.getOriginalNumDecisionVariables()I
org.apache.commons.math3.optim.linear.SimplexTableau.getRhsOffset()I
org.apache.commons.math3.optim.linear.SimplexTableau.getRow(I)[D
org.apache.commons.math3.optim.linear.SimplexTableau.getSlackVariableOffset()I
org.apache.commons.math3.optim.linear.SimplexTableau.getSolution()Lorg/apache/commons/math3/optim/PointValuePair;
org.apache.commons.math3.optim.linear.SimplexTableau.getWidth()I
org.apache.commons.math3.optim.linear.SimplexTableau.hashCode()I
org.apache.commons.math3.optim.linear.SimplexTableau.initializeBasicVariables(I)V
org.apache.commons.math3.optim.linear.SimplexTableau.initializeColumnLabels()V
org.apache.commons.math3.optim.linear.SimplexTableau.isOptimal()Z
org.apache.commons.math3.optim.linear.SimplexTableau.normalize(Lorg/apache/commons/math3/optim/linear/LinearConstraint;)Lorg/apache/commons/math3/optim/linear/LinearConstraint;
org.apache.commons.math3.optim.linear.SimplexTableau.normalizeConstraints(Ljava/util/Collection;)Ljava/util/List;
org.apache.commons.math3.optim.linear.SimplexTableau.performRowOperations(II)V
org.apache.commons.math3.optim.linear.SimplexTableau.readObject(Ljava/io/ObjectInputStream;)V
org.apache.commons.math3.optim.linear.SimplexTableau.setEntry(IID)V
org.apache.commons.math3.optim.linear.SimplexTableau.subtractRow(IID)V
org.apache.commons.math3.optim.linear.SimplexTableau.writeObject(Ljava/io/ObjectOutputStream;)V
org.apache.commons.math3.optim.linear.SolutionCallback.getSolution()Lorg/apache/commons/math3/optim/PointValuePair;
org.apache.commons.math3.optim.linear.SolutionCallback.isSolutionOptimal()Z
org.apache.commons.math3.optim.linear.SolutionCallback.setTableau(Lorg/apache/commons/math3/optim/linear/SimplexTableau;)V
org.apache.commons.math3.optim.nonlinear.scalar.GoalType.valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/optim/nonlinear/scalar/GoalType;
org.apache.commons.math3.optim.nonlinear.scalar.GoalType.values()[Lorg/apache/commons/math3/optim/nonlinear/scalar/GoalType;
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer.computeObjectiveGradient([D)[D
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;
org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V
org.apache.commons.math3.optim.nonlinear.scalar.LeastSquaresConverter.value([D)D
org.apache.commons.math3.optim.nonlinear.scalar.LineSearch$1.value(D)D
org.apache.commons.math3.optim.nonlinear.scalar.LineSearch.access$000(Lorg/apache/commons/math3/optim/nonlinear/scalar/LineSearch;)Lorg/apache/commons/math3/optim/nonlinear/scalar/MultivariateOptimizer;
org.apache.commons.math3.optim.nonlinear.scalar.LineSearch.search([D[D)Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;
org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I
org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer$1.compare(Lorg/apache/commons/math3/optim/PointValuePair;Lorg/apache/commons/math3/optim/PointValuePair;)I
org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer.access$000(Lorg/apache/commons/math3/optim/nonlinear/scalar/MultiStartMultivariateOptimizer;)Lorg/apache/commons/math3/optim/nonlinear/scalar/MultivariateOptimizer;
org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer.clear()V
org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer.getOptima()[Ljava/lang/Object;
org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer.getOptima()[Lorg/apache/commons/math3/optim/PointValuePair;
org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer.getPairComparator()Ljava/util/Comparator;
org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer.store(Ljava/lang/Object;)V
org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer.store(Lorg/apache/commons/math3/optim/PointValuePair;)V
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerBoundMapper.boundedToUnbounded(D)D
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerBoundMapper.unboundedToBounded(D)D
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.boundedToUnbounded(D)D
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(D)D
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$NoBoundsMapper.boundedToUnbounded(D)D
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$NoBoundsMapper.unboundedToBounded(D)D
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$UpperBoundMapper.boundedToUnbounded(D)D
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$UpperBoundMapper.unboundedToBounded(D)D
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.boundedToUnbounded([D)[D
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.unboundedToBounded([D)[D
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.value([D)D
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapter.value([D)D
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.computeObjectiveValue([D)D
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.getGoalType()Lorg/apache/commons/math3/optim/nonlinear/scalar/GoalType;
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;
org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V
org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunction.getObjectiveFunction()Lorg/apache/commons/math3/analysis/MultivariateFunction;
org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunctionGradient.getObjectiveFunctionGradient()Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$BracketingStep.getBracketingStep()D
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$Formula.valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer$Formula;
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$Formula.values()[Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer$Formula;
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$IdentityPreconditioner.precondition([D[D)[D
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.checkParameters()V
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.doOptimize()Ljava/lang/Object;
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Ljava/lang/Object;
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;
org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.evaluate(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.getDimension()I
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.getPoint(I)Lorg/apache/commons/math3/optim/PointValuePair;
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.getPoints()[Lorg/apache/commons/math3/optim/PointValuePair;
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.getSize()I
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.replaceWorstPoint(Lorg/apache/commons/math3/optim/PointValuePair;Ljava/util/Comparator;)V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.setPoint(ILorg/apache/commons/math3/optim/PointValuePair;)V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.setPoints([Lorg/apache/commons/math3/optim/PointValuePair;)V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer.altmov(ID)[D
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer.bobyqa([D[D)D
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer.bobyqb([D[D)D
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer.doOptimize()Ljava/lang/Object;
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer.doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer.prelim([D[D)V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer.printMethod()V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer.setup([D[D)V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer.trsbox(DLorg/apache/commons/math3/linear/ArrayRealVector;Lorg/apache/commons/math3/linear/ArrayRealVector;Lorg/apache/commons/math3/linear/ArrayRealVector;Lorg/apache/commons/math3/linear/ArrayRealVector;Lorg/apache/commons/math3/linear/ArrayRealVector;)[D
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer.update(DDI)V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex.access$300(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer$DoubleIndex;)I
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex.compareTo(Ljava/lang/Object;)I
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex.compareTo(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer$DoubleIndex;)I
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex.equals(Ljava/lang/Object;)Z
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex.hashCode()I
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction.access$200(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer$FitnessFunction;[D)[D
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction.isFeasible([D)Z
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction.penalty([D[D)D
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction.repair([D)[D
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction.value([D)Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer$ValuePenaltyPair;
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$PopulationSize.getPopulationSize()I
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$Sigma.getSigma()[D
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$ValuePenaltyPair.access$000(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer$ValuePenaltyPair;)D
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$ValuePenaltyPair.access$100(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer$ValuePenaltyPair;)D
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.access$400(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer;)Z
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.checkParameters()V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.diag(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.divide(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.doOptimize()Ljava/lang/Object;
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.getStatisticsDHistory()Ljava/util/List;
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.getStatisticsFitnessHistory()Ljava/util/List;
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.getStatisticsMeanHistory()Ljava/util/List;
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.getStatisticsSigmaHistory()Ljava/util/List;
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.initializeCMA([D)V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.inverse([I)[I
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.max(Lorg/apache/commons/math3/linear/RealMatrix;)D
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.max([D)D
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.min(Lorg/apache/commons/math3/linear/RealMatrix;)D
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.min([D)D
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Ljava/lang/Object;
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.push([DD)V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.randn(I)[D
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.randn1(II)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.repmat(Lorg/apache/commons/math3/linear/RealMatrix;II)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.reverse([I)[I
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.selectColumns(Lorg/apache/commons/math3/linear/RealMatrix;[I)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.sortedIndices([D)[I
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.sqrt(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.square(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.sumRows(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.times(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.triu(Lorg/apache/commons/math3/linear/RealMatrix;I)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.updateBD(D)V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.updateCovariance(ZLorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;[ILorg/apache/commons/math3/linear/RealMatrix;)V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.updateCovarianceDiagonalOnly(ZLorg/apache/commons/math3/linear/RealMatrix;)V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.updateEvolutionPaths(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)Z
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.valueRange([Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer$ValuePenaltyPair;)D
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex.evaluateNewSimplex(Lorg/apache/commons/math3/analysis/MultivariateFunction;[Lorg/apache/commons/math3/optim/PointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math3/optim/PointValuePair;
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex.iterate(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex.iterate(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.checkParameters()V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.doOptimize()Ljava/lang/Object;
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.newPointAndDirection([D[DD)[[D
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$1.value([D)D
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$2.compare(Ljava/lang/Object;Ljava/lang/Object;)I
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$2.compare(Lorg/apache/commons/math3/optim/PointValuePair;Lorg/apache/commons/math3/optim/PointValuePair;)I
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.checkParameters()V
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.doOptimize()Ljava/lang/Object;
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Ljava/lang/Object;
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;
org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer.computeJacobian([D)[[D
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair;
org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V
org.apache.commons.math3.optim.nonlinear.vector.ModelFunction.getModelFunction()Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;
org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian.getModelFunctionJacobian()Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;
org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I
org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1.compare(Lorg/apache/commons/math3/optim/PointVectorValuePair;Lorg/apache/commons/math3/optim/PointVectorValuePair;)I
org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1.weightedResidual(Lorg/apache/commons/math3/optim/PointVectorValuePair;)D
org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer.access$000(Lorg/apache/commons/math3/optim/nonlinear/vector/MultiStartMultivariateVectorOptimizer;)Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;
org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer.clear()V
org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer.getOptima()[Ljava/lang/Object;
org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer.getOptima()[Lorg/apache/commons/math3/optim/PointVectorValuePair;
org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer.getPairComparator()Ljava/util/Comparator;
org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer.store(Ljava/lang/Object;)V
org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer.store(Lorg/apache/commons/math3/optim/PointVectorValuePair;)V
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.checkParameters()V
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.computeObjectiveValue([D)[D
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.getTarget()[D
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.getWeight()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair;
org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V
org.apache.commons.math3.optim.nonlinear.vector.Target.getTarget()[D
org.apache.commons.math3.optim.nonlinear.vector.Weight.getWeight()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.computeCost([D)D
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.computeResiduals([D)[D
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.computeWeightedJacobian([D)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.getWeightSquareRoot()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair;
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.setCost(D)V
org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.squareRoot(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer.checkParameters()V
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer.doOptimize()Ljava/lang/Object;
org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer.doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.checkParameters()V
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.determineLMDirection([D[D[D[D)V
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.determineLMParameter([DD[D[D[D[D)V
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.doOptimize()Ljava/lang/Object;
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.qTy([D)V
org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.qrDecomposition(Lorg/apache/commons/math3/linear/RealMatrix;)V
org.apache.commons.math3.optim.univariate.BracketFinder.eval(Lorg/apache/commons/math3/analysis/UnivariateFunction;D)D
org.apache.commons.math3.optim.univariate.BracketFinder.getEvaluations()I
org.apache.commons.math3.optim.univariate.BracketFinder.getFHi()D
org.apache.commons.math3.optim.univariate.BracketFinder.getFLo()D
org.apache.commons.math3.optim.univariate.BracketFinder.getFMid()D
org.apache.commons.math3.optim.univariate.BracketFinder.getHi()D
org.apache.commons.math3.optim.univariate.BracketFinder.getLo()D
org.apache.commons.math3.optim.univariate.BracketFinder.getMaxEvaluations()I
org.apache.commons.math3.optim.univariate.BracketFinder.getMid()D
org.apache.commons.math3.optim.univariate.BracketFinder.search(Lorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optim/nonlinear/scalar/GoalType;DD)V
org.apache.commons.math3.optim.univariate.BrentOptimizer.best(Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;Z)Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;
org.apache.commons.math3.optim.univariate.BrentOptimizer.doOptimize()Ljava/lang/Object;
org.apache.commons.math3.optim.univariate.BrentOptimizer.doOptimize()Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;
org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizer$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I
org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizer$1.compare(Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;)I
org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizer.doOptimize()Ljava/lang/Object;
org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizer.doOptimize()Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;
org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizer.getEvaluations()I
org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizer.getOptima()[Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;
org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Ljava/lang/Object;
org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;
org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizer.sortPairs(Lorg/apache/commons/math3/optim/nonlinear/scalar/GoalType;)V
org.apache.commons.math3.optim.univariate.SearchInterval.getMax()D
org.apache.commons.math3.optim.univariate.SearchInterval.getMin()D
org.apache.commons.math3.optim.univariate.SearchInterval.getStartValue()D
org.apache.commons.math3.optim.univariate.SimpleUnivariateValueChecker.converged(ILjava/lang/Object;Ljava/lang/Object;)Z
org.apache.commons.math3.optim.univariate.SimpleUnivariateValueChecker.converged(ILorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;)Z
org.apache.commons.math3.optim.univariate.UnivariateObjectiveFunction.getObjectiveFunction()Lorg/apache/commons/math3/analysis/UnivariateFunction;
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.computeObjectiveValue(D)D
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.getGoalType()Lorg/apache/commons/math3/optim/nonlinear/scalar/GoalType;
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.getMax()D
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.getMin()D
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.getStartValue()D
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;
org.apache.commons.math3.optim.univariate.UnivariateOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V
org.apache.commons.math3.optim.univariate.UnivariatePointValuePair.getPoint()D
org.apache.commons.math3.optim.univariate.UnivariatePointValuePair.getValue()D
org.apache.commons.math3.optimization.AbstractConvergenceChecker.getAbsoluteThreshold()D
org.apache.commons.math3.optimization.AbstractConvergenceChecker.getRelativeThreshold()D
org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I
org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer$1.compare(Lorg/apache/commons/math3/optimization/PointValuePair;Lorg/apache/commons/math3/optimization/PointValuePair;)I
org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer.getConvergenceChecker()Lorg/apache/commons/math3/optimization/ConvergenceChecker;
org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer.getEvaluations()I
org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer.getMaxEvaluations()I
org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer.getOptima()[Lorg/apache/commons/math3/optimization/PointValuePair;
org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer.optimize(ILorg/apache/commons/math3/analysis/MultivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;[D)Lorg/apache/commons/math3/optimization/PointValuePair;
org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer.sortPairs(Lorg/apache/commons/math3/optimization/GoalType;)V
org.apache.commons.math3.optimization.BaseMultivariateVectorMultiStartOptimizer$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I
org.apache.commons.math3.optimization.BaseMultivariateVectorMultiStartOptimizer$1.compare(Lorg/apache/commons/math3/optimization/PointVectorValuePair;Lorg/apache/commons/math3/optimization/PointVectorValuePair;)I
org.apache.commons.math3.optimization.BaseMultivariateVectorMultiStartOptimizer$1.weightedResidual(Lorg/apache/commons/math3/optimization/PointVectorValuePair;)D
org.apache.commons.math3.optimization.BaseMultivariateVectorMultiStartOptimizer.getConvergenceChecker()Lorg/apache/commons/math3/optimization/ConvergenceChecker;
org.apache.commons.math3.optimization.BaseMultivariateVectorMultiStartOptimizer.getEvaluations()I
org.apache.commons.math3.optimization.BaseMultivariateVectorMultiStartOptimizer.getMaxEvaluations()I
org.apache.commons.math3.optimization.BaseMultivariateVectorMultiStartOptimizer.getOptima()[Lorg/apache/commons/math3/optimization/PointVectorValuePair;
org.apache.commons.math3.optimization.BaseMultivariateVectorMultiStartOptimizer.optimize(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;
org.apache.commons.math3.optimization.BaseMultivariateVectorMultiStartOptimizer.sortPairs([D[D)V
org.apache.commons.math3.optimization.GoalType.valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/optimization/GoalType;
org.apache.commons.math3.optimization.GoalType.values()[Lorg/apache/commons/math3/optimization/GoalType;
org.apache.commons.math3.optimization.InitialGuess.getInitialGuess()[D
org.apache.commons.math3.optimization.LeastSquaresConverter.value([D)D
org.apache.commons.math3.optimization.PointValuePair$DataTransferObject.readResolve()Ljava/lang/Object;
org.apache.commons.math3.optimization.PointValuePair.getPoint()[D
org.apache.commons.math3.optimization.PointValuePair.getPointRef()[D
org.apache.commons.math3.optimization.PointValuePair.writeReplace()Ljava/lang/Object;
org.apache.commons.math3.optimization.PointVectorValuePair$DataTransferObject.readResolve()Ljava/lang/Object;
org.apache.commons.math3.optimization.PointVectorValuePair.getPoint()[D
org.apache.commons.math3.optimization.PointVectorValuePair.getPointRef()[D
org.apache.commons.math3.optimization.PointVectorValuePair.getValue()Ljava/lang/Object;
org.apache.commons.math3.optimization.PointVectorValuePair.getValue()[D
org.apache.commons.math3.optimization.PointVectorValuePair.getValueRef()[D
org.apache.commons.math3.optimization.PointVectorValuePair.writeReplace()Ljava/lang/Object;
org.apache.commons.math3.optimization.SimpleBounds.getLower()[D
org.apache.commons.math3.optimization.SimpleBounds.getUpper()[D
org.apache.commons.math3.optimization.SimplePointChecker.converged(ILjava/lang/Object;Ljava/lang/Object;)Z
org.apache.commons.math3.optimization.SimplePointChecker.converged(ILorg/apache/commons/math3/util/Pair;Lorg/apache/commons/math3/util/Pair;)Z
org.apache.commons.math3.optimization.SimpleValueChecker.converged(ILjava/lang/Object;Ljava/lang/Object;)Z
org.apache.commons.math3.optimization.SimpleValueChecker.converged(ILorg/apache/commons/math3/optimization/PointValuePair;Lorg/apache/commons/math3/optimization/PointValuePair;)Z
org.apache.commons.math3.optimization.SimpleVectorValueChecker.converged(ILjava/lang/Object;Ljava/lang/Object;)Z
org.apache.commons.math3.optimization.SimpleVectorValueChecker.converged(ILorg/apache/commons/math3/optimization/PointVectorValuePair;Lorg/apache/commons/math3/optimization/PointVectorValuePair;)Z
org.apache.commons.math3.optimization.Target.getTarget()[D
org.apache.commons.math3.optimization.Weight.getWeight()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.optimization.direct.AbstractSimplex.evaluate(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V
org.apache.commons.math3.optimization.direct.AbstractSimplex.getDimension()I
org.apache.commons.math3.optimization.direct.AbstractSimplex.getPoint(I)Lorg/apache/commons/math3/optimization/PointValuePair;
org.apache.commons.math3.optimization.direct.AbstractSimplex.getPoints()[Lorg/apache/commons/math3/optimization/PointValuePair;
org.apache.commons.math3.optimization.direct.AbstractSimplex.getSize()I
org.apache.commons.math3.optimization.direct.AbstractSimplex.replaceWorstPoint(Lorg/apache/commons/math3/optimization/PointValuePair;Ljava/util/Comparator;)V
org.apache.commons.math3.optimization.direct.AbstractSimplex.setPoint(ILorg/apache/commons/math3/optimization/PointValuePair;)V
org.apache.commons.math3.optimization.direct.AbstractSimplex.setPoints([Lorg/apache/commons/math3/optimization/PointValuePair;)V
org.apache.commons.math3.optimization.direct.BOBYQAOptimizer.altmov(ID)[D
org.apache.commons.math3.optimization.direct.BOBYQAOptimizer.bobyqa([D[D)D
org.apache.commons.math3.optimization.direct.BOBYQAOptimizer.bobyqb([D[D)D
org.apache.commons.math3.optimization.direct.BOBYQAOptimizer.doOptimize()Lorg/apache/commons/math3/optimization/PointValuePair;
org.apache.commons.math3.optimization.direct.BOBYQAOptimizer.prelim([D[D)V
org.apache.commons.math3.optimization.direct.BOBYQAOptimizer.printMethod()V
org.apache.commons.math3.optimization.direct.BOBYQAOptimizer.setup([D[D)V
org.apache.commons.math3.optimization.direct.BOBYQAOptimizer.trsbox(DLorg/apache/commons/math3/linear/ArrayRealVector;Lorg/apache/commons/math3/linear/ArrayRealVector;Lorg/apache/commons/math3/linear/ArrayRealVector;Lorg/apache/commons/math3/linear/ArrayRealVector;Lorg/apache/commons/math3/linear/ArrayRealVector;)[D
org.apache.commons.math3.optimization.direct.BOBYQAOptimizer.update(DDI)V
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.checkParameters()V
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.computeObjectiveValue([D)D
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.getConvergenceChecker()Lorg/apache/commons/math3/optimization/ConvergenceChecker;
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.getEvaluations()I
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.getGoalType()Lorg/apache/commons/math3/optimization/GoalType;
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.getLowerBound()[D
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.getMaxEvaluations()I
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.getStartPoint()[D
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.getUpperBound()[D
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.optimizeInternal(ILorg/apache/commons/math3/analysis/MultivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointValuePair;
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optimization/OptimizationData;)V
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.computeObjectiveValue([D)[D
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.getConvergenceChecker()Lorg/apache/commons/math3/optimization/ConvergenceChecker;
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.getStartPoint()[D
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.getTarget()[D
org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.getWeight()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex.access$100(Lorg/apache/commons/math3/optimization/direct/CMAESOptimizer$DoubleIndex;)I
org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex.compareTo(Ljava/lang/Object;)I
org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex.compareTo(Lorg/apache/commons/math3/optimization/direct/CMAESOptimizer$DoubleIndex;)I
org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex.equals(Ljava/lang/Object;)Z
org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex.hashCode()I
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction.access$000(Lorg/apache/commons/math3/optimization/direct/CMAESOptimizer$FitnessFunction;[D)[D
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction.isFeasible([D)Z
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction.penalty([D[D)D
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction.repair([D)[D
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction.setValueRange(D)V
org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction.value([D)D
org.apache.commons.math3.optimization.direct.CMAESOptimizer$PopulationSize.getPopulationSize()I
org.apache.commons.math3.optimization.direct.CMAESOptimizer$Sigma.getSigma()[D
org.apache.commons.math3.optimization.direct.CMAESOptimizer.access$200(Lorg/apache/commons/math3/optimization/direct/CMAESOptimizer;)Z
org.apache.commons.math3.optimization.direct.CMAESOptimizer.checkParameters()V
org.apache.commons.math3.optimization.direct.CMAESOptimizer.diag(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.optimization.direct.CMAESOptimizer.divide(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.optimization.direct.CMAESOptimizer.doOptimize()Lorg/apache/commons/math3/optimization/PointValuePair;
org.apache.commons.math3.optimization.direct.CMAESOptimizer.getStatisticsDHistory()Ljava/util/List;
org.apache.commons.math3.optimization.direct.CMAESOptimizer.getStatisticsFitnessHistory()Ljava/util/List;
org.apache.commons.math3.optimization.direct.CMAESOptimizer.getStatisticsMeanHistory()Ljava/util/List;
org.apache.commons.math3.optimization.direct.CMAESOptimizer.getStatisticsSigmaHistory()Ljava/util/List;
org.apache.commons.math3.optimization.direct.CMAESOptimizer.initializeCMA([D)V
org.apache.commons.math3.optimization.direct.CMAESOptimizer.inverse([I)[I
org.apache.commons.math3.optimization.direct.CMAESOptimizer.max(Lorg/apache/commons/math3/linear/RealMatrix;)D
org.apache.commons.math3.optimization.direct.CMAESOptimizer.max([D)D
org.apache.commons.math3.optimization.direct.CMAESOptimizer.min(Lorg/apache/commons/math3/linear/RealMatrix;)D
org.apache.commons.math3.optimization.direct.CMAESOptimizer.min([D)D
org.apache.commons.math3.optimization.direct.CMAESOptimizer.optimizeInternal(ILorg/apache/commons/math3/analysis/MultivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointValuePair;
org.apache.commons.math3.optimization.direct.CMAESOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optimization/OptimizationData;)V
org.apache.commons.math3.optimization.direct.CMAESOptimizer.push([DD)V
org.apache.commons.math3.optimization.direct.CMAESOptimizer.randn(I)[D
org.apache.commons.math3.optimization.direct.CMAESOptimizer.randn1(II)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.optimization.direct.CMAESOptimizer.repmat(Lorg/apache/commons/math3/linear/RealMatrix;II)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.optimization.direct.CMAESOptimizer.reverse([I)[I
org.apache.commons.math3.optimization.direct.CMAESOptimizer.selectColumns(Lorg/apache/commons/math3/linear/RealMatrix;[I)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.optimization.direct.CMAESOptimizer.sortedIndices([D)[I
org.apache.commons.math3.optimization.direct.CMAESOptimizer.sqrt(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.optimization.direct.CMAESOptimizer.square(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.optimization.direct.CMAESOptimizer.sumRows(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.optimization.direct.CMAESOptimizer.times(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.optimization.direct.CMAESOptimizer.triu(Lorg/apache/commons/math3/linear/RealMatrix;I)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.optimization.direct.CMAESOptimizer.updateBD(D)V
org.apache.commons.math3.optimization.direct.CMAESOptimizer.updateCovariance(ZLorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;[ILorg/apache/commons/math3/linear/RealMatrix;)V
org.apache.commons.math3.optimization.direct.CMAESOptimizer.updateCovarianceDiagonalOnly(ZLorg/apache/commons/math3/linear/RealMatrix;)V
org.apache.commons.math3.optimization.direct.CMAESOptimizer.updateEvolutionPaths(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)Z
org.apache.commons.math3.optimization.direct.MultiDirectionalSimplex.evaluateNewSimplex(Lorg/apache/commons/math3/analysis/MultivariateFunction;[Lorg/apache/commons/math3/optimization/PointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math3/optimization/PointValuePair;
org.apache.commons.math3.optimization.direct.MultiDirectionalSimplex.iterate(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerBoundMapper.boundedToUnbounded(D)D
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerBoundMapper.unboundedToBounded(D)D
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.boundedToUnbounded(D)D
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(D)D
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$NoBoundsMapper.boundedToUnbounded(D)D
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$NoBoundsMapper.unboundedToBounded(D)D
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$UpperBoundMapper.boundedToUnbounded(D)D
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$UpperBoundMapper.unboundedToBounded(D)D
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.boundedToUnbounded([D)[D
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.unboundedToBounded([D)[D
org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.value([D)D
org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapter.value([D)D
org.apache.commons.math3.optimization.direct.NelderMeadSimplex.iterate(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V
org.apache.commons.math3.optimization.direct.PowellOptimizer$LineSearch$1.value(D)D
org.apache.commons.math3.optimization.direct.PowellOptimizer$LineSearch.search([D[D)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;
org.apache.commons.math3.optimization.direct.PowellOptimizer.doOptimize()Lorg/apache/commons/math3/optimization/PointValuePair;
org.apache.commons.math3.optimization.direct.PowellOptimizer.newPointAndDirection([D[DD)[[D
org.apache.commons.math3.optimization.direct.SimplexOptimizer$1.value([D)D
org.apache.commons.math3.optimization.direct.SimplexOptimizer$2.compare(Ljava/lang/Object;Ljava/lang/Object;)I
org.apache.commons.math3.optimization.direct.SimplexOptimizer$2.compare(Lorg/apache/commons/math3/optimization/PointValuePair;Lorg/apache/commons/math3/optimization/PointValuePair;)I
org.apache.commons.math3.optimization.direct.SimplexOptimizer.doOptimize()Lorg/apache/commons/math3/optimization/PointValuePair;
org.apache.commons.math3.optimization.direct.SimplexOptimizer.optimizeInternal(ILorg/apache/commons/math3/analysis/MultivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointValuePair;
org.apache.commons.math3.optimization.direct.SimplexOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optimization/OptimizationData;)V
org.apache.commons.math3.optimization.direct.SimplexOptimizer.setSimplex(Lorg/apache/commons/math3/optimization/direct/AbstractSimplex;)V
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction$1.value([D)[[D
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.access$100(Lorg/apache/commons/math3/optimization/fitting/CurveFitter$OldTheoreticalValuesFunction;)Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.jacobian()Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;
org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value([D)[D
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value([D)[D
org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value([Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)[Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;
org.apache.commons.math3.optimization.fitting.CurveFitter.access$000(Lorg/apache/commons/math3/optimization/fitting/CurveFitter;)Ljava/util/List;
org.apache.commons.math3.optimization.fitting.CurveFitter.addObservedPoint(DD)V
org.apache.commons.math3.optimization.fitting.CurveFitter.addObservedPoint(DDD)V
org.apache.commons.math3.optimization.fitting.CurveFitter.addObservedPoint(Lorg/apache/commons/math3/optimization/fitting/WeightedObservedPoint;)V
org.apache.commons.math3.optimization.fitting.CurveFitter.clearObservations()V
org.apache.commons.math3.optimization.fitting.CurveFitter.fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D
org.apache.commons.math3.optimization.fitting.CurveFitter.fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D
org.apache.commons.math3.optimization.fitting.CurveFitter.getObservations()[Lorg/apache/commons/math3/optimization/fitting/WeightedObservedPoint;
org.apache.commons.math3.optimization.fitting.GaussianFitter$1.gradient(D[D)[D
org.apache.commons.math3.optimization.fitting.GaussianFitter$1.value(D[D)D
org.apache.commons.math3.optimization.fitting.GaussianFitter$ParameterGuesser$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I
org.apache.commons.math3.optimization.fitting.GaussianFitter$ParameterGuesser$1.compare(Lorg/apache/commons/math3/optimization/fitting/WeightedObservedPoint;Lorg/apache/commons/math3/optimization/fitting/WeightedObservedPoint;)I
org.apache.commons.math3.optimization.fitting.GaussianFitter$ParameterGuesser.basicGuess([Lorg/apache/commons/math3/optimization/fitting/WeightedObservedPoint;)[D
org.apache.commons.math3.optimization.fitting.GaussianFitter$ParameterGuesser.findMaxY([Lorg/apache/commons/math3/optimization/fitting/WeightedObservedPoint;)I
org.apache.commons.math3.optimization.fitting.GaussianFitter$ParameterGuesser.getInterpolationPointsForY([Lorg/apache/commons/math3/optimization/fitting/WeightedObservedPoint;IID)[Lorg/apache/commons/math3/optimization/fitting/WeightedObservedPoint;
org.apache.commons.math3.optimization.fitting.GaussianFitter$ParameterGuesser.guess()[D
org.apache.commons.math3.optimization.fitting.GaussianFitter$ParameterGuesser.interpolateXAtY([Lorg/apache/commons/math3/optimization/fitting/WeightedObservedPoint;IID)D
org.apache.commons.math3.optimization.fitting.GaussianFitter$ParameterGuesser.isBetween(DDD)Z
org.apache.commons.math3.optimization.fitting.GaussianFitter$ParameterGuesser.sortObservations([Lorg/apache/commons/math3/optimization/fitting/WeightedObservedPoint;)[Lorg/apache/commons/math3/optimization/fitting/WeightedObservedPoint;
org.apache.commons.math3.optimization.fitting.GaussianFitter.fit()[D
org.apache.commons.math3.optimization.fitting.GaussianFitter.fit([D)[D
org.apache.commons.math3.optimization.fitting.HarmonicFitter$ParameterGuesser.guess()[D
org.apache.commons.math3.optimization.fitting.HarmonicFitter$ParameterGuesser.guessAOmega([Lorg/apache/commons/math3/optimization/fitting/WeightedObservedPoint;)[D
org.apache.commons.math3.optimization.fitting.HarmonicFitter$ParameterGuesser.guessPhi([Lorg/apache/commons/math3/optimization/fitting/WeightedObservedPoint;)D
org.apache.commons.math3.optimization.fitting.HarmonicFitter$ParameterGuesser.sortObservations([Lorg/apache/commons/math3/optimization/fitting/WeightedObservedPoint;)[Lorg/apache/commons/math3/optimization/fitting/WeightedObservedPoint;
org.apache.commons.math3.optimization.fitting.HarmonicFitter.fit()[D
org.apache.commons.math3.optimization.fitting.HarmonicFitter.fit([D)[D
org.apache.commons.math3.optimization.fitting.PolynomialFitter.fit()[D
org.apache.commons.math3.optimization.fitting.PolynomialFitter.fit(I[D)[D
org.apache.commons.math3.optimization.fitting.PolynomialFitter.fit([D)[D
org.apache.commons.math3.optimization.fitting.WeightedObservedPoint.getWeight()D
org.apache.commons.math3.optimization.fitting.WeightedObservedPoint.getX()D
org.apache.commons.math3.optimization.fitting.WeightedObservedPoint.getY()D
org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.computeCost([D)D
org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.computeResiduals([D)[D
org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.computeWeightedJacobian([D)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.getWeightSquareRoot()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.setCost(D)V
org.apache.commons.math3.optimization.general.AbstractScalarDifferentiableOptimizer.computeObjectiveGradient([D)[D
org.apache.commons.math3.optimization.general.ConjugateGradientFormula.valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/optimization/general/ConjugateGradientFormula;
org.apache.commons.math3.optimization.general.ConjugateGradientFormula.values()[Lorg/apache/commons/math3/optimization/general/ConjugateGradientFormula;
org.apache.commons.math3.optimization.general.GaussNewtonOptimizer.doOptimize()Lorg/apache/commons/math3/optimization/PointVectorValuePair;
org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer.determineLMDirection([D[D[D[D)V
org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer.determineLMParameter([DD[D[D[D[D)V
org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer.doOptimize()Lorg/apache/commons/math3/optimization/PointVectorValuePair;
org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer.qTy([D)V
org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer.qrDecomposition(Lorg/apache/commons/math3/linear/RealMatrix;)V
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$IdentityPreconditioner.precondition([D[D)[D
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(D)D
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer.access$000(Lorg/apache/commons/math3/optimization/general/NonLinearConjugateGradientOptimizer;)[D
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer.doOptimize()Lorg/apache/commons/math3/optimization/PointValuePair;
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer.findUpperBound(Lorg/apache/commons/math3/analysis/UnivariateFunction;DD)D
org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer.setInitialStep(D)V
org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer.getConstraints()Ljava/util/Collection;
org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer.getFunction()Lorg/apache/commons/math3/optimization/linear/LinearObjectiveFunction;
org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer.getGoalType()Lorg/apache/commons/math3/optimization/GoalType;
org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer.getIterations()I
org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer.getMaxIterations()I
org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer.incrementIterationsCounter()V
org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer.restrictToNonNegative()Z
org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer.setMaxIterations(I)V
org.apache.commons.math3.optimization.linear.LinearConstraint.equals(Ljava/lang/Object;)Z
org.apache.commons.math3.optimization.linear.LinearConstraint.getCoefficients()Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.optimization.linear.LinearConstraint.getRelationship()Lorg/apache/commons/math3/optimization/linear/Relationship;
org.apache.commons.math3.optimization.linear.LinearConstraint.getValue()D
org.apache.commons.math3.optimization.linear.LinearConstraint.hashCode()I
org.apache.commons.math3.optimization.linear.LinearConstraint.readObject(Ljava/io/ObjectInputStream;)V
org.apache.commons.math3.optimization.linear.LinearConstraint.writeObject(Ljava/io/ObjectOutputStream;)V
org.apache.commons.math3.optimization.linear.LinearObjectiveFunction.equals(Ljava/lang/Object;)Z
org.apache.commons.math3.optimization.linear.LinearObjectiveFunction.getCoefficients()Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.optimization.linear.LinearObjectiveFunction.getConstantTerm()D
org.apache.commons.math3.optimization.linear.LinearObjectiveFunction.getValue(Lorg/apache/commons/math3/linear/RealVector;)D
org.apache.commons.math3.optimization.linear.LinearObjectiveFunction.getValue([D)D
org.apache.commons.math3.optimization.linear.LinearObjectiveFunction.hashCode()I
org.apache.commons.math3.optimization.linear.LinearObjectiveFunction.readObject(Ljava/io/ObjectInputStream;)V
org.apache.commons.math3.optimization.linear.LinearObjectiveFunction.writeObject(Ljava/io/ObjectOutputStream;)V
org.apache.commons.math3.optimization.linear.Relationship.oppositeRelationship()Lorg/apache/commons/math3/optimization/linear/Relationship;
org.apache.commons.math3.optimization.linear.Relationship.toString()Ljava/lang/String;
org.apache.commons.math3.optimization.linear.Relationship.valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/optimization/linear/Relationship;
org.apache.commons.math3.optimization.linear.Relationship.values()[Lorg/apache/commons/math3/optimization/linear/Relationship;
org.apache.commons.math3.optimization.linear.SimplexSolver.doIteration(Lorg/apache/commons/math3/optimization/linear/SimplexTableau;)V
org.apache.commons.math3.optimization.linear.SimplexSolver.doOptimize()Lorg/apache/commons/math3/optimization/PointValuePair;
org.apache.commons.math3.optimization.linear.SimplexSolver.getPivotColumn(Lorg/apache/commons/math3/optimization/linear/SimplexTableau;)Ljava/lang/Integer;
org.apache.commons.math3.optimization.linear.SimplexSolver.getPivotRow(Lorg/apache/commons/math3/optimization/linear/SimplexTableau;I)Ljava/lang/Integer;
org.apache.commons.math3.optimization.linear.SimplexSolver.solvePhase1(Lorg/apache/commons/math3/optimization/linear/SimplexTableau;)V
org.apache.commons.math3.optimization.linear.SimplexTableau.copyArray([D[D)V
org.apache.commons.math3.optimization.linear.SimplexTableau.createTableau(Z)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.optimization.linear.SimplexTableau.divideRow(ID)V
org.apache.commons.math3.optimization.linear.SimplexTableau.dropPhase1Objective()V
org.apache.commons.math3.optimization.linear.SimplexTableau.equals(Ljava/lang/Object;)Z
org.apache.commons.math3.optimization.linear.SimplexTableau.getArtificialVariableOffset()I
org.apache.commons.math3.optimization.linear.SimplexTableau.getBasicRow(I)Ljava/lang/Integer;
org.apache.commons.math3.optimization.linear.SimplexTableau.getConstraintTypeCounts(Lorg/apache/commons/math3/optimization/linear/Relationship;)I
org.apache.commons.math3.optimization.linear.SimplexTableau.getData()[[D
org.apache.commons.math3.optimization.linear.SimplexTableau.getEntry(II)D
org.apache.commons.math3.optimization.linear.SimplexTableau.getHeight()I
org.apache.commons.math3.optimization.linear.SimplexTableau.getInvertedCoefficientSum(Lorg/apache/commons/math3/linear/RealVector;)D
org.apache.commons.math3.optimization.linear.SimplexTableau.getNumArtificialVariables()I
org.apache.commons.math3.optimization.linear.SimplexTableau.getNumDecisionVariables()I
org.apache.commons.math3.optimization.linear.SimplexTableau.getNumObjectiveFunctions()I
org.apache.commons.math3.optimization.linear.SimplexTableau.getNumSlackVariables()I
org.apache.commons.math3.optimization.linear.SimplexTableau.getOriginalNumDecisionVariables()I
org.apache.commons.math3.optimization.linear.SimplexTableau.getRhsOffset()I
org.apache.commons.math3.optimization.linear.SimplexTableau.getSlackVariableOffset()I
org.apache.commons.math3.optimization.linear.SimplexTableau.getSolution()Lorg/apache/commons/math3/optimization/PointValuePair;
org.apache.commons.math3.optimization.linear.SimplexTableau.getWidth()I
org.apache.commons.math3.optimization.linear.SimplexTableau.hashCode()I
org.apache.commons.math3.optimization.linear.SimplexTableau.initializeColumnLabels()V
org.apache.commons.math3.optimization.linear.SimplexTableau.isOptimal()Z
org.apache.commons.math3.optimization.linear.SimplexTableau.normalize(Lorg/apache/commons/math3/optimization/linear/LinearConstraint;)Lorg/apache/commons/math3/optimization/linear/LinearConstraint;
org.apache.commons.math3.optimization.linear.SimplexTableau.normalizeConstraints(Ljava/util/Collection;)Ljava/util/List;
org.apache.commons.math3.optimization.linear.SimplexTableau.readObject(Ljava/io/ObjectInputStream;)V
org.apache.commons.math3.optimization.linear.SimplexTableau.setEntry(IID)V
org.apache.commons.math3.optimization.linear.SimplexTableau.subtractRow(IID)V
org.apache.commons.math3.optimization.linear.SimplexTableau.writeObject(Ljava/io/ObjectOutputStream;)V
org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer.computeObjectiveValue(D)D
org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer.getConvergenceChecker()Lorg/apache/commons/math3/optimization/ConvergenceChecker;
org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer.getGoalType()Lorg/apache/commons/math3/optimization/GoalType;
org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer.getMax()D
org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer.getMin()D
org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer.getStartValue()D
org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer.optimize(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;
org.apache.commons.math3.optimization.univariate.BracketFinder.eval(Lorg/apache/commons/math3/analysis/UnivariateFunction;D)D
org.apache.commons.math3.optimization.univariate.BracketFinder.getEvaluations()I
org.apache.commons.math3.optimization.univariate.BracketFinder.getFHi()D
org.apache.commons.math3.optimization.univariate.BracketFinder.getFLo()D
org.apache.commons.math3.optimization.univariate.BracketFinder.getFMid()D
org.apache.commons.math3.optimization.univariate.BracketFinder.getHi()D
org.apache.commons.math3.optimization.univariate.BracketFinder.getLo()D
org.apache.commons.math3.optimization.univariate.BracketFinder.getMaxEvaluations()I
org.apache.commons.math3.optimization.univariate.BracketFinder.getMid()D
org.apache.commons.math3.optimization.univariate.BracketFinder.search(Lorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DD)V
org.apache.commons.math3.optimization.univariate.BrentOptimizer.best(Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Z)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;
org.apache.commons.math3.optimization.univariate.BrentOptimizer.doOptimize()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;
org.apache.commons.math3.optimization.univariate.SimpleUnivariateValueChecker.converged(ILjava/lang/Object;Ljava/lang/Object;)Z
org.apache.commons.math3.optimization.univariate.SimpleUnivariateValueChecker.converged(ILorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;)Z
org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I
org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer$1.compare(Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;)I
org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer.getConvergenceChecker()Lorg/apache/commons/math3/optimization/ConvergenceChecker;
org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer.getEvaluations()I
org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer.getMaxEvaluations()I
org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer.getOptima()[Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;
org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer.optimize(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;
org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer.optimize(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;
org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer.sortPairs(Lorg/apache/commons/math3/optimization/GoalType;)V
org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair.getPoint()D
org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair.getValue()D
org.apache.commons.math3.random.AbstractWell.setSeed(J)V
org.apache.commons.math3.random.AbstractWell.setSeed([I)V
org.apache.commons.math3.random.BitsStreamGenerator.clear()V
org.apache.commons.math3.random.BitsStreamGenerator.nextBytes([B)V
org.apache.commons.math3.random.BitsStreamGenerator.nextBytesFill([BII)V
org.apache.commons.math3.random.BitsStreamGenerator.nextDouble()D
org.apache.commons.math3.random.BitsStreamGenerator.nextGaussian()D
org.apache.commons.math3.random.BitsStreamGenerator.nextInt()I
org.apache.commons.math3.random.BitsStreamGenerator.nextInt(I)I
org.apache.commons.math3.random.BitsStreamGenerator.nextLong()J
org.apache.commons.math3.random.CorrelatedRandomVectorGenerator.getGenerator()Lorg/apache/commons/math3/random/NormalizedRandomGenerator;
org.apache.commons.math3.random.CorrelatedRandomVectorGenerator.getRank()I
org.apache.commons.math3.random.CorrelatedRandomVectorGenerator.getRootMatrix()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.random.CorrelatedRandomVectorGenerator.nextVector()[D
org.apache.commons.math3.random.EmpiricalDistribution$ArrayDataAdapter.computeBinStats()V
org.apache.commons.math3.random.EmpiricalDistribution$ArrayDataAdapter.computeStats()V
org.apache.commons.math3.random.EmpiricalDistribution$StreamDataAdapter.computeBinStats()V
org.apache.commons.math3.random.EmpiricalDistribution$StreamDataAdapter.computeStats()V
org.apache.commons.math3.random.EmpiricalDistribution.access$100(Lorg/apache/commons/math3/random/EmpiricalDistribution;D)I
org.apache.commons.math3.random.EmpiricalDistribution.access$200(Lorg/apache/commons/math3/random/EmpiricalDistribution;)Ljava/util/List;
org.apache.commons.math3.random.EmpiricalDistribution.access$300(Lorg/apache/commons/math3/random/EmpiricalDistribution;)Lorg/apache/commons/math3/stat/descriptive/SummaryStatistics;
org.apache.commons.math3.random.EmpiricalDistribution.access$302(Lorg/apache/commons/math3/random/EmpiricalDistribution;Lorg/apache/commons/math3/stat/descriptive/SummaryStatistics;)Lorg/apache/commons/math3/stat/descriptive/SummaryStatistics;
org.apache.commons.math3.random.EmpiricalDistribution.cumBinP(I)D
org.apache.commons.math3.random.EmpiricalDistribution.cumulativeProbability(D)D
org.apache.commons.math3.random.EmpiricalDistribution.density(D)D
org.apache.commons.math3.random.EmpiricalDistribution.fillBinStats(Lorg/apache/commons/math3/random/EmpiricalDistribution$DataAdapter;)V
org.apache.commons.math3.random.EmpiricalDistribution.findBin(D)I
org.apache.commons.math3.random.EmpiricalDistribution.getBinCount()I
org.apache.commons.math3.random.EmpiricalDistribution.getBinStats()Ljava/util/List;
org.apache.commons.math3.random.EmpiricalDistribution.getGeneratorUpperBounds()[D
org.apache.commons.math3.random.EmpiricalDistribution.getKernel(Lorg/apache/commons/math3/stat/descriptive/SummaryStatistics;)Lorg/apache/commons/math3/distribution/RealDistribution;
org.apache.commons.math3.random.EmpiricalDistribution.getNextValue()D
org.apache.commons.math3.random.EmpiricalDistribution.getNumericalMean()D
org.apache.commons.math3.random.EmpiricalDistribution.getNumericalVariance()D
org.apache.commons.math3.random.EmpiricalDistribution.getSampleStats()Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;
org.apache.commons.math3.random.EmpiricalDistribution.getSupportLowerBound()D
org.apache.commons.math3.random.EmpiricalDistribution.getSupportUpperBound()D
org.apache.commons.math3.random.EmpiricalDistribution.getUpperBounds()[D
org.apache.commons.math3.random.EmpiricalDistribution.inverseCumulativeProbability(D)D
org.apache.commons.math3.random.EmpiricalDistribution.isLoaded()Z
org.apache.commons.math3.random.EmpiricalDistribution.isSupportConnected()Z
org.apache.commons.math3.random.EmpiricalDistribution.isSupportLowerBoundInclusive()Z
org.apache.commons.math3.random.EmpiricalDistribution.isSupportUpperBoundInclusive()Z
org.apache.commons.math3.random.EmpiricalDistribution.k(D)Lorg/apache/commons/math3/distribution/RealDistribution;
org.apache.commons.math3.random.EmpiricalDistribution.kB(I)D
org.apache.commons.math3.random.EmpiricalDistribution.load(Ljava/io/File;)V
org.apache.commons.math3.random.EmpiricalDistribution.load(Ljava/net/URL;)V
org.apache.commons.math3.random.EmpiricalDistribution.load([D)V
org.apache.commons.math3.random.EmpiricalDistribution.pB(I)D
org.apache.commons.math3.random.EmpiricalDistribution.pBminus(I)D
org.apache.commons.math3.random.EmpiricalDistribution.probability(D)D
org.apache.commons.math3.random.EmpiricalDistribution.reSeed(J)V
org.apache.commons.math3.random.EmpiricalDistribution.reseedRandomGenerator(J)V
org.apache.commons.math3.random.GaussianRandomGenerator.nextNormalizedDouble()D
org.apache.commons.math3.random.HaltonSequenceGenerator.getNextIndex()I
org.apache.commons.math3.random.HaltonSequenceGenerator.nextVector()[D
org.apache.commons.math3.random.HaltonSequenceGenerator.scramble(IIII)I
org.apache.commons.math3.random.HaltonSequenceGenerator.skipTo(I)[D
org.apache.commons.math3.random.ISAACRandom.initState()V
org.apache.commons.math3.random.ISAACRandom.isaac()V
org.apache.commons.math3.random.ISAACRandom.isaac2()V
org.apache.commons.math3.random.ISAACRandom.isaac3()V
org.apache.commons.math3.random.ISAACRandom.next(I)I
org.apache.commons.math3.random.ISAACRandom.setSeed(I)V
org.apache.commons.math3.random.ISAACRandom.setSeed(J)V
org.apache.commons.math3.random.ISAACRandom.setSeed([I)V
org.apache.commons.math3.random.ISAACRandom.setState(I)V
org.apache.commons.math3.random.ISAACRandom.shuffle()V
org.apache.commons.math3.random.JDKRandomGenerator.setSeed(I)V
org.apache.commons.math3.random.JDKRandomGenerator.setSeed([I)V
org.apache.commons.math3.random.MersenneTwister.next(I)I
org.apache.commons.math3.random.MersenneTwister.setSeed(I)V
org.apache.commons.math3.random.MersenneTwister.setSeed(J)V
org.apache.commons.math3.random.MersenneTwister.setSeed([I)V
org.apache.commons.math3.random.RandomAdaptor.nextBoolean()Z
org.apache.commons.math3.random.RandomAdaptor.nextBytes([B)V
org.apache.commons.math3.random.RandomAdaptor.nextDouble()D
org.apache.commons.math3.random.RandomAdaptor.nextFloat()F
org.apache.commons.math3.random.RandomAdaptor.nextGaussian()D
org.apache.commons.math3.random.RandomAdaptor.nextInt()I
org.apache.commons.math3.random.RandomAdaptor.nextInt(I)I
org.apache.commons.math3.random.RandomAdaptor.nextLong()J
org.apache.commons.math3.random.RandomAdaptor.setSeed(I)V
org.apache.commons.math3.random.RandomAdaptor.setSeed(J)V
org.apache.commons.math3.random.RandomAdaptor.setSeed([I)V
org.apache.commons.math3.random.RandomDataGenerator.getRandomGenerator()Lorg/apache/commons/math3/random/RandomGenerator;
org.apache.commons.math3.random.RandomDataGenerator.getSecRan()Lorg/apache/commons/math3/random/RandomGenerator;
org.apache.commons.math3.random.RandomDataGenerator.initRan()V
org.apache.commons.math3.random.RandomDataGenerator.nextBeta(DD)D
org.apache.commons.math3.random.RandomDataGenerator.nextBinomial(ID)I
org.apache.commons.math3.random.RandomDataGenerator.nextCauchy(DD)D
org.apache.commons.math3.random.RandomDataGenerator.nextChiSquare(D)D
org.apache.commons.math3.random.RandomDataGenerator.nextExponential(D)D
org.apache.commons.math3.random.RandomDataGenerator.nextF(DD)D
org.apache.commons.math3.random.RandomDataGenerator.nextGamma(DD)D
org.apache.commons.math3.random.RandomDataGenerator.nextGaussian(DD)D
org.apache.commons.math3.random.RandomDataGenerator.nextHexString(I)Ljava/lang/String;
org.apache.commons.math3.random.RandomDataGenerator.nextHypergeometric(III)I
org.apache.commons.math3.random.RandomDataGenerator.nextInt(II)I
org.apache.commons.math3.random.RandomDataGenerator.nextLong(JJ)J
org.apache.commons.math3.random.RandomDataGenerator.nextLong(Lorg/apache/commons/math3/random/RandomGenerator;J)J
org.apache.commons.math3.random.RandomDataGenerator.nextPascal(ID)I
org.apache.commons.math3.random.RandomDataGenerator.nextPermutation(II)[I
org.apache.commons.math3.random.RandomDataGenerator.nextPoisson(D)J
org.apache.commons.math3.random.RandomDataGenerator.nextSample(Ljava/util/Collection;I)[Ljava/lang/Object;
org.apache.commons.math3.random.RandomDataGenerator.nextSecureHexString(I)Ljava/lang/String;
org.apache.commons.math3.random.RandomDataGenerator.nextSecureInt(II)I
org.apache.commons.math3.random.RandomDataGenerator.nextSecureLong(JJ)J
org.apache.commons.math3.random.RandomDataGenerator.nextT(D)D
org.apache.commons.math3.random.RandomDataGenerator.nextUniform(DD)D
org.apache.commons.math3.random.RandomDataGenerator.nextUniform(DDZ)D
org.apache.commons.math3.random.RandomDataGenerator.nextWeibull(DD)D
org.apache.commons.math3.random.RandomDataGenerator.nextZipf(ID)I
org.apache.commons.math3.random.RandomDataGenerator.reSeed()V
org.apache.commons.math3.random.RandomDataGenerator.reSeed(J)V
org.apache.commons.math3.random.RandomDataGenerator.reSeedSecure()V
org.apache.commons.math3.random.RandomDataGenerator.reSeedSecure(J)V
org.apache.commons.math3.random.RandomDataGenerator.setSecureAlgorithm(Ljava/lang/String;Ljava/lang/String;)V
org.apache.commons.math3.random.RandomDataImpl.getDelegate()Lorg/apache/commons/math3/random/RandomDataGenerator;
org.apache.commons.math3.random.RandomDataImpl.nextBeta(DD)D
org.apache.commons.math3.random.RandomDataImpl.nextBinomial(ID)I
org.apache.commons.math3.random.RandomDataImpl.nextCauchy(DD)D
org.apache.commons.math3.random.RandomDataImpl.nextChiSquare(D)D
org.apache.commons.math3.random.RandomDataImpl.nextExponential(D)D
org.apache.commons.math3.random.RandomDataImpl.nextF(DD)D
org.apache.commons.math3.random.RandomDataImpl.nextGamma(DD)D
org.apache.commons.math3.random.RandomDataImpl.nextGaussian(DD)D
org.apache.commons.math3.random.RandomDataImpl.nextHexString(I)Ljava/lang/String;
org.apache.commons.math3.random.RandomDataImpl.nextHypergeometric(III)I
org.apache.commons.math3.random.RandomDataImpl.nextInt(II)I
org.apache.commons.math3.random.RandomDataImpl.nextInversionDeviate(Lorg/apache/commons/math3/distribution/IntegerDistribution;)I
org.apache.commons.math3.random.RandomDataImpl.nextInversionDeviate(Lorg/apache/commons/math3/distribution/RealDistribution;)D
org.apache.commons.math3.random.RandomDataImpl.nextLong(JJ)J
org.apache.commons.math3.random.RandomDataImpl.nextPascal(ID)I
org.apache.commons.math3.random.RandomDataImpl.nextPermutation(II)[I
org.apache.commons.math3.random.RandomDataImpl.nextPoisson(D)J
org.apache.commons.math3.random.RandomDataImpl.nextSample(Ljava/util/Collection;I)[Ljava/lang/Object;
org.apache.commons.math3.random.RandomDataImpl.nextSecureHexString(I)Ljava/lang/String;
org.apache.commons.math3.random.RandomDataImpl.nextSecureInt(II)I
org.apache.commons.math3.random.RandomDataImpl.nextSecureLong(JJ)J
org.apache.commons.math3.random.RandomDataImpl.nextT(D)D
org.apache.commons.math3.random.RandomDataImpl.nextUniform(DD)D
org.apache.commons.math3.random.RandomDataImpl.nextUniform(DDZ)D
org.apache.commons.math3.random.RandomDataImpl.nextWeibull(DD)D
org.apache.commons.math3.random.RandomDataImpl.nextZipf(ID)I
org.apache.commons.math3.random.RandomDataImpl.reSeed()V
org.apache.commons.math3.random.RandomDataImpl.reSeed(J)V
org.apache.commons.math3.random.RandomDataImpl.reSeedSecure()V
org.apache.commons.math3.random.RandomDataImpl.reSeedSecure(J)V
org.apache.commons.math3.random.RandomDataImpl.setSecureAlgorithm(Ljava/lang/String;Ljava/lang/String;)V
org.apache.commons.math3.random.RandomGeneratorFactory$1.nextBoolean()Z
org.apache.commons.math3.random.RandomGeneratorFactory$1.nextBytes([B)V
org.apache.commons.math3.random.RandomGeneratorFactory$1.nextDouble()D
org.apache.commons.math3.random.RandomGeneratorFactory$1.nextFloat()F
org.apache.commons.math3.random.RandomGeneratorFactory$1.nextGaussian()D
org.apache.commons.math3.random.RandomGeneratorFactory$1.nextInt()I
org.apache.commons.math3.random.RandomGeneratorFactory$1.nextInt(I)I
org.apache.commons.math3.random.RandomGeneratorFactory$1.nextLong()J
org.apache.commons.math3.random.RandomGeneratorFactory$1.setSeed(I)V
org.apache.commons.math3.random.RandomGeneratorFactory$1.setSeed(J)V
org.apache.commons.math3.random.RandomGeneratorFactory$1.setSeed([I)V
org.apache.commons.math3.random.RandomGeneratorFactory.convertToLong([I)J
org.apache.commons.math3.random.RandomGeneratorFactory.createRandomGenerator(Ljava/util/Random;)Lorg/apache/commons/math3/random/RandomGenerator;
org.apache.commons.math3.random.SobolSequenceGenerator.getNextIndex()I
org.apache.commons.math3.random.SobolSequenceGenerator.initDirectionVector(II[I)V
org.apache.commons.math3.random.SobolSequenceGenerator.initFromStream(Ljava/io/InputStream;)I
org.apache.commons.math3.random.SobolSequenceGenerator.nextVector()[D
org.apache.commons.math3.random.SobolSequenceGenerator.skipTo(I)[D
org.apache.commons.math3.random.StableRandomGenerator.nextNormalizedDouble()D
org.apache.commons.math3.random.SynchronizedRandomGenerator.nextBoolean()Z
org.apache.commons.math3.random.SynchronizedRandomGenerator.nextBytes([B)V
org.apache.commons.math3.random.SynchronizedRandomGenerator.nextDouble()D
org.apache.commons.math3.random.SynchronizedRandomGenerator.nextFloat()F
org.apache.commons.math3.random.SynchronizedRandomGenerator.nextGaussian()D
org.apache.commons.math3.random.SynchronizedRandomGenerator.nextInt()I
org.apache.commons.math3.random.SynchronizedRandomGenerator.nextInt(I)I
org.apache.commons.math3.random.SynchronizedRandomGenerator.nextLong()J
org.apache.commons.math3.random.SynchronizedRandomGenerator.setSeed(I)V
org.apache.commons.math3.random.SynchronizedRandomGenerator.setSeed(J)V
org.apache.commons.math3.random.SynchronizedRandomGenerator.setSeed([I)V
org.apache.commons.math3.random.UncorrelatedRandomVectorGenerator.nextVector()[D
org.apache.commons.math3.random.UniformRandomGenerator.nextNormalizedDouble()D
org.apache.commons.math3.random.UnitSphereRandomVectorGenerator.nextVector()[D
org.apache.commons.math3.random.ValueServer.closeReplayFile()V
org.apache.commons.math3.random.ValueServer.computeDistribution()V
org.apache.commons.math3.random.ValueServer.computeDistribution(I)V
org.apache.commons.math3.random.ValueServer.fill(I)[D
org.apache.commons.math3.random.ValueServer.fill([D)V
org.apache.commons.math3.random.ValueServer.getEmpiricalDistribution()Lorg/apache/commons/math3/random/EmpiricalDistribution;
org.apache.commons.math3.random.ValueServer.getMode()I
org.apache.commons.math3.random.ValueServer.getMu()D
org.apache.commons.math3.random.ValueServer.getNext()D
org.apache.commons.math3.random.ValueServer.getNextDigest()D
org.apache.commons.math3.random.ValueServer.getNextExponential()D
org.apache.commons.math3.random.ValueServer.getNextGaussian()D
org.apache.commons.math3.random.ValueServer.getNextReplay()D
org.apache.commons.math3.random.ValueServer.getNextUniform()D
org.apache.commons.math3.random.ValueServer.getSigma()D
org.apache.commons.math3.random.ValueServer.getValuesFileURL()Ljava/net/URL;
org.apache.commons.math3.random.ValueServer.reSeed(J)V
org.apache.commons.math3.random.ValueServer.resetReplayFile()V
org.apache.commons.math3.random.ValueServer.setMode(I)V
org.apache.commons.math3.random.ValueServer.setMu(D)V
org.apache.commons.math3.random.ValueServer.setSigma(D)V
org.apache.commons.math3.random.ValueServer.setValuesFileURL(Ljava/lang/String;)V
org.apache.commons.math3.random.ValueServer.setValuesFileURL(Ljava/net/URL;)V
org.apache.commons.math3.random.Well1024a.next(I)I
org.apache.commons.math3.random.Well19937a.next(I)I
org.apache.commons.math3.random.Well19937c.next(I)I
org.apache.commons.math3.random.Well44497a.next(I)I
org.apache.commons.math3.random.Well44497b.next(I)I
org.apache.commons.math3.random.Well512a.next(I)I
org.apache.commons.math3.special.BesselJ$BesselJResult.access$000(Lorg/apache/commons/math3/special/BesselJ$BesselJResult;)I
org.apache.commons.math3.special.BesselJ$BesselJResult.access$100(Lorg/apache/commons/math3/special/BesselJ$BesselJResult;)[D
org.apache.commons.math3.special.BesselJ$BesselJResult.getVals()[D
org.apache.commons.math3.special.BesselJ$BesselJResult.getnVals()I
org.apache.commons.math3.special.BesselJ.value(D)D
org.apache.commons.math3.special.Beta$1.getA(ID)D
org.apache.commons.math3.special.Beta$1.getB(ID)D
org.apache.commons.math3.special.Gamma$1.getA(ID)D
org.apache.commons.math3.special.Gamma$1.getB(ID)D
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(Ljava/lang/Comparable;Ljava/lang/Comparable;)I
org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I
org.apache.commons.math3.stat.Frequency.addValue(C)V
org.apache.commons.math3.stat.Frequency.addValue(I)V
org.apache.commons.math3.stat.Frequency.addValue(J)V
org.apache.commons.math3.stat.Frequency.addValue(Ljava/lang/Comparable;)V
org.apache.commons.math3.stat.Frequency.clear()V
org.apache.commons.math3.stat.Frequency.entrySetIterator()Ljava/util/Iterator;
org.apache.commons.math3.stat.Frequency.equals(Ljava/lang/Object;)Z
org.apache.commons.math3.stat.Frequency.getCount(C)J
org.apache.commons.math3.stat.Frequency.getCount(I)J
org.apache.commons.math3.stat.Frequency.getCount(J)J
org.apache.commons.math3.stat.Frequency.getCount(Ljava/lang/Comparable;)J
org.apache.commons.math3.stat.Frequency.getCumFreq(C)J
org.apache.commons.math3.stat.Frequency.getCumFreq(I)J
org.apache.commons.math3.stat.Frequency.getCumFreq(J)J
org.apache.commons.math3.stat.Frequency.getCumFreq(Ljava/lang/Comparable;)J
org.apache.commons.math3.stat.Frequency.getCumPct(C)D
org.apache.commons.math3.stat.Frequency.getCumPct(I)D
org.apache.commons.math3.stat.Frequency.getCumPct(J)D
org.apache.commons.math3.stat.Frequency.getCumPct(Ljava/lang/Comparable;)D
org.apache.commons.math3.stat.Frequency.getMode()Ljava/util/List;
org.apache.commons.math3.stat.Frequency.getPct(C)D
org.apache.commons.math3.stat.Frequency.getPct(I)D
org.apache.commons.math3.stat.Frequency.getPct(J)D
org.apache.commons.math3.stat.Frequency.getPct(Ljava/lang/Comparable;)D
org.apache.commons.math3.stat.Frequency.getSumFreq()J
org.apache.commons.math3.stat.Frequency.getUniqueCount()I
org.apache.commons.math3.stat.Frequency.hashCode()I
org.apache.commons.math3.stat.Frequency.incrementValue(CJ)V
org.apache.commons.math3.stat.Frequency.incrementValue(IJ)V
org.apache.commons.math3.stat.Frequency.incrementValue(JJ)V
org.apache.commons.math3.stat.Frequency.incrementValue(Ljava/lang/Comparable;J)V
org.apache.commons.math3.stat.Frequency.merge(Ljava/util/Collection;)V
org.apache.commons.math3.stat.Frequency.merge(Lorg/apache/commons/math3/stat/Frequency;)V
org.apache.commons.math3.stat.Frequency.toString()Ljava/lang/String;
org.apache.commons.math3.stat.Frequency.valuesIterator()Ljava/util/Iterator;
org.apache.commons.math3.stat.StatUtils.geometricMean([D)D
org.apache.commons.math3.stat.StatUtils.geometricMean([DII)D
org.apache.commons.math3.stat.StatUtils.getMode([DII)[D
org.apache.commons.math3.stat.StatUtils.max([D)D
org.apache.commons.math3.stat.StatUtils.max([DII)D
org.apache.commons.math3.stat.StatUtils.mean([D)D
org.apache.commons.math3.stat.StatUtils.mean([DII)D
org.apache.commons.math3.stat.StatUtils.meanDifference([D[D)D
org.apache.commons.math3.stat.StatUtils.min([D)D
org.apache.commons.math3.stat.StatUtils.min([DII)D
org.apache.commons.math3.stat.StatUtils.mode([D)[D
org.apache.commons.math3.stat.StatUtils.mode([DII)[D
org.apache.commons.math3.stat.StatUtils.normalize([D)[D
org.apache.commons.math3.stat.StatUtils.percentile([DD)D
org.apache.commons.math3.stat.StatUtils.percentile([DIID)D
org.apache.commons.math3.stat.StatUtils.populationVariance([D)D
org.apache.commons.math3.stat.StatUtils.populationVariance([DD)D
org.apache.commons.math3.stat.StatUtils.populationVariance([DDII)D
org.apache.commons.math3.stat.StatUtils.populationVariance([DII)D
org.apache.commons.math3.stat.StatUtils.product([D)D
org.apache.commons.math3.stat.StatUtils.product([DII)D
org.apache.commons.math3.stat.StatUtils.sum([D)D
org.apache.commons.math3.stat.StatUtils.sum([DII)D
org.apache.commons.math3.stat.StatUtils.sumDifference([D[D)D
org.apache.commons.math3.stat.StatUtils.sumLog([D)D
org.apache.commons.math3.stat.StatUtils.sumLog([DII)D
org.apache.commons.math3.stat.StatUtils.sumSq([D)D
org.apache.commons.math3.stat.StatUtils.sumSq([DII)D
org.apache.commons.math3.stat.StatUtils.variance([D)D
org.apache.commons.math3.stat.StatUtils.variance([DD)D
org.apache.commons.math3.stat.StatUtils.variance([DDII)D
org.apache.commons.math3.stat.StatUtils.variance([DII)D
org.apache.commons.math3.stat.StatUtils.varianceDifference([D[DD)D
org.apache.commons.math3.stat.clustering.Cluster.addPoint(Lorg/apache/commons/math3/stat/clustering/Clusterable;)V
org.apache.commons.math3.stat.clustering.Cluster.getCenter()Lorg/apache/commons/math3/stat/clustering/Clusterable;
org.apache.commons.math3.stat.clustering.Cluster.getPoints()Ljava/util/List;
org.apache.commons.math3.stat.clustering.DBSCANClusterer$PointStatus.valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/stat/clustering/DBSCANClusterer$PointStatus;
org.apache.commons.math3.stat.clustering.DBSCANClusterer$PointStatus.values()[Lorg/apache/commons/math3/stat/clustering/DBSCANClusterer$PointStatus;
org.apache.commons.math3.stat.clustering.DBSCANClusterer.cluster(Ljava/util/Collection;)Ljava/util/List;
org.apache.commons.math3.stat.clustering.DBSCANClusterer.expandCluster(Lorg/apache/commons/math3/stat/clustering/Cluster;Lorg/apache/commons/math3/stat/clustering/Clusterable;Ljava/util/List;Ljava/util/Collection;Ljava/util/Map;)Lorg/apache/commons/math3/stat/clustering/Cluster;
org.apache.commons.math3.stat.clustering.DBSCANClusterer.getEps()D
org.apache.commons.math3.stat.clustering.DBSCANClusterer.getMinPts()I
org.apache.commons.math3.stat.clustering.DBSCANClusterer.getNeighbors(Lorg/apache/commons/math3/stat/clustering/Clusterable;Ljava/util/Collection;)Ljava/util/List;
org.apache.commons.math3.stat.clustering.DBSCANClusterer.merge(Ljava/util/List;Ljava/util/List;)Ljava/util/List;
org.apache.commons.math3.stat.clustering.EuclideanDoublePoint.centroidOf(Ljava/util/Collection;)Ljava/lang/Object;
org.apache.commons.math3.stat.clustering.EuclideanDoublePoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math3/stat/clustering/EuclideanDoublePoint;
org.apache.commons.math3.stat.clustering.EuclideanDoublePoint.distanceFrom(Ljava/lang/Object;)D
org.apache.commons.math3.stat.clustering.EuclideanDoublePoint.distanceFrom(Lorg/apache/commons/math3/stat/clustering/EuclideanDoublePoint;)D
org.apache.commons.math3.stat.clustering.EuclideanDoublePoint.equals(Ljava/lang/Object;)Z
org.apache.commons.math3.stat.clustering.EuclideanDoublePoint.getPoint()[D
org.apache.commons.math3.stat.clustering.EuclideanDoublePoint.hashCode()I
org.apache.commons.math3.stat.clustering.EuclideanDoublePoint.toString()Ljava/lang/String;
org.apache.commons.math3.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Ljava/lang/Object;
org.apache.commons.math3.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math3/stat/clustering/EuclideanIntegerPoint;
org.apache.commons.math3.stat.clustering.EuclideanIntegerPoint.distanceFrom(Ljava/lang/Object;)D
org.apache.commons.math3.stat.clustering.EuclideanIntegerPoint.distanceFrom(Lorg/apache/commons/math3/stat/clustering/EuclideanIntegerPoint;)D
org.apache.commons.math3.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z
org.apache.commons.math3.stat.clustering.EuclideanIntegerPoint.getPoint()[I
org.apache.commons.math3.stat.clustering.EuclideanIntegerPoint.hashCode()I
org.apache.commons.math3.stat.clustering.EuclideanIntegerPoint.toString()Ljava/lang/String;
org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy.valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer$EmptyClusterStrategy;
org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy.values()[Lorg/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer$EmptyClusterStrategy;
org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer.assignPointsToClusters(Ljava/util/List;Ljava/util/Collection;[I)I
org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer.cluster(Ljava/util/Collection;II)Ljava/util/List;
org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer.cluster(Ljava/util/Collection;III)Ljava/util/List;
org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer.getFarthestPoint(Ljava/util/Collection;)Lorg/apache/commons/math3/stat/clustering/Clusterable;
org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer.getNearestCluster(Ljava/util/Collection;Lorg/apache/commons/math3/stat/clustering/Clusterable;)I
org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer.getPointFromLargestNumberCluster(Ljava/util/Collection;)Lorg/apache/commons/math3/stat/clustering/Clusterable;
org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer.getPointFromLargestVarianceCluster(Ljava/util/Collection;)Lorg/apache/commons/math3/stat/clustering/Clusterable;
org.apache.commons.math3.stat.correlation.Covariance.checkSufficientData(Lorg/apache/commons/math3/linear/RealMatrix;)V
org.apache.commons.math3.stat.correlation.Covariance.computeCovarianceMatrix(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.stat.correlation.Covariance.computeCovarianceMatrix(Lorg/apache/commons/math3/linear/RealMatrix;Z)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.stat.correlation.Covariance.computeCovarianceMatrix([[D)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.stat.correlation.Covariance.computeCovarianceMatrix([[DZ)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.stat.correlation.Covariance.covariance([D[D)D
org.apache.commons.math3.stat.correlation.Covariance.covariance([D[DZ)D
org.apache.commons.math3.stat.correlation.Covariance.getCovarianceMatrix()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.stat.correlation.Covariance.getN()I
org.apache.commons.math3.stat.correlation.KendallsCorrelation$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I
org.apache.commons.math3.stat.correlation.KendallsCorrelation$1.compare(Lorg/apache/commons/math3/util/Pair;Lorg/apache/commons/math3/util/Pair;)I
org.apache.commons.math3.stat.correlation.KendallsCorrelation.computeCorrelationMatrix(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.stat.correlation.KendallsCorrelation.computeCorrelationMatrix([[D)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.stat.correlation.KendallsCorrelation.correlation([D[D)D
org.apache.commons.math3.stat.correlation.KendallsCorrelation.getCorrelationMatrix()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.stat.correlation.PearsonsCorrelation.checkSufficientData(Lorg/apache/commons/math3/linear/RealMatrix;)V
org.apache.commons.math3.stat.correlation.PearsonsCorrelation.computeCorrelationMatrix(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.stat.correlation.PearsonsCorrelation.computeCorrelationMatrix([[D)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.stat.correlation.PearsonsCorrelation.correlation([D[D)D
org.apache.commons.math3.stat.correlation.PearsonsCorrelation.covarianceToCorrelation(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.stat.correlation.PearsonsCorrelation.getCorrelationMatrix()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.stat.correlation.PearsonsCorrelation.getCorrelationPValues()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.stat.correlation.PearsonsCorrelation.getCorrelationStandardErrors()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.stat.correlation.SpearmansCorrelation.computeCorrelationMatrix(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.stat.correlation.SpearmansCorrelation.computeCorrelationMatrix([[D)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.stat.correlation.SpearmansCorrelation.correlation([D[D)D
org.apache.commons.math3.stat.correlation.SpearmansCorrelation.getCorrelationMatrix()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.stat.correlation.SpearmansCorrelation.getNaNPositions([D)Ljava/util/List;
org.apache.commons.math3.stat.correlation.SpearmansCorrelation.getRankCorrelation()Lorg/apache/commons/math3/stat/correlation/PearsonsCorrelation;
org.apache.commons.math3.stat.correlation.SpearmansCorrelation.rankTransform(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.stat.correlation.SpearmansCorrelation.removeValues([DLjava/util/Set;)[D
org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance.append(Lorg/apache/commons/math3/stat/correlation/StorelessBivariateCovariance;)V
org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance.getN()D
org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance.getResult()D
org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance.increment(DD)V
org.apache.commons.math3.stat.correlation.StorelessCovariance.append(Lorg/apache/commons/math3/stat/correlation/StorelessCovariance;)V
org.apache.commons.math3.stat.correlation.StorelessCovariance.getCovariance(II)D
org.apache.commons.math3.stat.correlation.StorelessCovariance.getCovarianceMatrix()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.stat.correlation.StorelessCovariance.getData()[[D
org.apache.commons.math3.stat.correlation.StorelessCovariance.getElement(II)Lorg/apache/commons/math3/stat/correlation/StorelessBivariateCovariance;
org.apache.commons.math3.stat.correlation.StorelessCovariance.getN()I
org.apache.commons.math3.stat.correlation.StorelessCovariance.increment([D)V
org.apache.commons.math3.stat.correlation.StorelessCovariance.indexOf(II)I
org.apache.commons.math3.stat.correlation.StorelessCovariance.initializeMatrix(Z)V
org.apache.commons.math3.stat.correlation.StorelessCovariance.setElement(IILorg/apache/commons/math3/stat/correlation/StorelessBivariateCovariance;)V
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate([D)D
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate([DII)D
org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.incrementAll([DII)V
org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.getDataRef()[D
org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.setData([D)V
org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.setData([DII)V
org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.test([DII)Z
org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.test([DIIZ)Z
org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.test([D[DII)Z
org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.test([D[DIIZ)Z
org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics$AggregatingSummaryStatistics.addValue(D)V
org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics$AggregatingSummaryStatistics.equals(Ljava/lang/Object;)Z
org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics$AggregatingSummaryStatistics.hashCode()I
org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics.createContributingStatistics()Lorg/apache/commons/math3/stat/descriptive/SummaryStatistics;
org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics.getGeometricMean()D
org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics.getMax()D
org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics.getMean()D
org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics.getMin()D
org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics.getN()J
org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics.getSecondMoment()D
org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics.getStandardDeviation()D
org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics.getSum()D
org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics.getSumOfLogs()D
org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics.getSummary()Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;
org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics.getSumsq()D
org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics.getVariance()D
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.addValue(D)V
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.apply(Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;)D
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.clear()V
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.copy()Lorg/apache/commons/math3/stat/descriptive/DescriptiveStatistics;
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.copy(Lorg/apache/commons/math3/stat/descriptive/DescriptiveStatistics;Lorg/apache/commons/math3/stat/descriptive/DescriptiveStatistics;)V
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getElement(I)D
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getGeometricMean()D
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getGeometricMeanImpl()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getKurtosis()D
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getKurtosisImpl()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getMax()D
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getMaxImpl()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getMean()D
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getMeanImpl()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getMin()D
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getMinImpl()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getN()J
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getPercentile(D)D
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getPercentileImpl()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getPopulationVariance()D
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getQuadraticMean()D
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getSkewness()D
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getSkewnessImpl()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getSortedValues()[D
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getStandardDeviation()D
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getSum()D
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getSumImpl()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getSumsq()D
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getSumsqImpl()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getValues()[D
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getVariance()D
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getVarianceImpl()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getWindowSize()I
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.removeMostRecentValue()V
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.replaceMostRecentValue(D)D
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.setGeometricMeanImpl(Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;)V
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.setKurtosisImpl(Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;)V
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.setMaxImpl(Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;)V
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.setMeanImpl(Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;)V
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.setMinImpl(Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;)V
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.setPercentileImpl(Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;)V
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.setSkewnessImpl(Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;)V
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.setSumImpl(Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;)V
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.setSumsqImpl(Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;)V
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.setVarianceImpl(Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;)V
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.setWindowSize(I)V
org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.toString()Ljava/lang/String;
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.addValue([D)V
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.append(Ljava/lang/StringBuilder;[DLjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.checkDimension(I)V
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.checkEmpty()V
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.clear()V
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.equals(Ljava/lang/Object;)Z
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getCovariance()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getDimension()I
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getGeoMeanImpl()[Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getGeometricMean()[D
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getMax()[D
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getMaxImpl()[Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getMean()[D
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getMeanImpl()[Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getMin()[D
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getMinImpl()[Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getN()J
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getResults([Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)[D
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getStandardDeviation()[D
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getSum()[D
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getSumImpl()[Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getSumLog()[D
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getSumLogImpl()[Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getSumSq()[D
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getSumsqImpl()[Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.hashCode()I
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.setGeoMeanImpl([Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.setImpl([Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;[Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.setMaxImpl([Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.setMeanImpl([Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.setMinImpl([Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.setSumImpl([Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.setSumLogImpl([Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.setSumsqImpl([Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.toString()Ljava/lang/String;
org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.equals(Ljava/lang/Object;)Z
org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.getMax()D
org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.getMean()D
org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.getMin()D
org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.getN()J
org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.getStandardDeviation()D
org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.getSum()D
org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.getVariance()D
org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.hashCode()I
org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.toString()Ljava/lang/String;
org.apache.commons.math3.stat.descriptive.SummaryStatistics.addValue(D)V
org.apache.commons.math3.stat.descriptive.SummaryStatistics.checkEmpty()V
org.apache.commons.math3.stat.descriptive.SummaryStatistics.clear()V
org.apache.commons.math3.stat.descriptive.SummaryStatistics.copy()Lorg/apache/commons/math3/stat/descriptive/SummaryStatistics;
org.apache.commons.math3.stat.descriptive.SummaryStatistics.copy(Lorg/apache/commons/math3/stat/descriptive/SummaryStatistics;Lorg/apache/commons/math3/stat/descriptive/SummaryStatistics;)V
org.apache.commons.math3.stat.descriptive.SummaryStatistics.equals(Ljava/lang/Object;)Z
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getGeoMeanImpl()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getGeometricMean()D
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMax()D
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMaxImpl()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMean()D
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMeanImpl()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMin()D
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMinImpl()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getN()J
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getPopulationVariance()D
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getQuadraticMean()D
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSecondMoment()D
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getStandardDeviation()D
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSum()D
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSumImpl()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSumLogImpl()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSumOfLogs()D
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSummary()Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSumsq()D
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSumsqImpl()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getVariance()D
org.apache.commons.math3.stat.descriptive.SummaryStatistics.getVarianceImpl()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
org.apache.commons.math3.stat.descriptive.SummaryStatistics.hashCode()I
org.apache.commons.math3.stat.descriptive.SummaryStatistics.setGeoMeanImpl(Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
org.apache.commons.math3.stat.descriptive.SummaryStatistics.setMaxImpl(Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
org.apache.commons.math3.stat.descriptive.SummaryStatistics.setMeanImpl(Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
org.apache.commons.math3.stat.descriptive.SummaryStatistics.setMinImpl(Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
org.apache.commons.math3.stat.descriptive.SummaryStatistics.setSumImpl(Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
org.apache.commons.math3.stat.descriptive.SummaryStatistics.setSumLogImpl(Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
org.apache.commons.math3.stat.descriptive.SummaryStatistics.setSumsqImpl(Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
org.apache.commons.math3.stat.descriptive.SummaryStatistics.setVarianceImpl(Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
org.apache.commons.math3.stat.descriptive.SummaryStatistics.toString()Ljava/lang/String;
org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics.addValue(D)V
org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics.apply(Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;)D
org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics.clear()V
org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics.copy()Lorg/apache/commons/math3/stat/descriptive/DescriptiveStatistics;
org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics.copy()Lorg/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatistics;
org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics.copy(Lorg/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatistics;Lorg/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatistics;)V
org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics.getElement(I)D
org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics.getN()J
org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics.getQuadraticMean()D
org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics.getStandardDeviation()D
org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics.getValues()[D
org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics.getWindowSize()I
org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics.setWindowSize(I)V
org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics.toString()Ljava/lang/String;
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.addValue([D)V
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.clear()V
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.equals(Ljava/lang/Object;)Z
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getCovariance()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getDimension()I
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getGeoMeanImpl()[Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getGeometricMean()[D
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getMax()[D
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getMaxImpl()[Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getMean()[D
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getMeanImpl()[Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getMin()[D
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getMinImpl()[Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getN()J
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getStandardDeviation()[D
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getSum()[D
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getSumImpl()[Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getSumLog()[D
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getSumLogImpl()[Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getSumSq()[D
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getSumsqImpl()[Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.hashCode()I
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.setGeoMeanImpl([Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.setMaxImpl([Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.setMeanImpl([Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.setMinImpl([Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.setSumImpl([Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.setSumLogImpl([Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.setSumsqImpl([Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.toString()Ljava/lang/String;
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.addValue(D)V
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.clear()V
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.copy()Lorg/apache/commons/math3/stat/descriptive/SummaryStatistics;
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.copy()Lorg/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics;
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.copy(Lorg/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics;Lorg/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics;)V
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.equals(Ljava/lang/Object;)Z
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getGeoMeanImpl()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getGeometricMean()D
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getMax()D
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getMaxImpl()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getMean()D
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getMeanImpl()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getMin()D
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getMinImpl()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getN()J
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getPopulationVariance()D
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getQuadraticMean()D
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getStandardDeviation()D
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getSum()D
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getSumImpl()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getSumLogImpl()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getSummary()Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getSumsq()D
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getSumsqImpl()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getVariance()D
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getVarianceImpl()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.hashCode()I
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.setGeoMeanImpl(Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.setMaxImpl(Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.setMeanImpl(Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.setMinImpl(Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.setSumImpl(Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.setSumLogImpl(Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.setSumsqImpl(Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.setVarianceImpl(Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.toString()Ljava/lang/String;
org.apache.commons.math3.stat.descriptive.moment.FirstMoment.clear()V
org.apache.commons.math3.stat.descriptive.moment.FirstMoment.copy()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
org.apache.commons.math3.stat.descriptive.moment.FirstMoment.copy()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
org.apache.commons.math3.stat.descriptive.moment.FirstMoment.copy()Lorg/apache/commons/math3/stat/descriptive/moment/FirstMoment;
org.apache.commons.math3.stat.descriptive.moment.FirstMoment.copy(Lorg/apache/commons/math3/stat/descriptive/moment/FirstMoment;Lorg/apache/commons/math3/stat/descriptive/moment/FirstMoment;)V
org.apache.commons.math3.stat.descriptive.moment.FirstMoment.getN()J
org.apache.commons.math3.stat.descriptive.moment.FirstMoment.getResult()D
org.apache.commons.math3.stat.descriptive.moment.FirstMoment.increment(D)V
org.apache.commons.math3.stat.descriptive.moment.FourthMoment.clear()V
org.apache.commons.math3.stat.descriptive.moment.FourthMoment.copy()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
org.apache.commons.math3.stat.descriptive.moment.FourthMoment.copy()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
org.apache.commons.math3.stat.descriptive.moment.FourthMoment.copy()Lorg/apache/commons/math3/stat/descriptive/moment/FirstMoment;
org.apache.commons.math3.stat.descriptive.moment.FourthMoment.copy()Lorg/apache/commons/math3/stat/descriptive/moment/FourthMoment;
org.apache.commons.math3.stat.descriptive.moment.FourthMoment.copy()Lorg/apache/commons/math3/stat/descriptive/moment/SecondMoment;
org.apache.commons.math3.stat.descriptive.moment.FourthMoment.copy()Lorg/apache/commons/math3/stat/descriptive/moment/ThirdMoment;
org.apache.commons.math3.stat.descriptive.moment.FourthMoment.copy(Lorg/apache/commons/math3/stat/descriptive/moment/FourthMoment;Lorg/apache/commons/math3/stat/descriptive/moment/FourthMoment;)V
org.apache.commons.math3.stat.descriptive.moment.FourthMoment.getResult()D
org.apache.commons.math3.stat.descriptive.moment.FourthMoment.increment(D)V
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.checkEmpty()V
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.clear()V
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.copy()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.copy()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.copy()Lorg/apache/commons/math3/stat/descriptive/moment/GeometricMean;
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.copy(Lorg/apache/commons/math3/stat/descriptive/moment/GeometricMean;Lorg/apache/commons/math3/stat/descriptive/moment/GeometricMean;)V
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.evaluate([DII)D
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getN()J
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getResult()D
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getSumLogImpl()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.increment(D)V
org.apache.commons.math3.stat.descriptive.moment.GeometricMean.setSumLogImpl(Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V
org.apache.commons.math3.stat.descriptive.moment.Kurtosis.clear()V
org.apache.commons.math3.stat.descriptive.moment.Kurtosis.copy()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
org.apache.commons.math3.stat.descriptive.moment.Kurtosis.copy()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
org.apache.commons.math3.stat.descriptive.moment.Kurtosis.copy()Lorg/apache/commons/math3/stat/descriptive/moment/Kurtosis;
org.apache.commons.math3.stat.descriptive.moment.Kurtosis.copy(Lorg/apache/commons/math3/stat/descriptive/moment/Kurtosis;Lorg/apache/commons/math3/stat/descriptive/moment/Kurtosis;)V
org.apache.commons.math3.stat.descriptive.moment.Kurtosis.evaluate([DII)D
org.apache.commons.math3.stat.descriptive.moment.Kurtosis.getN()J
org.apache.commons.math3.stat.descriptive.moment.Kurtosis.getResult()D
org.apache.commons.math3.stat.descriptive.moment.Kurtosis.increment(D)V
org.apache.commons.math3.stat.descriptive.moment.Mean.clear()V
org.apache.commons.math3.stat.descriptive.moment.Mean.copy()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
org.apache.commons.math3.stat.descriptive.moment.Mean.copy()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
org.apache.commons.math3.stat.descriptive.moment.Mean.copy()Lorg/apache/commons/math3/stat/descriptive/moment/Mean;
org.apache.commons.math3.stat.descriptive.moment.Mean.copy(Lorg/apache/commons/math3/stat/descriptive/moment/Mean;Lorg/apache/commons/math3/stat/descriptive/moment/Mean;)V
org.apache.commons.math3.stat.descriptive.moment.Mean.evaluate([DII)D
org.apache.commons.math3.stat.descriptive.moment.Mean.evaluate([D[D)D
org.apache.commons.math3.stat.descriptive.moment.Mean.evaluate([D[DII)D
org.apache.commons.math3.stat.descriptive.moment.Mean.getN()J
org.apache.commons.math3.stat.descriptive.moment.Mean.getResult()D
org.apache.commons.math3.stat.descriptive.moment.Mean.increment(D)V
org.apache.commons.math3.stat.descriptive.moment.SecondMoment.clear()V
org.apache.commons.math3.stat.descriptive.moment.SecondMoment.copy()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
org.apache.commons.math3.stat.descriptive.moment.SecondMoment.copy()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
org.apache.commons.math3.stat.descriptive.moment.SecondMoment.copy()Lorg/apache/commons/math3/stat/descriptive/moment/FirstMoment;
org.apache.commons.math3.stat.descriptive.moment.SecondMoment.copy()Lorg/apache/commons/math3/stat/descriptive/moment/SecondMoment;
org.apache.commons.math3.stat.descriptive.moment.SecondMoment.copy(Lorg/apache/commons/math3/stat/descriptive/moment/SecondMoment;Lorg/apache/commons/math3/stat/descriptive/moment/SecondMoment;)V
org.apache.commons.math3.stat.descriptive.moment.SecondMoment.getN()J
org.apache.commons.math3.stat.descriptive.moment.SecondMoment.getResult()D
org.apache.commons.math3.stat.descriptive.moment.SecondMoment.increment(D)V
org.apache.commons.math3.stat.descriptive.moment.SemiVariance$Direction.getDirection()Z
org.apache.commons.math3.stat.descriptive.moment.SemiVariance$Direction.valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/stat/descriptive/moment/SemiVariance$Direction;
org.apache.commons.math3.stat.descriptive.moment.SemiVariance$Direction.values()[Lorg/apache/commons/math3/stat/descriptive/moment/SemiVariance$Direction;
org.apache.commons.math3.stat.descriptive.moment.SemiVariance.copy()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
org.apache.commons.math3.stat.descriptive.moment.SemiVariance.copy()Lorg/apache/commons/math3/stat/descriptive/moment/SemiVariance;
org.apache.commons.math3.stat.descriptive.moment.SemiVariance.copy(Lorg/apache/commons/math3/stat/descriptive/moment/SemiVariance;Lorg/apache/commons/math3/stat/descriptive/moment/SemiVariance;)V
org.apache.commons.math3.stat.descriptive.moment.SemiVariance.evaluate([DD)D
org.apache.commons.math3.stat.descriptive.moment.SemiVariance.evaluate([DDLorg/apache/commons/math3/stat/descriptive/moment/SemiVariance$Direction;)D
org.apache.commons.math3.stat.descriptive.moment.SemiVariance.evaluate([DDLorg/apache/commons/math3/stat/descriptive/moment/SemiVariance$Direction;ZII)D
org.apache.commons.math3.stat.descriptive.moment.SemiVariance.evaluate([DII)D
org.apache.commons.math3.stat.descriptive.moment.SemiVariance.evaluate([DLorg/apache/commons/math3/stat/descriptive/moment/SemiVariance$Direction;)D
org.apache.commons.math3.stat.descriptive.moment.SemiVariance.getVarianceDirection()Lorg/apache/commons/math3/stat/descriptive/moment/SemiVariance$Direction;
org.apache.commons.math3.stat.descriptive.moment.SemiVariance.isBiasCorrected()Z
org.apache.commons.math3.stat.descriptive.moment.SemiVariance.setBiasCorrected(Z)V
org.apache.commons.math3.stat.descriptive.moment.SemiVariance.setVarianceDirection(Lorg/apache/commons/math3/stat/descriptive/moment/SemiVariance$Direction;)V
org.apache.commons.math3.stat.descriptive.moment.Skewness.clear()V
org.apache.commons.math3.stat.descriptive.moment.Skewness.copy()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
org.apache.commons.math3.stat.descriptive.moment.Skewness.copy()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
org.apache.commons.math3.stat.descriptive.moment.Skewness.copy()Lorg/apache/commons/math3/stat/descriptive/moment/Skewness;
org.apache.commons.math3.stat.descriptive.moment.Skewness.copy(Lorg/apache/commons/math3/stat/descriptive/moment/Skewness;Lorg/apache/commons/math3/stat/descriptive/moment/Skewness;)V
org.apache.commons.math3.stat.descriptive.moment.Skewness.evaluate([DII)D
org.apache.commons.math3.stat.descriptive.moment.Skewness.getN()J
org.apache.commons.math3.stat.descriptive.moment.Skewness.getResult()D
org.apache.commons.math3.stat.descriptive.moment.Skewness.increment(D)V
org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.clear()V
org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.copy()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.copy()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.copy()Lorg/apache/commons/math3/stat/descriptive/moment/StandardDeviation;
org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.copy(Lorg/apache/commons/math3/stat/descriptive/moment/StandardDeviation;Lorg/apache/commons/math3/stat/descriptive/moment/StandardDeviation;)V
org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.evaluate([D)D
org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.evaluate([DD)D
org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.evaluate([DDII)D
org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.evaluate([DII)D
org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.getN()J
org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.getResult()D
org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.increment(D)V
org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.isBiasCorrected()Z
org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.setBiasCorrected(Z)V
org.apache.commons.math3.stat.descriptive.moment.ThirdMoment.clear()V
org.apache.commons.math3.stat.descriptive.moment.ThirdMoment.copy()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
org.apache.commons.math3.stat.descriptive.moment.ThirdMoment.copy()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
org.apache.commons.math3.stat.descriptive.moment.ThirdMoment.copy()Lorg/apache/commons/math3/stat/descriptive/moment/FirstMoment;
org.apache.commons.math3.stat.descriptive.moment.ThirdMoment.copy()Lorg/apache/commons/math3/stat/descriptive/moment/SecondMoment;
org.apache.commons.math3.stat.descriptive.moment.ThirdMoment.copy()Lorg/apache/commons/math3/stat/descriptive/moment/ThirdMoment;
org.apache.commons.math3.stat.descriptive.moment.ThirdMoment.copy(Lorg/apache/commons/math3/stat/descriptive/moment/ThirdMoment;Lorg/apache/commons/math3/stat/descriptive/moment/ThirdMoment;)V
org.apache.commons.math3.stat.descriptive.moment.ThirdMoment.getResult()D
org.apache.commons.math3.stat.descriptive.moment.ThirdMoment.increment(D)V
org.apache.commons.math3.stat.descriptive.moment.Variance.clear()V
org.apache.commons.math3.stat.descriptive.moment.Variance.copy()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
org.apache.commons.math3.stat.descriptive.moment.Variance.copy()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
org.apache.commons.math3.stat.descriptive.moment.Variance.copy()Lorg/apache/commons/math3/stat/descriptive/moment/Variance;
org.apache.commons.math3.stat.descriptive.moment.Variance.copy(Lorg/apache/commons/math3/stat/descriptive/moment/Variance;Lorg/apache/commons/math3/stat/descriptive/moment/Variance;)V
org.apache.commons.math3.stat.descriptive.moment.Variance.evaluate([D)D
org.apache.commons.math3.stat.descriptive.moment.Variance.evaluate([DD)D
org.apache.commons.math3.stat.descriptive.moment.Variance.evaluate([DDII)D
org.apache.commons.math3.stat.descriptive.moment.Variance.evaluate([DII)D
org.apache.commons.math3.stat.descriptive.moment.Variance.evaluate([D[D)D
org.apache.commons.math3.stat.descriptive.moment.Variance.evaluate([D[DD)D
org.apache.commons.math3.stat.descriptive.moment.Variance.evaluate([D[DDII)D
org.apache.commons.math3.stat.descriptive.moment.Variance.evaluate([D[DII)D
org.apache.commons.math3.stat.descriptive.moment.Variance.getN()J
org.apache.commons.math3.stat.descriptive.moment.Variance.getResult()D
org.apache.commons.math3.stat.descriptive.moment.Variance.increment(D)V
org.apache.commons.math3.stat.descriptive.moment.Variance.isBiasCorrected()Z
org.apache.commons.math3.stat.descriptive.moment.Variance.setBiasCorrected(Z)V
org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance.clear()V
org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance.equals(Ljava/lang/Object;)Z
org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance.getN()J
org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance.getResult()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance.hashCode()I
org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance.increment([D)V
org.apache.commons.math3.stat.descriptive.moment.VectorialMean.equals(Ljava/lang/Object;)Z
org.apache.commons.math3.stat.descriptive.moment.VectorialMean.getN()J
org.apache.commons.math3.stat.descriptive.moment.VectorialMean.getResult()[D
org.apache.commons.math3.stat.descriptive.moment.VectorialMean.hashCode()I
org.apache.commons.math3.stat.descriptive.moment.VectorialMean.increment([D)V
org.apache.commons.math3.stat.descriptive.rank.Max.clear()V
org.apache.commons.math3.stat.descriptive.rank.Max.copy()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
org.apache.commons.math3.stat.descriptive.rank.Max.copy()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
org.apache.commons.math3.stat.descriptive.rank.Max.copy()Lorg/apache/commons/math3/stat/descriptive/rank/Max;
org.apache.commons.math3.stat.descriptive.rank.Max.copy(Lorg/apache/commons/math3/stat/descriptive/rank/Max;Lorg/apache/commons/math3/stat/descriptive/rank/Max;)V
org.apache.commons.math3.stat.descriptive.rank.Max.evaluate([DII)D
org.apache.commons.math3.stat.descriptive.rank.Max.getN()J
org.apache.commons.math3.stat.descriptive.rank.Max.getResult()D
org.apache.commons.math3.stat.descriptive.rank.Max.increment(D)V
org.apache.commons.math3.stat.descriptive.rank.Median.withEstimationType(Lorg/apache/commons/math3/stat/descriptive/rank/Percentile$EstimationType;)Lorg/apache/commons/math3/stat/descriptive/rank/Median;
org.apache.commons.math3.stat.descriptive.rank.Median.withEstimationType(Lorg/apache/commons/math3/stat/descriptive/rank/Percentile$EstimationType;)Lorg/apache/commons/math3/stat/descriptive/rank/Percentile;
org.apache.commons.math3.stat.descriptive.rank.Median.withKthSelector(Lorg/apache/commons/math3/util/KthSelector;)Lorg/apache/commons/math3/stat/descriptive/rank/Median;
org.apache.commons.math3.stat.descriptive.rank.Median.withKthSelector(Lorg/apache/commons/math3/util/KthSelector;)Lorg/apache/commons/math3/stat/descriptive/rank/Percentile;
org.apache.commons.math3.stat.descriptive.rank.Median.withNaNStrategy(Lorg/apache/commons/math3/stat/ranking/NaNStrategy;)Lorg/apache/commons/math3/stat/descriptive/rank/Median;
org.apache.commons.math3.stat.descriptive.rank.Median.withNaNStrategy(Lorg/apache/commons/math3/stat/ranking/NaNStrategy;)Lorg/apache/commons/math3/stat/descriptive/rank/Percentile;
org.apache.commons.math3.stat.descriptive.rank.Min.clear()V
org.apache.commons.math3.stat.descriptive.rank.Min.copy()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
org.apache.commons.math3.stat.descriptive.rank.Min.copy()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
org.apache.commons.math3.stat.descriptive.rank.Min.copy()Lorg/apache/commons/math3/stat/descriptive/rank/Min;
org.apache.commons.math3.stat.descriptive.rank.Min.copy(Lorg/apache/commons/math3/stat/descriptive/rank/Min;Lorg/apache/commons/math3/stat/descriptive/rank/Min;)V
org.apache.commons.math3.stat.descriptive.rank.Min.evaluate([DII)D
org.apache.commons.math3.stat.descriptive.rank.Min.getN()J
org.apache.commons.math3.stat.descriptive.rank.Min.getResult()D
org.apache.commons.math3.stat.descriptive.rank.Min.increment(D)V
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$FixedCapacityList.add(Ljava/lang/Object;)Z
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$FixedCapacityList.addAll(Ljava/util/Collection;)Z
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker.access$000(Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker;Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker;)Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker;
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker.access$100(Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker;Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker;)Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker;
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker.access$200(Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker;I)Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker;
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker.access$500(Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker;)D
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker.access$502(Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker;D)D
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker.access$600(Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker;)D
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker.access$700(Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker;I)V
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker.access$800(Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker;)V
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker.clone()Ljava/lang/Object;
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker.difference()D
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker.equals(Ljava/lang/Object;)Z
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker.estimate()D
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker.hashCode()I
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker.incrementPosition(I)V
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker.index(I)Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker;
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker.isEstimateBad([DD)Z
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker.next(Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker;)Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker;
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker.previous(Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker;)Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker;
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker.readObject(Ljava/io/ObjectInputStream;)V
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker.toString()Ljava/lang/String;
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker.updateDesiredPosition()V
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Markers.adjustHeightsOfMarkers()V
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Markers.clone()Ljava/lang/Object;
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Markers.createMarkerArray(Ljava/util/List;D)[Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker;
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Markers.equals(Ljava/lang/Object;)Z
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Markers.estimate(I)D
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Markers.findCellAndUpdateMinMax(D)I
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Markers.getPercentileValue()D
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Markers.hashCode()I
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Markers.height(I)D
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Markers.incrementPositions(III)V
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Markers.processDataPoint(D)D
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Markers.readObject(Ljava/io/ObjectInputStream;)V
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Markers.toString()Ljava/lang/String;
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Markers.updateDesiredPositions()V
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile.clear()V
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile.copy()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile.copy()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile.equals(Ljava/lang/Object;)Z
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile.getN()J
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile.getResult()D
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile.hashCode()I
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile.increment(D)V
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile.maximum()D
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile.minimum()D
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile.newMarkers(Ljava/util/List;D)Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$PSquareMarkers;
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile.quantile()D
org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile.toString()Ljava/lang/String;
org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$1.index(DI)D
org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$10.index(DI)D
org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$2.estimate([D[IDILorg/apache/commons/math3/util/KthSelector;)D
org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$2.index(DI)D
org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$3.estimate([D[IDILorg/apache/commons/math3/util/KthSelector;)D
org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$3.index(DI)D
org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$4.index(DI)D
org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$5.index(DI)D
org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$6.index(DI)D
org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$7.index(DI)D
org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$8.index(DI)D
org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType$9.index(DI)D
org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType.estimate([D[IDILorg/apache/commons/math3/util/KthSelector;)D
org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType.evaluate([D[IDLorg/apache/commons/math3/util/KthSelector;)D
org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType.valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/stat/descriptive/rank/Percentile$EstimationType;
org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType.values()[Lorg/apache/commons/math3/stat/descriptive/rank/Percentile$EstimationType;
org.apache.commons.math3.stat.descriptive.rank.Percentile.copy()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
org.apache.commons.math3.stat.descriptive.rank.Percentile.copy()Lorg/apache/commons/math3/stat/descriptive/rank/Percentile;
org.apache.commons.math3.stat.descriptive.rank.Percentile.copy(Lorg/apache/commons/math3/stat/descriptive/rank/Percentile;Lorg/apache/commons/math3/stat/descriptive/rank/Percentile;)V
org.apache.commons.math3.stat.descriptive.rank.Percentile.copyOf([DII)[D
org.apache.commons.math3.stat.descriptive.rank.Percentile.evaluate(D)D
org.apache.commons.math3.stat.descriptive.rank.Percentile.evaluate([DD)D
org.apache.commons.math3.stat.descriptive.rank.Percentile.evaluate([DII)D
org.apache.commons.math3.stat.descriptive.rank.Percentile.evaluate([DIID)D
org.apache.commons.math3.stat.descriptive.rank.Percentile.getEstimationType()Lorg/apache/commons/math3/stat/descriptive/rank/Percentile$EstimationType;
org.apache.commons.math3.stat.descriptive.rank.Percentile.getKthSelector()Lorg/apache/commons/math3/util/KthSelector;
org.apache.commons.math3.stat.descriptive.rank.Percentile.getNaNStrategy()Lorg/apache/commons/math3/stat/ranking/NaNStrategy;
org.apache.commons.math3.stat.descriptive.rank.Percentile.getPivotingStrategy()Lorg/apache/commons/math3/util/PivotingStrategyInterface;
org.apache.commons.math3.stat.descriptive.rank.Percentile.getPivots([D)[I
org.apache.commons.math3.stat.descriptive.rank.Percentile.getQuantile()D
org.apache.commons.math3.stat.descriptive.rank.Percentile.getWorkArray([DII)[D
org.apache.commons.math3.stat.descriptive.rank.Percentile.medianOf3([DII)I
org.apache.commons.math3.stat.descriptive.rank.Percentile.removeAndSlice([DIID)[D
org.apache.commons.math3.stat.descriptive.rank.Percentile.replaceAndSlice([DIIDD)[D
org.apache.commons.math3.stat.descriptive.rank.Percentile.setData([D)V
org.apache.commons.math3.stat.descriptive.rank.Percentile.setData([DII)V
org.apache.commons.math3.stat.descriptive.rank.Percentile.setQuantile(D)V
org.apache.commons.math3.stat.descriptive.rank.Percentile.withEstimationType(Lorg/apache/commons/math3/stat/descriptive/rank/Percentile$EstimationType;)Lorg/apache/commons/math3/stat/descriptive/rank/Percentile;
org.apache.commons.math3.stat.descriptive.rank.Percentile.withKthSelector(Lorg/apache/commons/math3/util/KthSelector;)Lorg/apache/commons/math3/stat/descriptive/rank/Percentile;
org.apache.commons.math3.stat.descriptive.rank.Percentile.withNaNStrategy(Lorg/apache/commons/math3/stat/ranking/NaNStrategy;)Lorg/apache/commons/math3/stat/descriptive/rank/Percentile;
org.apache.commons.math3.stat.descriptive.summary.Product.clear()V
org.apache.commons.math3.stat.descriptive.summary.Product.copy()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
org.apache.commons.math3.stat.descriptive.summary.Product.copy()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
org.apache.commons.math3.stat.descriptive.summary.Product.copy()Lorg/apache/commons/math3/stat/descriptive/summary/Product;
org.apache.commons.math3.stat.descriptive.summary.Product.copy(Lorg/apache/commons/math3/stat/descriptive/summary/Product;Lorg/apache/commons/math3/stat/descriptive/summary/Product;)V
org.apache.commons.math3.stat.descriptive.summary.Product.evaluate([DII)D
org.apache.commons.math3.stat.descriptive.summary.Product.evaluate([D[D)D
org.apache.commons.math3.stat.descriptive.summary.Product.evaluate([D[DII)D
org.apache.commons.math3.stat.descriptive.summary.Product.getN()J
org.apache.commons.math3.stat.descriptive.summary.Product.getResult()D
org.apache.commons.math3.stat.descriptive.summary.Product.increment(D)V
org.apache.commons.math3.stat.descriptive.summary.Sum.clear()V
org.apache.commons.math3.stat.descriptive.summary.Sum.copy()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
org.apache.commons.math3.stat.descriptive.summary.Sum.copy()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
org.apache.commons.math3.stat.descriptive.summary.Sum.copy()Lorg/apache/commons/math3/stat/descriptive/summary/Sum;
org.apache.commons.math3.stat.descriptive.summary.Sum.copy(Lorg/apache/commons/math3/stat/descriptive/summary/Sum;Lorg/apache/commons/math3/stat/descriptive/summary/Sum;)V
org.apache.commons.math3.stat.descriptive.summary.Sum.evaluate([DII)D
org.apache.commons.math3.stat.descriptive.summary.Sum.evaluate([D[D)D
org.apache.commons.math3.stat.descriptive.summary.Sum.evaluate([D[DII)D
org.apache.commons.math3.stat.descriptive.summary.Sum.getN()J
org.apache.commons.math3.stat.descriptive.summary.Sum.getResult()D
org.apache.commons.math3.stat.descriptive.summary.Sum.increment(D)V
org.apache.commons.math3.stat.descriptive.summary.SumOfLogs.clear()V
org.apache.commons.math3.stat.descriptive.summary.SumOfLogs.copy()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
org.apache.commons.math3.stat.descriptive.summary.SumOfLogs.copy()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
org.apache.commons.math3.stat.descriptive.summary.SumOfLogs.copy()Lorg/apache/commons/math3/stat/descriptive/summary/SumOfLogs;
org.apache.commons.math3.stat.descriptive.summary.SumOfLogs.copy(Lorg/apache/commons/math3/stat/descriptive/summary/SumOfLogs;Lorg/apache/commons/math3/stat/descriptive/summary/SumOfLogs;)V
org.apache.commons.math3.stat.descriptive.summary.SumOfLogs.evaluate([DII)D
org.apache.commons.math3.stat.descriptive.summary.SumOfLogs.getN()J
org.apache.commons.math3.stat.descriptive.summary.SumOfLogs.getResult()D
org.apache.commons.math3.stat.descriptive.summary.SumOfLogs.increment(D)V
org.apache.commons.math3.stat.descriptive.summary.SumOfSquares.clear()V
org.apache.commons.math3.stat.descriptive.summary.SumOfSquares.copy()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;
org.apache.commons.math3.stat.descriptive.summary.SumOfSquares.copy()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;
org.apache.commons.math3.stat.descriptive.summary.SumOfSquares.copy()Lorg/apache/commons/math3/stat/descriptive/summary/SumOfSquares;
org.apache.commons.math3.stat.descriptive.summary.SumOfSquares.copy(Lorg/apache/commons/math3/stat/descriptive/summary/SumOfSquares;Lorg/apache/commons/math3/stat/descriptive/summary/SumOfSquares;)V
org.apache.commons.math3.stat.descriptive.summary.SumOfSquares.evaluate([DII)D
org.apache.commons.math3.stat.descriptive.summary.SumOfSquares.getN()J
org.apache.commons.math3.stat.descriptive.summary.SumOfSquares.getResult()D
org.apache.commons.math3.stat.descriptive.summary.SumOfSquares.increment(D)V
org.apache.commons.math3.stat.inference.AlternativeHypothesis.valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/stat/inference/AlternativeHypothesis;
org.apache.commons.math3.stat.inference.AlternativeHypothesis.values()[Lorg/apache/commons/math3/stat/inference/AlternativeHypothesis;
org.apache.commons.math3.stat.inference.BinomialTest.binomialTest(IIDLorg/apache/commons/math3/stat/inference/AlternativeHypothesis;)D
org.apache.commons.math3.stat.inference.BinomialTest.binomialTest(IIDLorg/apache/commons/math3/stat/inference/AlternativeHypothesis;D)Z
org.apache.commons.math3.stat.inference.ChiSquareTest.checkArray([[J)V
org.apache.commons.math3.stat.inference.ChiSquareTest.chiSquare([D[J)D
org.apache.commons.math3.stat.inference.ChiSquareTest.chiSquare([[J)D
org.apache.commons.math3.stat.inference.ChiSquareTest.chiSquareDataSetsComparison([J[J)D
org.apache.commons.math3.stat.inference.ChiSquareTest.chiSquareTest([D[J)D
org.apache.commons.math3.stat.inference.ChiSquareTest.chiSquareTest([D[JD)Z
org.apache.commons.math3.stat.inference.ChiSquareTest.chiSquareTest([[J)D
org.apache.commons.math3.stat.inference.ChiSquareTest.chiSquareTest([[JD)Z
org.apache.commons.math3.stat.inference.ChiSquareTest.chiSquareTestDataSetsComparison([J[J)D
org.apache.commons.math3.stat.inference.ChiSquareTest.chiSquareTestDataSetsComparison([J[JD)Z
org.apache.commons.math3.stat.inference.GTest.entropy([J)D
org.apache.commons.math3.stat.inference.GTest.entropy([[J)D
org.apache.commons.math3.stat.inference.GTest.g([D[J)D
org.apache.commons.math3.stat.inference.GTest.gDataSetsComparison([J[J)D
org.apache.commons.math3.stat.inference.GTest.gTest([D[J)D
org.apache.commons.math3.stat.inference.GTest.gTest([D[JD)Z
org.apache.commons.math3.stat.inference.GTest.gTestDataSetsComparison([J[J)D
org.apache.commons.math3.stat.inference.GTest.gTestDataSetsComparison([J[JD)Z
org.apache.commons.math3.stat.inference.GTest.gTestIntrinsic([D[J)D
org.apache.commons.math3.stat.inference.GTest.rootLogLikelihoodRatio(JJJJ)D
org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.approximateP(DII)D
org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.bootstrap([D[DI)D
org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.bootstrap([D[DIZ)D
org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.cdf(DI)D
org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.cdf(DIZ)D
org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.cdfExact(DI)D
org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.checkArray([D)V
org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.createExactH(DI)Lorg/apache/commons/math3/linear/FieldMatrix;
org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.createRoundedH(DI)Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.exactK(DI)D
org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.exactP(DIIZ)D
org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.fillBooleanArrayRandomlyWithFixedNumberTrueValues([ZILorg/apache/commons/math3/random/RandomGenerator;)V
org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.fixTies([D[D)V
org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.hasTies([D[D)Z
org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.integralKolmogorovSmirnovStatistic([D[D)J
org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.integralMonteCarloP(JIII)D
org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.jitter([DLorg/apache/commons/math3/distribution/RealDistribution;)V
org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.kolmogorovSmirnovStatistic(Lorg/apache/commons/math3/distribution/RealDistribution;[D)D
org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.kolmogorovSmirnovStatistic([D[D)D
org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.kolmogorovSmirnovTest(Lorg/apache/commons/math3/distribution/RealDistribution;[D)D
org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.kolmogorovSmirnovTest(Lorg/apache/commons/math3/distribution/RealDistribution;[DD)Z
org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.kolmogorovSmirnovTest(Lorg/apache/commons/math3/distribution/RealDistribution;[DZ)D
org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.kolmogorovSmirnovTest([D[D)D
org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.kolmogorovSmirnovTest([D[DZ)D
org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.ksSum(DDI)D
org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.monteCarloP(DIIZI)D
org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.pelzGood(DI)D
org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.roundedK(DI)D
org.apache.commons.math3.stat.inference.MannWhitneyUTest.calculateAsymptoticPValue(DII)D
org.apache.commons.math3.stat.inference.MannWhitneyUTest.concatenateSamples([D[D)[D
org.apache.commons.math3.stat.inference.MannWhitneyUTest.ensureDataConformance([D[D)V
org.apache.commons.math3.stat.inference.MannWhitneyUTest.mannWhitneyU([D[D)D
org.apache.commons.math3.stat.inference.MannWhitneyUTest.mannWhitneyUTest([D[D)D
org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats.access$000(Lorg/apache/commons/math3/stat/inference/OneWayAnova$AnovaStats;)D
org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats.access$100(Lorg/apache/commons/math3/stat/inference/OneWayAnova$AnovaStats;)I
org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats.access$200(Lorg/apache/commons/math3/stat/inference/OneWayAnova$AnovaStats;)I
org.apache.commons.math3.stat.inference.OneWayAnova.anovaFValue(Ljava/util/Collection;)D
org.apache.commons.math3.stat.inference.OneWayAnova.anovaPValue(Ljava/util/Collection;)D
org.apache.commons.math3.stat.inference.OneWayAnova.anovaPValue(Ljava/util/Collection;Z)D
org.apache.commons.math3.stat.inference.OneWayAnova.anovaStats(Ljava/util/Collection;)Lorg/apache/commons/math3/stat/inference/OneWayAnova$AnovaStats;
org.apache.commons.math3.stat.inference.OneWayAnova.anovaStats(Ljava/util/Collection;Z)Lorg/apache/commons/math3/stat/inference/OneWayAnova$AnovaStats;
org.apache.commons.math3.stat.inference.OneWayAnova.anovaTest(Ljava/util/Collection;D)Z
org.apache.commons.math3.stat.inference.TTest.checkSampleData(Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;)V
org.apache.commons.math3.stat.inference.TTest.checkSampleData([D)V
org.apache.commons.math3.stat.inference.TTest.checkSignificanceLevel(D)V
org.apache.commons.math3.stat.inference.TTest.df(DDDD)D
org.apache.commons.math3.stat.inference.TTest.homoscedasticT(DDDDDD)D
org.apache.commons.math3.stat.inference.TTest.homoscedasticT(Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;)D
org.apache.commons.math3.stat.inference.TTest.homoscedasticT([D[D)D
org.apache.commons.math3.stat.inference.TTest.homoscedasticTTest(DDDDDD)D
org.apache.commons.math3.stat.inference.TTest.homoscedasticTTest(Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;)D
org.apache.commons.math3.stat.inference.TTest.homoscedasticTTest([D[D)D
org.apache.commons.math3.stat.inference.TTest.homoscedasticTTest([D[DD)Z
org.apache.commons.math3.stat.inference.TTest.pairedT([D[D)D
org.apache.commons.math3.stat.inference.TTest.pairedTTest([D[D)D
org.apache.commons.math3.stat.inference.TTest.pairedTTest([D[DD)Z
org.apache.commons.math3.stat.inference.TTest.t(DDDD)D
org.apache.commons.math3.stat.inference.TTest.t(DDDDDD)D
org.apache.commons.math3.stat.inference.TTest.t(DLorg/apache/commons/math3/stat/descriptive/StatisticalSummary;)D
org.apache.commons.math3.stat.inference.TTest.t(D[D)D
org.apache.commons.math3.stat.inference.TTest.t(Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;)D
org.apache.commons.math3.stat.inference.TTest.t([D[D)D
org.apache.commons.math3.stat.inference.TTest.tTest(DDDD)D
org.apache.commons.math3.stat.inference.TTest.tTest(DDDDDD)D
org.apache.commons.math3.stat.inference.TTest.tTest(DLorg/apache/commons/math3/stat/descriptive/StatisticalSummary;)D
org.apache.commons.math3.stat.inference.TTest.tTest(DLorg/apache/commons/math3/stat/descriptive/StatisticalSummary;D)Z
org.apache.commons.math3.stat.inference.TTest.tTest(D[D)D
org.apache.commons.math3.stat.inference.TTest.tTest(D[DD)Z
org.apache.commons.math3.stat.inference.TTest.tTest(Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;)D
org.apache.commons.math3.stat.inference.TTest.tTest(Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;D)Z
org.apache.commons.math3.stat.inference.TTest.tTest([D[D)D
org.apache.commons.math3.stat.inference.TTest.tTest([D[DD)Z
org.apache.commons.math3.stat.inference.TestUtils.chiSquare([D[J)D
org.apache.commons.math3.stat.inference.TestUtils.chiSquare([[J)D
org.apache.commons.math3.stat.inference.TestUtils.chiSquareDataSetsComparison([J[J)D
org.apache.commons.math3.stat.inference.TestUtils.chiSquareTest([D[J)D
org.apache.commons.math3.stat.inference.TestUtils.chiSquareTest([D[JD)Z
org.apache.commons.math3.stat.inference.TestUtils.chiSquareTest([[J)D
org.apache.commons.math3.stat.inference.TestUtils.chiSquareTest([[JD)Z
org.apache.commons.math3.stat.inference.TestUtils.chiSquareTestDataSetsComparison([J[J)D
org.apache.commons.math3.stat.inference.TestUtils.chiSquareTestDataSetsComparison([J[JD)Z
org.apache.commons.math3.stat.inference.TestUtils.g([D[J)D
org.apache.commons.math3.stat.inference.TestUtils.gDataSetsComparison([J[J)D
org.apache.commons.math3.stat.inference.TestUtils.gTest([D[J)D
org.apache.commons.math3.stat.inference.TestUtils.gTest([D[JD)Z
org.apache.commons.math3.stat.inference.TestUtils.gTestDataSetsComparison([J[J)D
org.apache.commons.math3.stat.inference.TestUtils.gTestDataSetsComparison([J[JD)Z
org.apache.commons.math3.stat.inference.TestUtils.gTestIntrinsic([D[J)D
org.apache.commons.math3.stat.inference.TestUtils.homoscedasticT([D[D)D
org.apache.commons.math3.stat.inference.TestUtils.homoscedasticTTest([D[D)D
org.apache.commons.math3.stat.inference.TestUtils.homoscedasticTTest([D[DD)Z
org.apache.commons.math3.stat.inference.TestUtils.kolmogorovSmirnovStatistic([D[D)D
org.apache.commons.math3.stat.inference.TestUtils.kolmogorovSmirnovTest([D[D)D
org.apache.commons.math3.stat.inference.TestUtils.kolmogorovSmirnovTest([D[DZ)D
org.apache.commons.math3.stat.inference.TestUtils.pairedT([D[D)D
org.apache.commons.math3.stat.inference.TestUtils.pairedTTest([D[D)D
org.apache.commons.math3.stat.inference.TestUtils.pairedTTest([D[DD)Z
org.apache.commons.math3.stat.inference.TestUtils.t([D[D)D
org.apache.commons.math3.stat.inference.TestUtils.tTest([D[D)D
org.apache.commons.math3.stat.inference.TestUtils.tTest([D[DD)Z
org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest.calculateAbsoluteDifferences([D)[D
org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest.calculateAsymptoticPValue(DI)D
org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest.calculateDifferences([D[D)[D
org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest.calculateExactPValue(DI)D
org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest.ensureDataConformance([D[D)V
org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest.wilcoxonSignedRank([D[D)D
org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest.wilcoxonSignedRankTest([D[DZ)D
org.apache.commons.math3.stat.interval.AgrestiCoullInterval.createInterval(IID)Lorg/apache/commons/math3/stat/interval/ConfidenceInterval;
org.apache.commons.math3.stat.interval.ClopperPearsonInterval.createInterval(IID)Lorg/apache/commons/math3/stat/interval/ConfidenceInterval;
org.apache.commons.math3.stat.interval.ConfidenceInterval.checkParameters(DDD)V
org.apache.commons.math3.stat.interval.ConfidenceInterval.getConfidenceLevel()D
org.apache.commons.math3.stat.interval.ConfidenceInterval.getLowerBound()D
org.apache.commons.math3.stat.interval.ConfidenceInterval.getUpperBound()D
org.apache.commons.math3.stat.interval.ConfidenceInterval.toString()Ljava/lang/String;
org.apache.commons.math3.stat.interval.NormalApproximationInterval.createInterval(IID)Lorg/apache/commons/math3/stat/interval/ConfidenceInterval;
org.apache.commons.math3.stat.interval.WilsonScoreInterval.createInterval(IID)Lorg/apache/commons/math3/stat/interval/ConfidenceInterval;
org.apache.commons.math3.stat.ranking.NaNStrategy.valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/stat/ranking/NaNStrategy;
org.apache.commons.math3.stat.ranking.NaNStrategy.values()[Lorg/apache/commons/math3/stat/ranking/NaNStrategy;
org.apache.commons.math3.stat.ranking.NaturalRanking$IntDoublePair.compareTo(Ljava/lang/Object;)I
org.apache.commons.math3.stat.ranking.NaturalRanking$IntDoublePair.compareTo(Lorg/apache/commons/math3/stat/ranking/NaturalRanking$IntDoublePair;)I
org.apache.commons.math3.stat.ranking.NaturalRanking$IntDoublePair.getPosition()I
org.apache.commons.math3.stat.ranking.NaturalRanking$IntDoublePair.getValue()D
org.apache.commons.math3.stat.ranking.NaturalRanking.containsNaNs([Lorg/apache/commons/math3/stat/ranking/NaturalRanking$IntDoublePair;)Z
org.apache.commons.math3.stat.ranking.NaturalRanking.fill([DLjava/util/List;D)V
org.apache.commons.math3.stat.ranking.NaturalRanking.getNanPositions([Lorg/apache/commons/math3/stat/ranking/NaturalRanking$IntDoublePair;)Ljava/util/List;
org.apache.commons.math3.stat.ranking.NaturalRanking.getNanStrategy()Lorg/apache/commons/math3/stat/ranking/NaNStrategy;
org.apache.commons.math3.stat.ranking.NaturalRanking.getTiesStrategy()Lorg/apache/commons/math3/stat/ranking/TiesStrategy;
org.apache.commons.math3.stat.ranking.NaturalRanking.rank([D)[D
org.apache.commons.math3.stat.ranking.NaturalRanking.recodeNaNs([Lorg/apache/commons/math3/stat/ranking/NaturalRanking$IntDoublePair;D)V
org.apache.commons.math3.stat.ranking.NaturalRanking.removeNaNs([Lorg/apache/commons/math3/stat/ranking/NaturalRanking$IntDoublePair;)[Lorg/apache/commons/math3/stat/ranking/NaturalRanking$IntDoublePair;
org.apache.commons.math3.stat.ranking.NaturalRanking.resolveTie([DLjava/util/List;)V
org.apache.commons.math3.stat.ranking.NaturalRanking.restoreNaNs([DLjava/util/List;)V
org.apache.commons.math3.stat.ranking.TiesStrategy.valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/stat/ranking/TiesStrategy;
org.apache.commons.math3.stat.ranking.TiesStrategy.values()[Lorg/apache/commons/math3/stat/ranking/TiesStrategy;
org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression.calculateResiduals()Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression.getX()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression.getY()Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression.isNoIntercept()Z
org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression.newSampleData([DII)V
org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression.newXSampleData([[D)V
org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression.newYSampleData([D)V
org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression.validateCovarianceData([[D[[D)V
org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression.validateSampleData([[D[D)V
org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression.calculateBeta()Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression.calculateBetaVariance()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression.calculateErrorVariance()D
org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression.getOmegaInverse()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression.newCovarianceData([[D)V
org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression.newSampleData([D[[D[[D)V
org.apache.commons.math3.stat.regression.MillerUpdatingRegression.addObservation([DD)V
org.apache.commons.math3.stat.regression.MillerUpdatingRegression.addObservations([[D[D)V
org.apache.commons.math3.stat.regression.MillerUpdatingRegression.clear()V
org.apache.commons.math3.stat.regression.MillerUpdatingRegression.cov(I)[D
org.apache.commons.math3.stat.regression.MillerUpdatingRegression.getDiagonalOfHatMatrix([D)D
org.apache.commons.math3.stat.regression.MillerUpdatingRegression.getN()J
org.apache.commons.math3.stat.regression.MillerUpdatingRegression.getOrderOfRegressors()[I
org.apache.commons.math3.stat.regression.MillerUpdatingRegression.getPartialCorrelations(I)[D
org.apache.commons.math3.stat.regression.MillerUpdatingRegression.hasIntercept()Z
org.apache.commons.math3.stat.regression.MillerUpdatingRegression.include([DDD)V
org.apache.commons.math3.stat.regression.MillerUpdatingRegression.inverse([DI)V
org.apache.commons.math3.stat.regression.MillerUpdatingRegression.regcf(I)[D
org.apache.commons.math3.stat.regression.MillerUpdatingRegression.regress()Lorg/apache/commons/math3/stat/regression/RegressionResults;
org.apache.commons.math3.stat.regression.MillerUpdatingRegression.regress(I)Lorg/apache/commons/math3/stat/regression/RegressionResults;
org.apache.commons.math3.stat.regression.MillerUpdatingRegression.regress([I)Lorg/apache/commons/math3/stat/regression/RegressionResults;
org.apache.commons.math3.stat.regression.MillerUpdatingRegression.reorderRegressors([II)I
org.apache.commons.math3.stat.regression.MillerUpdatingRegression.singcheck()V
org.apache.commons.math3.stat.regression.MillerUpdatingRegression.smartAdd(DD)D
org.apache.commons.math3.stat.regression.MillerUpdatingRegression.ss()V
org.apache.commons.math3.stat.regression.MillerUpdatingRegression.tolset()V
org.apache.commons.math3.stat.regression.MillerUpdatingRegression.vmove(II)V
org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.calculateAdjustedRSquared()D
org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.calculateBeta()Lorg/apache/commons/math3/linear/RealVector;
org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.calculateBetaVariance()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.calculateHat()Lorg/apache/commons/math3/linear/RealMatrix;
org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.calculateRSquared()D
org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.calculateResidualSumOfSquares()D
org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.calculateTotalSumOfSquares()D
org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.newSampleData([DII)V
org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.newSampleData([D[[D)V
org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.newXSampleData([[D)V
org.apache.commons.math3.stat.regression.RegressionResults.getAdjustedRSquared()D
org.apache.commons.math3.stat.regression.RegressionResults.getCovarianceOfParameters(II)D
org.apache.commons.math3.stat.regression.RegressionResults.getErrorSumSquares()D
org.apache.commons.math3.stat.regression.RegressionResults.getMeanSquareError()D
org.apache.commons.math3.stat.regression.RegressionResults.getN()J
org.apache.commons.math3.stat.regression.RegressionResults.getNumberOfParameters()I
org.apache.commons.math3.stat.regression.RegressionResults.getParameterEstimate(I)D
org.apache.commons.math3.stat.regression.RegressionResults.getParameterEstimates()[D
org.apache.commons.math3.stat.regression.RegressionResults.getRSquared()D
org.apache.commons.math3.stat.regression.RegressionResults.getRegressionSumSquares()D
org.apache.commons.math3.stat.regression.RegressionResults.getStdErrorOfEstimate(I)D
org.apache.commons.math3.stat.regression.RegressionResults.getStdErrorOfEstimates()[D
org.apache.commons.math3.stat.regression.RegressionResults.getTotalSumSquares()D
org.apache.commons.math3.stat.regression.RegressionResults.getVcvElement(II)D
org.apache.commons.math3.stat.regression.RegressionResults.hasIntercept()Z
org.apache.commons.math3.stat.regression.SimpleRegression.addData(DD)V
org.apache.commons.math3.stat.regression.SimpleRegression.addData([[D)V
org.apache.commons.math3.stat.regression.SimpleRegression.addObservation([DD)V
org.apache.commons.math3.stat.regression.SimpleRegression.addObservations([[D[D)V
org.apache.commons.math3.stat.regression.SimpleRegression.append(Lorg/apache/commons/math3/stat/regression/SimpleRegression;)V
org.apache.commons.math3.stat.regression.SimpleRegression.clear()V
org.apache.commons.math3.stat.regression.SimpleRegression.getIntercept()D
org.apache.commons.math3.stat.regression.SimpleRegression.getIntercept(D)D
org.apache.commons.math3.stat.regression.SimpleRegression.getInterceptStdErr()D
org.apache.commons.math3.stat.regression.SimpleRegression.getMeanSquareError()D
org.apache.commons.math3.stat.regression.SimpleRegression.getN()J
org.apache.commons.math3.stat.regression.SimpleRegression.getR()D
org.apache.commons.math3.stat.regression.SimpleRegression.getRSquare()D
org.apache.commons.math3.stat.regression.SimpleRegression.getRegressionSumSquares()D
org.apache.commons.math3.stat.regression.SimpleRegression.getRegressionSumSquares(D)D
org.apache.commons.math3.stat.regression.SimpleRegression.getSignificance()D
org.apache.commons.math3.stat.regression.SimpleRegression.getSlope()D
org.apache.commons.math3.stat.regression.SimpleRegression.getSlopeConfidenceInterval()D
org.apache.commons.math3.stat.regression.SimpleRegression.getSlopeConfidenceInterval(D)D
org.apache.commons.math3.stat.regression.SimpleRegression.getSlopeStdErr()D
org.apache.commons.math3.stat.regression.SimpleRegression.getSumOfCrossProducts()D
org.apache.commons.math3.stat.regression.SimpleRegression.getSumSquaredErrors()D
org.apache.commons.math3.stat.regression.SimpleRegression.getTotalSumSquares()D
org.apache.commons.math3.stat.regression.SimpleRegression.getXSumSquares()D
org.apache.commons.math3.stat.regression.SimpleRegression.hasIntercept()Z
org.apache.commons.math3.stat.regression.SimpleRegression.predict(D)D
org.apache.commons.math3.stat.regression.SimpleRegression.regress()Lorg/apache/commons/math3/stat/regression/RegressionResults;
org.apache.commons.math3.stat.regression.SimpleRegression.regress([I)Lorg/apache/commons/math3/stat/regression/RegressionResults;
org.apache.commons.math3.stat.regression.SimpleRegression.removeData(DD)V
org.apache.commons.math3.stat.regression.SimpleRegression.removeData([[D)V
org.apache.commons.math3.transform.DctNormalization.valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/transform/DctNormalization;
org.apache.commons.math3.transform.DctNormalization.values()[Lorg/apache/commons/math3/transform/DctNormalization;
org.apache.commons.math3.transform.DftNormalization.valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/transform/DftNormalization;
org.apache.commons.math3.transform.DftNormalization.values()[Lorg/apache/commons/math3/transform/DftNormalization;
org.apache.commons.math3.transform.DstNormalization.valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/transform/DstNormalization;
org.apache.commons.math3.transform.DstNormalization.values()[Lorg/apache/commons/math3/transform/DstNormalization;
org.apache.commons.math3.transform.FastCosineTransformer.fct([D)[D
org.apache.commons.math3.transform.FastCosineTransformer.transform(Lorg/apache/commons/math3/analysis/UnivariateFunction;DDILorg/apache/commons/math3/transform/TransformType;)[D
org.apache.commons.math3.transform.FastCosineTransformer.transform([DLorg/apache/commons/math3/transform/TransformType;)[D
org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.clone()Ljava/lang/Object;
org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.clone(Lorg/apache/commons/math3/transform/FastFourierTransformer$MultiDimensionalComplexMatrix;)V
org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.get([I)Lorg/apache/commons/math3/complex/Complex;
org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.getArray()Ljava/lang/Object;
org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.getDimensionSizes()[I
org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.set(Lorg/apache/commons/math3/complex/Complex;[I)Lorg/apache/commons/math3/complex/Complex;
org.apache.commons.math3.transform.FastFourierTransformer.bitReversalShuffle2([D[D)V
org.apache.commons.math3.transform.FastFourierTransformer.mdfft(Ljava/lang/Object;Lorg/apache/commons/math3/transform/TransformType;)Ljava/lang/Object;
org.apache.commons.math3.transform.FastFourierTransformer.mdfft(Lorg/apache/commons/math3/transform/FastFourierTransformer$MultiDimensionalComplexMatrix;Lorg/apache/commons/math3/transform/TransformType;I[I)V
org.apache.commons.math3.transform.FastFourierTransformer.normalizeTransformedData([[DLorg/apache/commons/math3/transform/DftNormalization;Lorg/apache/commons/math3/transform/TransformType;)V
org.apache.commons.math3.transform.FastFourierTransformer.transform(Lorg/apache/commons/math3/analysis/UnivariateFunction;DDILorg/apache/commons/math3/transform/TransformType;)[Lorg/apache/commons/math3/complex/Complex;
org.apache.commons.math3.transform.FastFourierTransformer.transform([DLorg/apache/commons/math3/transform/TransformType;)[Lorg/apache/commons/math3/complex/Complex;
org.apache.commons.math3.transform.FastFourierTransformer.transform([Lorg/apache/commons/math3/complex/Complex;Lorg/apache/commons/math3/transform/TransformType;)[Lorg/apache/commons/math3/complex/Complex;
org.apache.commons.math3.transform.FastFourierTransformer.transformInPlace([[DLorg/apache/commons/math3/transform/DftNormalization;Lorg/apache/commons/math3/transform/TransformType;)V
org.apache.commons.math3.transform.FastHadamardTransformer.fht([D)[D
org.apache.commons.math3.transform.FastHadamardTransformer.fht([I)[I
org.apache.commons.math3.transform.FastHadamardTransformer.transform(Lorg/apache/commons/math3/analysis/UnivariateFunction;DDILorg/apache/commons/math3/transform/TransformType;)[D
org.apache.commons.math3.transform.FastHadamardTransformer.transform([DLorg/apache/commons/math3/transform/TransformType;)[D
org.apache.commons.math3.transform.FastHadamardTransformer.transform([I)[I
org.apache.commons.math3.transform.FastSineTransformer.fst([D)[D
org.apache.commons.math3.transform.FastSineTransformer.transform(Lorg/apache/commons/math3/analysis/UnivariateFunction;DDILorg/apache/commons/math3/transform/TransformType;)[D
org.apache.commons.math3.transform.FastSineTransformer.transform([DLorg/apache/commons/math3/transform/TransformType;)[D
org.apache.commons.math3.transform.TransformType.valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/transform/TransformType;
org.apache.commons.math3.transform.TransformType.values()[Lorg/apache/commons/math3/transform/TransformType;
org.apache.commons.math3.transform.TransformUtils.createComplexArray([[D)[Lorg/apache/commons/math3/complex/Complex;
org.apache.commons.math3.transform.TransformUtils.createRealImaginaryArray([Lorg/apache/commons/math3/complex/Complex;)[[D
org.apache.commons.math3.transform.TransformUtils.scaleArray([DD)[D
org.apache.commons.math3.transform.TransformUtils.scaleArray([Lorg/apache/commons/math3/complex/Complex;D)[Lorg/apache/commons/math3/complex/Complex;
org.apache.commons.math3.util.ArithmeticUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;
org.apache.commons.math3.util.ArithmeticUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;
org.apache.commons.math3.util.ArithmeticUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;
org.apache.commons.math3.util.BigReal.add(Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.util.BigReal.add(Lorg/apache/commons/math3/util/BigReal;)Lorg/apache/commons/math3/util/BigReal;
org.apache.commons.math3.util.BigReal.bigDecimalValue()Ljava/math/BigDecimal;
org.apache.commons.math3.util.BigReal.compareTo(Ljava/lang/Object;)I
org.apache.commons.math3.util.BigReal.compareTo(Lorg/apache/commons/math3/util/BigReal;)I
org.apache.commons.math3.util.BigReal.divide(Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.util.BigReal.divide(Lorg/apache/commons/math3/util/BigReal;)Lorg/apache/commons/math3/util/BigReal;
org.apache.commons.math3.util.BigReal.doubleValue()D
org.apache.commons.math3.util.BigReal.equals(Ljava/lang/Object;)Z
org.apache.commons.math3.util.BigReal.getField()Lorg/apache/commons/math3/Field;
org.apache.commons.math3.util.BigReal.getRoundingMode()Ljava/math/RoundingMode;
org.apache.commons.math3.util.BigReal.getScale()I
org.apache.commons.math3.util.BigReal.hashCode()I
org.apache.commons.math3.util.BigReal.multiply(I)Ljava/lang/Object;
org.apache.commons.math3.util.BigReal.multiply(I)Lorg/apache/commons/math3/util/BigReal;
org.apache.commons.math3.util.BigReal.multiply(Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.util.BigReal.multiply(Lorg/apache/commons/math3/util/BigReal;)Lorg/apache/commons/math3/util/BigReal;
org.apache.commons.math3.util.BigReal.negate()Ljava/lang/Object;
org.apache.commons.math3.util.BigReal.negate()Lorg/apache/commons/math3/util/BigReal;
org.apache.commons.math3.util.BigReal.reciprocal()Ljava/lang/Object;
org.apache.commons.math3.util.BigReal.reciprocal()Lorg/apache/commons/math3/util/BigReal;
org.apache.commons.math3.util.BigReal.setRoundingMode(Ljava/math/RoundingMode;)V
org.apache.commons.math3.util.BigReal.setScale(I)V
org.apache.commons.math3.util.BigReal.subtract(Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.util.BigReal.subtract(Lorg/apache/commons/math3/util/BigReal;)Lorg/apache/commons/math3/util/BigReal;
org.apache.commons.math3.util.BigRealField$LazyHolder.access$000()Lorg/apache/commons/math3/util/BigRealField;
org.apache.commons.math3.util.BigRealField.getInstance()Lorg/apache/commons/math3/util/BigRealField;
org.apache.commons.math3.util.BigRealField.getOne()Ljava/lang/Object;
org.apache.commons.math3.util.BigRealField.getOne()Lorg/apache/commons/math3/util/BigReal;
org.apache.commons.math3.util.BigRealField.getRuntimeClass()Ljava/lang/Class;
org.apache.commons.math3.util.BigRealField.getZero()Ljava/lang/Object;
org.apache.commons.math3.util.BigRealField.getZero()Lorg/apache/commons/math3/util/BigReal;
org.apache.commons.math3.util.BigRealField.readResolve()Ljava/lang/Object;
org.apache.commons.math3.util.CentralPivotingStrategy.pivotIndex([DII)I
org.apache.commons.math3.util.Combinations$IterationOrder.valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/util/Combinations$IterationOrder;
org.apache.commons.math3.util.Combinations$IterationOrder.values()[Lorg/apache/commons/math3/util/Combinations$IterationOrder;
org.apache.commons.math3.util.Combinations$LexicographicComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I
org.apache.commons.math3.util.Combinations$LexicographicComparator.compare([I[I)I
org.apache.commons.math3.util.Combinations$LexicographicComparator.lexNorm([I)J
org.apache.commons.math3.util.Combinations$LexicographicIterator.hasNext()Z
org.apache.commons.math3.util.Combinations$LexicographicIterator.next()Ljava/lang/Object;
org.apache.commons.math3.util.Combinations$LexicographicIterator.next()[I
org.apache.commons.math3.util.Combinations$LexicographicIterator.remove()V
org.apache.commons.math3.util.Combinations$SingletonIterator.hasNext()Z
org.apache.commons.math3.util.Combinations$SingletonIterator.next()Ljava/lang/Object;
org.apache.commons.math3.util.Combinations$SingletonIterator.next()[I
org.apache.commons.math3.util.Combinations$SingletonIterator.remove()V
org.apache.commons.math3.util.Combinations.comparator()Ljava/util/Comparator;
org.apache.commons.math3.util.Combinations.getK()I
org.apache.commons.math3.util.Combinations.getN()I
org.apache.commons.math3.util.Combinations.iterator()Ljava/util/Iterator;
org.apache.commons.math3.util.CompositeFormat.getDefaultNumberFormat()Ljava/text/NumberFormat;
org.apache.commons.math3.util.CompositeFormat.getDefaultNumberFormat(Ljava/util/Locale;)Ljava/text/NumberFormat;
org.apache.commons.math3.util.CompositeFormat.parseAndIgnoreWhitespace(Ljava/lang/String;Ljava/text/ParsePosition;)V
org.apache.commons.math3.util.CompositeFormat.parseFixedstring(Ljava/lang/String;Ljava/lang/String;Ljava/text/ParsePosition;)Z
org.apache.commons.math3.util.CompositeFormat.parseNextCharacter(Ljava/lang/String;Ljava/text/ParsePosition;)C
org.apache.commons.math3.util.CompositeFormat.parseNumber(Ljava/lang/String;DLjava/text/ParsePosition;)Ljava/lang/Number;
org.apache.commons.math3.util.CompositeFormat.parseNumber(Ljava/lang/String;Ljava/text/NumberFormat;Ljava/text/ParsePosition;)Ljava/lang/Number;
org.apache.commons.math3.util.Decimal64.abs()Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64.abs()Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64.acos()Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64.acos()Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64.acosh()Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64.acosh()Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64.add(D)Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64.add(D)Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64.add(Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64.add(Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64.asin()Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64.asin()Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64.asinh()Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64.asinh()Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64.atan()Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64.atan()Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64.atan2(Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64.atan2(Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64.atanh()Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64.atanh()Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64.byteValue()B
org.apache.commons.math3.util.Decimal64.cbrt()Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64.cbrt()Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64.ceil()Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64.ceil()Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64.compareTo(Ljava/lang/Object;)I
org.apache.commons.math3.util.Decimal64.compareTo(Lorg/apache/commons/math3/util/Decimal64;)I
org.apache.commons.math3.util.Decimal64.copySign(D)Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64.copySign(D)Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64.copySign(Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64.copySign(Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64.cos()Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64.cos()Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64.cosh()Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64.cosh()Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64.divide(D)Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64.divide(D)Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64.divide(Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64.divide(Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64.doubleValue()D
org.apache.commons.math3.util.Decimal64.equals(Ljava/lang/Object;)Z
org.apache.commons.math3.util.Decimal64.exp()Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64.exp()Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64.expm1()Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64.expm1()Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64.floatValue()F
org.apache.commons.math3.util.Decimal64.floor()Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64.floor()Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64.getField()Lorg/apache/commons/math3/Field;
org.apache.commons.math3.util.Decimal64.getReal()D
org.apache.commons.math3.util.Decimal64.hashCode()I
org.apache.commons.math3.util.Decimal64.hypot(Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64.hypot(Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64.intValue()I
org.apache.commons.math3.util.Decimal64.isInfinite()Z
org.apache.commons.math3.util.Decimal64.isNaN()Z
org.apache.commons.math3.util.Decimal64.linearCombination(DLjava/lang/Object;DLjava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64.linearCombination(DLjava/lang/Object;DLjava/lang/Object;DLjava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64.linearCombination(DLjava/lang/Object;DLjava/lang/Object;DLjava/lang/Object;DLjava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64.linearCombination(DLorg/apache/commons/math3/util/Decimal64;DLorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64.linearCombination(DLorg/apache/commons/math3/util/Decimal64;DLorg/apache/commons/math3/util/Decimal64;DLorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64.linearCombination(DLorg/apache/commons/math3/util/Decimal64;DLorg/apache/commons/math3/util/Decimal64;DLorg/apache/commons/math3/util/Decimal64;DLorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64.linearCombination(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64.linearCombination(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64.linearCombination(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64.linearCombination(Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64.linearCombination(Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64.linearCombination(Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64.linearCombination([D[Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64.linearCombination([D[Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64.linearCombination([Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64.linearCombination([Lorg/apache/commons/math3/util/Decimal64;[Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64.log()Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64.log()Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64.log10()Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64.log1p()Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64.log1p()Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64.longValue()J
org.apache.commons.math3.util.Decimal64.multiply(D)Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64.multiply(D)Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64.multiply(I)Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64.multiply(I)Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64.multiply(Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64.multiply(Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64.negate()Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64.negate()Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64.pow(D)Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64.pow(D)Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64.pow(I)Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64.pow(I)Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64.pow(Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64.pow(Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64.reciprocal()Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64.reciprocal()Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64.remainder(D)Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64.remainder(D)Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64.remainder(Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64.remainder(Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64.rint()Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64.rint()Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64.rootN(I)Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64.rootN(I)Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64.round()J
org.apache.commons.math3.util.Decimal64.scalb(I)Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64.scalb(I)Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64.shortValue()S
org.apache.commons.math3.util.Decimal64.signum()Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64.signum()Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64.sin()Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64.sin()Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64.sinh()Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64.sinh()Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64.sqrt()Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64.sqrt()Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64.subtract(D)Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64.subtract(D)Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64.subtract(Ljava/lang/Object;)Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64.subtract(Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64.tan()Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64.tan()Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64.tanh()Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64.tanh()Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64.toString()Ljava/lang/String;
org.apache.commons.math3.util.Decimal64Field.getInstance()Lorg/apache/commons/math3/util/Decimal64Field;
org.apache.commons.math3.util.Decimal64Field.getOne()Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64Field.getOne()Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.Decimal64Field.getRuntimeClass()Ljava/lang/Class;
org.apache.commons.math3.util.Decimal64Field.getZero()Ljava/lang/Object;
org.apache.commons.math3.util.Decimal64Field.getZero()Lorg/apache/commons/math3/util/Decimal64;
org.apache.commons.math3.util.DefaultTransformer.equals(Ljava/lang/Object;)Z
org.apache.commons.math3.util.DefaultTransformer.hashCode()I
org.apache.commons.math3.util.DefaultTransformer.transform(Ljava/lang/Object;)D
org.apache.commons.math3.util.FastMath$CodyWaite.getK()I
org.apache.commons.math3.util.FastMath$CodyWaite.getRemA()D
org.apache.commons.math3.util.FastMath$CodyWaite.getRemB()D
org.apache.commons.math3.util.FastMath$ExpFracTable.access$200()[D
org.apache.commons.math3.util.FastMath$ExpFracTable.access$300()[D
org.apache.commons.math3.util.FastMath$ExpIntTable.access$000()[D
org.apache.commons.math3.util.FastMath$ExpIntTable.access$100()[D
org.apache.commons.math3.util.FastMath$Split.access$500(Lorg/apache/commons/math3/util/FastMath$Split;J)Lorg/apache/commons/math3/util/FastMath$Split;
org.apache.commons.math3.util.FastMath$Split.access$600(Lorg/apache/commons/math3/util/FastMath$Split;)D
org.apache.commons.math3.util.FastMath$Split.multiply(Lorg/apache/commons/math3/util/FastMath$Split;)Lorg/apache/commons/math3/util/FastMath$Split;
org.apache.commons.math3.util.FastMath$Split.pow(J)Lorg/apache/commons/math3/util/FastMath$Split;
org.apache.commons.math3.util.FastMath$Split.reciprocal()Lorg/apache/commons/math3/util/FastMath$Split;
org.apache.commons.math3.util.FastMath$lnMant.access$400()[[D
org.apache.commons.math3.util.FastMath.main([Ljava/lang/String;)V
org.apache.commons.math3.util.FastMath.random()D
org.apache.commons.math3.util.FastMathCalc.buildSinCosTables([D[D[D[DI[D[D)V
org.apache.commons.math3.util.FastMathCalc.printarray(Ljava/io/PrintStream;Ljava/lang/String;I[D)V
org.apache.commons.math3.util.FastMathCalc.printarray(Ljava/io/PrintStream;Ljava/lang/String;I[[D)V
org.apache.commons.math3.util.FastMathCalc.quadMult([D[D[D)V
org.apache.commons.math3.util.FastMathCalc.resplit([D)V
org.apache.commons.math3.util.FastMathCalc.splitAdd([D[D[D)V
org.apache.commons.math3.util.FastMathCalc.splitMult([D[D[D)V
org.apache.commons.math3.util.FastMathCalc.splitReciprocal([D[D)V
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA()[D
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB()[D
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA()[D
org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB()[D
org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant()[[D
org.apache.commons.math3.util.Incrementor$1.trigger(I)V
org.apache.commons.math3.util.Incrementor$2.incrementCount()V
org.apache.commons.math3.util.Incrementor$2.resetCount()V
org.apache.commons.math3.util.Incrementor$2.setMaximalCount(I)V
org.apache.commons.math3.util.Incrementor.canIncrement()Z
org.apache.commons.math3.util.Incrementor.getCount()I
org.apache.commons.math3.util.Incrementor.getMaximalCount()I
org.apache.commons.math3.util.Incrementor.incrementCount()V
org.apache.commons.math3.util.Incrementor.incrementCount(I)V
org.apache.commons.math3.util.Incrementor.resetCount()V
org.apache.commons.math3.util.Incrementor.setMaximalCount(I)V
org.apache.commons.math3.util.Incrementor.wrap(Lorg/apache/commons/math3/util/IntegerSequence$Incrementor;)Lorg/apache/commons/math3/util/Incrementor;
org.apache.commons.math3.util.IntegerSequence$Incrementor$1.trigger(I)V
org.apache.commons.math3.util.IntegerSequence$Incrementor.canIncrement()Z
org.apache.commons.math3.util.IntegerSequence$Incrementor.canIncrement(I)Z
org.apache.commons.math3.util.IntegerSequence$Incrementor.create()Lorg/apache/commons/math3/util/IntegerSequence$Incrementor;
org.apache.commons.math3.util.IntegerSequence$Incrementor.getCount()I
org.apache.commons.math3.util.IntegerSequence$Incrementor.getMaximalCount()I
org.apache.commons.math3.util.IntegerSequence$Incrementor.hasNext()Z
org.apache.commons.math3.util.IntegerSequence$Incrementor.increment()V
org.apache.commons.math3.util.IntegerSequence$Incrementor.increment(I)V
org.apache.commons.math3.util.IntegerSequence$Incrementor.next()Ljava/lang/Integer;
org.apache.commons.math3.util.IntegerSequence$Incrementor.next()Ljava/lang/Object;
org.apache.commons.math3.util.IntegerSequence$Incrementor.remove()V
org.apache.commons.math3.util.IntegerSequence$Incrementor.withCallback(Lorg/apache/commons/math3/util/IntegerSequence$Incrementor$MaxCountExceededCallback;)Lorg/apache/commons/math3/util/IntegerSequence$Incrementor;
org.apache.commons.math3.util.IntegerSequence$Incrementor.withIncrement(I)Lorg/apache/commons/math3/util/IntegerSequence$Incrementor;
org.apache.commons.math3.util.IntegerSequence$Incrementor.withMaximalCount(I)Lorg/apache/commons/math3/util/IntegerSequence$Incrementor;
org.apache.commons.math3.util.IntegerSequence$Incrementor.withStart(I)Lorg/apache/commons/math3/util/IntegerSequence$Incrementor;
org.apache.commons.math3.util.IntegerSequence$Range.iterator()Ljava/util/Iterator;
org.apache.commons.math3.util.IntegerSequence$Range.size()I
org.apache.commons.math3.util.IterationEvent.getIterations()I
org.apache.commons.math3.util.IterationManager$1.trigger(I)V
org.apache.commons.math3.util.IterationManager.addIterationListener(Lorg/apache/commons/math3/util/IterationListener;)V
org.apache.commons.math3.util.IterationManager.fireInitializationEvent(Lorg/apache/commons/math3/util/IterationEvent;)V
org.apache.commons.math3.util.IterationManager.fireIterationPerformedEvent(Lorg/apache/commons/math3/util/IterationEvent;)V
org.apache.commons.math3.util.IterationManager.fireIterationStartedEvent(Lorg/apache/commons/math3/util/IterationEvent;)V
org.apache.commons.math3.util.IterationManager.fireTerminationEvent(Lorg/apache/commons/math3/util/IterationEvent;)V
org.apache.commons.math3.util.IterationManager.getIterations()I
org.apache.commons.math3.util.IterationManager.getMaxIterations()I
org.apache.commons.math3.util.IterationManager.incrementIterationCount()V
org.apache.commons.math3.util.IterationManager.removeIterationListener(Lorg/apache/commons/math3/util/IterationListener;)V
org.apache.commons.math3.util.IterationManager.resetIterationCount()V
org.apache.commons.math3.util.KthSelector.getPivotingStrategy()Lorg/apache/commons/math3/util/PivotingStrategyInterface;
org.apache.commons.math3.util.KthSelector.partition([DIII)I
org.apache.commons.math3.util.KthSelector.select([D[II)D
org.apache.commons.math3.util.MathArrays$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I
org.apache.commons.math3.util.MathArrays$1.compare(Lorg/apache/commons/math3/util/MathArrays$PairDoubleInteger;Lorg/apache/commons/math3/util/MathArrays$PairDoubleInteger;)I
org.apache.commons.math3.util.MathArrays$2.compare(Ljava/lang/Object;Ljava/lang/Object;)I
org.apache.commons.math3.util.MathArrays$2.compare(Lorg/apache/commons/math3/util/MathArrays$PairDoubleInteger;Lorg/apache/commons/math3/util/MathArrays$PairDoubleInteger;)I
org.apache.commons.math3.util.MathArrays$OrderDirection.valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/util/MathArrays$OrderDirection;
org.apache.commons.math3.util.MathArrays$OrderDirection.values()[Lorg/apache/commons/math3/util/MathArrays$OrderDirection;
org.apache.commons.math3.util.MathArrays$PairDoubleInteger.getKey()D
org.apache.commons.math3.util.MathArrays$PairDoubleInteger.getValue()I
org.apache.commons.math3.util.MathArrays$Position.valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/util/MathArrays$Position;
org.apache.commons.math3.util.MathArrays$Position.values()[Lorg/apache/commons/math3/util/MathArrays$Position;
org.apache.commons.math3.util.MathArrays.buildArray(Lorg/apache/commons/math3/Field;I)[Ljava/lang/Object;
org.apache.commons.math3.util.MathArrays.buildArray(Lorg/apache/commons/math3/Field;II)[[Ljava/lang/Object;
org.apache.commons.math3.util.MathArrays.checkEqualLength([D[D)V
org.apache.commons.math3.util.MathArrays.checkEqualLength([D[DZ)Z
org.apache.commons.math3.util.MathArrays.checkEqualLength([I[I)V
org.apache.commons.math3.util.MathArrays.checkEqualLength([I[IZ)Z
org.apache.commons.math3.util.MathArrays.checkNonNegative([J)V
org.apache.commons.math3.util.MathArrays.checkNonNegative([[J)V
org.apache.commons.math3.util.MathArrays.checkNotNaN([D)V
org.apache.commons.math3.util.MathArrays.checkOrder([D)V
org.apache.commons.math3.util.MathArrays.checkOrder([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;Z)V
org.apache.commons.math3.util.MathArrays.checkOrder([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z
org.apache.commons.math3.util.MathArrays.checkPositive([D)V
org.apache.commons.math3.util.MathArrays.checkRectangular([[J)V
org.apache.commons.math3.util.MathArrays.concatenate([[D)[D
org.apache.commons.math3.util.MathArrays.convolve([D[D)[D
org.apache.commons.math3.util.MathArrays.copyOf([D)[D
org.apache.commons.math3.util.MathArrays.copyOf([DI)[D
org.apache.commons.math3.util.MathArrays.copyOf([I)[I
org.apache.commons.math3.util.MathArrays.copyOf([II)[I
org.apache.commons.math3.util.MathArrays.copyOfRange([DII)[D
org.apache.commons.math3.util.MathArrays.cosAngle([D[D)D
org.apache.commons.math3.util.MathArrays.distance([D[D)D
org.apache.commons.math3.util.MathArrays.distance([I[I)D
org.apache.commons.math3.util.MathArrays.distance1([D[D)D
org.apache.commons.math3.util.MathArrays.distance1([I[I)I
org.apache.commons.math3.util.MathArrays.distanceInf([D[D)D
org.apache.commons.math3.util.MathArrays.distanceInf([I[I)I
org.apache.commons.math3.util.MathArrays.ebeAdd([D[D)[D
org.apache.commons.math3.util.MathArrays.ebeDivide([D[D)[D
org.apache.commons.math3.util.MathArrays.ebeMultiply([D[D)[D
org.apache.commons.math3.util.MathArrays.ebeSubtract([D[D)[D
org.apache.commons.math3.util.MathArrays.equals([D[D)Z
org.apache.commons.math3.util.MathArrays.equals([F[F)Z
org.apache.commons.math3.util.MathArrays.equalsIncludingNaN([D[D)Z
org.apache.commons.math3.util.MathArrays.equalsIncludingNaN([F[F)Z
org.apache.commons.math3.util.MathArrays.isMonotonic([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;Z)Z
org.apache.commons.math3.util.MathArrays.isMonotonic([Ljava/lang/Comparable;Lorg/apache/commons/math3/util/MathArrays$OrderDirection;Z)Z
org.apache.commons.math3.util.MathArrays.linearCombination([D[D)D
org.apache.commons.math3.util.MathArrays.normalizeArray([DD)[D
org.apache.commons.math3.util.MathArrays.safeNorm([D)D
org.apache.commons.math3.util.MathArrays.shuffle([I)V
org.apache.commons.math3.util.MathArrays.shuffle([IILorg/apache/commons/math3/util/MathArrays$Position;)V
org.apache.commons.math3.util.MathArrays.shuffle([IILorg/apache/commons/math3/util/MathArrays$Position;Lorg/apache/commons/math3/random/RandomGenerator;)V
org.apache.commons.math3.util.MathArrays.shuffle([ILorg/apache/commons/math3/random/RandomGenerator;)V
org.apache.commons.math3.util.MathArrays.sortInPlace([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;[[D)V
org.apache.commons.math3.util.MathArrays.sortInPlace([D[[D)V
org.apache.commons.math3.util.MathArrays.unique([D)[D
org.apache.commons.math3.util.MathArrays.verifyValues([DII)Z
org.apache.commons.math3.util.MathArrays.verifyValues([DIIZ)Z
org.apache.commons.math3.util.MathArrays.verifyValues([D[DII)Z
org.apache.commons.math3.util.MathArrays.verifyValues([D[DIIZ)Z
org.apache.commons.math3.util.MathUtils.checkFinite([D)V
org.apache.commons.math3.util.MathUtils.checkNotNull(Ljava/lang/Object;)V
org.apache.commons.math3.util.MathUtils.checkNotNull(Ljava/lang/Object;Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V
org.apache.commons.math3.util.MathUtils.hash([D)I
org.apache.commons.math3.util.MedianOf3PivotingStrategy.pivotIndex([DII)I
org.apache.commons.math3.util.MultidimensionalCounter$Iterator.getCount()I
org.apache.commons.math3.util.MultidimensionalCounter$Iterator.getCount(I)I
org.apache.commons.math3.util.MultidimensionalCounter$Iterator.getCounts()[I
org.apache.commons.math3.util.MultidimensionalCounter$Iterator.hasNext()Z
org.apache.commons.math3.util.MultidimensionalCounter$Iterator.next()Ljava/lang/Integer;
org.apache.commons.math3.util.MultidimensionalCounter$Iterator.next()Ljava/lang/Object;
org.apache.commons.math3.util.MultidimensionalCounter$Iterator.remove()V
org.apache.commons.math3.util.MultidimensionalCounter.access$000(Lorg/apache/commons/math3/util/MultidimensionalCounter;)I
org.apache.commons.math3.util.MultidimensionalCounter.access$100(Lorg/apache/commons/math3/util/MultidimensionalCounter;)I
org.apache.commons.math3.util.MultidimensionalCounter.access$200(Lorg/apache/commons/math3/util/MultidimensionalCounter;)I
org.apache.commons.math3.util.MultidimensionalCounter.access$300(Lorg/apache/commons/math3/util/MultidimensionalCounter;)[I
org.apache.commons.math3.util.MultidimensionalCounter.getCount([I)I
org.apache.commons.math3.util.MultidimensionalCounter.getCounts(I)[I
org.apache.commons.math3.util.MultidimensionalCounter.getDimension()I
org.apache.commons.math3.util.MultidimensionalCounter.getSize()I
org.apache.commons.math3.util.MultidimensionalCounter.getSizes()[I
org.apache.commons.math3.util.MultidimensionalCounter.iterator()Ljava/util/Iterator;
org.apache.commons.math3.util.MultidimensionalCounter.iterator()Lorg/apache/commons/math3/util/MultidimensionalCounter$Iterator;
org.apache.commons.math3.util.MultidimensionalCounter.toString()Ljava/lang/String;
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.advance()V
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.hasNext()Z
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.key()I
org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.value()D
org.apache.commons.math3.util.OpenIntToDoubleHashMap.access$100(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)I
org.apache.commons.math3.util.OpenIntToDoubleHashMap.access$200(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[I
org.apache.commons.math3.util.OpenIntToDoubleHashMap.access$300(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[D
org.apache.commons.math3.util.OpenIntToDoubleHashMap.access$400(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)[B
org.apache.commons.math3.util.OpenIntToDoubleHashMap.containsKey(I)Z
org.apache.commons.math3.util.OpenIntToDoubleHashMap.containsKey(II)Z
org.apache.commons.math3.util.OpenIntToDoubleHashMap.doRemove(I)D
org.apache.commons.math3.util.OpenIntToDoubleHashMap.findInsertionIndex(I)I
org.apache.commons.math3.util.OpenIntToDoubleHashMap.findInsertionIndex([I[BII)I
org.apache.commons.math3.util.OpenIntToDoubleHashMap.get(I)D
org.apache.commons.math3.util.OpenIntToDoubleHashMap.growTable()V
org.apache.commons.math3.util.OpenIntToDoubleHashMap.iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator;
org.apache.commons.math3.util.OpenIntToDoubleHashMap.put(ID)D
org.apache.commons.math3.util.OpenIntToDoubleHashMap.readObject(Ljava/io/ObjectInputStream;)V
org.apache.commons.math3.util.OpenIntToDoubleHashMap.remove(I)D
org.apache.commons.math3.util.OpenIntToDoubleHashMap.shouldGrowTable()Z
org.apache.commons.math3.util.OpenIntToDoubleHashMap.size()I
org.apache.commons.math3.util.OpenIntToFieldHashMap$Iterator.advance()V
org.apache.commons.math3.util.OpenIntToFieldHashMap$Iterator.hasNext()Z
org.apache.commons.math3.util.OpenIntToFieldHashMap$Iterator.key()I
org.apache.commons.math3.util.OpenIntToFieldHashMap$Iterator.value()Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.util.OpenIntToFieldHashMap.access$100(Lorg/apache/commons/math3/util/OpenIntToFieldHashMap;)I
org.apache.commons.math3.util.OpenIntToFieldHashMap.access$200(Lorg/apache/commons/math3/util/OpenIntToFieldHashMap;)[I
org.apache.commons.math3.util.OpenIntToFieldHashMap.access$300(Lorg/apache/commons/math3/util/OpenIntToFieldHashMap;)[Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.util.OpenIntToFieldHashMap.access$400(Lorg/apache/commons/math3/util/OpenIntToFieldHashMap;)[B
org.apache.commons.math3.util.OpenIntToFieldHashMap.buildArray(I)[Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.util.OpenIntToFieldHashMap.containsKey(I)Z
org.apache.commons.math3.util.OpenIntToFieldHashMap.containsKey(II)Z
org.apache.commons.math3.util.OpenIntToFieldHashMap.doRemove(I)Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.util.OpenIntToFieldHashMap.findInsertionIndex(I)I
org.apache.commons.math3.util.OpenIntToFieldHashMap.findInsertionIndex([I[BII)I
org.apache.commons.math3.util.OpenIntToFieldHashMap.get(I)Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.util.OpenIntToFieldHashMap.growTable()V
org.apache.commons.math3.util.OpenIntToFieldHashMap.iterator()Lorg/apache/commons/math3/util/OpenIntToFieldHashMap$Iterator;
org.apache.commons.math3.util.OpenIntToFieldHashMap.put(ILorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.util.OpenIntToFieldHashMap.readObject(Ljava/io/ObjectInputStream;)V
org.apache.commons.math3.util.OpenIntToFieldHashMap.remove(I)Lorg/apache/commons/math3/FieldElement;
org.apache.commons.math3.util.OpenIntToFieldHashMap.shouldGrowTable()Z
org.apache.commons.math3.util.OpenIntToFieldHashMap.size()I
org.apache.commons.math3.util.Pair.create(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/math3/util/Pair;
org.apache.commons.math3.util.Pair.equals(Ljava/lang/Object;)Z
org.apache.commons.math3.util.Pair.getFirst()Ljava/lang/Object;
org.apache.commons.math3.util.Pair.getKey()Ljava/lang/Object;
org.apache.commons.math3.util.Pair.getSecond()Ljava/lang/Object;
org.apache.commons.math3.util.Pair.getValue()Ljava/lang/Object;
org.apache.commons.math3.util.Pair.hashCode()I
org.apache.commons.math3.util.Pair.toString()Ljava/lang/String;
org.apache.commons.math3.util.RandomPivotingStrategy.pivotIndex([DII)I
org.apache.commons.math3.util.ResizableDoubleArray$ExpansionMode.valueOf(Ljava/lang/String;)Lorg/apache/commons/math3/util/ResizableDoubleArray$ExpansionMode;
org.apache.commons.math3.util.ResizableDoubleArray$ExpansionMode.values()[Lorg/apache/commons/math3/util/ResizableDoubleArray$ExpansionMode;
org.apache.commons.math3.util.ResizableDoubleArray.addElement(D)V
org.apache.commons.math3.util.ResizableDoubleArray.addElementRolling(D)D
org.apache.commons.math3.util.ResizableDoubleArray.addElements([D)V
org.apache.commons.math3.util.ResizableDoubleArray.checkContractExpand(DD)V
org.apache.commons.math3.util.ResizableDoubleArray.checkContractExpand(FF)V
org.apache.commons.math3.util.ResizableDoubleArray.clear()V
org.apache.commons.math3.util.ResizableDoubleArray.compute(Lorg/apache/commons/math3/util/MathArrays$Function;)D
org.apache.commons.math3.util.ResizableDoubleArray.contract()V
org.apache.commons.math3.util.ResizableDoubleArray.copy()Lorg/apache/commons/math3/util/ResizableDoubleArray;
org.apache.commons.math3.util.ResizableDoubleArray.copy(Lorg/apache/commons/math3/util/ResizableDoubleArray;Lorg/apache/commons/math3/util/ResizableDoubleArray;)V
org.apache.commons.math3.util.ResizableDoubleArray.discardExtremeElements(IZ)V
org.apache.commons.math3.util.ResizableDoubleArray.discardFrontElements(I)V
org.apache.commons.math3.util.ResizableDoubleArray.discardMostRecentElements(I)V
org.apache.commons.math3.util.ResizableDoubleArray.equals(Ljava/lang/Object;)Z
org.apache.commons.math3.util.ResizableDoubleArray.expand()V
org.apache.commons.math3.util.ResizableDoubleArray.expandTo(I)V
org.apache.commons.math3.util.ResizableDoubleArray.getArrayRef()[D
org.apache.commons.math3.util.ResizableDoubleArray.getCapacity()I
org.apache.commons.math3.util.ResizableDoubleArray.getContractionCriteria()F
org.apache.commons.math3.util.ResizableDoubleArray.getContractionCriterion()D
org.apache.commons.math3.util.ResizableDoubleArray.getElement(I)D
org.apache.commons.math3.util.ResizableDoubleArray.getElements()[D
org.apache.commons.math3.util.ResizableDoubleArray.getExpansionFactor()F
org.apache.commons.math3.util.ResizableDoubleArray.getExpansionMode()I
org.apache.commons.math3.util.ResizableDoubleArray.getInternalLength()I
org.apache.commons.math3.util.ResizableDoubleArray.getInternalValues()[D
org.apache.commons.math3.util.ResizableDoubleArray.getNumElements()I
org.apache.commons.math3.util.ResizableDoubleArray.getStartIndex()I
org.apache.commons.math3.util.ResizableDoubleArray.hashCode()I
org.apache.commons.math3.util.ResizableDoubleArray.setContractionCriteria(F)V
org.apache.commons.math3.util.ResizableDoubleArray.setElement(ID)V
org.apache.commons.math3.util.ResizableDoubleArray.setExpansionFactor(F)V
org.apache.commons.math3.util.ResizableDoubleArray.setExpansionMode(I)V
org.apache.commons.math3.util.ResizableDoubleArray.setExpansionMode(Lorg/apache/commons/math3/util/ResizableDoubleArray$ExpansionMode;)V
org.apache.commons.math3.util.ResizableDoubleArray.setInitialCapacity(I)V
org.apache.commons.math3.util.ResizableDoubleArray.setNumElements(I)V
org.apache.commons.math3.util.ResizableDoubleArray.shouldContract()Z
org.apache.commons.math3.util.ResizableDoubleArray.start()I
org.apache.commons.math3.util.ResizableDoubleArray.substituteMostRecentElement(D)D
org.apache.commons.math3.util.TransformerMap.classes()Ljava/util/Set;
org.apache.commons.math3.util.TransformerMap.clear()V
org.apache.commons.math3.util.TransformerMap.containsClass(Ljava/lang/Class;)Z
org.apache.commons.math3.util.TransformerMap.containsTransformer(Lorg/apache/commons/math3/util/NumberTransformer;)Z
org.apache.commons.math3.util.TransformerMap.equals(Ljava/lang/Object;)Z
org.apache.commons.math3.util.TransformerMap.getTransformer(Ljava/lang/Class;)Lorg/apache/commons/math3/util/NumberTransformer;
org.apache.commons.math3.util.TransformerMap.hashCode()I
org.apache.commons.math3.util.TransformerMap.putTransformer(Ljava/lang/Class;Lorg/apache/commons/math3/util/NumberTransformer;)Lorg/apache/commons/math3/util/NumberTransformer;
org.apache.commons.math3.util.TransformerMap.removeTransformer(Ljava/lang/Class;)Lorg/apache/commons/math3/util/NumberTransformer;
org.apache.commons.math3.util.TransformerMap.transform(Ljava/lang/Object;)D
org.apache.commons.math3.util.TransformerMap.transformers()Ljava/util/Collection;
