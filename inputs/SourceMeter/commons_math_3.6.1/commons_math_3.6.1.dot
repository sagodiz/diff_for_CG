digraph graphname {
rankdir="LR";
140 [label="org.apache.commons.math3.analysis.BivariateFunction.value(DD)D"]
161 [label="org.apache.commons.math3.analysis.DifferentiableMultivariateFunction.gradient()Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;"]
168 [label="org.apache.commons.math3.analysis.DifferentiableMultivariateVectorFunction.jacobian()Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;"]
178 [label="org.apache.commons.math3.analysis.DifferentiableUnivariateFunction.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;"]
239 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.<init>(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V"]
242 [label="java.lang.Object.<init>()V"]
246 [label="org.apache.commons.math3.analysis.differentiation.DSCompiler.getSize()I"]
248 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.<init>(II)V"]
256 [label="org.apache.commons.math3.analysis.differentiation.DSCompiler.getCompiler(II)Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;"]
258 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.<init>(IID)V"]
264 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.<init>(IIID)V"]
271 [label="org.apache.commons.math3.exception.NumberIsTooLargeException.<init>(Ljava/lang/Number;Ljava/lang/Number;Z)V"]
273 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.<init>(DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)V"]
282 [label="org.apache.commons.math3.analysis.differentiation.DSCompiler.checkCompatibility(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V"]
284 [label="org.apache.commons.math3.analysis.differentiation.DSCompiler.linearCombination(D[DID[DI[DI)V"]
286 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.<init>(DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)V"]
294 [label="org.apache.commons.math3.analysis.differentiation.DSCompiler.linearCombination(D[DID[DID[DI[DI)V"]
296 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.<init>(DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)V"]
306 [label="org.apache.commons.math3.analysis.differentiation.DSCompiler.linearCombination(D[DID[DID[DID[DI[DI)V"]
308 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.<init>(II[D)V"]
313 [label="org.apache.commons.math3.exception.DimensionMismatchException.<init>(II)V"]
315 [label="java.lang.System.arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V"]
317 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.<init>(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)V"]
321 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getFreeParameters()I"]
323 [label="org.apache.commons.math3.analysis.differentiation.DSCompiler.getFreeParameters()I"]
325 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getOrder()I"]
327 [label="org.apache.commons.math3.analysis.differentiation.DSCompiler.getOrder()I"]
329 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.createConstant(D)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
336 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getValue()D"]
338 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getPartialDerivative([I)D"]
342 [label="org.apache.commons.math3.analysis.differentiation.DSCompiler.getPartialDerivativeIndex([I)I"]
344 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getAllDerivatives()[D"]
346 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.add(D)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
350 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.add(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
353 [label="org.apache.commons.math3.analysis.differentiation.DSCompiler.add([DI[DI[DI)V"]
355 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.subtract(D)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
359 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.subtract(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
362 [label="org.apache.commons.math3.analysis.differentiation.DSCompiler.subtract([DI[DI[DI)V"]
364 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.multiply(I)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
367 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.multiply(D)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
371 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.multiply(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
374 [label="org.apache.commons.math3.analysis.differentiation.DSCompiler.multiply([DI[DI[DI)V"]
376 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.divide(D)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
379 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.divide(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
382 [label="org.apache.commons.math3.analysis.differentiation.DSCompiler.divide([DI[DI[DI)V"]
384 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.remainder(D)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
387 [label="org.apache.commons.math3.util.FastMath.IEEEremainder(DD)D"]
389 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.remainder(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
392 [label="org.apache.commons.math3.analysis.differentiation.DSCompiler.remainder([DI[DI[DI)V"]
394 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.negate()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
396 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.abs()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
398 [label="java.lang.Double.doubleToLongBits(D)J"]
401 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.ceil()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
403 [label="org.apache.commons.math3.util.FastMath.ceil(D)D"]
405 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.floor()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
407 [label="org.apache.commons.math3.util.FastMath.floor(D)D"]
409 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.rint()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
411 [label="org.apache.commons.math3.util.FastMath.rint(D)D"]
413 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.round()J"]
415 [label="org.apache.commons.math3.util.FastMath.round(D)J"]
417 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.signum()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
419 [label="org.apache.commons.math3.util.FastMath.signum(D)D"]
421 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.copySign(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
424 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.copySign(D)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
427 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getExponent()I"]
429 [label="org.apache.commons.math3.util.FastMath.getExponent(D)I"]
431 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.scalb(I)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
434 [label="org.apache.commons.math3.util.FastMath.scalb(DI)D"]
436 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.hypot(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
439 [label="java.lang.Double.isInfinite(D)Z"]
443 [label="java.lang.Double.isNaN(D)Z"]
450 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.sqrt()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
454 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.hypot(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
459 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.compose([D)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
462 [label="org.apache.commons.math3.analysis.differentiation.DSCompiler.compose([DI[D[DI)V"]
464 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.reciprocal()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
466 [label="org.apache.commons.math3.analysis.differentiation.DSCompiler.pow([DII[DI)V"]
469 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.rootN(I)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
471 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.cbrt()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
475 [label="org.apache.commons.math3.analysis.differentiation.DSCompiler.rootN([DII[DI)V"]
477 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.getField()Lorg/apache/commons/math3/Field;"]
485 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure$1.<init>()V"]
488 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure$1.getZero()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
490 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure$1.getOne()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
506 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.pow(DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
510 [label="org.apache.commons.math3.analysis.differentiation.DSCompiler.pow(D[DI[DI)V"]
512 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.pow(D)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
515 [label="org.apache.commons.math3.analysis.differentiation.DSCompiler.pow([DID[DI)V"]
517 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.pow(I)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
520 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.pow(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
523 [label="org.apache.commons.math3.analysis.differentiation.DSCompiler.pow([DI[DI[DI)V"]
525 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.exp()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
527 [label="org.apache.commons.math3.analysis.differentiation.DSCompiler.exp([DI[DI)V"]
529 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.expm1()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
531 [label="org.apache.commons.math3.analysis.differentiation.DSCompiler.expm1([DI[DI)V"]
533 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.log()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
535 [label="org.apache.commons.math3.analysis.differentiation.DSCompiler.log([DI[DI)V"]
537 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.log1p()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
539 [label="org.apache.commons.math3.analysis.differentiation.DSCompiler.log1p([DI[DI)V"]
541 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.log10()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
543 [label="org.apache.commons.math3.analysis.differentiation.DSCompiler.log10([DI[DI)V"]
545 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.cos()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
547 [label="org.apache.commons.math3.analysis.differentiation.DSCompiler.cos([DI[DI)V"]
549 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.sin()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
551 [label="org.apache.commons.math3.analysis.differentiation.DSCompiler.sin([DI[DI)V"]
553 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.tan()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
555 [label="org.apache.commons.math3.analysis.differentiation.DSCompiler.tan([DI[DI)V"]
557 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.acos()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
559 [label="org.apache.commons.math3.analysis.differentiation.DSCompiler.acos([DI[DI)V"]
561 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.asin()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
563 [label="org.apache.commons.math3.analysis.differentiation.DSCompiler.asin([DI[DI)V"]
565 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.atan()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
567 [label="org.apache.commons.math3.analysis.differentiation.DSCompiler.atan([DI[DI)V"]
569 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.atan2(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
572 [label="org.apache.commons.math3.analysis.differentiation.DSCompiler.atan2([DI[DI[DI)V"]
574 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.atan2(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
579 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.cosh()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
581 [label="org.apache.commons.math3.analysis.differentiation.DSCompiler.cosh([DI[DI)V"]
583 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.sinh()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
585 [label="org.apache.commons.math3.analysis.differentiation.DSCompiler.sinh([DI[DI)V"]
587 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.tanh()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
589 [label="org.apache.commons.math3.analysis.differentiation.DSCompiler.tanh([DI[DI)V"]
591 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.acosh()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
593 [label="org.apache.commons.math3.analysis.differentiation.DSCompiler.acosh([DI[DI)V"]
595 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.asinh()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
597 [label="org.apache.commons.math3.analysis.differentiation.DSCompiler.asinh([DI[DI)V"]
599 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.atanh()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
601 [label="org.apache.commons.math3.analysis.differentiation.DSCompiler.atanh([DI[DI)V"]
603 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.toDegrees()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
605 [label="org.apache.commons.math3.util.FastMath.toDegrees(D)D"]
607 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.toRadians()Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
609 [label="org.apache.commons.math3.util.FastMath.toRadians(D)D"]
611 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.taylor([D)D"]
617 [label="org.apache.commons.math3.analysis.differentiation.DSCompiler.taylor([DI[D)D"]
619 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.linearCombination([Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;[Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
625 [label="org.apache.commons.math3.util.MathArrays.linearCombination([D[D)D"]
627 [label="org.apache.commons.math3.Field.getZero()Ljava/lang/Object;"]
632 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.linearCombination([D[Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
636 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.linearCombination(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
642 [label="org.apache.commons.math3.util.MathArrays.linearCombination(DDDD)D"]
644 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.linearCombination(DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
650 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.linearCombination(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
658 [label="org.apache.commons.math3.util.MathArrays.linearCombination(DDDDDD)D"]
660 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.linearCombination(DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
668 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.linearCombination(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
678 [label="org.apache.commons.math3.util.MathArrays.linearCombination(DDDDDDDD)D"]
680 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.linearCombination(DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;DLorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
690 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.equals(Ljava/lang/Object;)Z"]
699 [label="org.apache.commons.math3.util.MathArrays.equals([D[D)Z"]
701 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.hashCode()I"]
703 [label="org.apache.commons.math3.util.MathUtils.hash([D)I"]
705 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure.writeReplace()Ljava/lang/Object;"]
710 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure$DataTransferObject.<init>(II[D)V"]
728 [label="org.apache.commons.math3.analysis.differentiation.DerivativeStructure$DataTransferObject.readResolve()Ljava/lang/Object;"]
759 [label="org.apache.commons.math3.analysis.differentiation.DSCompiler.<init>(IILorg/apache/commons/math3/analysis/differentiation/DSCompiler;Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V"]
768 [label="org.apache.commons.math3.analysis.differentiation.DSCompiler.compileSizes(IILorg/apache/commons/math3/analysis/differentiation/DSCompiler;)[[I"]
771 [label="org.apache.commons.math3.analysis.differentiation.DSCompiler.compileDerivativesIndirection(IILorg/apache/commons/math3/analysis/differentiation/DSCompiler;Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)[[I"]
774 [label="org.apache.commons.math3.analysis.differentiation.DSCompiler.compileLowerIndirection(IILorg/apache/commons/math3/analysis/differentiation/DSCompiler;Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)[I"]
777 [label="org.apache.commons.math3.analysis.differentiation.DSCompiler.compileMultiplicationIndirection(IILorg/apache/commons/math3/analysis/differentiation/DSCompiler;Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;[I)[[[I"]
780 [label="org.apache.commons.math3.analysis.differentiation.DSCompiler.compileCompositionIndirection(IILorg/apache/commons/math3/analysis/differentiation/DSCompiler;Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;[[I[[I)[[[I"]
785 [label="java.util.concurrent.atomic.AtomicReference.get()Ljava/lang/Object;"]
788 [label="org.apache.commons.math3.util.FastMath.max(II)I"]
791 [label="org.apache.commons.math3.util.FastMath.min(II)I"]
793 [label="java.util.concurrent.atomic.AtomicReference.compareAndSet(Ljava/lang/Object;Ljava/lang/Object;)Z"]
799 [label="java.util.Arrays.fill([II)V"]
827 [label="java.util.ArrayList.<init>(I)V"]
831 [label="java.util.List.add(Ljava/lang/Object;)Z"]
833 [label="java.util.List.size()I"]
835 [label="java.util.List.get(I)Ljava/lang/Object;"]
837 [label="java.util.List.toArray([Ljava/lang/Object;)[Ljava/lang/Object;"]
846 [label="java.util.ArrayList.<init>()V"]
848 [label="org.apache.commons.math3.analysis.differentiation.DSCompiler.getPartialDerivativeIndex(II[[I[I)I"]
850 [label="org.apache.commons.math3.analysis.differentiation.DSCompiler.convertIndex(II[[III[[I)I"]
852 [label="java.util.Arrays.sort([III)V"]
868 [label="org.apache.commons.math3.analysis.differentiation.DSCompiler.getPartialDerivativeOrders(I)[I"]
954 [label="java.util.Arrays.fill([DD)V"]
956 [label="org.apache.commons.math3.util.FastMath.pow(DD)D"]
958 [label="org.apache.commons.math3.util.FastMath.log(D)D"]
972 [label="java.util.Arrays.fill([DIID)V"]
974 [label="org.apache.commons.math3.util.FastMath.pow(DI)D"]
989 [label="org.apache.commons.math3.util.FastMath.sqrt(D)D"]
991 [label="org.apache.commons.math3.util.FastMath.cbrt(D)D"]
998 [label="org.apache.commons.math3.util.FastMath.exp(D)D"]
1005 [label="org.apache.commons.math3.util.FastMath.expm1(D)D"]
1017 [label="org.apache.commons.math3.util.FastMath.log1p(D)D"]
1024 [label="org.apache.commons.math3.util.FastMath.log10(D)D"]
1031 [label="org.apache.commons.math3.util.FastMath.cos(D)D"]
1033 [label="org.apache.commons.math3.util.FastMath.sin(D)D"]
1045 [label="org.apache.commons.math3.util.FastMath.tan(D)D"]
1052 [label="org.apache.commons.math3.util.FastMath.acos(D)D"]
1059 [label="org.apache.commons.math3.util.FastMath.asin(D)D"]
1066 [label="org.apache.commons.math3.util.FastMath.atan(D)D"]
1077 [label="org.apache.commons.math3.util.FastMath.atan2(DD)D"]
1084 [label="org.apache.commons.math3.util.FastMath.cosh(D)D"]
1086 [label="org.apache.commons.math3.util.FastMath.sinh(D)D"]
1098 [label="org.apache.commons.math3.util.FastMath.tanh(D)D"]
1105 [label="org.apache.commons.math3.util.FastMath.acosh(D)D"]
1112 [label="org.apache.commons.math3.util.FastMath.asinh(D)D"]
1119 [label="org.apache.commons.math3.util.FastMath.atanh(D)D"]
1132 [label="org.apache.commons.math3.util.CombinatoricsUtils.factorial(I)J"]
1140 [label="org.apache.commons.math3.exception.MathInternalError.<init>(Ljava/lang/Throwable;)V"]
1167 [label="org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator.<init>(ID)V"]
1174 [label="org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator.<init>(IDDD)V"]
1183 [label="org.apache.commons.math3.exception.NumberIsTooSmallException.<init>(Ljava/lang/Number;Ljava/lang/Number;Z)V"]
1186 [label="org.apache.commons.math3.exception.NotPositiveException.<init>(Ljava/lang/Number;)V"]
1190 [label="org.apache.commons.math3.util.FastMath.ulp(D)D"]
1198 [label="org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator.evaluate(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;D[D)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
1203 [label="org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator.differentiate(Lorg/apache/commons/math3/analysis/UnivariateFunction;)Lorg/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction;"]
1209 [label="org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.<init>()V"]
1212 [label="org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(D)D"]
1218 [label="org.apache.commons.math3.analysis.UnivariateFunction.value(D)D"]
1220 [label="org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$1.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
1223 [label="org.apache.commons.math3.util.FastMath.max(DD)D"]
1225 [label="org.apache.commons.math3.util.FastMath.min(DD)D"]
1228 [label="org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator.differentiate(Lorg/apache/commons/math3/analysis/UnivariateVectorFunction;)Lorg/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableVectorFunction;"]
1234 [label="org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$2.<init>()V"]
1237 [label="org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$2.value(D)[D"]
1240 [label="org.apache.commons.math3.analysis.UnivariateVectorFunction.value(D)[D"]
1242 [label="org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$2.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)[Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
1246 [label="org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator.differentiate(Lorg/apache/commons/math3/analysis/UnivariateMatrixFunction;)Lorg/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableMatrixFunction;"]
1252 [label="org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$3.<init>()V"]
1255 [label="org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$3.value(D)[[D"]
1258 [label="org.apache.commons.math3.analysis.UnivariateMatrixFunction.value(D)[[D"]
1260 [label="org.apache.commons.math3.analysis.differentiation.FiniteDifferencesDifferentiator$3.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)[[Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
1272 [label="org.apache.commons.math3.analysis.differentiation.GradientFunction.<init>(Lorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableFunction;)V"]
1276 [label="org.apache.commons.math3.analysis.differentiation.GradientFunction.value([D)[D"]
1280 [label="org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableFunction.value([Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
1290 [label="org.apache.commons.math3.analysis.differentiation.JacobianFunction.<init>(Lorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction;)V"]
1294 [label="org.apache.commons.math3.analysis.differentiation.JacobianFunction.value([D)[[D"]
1297 [label="org.apache.commons.math3.analysis.differentiation.MultivariateDifferentiableVectorFunction.value([Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)[Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
1330 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.<init>(DLjava/util/Map;)V"]
1340 [label="java.util.HashMap.<init>()V"]
1344 [label="java.util.Map.putAll(Ljava/util/Map;)V"]
1346 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.<init>(DDLjava/util/Map;)V"]
1351 [label="java.util.Map.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"]
1353 [label="java.util.Map$Entry.getKey()Ljava/lang/Object;"]
1355 [label="java.util.Map$Entry.getValue()Ljava/lang/Object;"]
1363 [label="java.util.Map.entrySet()Ljava/util/Set;"]
1365 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.createConstant(D)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1369 [label="java.util.Collections.emptyMap()Ljava/util/Map;"]
1371 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.createVariable(ID)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1375 [label="java.util.Collections.singletonMap(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;"]
1377 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.numVars()I"]
1379 [label="java.util.Map.size()I"]
1381 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.getDerivative(I)D"]
1384 [label="java.util.Map.get(Ljava/lang/Object;)Ljava/lang/Object;"]
1386 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.getValue()D"]
1390 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.add(Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1393 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.addInPlace(Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)V"]
1396 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.add(D)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1399 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.subtract(Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1402 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.subtract(D)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1405 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.multiply(Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1408 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.multiplyInPlace(Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)V"]
1411 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.multiply(D)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1415 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.multiply(I)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1418 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.divide(Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1421 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.divide(D)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1424 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.negate()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1426 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.getField()Lorg/apache/commons/math3/Field;"]
1431 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient$1.<init>()V"]
1434 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient$1.getZero()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1437 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient$1.getOne()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1447 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.remainder(D)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1450 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.remainder(Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1455 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.abs()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1458 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.ceil()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1460 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.floor()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1462 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.rint()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1464 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.round()J"]
1466 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.signum()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1468 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.copySign(Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1471 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.copySign(D)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1474 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.scalb(I)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1477 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.hypot(Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1482 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.sqrt()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1486 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.hypot(Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1491 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.reciprocal()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1494 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.cbrt()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1496 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.rootN(I)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1500 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.pow(D)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1503 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.pow(I)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1506 [label="org.apache.commons.math3.Field.getOne()Ljava/lang/Object;"]
1509 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.pow(Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1512 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.exp()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1514 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.log()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1516 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.pow(DLorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1520 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.compose(DD)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1523 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.expm1()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1526 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.log10()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1528 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.log1p()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1530 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.cos()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1532 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.sin()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1534 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.tan()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1536 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.acos()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1538 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.asin()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1540 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.atan()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1542 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.atan2(Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1549 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.atan2(Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1554 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.cosh()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1556 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.sinh()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1558 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.tanh()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1560 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.acosh()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1562 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.asinh()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1564 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.atanh()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1566 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.toDegrees()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1568 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.toRadians()Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1570 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.taylor([D)D"]
1577 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.linearCombination([Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;[Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1583 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.linearCombination([D[Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1587 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.linearCombination(Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1593 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.linearCombination(DLorg/apache/commons/math3/analysis/differentiation/SparseGradient;DLorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1599 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.linearCombination(Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1607 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.linearCombination(DLorg/apache/commons/math3/analysis/differentiation/SparseGradient;DLorg/apache/commons/math3/analysis/differentiation/SparseGradient;DLorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1615 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.linearCombination(Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1625 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.linearCombination(DLorg/apache/commons/math3/analysis/differentiation/SparseGradient;DLorg/apache/commons/math3/analysis/differentiation/SparseGradient;DLorg/apache/commons/math3/analysis/differentiation/SparseGradient;DLorg/apache/commons/math3/analysis/differentiation/SparseGradient;)Lorg/apache/commons/math3/analysis/differentiation/SparseGradient;"]
1635 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.equals(Ljava/lang/Object;)Z"]
1638 [label="org.apache.commons.math3.util.Precision.equals(DDI)Z"]
1640 [label="java.util.Map.containsKey(Ljava/lang/Object;)Z"]
1642 [label="org.apache.commons.math3.analysis.differentiation.SparseGradient.hashCode()I"]
1644 [label="org.apache.commons.math3.util.MathUtils.hash(D)I"]
1646 [label="java.util.Map.hashCode()I"]
1649 [label="org.apache.commons.math3.analysis.differentiation.UnivariateDifferentiableFunction.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
1722 [label="org.apache.commons.math3.analysis.function.Abs.<init>()V"]
1723 [label="org.apache.commons.math3.analysis.function.Abs.value(D)D"]
1726 [label="org.apache.commons.math3.util.FastMath.abs(D)D"]
1732 [label="org.apache.commons.math3.analysis.function.Acos.<init>()V"]
1733 [label="org.apache.commons.math3.analysis.function.Acos.value(D)D"]
1736 [label="org.apache.commons.math3.analysis.function.Acos.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;"]
1739 [label="org.apache.commons.math3.analysis.FunctionUtils.toDifferentiableUnivariateFunction(Lorg/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction;)Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;"]
1741 [label="org.apache.commons.math3.analysis.function.Acos.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
1747 [label="org.apache.commons.math3.analysis.function.Acosh.<init>()V"]
1748 [label="org.apache.commons.math3.analysis.function.Acosh.value(D)D"]
1751 [label="org.apache.commons.math3.analysis.function.Acosh.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;"]
1753 [label="org.apache.commons.math3.analysis.function.Acosh.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
1761 [label="org.apache.commons.math3.analysis.function.Add.<init>()V"]
1768 [label="org.apache.commons.math3.analysis.function.Asin.<init>()V"]
1769 [label="org.apache.commons.math3.analysis.function.Asin.value(D)D"]
1772 [label="org.apache.commons.math3.analysis.function.Asin.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;"]
1774 [label="org.apache.commons.math3.analysis.function.Asin.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
1780 [label="org.apache.commons.math3.analysis.function.Asinh.<init>()V"]
1781 [label="org.apache.commons.math3.analysis.function.Asinh.value(D)D"]
1784 [label="org.apache.commons.math3.analysis.function.Asinh.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;"]
1786 [label="org.apache.commons.math3.analysis.function.Asinh.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
1792 [label="org.apache.commons.math3.analysis.function.Atan.<init>()V"]
1793 [label="org.apache.commons.math3.analysis.function.Atan.value(D)D"]
1796 [label="org.apache.commons.math3.analysis.function.Atan.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;"]
1798 [label="org.apache.commons.math3.analysis.function.Atan.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
1804 [label="org.apache.commons.math3.analysis.function.Atan2.<init>()V"]
1805 [label="org.apache.commons.math3.analysis.function.Atan2.value(DD)D"]
1811 [label="org.apache.commons.math3.analysis.function.Atanh.<init>()V"]
1812 [label="org.apache.commons.math3.analysis.function.Atanh.value(D)D"]
1815 [label="org.apache.commons.math3.analysis.function.Atanh.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;"]
1817 [label="org.apache.commons.math3.analysis.function.Atanh.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
1823 [label="org.apache.commons.math3.analysis.function.Cbrt.<init>()V"]
1824 [label="org.apache.commons.math3.analysis.function.Cbrt.value(D)D"]
1827 [label="org.apache.commons.math3.analysis.function.Cbrt.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;"]
1829 [label="org.apache.commons.math3.analysis.function.Cbrt.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
1835 [label="org.apache.commons.math3.analysis.function.Ceil.<init>()V"]
1836 [label="org.apache.commons.math3.analysis.function.Ceil.value(D)D"]
1843 [label="org.apache.commons.math3.analysis.function.Constant.<init>(D)V"]
1850 [label="org.apache.commons.math3.analysis.function.Constant.derivative()Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;"]
1855 [label="org.apache.commons.math3.analysis.function.Constant.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
1860 [label="org.apache.commons.math3.analysis.function.Cos.<init>()V"]
1861 [label="org.apache.commons.math3.analysis.function.Cos.value(D)D"]
1864 [label="org.apache.commons.math3.analysis.function.Cos.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;"]
1866 [label="org.apache.commons.math3.analysis.function.Cos.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
1872 [label="org.apache.commons.math3.analysis.function.Cosh.<init>()V"]
1873 [label="org.apache.commons.math3.analysis.function.Cosh.value(D)D"]
1876 [label="org.apache.commons.math3.analysis.function.Cosh.derivative()Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;"]
1881 [label="org.apache.commons.math3.analysis.function.Sinh.<init>()V"]
1883 [label="org.apache.commons.math3.analysis.function.Cosh.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
1889 [label="org.apache.commons.math3.analysis.function.Divide.<init>()V"]
1896 [label="org.apache.commons.math3.analysis.function.Exp.<init>()V"]
1897 [label="org.apache.commons.math3.analysis.function.Exp.value(D)D"]
1900 [label="org.apache.commons.math3.analysis.function.Exp.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;"]
1902 [label="org.apache.commons.math3.analysis.function.Exp.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
1908 [label="org.apache.commons.math3.analysis.function.Expm1.<init>()V"]
1909 [label="org.apache.commons.math3.analysis.function.Expm1.value(D)D"]
1912 [label="org.apache.commons.math3.analysis.function.Expm1.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;"]
1914 [label="org.apache.commons.math3.analysis.function.Expm1.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
1920 [label="org.apache.commons.math3.analysis.function.Floor.<init>()V"]
1921 [label="org.apache.commons.math3.analysis.function.Floor.value(D)D"]
1934 [label="org.apache.commons.math3.analysis.function.Gaussian.<init>(DDD)V"]
1942 [label="org.apache.commons.math3.exception.NotStrictlyPositiveException.<init>(Ljava/lang/Number;)V"]
1948 [label="org.apache.commons.math3.analysis.function.Gaussian.<init>(DD)V"]
1955 [label="org.apache.commons.math3.analysis.function.Gaussian.<init>()V"]
1958 [label="org.apache.commons.math3.analysis.function.Gaussian.value(D)D"]
1961 [label="org.apache.commons.math3.analysis.function.Gaussian.value(DDD)D"]
1963 [label="org.apache.commons.math3.analysis.function.Gaussian.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;"]
1970 [label="org.apache.commons.math3.analysis.function.Gaussian$Parametric.<init>()V"]
1971 [label="org.apache.commons.math3.analysis.function.Gaussian$Parametric.value(D[D)D"]
1978 [label="org.apache.commons.math3.analysis.function.Gaussian$Parametric.validateParameters([D)V"]
1980 [label="org.apache.commons.math3.analysis.function.Gaussian$Parametric.gradient(D[D)[D"]
1986 [label="org.apache.commons.math3.exception.NullArgumentException.<init>()V"]
1992 [label="org.apache.commons.math3.analysis.function.Gaussian.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
2006 [label="org.apache.commons.math3.analysis.function.HarmonicOscillator.<init>(DDD)V"]
2014 [label="org.apache.commons.math3.analysis.function.HarmonicOscillator.value(D)D"]
2017 [label="org.apache.commons.math3.analysis.function.HarmonicOscillator.value(DD)D"]
2019 [label="org.apache.commons.math3.analysis.function.HarmonicOscillator.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;"]
2023 [label="org.apache.commons.math3.analysis.function.HarmonicOscillator$Parametric.<init>()V"]
2024 [label="org.apache.commons.math3.analysis.function.HarmonicOscillator$Parametric.value(D[D)D"]
2028 [label="org.apache.commons.math3.analysis.function.HarmonicOscillator$Parametric.validateParameters([D)V"]
2030 [label="org.apache.commons.math3.analysis.function.HarmonicOscillator$Parametric.gradient(D[D)[D"]
2039 [label="org.apache.commons.math3.analysis.function.HarmonicOscillator.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
2044 [label="org.apache.commons.math3.analysis.function.Identity.<init>()V"]
2048 [label="org.apache.commons.math3.analysis.function.Identity.derivative()Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;"]
2055 [label="org.apache.commons.math3.analysis.function.Inverse.<init>()V"]
2059 [label="org.apache.commons.math3.analysis.function.Inverse.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;"]
2061 [label="org.apache.commons.math3.analysis.function.Inverse.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
2067 [label="org.apache.commons.math3.analysis.function.Log.<init>()V"]
2068 [label="org.apache.commons.math3.analysis.function.Log.value(D)D"]
2071 [label="org.apache.commons.math3.analysis.function.Log.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;"]
2073 [label="org.apache.commons.math3.analysis.function.Log.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
2079 [label="org.apache.commons.math3.analysis.function.Log10.<init>()V"]
2080 [label="org.apache.commons.math3.analysis.function.Log10.value(D)D"]
2083 [label="org.apache.commons.math3.analysis.function.Log10.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;"]
2085 [label="org.apache.commons.math3.analysis.function.Log10.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
2091 [label="org.apache.commons.math3.analysis.function.Log1p.<init>()V"]
2092 [label="org.apache.commons.math3.analysis.function.Log1p.value(D)D"]
2095 [label="org.apache.commons.math3.analysis.function.Log1p.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;"]
2097 [label="org.apache.commons.math3.analysis.function.Log1p.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
2115 [label="org.apache.commons.math3.analysis.function.Logistic.<init>(DDDDDD)V"]
2129 [label="org.apache.commons.math3.analysis.function.Logistic.value(D)D"]
2132 [label="org.apache.commons.math3.analysis.function.Logistic.value(DDDDDD)D"]
2134 [label="org.apache.commons.math3.analysis.function.Logistic.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;"]
2138 [label="org.apache.commons.math3.analysis.function.Logistic$Parametric.<init>()V"]
2139 [label="org.apache.commons.math3.analysis.function.Logistic$Parametric.value(D[D)D"]
2143 [label="org.apache.commons.math3.analysis.function.Logistic$Parametric.validateParameters([D)V"]
2145 [label="org.apache.commons.math3.analysis.function.Logistic$Parametric.gradient(D[D)[D"]
2158 [label="org.apache.commons.math3.analysis.function.Logistic.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
2168 [label="org.apache.commons.math3.analysis.function.Logit.<init>()V"]
2170 [label="org.apache.commons.math3.analysis.function.Logit.<init>(DD)V"]
2177 [label="org.apache.commons.math3.analysis.function.Logit.value(D)D"]
2183 [label="org.apache.commons.math3.analysis.function.Logit.value(DDD)D"]
2185 [label="org.apache.commons.math3.analysis.function.Logit.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;"]
2189 [label="org.apache.commons.math3.analysis.function.Logit$Parametric.<init>()V"]
2190 [label="org.apache.commons.math3.analysis.function.Logit$Parametric.value(D[D)D"]
2194 [label="org.apache.commons.math3.analysis.function.Logit$Parametric.validateParameters([D)V"]
2196 [label="org.apache.commons.math3.analysis.function.Logit$Parametric.gradient(D[D)[D"]
2206 [label="org.apache.commons.math3.exception.OutOfRangeException.<init>(Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)V"]
2208 [label="org.apache.commons.math3.analysis.function.Logit.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
2213 [label="org.apache.commons.math3.analysis.function.Max.<init>()V"]
2214 [label="org.apache.commons.math3.analysis.function.Max.value(DD)D"]
2220 [label="org.apache.commons.math3.analysis.function.Min.<init>()V"]
2221 [label="org.apache.commons.math3.analysis.function.Min.value(DD)D"]
2227 [label="org.apache.commons.math3.analysis.function.Minus.<init>()V"]
2231 [label="org.apache.commons.math3.analysis.function.Minus.derivative()Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;"]
2233 [label="org.apache.commons.math3.analysis.function.Minus.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
2238 [label="org.apache.commons.math3.analysis.function.Multiply.<init>()V"]
2245 [label="org.apache.commons.math3.analysis.function.Pow.<init>()V"]
2246 [label="org.apache.commons.math3.analysis.function.Pow.value(DD)D"]
2254 [label="org.apache.commons.math3.analysis.function.Power.<init>(D)V"]
2258 [label="org.apache.commons.math3.analysis.function.Power.value(D)D"]
2261 [label="org.apache.commons.math3.analysis.function.Power.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;"]
2263 [label="org.apache.commons.math3.analysis.function.Power.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
2268 [label="org.apache.commons.math3.analysis.function.Rint.<init>()V"]
2269 [label="org.apache.commons.math3.analysis.function.Rint.value(D)D"]
2278 [label="org.apache.commons.math3.analysis.function.Sigmoid.<init>()V"]
2280 [label="org.apache.commons.math3.analysis.function.Sigmoid.<init>(DD)V"]
2287 [label="org.apache.commons.math3.analysis.function.Sigmoid.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;"]
2289 [label="org.apache.commons.math3.analysis.function.Sigmoid.value(D)D"]
2292 [label="org.apache.commons.math3.analysis.function.Sigmoid.value(DDD)D"]
2296 [label="org.apache.commons.math3.analysis.function.Sigmoid$Parametric.<init>()V"]
2297 [label="org.apache.commons.math3.analysis.function.Sigmoid$Parametric.value(D[D)D"]
2301 [label="org.apache.commons.math3.analysis.function.Sigmoid$Parametric.validateParameters([D)V"]
2303 [label="org.apache.commons.math3.analysis.function.Sigmoid$Parametric.gradient(D[D)[D"]
2313 [label="org.apache.commons.math3.analysis.function.Sigmoid.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
2318 [label="org.apache.commons.math3.analysis.function.Signum.<init>()V"]
2319 [label="org.apache.commons.math3.analysis.function.Signum.value(D)D"]
2324 [label="org.apache.commons.math3.analysis.function.Sin.<init>()V"]
2325 [label="org.apache.commons.math3.analysis.function.Sin.value(D)D"]
2328 [label="org.apache.commons.math3.analysis.function.Sin.derivative()Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;"]
2333 [label="org.apache.commons.math3.analysis.function.Sin.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
2343 [label="org.apache.commons.math3.analysis.function.Sinc.<init>()V"]
2345 [label="org.apache.commons.math3.analysis.function.Sinc.<init>(Z)V"]
2350 [label="org.apache.commons.math3.analysis.function.Sinc.value(D)D"]
2354 [label="org.apache.commons.math3.analysis.function.Sinc.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;"]
2356 [label="org.apache.commons.math3.analysis.function.Sinc.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
2360 [label="org.apache.commons.math3.analysis.function.Sinh.value(D)D"]
2363 [label="org.apache.commons.math3.analysis.function.Sinh.derivative()Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;"]
2368 [label="org.apache.commons.math3.analysis.function.Sinh.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
2374 [label="org.apache.commons.math3.analysis.function.Sqrt.<init>()V"]
2375 [label="org.apache.commons.math3.analysis.function.Sqrt.value(D)D"]
2378 [label="org.apache.commons.math3.analysis.function.Sqrt.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;"]
2380 [label="org.apache.commons.math3.analysis.function.Sqrt.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
2389 [label="org.apache.commons.math3.analysis.function.StepFunction.<init>([D[D)V"]
2399 [label="org.apache.commons.math3.exception.NoDataException.<init>()V"]
2401 [label="org.apache.commons.math3.util.MathArrays.checkOrder([D)V"]
2404 [label="org.apache.commons.math3.util.MathArrays.copyOf([D)[D"]
2407 [label="org.apache.commons.math3.analysis.function.StepFunction.value(D)D"]
2410 [label="java.util.Arrays.binarySearch([DD)I"]
2414 [label="org.apache.commons.math3.analysis.function.Subtract.<init>()V"]
2421 [label="org.apache.commons.math3.analysis.function.Tan.<init>()V"]
2422 [label="org.apache.commons.math3.analysis.function.Tan.value(D)D"]
2425 [label="org.apache.commons.math3.analysis.function.Tan.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;"]
2427 [label="org.apache.commons.math3.analysis.function.Tan.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
2433 [label="org.apache.commons.math3.analysis.function.Tanh.<init>()V"]
2434 [label="org.apache.commons.math3.analysis.function.Tanh.value(D)D"]
2437 [label="org.apache.commons.math3.analysis.function.Tanh.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;"]
2439 [label="org.apache.commons.math3.analysis.function.Tanh.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
2445 [label="org.apache.commons.math3.analysis.function.Ulp.<init>()V"]
2446 [label="org.apache.commons.math3.analysis.function.Ulp.value(D)D"]
2451 [label="org.apache.commons.math3.analysis.FunctionUtils.<init>()V"]
2453 [label="org.apache.commons.math3.analysis.FunctionUtils.compose([Lorg/apache/commons/math3/analysis/UnivariateFunction;)Lorg/apache/commons/math3/analysis/UnivariateFunction;"]
2457 [label="org.apache.commons.math3.analysis.FunctionUtils$1.<init>()V"]
2460 [label="org.apache.commons.math3.analysis.FunctionUtils$1.value(D)D"]
2463 [label="org.apache.commons.math3.analysis.FunctionUtils.compose([Lorg/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction;)Lorg/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction;"]
2467 [label="org.apache.commons.math3.analysis.FunctionUtils$2.<init>()V"]
2470 [label="org.apache.commons.math3.analysis.FunctionUtils$2.value(D)D"]
2473 [label="org.apache.commons.math3.analysis.FunctionUtils$2.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
2477 [label="org.apache.commons.math3.analysis.FunctionUtils.compose([Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;)Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;"]
2481 [label="org.apache.commons.math3.analysis.FunctionUtils$3.<init>()V"]
2484 [label="org.apache.commons.math3.analysis.FunctionUtils$3.value(D)D"]
2487 [label="org.apache.commons.math3.analysis.FunctionUtils$3.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;"]
2489 [label="org.apache.commons.math3.analysis.FunctionUtils$3$1.<init>()V"]
2492 [label="org.apache.commons.math3.analysis.FunctionUtils$3$1.value(D)D"]
2495 [label="org.apache.commons.math3.analysis.FunctionUtils.add([Lorg/apache/commons/math3/analysis/UnivariateFunction;)Lorg/apache/commons/math3/analysis/UnivariateFunction;"]
2498 [label="org.apache.commons.math3.analysis.FunctionUtils$4.<init>()V"]
2501 [label="org.apache.commons.math3.analysis.FunctionUtils$4.value(D)D"]
2504 [label="org.apache.commons.math3.analysis.FunctionUtils.add([Lorg/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction;)Lorg/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction;"]
2507 [label="org.apache.commons.math3.analysis.FunctionUtils$5.<init>()V"]
2510 [label="org.apache.commons.math3.analysis.FunctionUtils$5.value(D)D"]
2513 [label="org.apache.commons.math3.analysis.FunctionUtils$5.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
2516 [label="org.apache.commons.math3.analysis.FunctionUtils.add([Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;)Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;"]
2519 [label="org.apache.commons.math3.analysis.FunctionUtils$6.<init>()V"]
2522 [label="org.apache.commons.math3.analysis.FunctionUtils$6.value(D)D"]
2525 [label="org.apache.commons.math3.analysis.FunctionUtils$6.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;"]
2527 [label="org.apache.commons.math3.analysis.FunctionUtils$6$1.<init>()V"]
2530 [label="org.apache.commons.math3.analysis.FunctionUtils$6$1.value(D)D"]
2533 [label="org.apache.commons.math3.analysis.FunctionUtils.multiply([Lorg/apache/commons/math3/analysis/UnivariateFunction;)Lorg/apache/commons/math3/analysis/UnivariateFunction;"]
2536 [label="org.apache.commons.math3.analysis.FunctionUtils$7.<init>()V"]
2539 [label="org.apache.commons.math3.analysis.FunctionUtils$7.value(D)D"]
2542 [label="org.apache.commons.math3.analysis.FunctionUtils.multiply([Lorg/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction;)Lorg/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction;"]
2545 [label="org.apache.commons.math3.analysis.FunctionUtils$8.<init>()V"]
2548 [label="org.apache.commons.math3.analysis.FunctionUtils$8.value(D)D"]
2551 [label="org.apache.commons.math3.analysis.FunctionUtils$8.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
2554 [label="org.apache.commons.math3.analysis.FunctionUtils.multiply([Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;)Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;"]
2557 [label="org.apache.commons.math3.analysis.FunctionUtils$9.<init>()V"]
2560 [label="org.apache.commons.math3.analysis.FunctionUtils$9.value(D)D"]
2563 [label="org.apache.commons.math3.analysis.FunctionUtils$9.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;"]
2565 [label="org.apache.commons.math3.analysis.FunctionUtils$9$1.<init>()V"]
2568 [label="org.apache.commons.math3.analysis.FunctionUtils$9$1.value(D)D"]
2571 [label="org.apache.commons.math3.analysis.FunctionUtils.combine(Lorg/apache/commons/math3/analysis/BivariateFunction;Lorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/analysis/UnivariateFunction;)Lorg/apache/commons/math3/analysis/UnivariateFunction;"]
2576 [label="org.apache.commons.math3.analysis.FunctionUtils$10.<init>()V"]
2579 [label="org.apache.commons.math3.analysis.FunctionUtils$10.value(D)D"]
2583 [label="org.apache.commons.math3.analysis.FunctionUtils.collector(Lorg/apache/commons/math3/analysis/BivariateFunction;Lorg/apache/commons/math3/analysis/UnivariateFunction;D)Lorg/apache/commons/math3/analysis/MultivariateFunction;"]
2588 [label="org.apache.commons.math3.analysis.FunctionUtils$11.<init>()V"]
2591 [label="org.apache.commons.math3.analysis.FunctionUtils$11.value([D)D"]
2594 [label="org.apache.commons.math3.analysis.FunctionUtils.collector(Lorg/apache/commons/math3/analysis/BivariateFunction;D)Lorg/apache/commons/math3/analysis/MultivariateFunction;"]
2602 [label="org.apache.commons.math3.analysis.FunctionUtils.fix1stArgument(Lorg/apache/commons/math3/analysis/BivariateFunction;D)Lorg/apache/commons/math3/analysis/UnivariateFunction;"]
2606 [label="org.apache.commons.math3.analysis.FunctionUtils$12.<init>()V"]
2609 [label="org.apache.commons.math3.analysis.FunctionUtils$12.value(D)D"]
2612 [label="org.apache.commons.math3.analysis.FunctionUtils.fix2ndArgument(Lorg/apache/commons/math3/analysis/BivariateFunction;D)Lorg/apache/commons/math3/analysis/UnivariateFunction;"]
2616 [label="org.apache.commons.math3.analysis.FunctionUtils$13.<init>()V"]
2619 [label="org.apache.commons.math3.analysis.FunctionUtils$13.value(D)D"]
2622 [label="org.apache.commons.math3.analysis.FunctionUtils.sample(Lorg/apache/commons/math3/analysis/UnivariateFunction;DDI)[D"]
2628 [label="org.apache.commons.math3.exception.NotStrictlyPositiveException.<init>(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;)V"]
2632 [label="java.lang.Integer.valueOf(I)Ljava/lang/Integer;"]
2636 [label="org.apache.commons.math3.analysis.FunctionUtils$14.<init>()V"]
2639 [label="org.apache.commons.math3.analysis.FunctionUtils$14.value(D)D"]
2642 [label="org.apache.commons.math3.analysis.FunctionUtils$14.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;"]
2644 [label="org.apache.commons.math3.analysis.FunctionUtils$14$1.<init>()V"]
2647 [label="org.apache.commons.math3.analysis.FunctionUtils$14$1.value(D)D"]
2650 [label="org.apache.commons.math3.analysis.FunctionUtils.toUnivariateDifferential(Lorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;)Lorg/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction;"]
2653 [label="org.apache.commons.math3.analysis.FunctionUtils$15.<init>()V"]
2656 [label="org.apache.commons.math3.analysis.FunctionUtils$15.value(D)D"]
2659 [label="org.apache.commons.math3.analysis.FunctionUtils$15.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
2662 [label="org.apache.commons.math3.analysis.FunctionUtils.toDifferentiableMultivariateFunction(Lorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableFunction;)Lorg/apache/commons/math3/analysis/DifferentiableMultivariateFunction;"]
2667 [label="org.apache.commons.math3.analysis.FunctionUtils$16.<init>()V"]
2670 [label="org.apache.commons.math3.analysis.FunctionUtils$16.value([D)D"]
2673 [label="org.apache.commons.math3.analysis.MultivariateFunction.value([D)D"]
2675 [label="org.apache.commons.math3.analysis.FunctionUtils$16.partialDerivative(I)Lorg/apache/commons/math3/analysis/MultivariateFunction;"]
2678 [label="org.apache.commons.math3.analysis.FunctionUtils$16$1.<init>()V"]
2681 [label="org.apache.commons.math3.analysis.FunctionUtils$16$1.value([D)D"]
2684 [label="org.apache.commons.math3.analysis.FunctionUtils$16.gradient()Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;"]
2686 [label="org.apache.commons.math3.analysis.FunctionUtils$16$2.<init>()V"]
2689 [label="org.apache.commons.math3.analysis.FunctionUtils$16$2.value([D)[D"]
2692 [label="org.apache.commons.math3.analysis.FunctionUtils.toMultivariateDifferentiableFunction(Lorg/apache/commons/math3/analysis/DifferentiableMultivariateFunction;)Lorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableFunction;"]
2695 [label="org.apache.commons.math3.analysis.FunctionUtils$17.<init>()V"]
2698 [label="org.apache.commons.math3.analysis.FunctionUtils$17.value([D)D"]
2701 [label="org.apache.commons.math3.analysis.FunctionUtils$17.value([Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
2704 [label="org.apache.commons.math3.analysis.MultivariateVectorFunction.value([D)[D"]
2707 [label="org.apache.commons.math3.analysis.FunctionUtils.toDifferentiableMultivariateVectorFunction(Lorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction;)Lorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;"]
2712 [label="org.apache.commons.math3.analysis.FunctionUtils$18.<init>()V"]
2715 [label="org.apache.commons.math3.analysis.FunctionUtils$18.value([D)[D"]
2718 [label="org.apache.commons.math3.analysis.FunctionUtils$18.jacobian()Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;"]
2720 [label="org.apache.commons.math3.analysis.FunctionUtils$18$1.<init>()V"]
2723 [label="org.apache.commons.math3.analysis.FunctionUtils$18$1.value([D)[[D"]
2726 [label="org.apache.commons.math3.analysis.FunctionUtils.toMultivariateDifferentiableVectorFunction(Lorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;)Lorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction;"]
2729 [label="org.apache.commons.math3.analysis.FunctionUtils$19.<init>()V"]
2732 [label="org.apache.commons.math3.analysis.FunctionUtils$19.value([D)[D"]
2735 [label="org.apache.commons.math3.analysis.FunctionUtils$19.value([Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)[Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
2738 [label="org.apache.commons.math3.analysis.MultivariateMatrixFunction.value([D)[[D"]
2794 [label="org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.<init>(DDII)V"]
2804 [label="org.apache.commons.math3.util.IntegerSequence$Incrementor.withMaximalCount(I)Lorg/apache/commons/math3/util/IntegerSequence$Incrementor;"]
2806 [label="org.apache.commons.math3.util.IntegerSequence$Incrementor.create()Lorg/apache/commons/math3/util/IntegerSequence$Incrementor;"]
2811 [label="org.apache.commons.math3.util.Incrementor.wrap(Lorg/apache/commons/math3/util/IntegerSequence$Incrementor;)Lorg/apache/commons/math3/util/Incrementor;"]
2815 [label="org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.<init>(DD)V"]
2822 [label="org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.<init>(II)V"]
2828 [label="org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.getRelativeAccuracy()D"]
2830 [label="org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.getAbsoluteAccuracy()D"]
2832 [label="org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.getMinimalIterationCount()I"]
2834 [label="org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.getMaximalIterationCount()I"]
2836 [label="org.apache.commons.math3.util.IntegerSequence$Incrementor.getMaximalCount()I"]
2838 [label="org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.getEvaluations()I"]
2840 [label="org.apache.commons.math3.util.IntegerSequence$Incrementor.getCount()I"]
2842 [label="org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.getIterations()I"]
2844 [label="org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.incrementCount()V"]
2849 [label="org.apache.commons.math3.util.IntegerSequence$Incrementor.increment()V"]
2851 [label="org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.getMin()D"]
2854 [label="org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.getMax()D"]
2857 [label="org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.computeObjectiveValue(D)D"]
2863 [label="org.apache.commons.math3.exception.TooManyEvaluationsException.<init>(Ljava/lang/Number;)V"]
2865 [label="org.apache.commons.math3.exception.MaxCountExceededException.getMax()Ljava/lang/Number;"]
2868 [label="org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.setup(ILorg/apache/commons/math3/analysis/UnivariateFunction;DD)V"]
2874 [label="org.apache.commons.math3.util.MathUtils.checkNotNull(Ljava/lang/Object;)V"]
2876 [label="org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.verifyInterval(DD)V"]
2878 [label="org.apache.commons.math3.util.IntegerSequence$Incrementor.withStart(I)Lorg/apache/commons/math3/util/IntegerSequence$Incrementor;"]
2880 [label="org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.integrate(ILorg/apache/commons/math3/analysis/UnivariateFunction;DD)D"]
2887 [label="org.apache.commons.math3.analysis.integration.BaseAbstractUnivariateIntegrator.doIntegrate()D"]
2902 [label="org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory.<init>()V"]
2935 [label="org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory.getRule(I)Lorg/apache/commons/math3/util/Pair;"]
2941 [label="org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory.getRuleInternal(I)Lorg/apache/commons/math3/util/Pair;"]
2943 [label="org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory.convertToDouble(Lorg/apache/commons/math3/util/Pair;)Lorg/apache/commons/math3/util/Pair;"]
2945 [label="org.apache.commons.math3.util.Pair.<init>(Ljava/lang/Object;Ljava/lang/Object;)V"]
2947 [label="org.apache.commons.math3.util.Pair.getFirst()Ljava/lang/Object;"]
2949 [label="org.apache.commons.math3.util.Pair.getSecond()Ljava/lang/Object;"]
2954 [label="org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory.addRule(Lorg/apache/commons/math3/util/Pair;)V"]
2956 [label="org.apache.commons.math3.analysis.integration.gauss.BaseRuleFactory.computeRule(I)Lorg/apache/commons/math3/util/Pair;"]
2968 [label="java.lang.Number.doubleValue()D"]
2979 [label="org.apache.commons.math3.analysis.integration.gauss.GaussIntegrator.<init>([D[D)V"]
2983 [label="org.apache.commons.math3.util.MathArrays.checkOrder([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z"]
2989 [label="org.apache.commons.math3.analysis.integration.gauss.GaussIntegrator.<init>(Lorg/apache/commons/math3/util/Pair;)V"]
2993 [label="org.apache.commons.math3.analysis.integration.gauss.GaussIntegrator.integrate(Lorg/apache/commons/math3/analysis/UnivariateFunction;)D"]
2996 [label="org.apache.commons.math3.analysis.integration.gauss.GaussIntegrator.getNumberOfPoints()I"]
2998 [label="org.apache.commons.math3.analysis.integration.gauss.GaussIntegrator.getPoint(I)D"]
3001 [label="org.apache.commons.math3.analysis.integration.gauss.GaussIntegrator.getWeight(I)D"]
3006 [label="org.apache.commons.math3.analysis.integration.gauss.GaussIntegratorFactory.<init>()V"]
3033 [label="org.apache.commons.math3.analysis.integration.gauss.GaussIntegratorFactory.legendre(I)Lorg/apache/commons/math3/analysis/integration/gauss/GaussIntegrator;"]
3039 [label="org.apache.commons.math3.analysis.integration.gauss.GaussIntegratorFactory.getRule(Lorg/apache/commons/math3/analysis/integration/gauss/BaseRuleFactory;I)Lorg/apache/commons/math3/util/Pair;"]
3042 [label="org.apache.commons.math3.analysis.integration.gauss.GaussIntegratorFactory.legendre(IDD)Lorg/apache/commons/math3/analysis/integration/gauss/GaussIntegrator;"]
3047 [label="org.apache.commons.math3.analysis.integration.gauss.GaussIntegratorFactory.transform(Lorg/apache/commons/math3/util/Pair;DD)Lorg/apache/commons/math3/util/Pair;"]
3049 [label="org.apache.commons.math3.analysis.integration.gauss.GaussIntegratorFactory.legendreHighPrecision(I)Lorg/apache/commons/math3/analysis/integration/gauss/GaussIntegrator;"]
3053 [label="org.apache.commons.math3.analysis.integration.gauss.GaussIntegratorFactory.legendreHighPrecision(IDD)Lorg/apache/commons/math3/analysis/integration/gauss/GaussIntegrator;"]
3058 [label="org.apache.commons.math3.analysis.integration.gauss.GaussIntegratorFactory.hermite(I)Lorg/apache/commons/math3/analysis/integration/gauss/SymmetricGaussIntegrator;"]
3064 [label="org.apache.commons.math3.analysis.integration.gauss.SymmetricGaussIntegrator.<init>(Lorg/apache/commons/math3/util/Pair;)V"]
3079 [label="org.apache.commons.math3.analysis.integration.gauss.HermiteRuleFactory.<init>()V"]
3087 [label="org.apache.commons.math3.analysis.integration.gauss.HermiteRuleFactory.computeRule(I)Lorg/apache/commons/math3/util/Pair;"]
3095 [label="java.lang.Double.doubleValue()D"]
3099 [label="java.lang.Math.ulp(D)D"]
3113 [label="org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory.<init>()V"]
3115 [label="org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory.<init>(Ljava/math/MathContext;)V"]
3123 [label="java.math.BigDecimal.<init>(Ljava/lang/String;Ljava/math/MathContext;)V"]
3127 [label="org.apache.commons.math3.analysis.integration.gauss.LegendreHighPrecisionRuleFactory.computeRule(I)Lorg/apache/commons/math3/util/Pair;"]
3138 [label="java.math.BigDecimal.<init>(ILjava/math/MathContext;)V"]
3140 [label="java.math.BigDecimal.multiply(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;"]
3142 [label="java.math.BigDecimal.subtract(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;"]
3144 [label="java.math.BigDecimal.divide(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;"]
3146 [label="java.math.BigDecimal.add(Ljava/math/BigDecimal;Ljava/math/MathContext;)Ljava/math/BigDecimal;"]
3148 [label="java.math.BigDecimal.ulp()Ljava/math/BigDecimal;"]
3152 [label="java.math.BigDecimal.compareTo(Ljava/math/BigDecimal;)I"]
3154 [label="java.math.BigDecimal.signum()I"]
3156 [label="java.math.BigDecimal.multiply(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;"]
3158 [label="java.math.BigDecimal.pow(ILjava/math/MathContext;)Ljava/math/BigDecimal;"]
3160 [label="java.math.BigDecimal.negate(Ljava/math/MathContext;)Ljava/math/BigDecimal;"]
3163 [label="org.apache.commons.math3.analysis.integration.gauss.LegendreRuleFactory.<init>()V"]
3164 [label="org.apache.commons.math3.analysis.integration.gauss.LegendreRuleFactory.computeRule(I)Lorg/apache/commons/math3/util/Pair;"]
3168 [label="org.apache.commons.math3.analysis.integration.gauss.SymmetricGaussIntegrator.<init>([D[D)V"]
3175 [label="org.apache.commons.math3.analysis.integration.gauss.SymmetricGaussIntegrator.integrate(Lorg/apache/commons/math3/analysis/UnivariateFunction;)D"]
3191 [label="org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator.<init>(IDDII)V"]
3199 [label="org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator.<init>(IDD)V"]
3205 [label="org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator.<init>(III)V"]
3210 [label="org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator.doIntegrate()D"]
3212 [label="org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator.stage(I)D"]
3221 [label="org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator$1.<init>()V"]
3224 [label="org.apache.commons.math3.analysis.integration.IterativeLegendreGaussIntegrator$1.value(D)D"]
3255 [label="org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator.<init>(IDDII)V"]
3272 [label="org.apache.commons.math3.exception.MathIllegalArgumentException.<init>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V"]
3276 [label="org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator.<init>(IDD)V"]
3282 [label="org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator.<init>(III)V"]
3287 [label="org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator.doIntegrate()D"]
3289 [label="org.apache.commons.math3.analysis.integration.LegendreGaussIntegrator.stage(I)D"]
3297 [label="org.apache.commons.math3.analysis.integration.MidPointIntegrator.<init>(DDII)V"]
3304 [label="org.apache.commons.math3.analysis.integration.MidPointIntegrator.<init>(II)V"]
3309 [label="org.apache.commons.math3.analysis.integration.MidPointIntegrator.<init>()V"]
3311 [label="org.apache.commons.math3.analysis.integration.MidPointIntegrator.stage(IDDD)D"]
3317 [label="org.apache.commons.math3.analysis.integration.MidPointIntegrator.doIntegrate()D"]
3324 [label="org.apache.commons.math3.analysis.integration.RombergIntegrator.<init>(DDII)V"]
3331 [label="org.apache.commons.math3.analysis.integration.RombergIntegrator.<init>(II)V"]
3335 [label="org.apache.commons.math3.analysis.integration.RombergIntegrator.<init>()V"]
3337 [label="org.apache.commons.math3.analysis.integration.RombergIntegrator.doIntegrate()D"]
3343 [label="org.apache.commons.math3.analysis.integration.TrapezoidIntegrator.<init>()V"]
3345 [label="org.apache.commons.math3.analysis.integration.TrapezoidIntegrator.stage(Lorg/apache/commons/math3/analysis/integration/BaseAbstractUnivariateIntegrator;I)D"]
3351 [label="org.apache.commons.math3.analysis.integration.SimpsonIntegrator.<init>(DDII)V"]
3358 [label="org.apache.commons.math3.analysis.integration.SimpsonIntegrator.<init>(II)V"]
3362 [label="org.apache.commons.math3.analysis.integration.SimpsonIntegrator.<init>()V"]
3364 [label="org.apache.commons.math3.analysis.integration.SimpsonIntegrator.doIntegrate()D"]
3371 [label="org.apache.commons.math3.analysis.integration.TrapezoidIntegrator.<init>(DDII)V"]
3378 [label="org.apache.commons.math3.analysis.integration.TrapezoidIntegrator.<init>(II)V"]
3387 [label="org.apache.commons.math3.analysis.integration.TrapezoidIntegrator.doIntegrate()D"]
3445 [label="org.apache.commons.math3.analysis.interpolation.AkimaSplineInterpolator.<init>()V"]
3448 [label="org.apache.commons.math3.analysis.interpolation.AkimaSplineInterpolator.interpolate([D[D)Lorg/apache/commons/math3/analysis/polynomials/PolynomialSplineFunction;"]
3456 [label="org.apache.commons.math3.exception.NumberIsTooSmallException.<init>(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;Ljava/lang/Number;Z)V"]
3458 [label="org.apache.commons.math3.util.Precision.equals(DD)Z"]
3460 [label="org.apache.commons.math3.analysis.interpolation.AkimaSplineInterpolator.differentiateThreePoint([D[DIIII)D"]
3462 [label="org.apache.commons.math3.analysis.interpolation.AkimaSplineInterpolator.interpolateHermiteSorted([D[D[D)Lorg/apache/commons/math3/analysis/polynomials/PolynomialSplineFunction;"]
3479 [label="org.apache.commons.math3.analysis.polynomials.PolynomialFunction.<init>([D)V"]
3481 [label="org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.<init>([D[Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;)V"]
3500 [label="org.apache.commons.math3.analysis.interpolation.BicubicInterpolatingFunction.<init>([D[D[[D[[D[[D[[D)V"]
3511 [label="org.apache.commons.math3.analysis.interpolation.BicubicFunction.<init>([D)V"]
3513 [label="org.apache.commons.math3.analysis.interpolation.BicubicInterpolatingFunction.computeSplineCoefficients([D)[D"]
3515 [label="org.apache.commons.math3.analysis.interpolation.BicubicInterpolatingFunction.value(DD)D"]
3519 [label="org.apache.commons.math3.analysis.interpolation.BicubicInterpolatingFunction.searchIndex(D[D)I"]
3521 [label="org.apache.commons.math3.analysis.interpolation.BicubicFunction.value(DD)D"]
3549 [label="org.apache.commons.math3.analysis.interpolation.BicubicFunction.apply([D[D[[D)D"]
3560 [label="org.apache.commons.math3.analysis.interpolation.BicubicInterpolator.<init>()V"]
3561 [label="org.apache.commons.math3.analysis.interpolation.BicubicInterpolator.interpolate([D[D[[D)Lorg/apache/commons/math3/analysis/interpolation/BicubicInterpolatingFunction;"]
3568 [label="org.apache.commons.math3.analysis.interpolation.BicubicInterpolator$1.<init>([D[D[[D[[D[[D[[D)V"]
3604 [label="org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction.<init>([D[D[[D[[D[[D[[D)V"]
3612 [label="org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction.<init>([D[D[[D[[D[[D[[DZ)V"]
3625 [label="org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction.<init>([DZ)V"]
3627 [label="org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction.computeSplineCoefficients([D)[D"]
3630 [label="org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction.partialDerivativeX()Lorg/apache/commons/math3/analysis/BivariateFunction;"]
3632 [label="org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction.partialDerivativeY()Lorg/apache/commons/math3/analysis/BivariateFunction;"]
3634 [label="org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction.partialDerivativeXX()Lorg/apache/commons/math3/analysis/BivariateFunction;"]
3636 [label="org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction.partialDerivativeYY()Lorg/apache/commons/math3/analysis/BivariateFunction;"]
3638 [label="org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction.partialDerivativeXY()Lorg/apache/commons/math3/analysis/BivariateFunction;"]
3640 [label="org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction.value(DD)D"]
3644 [label="org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction.searchIndex(D[D)I"]
3646 [label="org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction.value(DD)D"]
3652 [label="org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction.partialDerivativeX(DD)D"]
3656 [label="org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction.partialDerivative(IDD)D"]
3658 [label="org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction.partialDerivativeY(DD)D"]
3662 [label="org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction.partialDerivativeXX(DD)D"]
3666 [label="org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction.partialDerivativeYY(DD)D"]
3670 [label="org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolatingFunction.partialDerivativeXY(DD)D"]
3700 [label="org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction.<init>([D)V"]
3709 [label="org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$1.<init>()V"]
3712 [label="org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$1.value(DD)D"]
3716 [label="org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction.apply([D[D[[D)D"]
3719 [label="org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$2.<init>()V"]
3722 [label="org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$2.value(DD)D"]
3727 [label="org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$3.<init>()V"]
3730 [label="org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$3.value(DD)D"]
3735 [label="org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$4.<init>()V"]
3738 [label="org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$4.value(DD)D"]
3743 [label="org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$5.<init>()V"]
3746 [label="org.apache.commons.math3.analysis.interpolation.BicubicSplineFunction$5.value(DD)D"]
3766 [label="org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolator.<init>()V"]
3768 [label="org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolator.<init>(Z)V"]
3773 [label="org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolator.interpolate([D[D[[D)Lorg/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction;"]
3783 [label="org.apache.commons.math3.analysis.interpolation.SplineInterpolator.<init>()V"]
3786 [label="org.apache.commons.math3.analysis.interpolation.SplineInterpolator.interpolate([D[D)Lorg/apache/commons/math3/analysis/polynomials/PolynomialSplineFunction;"]
3788 [label="org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;"]
3790 [label="org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolator.nextIndex(II)I"]
3792 [label="org.apache.commons.math3.analysis.interpolation.BicubicSplineInterpolator.previousIndex(I)I"]
3807 [label="org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolator.<init>()V"]
3810 [label="org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolator.interpolate([D[D)Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunctionNewtonForm;"]
3817 [label="org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm.verifyInterpolationArray([D[DZ)Z"]
3819 [label="org.apache.commons.math3.analysis.interpolation.DividedDifferenceInterpolator.computeDividedDifference([D[D)[D"]
3821 [label="org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.<init>([D[D)V"]
3844 [label="org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator.<init>()V"]
3855 [label="org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator.addSamplePoint(Lorg/apache/commons/math3/FieldElement;[[Lorg/apache/commons/math3/FieldElement;)V"]
3863 [label="org.apache.commons.math3.FieldElement.getField()Lorg/apache/commons/math3/Field;"]
3865 [label="org.apache.commons.math3.FieldElement.multiply(I)Ljava/lang/Object;"]
3867 [label="org.apache.commons.math3.FieldElement.reciprocal()Ljava/lang/Object;"]
3869 [label="org.apache.commons.math3.FieldElement.multiply(Ljava/lang/Object;)Ljava/lang/Object;"]
3871 [label="java.util.List.add(ILjava/lang/Object;)V"]
3873 [label="java.lang.Object.equals(Ljava/lang/Object;)Z"]
3875 [label="org.apache.commons.math3.exception.ZeroException.<init>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V"]
3879 [label="org.apache.commons.math3.FieldElement.subtract(Ljava/lang/Object;)Ljava/lang/Object;"]
3881 [label="org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator.value(Lorg/apache/commons/math3/FieldElement;)[Lorg/apache/commons/math3/FieldElement;"]
3884 [label="java.util.List.isEmpty()Z"]
3886 [label="org.apache.commons.math3.exception.NoDataException.<init>(Lorg/apache/commons/math3/exception/util/Localizable;)V"]
3890 [label="org.apache.commons.math3.util.MathArrays.buildArray(Lorg/apache/commons/math3/Field;I)[Ljava/lang/Object;"]
3892 [label="org.apache.commons.math3.FieldElement.add(Ljava/lang/Object;)Ljava/lang/Object;"]
3894 [label="org.apache.commons.math3.analysis.interpolation.FieldHermiteInterpolator.derivatives(Lorg/apache/commons/math3/FieldElement;I)[[Lorg/apache/commons/math3/FieldElement;"]
3898 [label="org.apache.commons.math3.util.MathArrays.buildArray(Lorg/apache/commons/math3/Field;II)[[Ljava/lang/Object;"]
3917 [label="org.apache.commons.math3.analysis.interpolation.HermiteInterpolator.<init>()V"]
3928 [label="org.apache.commons.math3.analysis.interpolation.HermiteInterpolator.addSamplePoint(D[[D)V"]
3932 [label="org.apache.commons.math3.analysis.interpolation.HermiteInterpolator.getPolynomials()[Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;"]
3934 [label="org.apache.commons.math3.analysis.interpolation.HermiteInterpolator.checkInterpolation()V"]
3936 [label="org.apache.commons.math3.analysis.interpolation.HermiteInterpolator.polynomial([D)Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;"]
3938 [label="org.apache.commons.math3.analysis.polynomials.PolynomialFunction.add(Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;)Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;"]
3940 [label="org.apache.commons.math3.analysis.polynomials.PolynomialFunction.multiply(Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;)Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;"]
3942 [label="org.apache.commons.math3.analysis.interpolation.HermiteInterpolator.value(D)[D"]
3945 [label="org.apache.commons.math3.analysis.interpolation.HermiteInterpolator.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)[Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
3948 [label="java.util.Arrays.fill([Ljava/lang/Object;Ljava/lang/Object;)V"]
3982 [label="org.apache.commons.math3.analysis.interpolation.InterpolatingMicrosphere.<init>(IIDDD)V"]
4002 [label="org.apache.commons.math3.analysis.interpolation.InterpolatingMicrosphere.<init>(IIDDDLorg/apache/commons/math3/random/UnitSphereRandomVectorGenerator;)V"]
4014 [label="org.apache.commons.math3.analysis.interpolation.InterpolatingMicrosphere.add([DZ)V"]
4016 [label="org.apache.commons.math3.random.UnitSphereRandomVectorGenerator.nextVector()[D"]
4018 [label="org.apache.commons.math3.analysis.interpolation.InterpolatingMicrosphere.<init>(Lorg/apache/commons/math3/analysis/interpolation/InterpolatingMicrosphere;)V"]
4023 [label="org.apache.commons.math3.analysis.interpolation.InterpolatingMicrosphere$FacetData.<init>(DD)V"]
4025 [label="org.apache.commons.math3.analysis.interpolation.InterpolatingMicrosphere$FacetData.illumination()D"]
4027 [label="org.apache.commons.math3.analysis.interpolation.InterpolatingMicrosphere$FacetData.sample()D"]
4029 [label="org.apache.commons.math3.analysis.interpolation.InterpolatingMicrosphere.copy()Lorg/apache/commons/math3/analysis/interpolation/InterpolatingMicrosphere;"]
4032 [label="org.apache.commons.math3.analysis.interpolation.InterpolatingMicrosphere.getDimension()I"]
4036 [label="org.apache.commons.math3.analysis.interpolation.InterpolatingMicrosphere.value([D[[D[DDD)D"]
4043 [label="org.apache.commons.math3.analysis.interpolation.InterpolatingMicrosphere.clear()V"]
4045 [label="org.apache.commons.math3.util.MathArrays.ebeSubtract([D[D)[D"]
4047 [label="org.apache.commons.math3.util.MathArrays.safeNorm([D)D"]
4049 [label="org.apache.commons.math3.analysis.interpolation.InterpolatingMicrosphere.illuminate([DDD)V"]
4051 [label="org.apache.commons.math3.analysis.interpolation.InterpolatingMicrosphere.interpolate()D"]
4056 [label="org.apache.commons.math3.exception.MaxCountExceededException.<init>(Ljava/lang/Number;)V"]
4058 [label="org.apache.commons.math3.analysis.interpolation.InterpolatingMicrosphere$Facet.<init>([D)V"]
4065 [label="org.apache.commons.math3.analysis.interpolation.InterpolatingMicrosphere$Facet.getNormal()[D"]
4067 [label="org.apache.commons.math3.util.MathArrays.cosAngle([D[D)D"]
4069 [label="java.util.List.set(ILjava/lang/Object;)Ljava/lang/Object;"]
4095 [label="org.apache.commons.math3.analysis.interpolation.InterpolatingMicrosphere2D.<init>(IDDD)V"]
4104 [label="org.apache.commons.math3.analysis.interpolation.InterpolatingMicrosphere2D.<init>(Lorg/apache/commons/math3/analysis/interpolation/InterpolatingMicrosphere2D;)V"]
4109 [label="org.apache.commons.math3.analysis.interpolation.InterpolatingMicrosphere2D.copy()Lorg/apache/commons/math3/analysis/interpolation/InterpolatingMicrosphere2D;"]
4114 [label="org.apache.commons.math3.analysis.interpolation.LinearInterpolator.<init>()V"]
4115 [label="org.apache.commons.math3.analysis.interpolation.LinearInterpolator.interpolate([D[D)Lorg/apache/commons/math3/analysis/polynomials/PolynomialSplineFunction;"]
4135 [label="org.apache.commons.math3.analysis.interpolation.LoessInterpolator.<init>()V"]
4143 [label="org.apache.commons.math3.analysis.interpolation.LoessInterpolator.<init>(DI)V"]
4147 [label="org.apache.commons.math3.analysis.interpolation.LoessInterpolator.<init>(DID)V"]
4153 [label="org.apache.commons.math3.exception.OutOfRangeException.<init>(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)V"]
4157 [label="org.apache.commons.math3.exception.NotPositiveException.<init>(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;)V"]
4161 [label="org.apache.commons.math3.analysis.interpolation.LoessInterpolator.interpolate([D[D)Lorg/apache/commons/math3/analysis/polynomials/PolynomialSplineFunction;"]
4168 [label="org.apache.commons.math3.analysis.interpolation.LoessInterpolator.smooth([D[D)[D"]
4170 [label="org.apache.commons.math3.analysis.interpolation.LoessInterpolator.smooth([D[D[D)[D"]
4175 [label="org.apache.commons.math3.analysis.interpolation.LoessInterpolator.checkAllFiniteReal([D)V"]
4177 [label="org.apache.commons.math3.analysis.interpolation.LoessInterpolator.updateBandwidthInterval([D[DI[I)V"]
4179 [label="org.apache.commons.math3.analysis.interpolation.LoessInterpolator.tricube(D)D"]
4181 [label="java.util.Arrays.sort([D)V"]
4192 [label="org.apache.commons.math3.analysis.interpolation.LoessInterpolator.nextNonzero([DI)I"]
4201 [label="org.apache.commons.math3.util.MathUtils.checkFinite(D)V"]
4235 [label="org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction$MicrosphereSurfaceElement.<init>([D)V"]
4242 [label="org.apache.commons.math3.linear.ArrayRealVector.<init>([D)V"]
4244 [label="org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction$MicrosphereSurfaceElement.normal()Lorg/apache/commons/math3/linear/RealVector;"]
4246 [label="org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction$MicrosphereSurfaceElement.reset()V"]
4250 [label="org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction$MicrosphereSurfaceElement.store(DLjava/util/Map$Entry;)V"]
4254 [label="org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction$MicrosphereSurfaceElement.illumination()D"]
4256 [label="org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction$MicrosphereSurfaceElement.sample()Ljava/util/Map$Entry;"]
4258 [label="org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.<init>([[D[DIILorg/apache/commons/math3/random/UnitSphereRandomVectorGenerator;)V"]
4271 [label="java.util.HashMap.<init>(I)V"]
4278 [label="org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.value([D)D"]
4282 [label="org.apache.commons.math3.linear.RealVector.subtract(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
4284 [label="org.apache.commons.math3.linear.RealVector.getNorm()D"]
4287 [label="org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolatingFunction.cosAngle(Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;)D"]
4295 [label="org.apache.commons.math3.linear.RealVector.dotProduct(Lorg/apache/commons/math3/linear/RealVector;)D"]
4310 [label="org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolator.<init>()V"]
4312 [label="org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolator.<init>(II)V"]
4321 [label="org.apache.commons.math3.analysis.interpolation.MicrosphereInterpolator.interpolate([[D[D)Lorg/apache/commons/math3/analysis/MultivariateFunction;"]
4325 [label="org.apache.commons.math3.random.UnitSphereRandomVectorGenerator.<init>(I)V"]
4340 [label="org.apache.commons.math3.analysis.interpolation.MicrosphereProjectionInterpolator.<init>(IIDDDDZD)V"]
4350 [label="org.apache.commons.math3.analysis.interpolation.MicrosphereProjectionInterpolator.<init>(Lorg/apache/commons/math3/analysis/interpolation/InterpolatingMicrosphere;DZD)V"]
4362 [label="org.apache.commons.math3.analysis.interpolation.MicrosphereProjectionInterpolator.interpolate([[D[D)Lorg/apache/commons/math3/analysis/MultivariateFunction;"]
4368 [label="org.apache.commons.math3.analysis.interpolation.MicrosphereProjectionInterpolator$1.<init>()V"]
4371 [label="org.apache.commons.math3.analysis.interpolation.MicrosphereProjectionInterpolator$1.value([D)D"]
4382 [label="org.apache.commons.math3.analysis.interpolation.NevilleInterpolator.<init>()V"]
4385 [label="org.apache.commons.math3.analysis.interpolation.NevilleInterpolator.interpolate([D[D)Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunctionLagrangeForm;"]
4392 [label="org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm.<init>([D[D)V"]
4404 [label="org.apache.commons.math3.analysis.interpolation.PiecewiseBicubicSplineInterpolatingFunction.<init>([D[D[[D)V"]
4413 [label="org.apache.commons.math3.exception.InsufficientDataException.<init>()V"]
4418 [label="org.apache.commons.math3.analysis.interpolation.PiecewiseBicubicSplineInterpolatingFunction.value(DD)D"]
4425 [label="org.apache.commons.math3.analysis.interpolation.PiecewiseBicubicSplineInterpolatingFunction.searchIndex(D[DII)I"]
4428 [label="org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.value(D)D"]
4441 [label="org.apache.commons.math3.analysis.interpolation.PiecewiseBicubicSplineInterpolator.<init>()V"]
4442 [label="org.apache.commons.math3.analysis.interpolation.PiecewiseBicubicSplineInterpolator.interpolate([D[D[[D)Lorg/apache/commons/math3/analysis/interpolation/PiecewiseBicubicSplineInterpolatingFunction;"]
4465 [label="org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolator.<init>()V"]
4467 [label="org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolator.<init>(I)V"]
4471 [label="org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolator.<init>(II)V"]
4482 [label="org.apache.commons.math3.optim.SimpleVectorValueChecker.<init>(DD)V"]
4487 [label="org.apache.commons.math3.fitting.PolynomialFitter.<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V"]
4492 [label="org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer.<init>(ZLorg/apache/commons/math3/optim/ConvergenceChecker;)V"]
4495 [label="org.apache.commons.math3.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolator.interpolate([D[D[[D)Lorg/apache/commons/math3/analysis/interpolation/BicubicSplineInterpolatingFunction;"]
4500 [label="org.apache.commons.math3.fitting.CurveFitter.clearObservations()V"]
4502 [label="org.apache.commons.math3.fitting.CurveFitter.addObservedPoint(DDD)V"]
4504 [label="org.apache.commons.math3.fitting.PolynomialFitter.fit([D)[D"]
4506 [label="org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(D)D"]
4534 [label="org.apache.commons.math3.analysis.interpolation.TricubicInterpolatingFunction.<init>([D[D[D[[[D[[[D[[[D[[[D[[[D[[[D[[[D[[[D)V"]
4551 [label="org.apache.commons.math3.analysis.interpolation.TricubicFunction.<init>([D)V"]
4553 [label="org.apache.commons.math3.analysis.interpolation.TricubicInterpolatingFunction.computeCoefficients([D)[D"]
4555 [label="org.apache.commons.math3.analysis.interpolation.TricubicInterpolatingFunction.value(DDD)D"]
4560 [label="org.apache.commons.math3.analysis.interpolation.TricubicInterpolatingFunction.searchIndex(D[D)I"]
4562 [label="org.apache.commons.math3.analysis.interpolation.TricubicFunction.value(DDD)D"]
4593 [label="org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.<init>()V"]
4594 [label="org.apache.commons.math3.analysis.interpolation.TricubicInterpolator.interpolate([D[D[D[[[D)Lorg/apache/commons/math3/analysis/interpolation/TricubicInterpolatingFunction;"]
4602 [label="org.apache.commons.math3.analysis.interpolation.TricubicInterpolator$1.<init>([D[D[D[[[D[[[D[[[D[[[D[[[D[[[D[[[D[[[D)V"]
4640 [label="org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction.<init>([D[D[D[[[D[[[D[[[D[[[D[[[D[[[D[[[D[[[D)V"]
4657 [label="org.apache.commons.math3.analysis.interpolation.TricubicSplineFunction.<init>([D)V"]
4659 [label="org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction.computeSplineCoefficients([D)[D"]
4661 [label="org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction.value(DDD)D"]
4666 [label="org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolatingFunction.searchIndex(D[D)I"]
4668 [label="org.apache.commons.math3.analysis.interpolation.TricubicSplineFunction.value(DDD)D"]
4691 [label="org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolator.<init>()V"]
4692 [label="org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolator.interpolate([D[D[D[[[D)Lorg/apache/commons/math3/analysis/interpolation/TricubicSplineInterpolatingFunction;"]
4704 [label="org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolator.nextIndex(II)I"]
4706 [label="org.apache.commons.math3.analysis.interpolation.TricubicSplineInterpolator.previousIndex(I)I"]
4722 [label="org.apache.commons.math3.analysis.interpolation.UnivariateInterpolator.interpolate([D[D)Lorg/apache/commons/math3/analysis/UnivariateFunction;"]
4736 [label="org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator.<init>(Lorg/apache/commons/math3/analysis/interpolation/UnivariateInterpolator;DI)V"]
4744 [label="org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator.<init>(Lorg/apache/commons/math3/analysis/interpolation/UnivariateInterpolator;D)V"]
4750 [label="org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator.interpolate([D[D)Lorg/apache/commons/math3/analysis/UnivariateFunction;"]
4754 [label="org.apache.commons.math3.util.MathUtils.reduce(DDD)D"]
4756 [label="org.apache.commons.math3.util.MathArrays.sortInPlace([D[[D)V"]
4759 [label="org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.<init>()V"]
4762 [label="org.apache.commons.math3.analysis.interpolation.UnivariatePeriodicInterpolator$1.value(D)D"]
4778 [label="org.apache.commons.math3.analysis.ParametricUnivariateFunction.value(D[D)D"]
4782 [label="org.apache.commons.math3.analysis.ParametricUnivariateFunction.gradient(D[D)[D"]
4806 [label="org.apache.commons.math3.analysis.polynomials.PolynomialFunction.evaluate([DD)D"]
4810 [label="org.apache.commons.math3.analysis.polynomials.PolynomialFunction.getCoefficients()[D"]
4815 [label="org.apache.commons.math3.analysis.polynomials.PolynomialFunction.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
4820 [label="org.apache.commons.math3.analysis.polynomials.PolynomialFunction.subtract(Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;)Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;"]
4823 [label="org.apache.commons.math3.analysis.polynomials.PolynomialFunction.negate()Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;"]
4827 [label="org.apache.commons.math3.analysis.polynomials.PolynomialFunction.differentiate([D)[D"]
4830 [label="org.apache.commons.math3.analysis.polynomials.PolynomialFunction.polynomialDerivative()Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;"]
4833 [label="org.apache.commons.math3.analysis.polynomials.PolynomialFunction.derivative()Lorg/apache/commons/math3/analysis/UnivariateFunction;"]
4836 [label="org.apache.commons.math3.analysis.polynomials.PolynomialFunction.toString()Ljava/lang/String;"]
4844 [label="java.lang.StringBuilder.<init>()V"]
4846 [label="java.lang.StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder;"]
4848 [label="org.apache.commons.math3.analysis.polynomials.PolynomialFunction.toString(D)Ljava/lang/String;"]
4850 [label="java.lang.AbstractStringBuilder.length()I"]
4852 [label="java.lang.StringBuilder.append(C)Ljava/lang/StringBuilder;"]
4854 [label="java.lang.Integer.toString(I)Ljava/lang/String;"]
4856 [label="java.lang.StringBuilder.toString()Ljava/lang/String;"]
4860 [label="java.lang.Double.toString(D)Ljava/lang/String;"]
4862 [label="java.lang.String.endsWith(Ljava/lang/String;)Z"]
4864 [label="java.lang.String.substring(II)Ljava/lang/String;"]
4866 [label="java.lang.String.length()I"]
4868 [label="org.apache.commons.math3.analysis.polynomials.PolynomialFunction.hashCode()I"]
4870 [label="java.util.Arrays.hashCode([D)I"]
4872 [label="org.apache.commons.math3.analysis.polynomials.PolynomialFunction.equals(Ljava/lang/Object;)Z"]
4875 [label="java.util.Arrays.equals([D[D)Z"]
4879 [label="org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric.<init>()V"]
4884 [label="org.apache.commons.math3.analysis.polynomials.PolynomialFunction$Parametric.value(D[D)D"]
4903 [label="org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm.value(D)D"]
4906 [label="org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm.evaluateInternal([D[DD)D"]
4908 [label="org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm.degree()I"]
4910 [label="org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm.getInterpolatingPoints()[D"]
4912 [label="org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm.getInterpolatingValues()[D"]
4914 [label="org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm.getCoefficients()[D"]
4916 [label="org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm.computeCoefficients()V"]
4919 [label="org.apache.commons.math3.analysis.polynomials.PolynomialFunctionLagrangeForm.evaluate([D[DD)D"]
4948 [label="org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.verifyInputArray([D[D)V"]
4953 [label="org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.value(D)D"]
4956 [label="org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.evaluate([D[DD)D"]
4958 [label="org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
4961 [label="org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.degree()I"]
4963 [label="org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.getNewtonCoefficients()[D"]
4965 [label="org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.getCenters()[D"]
4967 [label="org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.getCoefficients()[D"]
4969 [label="org.apache.commons.math3.analysis.polynomials.PolynomialFunctionNewtonForm.computeCoefficients()V"]
4981 [label="org.apache.commons.math3.exception.DimensionMismatchException.<init>(Lorg/apache/commons/math3/exception/util/Localizable;II)V"]
5003 [label="org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.polynomialSplineDerivative()Lorg/apache/commons/math3/analysis/polynomials/PolynomialSplineFunction;"]
5006 [label="org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.value(Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
5012 [label="org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.getPolynomials()[Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;"]
5014 [label="org.apache.commons.math3.analysis.polynomials.PolynomialSplineFunction.getKnots()[D"]
5043 [label="org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.<clinit>()"]
5063 [label="org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.<init>()V"]
5065 [label="org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.createChebyshevPolynomial(I)Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;"]
5068 [label="org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.buildPolynomial(ILjava/util/List;Lorg/apache/commons/math3/analysis/polynomials/PolynomialsUtils$RecurrenceCoefficientsGenerator;)Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;"]
5073 [label="org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$1.<init>()V"]
5083 [label="org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.createHermitePolynomial(I)Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;"]
5086 [label="org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$2.<init>()V"]
5089 [label="org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$2.generate(I)[Lorg/apache/commons/math3/fraction/BigFraction;"]
5092 [label="org.apache.commons.math3.fraction.BigFraction.<init>(I)V"]
5094 [label="org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.createLaguerrePolynomial(I)Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;"]
5097 [label="org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$3.<init>()V"]
5100 [label="org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$3.generate(I)[Lorg/apache/commons/math3/fraction/BigFraction;"]
5103 [label="org.apache.commons.math3.fraction.BigFraction.<init>(II)V"]
5105 [label="org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.createLegendrePolynomial(I)Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;"]
5108 [label="org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$4.<init>()V"]
5111 [label="org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$4.generate(I)[Lorg/apache/commons/math3/fraction/BigFraction;"]
5114 [label="org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.createJacobiPolynomial(III)Lorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;"]
5119 [label="org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$JacobiKey.<init>(II)V"]
5121 [label="org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5.<init>()V"]
5124 [label="org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$5.generate(I)[Lorg/apache/commons/math3/fraction/BigFraction;"]
5142 [label="org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.shift([DD)[D"]
5146 [label="org.apache.commons.math3.util.CombinatoricsUtils.binomialCoefficient(II)J"]
5152 [label="org.apache.commons.math3.analysis.polynomials.PolynomialsUtils.computeUpToDegree(IILorg/apache/commons/math3/analysis/polynomials/PolynomialsUtils$RecurrenceCoefficientsGenerator;Ljava/util/List;)V"]
5154 [label="org.apache.commons.math3.fraction.BigFraction.doubleValue()D"]
5161 [label="org.apache.commons.math3.analysis.polynomials.PolynomialsUtils$RecurrenceCoefficientsGenerator.generate(I)[Lorg/apache/commons/math3/fraction/BigFraction;"]
5163 [label="org.apache.commons.math3.fraction.BigFraction.subtract(Lorg/apache/commons/math3/fraction/BigFraction;)Lorg/apache/commons/math3/fraction/BigFraction;"]
5165 [label="org.apache.commons.math3.fraction.BigFraction.multiply(Lorg/apache/commons/math3/fraction/BigFraction;)Lorg/apache/commons/math3/fraction/BigFraction;"]
5167 [label="org.apache.commons.math3.fraction.BigFraction.add(Lorg/apache/commons/math3/fraction/BigFraction;)Lorg/apache/commons/math3/fraction/BigFraction;"]
5174 [label="org.apache.commons.math3.analysis.RealFieldUnivariateFunction.value(Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/RealFieldElement;"]
5226 [label="org.apache.commons.math3.analysis.solvers.AbstractDifferentiableUnivariateSolver.<init>(D)V"]
5229 [label="org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.<init>(D)V"]
5231 [label="org.apache.commons.math3.analysis.solvers.AbstractDifferentiableUnivariateSolver.<init>(DDD)V"]
5236 [label="org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.<init>(DDD)V"]
5238 [label="org.apache.commons.math3.analysis.solvers.AbstractDifferentiableUnivariateSolver.computeDerivativeObjectiveValue(D)D"]
5241 [label="org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.incrementEvaluationCount()V"]
5244 [label="org.apache.commons.math3.analysis.solvers.AbstractDifferentiableUnivariateSolver.setup(ILorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;DDD)V"]
5251 [label="org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.setup(ILorg/apache/commons/math3/analysis/UnivariateFunction;DDD)V"]
5265 [label="org.apache.commons.math3.analysis.solvers.AbstractPolynomialSolver.<init>(D)V"]
5268 [label="org.apache.commons.math3.analysis.solvers.AbstractPolynomialSolver.<init>(DD)V"]
5272 [label="org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.<init>(DD)V"]
5274 [label="org.apache.commons.math3.analysis.solvers.AbstractPolynomialSolver.<init>(DDD)V"]
5279 [label="org.apache.commons.math3.analysis.solvers.AbstractPolynomialSolver.setup(ILorg/apache/commons/math3/analysis/polynomials/PolynomialFunction;DDD)V"]
5287 [label="org.apache.commons.math3.analysis.solvers.AbstractPolynomialSolver.getCoefficients()[D"]
5300 [label="org.apache.commons.math3.analysis.solvers.AbstractUnivariateDifferentiableSolver.<init>(D)V"]
5303 [label="org.apache.commons.math3.analysis.solvers.AbstractUnivariateDifferentiableSolver.<init>(DDD)V"]
5308 [label="org.apache.commons.math3.analysis.solvers.AbstractUnivariateDifferentiableSolver.computeObjectiveValueAndDerivative(D)Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
5312 [label="org.apache.commons.math3.analysis.solvers.AbstractUnivariateDifferentiableSolver.setup(ILorg/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction;DDD)V"]
5327 [label="org.apache.commons.math3.analysis.solvers.AbstractUnivariateSolver.<init>(D)V"]
5330 [label="org.apache.commons.math3.analysis.solvers.AbstractUnivariateSolver.<init>(DD)V"]
5334 [label="org.apache.commons.math3.analysis.solvers.AbstractUnivariateSolver.<init>(DDD)V"]
5347 [label="org.apache.commons.math3.analysis.solvers.AllowedSolution.<init>()V"]
5348 [label="java.lang.Enum.<init>(Ljava/lang/String;I)V"]
5407 [label="org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getMaxEvaluations()I"]
5409 [label="org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getEvaluations()I"]
5411 [label="org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getMin()D"]
5414 [label="org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getMax()D"]
5417 [label="org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getStartValue()D"]
5420 [label="org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getAbsoluteAccuracy()D"]
5422 [label="org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getRelativeAccuracy()D"]
5424 [label="org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.getFunctionValueAccuracy()D"]
5426 [label="org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.computeObjectiveValue(D)D"]
5436 [label="org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.solve(ILorg/apache/commons/math3/analysis/UnivariateFunction;DDD)D"]
5446 [label="org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.doSolve()D"]
5448 [label="org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.solve(ILorg/apache/commons/math3/analysis/UnivariateFunction;DD)D"]
5455 [label="org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.solve(ILorg/apache/commons/math3/analysis/UnivariateFunction;D)D"]
5461 [label="org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.isBracketing(DD)Z"]
5465 [label="org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.isBracketing(Lorg/apache/commons/math3/analysis/UnivariateFunction;DD)Z"]
5467 [label="org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.isSequence(DDD)Z"]
5472 [label="org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.isSequence(DDD)Z"]
5474 [label="org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.verifyInterval(DD)V"]
5478 [label="org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.verifySequence(DDD)V"]
5483 [label="org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.verifySequence(DDD)V"]
5485 [label="org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver.verifyBracketing(DD)V"]
5489 [label="org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.verifyBracketing(Lorg/apache/commons/math3/analysis/UnivariateFunction;DD)V"]
5511 [label="org.apache.commons.math3.analysis.solvers.BaseSecantSolver.<init>(DLorg/apache/commons/math3/analysis/solvers/BaseSecantSolver$Method;)V"]
5519 [label="org.apache.commons.math3.analysis.solvers.BaseSecantSolver.<init>(DDLorg/apache/commons/math3/analysis/solvers/BaseSecantSolver$Method;)V"]
5525 [label="org.apache.commons.math3.analysis.solvers.BaseSecantSolver.<init>(DDDLorg/apache/commons/math3/analysis/solvers/BaseSecantSolver$Method;)V"]
5532 [label="org.apache.commons.math3.analysis.solvers.BaseSecantSolver.solve(ILorg/apache/commons/math3/analysis/UnivariateFunction;DDLorg/apache/commons/math3/analysis/solvers/AllowedSolution;)D"]
5539 [label="org.apache.commons.math3.analysis.solvers.BaseSecantSolver.solve(ILorg/apache/commons/math3/analysis/UnivariateFunction;DDDLorg/apache/commons/math3/analysis/solvers/AllowedSolution;)D"]
5548 [label="org.apache.commons.math3.analysis.solvers.BaseSecantSolver.solve(ILorg/apache/commons/math3/analysis/UnivariateFunction;DDD)D"]
5555 [label="org.apache.commons.math3.analysis.solvers.BaseSecantSolver.doSolve()D"]
5571 [label="org.apache.commons.math3.exception.ConvergenceException.<init>()V"]
5575 [label="org.apache.commons.math3.exception.MathInternalError.<init>()V"]
5585 [label="org.apache.commons.math3.analysis.solvers.BaseSecantSolver$Method.<init>()V"]
5598 [label="org.apache.commons.math3.analysis.solvers.BaseUnivariateSolver.getEvaluations()I"]
5600 [label="org.apache.commons.math3.analysis.solvers.BaseUnivariateSolver.getAbsoluteAccuracy()D"]
5602 [label="org.apache.commons.math3.analysis.solvers.BaseUnivariateSolver.getRelativeAccuracy()D"]
5606 [label="org.apache.commons.math3.analysis.solvers.BaseUnivariateSolver.solve(ILorg/apache/commons/math3/analysis/UnivariateFunction;DD)D"]
5615 [label="org.apache.commons.math3.analysis.solvers.BaseUnivariateSolver.solve(ILorg/apache/commons/math3/analysis/UnivariateFunction;DDD)D"]
5631 [label="org.apache.commons.math3.analysis.solvers.BisectionSolver.<init>()V"]
5633 [label="org.apache.commons.math3.analysis.solvers.BisectionSolver.<init>(D)V"]
5638 [label="org.apache.commons.math3.analysis.solvers.BisectionSolver.<init>(DD)V"]
5642 [label="org.apache.commons.math3.analysis.solvers.BisectionSolver.doSolve()D"]
5645 [label="org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.midpoint(DD)D"]
5653 [label="org.apache.commons.math3.analysis.solvers.BracketedRealFieldUnivariateSolver.getAbsoluteAccuracy()Lorg/apache/commons/math3/RealFieldElement;"]
5658 [label="org.apache.commons.math3.analysis.solvers.BracketedRealFieldUnivariateSolver.getRelativeAccuracy()Lorg/apache/commons/math3/RealFieldElement;"]
5662 [label="org.apache.commons.math3.analysis.solvers.BracketedRealFieldUnivariateSolver.solve(ILorg/apache/commons/math3/analysis/RealFieldUnivariateFunction;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/analysis/solvers/AllowedSolution;)Lorg/apache/commons/math3/RealFieldElement;"]
5683 [label="org.apache.commons.math3.analysis.solvers.BracketedUnivariateSolver.solve(ILorg/apache/commons/math3/analysis/UnivariateFunction;DDLorg/apache/commons/math3/analysis/solvers/AllowedSolution;)D"]
5693 [label="org.apache.commons.math3.analysis.solvers.BracketedUnivariateSolver.solve(ILorg/apache/commons/math3/analysis/UnivariateFunction;DDDLorg/apache/commons/math3/analysis/solvers/AllowedSolution;)D"]
5715 [label="org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolver.<init>()V"]
5717 [label="org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolver.<init>(DI)V"]
5726 [label="org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolver.<init>(DDI)V"]
5731 [label="org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolver.<init>(DDDI)V"]
5739 [label="org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolver.doSolve()D"]
5743 [label="org.apache.commons.math3.exception.NoBracketingException.<init>(DDDD)V"]
5747 [label="org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolver.guessX(D[D[DII)D"]
5755 [label="org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolver.solve(ILorg/apache/commons/math3/analysis/UnivariateFunction;DDLorg/apache/commons/math3/analysis/solvers/AllowedSolution;)D"]
5763 [label="org.apache.commons.math3.analysis.solvers.BracketingNthOrderBrentSolver.solve(ILorg/apache/commons/math3/analysis/UnivariateFunction;DDDLorg/apache/commons/math3/analysis/solvers/AllowedSolution;)D"]
5775 [label="org.apache.commons.math3.analysis.solvers.BrentSolver.<init>()V"]
5777 [label="org.apache.commons.math3.analysis.solvers.BrentSolver.<init>(D)V"]
5782 [label="org.apache.commons.math3.analysis.solvers.BrentSolver.<init>(DD)V"]
5786 [label="org.apache.commons.math3.analysis.solvers.BrentSolver.<init>(DDD)V"]
5791 [label="org.apache.commons.math3.analysis.solvers.BrentSolver.doSolve()D"]
5793 [label="org.apache.commons.math3.analysis.solvers.BrentSolver.brent(DDDD)D"]
5829 [label="org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver.<init>(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;I)V"]
5843 [label="org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver.getMaxEvaluations()I"]
5845 [label="org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver.getEvaluations()I"]
5847 [label="org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver.getAbsoluteAccuracy()Lorg/apache/commons/math3/RealFieldElement;"]
5849 [label="org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver.getRelativeAccuracy()Lorg/apache/commons/math3/RealFieldElement;"]
5851 [label="org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver.getFunctionValueAccuracy()Lorg/apache/commons/math3/RealFieldElement;"]
5853 [label="org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver.solve(ILorg/apache/commons/math3/analysis/RealFieldUnivariateFunction;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/analysis/solvers/AllowedSolution;)Lorg/apache/commons/math3/RealFieldElement;"]
5860 [label="org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver.solve(ILorg/apache/commons/math3/analysis/RealFieldUnivariateFunction;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/analysis/solvers/AllowedSolution;)Lorg/apache/commons/math3/RealFieldElement;"]
5862 [label="org.apache.commons.math3.RealFieldElement.divide(D)Ljava/lang/Object;"]
5871 [label="org.apache.commons.math3.RealFieldElement.add(D)Ljava/lang/Object;"]
5875 [label="org.apache.commons.math3.RealFieldElement.getReal()D"]
5877 [label="org.apache.commons.math3.RealFieldElement.abs()Ljava/lang/Object;"]
5880 [label="org.apache.commons.math3.FieldElement.negate()Ljava/lang/Object;"]
5882 [label="org.apache.commons.math3.analysis.solvers.FieldBracketingNthOrderBrentSolver.guessX(Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;II)Lorg/apache/commons/math3/RealFieldElement;"]
5890 [label="org.apache.commons.math3.FieldElement.divide(Ljava/lang/Object;)Ljava/lang/Object;"]
5898 [label="org.apache.commons.math3.analysis.solvers.IllinoisSolver.<init>()V"]
5902 [label="org.apache.commons.math3.analysis.solvers.IllinoisSolver.<init>(D)V"]
5905 [label="org.apache.commons.math3.analysis.solvers.IllinoisSolver.<init>(DD)V"]
5910 [label="org.apache.commons.math3.analysis.solvers.IllinoisSolver.<init>(DDD)V"]
5927 [label="org.apache.commons.math3.analysis.solvers.LaguerreSolver.<init>()V"]
5929 [label="org.apache.commons.math3.analysis.solvers.LaguerreSolver.<init>(D)V"]
5935 [label="org.apache.commons.math3.analysis.solvers.LaguerreSolver.<init>(DD)V"]
5940 [label="org.apache.commons.math3.analysis.solvers.LaguerreSolver.<init>(DDD)V"]
5946 [label="org.apache.commons.math3.analysis.solvers.LaguerreSolver.doSolve()D"]
5948 [label="org.apache.commons.math3.analysis.solvers.LaguerreSolver.laguerre(DDDD)D"]
5959 [label="org.apache.commons.math3.complex.ComplexUtils.convertToComplex([D)[Lorg/apache/commons/math3/complex/Complex;"]
5962 [label="org.apache.commons.math3.complex.Complex.<init>(DD)V"]
5964 [label="org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver.solve([Lorg/apache/commons/math3/complex/Complex;Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;"]
5967 [label="org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver.isRoot(DDLorg/apache/commons/math3/complex/Complex;)Z"]
5969 [label="org.apache.commons.math3.complex.Complex.getReal()D"]
5971 [label="org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver.solveAll([Lorg/apache/commons/math3/complex/Complex;Lorg/apache/commons/math3/complex/Complex;)[Lorg/apache/commons/math3/complex/Complex;"]
5973 [label="org.apache.commons.math3.analysis.solvers.LaguerreSolver.solveAllComplex([DD)[Lorg/apache/commons/math3/complex/Complex;"]
5977 [label="org.apache.commons.math3.analysis.solvers.LaguerreSolver.solveAllComplex([DDI)[Lorg/apache/commons/math3/complex/Complex;"]
5984 [label="org.apache.commons.math3.analysis.solvers.LaguerreSolver.solveComplex([DD)Lorg/apache/commons/math3/complex/Complex;"]
5988 [label="org.apache.commons.math3.analysis.solvers.LaguerreSolver.solveComplex([DDI)Lorg/apache/commons/math3/complex/Complex;"]
5995 [label="org.apache.commons.math3.analysis.solvers.LaguerreSolver$ComplexSolver.<init>()V"]
6001 [label="org.apache.commons.math3.complex.Complex.abs()D"]
6003 [label="org.apache.commons.math3.complex.Complex.getImaginary()D"]
6010 [label="org.apache.commons.math3.complex.Complex.add(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;"]
6012 [label="org.apache.commons.math3.complex.Complex.multiply(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;"]
6019 [label="org.apache.commons.math3.complex.Complex.subtract(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;"]
6021 [label="org.apache.commons.math3.complex.Complex.divide(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;"]
6023 [label="org.apache.commons.math3.complex.Complex.sqrt()Lorg/apache/commons/math3/complex/Complex;"]
6025 [label="org.apache.commons.math3.complex.Complex.equals(Ljava/lang/Object;)Z"]
6031 [label="org.apache.commons.math3.analysis.solvers.MullerSolver.<init>()V"]
6033 [label="org.apache.commons.math3.analysis.solvers.MullerSolver.<init>(D)V"]
6038 [label="org.apache.commons.math3.analysis.solvers.MullerSolver.<init>(DD)V"]
6042 [label="org.apache.commons.math3.analysis.solvers.MullerSolver.doSolve()D"]
6045 [label="org.apache.commons.math3.analysis.solvers.MullerSolver.solve(DDDD)D"]
6056 [label="org.apache.commons.math3.analysis.solvers.MullerSolver2.<init>()V"]
6058 [label="org.apache.commons.math3.analysis.solvers.MullerSolver2.<init>(D)V"]
6063 [label="org.apache.commons.math3.analysis.solvers.MullerSolver2.<init>(DD)V"]
6067 [label="org.apache.commons.math3.analysis.solvers.MullerSolver2.doSolve()D"]
6069 [label="org.apache.commons.math3.util.FastMath.random()D"]
6077 [label="org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolver.<init>()V"]
6079 [label="org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolver.<init>(D)V"]
6085 [label="org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolver.solve(ILorg/apache/commons/math3/analysis/differentiation/UnivariateDifferentiableFunction;DD)D"]
6092 [label="org.apache.commons.math3.analysis.solvers.NewtonRaphsonSolver.doSolve()D"]
6101 [label="org.apache.commons.math3.analysis.solvers.NewtonSolver.<init>()V"]
6103 [label="org.apache.commons.math3.analysis.solvers.NewtonSolver.<init>(D)V"]
6109 [label="org.apache.commons.math3.analysis.solvers.NewtonSolver.solve(ILorg/apache/commons/math3/analysis/DifferentiableUnivariateFunction;DD)D"]
6115 [label="org.apache.commons.math3.analysis.solvers.NewtonSolver.doSolve()D"]
6120 [label="org.apache.commons.math3.analysis.solvers.PegasusSolver.<init>()V"]
6122 [label="org.apache.commons.math3.analysis.solvers.PegasusSolver.<init>(D)V"]
6125 [label="org.apache.commons.math3.analysis.solvers.PegasusSolver.<init>(DD)V"]
6129 [label="org.apache.commons.math3.analysis.solvers.PegasusSolver.<init>(DDD)V"]
6140 [label="org.apache.commons.math3.analysis.solvers.RegulaFalsiSolver.<init>()V"]
6142 [label="org.apache.commons.math3.analysis.solvers.RegulaFalsiSolver.<init>(D)V"]
6145 [label="org.apache.commons.math3.analysis.solvers.RegulaFalsiSolver.<init>(DD)V"]
6149 [label="org.apache.commons.math3.analysis.solvers.RegulaFalsiSolver.<init>(DDD)V"]
6158 [label="org.apache.commons.math3.analysis.solvers.RiddersSolver.<init>()V"]
6160 [label="org.apache.commons.math3.analysis.solvers.RiddersSolver.<init>(D)V"]
6165 [label="org.apache.commons.math3.analysis.solvers.RiddersSolver.<init>(DD)V"]
6169 [label="org.apache.commons.math3.analysis.solvers.RiddersSolver.doSolve()D"]
6175 [label="org.apache.commons.math3.analysis.solvers.SecantSolver.<init>()V"]
6178 [label="org.apache.commons.math3.analysis.solvers.SecantSolver.<init>(D)V"]
6181 [label="org.apache.commons.math3.analysis.solvers.SecantSolver.<init>(DD)V"]
6185 [label="org.apache.commons.math3.analysis.solvers.SecantSolver.doSolve()D"]
6197 [label="org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.<init>()V"]
6199 [label="org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.solve(Lorg/apache/commons/math3/analysis/UnivariateFunction;DD)D"]
6204 [label="org.apache.commons.math3.exception.NullArgumentException.<init>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V"]
6212 [label="org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.solve(Lorg/apache/commons/math3/analysis/UnivariateFunction;DDD)D"]
6218 [label="org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.forceSide(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/analysis/solvers/BracketedUnivariateSolver;DDDLorg/apache/commons/math3/analysis/solvers/AllowedSolution;)D"]
6230 [label="org.apache.commons.math3.exception.NoBracketingException.<init>(Lorg/apache/commons/math3/exception/util/Localizable;DDDD[Ljava/lang/Object;)V"]
6234 [label="org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.bracket(Lorg/apache/commons/math3/analysis/UnivariateFunction;DDD)[D"]
6240 [label="org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.bracket(Lorg/apache/commons/math3/analysis/UnivariateFunction;DDDDDI)[D"]
6242 [label="org.apache.commons.math3.analysis.solvers.UnivariateSolverUtils.bracket(Lorg/apache/commons/math3/analysis/UnivariateFunction;DDDI)[D"]
6273 [label="org.apache.commons.math3.exception.NumberIsTooLargeException.<init>(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;Ljava/lang/Number;Z)V"]
6334 [label="org.apache.commons.math3.complex.Complex.<init>(D)V"]
6345 [label="org.apache.commons.math3.complex.Complex.isInfinite()Z"]
6350 [label="org.apache.commons.math3.complex.Complex.createComplex(DD)Lorg/apache/commons/math3/complex/Complex;"]
6352 [label="org.apache.commons.math3.complex.Complex.add(D)Lorg/apache/commons/math3/complex/Complex;"]
6355 [label="org.apache.commons.math3.complex.Complex.conjugate()Lorg/apache/commons/math3/complex/Complex;"]
6359 [label="org.apache.commons.math3.complex.Complex.divide(D)Lorg/apache/commons/math3/complex/Complex;"]
6362 [label="org.apache.commons.math3.complex.Complex.reciprocal()Lorg/apache/commons/math3/complex/Complex;"]
6367 [label="org.apache.commons.math3.util.MathUtils.equals(DD)Z"]
6369 [label="org.apache.commons.math3.complex.Complex.equals(Lorg/apache/commons/math3/complex/Complex;Lorg/apache/commons/math3/complex/Complex;I)Z"]
6374 [label="org.apache.commons.math3.complex.Complex.equals(Lorg/apache/commons/math3/complex/Complex;Lorg/apache/commons/math3/complex/Complex;)Z"]
6379 [label="org.apache.commons.math3.complex.Complex.equals(Lorg/apache/commons/math3/complex/Complex;Lorg/apache/commons/math3/complex/Complex;D)Z"]
6384 [label="org.apache.commons.math3.util.Precision.equals(DDD)Z"]
6386 [label="org.apache.commons.math3.complex.Complex.equalsWithRelativeTolerance(Lorg/apache/commons/math3/complex/Complex;Lorg/apache/commons/math3/complex/Complex;D)Z"]
6391 [label="org.apache.commons.math3.util.Precision.equalsWithRelativeTolerance(DDD)Z"]
6393 [label="org.apache.commons.math3.complex.Complex.hashCode()I"]
6402 [label="org.apache.commons.math3.complex.Complex.multiply(I)Lorg/apache/commons/math3/complex/Complex;"]
6405 [label="org.apache.commons.math3.complex.Complex.multiply(D)Lorg/apache/commons/math3/complex/Complex;"]
6408 [label="org.apache.commons.math3.complex.Complex.negate()Lorg/apache/commons/math3/complex/Complex;"]
6412 [label="org.apache.commons.math3.complex.Complex.subtract(D)Lorg/apache/commons/math3/complex/Complex;"]
6415 [label="org.apache.commons.math3.complex.Complex.acos()Lorg/apache/commons/math3/complex/Complex;"]
6417 [label="org.apache.commons.math3.complex.Complex.log()Lorg/apache/commons/math3/complex/Complex;"]
6419 [label="org.apache.commons.math3.complex.Complex.sqrt1z()Lorg/apache/commons/math3/complex/Complex;"]
6423 [label="org.apache.commons.math3.complex.Complex.asin()Lorg/apache/commons/math3/complex/Complex;"]
6425 [label="org.apache.commons.math3.complex.Complex.atan()Lorg/apache/commons/math3/complex/Complex;"]
6427 [label="org.apache.commons.math3.complex.Complex.cos()Lorg/apache/commons/math3/complex/Complex;"]
6429 [label="org.apache.commons.math3.complex.Complex.cosh()Lorg/apache/commons/math3/complex/Complex;"]
6431 [label="org.apache.commons.math3.complex.Complex.exp()Lorg/apache/commons/math3/complex/Complex;"]
6434 [label="org.apache.commons.math3.complex.Complex.pow(Lorg/apache/commons/math3/complex/Complex;)Lorg/apache/commons/math3/complex/Complex;"]
6438 [label="org.apache.commons.math3.complex.Complex.pow(D)Lorg/apache/commons/math3/complex/Complex;"]
6442 [label="org.apache.commons.math3.complex.Complex.sin()Lorg/apache/commons/math3/complex/Complex;"]
6444 [label="org.apache.commons.math3.complex.Complex.sinh()Lorg/apache/commons/math3/complex/Complex;"]
6447 [label="org.apache.commons.math3.util.FastMath.copySign(DD)D"]
6450 [label="org.apache.commons.math3.complex.Complex.tan()Lorg/apache/commons/math3/complex/Complex;"]
6452 [label="org.apache.commons.math3.complex.Complex.tanh()Lorg/apache/commons/math3/complex/Complex;"]
6454 [label="org.apache.commons.math3.complex.Complex.getArgument()D"]
6456 [label="org.apache.commons.math3.complex.Complex.nthRoot(I)Ljava/util/List;"]
6471 [label="org.apache.commons.math3.complex.Complex.valueOf(DD)Lorg/apache/commons/math3/complex/Complex;"]
6475 [label="org.apache.commons.math3.complex.Complex.valueOf(D)Lorg/apache/commons/math3/complex/Complex;"]
6479 [label="org.apache.commons.math3.complex.Complex.readResolve()Ljava/lang/Object;"]
6481 [label="org.apache.commons.math3.complex.Complex.getField()Lorg/apache/commons/math3/complex/ComplexField;"]
6486 [label="org.apache.commons.math3.complex.ComplexField.getInstance()Lorg/apache/commons/math3/complex/ComplexField;"]
6496 [label="org.apache.commons.math3.complex.ComplexField.<init>()V"]
6514 [label="org.apache.commons.math3.complex.ComplexField$LazyHolder.<init>()V"]
6532 [label="org.apache.commons.math3.complex.ComplexFormat.<init>()V"]
6537 [label="org.apache.commons.math3.util.CompositeFormat.getDefaultNumberFormat()Ljava/text/NumberFormat;"]
6540 [label="org.apache.commons.math3.complex.ComplexFormat.<init>(Ljava/text/NumberFormat;)V"]
6545 [label="org.apache.commons.math3.complex.ComplexFormat.<init>(Ljava/text/NumberFormat;Ljava/text/NumberFormat;)V"]
6551 [label="org.apache.commons.math3.complex.ComplexFormat.<init>(Ljava/lang/String;)V"]
6554 [label="org.apache.commons.math3.complex.ComplexFormat.<init>(Ljava/lang/String;Ljava/text/NumberFormat;)V"]
6559 [label="org.apache.commons.math3.complex.ComplexFormat.<init>(Ljava/lang/String;Ljava/text/NumberFormat;Ljava/text/NumberFormat;)V"]
6565 [label="org.apache.commons.math3.complex.ComplexFormat.getAvailableLocales()[Ljava/util/Locale;"]
6571 [label="java.text.NumberFormat.getAvailableLocales()[Ljava/util/Locale;"]
6573 [label="org.apache.commons.math3.complex.ComplexFormat.format(Lorg/apache/commons/math3/complex/Complex;)Ljava/lang/String;"]
6576 [label="java.lang.StringBuffer.toString()Ljava/lang/String;"]
6578 [label="org.apache.commons.math3.complex.ComplexFormat.format(Lorg/apache/commons/math3/complex/Complex;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;"]
6583 [label="java.lang.StringBuffer.<init>()V"]
6588 [label="java.text.FieldPosition.<init>(I)V"]
6590 [label="org.apache.commons.math3.complex.ComplexFormat.format(Ljava/lang/Double;)Ljava/lang/String;"]
6597 [label="java.text.FieldPosition.setBeginIndex(I)V"]
6599 [label="java.text.FieldPosition.setEndIndex(I)V"]
6601 [label="org.apache.commons.math3.util.CompositeFormat.formatDouble(DLjava/text/NumberFormat;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;"]
6603 [label="org.apache.commons.math3.complex.ComplexFormat.getRealFormat()Ljava/text/NumberFormat;"]
6605 [label="java.lang.StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer;"]
6607 [label="org.apache.commons.math3.complex.ComplexFormat.formatImaginary(DLjava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;"]
6609 [label="java.lang.StringBuffer.append(Ljava/lang/StringBuffer;)Ljava/lang/StringBuffer;"]
6611 [label="org.apache.commons.math3.complex.ComplexFormat.getImaginaryCharacter()Ljava/lang/String;"]
6617 [label="org.apache.commons.math3.complex.ComplexFormat.getImaginaryFormat()Ljava/text/NumberFormat;"]
6619 [label="java.lang.String.equals(Ljava/lang/Object;)Z"]
6621 [label="java.lang.StringBuffer.setLength(I)V"]
6623 [label="org.apache.commons.math3.complex.ComplexFormat.format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;"]
6630 [label="java.lang.Class.getName()Ljava/lang/String;"]
6632 [label="java.lang.Object.getClass()Ljava/lang/Class;"]
6636 [label="org.apache.commons.math3.complex.ComplexFormat.getInstance()Lorg/apache/commons/math3/complex/ComplexFormat;"]
6640 [label="org.apache.commons.math3.complex.ComplexFormat.getInstance(Ljava/util/Locale;)Lorg/apache/commons/math3/complex/ComplexFormat;"]
6642 [label="java.util.Locale.getDefault()Ljava/util/Locale;"]
6646 [label="org.apache.commons.math3.util.CompositeFormat.getDefaultNumberFormat(Ljava/util/Locale;)Ljava/text/NumberFormat;"]
6649 [label="org.apache.commons.math3.complex.ComplexFormat.getInstance(Ljava/lang/String;Ljava/util/Locale;)Lorg/apache/commons/math3/complex/ComplexFormat;"]
6654 [label="org.apache.commons.math3.complex.ComplexFormat.parse(Ljava/lang/String;)Lorg/apache/commons/math3/complex/Complex;"]
6663 [label="java.text.ParsePosition.<init>(I)V"]
6665 [label="org.apache.commons.math3.complex.ComplexFormat.parse(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math3/complex/Complex;"]
6667 [label="java.text.ParsePosition.getIndex()I"]
6669 [label="org.apache.commons.math3.exception.MathParseException.<init>(Ljava/lang/String;ILjava/lang/Class;)V"]
6671 [label="java.text.ParsePosition.getErrorIndex()I"]
6676 [label="org.apache.commons.math3.util.CompositeFormat.parseAndIgnoreWhitespace(Ljava/lang/String;Ljava/text/ParsePosition;)V"]
6678 [label="org.apache.commons.math3.util.CompositeFormat.parseNumber(Ljava/lang/String;Ljava/text/NumberFormat;Ljava/text/ParsePosition;)Ljava/lang/Number;"]
6680 [label="java.text.ParsePosition.setIndex(I)V"]
6685 [label="org.apache.commons.math3.util.CompositeFormat.parseNextCharacter(Ljava/lang/String;Ljava/text/ParsePosition;)C"]
6687 [label="java.text.ParsePosition.setErrorIndex(I)V"]
6689 [label="org.apache.commons.math3.util.CompositeFormat.parseFixedstring(Ljava/lang/String;Ljava/lang/String;Ljava/text/ParsePosition;)Z"]
6693 [label="org.apache.commons.math3.complex.ComplexUtils.<init>()V"]
6695 [label="org.apache.commons.math3.complex.ComplexUtils.polar2Complex(DD)Lorg/apache/commons/math3/complex/Complex;"]
6727 [label="org.apache.commons.math3.complex.Quaternion.<init>(DDDD)V"]
6737 [label="org.apache.commons.math3.complex.Quaternion.<init>(D[D)V"]
6741 [label="org.apache.commons.math3.complex.Quaternion.<init>([D)V"]
6745 [label="org.apache.commons.math3.complex.Quaternion.getConjugate()Lorg/apache/commons/math3/complex/Quaternion;"]
6748 [label="org.apache.commons.math3.complex.Quaternion.multiply(Lorg/apache/commons/math3/complex/Quaternion;Lorg/apache/commons/math3/complex/Quaternion;)Lorg/apache/commons/math3/complex/Quaternion;"]
6752 [label="org.apache.commons.math3.complex.Quaternion.getQ0()D"]
6754 [label="org.apache.commons.math3.complex.Quaternion.getQ1()D"]
6756 [label="org.apache.commons.math3.complex.Quaternion.getQ2()D"]
6758 [label="org.apache.commons.math3.complex.Quaternion.getQ3()D"]
6760 [label="org.apache.commons.math3.complex.Quaternion.multiply(Lorg/apache/commons/math3/complex/Quaternion;)Lorg/apache/commons/math3/complex/Quaternion;"]
6764 [label="org.apache.commons.math3.complex.Quaternion.add(Lorg/apache/commons/math3/complex/Quaternion;Lorg/apache/commons/math3/complex/Quaternion;)Lorg/apache/commons/math3/complex/Quaternion;"]
6768 [label="org.apache.commons.math3.complex.Quaternion.add(Lorg/apache/commons/math3/complex/Quaternion;)Lorg/apache/commons/math3/complex/Quaternion;"]
6772 [label="org.apache.commons.math3.complex.Quaternion.subtract(Lorg/apache/commons/math3/complex/Quaternion;Lorg/apache/commons/math3/complex/Quaternion;)Lorg/apache/commons/math3/complex/Quaternion;"]
6776 [label="org.apache.commons.math3.complex.Quaternion.subtract(Lorg/apache/commons/math3/complex/Quaternion;)Lorg/apache/commons/math3/complex/Quaternion;"]
6780 [label="org.apache.commons.math3.complex.Quaternion.dotProduct(Lorg/apache/commons/math3/complex/Quaternion;Lorg/apache/commons/math3/complex/Quaternion;)D"]
6784 [label="org.apache.commons.math3.complex.Quaternion.dotProduct(Lorg/apache/commons/math3/complex/Quaternion;)D"]
6788 [label="org.apache.commons.math3.complex.Quaternion.getNorm()D"]
6790 [label="org.apache.commons.math3.complex.Quaternion.normalize()Lorg/apache/commons/math3/complex/Quaternion;"]
6795 [label="org.apache.commons.math3.complex.Quaternion.equals(Ljava/lang/Object;)Z"]
6798 [label="org.apache.commons.math3.complex.Quaternion.hashCode()I"]
6800 [label="org.apache.commons.math3.complex.Quaternion.equals(Lorg/apache/commons/math3/complex/Quaternion;D)Z"]
6804 [label="org.apache.commons.math3.complex.Quaternion.isUnitQuaternion(D)Z"]
6807 [label="org.apache.commons.math3.complex.Quaternion.isPureQuaternion(D)Z"]
6810 [label="org.apache.commons.math3.complex.Quaternion.getPositivePolarForm()Lorg/apache/commons/math3/complex/Quaternion;"]
6813 [label="org.apache.commons.math3.complex.Quaternion.getInverse()Lorg/apache/commons/math3/complex/Quaternion;"]
6819 [label="org.apache.commons.math3.complex.Quaternion.getScalarPart()D"]
6821 [label="org.apache.commons.math3.complex.Quaternion.getVectorPart()[D"]
6823 [label="org.apache.commons.math3.complex.Quaternion.multiply(D)Lorg/apache/commons/math3/complex/Quaternion;"]
6826 [label="org.apache.commons.math3.complex.Quaternion.toString()Ljava/lang/String;"]
6828 [label="java.lang.StringBuilder.append(D)Ljava/lang/StringBuilder;"]
6844 [label="org.apache.commons.math3.complex.RootsOfUnity.<init>()V"]
6851 [label="org.apache.commons.math3.complex.RootsOfUnity.isCounterClockWise()Z"]
6856 [label="org.apache.commons.math3.exception.MathIllegalStateException.<init>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V"]
6860 [label="org.apache.commons.math3.complex.RootsOfUnity.computeRoots(I)V"]
6865 [label="org.apache.commons.math3.util.FastMath.abs(I)I"]
6867 [label="org.apache.commons.math3.complex.RootsOfUnity.getReal(I)D"]
6872 [label="org.apache.commons.math3.complex.RootsOfUnity.getImaginary(I)D"]
6894 [label="org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP.<init>(Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;I)V"]
6901 [label="org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP.getAbsoluteAccuracy()Lorg/apache/commons/math3/dfp/Dfp;"]
6904 [label="org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP.getRelativeAccuracy()Lorg/apache/commons/math3/dfp/Dfp;"]
6907 [label="org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP.getFunctionValueAccuracy()Lorg/apache/commons/math3/dfp/Dfp;"]
6910 [label="org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP.solve(ILorg/apache/commons/math3/dfp/UnivariateDfpFunction;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/analysis/solvers/AllowedSolution;)Lorg/apache/commons/math3/dfp/Dfp;"]
6920 [label="org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP.solve(ILorg/apache/commons/math3/dfp/UnivariateDfpFunction;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/analysis/solvers/AllowedSolution;)Lorg/apache/commons/math3/dfp/Dfp;"]
6922 [label="org.apache.commons.math3.dfp.Dfp.divide(I)Lorg/apache/commons/math3/dfp/Dfp;"]
6924 [label="org.apache.commons.math3.dfp.Dfp.add(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;"]
6936 [label="org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP$1.<init>()V"]
6939 [label="org.apache.commons.math3.dfp.BracketingNthOrderBrentSolverDFP$1.value(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;"]
6942 [label="org.apache.commons.math3.dfp.UnivariateDfpFunction.value(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;"]
7008 [label="org.apache.commons.math3.dfp.Dfp.<init>(Lorg/apache/commons/math3/dfp/DfpField;)V"]
7012 [label="org.apache.commons.math3.dfp.DfpField.getRadixDigits()I"]
7019 [label="org.apache.commons.math3.dfp.Dfp.<init>(Lorg/apache/commons/math3/dfp/DfpField;B)V"]
7023 [label="org.apache.commons.math3.dfp.Dfp.<init>(Lorg/apache/commons/math3/dfp/DfpField;J)V"]
7025 [label="org.apache.commons.math3.dfp.Dfp.<init>(Lorg/apache/commons/math3/dfp/DfpField;I)V"]
7035 [label="org.apache.commons.math3.dfp.Dfp.<init>(Lorg/apache/commons/math3/dfp/DfpField;D)V"]
7041 [label="org.apache.commons.math3.dfp.Dfp.divide(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;"]
7043 [label="org.apache.commons.math3.dfp.DfpField.getOne()Lorg/apache/commons/math3/dfp/Dfp;"]
7045 [label="org.apache.commons.math3.dfp.Dfp.multiply(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;"]
7047 [label="org.apache.commons.math3.dfp.DfpMath.pow(Lorg/apache/commons/math3/dfp/Dfp;I)Lorg/apache/commons/math3/dfp/Dfp;"]
7049 [label="org.apache.commons.math3.dfp.DfpField.getTwo()Lorg/apache/commons/math3/dfp/Dfp;"]
7051 [label="org.apache.commons.math3.dfp.Dfp.negate()Lorg/apache/commons/math3/dfp/Dfp;"]
7053 [label="org.apache.commons.math3.dfp.Dfp.<init>(Lorg/apache/commons/math3/dfp/Dfp;)V"]
7056 [label="org.apache.commons.math3.dfp.Dfp.<init>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V"]
7061 [label="org.apache.commons.math3.dfp.Dfp.getRadixDigits()I"]
7066 [label="java.lang.String.indexOf(Ljava/lang/String;)I"]
7068 [label="java.lang.String.substring(I)Ljava/lang/String;"]
7070 [label="java.lang.String.charAt(I)C"]
7072 [label="org.apache.commons.math3.dfp.Dfp.round(I)I"]
7074 [label="org.apache.commons.math3.dfp.Dfp.<init>(Lorg/apache/commons/math3/dfp/DfpField;BB)V"]
7079 [label="org.apache.commons.math3.dfp.Dfp.newInstance()Lorg/apache/commons/math3/dfp/Dfp;"]
7082 [label="org.apache.commons.math3.dfp.Dfp.getField()Lorg/apache/commons/math3/dfp/DfpField;"]
7084 [label="org.apache.commons.math3.dfp.Dfp.newInstance(B)Lorg/apache/commons/math3/dfp/Dfp;"]
7088 [label="org.apache.commons.math3.dfp.Dfp.newInstance(I)Lorg/apache/commons/math3/dfp/Dfp;"]
7092 [label="org.apache.commons.math3.dfp.Dfp.newInstance(J)Lorg/apache/commons/math3/dfp/Dfp;"]
7095 [label="org.apache.commons.math3.dfp.Dfp.newInstance(D)Lorg/apache/commons/math3/dfp/Dfp;"]
7099 [label="org.apache.commons.math3.dfp.Dfp.newInstance(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;"]
7102 [label="org.apache.commons.math3.dfp.DfpField.setIEEEFlagsBits(I)V"]
7107 [label="org.apache.commons.math3.dfp.Dfp.getZero()Lorg/apache/commons/math3/dfp/Dfp;"]
7109 [label="org.apache.commons.math3.dfp.Dfp.dotrap(ILjava/lang/String;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;"]
7113 [label="org.apache.commons.math3.dfp.Dfp.newInstance(Ljava/lang/String;)Lorg/apache/commons/math3/dfp/Dfp;"]
7117 [label="org.apache.commons.math3.dfp.Dfp.newInstance(BB)Lorg/apache/commons/math3/dfp/Dfp;"]
7121 [label="org.apache.commons.math3.dfp.DfpField.newDfp(BB)Lorg/apache/commons/math3/dfp/Dfp;"]
7126 [label="org.apache.commons.math3.dfp.DfpField.getZero()Lorg/apache/commons/math3/dfp/Dfp;"]
7128 [label="org.apache.commons.math3.dfp.Dfp.getOne()Lorg/apache/commons/math3/dfp/Dfp;"]
7130 [label="org.apache.commons.math3.dfp.Dfp.getTwo()Lorg/apache/commons/math3/dfp/Dfp;"]
7132 [label="org.apache.commons.math3.dfp.Dfp.shiftLeft()V"]
7134 [label="org.apache.commons.math3.dfp.Dfp.shiftRight()V"]
7137 [label="org.apache.commons.math3.dfp.Dfp.align(I)I"]
7145 [label="org.apache.commons.math3.dfp.Dfp.lessThan(Lorg/apache/commons/math3/dfp/Dfp;)Z"]
7149 [label="org.apache.commons.math3.dfp.Dfp.isNaN()Z"]
7151 [label="org.apache.commons.math3.dfp.Dfp.compare(Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;)I"]
7153 [label="org.apache.commons.math3.dfp.Dfp.greaterThan(Lorg/apache/commons/math3/dfp/Dfp;)Z"]
7157 [label="org.apache.commons.math3.dfp.Dfp.negativeOrNull()Z"]
7159 [label="org.apache.commons.math3.dfp.Dfp.isInfinite()Z"]
7161 [label="org.apache.commons.math3.dfp.Dfp.strictlyNegative()Z"]
7163 [label="org.apache.commons.math3.dfp.Dfp.positiveOrNull()Z"]
7165 [label="org.apache.commons.math3.dfp.Dfp.strictlyPositive()Z"]
7167 [label="org.apache.commons.math3.dfp.Dfp.abs()Lorg/apache/commons/math3/dfp/Dfp;"]
7172 [label="org.apache.commons.math3.dfp.Dfp.isZero()Z"]
7174 [label="org.apache.commons.math3.dfp.Dfp.equals(Ljava/lang/Object;)Z"]
7177 [label="org.apache.commons.math3.dfp.Dfp.hashCode()I"]
7180 [label="java.util.Arrays.hashCode([I)I"]
7182 [label="org.apache.commons.math3.dfp.Dfp.unequal(Lorg/apache/commons/math3/dfp/Dfp;)Z"]
7190 [label="org.apache.commons.math3.dfp.Dfp.rint()Lorg/apache/commons/math3/dfp/Dfp;"]
7192 [label="org.apache.commons.math3.dfp.Dfp.trunc(Lorg/apache/commons/math3/dfp/DfpField$RoundingMode;)Lorg/apache/commons/math3/dfp/Dfp;"]
7196 [label="org.apache.commons.math3.dfp.Dfp.floor()Lorg/apache/commons/math3/dfp/Dfp;"]
7200 [label="org.apache.commons.math3.dfp.Dfp.ceil()Lorg/apache/commons/math3/dfp/Dfp;"]
7204 [label="org.apache.commons.math3.dfp.Dfp.remainder(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;"]
7207 [label="org.apache.commons.math3.dfp.Dfp.subtract(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;"]
7220 [label="org.apache.commons.math3.dfp.Dfp.intValue()I"]
7222 [label="org.apache.commons.math3.dfp.Dfp.log10K()I"]
7224 [label="org.apache.commons.math3.dfp.Dfp.power10K(I)Lorg/apache/commons/math3/dfp/Dfp;"]
7227 [label="org.apache.commons.math3.dfp.Dfp.intLog10()I"]
7229 [label="org.apache.commons.math3.dfp.Dfp.power10(I)Lorg/apache/commons/math3/dfp/Dfp;"]
7232 [label="org.apache.commons.math3.dfp.Dfp.multiply(I)Lorg/apache/commons/math3/dfp/Dfp;"]
7234 [label="org.apache.commons.math3.dfp.Dfp.complement(I)I"]
7247 [label="org.apache.commons.math3.dfp.DfpField.getRoundingMode()Lorg/apache/commons/math3/dfp/DfpField$RoundingMode;"]
7270 [label="org.apache.commons.math3.dfp.Dfp.multiplyFast(I)Lorg/apache/commons/math3/dfp/Dfp;"]
7281 [label="org.apache.commons.math3.dfp.Dfp.reciprocal()Lorg/apache/commons/math3/dfp/Dfp;"]
7283 [label="org.apache.commons.math3.dfp.Dfp.sqrt()Lorg/apache/commons/math3/dfp/Dfp;"]
7287 [label="org.apache.commons.math3.dfp.Dfp.toString()Ljava/lang/String;"]
7289 [label="org.apache.commons.math3.dfp.Dfp.dfp2sci()Ljava/lang/String;"]
7291 [label="org.apache.commons.math3.dfp.Dfp.dfp2string()Ljava/lang/String;"]
7294 [label="java.lang.String.<init>([CII)V"]
7303 [label="org.apache.commons.math3.dfp.Dfp.trap(ILjava/lang/String;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;"]
7311 [label="org.apache.commons.math3.dfp.Dfp.classify()I"]
7313 [label="org.apache.commons.math3.dfp.Dfp.copysign(Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;"]
7317 [label="org.apache.commons.math3.dfp.Dfp.nextAfter(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;"]
7322 [label="org.apache.commons.math3.dfp.Dfp.toDouble()D"]
7328 [label="java.lang.Long.parseLong(Ljava/lang/String;)J"]
7330 [label="java.lang.Double.longBitsToDouble(J)D"]
7332 [label="org.apache.commons.math3.dfp.Dfp.toSplitDouble()[D"]
7336 [label="org.apache.commons.math3.dfp.Dfp.getReal()D"]
7338 [label="org.apache.commons.math3.dfp.Dfp.add(D)Lorg/apache/commons/math3/dfp/Dfp;"]
7341 [label="org.apache.commons.math3.dfp.Dfp.subtract(D)Lorg/apache/commons/math3/dfp/Dfp;"]
7344 [label="org.apache.commons.math3.dfp.Dfp.multiply(D)Lorg/apache/commons/math3/dfp/Dfp;"]
7347 [label="org.apache.commons.math3.dfp.Dfp.divide(D)Lorg/apache/commons/math3/dfp/Dfp;"]
7350 [label="org.apache.commons.math3.dfp.Dfp.remainder(D)Lorg/apache/commons/math3/dfp/Dfp;"]
7354 [label="org.apache.commons.math3.dfp.Dfp.round()J"]
7356 [label="org.apache.commons.math3.dfp.Dfp.signum()Lorg/apache/commons/math3/dfp/Dfp;"]
7358 [label="org.apache.commons.math3.dfp.Dfp.copySign(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;"]
7361 [label="org.apache.commons.math3.dfp.Dfp.copySign(D)Lorg/apache/commons/math3/dfp/Dfp;"]
7364 [label="org.apache.commons.math3.dfp.Dfp.scalb(I)Lorg/apache/commons/math3/dfp/Dfp;"]
7367 [label="org.apache.commons.math3.dfp.Dfp.hypot(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;"]
7371 [label="org.apache.commons.math3.dfp.Dfp.cbrt()Lorg/apache/commons/math3/dfp/Dfp;"]
7373 [label="org.apache.commons.math3.dfp.Dfp.rootN(I)Lorg/apache/commons/math3/dfp/Dfp;"]
7377 [label="org.apache.commons.math3.dfp.DfpMath.pow(Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;"]
7379 [label="org.apache.commons.math3.dfp.Dfp.pow(D)Lorg/apache/commons/math3/dfp/Dfp;"]
7382 [label="org.apache.commons.math3.dfp.Dfp.pow(I)Lorg/apache/commons/math3/dfp/Dfp;"]
7385 [label="org.apache.commons.math3.dfp.Dfp.pow(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;"]
7388 [label="org.apache.commons.math3.dfp.Dfp.exp()Lorg/apache/commons/math3/dfp/Dfp;"]
7390 [label="org.apache.commons.math3.dfp.DfpMath.exp(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;"]
7392 [label="org.apache.commons.math3.dfp.Dfp.expm1()Lorg/apache/commons/math3/dfp/Dfp;"]
7394 [label="org.apache.commons.math3.dfp.Dfp.log()Lorg/apache/commons/math3/dfp/Dfp;"]
7396 [label="org.apache.commons.math3.dfp.DfpMath.log(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;"]
7398 [label="org.apache.commons.math3.dfp.Dfp.log1p()Lorg/apache/commons/math3/dfp/Dfp;"]
7400 [label="org.apache.commons.math3.dfp.Dfp.log10()I"]
7403 [label="org.apache.commons.math3.dfp.Dfp.cos()Lorg/apache/commons/math3/dfp/Dfp;"]
7412 [label="org.apache.commons.math3.dfp.DfpMath.cos(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;"]
7414 [label="org.apache.commons.math3.dfp.Dfp.sin()Lorg/apache/commons/math3/dfp/Dfp;"]
7416 [label="org.apache.commons.math3.dfp.DfpMath.sin(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;"]
7418 [label="org.apache.commons.math3.dfp.Dfp.tan()Lorg/apache/commons/math3/dfp/Dfp;"]
7420 [label="org.apache.commons.math3.dfp.DfpMath.tan(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;"]
7422 [label="org.apache.commons.math3.dfp.Dfp.acos()Lorg/apache/commons/math3/dfp/Dfp;"]
7424 [label="org.apache.commons.math3.dfp.DfpMath.acos(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;"]
7426 [label="org.apache.commons.math3.dfp.Dfp.asin()Lorg/apache/commons/math3/dfp/Dfp;"]
7428 [label="org.apache.commons.math3.dfp.DfpMath.asin(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;"]
7430 [label="org.apache.commons.math3.dfp.Dfp.atan()Lorg/apache/commons/math3/dfp/Dfp;"]
7432 [label="org.apache.commons.math3.dfp.DfpMath.atan(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;"]
7434 [label="org.apache.commons.math3.dfp.Dfp.atan2(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;"]
7438 [label="org.apache.commons.math3.dfp.Dfp.cosh()Lorg/apache/commons/math3/dfp/Dfp;"]
7440 [label="org.apache.commons.math3.dfp.Dfp.sinh()Lorg/apache/commons/math3/dfp/Dfp;"]
7442 [label="org.apache.commons.math3.dfp.Dfp.tanh()Lorg/apache/commons/math3/dfp/Dfp;"]
7444 [label="org.apache.commons.math3.dfp.Dfp.acosh()Lorg/apache/commons/math3/dfp/Dfp;"]
7447 [label="org.apache.commons.math3.dfp.Dfp.asinh()Lorg/apache/commons/math3/dfp/Dfp;"]
7449 [label="org.apache.commons.math3.dfp.Dfp.atanh()Lorg/apache/commons/math3/dfp/Dfp;"]
7451 [label="org.apache.commons.math3.dfp.Dfp.linearCombination([Lorg/apache/commons/math3/dfp/Dfp;[Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;"]
7456 [label="org.apache.commons.math3.dfp.Dfp.linearCombination([D[Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;"]
7461 [label="org.apache.commons.math3.dfp.Dfp.linearCombination(Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;"]
7467 [label="org.apache.commons.math3.dfp.Dfp.linearCombination(DLorg/apache/commons/math3/dfp/Dfp;DLorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;"]
7473 [label="org.apache.commons.math3.dfp.Dfp.linearCombination(Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;"]
7481 [label="org.apache.commons.math3.dfp.Dfp.linearCombination(DLorg/apache/commons/math3/dfp/Dfp;DLorg/apache/commons/math3/dfp/Dfp;DLorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;"]
7489 [label="org.apache.commons.math3.dfp.Dfp.linearCombination(Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;"]
7499 [label="org.apache.commons.math3.dfp.Dfp.linearCombination(DLorg/apache/commons/math3/dfp/Dfp;DLorg/apache/commons/math3/dfp/Dfp;DLorg/apache/commons/math3/dfp/Dfp;DLorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;"]
7511 [label="org.apache.commons.math3.dfp.DfpDec.<init>(Lorg/apache/commons/math3/dfp/DfpField;)V"]
7514 [label="org.apache.commons.math3.dfp.DfpDec.<init>(Lorg/apache/commons/math3/dfp/DfpField;B)V"]
7518 [label="org.apache.commons.math3.dfp.DfpDec.<init>(Lorg/apache/commons/math3/dfp/DfpField;I)V"]
7522 [label="org.apache.commons.math3.dfp.DfpDec.<init>(Lorg/apache/commons/math3/dfp/DfpField;J)V"]
7526 [label="org.apache.commons.math3.dfp.DfpDec.<init>(Lorg/apache/commons/math3/dfp/DfpField;D)V"]
7530 [label="org.apache.commons.math3.dfp.DfpDec.round(I)I"]
7532 [label="org.apache.commons.math3.dfp.DfpDec.<init>(Lorg/apache/commons/math3/dfp/Dfp;)V"]
7535 [label="org.apache.commons.math3.dfp.DfpDec.<init>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V"]
7539 [label="org.apache.commons.math3.dfp.DfpDec.<init>(Lorg/apache/commons/math3/dfp/DfpField;BB)V"]
7545 [label="org.apache.commons.math3.dfp.DfpDec.newInstance()Lorg/apache/commons/math3/dfp/Dfp;"]
7550 [label="org.apache.commons.math3.dfp.DfpDec.newInstance(B)Lorg/apache/commons/math3/dfp/Dfp;"]
7554 [label="org.apache.commons.math3.dfp.DfpDec.newInstance(I)Lorg/apache/commons/math3/dfp/Dfp;"]
7558 [label="org.apache.commons.math3.dfp.DfpDec.newInstance(J)Lorg/apache/commons/math3/dfp/Dfp;"]
7562 [label="org.apache.commons.math3.dfp.DfpDec.newInstance(D)Lorg/apache/commons/math3/dfp/Dfp;"]
7566 [label="org.apache.commons.math3.dfp.DfpDec.newInstance(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;"]
7571 [label="org.apache.commons.math3.dfp.DfpDec.newInstance(Ljava/lang/String;)Lorg/apache/commons/math3/dfp/Dfp;"]
7575 [label="org.apache.commons.math3.dfp.DfpDec.newInstance(BB)Lorg/apache/commons/math3/dfp/Dfp;"]
7580 [label="org.apache.commons.math3.dfp.DfpDec.getDecimalDigits()I"]
7585 [label="org.apache.commons.math3.dfp.DfpDec.nextAfter(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;"]
7599 [label="org.apache.commons.math3.dfp.DfpField$RoundingMode.<init>()V"]
7676 [label="org.apache.commons.math3.dfp.DfpField.<init>(I)V"]
7679 [label="org.apache.commons.math3.dfp.DfpField.<init>(IZ)V"]
7690 [label="org.apache.commons.math3.dfp.DfpField.computeStringConstants(I)V"]
7695 [label="org.apache.commons.math3.dfp.DfpField.split(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;"]
7731 [label="org.apache.commons.math3.dfp.DfpField.newDfp()Lorg/apache/commons/math3/dfp/Dfp;"]
7733 [label="org.apache.commons.math3.dfp.DfpField.newDfp(B)Lorg/apache/commons/math3/dfp/Dfp;"]
7736 [label="org.apache.commons.math3.dfp.DfpField.newDfp(I)Lorg/apache/commons/math3/dfp/Dfp;"]
7739 [label="org.apache.commons.math3.dfp.DfpField.newDfp(J)Lorg/apache/commons/math3/dfp/Dfp;"]
7742 [label="org.apache.commons.math3.dfp.DfpField.newDfp(D)Lorg/apache/commons/math3/dfp/Dfp;"]
7745 [label="org.apache.commons.math3.dfp.DfpField.newDfp(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;"]
7748 [label="org.apache.commons.math3.dfp.DfpField.newDfp(Ljava/lang/String;)Lorg/apache/commons/math3/dfp/Dfp;"]
7767 [label="org.apache.commons.math3.dfp.DfpField.getSqr2Split()[Lorg/apache/commons/math3/dfp/Dfp;"]
7775 [label="org.apache.commons.math3.dfp.DfpField.getPi()Lorg/apache/commons/math3/dfp/Dfp;"]
7777 [label="org.apache.commons.math3.dfp.DfpField.getPiSplit()[Lorg/apache/commons/math3/dfp/Dfp;"]
7781 [label="org.apache.commons.math3.dfp.DfpField.getESplit()[Lorg/apache/commons/math3/dfp/Dfp;"]
7783 [label="org.apache.commons.math3.dfp.DfpField.getLn2()Lorg/apache/commons/math3/dfp/Dfp;"]
7785 [label="org.apache.commons.math3.dfp.DfpField.getLn2Split()[Lorg/apache/commons/math3/dfp/Dfp;"]
7789 [label="org.apache.commons.math3.dfp.DfpField.getLn5Split()[Lorg/apache/commons/math3/dfp/Dfp;"]
7795 [label="java.lang.String.<init>([C)V"]
7799 [label="org.apache.commons.math3.dfp.DfpField.computePi(Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;"]
7801 [label="org.apache.commons.math3.dfp.DfpField.computeExp(Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;"]
7803 [label="org.apache.commons.math3.dfp.DfpField.computeLn(Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;"]
7820 [label="org.apache.commons.math3.dfp.DfpMath.<init>()V"]
7822 [label="org.apache.commons.math3.dfp.DfpMath.split(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;"]
7827 [label="org.apache.commons.math3.dfp.DfpMath.split(Lorg/apache/commons/math3/dfp/Dfp;)[Lorg/apache/commons/math3/dfp/Dfp;"]
7830 [label="org.apache.commons.math3.dfp.DfpMath.splitMult([Lorg/apache/commons/math3/dfp/Dfp;[Lorg/apache/commons/math3/dfp/Dfp;)[Lorg/apache/commons/math3/dfp/Dfp;"]
7834 [label="org.apache.commons.math3.dfp.DfpMath.splitDiv([Lorg/apache/commons/math3/dfp/Dfp;[Lorg/apache/commons/math3/dfp/Dfp;)[Lorg/apache/commons/math3/dfp/Dfp;"]
7838 [label="org.apache.commons.math3.dfp.DfpMath.splitPow([Lorg/apache/commons/math3/dfp/Dfp;I)Lorg/apache/commons/math3/dfp/Dfp;"]
7853 [label="org.apache.commons.math3.dfp.DfpMath.expInternal(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;"]
7862 [label="org.apache.commons.math3.dfp.DfpMath.logInternal([Lorg/apache/commons/math3/dfp/Dfp;)[Lorg/apache/commons/math3/dfp/Dfp;"]
7864 [label="java.lang.StringBuilder.append(I)Ljava/lang/StringBuilder;"]
7875 [label="org.apache.commons.math3.dfp.DfpMath.sinInternal([Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;"]
7878 [label="org.apache.commons.math3.dfp.DfpMath.cosInternal([Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;"]
7891 [label="org.apache.commons.math3.dfp.DfpMath.atanInternal(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;"]
7966 [label="org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>()V"]
7969 [label="org.apache.commons.math3.distribution.AbstractIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V"]
7972 [label="org.apache.commons.math3.distribution.AbstractIntegerDistribution.cumulativeProbability(II)D"]
7978 [label="org.apache.commons.math3.distribution.IntegerDistribution.cumulativeProbability(I)D"]
7980 [label="org.apache.commons.math3.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(D)I"]
7983 [label="org.apache.commons.math3.distribution.IntegerDistribution.getSupportLowerBound()I"]
7987 [label="org.apache.commons.math3.distribution.AbstractIntegerDistribution.checkedCumulativeProbability(I)D"]
7989 [label="org.apache.commons.math3.distribution.IntegerDistribution.getSupportUpperBound()I"]
7991 [label="org.apache.commons.math3.distribution.IntegerDistribution.getNumericalMean()D"]
7993 [label="org.apache.commons.math3.distribution.IntegerDistribution.getNumericalVariance()D"]
7995 [label="org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(DII)I"]
8001 [label="org.apache.commons.math3.distribution.AbstractIntegerDistribution.reseedRandomGenerator(J)V"]
8004 [label="org.apache.commons.math3.random.RandomGenerator.setSeed(J)V"]
8006 [label="org.apache.commons.math3.random.RandomDataImpl.reSeed(J)V"]
8009 [label="org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample()I"]
8012 [label="org.apache.commons.math3.random.RandomGenerator.nextDouble()D"]
8014 [label="org.apache.commons.math3.distribution.AbstractIntegerDistribution.sample(I)[I"]
8022 [label="org.apache.commons.math3.exception.MathInternalError.<init>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V"]
8026 [label="org.apache.commons.math3.distribution.AbstractIntegerDistribution.logProbability(I)D"]
8029 [label="org.apache.commons.math3.distribution.IntegerDistribution.probability(I)D"]
8040 [label="org.apache.commons.math3.distribution.AbstractMultivariateRealDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;I)V"]
8046 [label="org.apache.commons.math3.distribution.AbstractMultivariateRealDistribution.reseedRandomGenerator(J)V"]
8049 [label="org.apache.commons.math3.distribution.AbstractMultivariateRealDistribution.getDimension()I"]
8051 [label="org.apache.commons.math3.distribution.AbstractMultivariateRealDistribution.sample()[D"]
8053 [label="org.apache.commons.math3.distribution.AbstractMultivariateRealDistribution.sample(I)[[D"]
8073 [label="org.apache.commons.math3.distribution.AbstractRealDistribution.<init>()V"]
8076 [label="org.apache.commons.math3.distribution.AbstractRealDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V"]
8079 [label="org.apache.commons.math3.distribution.AbstractRealDistribution.cumulativeProbability(DD)D"]
8083 [label="org.apache.commons.math3.distribution.AbstractRealDistribution.probability(DD)D"]
8088 [label="org.apache.commons.math3.distribution.RealDistribution.cumulativeProbability(D)D"]
8090 [label="org.apache.commons.math3.distribution.AbstractRealDistribution.inverseCumulativeProbability(D)D"]
8093 [label="org.apache.commons.math3.distribution.RealDistribution.getSupportLowerBound()D"]
8095 [label="org.apache.commons.math3.distribution.RealDistribution.getSupportUpperBound()D"]
8097 [label="org.apache.commons.math3.distribution.RealDistribution.getNumericalMean()D"]
8099 [label="org.apache.commons.math3.distribution.RealDistribution.getNumericalVariance()D"]
8101 [label="org.apache.commons.math3.distribution.AbstractRealDistribution$1.<init>()V"]
8104 [label="org.apache.commons.math3.distribution.AbstractRealDistribution$1.value(D)D"]
8108 [label="org.apache.commons.math3.distribution.AbstractRealDistribution.getSolverAbsoluteAccuracy()D"]
8110 [label="org.apache.commons.math3.distribution.RealDistribution.isSupportConnected()Z"]
8114 [label="org.apache.commons.math3.distribution.AbstractRealDistribution.reseedRandomGenerator(J)V"]
8118 [label="org.apache.commons.math3.distribution.AbstractRealDistribution.sample()D"]
8121 [label="org.apache.commons.math3.distribution.AbstractRealDistribution.sample(I)[D"]
8128 [label="org.apache.commons.math3.distribution.AbstractRealDistribution.logDensity(D)D"]
8131 [label="org.apache.commons.math3.distribution.RealDistribution.density(D)D"]
8149 [label="org.apache.commons.math3.distribution.BetaDistribution.<init>(DD)V"]
8153 [label="org.apache.commons.math3.distribution.BetaDistribution.<init>(DDD)V"]
8160 [label="org.apache.commons.math3.distribution.BetaDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DDD)V"]
8165 [label="org.apache.commons.math3.random.Well19937c.<init>()V"]
8167 [label="org.apache.commons.math3.distribution.BetaDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DD)V"]
8182 [label="org.apache.commons.math3.distribution.BetaDistribution.getAlpha()D"]
8184 [label="org.apache.commons.math3.distribution.BetaDistribution.getBeta()D"]
8186 [label="org.apache.commons.math3.distribution.BetaDistribution.recomputeZ()V"]
8188 [label="org.apache.commons.math3.special.Gamma.logGamma(D)D"]
8190 [label="org.apache.commons.math3.distribution.BetaDistribution.density(D)D"]
8193 [label="org.apache.commons.math3.distribution.BetaDistribution.logDensity(D)D"]
8202 [label="org.apache.commons.math3.distribution.BetaDistribution.cumulativeProbability(D)D"]
8205 [label="org.apache.commons.math3.special.Beta.regularizedBeta(DDD)D"]
8209 [label="org.apache.commons.math3.distribution.BetaDistribution.getNumericalMean()D"]
8213 [label="org.apache.commons.math3.distribution.BetaDistribution.getNumericalVariance()D"]
8225 [label="org.apache.commons.math3.distribution.BetaDistribution.sample()D"]
8227 [label="org.apache.commons.math3.distribution.BetaDistribution$ChengBetaSampler.sample(Lorg/apache/commons/math3/random/RandomGenerator;DD)D"]
8231 [label="org.apache.commons.math3.distribution.BetaDistribution$ChengBetaSampler.<init>()V"]
8236 [label="org.apache.commons.math3.distribution.BetaDistribution$ChengBetaSampler.algorithmBB(Lorg/apache/commons/math3/random/RandomGenerator;DDD)D"]
8238 [label="org.apache.commons.math3.distribution.BetaDistribution$ChengBetaSampler.algorithmBC(Lorg/apache/commons/math3/random/RandomGenerator;DDD)D"]
8262 [label="org.apache.commons.math3.distribution.BinomialDistribution.<init>(ID)V"]
8266 [label="org.apache.commons.math3.distribution.BinomialDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;ID)V"]
8281 [label="org.apache.commons.math3.distribution.BinomialDistribution.probability(I)D"]
8284 [label="org.apache.commons.math3.distribution.BinomialDistribution.logProbability(I)D"]
8288 [label="org.apache.commons.math3.distribution.SaddlePointExpansion.logBinomialProbability(IIDD)D"]
8290 [label="org.apache.commons.math3.distribution.BinomialDistribution.cumulativeProbability(I)D"]
8315 [label="org.apache.commons.math3.distribution.CauchyDistribution.<init>()V"]
8317 [label="org.apache.commons.math3.distribution.CauchyDistribution.<init>(DD)V"]
8322 [label="org.apache.commons.math3.distribution.CauchyDistribution.<init>(DDD)V"]
8329 [label="org.apache.commons.math3.distribution.CauchyDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DDD)V"]
8331 [label="org.apache.commons.math3.distribution.CauchyDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DD)V"]
8346 [label="org.apache.commons.math3.distribution.CauchyDistribution.cumulativeProbability(D)D"]
8356 [label="org.apache.commons.math3.distribution.CauchyDistribution.inverseCumulativeProbability(D)D"]
8388 [label="org.apache.commons.math3.distribution.ChiSquaredDistribution.<init>(D)V"]
8391 [label="org.apache.commons.math3.distribution.ChiSquaredDistribution.<init>(DD)V"]
8397 [label="org.apache.commons.math3.distribution.ChiSquaredDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DD)V"]
8399 [label="org.apache.commons.math3.distribution.ChiSquaredDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;D)V"]
8408 [label="org.apache.commons.math3.distribution.GammaDistribution.<init>(DD)V"]
8411 [label="org.apache.commons.math3.distribution.ChiSquaredDistribution.getDegreesOfFreedom()D"]
8413 [label="org.apache.commons.math3.distribution.GammaDistribution.getShape()D"]
8415 [label="org.apache.commons.math3.distribution.ChiSquaredDistribution.density(D)D"]
8418 [label="org.apache.commons.math3.distribution.GammaDistribution.density(D)D"]
8420 [label="org.apache.commons.math3.distribution.ChiSquaredDistribution.logDensity(D)D"]
8423 [label="org.apache.commons.math3.distribution.GammaDistribution.logDensity(D)D"]
8425 [label="org.apache.commons.math3.distribution.ChiSquaredDistribution.cumulativeProbability(D)D"]
8428 [label="org.apache.commons.math3.distribution.GammaDistribution.cumulativeProbability(D)D"]
8432 [label="org.apache.commons.math3.distribution.ChiSquaredDistribution.getNumericalMean()D"]
8435 [label="org.apache.commons.math3.distribution.ChiSquaredDistribution.getNumericalVariance()D"]
8453 [label="org.apache.commons.math3.distribution.ConstantRealDistribution.<init>(D)V"]
8463 [label="org.apache.commons.math3.distribution.ConstantRealDistribution.inverseCumulativeProbability(D)D"]
8503 [label="org.apache.commons.math3.distribution.EnumeratedDistribution.<init>(Ljava/util/List;)V"]
8515 [label="org.apache.commons.math3.distribution.EnumeratedDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;Ljava/util/List;)V"]
8525 [label="org.apache.commons.math3.util.Pair.getKey()Ljava/lang/Object;"]
8527 [label="org.apache.commons.math3.util.Pair.getValue()Ljava/lang/Object;"]
8529 [label="org.apache.commons.math3.exception.NotFiniteNumberException.<init>(Ljava/lang/Number;[Ljava/lang/Object;)V"]
8531 [label="org.apache.commons.math3.exception.NotANumberException.<init>()V"]
8534 [label="org.apache.commons.math3.util.MathArrays.normalizeArray([DD)[D"]
8537 [label="org.apache.commons.math3.distribution.EnumeratedDistribution.reseedRandomGenerator(J)V"]
8540 [label="org.apache.commons.math3.distribution.EnumeratedDistribution.probability(Ljava/lang/Object;)D"]
8543 [label="org.apache.commons.math3.distribution.EnumeratedDistribution.getPmf()Ljava/util/List;"]
8548 [label="org.apache.commons.math3.distribution.EnumeratedDistribution.sample()Ljava/lang/Object;"]
8550 [label="org.apache.commons.math3.distribution.EnumeratedDistribution.sample(I)[Ljava/lang/Object;"]
8555 [label="org.apache.commons.math3.distribution.EnumeratedDistribution.sample(I[Ljava/lang/Object;)[Ljava/lang/Object;"]
8562 [label="java.lang.reflect.Array.newInstance(Ljava/lang/Class;I)Ljava/lang/Object;"]
8564 [label="java.lang.Class.getComponentType()Ljava/lang/Class;"]
8577 [label="org.apache.commons.math3.distribution.EnumeratedIntegerDistribution.<init>([I[D)V"]
8581 [label="org.apache.commons.math3.distribution.EnumeratedIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[I[D)V"]
8588 [label="org.apache.commons.math3.distribution.EnumeratedIntegerDistribution.createDistribution([I[D)Ljava/util/List;"]
8590 [label="org.apache.commons.math3.distribution.EnumeratedIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[I)V"]
8600 [label="java.lang.Integer.intValue()I"]
8605 [label="org.apache.commons.math3.distribution.EnumeratedIntegerDistribution.<init>([I)V"]
8621 [label="org.apache.commons.math3.distribution.EnumeratedIntegerDistribution.probability(I)D"]
8625 [label="org.apache.commons.math3.distribution.EnumeratedIntegerDistribution.cumulativeProbability(I)D"]
8629 [label="org.apache.commons.math3.distribution.EnumeratedIntegerDistribution.getNumericalMean()D"]
8631 [label="org.apache.commons.math3.distribution.EnumeratedIntegerDistribution.getNumericalVariance()D"]
8633 [label="org.apache.commons.math3.distribution.EnumeratedIntegerDistribution.getSupportLowerBound()I"]
8635 [label="org.apache.commons.math3.distribution.EnumeratedIntegerDistribution.getSupportUpperBound()I"]
8639 [label="org.apache.commons.math3.distribution.EnumeratedIntegerDistribution.sample()I"]
8650 [label="org.apache.commons.math3.distribution.EnumeratedRealDistribution.<init>([D[D)V"]
8654 [label="org.apache.commons.math3.distribution.EnumeratedRealDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[D)V"]
8661 [label="org.apache.commons.math3.distribution.EnumeratedRealDistribution.createDistribution([D[D)Ljava/util/List;"]
8663 [label="org.apache.commons.math3.distribution.EnumeratedRealDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D)V"]
8676 [label="org.apache.commons.math3.distribution.EnumeratedRealDistribution.<init>([D)V"]
8692 [label="org.apache.commons.math3.distribution.EnumeratedRealDistribution.probability(D)D"]
8695 [label="org.apache.commons.math3.distribution.EnumeratedRealDistribution.density(D)D"]
8699 [label="org.apache.commons.math3.distribution.EnumeratedRealDistribution.cumulativeProbability(D)D"]
8702 [label="org.apache.commons.math3.distribution.EnumeratedRealDistribution.inverseCumulativeProbability(D)D"]
8705 [label="org.apache.commons.math3.distribution.EnumeratedRealDistribution.getSupportLowerBound()D"]
8707 [label="org.apache.commons.math3.distribution.EnumeratedRealDistribution.getNumericalMean()D"]
8709 [label="org.apache.commons.math3.distribution.EnumeratedRealDistribution.getNumericalVariance()D"]
8712 [label="org.apache.commons.math3.distribution.EnumeratedRealDistribution.getSupportUpperBound()D"]
8720 [label="org.apache.commons.math3.distribution.EnumeratedRealDistribution.sample()D"]
8736 [label="org.apache.commons.math3.distribution.ExponentialDistribution.<clinit>()"]
8741 [label="org.apache.commons.math3.util.ResizableDoubleArray.<init>(I)V"]
8743 [label="org.apache.commons.math3.util.ResizableDoubleArray.addElement(D)V"]
8746 [label="org.apache.commons.math3.util.ResizableDoubleArray.getElements()[D"]
8748 [label="org.apache.commons.math3.distribution.ExponentialDistribution.<init>(D)V"]
8751 [label="org.apache.commons.math3.distribution.ExponentialDistribution.<init>(DD)V"]
8757 [label="org.apache.commons.math3.distribution.ExponentialDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DD)V"]
8759 [label="org.apache.commons.math3.distribution.ExponentialDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;D)V"]
8772 [label="org.apache.commons.math3.distribution.ExponentialDistribution.getMean()D"]
8774 [label="org.apache.commons.math3.distribution.ExponentialDistribution.density(D)D"]
8777 [label="org.apache.commons.math3.distribution.ExponentialDistribution.logDensity(D)D"]
8781 [label="org.apache.commons.math3.distribution.ExponentialDistribution.cumulativeProbability(D)D"]
8784 [label="org.apache.commons.math3.distribution.ExponentialDistribution.inverseCumulativeProbability(D)D"]
8787 [label="org.apache.commons.math3.distribution.ExponentialDistribution.sample()D"]
8791 [label="org.apache.commons.math3.distribution.ExponentialDistribution.getNumericalMean()D"]
8794 [label="org.apache.commons.math3.distribution.ExponentialDistribution.getNumericalVariance()D"]
8822 [label="org.apache.commons.math3.distribution.FDistribution.<init>(DD)V"]
8826 [label="org.apache.commons.math3.distribution.FDistribution.<init>(DDD)V"]
8833 [label="org.apache.commons.math3.distribution.FDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DDD)V"]
8835 [label="org.apache.commons.math3.distribution.FDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DD)V"]
8850 [label="org.apache.commons.math3.distribution.FDistribution.density(D)D"]
8853 [label="org.apache.commons.math3.distribution.FDistribution.logDensity(D)D"]
8857 [label="org.apache.commons.math3.special.Beta.logBeta(DD)D"]
8859 [label="org.apache.commons.math3.distribution.FDistribution.cumulativeProbability(D)D"]
8862 [label="org.apache.commons.math3.distribution.FDistribution.getNumeratorDegreesOfFreedom()D"]
8864 [label="org.apache.commons.math3.distribution.FDistribution.getDenominatorDegreesOfFreedom()D"]
8868 [label="org.apache.commons.math3.distribution.FDistribution.getNumericalMean()D"]
8871 [label="org.apache.commons.math3.distribution.FDistribution.getNumericalVariance()D"]
8875 [label="org.apache.commons.math3.distribution.FDistribution.calculateNumericalVariance()D"]
8908 [label="org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization.<init>([[D)V"]
8914 [label="org.apache.commons.math3.util.MathArrays.copyOf([DI)[D"]
8916 [label="org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization.fit(Lorg/apache/commons/math3/distribution/MixtureMultivariateNormalDistribution;ID)V"]
8926 [label="org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution.getComponents()Ljava/util/List;"]
8928 [label="org.apache.commons.math3.distribution.MultivariateNormalDistribution.getMeans()[D"]
8932 [label="org.apache.commons.math3.distribution.MixtureMultivariateNormalDistribution.<init>(Ljava/util/List;)V"]
8944 [label="org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution.density([D)D"]
8946 [label="org.apache.commons.math3.distribution.MultivariateNormalDistribution.density([D)D"]
8955 [label="org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>(II)V"]
8957 [label="org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>([D)V"]
8959 [label="org.apache.commons.math3.linear.RealMatrix.scalarMultiply(D)Lorg/apache/commons/math3/linear/RealMatrix;"]
8961 [label="org.apache.commons.math3.linear.RealMatrix.multiply(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;"]
8963 [label="org.apache.commons.math3.linear.RealMatrix.transpose()Lorg/apache/commons/math3/linear/RealMatrix;"]
8965 [label="org.apache.commons.math3.linear.RealMatrix.add(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;"]
8967 [label="org.apache.commons.math3.linear.RealMatrix.getData()[[D"]
8969 [label="org.apache.commons.math3.distribution.MixtureMultivariateNormalDistribution.<init>([D[[D[[[D)V"]
8971 [label="org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization.fit(Lorg/apache/commons/math3/distribution/MixtureMultivariateNormalDistribution;)V"]
8977 [label="org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization.estimate([[DI)Lorg/apache/commons/math3/distribution/MixtureMultivariateNormalDistribution;"]
8985 [label="org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization$DataRow.<init>([D)V"]
8987 [label="java.util.Arrays.sort([Ljava/lang/Object;)V"]
8992 [label="org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization$DataRow.getRow()[D"]
8994 [label="org.apache.commons.math3.util.MathArrays.scaleInPlace(D[D)V"]
8996 [label="org.apache.commons.math3.stat.correlation.Covariance.getCovarianceMatrix()Lorg/apache/commons/math3/linear/RealMatrix;"]
9001 [label="org.apache.commons.math3.stat.correlation.Covariance.<init>([[D)V"]
9003 [label="org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>([D[[D)V"]
9007 [label="org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization.getFittedModel()Lorg/apache/commons/math3/distribution/MixtureMultivariateNormalDistribution;"]
9022 [label="org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization$DataRow.compareTo(Lorg/apache/commons/math3/distribution/fitting/MultivariateNormalMixtureExpectationMaximization$DataRow;)I"]
9025 [label="java.lang.Double.compareTo(Ljava/lang/Double;)I"]
9027 [label="org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization$DataRow.equals(Ljava/lang/Object;)Z"]
9030 [label="org.apache.commons.math3.distribution.fitting.MultivariateNormalMixtureExpectationMaximization$DataRow.hashCode()I"]
9063 [label="org.apache.commons.math3.distribution.GammaDistribution.<init>(DDD)V"]
9070 [label="org.apache.commons.math3.distribution.GammaDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DDD)V"]
9072 [label="org.apache.commons.math3.distribution.GammaDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DD)V"]
9093 [label="org.apache.commons.math3.special.Gamma.lanczos(D)D"]
9113 [label="org.apache.commons.math3.special.Gamma.regularizedGammaP(DD)D"]
9131 [label="org.apache.commons.math3.distribution.GammaDistribution.sample()D"]
9133 [label="org.apache.commons.math3.random.RandomGenerator.nextGaussian()D"]
9145 [label="org.apache.commons.math3.distribution.GeometricDistribution.<init>(D)V"]
9148 [label="org.apache.commons.math3.distribution.GeometricDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;D)V"]
9160 [label="org.apache.commons.math3.distribution.GeometricDistribution.probability(I)D"]
9166 [label="org.apache.commons.math3.distribution.GeometricDistribution.cumulativeProbability(I)D"]
9179 [label="org.apache.commons.math3.distribution.GeometricDistribution.inverseCumulativeProbability(D)I"]
9182 [label="java.lang.Math.max(II)I"]
9184 [label="java.lang.Math.ceil(D)D"]
9196 [label="org.apache.commons.math3.distribution.GumbelDistribution.<init>(DD)V"]
9200 [label="org.apache.commons.math3.distribution.GumbelDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DD)V"]
9212 [label="org.apache.commons.math3.distribution.GumbelDistribution.density(D)D"]
9215 [label="org.apache.commons.math3.distribution.GumbelDistribution.cumulativeProbability(D)D"]
9218 [label="org.apache.commons.math3.distribution.GumbelDistribution.inverseCumulativeProbability(D)D"]
9252 [label="org.apache.commons.math3.distribution.HypergeometricDistribution.<init>(III)V"]
9257 [label="org.apache.commons.math3.distribution.HypergeometricDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;III)V"]
9275 [label="org.apache.commons.math3.distribution.HypergeometricDistribution.cumulativeProbability(I)D"]
9278 [label="org.apache.commons.math3.distribution.HypergeometricDistribution.getDomain(III)[I"]
9280 [label="org.apache.commons.math3.distribution.HypergeometricDistribution.innerCumulativeProbability(III)D"]
9286 [label="org.apache.commons.math3.distribution.HypergeometricDistribution.getLowerDomain(III)I"]
9288 [label="org.apache.commons.math3.distribution.HypergeometricDistribution.getUpperDomain(II)I"]
9294 [label="org.apache.commons.math3.distribution.HypergeometricDistribution.getNumberOfSuccesses()I"]
9296 [label="org.apache.commons.math3.distribution.HypergeometricDistribution.getPopulationSize()I"]
9298 [label="org.apache.commons.math3.distribution.HypergeometricDistribution.getSampleSize()I"]
9303 [label="org.apache.commons.math3.distribution.HypergeometricDistribution.probability(I)D"]
9306 [label="org.apache.commons.math3.distribution.HypergeometricDistribution.logProbability(I)D"]
9310 [label="org.apache.commons.math3.distribution.HypergeometricDistribution.upperCumulativeProbability(I)D"]
9318 [label="org.apache.commons.math3.distribution.HypergeometricDistribution.getNumericalMean()D"]
9323 [label="org.apache.commons.math3.distribution.HypergeometricDistribution.getNumericalVariance()D"]
9327 [label="org.apache.commons.math3.distribution.HypergeometricDistribution.calculateNumericalVariance()D"]
9330 [label="org.apache.commons.math3.distribution.HypergeometricDistribution.getSupportLowerBound()I"]
9332 [label="org.apache.commons.math3.distribution.HypergeometricDistribution.getSupportUpperBound()I"]
9345 [label="org.apache.commons.math3.distribution.IntegerDistribution.inverseCumulativeProbability(D)I"]
9368 [label="org.apache.commons.math3.distribution.KolmogorovSmirnovDistribution.<init>(I)V"]
9372 [label="org.apache.commons.math3.distribution.KolmogorovSmirnovDistribution.cdf(D)D"]
9375 [label="org.apache.commons.math3.distribution.KolmogorovSmirnovDistribution.cdf(DZ)D"]
9377 [label="org.apache.commons.math3.distribution.KolmogorovSmirnovDistribution.cdfExact(D)D"]
9383 [label="org.apache.commons.math3.distribution.KolmogorovSmirnovDistribution.exactK(D)D"]
9385 [label="org.apache.commons.math3.distribution.KolmogorovSmirnovDistribution.roundedK(D)D"]
9395 [label="org.apache.commons.math3.distribution.KolmogorovSmirnovDistribution.createH(D)Lorg/apache/commons/math3/linear/FieldMatrix;"]
9397 [label="org.apache.commons.math3.linear.FieldMatrix.power(I)Lorg/apache/commons/math3/linear/FieldMatrix;"]
9399 [label="org.apache.commons.math3.linear.FieldMatrix.getEntry(II)Lorg/apache/commons/math3/FieldElement;"]
9401 [label="org.apache.commons.math3.fraction.BigFraction.divide(I)Lorg/apache/commons/math3/fraction/BigFraction;"]
9403 [label="org.apache.commons.math3.fraction.BigFraction.multiply(I)Lorg/apache/commons/math3/fraction/BigFraction;"]
9405 [label="java.math.BigDecimal.doubleValue()D"]
9407 [label="org.apache.commons.math3.fraction.BigFraction.bigDecimalValue(II)Ljava/math/BigDecimal;"]
9413 [label="org.apache.commons.math3.linear.AnyMatrix.getRowDimension()I"]
9415 [label="org.apache.commons.math3.linear.RealMatrix.setEntry(IID)V"]
9417 [label="org.apache.commons.math3.linear.RealMatrix.power(I)Lorg/apache/commons/math3/linear/RealMatrix;"]
9419 [label="org.apache.commons.math3.linear.RealMatrix.getEntry(II)D"]
9426 [label="org.apache.commons.math3.fraction.BigFraction.<init>(DDI)V"]
9429 [label="org.apache.commons.math3.fraction.BigFraction.compareTo(Lorg/apache/commons/math3/fraction/BigFraction;)I"]
9433 [label="org.apache.commons.math3.fraction.BigFraction.pow(I)Lorg/apache/commons/math3/fraction/BigFraction;"]
9435 [label="org.apache.commons.math3.fraction.BigFraction.subtract(I)Lorg/apache/commons/math3/fraction/BigFraction;"]
9441 [label="org.apache.commons.math3.linear.Array2DRowFieldMatrix.<init>(Lorg/apache/commons/math3/Field;[[Lorg/apache/commons/math3/FieldElement;)V"]
9445 [label="org.apache.commons.math3.fraction.BigFractionField.getInstance()Lorg/apache/commons/math3/fraction/BigFractionField;"]
9455 [label="org.apache.commons.math3.distribution.LaplaceDistribution.<init>(DD)V"]
9459 [label="org.apache.commons.math3.distribution.LaplaceDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DD)V"]
9473 [label="org.apache.commons.math3.distribution.LaplaceDistribution.density(D)D"]
9476 [label="org.apache.commons.math3.distribution.LaplaceDistribution.cumulativeProbability(D)D"]
9479 [label="org.apache.commons.math3.distribution.LaplaceDistribution.inverseCumulativeProbability(D)D"]
9482 [label="java.lang.Math.log(D)D"]
9508 [label="org.apache.commons.math3.distribution.LevyDistribution.<init>(DD)V"]
9512 [label="org.apache.commons.math3.distribution.LevyDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DD)V"]
9521 [label="org.apache.commons.math3.distribution.LevyDistribution.density(D)D"]
9524 [label="org.apache.commons.math3.distribution.LevyDistribution.logDensity(D)D"]
9527 [label="org.apache.commons.math3.distribution.LevyDistribution.cumulativeProbability(D)D"]
9530 [label="org.apache.commons.math3.special.Erf.erfc(D)D"]
9532 [label="org.apache.commons.math3.distribution.LevyDistribution.inverseCumulativeProbability(D)D"]
9535 [label="org.apache.commons.math3.special.Erf.erfcInv(D)D"]
9563 [label="org.apache.commons.math3.distribution.LogisticDistribution.<init>(DD)V"]
9567 [label="org.apache.commons.math3.distribution.LogisticDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DD)V"]
9579 [label="org.apache.commons.math3.distribution.LogisticDistribution.density(D)D"]
9582 [label="org.apache.commons.math3.distribution.LogisticDistribution.cumulativeProbability(D)D"]
9585 [label="org.apache.commons.math3.distribution.LogisticDistribution.inverseCumulativeProbability(D)D"]
9620 [label="org.apache.commons.math3.distribution.LogNormalDistribution.<init>()V"]
9622 [label="org.apache.commons.math3.distribution.LogNormalDistribution.<init>(DD)V"]
9627 [label="org.apache.commons.math3.distribution.LogNormalDistribution.<init>(DDD)V"]
9634 [label="org.apache.commons.math3.distribution.LogNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DDD)V"]
9636 [label="org.apache.commons.math3.distribution.LogNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DD)V"]
9654 [label="org.apache.commons.math3.distribution.LogNormalDistribution.density(D)D"]
9658 [label="org.apache.commons.math3.distribution.LogNormalDistribution.logDensity(D)D"]
9661 [label="org.apache.commons.math3.distribution.LogNormalDistribution.cumulativeProbability(D)D"]
9664 [label="org.apache.commons.math3.special.Erf.erf(D)D"]
9667 [label="org.apache.commons.math3.distribution.LogNormalDistribution.cumulativeProbability(DD)D"]
9671 [label="org.apache.commons.math3.distribution.LogNormalDistribution.probability(DD)D"]
9676 [label="org.apache.commons.math3.special.Erf.erf(DD)D"]
9680 [label="org.apache.commons.math3.distribution.LogNormalDistribution.getNumericalMean()D"]
9682 [label="org.apache.commons.math3.distribution.LogNormalDistribution.getNumericalVariance()D"]
9694 [label="org.apache.commons.math3.distribution.LogNormalDistribution.sample()D"]
9705 [label="org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution.<init>(Ljava/util/List;)V"]
9707 [label="org.apache.commons.math3.distribution.MixtureMultivariateNormalDistribution.createComponents([D[[D[[[D)Ljava/util/List;"]
9711 [label="org.apache.commons.math3.distribution.MixtureMultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;Ljava/util/List;)V"]
9715 [label="org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;Ljava/util/List;)V"]
9748 [label="org.apache.commons.math3.distribution.MultivariateRealDistribution.getDimension()I"]
9751 [label="org.apache.commons.math3.exception.MathArithmeticException.<init>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V"]
9762 [label="org.apache.commons.math3.distribution.MultivariateRealDistribution.density([D)D"]
9764 [label="org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution.sample()[D"]
9766 [label="org.apache.commons.math3.distribution.MultivariateRealDistribution.sample()[D"]
9768 [label="org.apache.commons.math3.distribution.MixtureMultivariateRealDistribution.reseedRandomGenerator(J)V"]
9772 [label="org.apache.commons.math3.distribution.MultivariateRealDistribution.reseedRandomGenerator(J)V"]
9795 [label="org.apache.commons.math3.distribution.MultivariateNormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[[D)V"]
9803 [label="org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>([[D)V"]
9808 [label="org.apache.commons.math3.linear.EigenDecomposition.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V"]
9811 [label="org.apache.commons.math3.linear.DecompositionSolver.getInverse()Lorg/apache/commons/math3/linear/RealMatrix;"]
9813 [label="org.apache.commons.math3.linear.EigenDecomposition.getSolver()Lorg/apache/commons/math3/linear/DecompositionSolver;"]
9816 [label="org.apache.commons.math3.linear.EigenDecomposition.getDeterminant()D"]
9818 [label="org.apache.commons.math3.linear.EigenDecomposition.getRealEigenvalues()[D"]
9820 [label="org.apache.commons.math3.linear.NonPositiveDefiniteMatrixException.<init>(DID)V"]
9822 [label="org.apache.commons.math3.linear.RealVector.toArray()[D"]
9824 [label="org.apache.commons.math3.linear.EigenDecomposition.getEigenvector(I)Lorg/apache/commons/math3/linear/RealVector;"]
9826 [label="org.apache.commons.math3.linear.AbstractRealMatrix.setColumn(I[D)V"]
9828 [label="org.apache.commons.math3.linear.AbstractRealMatrix.transpose()Lorg/apache/commons/math3/linear/RealMatrix;"]
9830 [label="org.apache.commons.math3.linear.RealMatrix.multiplyEntry(IID)V"]
9833 [label="org.apache.commons.math3.linear.AbstractRealMatrix.multiply(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;"]
9836 [label="org.apache.commons.math3.distribution.MultivariateNormalDistribution.getCovariances()Lorg/apache/commons/math3/linear/RealMatrix;"]
9838 [label="org.apache.commons.math3.linear.RealMatrix.copy()Lorg/apache/commons/math3/linear/RealMatrix;"]
9842 [label="org.apache.commons.math3.distribution.MultivariateNormalDistribution.getExponentTerm([D)D"]
9844 [label="org.apache.commons.math3.distribution.MultivariateNormalDistribution.getStandardDeviations()[D"]
9846 [label="org.apache.commons.math3.distribution.MultivariateNormalDistribution.sample()[D"]
9848 [label="org.apache.commons.math3.linear.RealMatrix.operate([D)[D"]
9852 [label="org.apache.commons.math3.linear.RealMatrix.preMultiply([D)[D"]
9876 [label="org.apache.commons.math3.distribution.NakagamiDistribution.<init>(DD)V"]
9880 [label="org.apache.commons.math3.distribution.NakagamiDistribution.<init>(DDD)V"]
9887 [label="org.apache.commons.math3.distribution.NakagamiDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DDD)V"]
9903 [label="org.apache.commons.math3.distribution.NakagamiDistribution.density(D)D"]
9906 [label="org.apache.commons.math3.special.Gamma.gamma(D)D"]
9908 [label="org.apache.commons.math3.distribution.NakagamiDistribution.cumulativeProbability(D)D"]
9911 [label="org.apache.commons.math3.distribution.NakagamiDistribution.getNumericalMean()D"]
9913 [label="org.apache.commons.math3.distribution.NakagamiDistribution.getNumericalVariance()D"]
9941 [label="org.apache.commons.math3.distribution.NormalDistribution.<init>()V"]
9943 [label="org.apache.commons.math3.distribution.NormalDistribution.<init>(DD)V"]
9948 [label="org.apache.commons.math3.distribution.NormalDistribution.<init>(DDD)V"]
9955 [label="org.apache.commons.math3.distribution.NormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DDD)V"]
9957 [label="org.apache.commons.math3.distribution.NormalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DD)V"]
9973 [label="org.apache.commons.math3.distribution.NormalDistribution.getMean()D"]
9975 [label="org.apache.commons.math3.distribution.NormalDistribution.getStandardDeviation()D"]
9977 [label="org.apache.commons.math3.distribution.NormalDistribution.density(D)D"]
9980 [label="org.apache.commons.math3.distribution.NormalDistribution.logDensity(D)D"]
9984 [label="org.apache.commons.math3.distribution.NormalDistribution.cumulativeProbability(D)D"]
9988 [label="org.apache.commons.math3.distribution.NormalDistribution.inverseCumulativeProbability(D)D"]
9991 [label="org.apache.commons.math3.special.Erf.erfInv(D)D"]
9993 [label="org.apache.commons.math3.distribution.NormalDistribution.cumulativeProbability(DD)D"]
9997 [label="org.apache.commons.math3.distribution.NormalDistribution.probability(DD)D"]
10004 [label="org.apache.commons.math3.distribution.NormalDistribution.getNumericalMean()D"]
10007 [label="org.apache.commons.math3.distribution.NormalDistribution.getNumericalVariance()D"]
10020 [label="org.apache.commons.math3.distribution.NormalDistribution.sample()D"]
10034 [label="org.apache.commons.math3.distribution.ParetoDistribution.<init>()V"]
10036 [label="org.apache.commons.math3.distribution.ParetoDistribution.<init>(DD)V"]
10041 [label="org.apache.commons.math3.distribution.ParetoDistribution.<init>(DDD)V"]
10048 [label="org.apache.commons.math3.distribution.ParetoDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DDD)V"]
10050 [label="org.apache.commons.math3.distribution.ParetoDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DD)V"]
10067 [label="org.apache.commons.math3.distribution.ParetoDistribution.density(D)D"]
10070 [label="org.apache.commons.math3.distribution.ParetoDistribution.logDensity(D)D"]
10073 [label="org.apache.commons.math3.distribution.ParetoDistribution.cumulativeProbability(D)D"]
10076 [label="org.apache.commons.math3.distribution.ParetoDistribution.cumulativeProbability(DD)D"]
10096 [label="org.apache.commons.math3.distribution.ParetoDistribution.sample()D"]
10110 [label="org.apache.commons.math3.distribution.PascalDistribution.<init>(ID)V"]
10114 [label="org.apache.commons.math3.distribution.PascalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;ID)V"]
10124 [label="org.apache.commons.math3.distribution.PascalDistribution.getNumberOfSuccesses()I"]
10126 [label="org.apache.commons.math3.distribution.PascalDistribution.getProbabilityOfSuccess()D"]
10128 [label="org.apache.commons.math3.distribution.PascalDistribution.probability(I)D"]
10131 [label="org.apache.commons.math3.util.CombinatoricsUtils.binomialCoefficientDouble(II)D"]
10133 [label="org.apache.commons.math3.distribution.PascalDistribution.logProbability(I)D"]
10136 [label="org.apache.commons.math3.util.CombinatoricsUtils.binomialCoefficientLog(II)D"]
10138 [label="org.apache.commons.math3.distribution.PascalDistribution.cumulativeProbability(I)D"]
10141 [label="org.apache.commons.math3.distribution.PascalDistribution.getNumericalMean()D"]
10145 [label="org.apache.commons.math3.distribution.PascalDistribution.getNumericalVariance()D"]
10175 [label="org.apache.commons.math3.distribution.PoissonDistribution.<init>(D)V"]
10178 [label="org.apache.commons.math3.distribution.PoissonDistribution.<init>(DDI)V"]
10186 [label="org.apache.commons.math3.distribution.PoissonDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DDI)V"]
10198 [label="org.apache.commons.math3.distribution.PoissonDistribution.<init>(DD)V"]
10202 [label="org.apache.commons.math3.distribution.PoissonDistribution.<init>(DI)V"]
10206 [label="org.apache.commons.math3.distribution.PoissonDistribution.getMean()D"]
10208 [label="org.apache.commons.math3.distribution.PoissonDistribution.probability(I)D"]
10211 [label="org.apache.commons.math3.distribution.PoissonDistribution.logProbability(I)D"]
10215 [label="org.apache.commons.math3.distribution.SaddlePointExpansion.getStirlingError(D)D"]
10217 [label="org.apache.commons.math3.distribution.SaddlePointExpansion.getDeviancePart(DD)D"]
10219 [label="org.apache.commons.math3.distribution.PoissonDistribution.cumulativeProbability(I)D"]
10222 [label="org.apache.commons.math3.special.Gamma.regularizedGammaQ(DDDI)D"]
10224 [label="org.apache.commons.math3.distribution.PoissonDistribution.normalApproximateProbability(I)D"]
10228 [label="org.apache.commons.math3.distribution.PoissonDistribution.getNumericalMean()D"]
10231 [label="org.apache.commons.math3.distribution.PoissonDistribution.getNumericalVariance()D"]
10239 [label="org.apache.commons.math3.distribution.PoissonDistribution.sample()I"]
10241 [label="org.apache.commons.math3.util.FastMath.min(JJ)J"]
10243 [label="org.apache.commons.math3.distribution.PoissonDistribution.nextPoisson(D)J"]
10247 [label="org.apache.commons.math3.util.CombinatoricsUtils.factorialLog(I)D"]
10258 [label="org.apache.commons.math3.distribution.RealDistribution.cumulativeProbability(DD)D"]
10262 [label="org.apache.commons.math3.distribution.RealDistribution.inverseCumulativeProbability(D)D"]
10277 [label="org.apache.commons.math3.distribution.RealDistribution.sample()D"]
10288 [label="org.apache.commons.math3.distribution.SaddlePointExpansion.<init>()V"]
10314 [label="org.apache.commons.math3.distribution.TDistribution.<init>(D)V"]
10317 [label="org.apache.commons.math3.distribution.TDistribution.<init>(DD)V"]
10323 [label="org.apache.commons.math3.distribution.TDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DD)V"]
10325 [label="org.apache.commons.math3.distribution.TDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;D)V"]
10336 [label="org.apache.commons.math3.distribution.TDistribution.getDegreesOfFreedom()D"]
10338 [label="org.apache.commons.math3.distribution.TDistribution.density(D)D"]
10341 [label="org.apache.commons.math3.distribution.TDistribution.logDensity(D)D"]
10345 [label="org.apache.commons.math3.distribution.TDistribution.cumulativeProbability(D)D"]
10350 [label="org.apache.commons.math3.distribution.TDistribution.getNumericalMean()D"]
10353 [label="org.apache.commons.math3.distribution.TDistribution.getNumericalVariance()D"]
10377 [label="org.apache.commons.math3.distribution.TriangularDistribution.<init>(DDD)V"]
10382 [label="org.apache.commons.math3.distribution.TriangularDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DDD)V"]
10421 [label="org.apache.commons.math3.distribution.TriangularDistribution.inverseCumulativeProbability(D)D"]
10432 [label="org.apache.commons.math3.distribution.UniformIntegerDistribution.<init>(II)V"]
10436 [label="org.apache.commons.math3.distribution.UniformIntegerDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;II)V"]
10460 [label="org.apache.commons.math3.distribution.UniformIntegerDistribution.sample()I"]
10462 [label="org.apache.commons.math3.random.RandomGenerator.nextInt()I"]
10464 [label="org.apache.commons.math3.random.RandomGenerator.nextInt(I)I"]
10476 [label="org.apache.commons.math3.distribution.UniformRealDistribution.<init>()V"]
10478 [label="org.apache.commons.math3.distribution.UniformRealDistribution.<init>(DD)V"]
10483 [label="org.apache.commons.math3.distribution.UniformRealDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DD)V"]
10485 [label="org.apache.commons.math3.distribution.UniformRealDistribution.<init>(DDD)V"]
10490 [label="org.apache.commons.math3.distribution.UniformRealDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DDD)V"]
10508 [label="org.apache.commons.math3.distribution.UniformRealDistribution.inverseCumulativeProbability(D)D"]
10525 [label="org.apache.commons.math3.distribution.UniformRealDistribution.sample()D"]
10547 [label="org.apache.commons.math3.distribution.WeibullDistribution.<init>(DD)V"]
10551 [label="org.apache.commons.math3.distribution.WeibullDistribution.<init>(DDD)V"]
10558 [label="org.apache.commons.math3.distribution.WeibullDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DDD)V"]
10560 [label="org.apache.commons.math3.distribution.WeibullDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DD)V"]
10573 [label="org.apache.commons.math3.distribution.WeibullDistribution.getShape()D"]
10575 [label="org.apache.commons.math3.distribution.WeibullDistribution.getScale()D"]
10577 [label="org.apache.commons.math3.distribution.WeibullDistribution.density(D)D"]
10580 [label="org.apache.commons.math3.distribution.WeibullDistribution.logDensity(D)D"]
10583 [label="org.apache.commons.math3.distribution.WeibullDistribution.cumulativeProbability(D)D"]
10586 [label="org.apache.commons.math3.distribution.WeibullDistribution.inverseCumulativeProbability(D)D"]
10591 [label="org.apache.commons.math3.distribution.WeibullDistribution.getNumericalMean()D"]
10595 [label="org.apache.commons.math3.distribution.WeibullDistribution.calculateNumericalMean()D"]
10600 [label="org.apache.commons.math3.distribution.WeibullDistribution.getNumericalVariance()D"]
10604 [label="org.apache.commons.math3.distribution.WeibullDistribution.calculateNumericalVariance()D"]
10639 [label="org.apache.commons.math3.distribution.ZipfDistribution.<init>(ID)V"]
10643 [label="org.apache.commons.math3.distribution.ZipfDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;ID)V"]
10655 [label="org.apache.commons.math3.distribution.ZipfDistribution.getNumberOfElements()I"]
10657 [label="org.apache.commons.math3.distribution.ZipfDistribution.getExponent()D"]
10659 [label="org.apache.commons.math3.distribution.ZipfDistribution.probability(I)D"]
10662 [label="org.apache.commons.math3.distribution.ZipfDistribution.generalizedHarmonic(ID)D"]
10664 [label="org.apache.commons.math3.distribution.ZipfDistribution.logProbability(I)D"]
10667 [label="org.apache.commons.math3.distribution.ZipfDistribution.cumulativeProbability(I)D"]
10670 [label="org.apache.commons.math3.distribution.ZipfDistribution.getNumericalMean()D"]
10674 [label="org.apache.commons.math3.distribution.ZipfDistribution.calculateNumericalMean()D"]
10679 [label="org.apache.commons.math3.distribution.ZipfDistribution.getNumericalVariance()D"]
10683 [label="org.apache.commons.math3.distribution.ZipfDistribution.calculateNumericalVariance()D"]
10691 [label="org.apache.commons.math3.distribution.ZipfDistribution.getSupportUpperBound()I"]
10695 [label="org.apache.commons.math3.distribution.ZipfDistribution.sample()I"]
10698 [label="org.apache.commons.math3.distribution.ZipfDistribution$ZipfRejectionInversionSampler.<init>(ID)V"]
10700 [label="org.apache.commons.math3.distribution.ZipfDistribution$ZipfRejectionInversionSampler.sample(Lorg/apache/commons/math3/random/RandomGenerator;)I"]
10719 [label="org.apache.commons.math3.distribution.ZipfDistribution$ZipfRejectionInversionSampler.hIntegral(D)D"]
10723 [label="org.apache.commons.math3.distribution.ZipfDistribution$ZipfRejectionInversionSampler.hIntegralInverse(D)D"]
10725 [label="org.apache.commons.math3.distribution.ZipfDistribution$ZipfRejectionInversionSampler.h(D)D"]
10731 [label="org.apache.commons.math3.distribution.ZipfDistribution$ZipfRejectionInversionSampler.helper2(D)D"]
10737 [label="org.apache.commons.math3.distribution.ZipfDistribution$ZipfRejectionInversionSampler.helper1(D)D"]
10777 [label="org.apache.commons.math3.exception.ConvergenceException.<init>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V"]
10787 [label="org.apache.commons.math3.exception.MathIllegalStateException.<init>()V"]
10789 [label="org.apache.commons.math3.exception.util.ExceptionContext.addMessage(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V"]
10791 [label="org.apache.commons.math3.exception.MathIllegalStateException.getContext()Lorg/apache/commons/math3/exception/util/ExceptionContext;"]
10805 [label="org.apache.commons.math3.exception.MathIllegalNumberException.<init>(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;[Ljava/lang/Object;)V"]
10819 [label="org.apache.commons.math3.exception.InsufficientDataException.<init>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V"]
10840 [label="org.apache.commons.math3.exception.MathArithmeticException.<init>()V"]
10842 [label="java.lang.ArithmeticException.<init>()V"]
10845 [label="org.apache.commons.math3.exception.util.ExceptionContext.<init>(Ljava/lang/Throwable;)V"]
10852 [label="org.apache.commons.math3.exception.MathArithmeticException.getContext()Lorg/apache/commons/math3/exception/util/ExceptionContext;"]
10854 [label="org.apache.commons.math3.exception.MathArithmeticException.getMessage()Ljava/lang/String;"]
10856 [label="org.apache.commons.math3.exception.util.ExceptionContext.getMessage()Ljava/lang/String;"]
10858 [label="org.apache.commons.math3.exception.MathArithmeticException.getLocalizedMessage()Ljava/lang/String;"]
10860 [label="org.apache.commons.math3.exception.util.ExceptionContext.getLocalizedMessage()Ljava/lang/String;"]
10870 [label="java.lang.IllegalArgumentException.<init>()V"]
10873 [label="org.apache.commons.math3.exception.MathIllegalArgumentException.getContext()Lorg/apache/commons/math3/exception/util/ExceptionContext;"]
10875 [label="org.apache.commons.math3.exception.MathIllegalArgumentException.getMessage()Ljava/lang/String;"]
10877 [label="org.apache.commons.math3.exception.MathIllegalArgumentException.getLocalizedMessage()Ljava/lang/String;"]
10904 [label="java.lang.IllegalStateException.<init>()V"]
10907 [label="org.apache.commons.math3.exception.MathIllegalStateException.<init>(Ljava/lang/Throwable;Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V"]
10915 [label="java.lang.IllegalStateException.<init>(Ljava/lang/Throwable;)V"]
10921 [label="org.apache.commons.math3.exception.MathIllegalStateException.getMessage()Ljava/lang/String;"]
10923 [label="org.apache.commons.math3.exception.MathIllegalStateException.getLocalizedMessage()Ljava/lang/String;"]
10952 [label="org.apache.commons.math3.exception.MathParseException.<init>(Ljava/lang/String;I)V"]
10967 [label="org.apache.commons.math3.exception.MathRuntimeException.<init>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V"]
10971 [label="java.lang.RuntimeException.<init>()V"]
10976 [label="org.apache.commons.math3.exception.MathRuntimeException.getMessage()Ljava/lang/String;"]
10978 [label="org.apache.commons.math3.exception.MathRuntimeException.getLocalizedMessage()Ljava/lang/String;"]
10989 [label="org.apache.commons.math3.exception.MathUnsupportedOperationException.<init>()V"]
10991 [label="org.apache.commons.math3.exception.MathUnsupportedOperationException.<init>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V"]
10998 [label="java.lang.UnsupportedOperationException.<init>()V"]
11003 [label="org.apache.commons.math3.exception.MathUnsupportedOperationException.getMessage()Ljava/lang/String;"]
11005 [label="org.apache.commons.math3.exception.MathUnsupportedOperationException.getLocalizedMessage()Ljava/lang/String;"]
11014 [label="org.apache.commons.math3.exception.MaxCountExceededException.<init>(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;[Ljava/lang/Object;)V"]
11033 [label="org.apache.commons.math3.exception.MultiDimensionMismatchException.<init>([Ljava/lang/Integer;[Ljava/lang/Integer;)V"]
11037 [label="org.apache.commons.math3.exception.MultiDimensionMismatchException.<init>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Integer;[Ljava/lang/Integer;)V"]
11047 [label="org.apache.commons.math3.exception.MultiDimensionMismatchException.getWrongDimensions()[Ljava/lang/Integer;"]
11049 [label="org.apache.commons.math3.exception.MultiDimensionMismatchException.getExpectedDimensions()[Ljava/lang/Integer;"]
11051 [label="org.apache.commons.math3.exception.MultiDimensionMismatchException.getWrongDimension(I)I"]
11054 [label="org.apache.commons.math3.exception.MultiDimensionMismatchException.getExpectedDimension(I)I"]
11082 [label="java.lang.Double.valueOf(D)Ljava/lang/Double;"]
11121 [label="org.apache.commons.math3.exception.NonMonotonicSequenceException.<init>(Ljava/lang/Number;Ljava/lang/Number;I)V"]
11126 [label="org.apache.commons.math3.exception.NonMonotonicSequenceException.<init>(Ljava/lang/Number;Ljava/lang/Number;ILorg/apache/commons/math3/util/MathArrays$OrderDirection;Z)V"]
11166 [label="org.apache.commons.math3.exception.NotFiniteNumberException.<init>(Lorg/apache/commons/math3/exception/util/Localizable;Ljava/lang/Number;[Ljava/lang/Object;)V"]
11283 [label="org.apache.commons.math3.exception.TooManyIterationsException.<init>(Ljava/lang/Number;)V"]
11299 [label="org.apache.commons.math3.exception.util.ArgUtils.<init>()V"]
11301 [label="org.apache.commons.math3.exception.util.ArgUtils.flatten([Ljava/lang/Object;)[Ljava/lang/Object;"]
11311 [label="java.util.List.toArray()[Ljava/lang/Object;"]
11319 [label="org.apache.commons.math3.exception.util.DummyLocalizable.<init>(Ljava/lang/String;)V"]
11370 [label="org.apache.commons.math3.exception.util.ExceptionContext.setValue(Ljava/lang/String;Ljava/lang/Object;)V"]
11374 [label="org.apache.commons.math3.exception.util.ExceptionContext.getValue(Ljava/lang/String;)Ljava/lang/Object;"]
11377 [label="org.apache.commons.math3.exception.util.ExceptionContext.getKeys()Ljava/util/Set;"]
11385 [label="java.util.Map.keySet()Ljava/util/Set;"]
11388 [label="org.apache.commons.math3.exception.util.ExceptionContext.getMessage(Ljava/util/Locale;)Ljava/lang/String;"]
11395 [label="org.apache.commons.math3.exception.util.ExceptionContext.buildMessage(Ljava/util/Locale;Ljava/lang/String;)Ljava/lang/String;"]
11397 [label="org.apache.commons.math3.exception.util.ExceptionContext.getMessage(Ljava/util/Locale;Ljava/lang/String;)Ljava/lang/String;"]
11407 [label="java.text.MessageFormat.<init>(Ljava/lang/String;Ljava/util/Locale;)V"]
11409 [label="org.apache.commons.math3.exception.util.Localizable.getLocalizedString(Ljava/util/Locale;)Ljava/lang/String;"]
11411 [label="java.text.Format.format(Ljava/lang/Object;)Ljava/lang/String;"]
11413 [label="org.apache.commons.math3.exception.util.ExceptionContext.writeObject(Ljava/io/ObjectOutputStream;)V"]
11422 [label="java.io.ObjectOutputStream.writeObject(Ljava/lang/Object;)V"]
11424 [label="org.apache.commons.math3.exception.util.ExceptionContext.serializeMessages(Ljava/io/ObjectOutputStream;)V"]
11426 [label="org.apache.commons.math3.exception.util.ExceptionContext.serializeContext(Ljava/io/ObjectOutputStream;)V"]
11428 [label="org.apache.commons.math3.exception.util.ExceptionContext.readObject(Ljava/io/ObjectInputStream;)V"]
11437 [label="java.io.ObjectInputStream.readObject()Ljava/lang/Object;"]
11439 [label="org.apache.commons.math3.exception.util.ExceptionContext.deSerializeMessages(Ljava/io/ObjectInputStream;)V"]
11441 [label="org.apache.commons.math3.exception.util.ExceptionContext.deSerializeContext(Ljava/io/ObjectInputStream;)V"]
11445 [label="java.io.ObjectOutputStream.writeInt(I)V"]
11447 [label="org.apache.commons.math3.exception.util.ExceptionContext.nonSerializableReplacement(Ljava/lang/Object;)Ljava/lang/String;"]
11451 [label="java.io.ObjectInputStream.readInt()I"]
11737 [label="org.apache.commons.math3.exception.util.LocalizedFormats.<init>(Ljava/lang/String;)V"]
11743 [label="org.apache.commons.math3.exception.util.LocalizedFormats.getLocalizedString(Ljava/util/Locale;)Ljava/lang/String;"]
11746 [label="java.lang.String.replaceAll(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"]
11751 [label="java.util.ResourceBundle.getBundle(Ljava/lang/String;Ljava/util/Locale;)Ljava/util/ResourceBundle;"]
11753 [label="java.util.Locale.getLanguage()Ljava/lang/String;"]
11755 [label="java.util.ResourceBundle.getLocale()Ljava/util/Locale;"]
11757 [label="java.util.ResourceBundle.getString(Ljava/lang/String;)Ljava/lang/String;"]
11759 [label="java.lang.Enum.toString()Ljava/lang/String;"]
11771 [label="org.apache.commons.math3.exception.ZeroException.<init>()V"]
11783 [label="org.apache.commons.math3.Field.getRuntimeClass()Ljava/lang/Class;"]
11828 [label="org.apache.commons.math3.filter.DefaultMeasurementModel.<init>([[D[[D)V"]
11832 [label="org.apache.commons.math3.filter.DefaultMeasurementModel.<init>(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)V"]
11858 [label="org.apache.commons.math3.filter.DefaultProcessModel.<init>([[D[[D[[D[D[[D)V"]
11865 [label="org.apache.commons.math3.filter.DefaultProcessModel.<init>(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealMatrix;)V"]
11867 [label="org.apache.commons.math3.filter.DefaultProcessModel.<init>([[D[[D[[D)V"]
11913 [label="org.apache.commons.math3.filter.KalmanFilter.<init>(Lorg/apache/commons/math3/filter/ProcessModel;Lorg/apache/commons/math3/filter/MeasurementModel;)V"]
11926 [label="org.apache.commons.math3.filter.ProcessModel.getStateTransitionMatrix()Lorg/apache/commons/math3/linear/RealMatrix;"]
11929 [label="org.apache.commons.math3.filter.ProcessModel.getControlMatrix()Lorg/apache/commons/math3/linear/RealMatrix;"]
11932 [label="org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>()V"]
11935 [label="org.apache.commons.math3.filter.MeasurementModel.getMeasurementMatrix()Lorg/apache/commons/math3/linear/RealMatrix;"]
11938 [label="org.apache.commons.math3.filter.ProcessModel.getProcessNoise()Lorg/apache/commons/math3/linear/RealMatrix;"]
11940 [label="org.apache.commons.math3.filter.MeasurementModel.getMeasurementNoise()Lorg/apache/commons/math3/linear/RealMatrix;"]
11942 [label="org.apache.commons.math3.filter.ProcessModel.getInitialStateEstimate()Lorg/apache/commons/math3/linear/RealVector;"]
11945 [label="org.apache.commons.math3.linear.ArrayRealVector.<init>(I)V"]
11947 [label="org.apache.commons.math3.linear.AnyMatrix.getColumnDimension()I"]
11949 [label="org.apache.commons.math3.linear.RealVector.getDimension()I"]
11951 [label="org.apache.commons.math3.filter.ProcessModel.getInitialErrorCovariance()Lorg/apache/commons/math3/linear/RealMatrix;"]
11954 [label="org.apache.commons.math3.linear.AnyMatrix.isSquare()Z"]
11956 [label="org.apache.commons.math3.linear.NonSquareMatrixException.<init>(II)V"]
11958 [label="org.apache.commons.math3.linear.MatrixDimensionMismatchException.<init>(IIII)V"]
11960 [label="org.apache.commons.math3.linear.MatrixUtils.checkAdditionCompatible(Lorg/apache/commons/math3/linear/AnyMatrix;Lorg/apache/commons/math3/linear/AnyMatrix;)V"]
11962 [label="org.apache.commons.math3.filter.KalmanFilter.getStateDimension()I"]
11964 [label="org.apache.commons.math3.filter.KalmanFilter.getMeasurementDimension()I"]
11966 [label="org.apache.commons.math3.filter.KalmanFilter.getStateEstimation()[D"]
11968 [label="org.apache.commons.math3.filter.KalmanFilter.getStateEstimationVector()Lorg/apache/commons/math3/linear/RealVector;"]
11970 [label="org.apache.commons.math3.linear.RealVector.copy()Lorg/apache/commons/math3/linear/RealVector;"]
11972 [label="org.apache.commons.math3.filter.KalmanFilter.getErrorCovariance()[[D"]
11974 [label="org.apache.commons.math3.filter.KalmanFilter.getErrorCovarianceMatrix()Lorg/apache/commons/math3/linear/RealMatrix;"]
11976 [label="org.apache.commons.math3.filter.KalmanFilter.predict()V"]
11978 [label="org.apache.commons.math3.filter.KalmanFilter.predict(Lorg/apache/commons/math3/linear/RealVector;)V"]
11980 [label="org.apache.commons.math3.filter.KalmanFilter.predict([D)V"]
11983 [label="org.apache.commons.math3.linear.ArrayRealVector.<init>([DZ)V"]
11987 [label="org.apache.commons.math3.linear.RealMatrix.operate(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
11989 [label="org.apache.commons.math3.linear.RealVector.add(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
11991 [label="org.apache.commons.math3.filter.KalmanFilter.correct([D)V"]
11994 [label="org.apache.commons.math3.filter.KalmanFilter.correct(Lorg/apache/commons/math3/linear/RealVector;)V"]
11998 [label="org.apache.commons.math3.linear.DecompositionSolver.solve(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;"]
12000 [label="org.apache.commons.math3.linear.CholeskyDecomposition.getSolver()Lorg/apache/commons/math3/linear/DecompositionSolver;"]
12005 [label="org.apache.commons.math3.linear.CholeskyDecomposition.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V"]
12007 [label="org.apache.commons.math3.linear.MatrixUtils.createRealIdentityMatrix(I)Lorg/apache/commons/math3/linear/RealMatrix;"]
12009 [label="org.apache.commons.math3.linear.RealMatrix.subtract(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;"]
12036 [label="org.apache.commons.math3.fitting.AbstractCurveFitter.<init>()V"]
12037 [label="org.apache.commons.math3.fitting.AbstractCurveFitter.fit(Ljava/util/Collection;)[D"]
12049 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem$Evaluation.getPoint()Lorg/apache/commons/math3/linear/RealVector;"]
12051 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresOptimizer.optimize(Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresOptimizer$Optimum;"]
12053 [label="org.apache.commons.math3.fitting.AbstractCurveFitter.getOptimizer()Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresOptimizer;"]
12055 [label="org.apache.commons.math3.fitting.AbstractCurveFitter.getProblem(Ljava/util/Collection;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem;"]
12064 [label="org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.<init>()V"]
12077 [label="org.apache.commons.math3.fitting.AbstractCurveFitter$TheoreticalValuesFunction.<init>(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;Ljava/util/Collection;)V"]
12082 [label="java.util.Collection.size()I"]
12085 [label="org.apache.commons.math3.fitting.WeightedObservedPoint.getX()D"]
12087 [label="org.apache.commons.math3.fitting.AbstractCurveFitter$TheoreticalValuesFunction.getModelFunction()Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;"]
12089 [label="org.apache.commons.math3.fitting.AbstractCurveFitter$TheoreticalValuesFunction$1.<init>()V"]
12092 [label="org.apache.commons.math3.fitting.AbstractCurveFitter$TheoreticalValuesFunction$1.value([D)[D"]
12096 [label="org.apache.commons.math3.fitting.AbstractCurveFitter$TheoreticalValuesFunction.getModelFunctionJacobian()Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;"]
12098 [label="org.apache.commons.math3.fitting.AbstractCurveFitter$TheoreticalValuesFunction$2.<init>()V"]
12101 [label="org.apache.commons.math3.fitting.AbstractCurveFitter$TheoreticalValuesFunction$2.value([D)[[D"]
12117 [label="org.apache.commons.math3.fitting.CurveFitter.<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V"]
12125 [label="org.apache.commons.math3.fitting.CurveFitter.addObservedPoint(DD)V"]
12133 [label="org.apache.commons.math3.fitting.WeightedObservedPoint.<init>(DDD)V"]
12135 [label="org.apache.commons.math3.fitting.CurveFitter.addObservedPoint(Lorg/apache/commons/math3/fitting/WeightedObservedPoint;)V"]
12138 [label="org.apache.commons.math3.fitting.CurveFitter.getObservations()[Lorg/apache/commons/math3/fitting/WeightedObservedPoint;"]
12142 [label="java.util.List.clear()V"]
12144 [label="org.apache.commons.math3.fitting.CurveFitter.fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D"]
12151 [label="org.apache.commons.math3.fitting.CurveFitter.fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D"]
12157 [label="org.apache.commons.math3.fitting.WeightedObservedPoint.getY()D"]
12159 [label="org.apache.commons.math3.fitting.WeightedObservedPoint.getWeight()D"]
12164 [label="org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction.<init>(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V"]
12169 [label="org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair;"]
12174 [label="org.apache.commons.math3.optim.MaxEval.<init>(I)V"]
12176 [label="org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction.getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction;"]
12178 [label="org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction.getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian;"]
12183 [label="org.apache.commons.math3.optim.nonlinear.vector.Target.<init>([D)V"]
12188 [label="org.apache.commons.math3.optim.nonlinear.vector.Weight.<init>([D)V"]
12193 [label="org.apache.commons.math3.optim.InitialGuess.<init>([D)V"]
12195 [label="org.apache.commons.math3.optim.PointVectorValuePair.getPointRef()[D"]
12207 [label="org.apache.commons.math3.optim.nonlinear.vector.ModelFunction.<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V"]
12209 [label="org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.<init>()V"]
12212 [label="org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1.value([D)[D"]
12219 [label="org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian.<init>(Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V"]
12221 [label="org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2.<init>()V"]
12224 [label="org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$2.value([D)[[D"]
12254 [label="org.apache.commons.math3.fitting.GaussianCurveFitter.<init>([DI)V"]
12261 [label="org.apache.commons.math3.fitting.GaussianCurveFitter.create()Lorg/apache/commons/math3/fitting/GaussianCurveFitter;"]
12266 [label="org.apache.commons.math3.fitting.GaussianCurveFitter.withStartPoint([D)Lorg/apache/commons/math3/fitting/GaussianCurveFitter;"]
12269 [label="org.apache.commons.math3.fitting.GaussianCurveFitter.withMaxIterations(I)Lorg/apache/commons/math3/fitting/GaussianCurveFitter;"]
12272 [label="org.apache.commons.math3.fitting.GaussianCurveFitter.getProblem(Ljava/util/Collection;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem;"]
12279 [label="org.apache.commons.math3.fitting.GaussianCurveFitter$ParameterGuesser.guess()[D"]
12284 [label="org.apache.commons.math3.fitting.GaussianCurveFitter$ParameterGuesser.<init>(Ljava/util/Collection;)V"]
12286 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder.build()Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem;"]
12288 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder.model(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder;"]
12290 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder.weight(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder;"]
12292 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder.target([D)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder;"]
12294 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder.start([D)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder;"]
12296 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder.maxIterations(I)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder;"]
12298 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder.maxEvaluations(I)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder;"]
12303 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder.<init>()V"]
12308 [label="org.apache.commons.math3.linear.DiagonalMatrix.<init>([D)V"]
12321 [label="org.apache.commons.math3.fitting.GaussianCurveFitter$ParameterGuesser.sortObservations(Ljava/util/Collection;)Ljava/util/List;"]
12323 [label="org.apache.commons.math3.fitting.GaussianCurveFitter$ParameterGuesser.basicGuess([Lorg/apache/commons/math3/fitting/WeightedObservedPoint;)[D"]
12331 [label="java.util.ArrayList.<init>(Ljava/util/Collection;)V"]
12339 [label="org.apache.commons.math3.fitting.GaussianCurveFitter$ParameterGuesser$1.<init>()V"]
12342 [label="org.apache.commons.math3.fitting.GaussianCurveFitter$ParameterGuesser$1.compare(Lorg/apache/commons/math3/fitting/WeightedObservedPoint;Lorg/apache/commons/math3/fitting/WeightedObservedPoint;)I"]
12346 [label="java.lang.Double.compare(DD)I"]
12348 [label="java.util.Collections.sort(Ljava/util/List;Ljava/util/Comparator;)V"]
12352 [label="org.apache.commons.math3.fitting.GaussianCurveFitter$ParameterGuesser.findMaxY([Lorg/apache/commons/math3/fitting/WeightedObservedPoint;)I"]
12354 [label="org.apache.commons.math3.fitting.GaussianCurveFitter$ParameterGuesser.interpolateXAtY([Lorg/apache/commons/math3/fitting/WeightedObservedPoint;IID)D"]
12364 [label="org.apache.commons.math3.fitting.GaussianCurveFitter$ParameterGuesser.getInterpolationPointsForY([Lorg/apache/commons/math3/fitting/WeightedObservedPoint;IID)[Lorg/apache/commons/math3/fitting/WeightedObservedPoint;"]
12371 [label="org.apache.commons.math3.fitting.GaussianCurveFitter$ParameterGuesser.isBetween(DDD)Z"]
12382 [label="org.apache.commons.math3.fitting.GaussianFitter.<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V"]
12386 [label="org.apache.commons.math3.fitting.GaussianFitter.fit([D)[D"]
12389 [label="org.apache.commons.math3.fitting.GaussianFitter$1.<init>()V"]
12392 [label="org.apache.commons.math3.fitting.GaussianFitter$1.value(D[D)D"]
12396 [label="org.apache.commons.math3.fitting.GaussianFitter$1.gradient(D[D)[D"]
12401 [label="org.apache.commons.math3.fitting.GaussianFitter.fit()[D"]
12403 [label="org.apache.commons.math3.fitting.GaussianFitter$ParameterGuesser.guess()[D"]
12408 [label="org.apache.commons.math3.fitting.GaussianFitter$ParameterGuesser.<init>([Lorg/apache/commons/math3/fitting/WeightedObservedPoint;)V"]
12421 [label="org.apache.commons.math3.fitting.GaussianFitter$ParameterGuesser.sortObservations([Lorg/apache/commons/math3/fitting/WeightedObservedPoint;)[Lorg/apache/commons/math3/fitting/WeightedObservedPoint;"]
12423 [label="org.apache.commons.math3.fitting.GaussianFitter$ParameterGuesser.basicGuess([Lorg/apache/commons/math3/fitting/WeightedObservedPoint;)[D"]
12431 [label="org.apache.commons.math3.fitting.GaussianFitter$ParameterGuesser$1.<init>()V"]
12434 [label="org.apache.commons.math3.fitting.GaussianFitter$ParameterGuesser$1.compare(Lorg/apache/commons/math3/fitting/WeightedObservedPoint;Lorg/apache/commons/math3/fitting/WeightedObservedPoint;)I"]
12438 [label="java.util.Arrays.sort([Ljava/lang/Object;Ljava/util/Comparator;)V"]
12442 [label="org.apache.commons.math3.fitting.GaussianFitter$ParameterGuesser.findMaxY([Lorg/apache/commons/math3/fitting/WeightedObservedPoint;)I"]
12444 [label="org.apache.commons.math3.fitting.GaussianFitter$ParameterGuesser.interpolateXAtY([Lorg/apache/commons/math3/fitting/WeightedObservedPoint;IID)D"]
12453 [label="org.apache.commons.math3.fitting.GaussianFitter$ParameterGuesser.getInterpolationPointsForY([Lorg/apache/commons/math3/fitting/WeightedObservedPoint;IID)[Lorg/apache/commons/math3/fitting/WeightedObservedPoint;"]
12460 [label="org.apache.commons.math3.fitting.GaussianFitter$ParameterGuesser.isBetween(DDD)Z"]
12480 [label="org.apache.commons.math3.fitting.HarmonicCurveFitter.<init>([DI)V"]
12486 [label="org.apache.commons.math3.fitting.HarmonicCurveFitter.create()Lorg/apache/commons/math3/fitting/HarmonicCurveFitter;"]
12491 [label="org.apache.commons.math3.fitting.HarmonicCurveFitter.withStartPoint([D)Lorg/apache/commons/math3/fitting/HarmonicCurveFitter;"]
12494 [label="org.apache.commons.math3.fitting.HarmonicCurveFitter.withMaxIterations(I)Lorg/apache/commons/math3/fitting/HarmonicCurveFitter;"]
12497 [label="org.apache.commons.math3.fitting.HarmonicCurveFitter.getProblem(Ljava/util/Collection;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem;"]
12501 [label="org.apache.commons.math3.fitting.HarmonicCurveFitter$ParameterGuesser.guess()[D"]
12506 [label="org.apache.commons.math3.fitting.HarmonicCurveFitter$ParameterGuesser.<init>(Ljava/util/Collection;)V"]
12518 [label="org.apache.commons.math3.fitting.HarmonicCurveFitter$ParameterGuesser.sortObservations(Ljava/util/Collection;)Ljava/util/List;"]
12520 [label="org.apache.commons.math3.fitting.HarmonicCurveFitter$ParameterGuesser.guessAOmega([Lorg/apache/commons/math3/fitting/WeightedObservedPoint;)[D"]
12525 [label="org.apache.commons.math3.fitting.HarmonicCurveFitter$ParameterGuesser.guessPhi([Lorg/apache/commons/math3/fitting/WeightedObservedPoint;)D"]
12540 [label="org.apache.commons.math3.fitting.HarmonicFitter.<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;)V"]
12543 [label="org.apache.commons.math3.fitting.HarmonicFitter.fit([D)[D"]
12547 [label="org.apache.commons.math3.fitting.HarmonicFitter.fit()[D"]
12550 [label="org.apache.commons.math3.fitting.HarmonicFitter$ParameterGuesser.guess()[D"]
12555 [label="org.apache.commons.math3.fitting.HarmonicFitter$ParameterGuesser.<init>([Lorg/apache/commons/math3/fitting/WeightedObservedPoint;)V"]
12566 [label="org.apache.commons.math3.fitting.HarmonicFitter$ParameterGuesser.sortObservations([Lorg/apache/commons/math3/fitting/WeightedObservedPoint;)[Lorg/apache/commons/math3/fitting/WeightedObservedPoint;"]
12568 [label="org.apache.commons.math3.fitting.HarmonicFitter$ParameterGuesser.guessAOmega([Lorg/apache/commons/math3/fitting/WeightedObservedPoint;)[D"]
12573 [label="org.apache.commons.math3.fitting.HarmonicFitter$ParameterGuesser.guessPhi([Lorg/apache/commons/math3/fitting/WeightedObservedPoint;)D"]
12606 [label="org.apache.commons.math3.fitting.leastsquares.AbstractEvaluation.<init>(I)V"]
12610 [label="org.apache.commons.math3.fitting.leastsquares.AbstractEvaluation.getCovariances(D)Lorg/apache/commons/math3/linear/RealMatrix;"]
12613 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem$Evaluation.getJacobian()Lorg/apache/commons/math3/linear/RealMatrix;"]
12618 [label="org.apache.commons.math3.linear.QRDecomposition.getSolver()Lorg/apache/commons/math3/linear/DecompositionSolver;"]
12623 [label="org.apache.commons.math3.linear.QRDecomposition.<init>(Lorg/apache/commons/math3/linear/RealMatrix;D)V"]
12625 [label="org.apache.commons.math3.fitting.leastsquares.AbstractEvaluation.getSigma(D)Lorg/apache/commons/math3/linear/RealVector;"]
12629 [label="org.apache.commons.math3.linear.RealVector.setEntry(ID)V"]
12631 [label="org.apache.commons.math3.fitting.leastsquares.AbstractEvaluation.getRMS()D"]
12633 [label="org.apache.commons.math3.fitting.leastsquares.AbstractEvaluation.getCost()D"]
12636 [label="org.apache.commons.math3.linear.ArrayRealVector.<init>(Lorg/apache/commons/math3/linear/RealVector;)V"]
12638 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem$Evaluation.getResiduals()Lorg/apache/commons/math3/linear/RealVector;"]
12640 [label="org.apache.commons.math3.linear.ArrayRealVector.dotProduct(Lorg/apache/commons/math3/linear/RealVector;)D"]
12650 [label="org.apache.commons.math3.fitting.leastsquares.DenseWeightedEvaluation.<init>(Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem$Evaluation;Lorg/apache/commons/math3/linear/RealMatrix;)V"]
12657 [label="org.apache.commons.math3.fitting.leastsquares.DenseWeightedEvaluation.getJacobian()Lorg/apache/commons/math3/linear/RealMatrix;"]
12660 [label="org.apache.commons.math3.fitting.leastsquares.DenseWeightedEvaluation.getResiduals()Lorg/apache/commons/math3/linear/RealVector;"]
12662 [label="org.apache.commons.math3.fitting.leastsquares.DenseWeightedEvaluation.getPoint()Lorg/apache/commons/math3/linear/RealVector;"]
12675 [label="org.apache.commons.math3.fitting.leastsquares.EvaluationRmsChecker.<init>(D)V"]
12678 [label="org.apache.commons.math3.fitting.leastsquares.EvaluationRmsChecker.<init>(DD)V"]
12685 [label="org.apache.commons.math3.fitting.leastsquares.EvaluationRmsChecker.converged(ILorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem$Evaluation;Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem$Evaluation;)Z"]
12690 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem$Evaluation.getRMS()D"]
12704 [label="org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer$Decomposition.<init>()V"]
12710 [label="org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer$Decomposition$1.solve(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
12716 [label="org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer.computeNormalMatrix(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/util/Pair;"]
12718 [label="org.apache.commons.math3.linear.DecompositionSolver.solve(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
12720 [label="org.apache.commons.math3.linear.LUDecomposition.getSolver()Lorg/apache/commons/math3/linear/DecompositionSolver;"]
12725 [label="org.apache.commons.math3.linear.LUDecomposition.<init>(Lorg/apache/commons/math3/linear/RealMatrix;D)V"]
12734 [label="org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer$Decomposition$2.solve(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
12741 [label="org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer$Decomposition$3.solve(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
12744 [label="org.apache.commons.math3.linear.CholeskyDecomposition.<init>(Lorg/apache/commons/math3/linear/RealMatrix;DD)V"]
12750 [label="org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer$Decomposition$4.solve(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
12753 [label="org.apache.commons.math3.linear.SingularValueDecomposition.getSolver()Lorg/apache/commons/math3/linear/DecompositionSolver;"]
12758 [label="org.apache.commons.math3.linear.SingularValueDecomposition.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V"]
12760 [label="org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer$Decomposition.solve(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
12771 [label="org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer.<init>()V"]
12773 [label="org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer.<init>(Lorg/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizer$Decomposition;)V"]
12781 [label="org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer.withDecomposition(Lorg/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizer$Decomposition;)Lorg/apache/commons/math3/fitting/leastsquares/GaussNewtonOptimizer;"]
12786 [label="org.apache.commons.math3.fitting.leastsquares.GaussNewtonOptimizer.optimize(Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresOptimizer$Optimum;"]
12792 [label="org.apache.commons.math3.optim.OptimizationProblem.getEvaluationCounter()Lorg/apache/commons/math3/util/Incrementor;"]
12794 [label="org.apache.commons.math3.optim.OptimizationProblem.getIterationCounter()Lorg/apache/commons/math3/util/Incrementor;"]
12796 [label="org.apache.commons.math3.optim.OptimizationProblem.getConvergenceChecker()Lorg/apache/commons/math3/optim/ConvergenceChecker;"]
12798 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem.getStart()Lorg/apache/commons/math3/linear/RealVector;"]
12800 [label="org.apache.commons.math3.util.Incrementor.incrementCount()V"]
12802 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem.evaluate(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem$Evaluation;"]
12804 [label="org.apache.commons.math3.optim.ConvergenceChecker.converged(ILjava/lang/Object;Ljava/lang/Object;)Z"]
12806 [label="org.apache.commons.math3.util.Incrementor.getCount()I"]
12811 [label="org.apache.commons.math3.fitting.leastsquares.OptimumImpl.<init>(Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem$Evaluation;II)V"]
12819 [label="org.apache.commons.math3.linear.MatrixUtils.createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix;"]
12821 [label="org.apache.commons.math3.linear.RealVector.getEntry(I)D"]
12827 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter.<init>(Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem;)V"]
12831 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter.getStart()Lorg/apache/commons/math3/linear/RealVector;"]
12833 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter.getObservationSize()I"]
12835 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem.getObservationSize()I"]
12837 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter.getParameterSize()I"]
12839 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem.getParameterSize()I"]
12841 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter.evaluate(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem$Evaluation;"]
12844 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter.getEvaluationCounter()Lorg/apache/commons/math3/util/Incrementor;"]
12846 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter.getIterationCounter()Lorg/apache/commons/math3/util/Incrementor;"]
12848 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresAdapter.getConvergenceChecker()Lorg/apache/commons/math3/optim/ConvergenceChecker;"]
12876 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory.create(Lorg/apache/commons/math3/fitting/leastsquares/MultivariateJacobianFunction;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/optim/ConvergenceChecker;IIZLorg/apache/commons/math3/fitting/leastsquares/ParameterValidator;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem;"]
12891 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder.checker(Lorg/apache/commons/math3/optim/ConvergenceChecker;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder;"]
12894 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder.checkerPair(Lorg/apache/commons/math3/optim/ConvergenceChecker;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder;"]
12901 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory.evaluationChecker(Lorg/apache/commons/math3/optim/ConvergenceChecker;)Lorg/apache/commons/math3/optim/ConvergenceChecker;"]
12906 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder.model(Lorg/apache/commons/math3/fitting/leastsquares/MultivariateJacobianFunction;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder;"]
12908 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory.model(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)Lorg/apache/commons/math3/fitting/leastsquares/MultivariateJacobianFunction;"]
12912 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder.target(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder;"]
12918 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresBuilder.start(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresBuilder;"]
12934 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory.<init>()V"]
12949 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem.<init>(Lorg/apache/commons/math3/fitting/leastsquares/MultivariateJacobianFunction;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/optim/ConvergenceChecker;IIZLorg/apache/commons/math3/fitting/leastsquares/ParameterValidator;)V"]
12951 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory.weightMatrix(Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem;Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem;"]
12953 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory.create(Lorg/apache/commons/math3/fitting/leastsquares/MultivariateJacobianFunction;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/optim/ConvergenceChecker;II)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem;"]
12961 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory.create(Lorg/apache/commons/math3/fitting/leastsquares/MultivariateJacobianFunction;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/optim/ConvergenceChecker;II)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem;"]
12971 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory.create(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;[D[DLorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/optim/ConvergenceChecker;II)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem;"]
12985 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory.squareRoot(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;"]
12989 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$1.<init>(Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem;)V"]
12994 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$1.evaluate(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem$Evaluation;"]
13001 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory.weightDiagonal(Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem;Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem;"]
13005 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory.countEvaluations(Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem;Lorg/apache/commons/math3/util/Incrementor;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem;"]
13009 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$2.<init>(Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem;)V"]
13013 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$2.evaluate(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem$Evaluation;"]
13018 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$3.<init>()V"]
13021 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$3.converged(ILorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem$Evaluation;Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem$Evaluation;)Z"]
13026 [label="org.apache.commons.math3.optim.PointVectorValuePair.<init>([D[DZ)V"]
13030 [label="org.apache.commons.math3.linear.DiagonalMatrix.<init>(I)V"]
13032 [label="org.apache.commons.math3.linear.EigenDecomposition.getSquareRoot()Lorg/apache/commons/math3/linear/RealMatrix;"]
13040 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalValueAndJacobianFunction.<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;)V"]
13055 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalValueAndJacobianFunction.value(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/util/Pair;"]
13061 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalValueAndJacobianFunction.computeValue([D)Lorg/apache/commons/math3/linear/RealVector;"]
13063 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalValueAndJacobianFunction.computeJacobian([D)Lorg/apache/commons/math3/linear/RealMatrix;"]
13069 [label="org.apache.commons.math3.linear.Array2DRowRealMatrix.<init>([[DZ)V"]
13095 [label="org.apache.commons.math3.optim.AbstractOptimizationProblem.<init>(IILorg/apache/commons/math3/optim/ConvergenceChecker;)V"]
13103 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem.getObservationSize()I"]
13105 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem.getParameterSize()I"]
13107 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem.getStart()Lorg/apache/commons/math3/linear/RealVector;"]
13109 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem.evaluate(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem$Evaluation;"]
13112 [label="org.apache.commons.math3.fitting.leastsquares.ParameterValidator.validate(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
13117 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem$LazyUnweightedEvaluation.<init>(Lorg/apache/commons/math3/fitting/leastsquares/ValueAndJacobianFunction;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;)V"]
13119 [label="org.apache.commons.math3.fitting.leastsquares.MultivariateJacobianFunction.value(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/util/Pair;"]
13124 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem$UnweightedEvaluation.<init>(Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;)V"]
13161 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem$LazyUnweightedEvaluation.getJacobian()Lorg/apache/commons/math3/linear/RealMatrix;"]
13163 [label="org.apache.commons.math3.fitting.leastsquares.ValueAndJacobianFunction.computeJacobian([D)Lorg/apache/commons/math3/linear/RealMatrix;"]
13167 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresFactory$LocalLeastSquaresProblem$LazyUnweightedEvaluation.getResiduals()Lorg/apache/commons/math3/linear/RealVector;"]
13169 [label="org.apache.commons.math3.fitting.leastsquares.ValueAndJacobianFunction.computeValue([D)Lorg/apache/commons/math3/linear/RealVector;"]
13193 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem$Evaluation.getCovariances(D)Lorg/apache/commons/math3/linear/RealMatrix;"]
13196 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem$Evaluation.getSigma(D)Lorg/apache/commons/math3/linear/RealVector;"]
13201 [label="org.apache.commons.math3.fitting.leastsquares.LeastSquaresProblem$Evaluation.getCost()D"]
13222 [label="org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.<init>(DDDDD)V"]
13235 [label="org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.withInitialStepBoundFactor(D)Lorg/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer;"]
13238 [label="org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.withCostRelativeTolerance(D)Lorg/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer;"]
13241 [label="org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.withParameterRelativeTolerance(D)Lorg/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer;"]
13244 [label="org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.withOrthoTolerance(D)Lorg/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer;"]
13247 [label="org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.withRankingThreshold(D)Lorg/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer;"]
13260 [label="org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.optimize(Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresOptimizer$Optimum;"]
13267 [label="org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.qrDecomposition(Lorg/apache/commons/math3/linear/RealMatrix;I)Lorg/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer$InternalData;"]
13277 [label="org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.qTy([DLorg/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer$InternalData;)V"]
13279 [label="org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.determineLMParameter([DD[DLorg/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer$InternalData;I[D[D[D[DD)D"]
13294 [label="org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer$InternalData.<init>([[D[II[D[D[D)V"]
13315 [label="org.apache.commons.math3.fitting.leastsquares.LevenbergMarquardtOptimizer.determineLMDirection([D[D[DLorg/apache/commons/math3/fitting/leastsquares/LevenbergMarquardtOptimizer$InternalData;I[D[D)V"]
13355 [label="org.apache.commons.math3.fitting.leastsquares.OptimumImpl.getCovariances(D)Lorg/apache/commons/math3/linear/RealMatrix;"]
13359 [label="org.apache.commons.math3.fitting.leastsquares.OptimumImpl.getSigma(D)Lorg/apache/commons/math3/linear/RealVector;"]
13363 [label="org.apache.commons.math3.fitting.leastsquares.OptimumImpl.getRMS()D"]
13365 [label="org.apache.commons.math3.fitting.leastsquares.OptimumImpl.getJacobian()Lorg/apache/commons/math3/linear/RealMatrix;"]
13367 [label="org.apache.commons.math3.fitting.leastsquares.OptimumImpl.getCost()D"]
13369 [label="org.apache.commons.math3.fitting.leastsquares.OptimumImpl.getResiduals()Lorg/apache/commons/math3/linear/RealVector;"]
13371 [label="org.apache.commons.math3.fitting.leastsquares.OptimumImpl.getPoint()Lorg/apache/commons/math3/linear/RealVector;"]
13391 [label="org.apache.commons.math3.fitting.PolynomialCurveFitter.<init>([DI)V"]
13397 [label="org.apache.commons.math3.fitting.PolynomialCurveFitter.create(I)Lorg/apache/commons/math3/fitting/PolynomialCurveFitter;"]
13403 [label="org.apache.commons.math3.fitting.PolynomialCurveFitter.withStartPoint([D)Lorg/apache/commons/math3/fitting/PolynomialCurveFitter;"]
13406 [label="org.apache.commons.math3.fitting.PolynomialCurveFitter.withMaxIterations(I)Lorg/apache/commons/math3/fitting/PolynomialCurveFitter;"]
13409 [label="org.apache.commons.math3.fitting.PolynomialCurveFitter.getProblem(Ljava/util/Collection;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem;"]
13419 [label="org.apache.commons.math3.fitting.PolynomialFitter.fit(I[D)[D"]
13434 [label="org.apache.commons.math3.fitting.SimpleCurveFitter.<init>(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[DI)V"]
13442 [label="org.apache.commons.math3.fitting.SimpleCurveFitter.create(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)Lorg/apache/commons/math3/fitting/SimpleCurveFitter;"]
13449 [label="org.apache.commons.math3.fitting.SimpleCurveFitter.withStartPoint([D)Lorg/apache/commons/math3/fitting/SimpleCurveFitter;"]
13452 [label="org.apache.commons.math3.fitting.SimpleCurveFitter.withMaxIterations(I)Lorg/apache/commons/math3/fitting/SimpleCurveFitter;"]
13455 [label="org.apache.commons.math3.fitting.SimpleCurveFitter.getProblem(Ljava/util/Collection;)Lorg/apache/commons/math3/fitting/leastsquares/LeastSquaresProblem;"]
13479 [label="org.apache.commons.math3.fitting.WeightedObservedPoints.<init>()V"]
13484 [label="org.apache.commons.math3.fitting.WeightedObservedPoints.add(DD)V"]
13488 [label="org.apache.commons.math3.fitting.WeightedObservedPoints.add(DDD)V"]
13495 [label="org.apache.commons.math3.fitting.WeightedObservedPoints.add(Lorg/apache/commons/math3/fitting/WeightedObservedPoint;)V"]
13498 [label="org.apache.commons.math3.fitting.WeightedObservedPoints.toList()Ljava/util/List;"]
13500 [label="org.apache.commons.math3.fitting.WeightedObservedPoints.clear()V"]
13523 [label="org.apache.commons.math3.fraction.AbstractFormat.<init>()V"]
13525 [label="org.apache.commons.math3.fraction.AbstractFormat.<init>(Ljava/text/NumberFormat;)V"]
13527 [label="org.apache.commons.math3.fraction.AbstractFormat.getDefaultNumberFormat()Ljava/text/NumberFormat;"]
13531 [label="org.apache.commons.math3.fraction.AbstractFormat.<init>(Ljava/text/NumberFormat;Ljava/text/NumberFormat;)V"]
13533 [label="java.text.NumberFormat.clone()Ljava/lang/Object;"]
13538 [label="java.text.NumberFormat.<init>()V"]
13543 [label="org.apache.commons.math3.fraction.AbstractFormat.getDefaultNumberFormat(Ljava/util/Locale;)Ljava/text/NumberFormat;"]
13547 [label="java.text.NumberFormat.getNumberInstance(Ljava/util/Locale;)Ljava/text/NumberFormat;"]
13549 [label="java.text.NumberFormat.setMaximumFractionDigits(I)V"]
13551 [label="java.text.NumberFormat.setParseIntegerOnly(Z)V"]
13553 [label="org.apache.commons.math3.fraction.AbstractFormat.getDenominatorFormat()Ljava/text/NumberFormat;"]
13555 [label="org.apache.commons.math3.fraction.AbstractFormat.getNumeratorFormat()Ljava/text/NumberFormat;"]
13557 [label="org.apache.commons.math3.fraction.AbstractFormat.setDenominatorFormat(Ljava/text/NumberFormat;)V"]
13561 [label="org.apache.commons.math3.fraction.AbstractFormat.setNumeratorFormat(Ljava/text/NumberFormat;)V"]
13565 [label="org.apache.commons.math3.fraction.AbstractFormat.parseAndIgnoreWhitespace(Ljava/lang/String;Ljava/text/ParsePosition;)V"]
13569 [label="org.apache.commons.math3.fraction.AbstractFormat.parseNextCharacter(Ljava/lang/String;Ljava/text/ParsePosition;)C"]
13574 [label="java.lang.Character.isWhitespace(C)Z"]
13576 [label="org.apache.commons.math3.fraction.AbstractFormat.format(DLjava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;"]
13581 [label="java.text.NumberFormat.format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;"]
13583 [label="org.apache.commons.math3.fraction.AbstractFormat.format(JLjava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;"]
13588 [label="java.lang.Long.valueOf(J)Ljava/lang/Long;"]
13627 [label="java.math.BigInteger.valueOf(J)Ljava/math/BigInteger;"]
13633 [label="org.apache.commons.math3.fraction.BigFraction.<init>(Ljava/math/BigInteger;)V"]
13636 [label="org.apache.commons.math3.fraction.BigFraction.<init>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V"]
13643 [label="java.lang.Number.<init>()V"]
13645 [label="org.apache.commons.math3.util.MathUtils.checkNotNull(Ljava/lang/Object;Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V"]
13649 [label="java.math.BigInteger.signum()I"]
13655 [label="java.math.BigInteger.gcd(Ljava/math/BigInteger;)Ljava/math/BigInteger;"]
13657 [label="java.math.BigInteger.compareTo(Ljava/math/BigInteger;)I"]
13659 [label="java.math.BigInteger.divide(Ljava/math/BigInteger;)Ljava/math/BigInteger;"]
13661 [label="java.math.BigInteger.negate()Ljava/math/BigInteger;"]
13663 [label="org.apache.commons.math3.fraction.BigFraction.<init>(D)V"]
13668 [label="java.math.BigInteger.flipBit(I)Ljava/math/BigInteger;"]
13670 [label="java.math.BigInteger.multiply(Ljava/math/BigInteger;)Ljava/math/BigInteger;"]
13676 [label="org.apache.commons.math3.fraction.BigFraction.<init>(DDII)V"]
13683 [label="org.apache.commons.math3.util.FastMath.abs(J)J"]
13685 [label="org.apache.commons.math3.fraction.FractionConversionException.<init>(DJJ)V"]
13687 [label="org.apache.commons.math3.fraction.FractionConversionException.<init>(DI)V"]
13689 [label="org.apache.commons.math3.fraction.BigFraction.<init>(DI)V"]
13698 [label="org.apache.commons.math3.fraction.BigFraction.<init>(J)V"]
13701 [label="org.apache.commons.math3.fraction.BigFraction.<init>(JJ)V"]
13705 [label="org.apache.commons.math3.fraction.BigFraction.getReducedFraction(II)Lorg/apache/commons/math3/fraction/BigFraction;"]
13709 [label="org.apache.commons.math3.fraction.BigFraction.abs()Lorg/apache/commons/math3/fraction/BigFraction;"]
13711 [label="org.apache.commons.math3.fraction.BigFraction.negate()Lorg/apache/commons/math3/fraction/BigFraction;"]
13713 [label="org.apache.commons.math3.fraction.BigFraction.add(Ljava/math/BigInteger;)Lorg/apache/commons/math3/fraction/BigFraction;"]
13717 [label="java.math.BigInteger.add(Ljava/math/BigInteger;)Ljava/math/BigInteger;"]
13719 [label="org.apache.commons.math3.fraction.BigFraction.add(I)Lorg/apache/commons/math3/fraction/BigFraction;"]
13723 [label="org.apache.commons.math3.fraction.BigFraction.add(J)Lorg/apache/commons/math3/fraction/BigFraction;"]
13729 [label="java.math.BigInteger.equals(Ljava/lang/Object;)Z"]
13731 [label="org.apache.commons.math3.fraction.BigFraction.bigDecimalValue()Ljava/math/BigDecimal;"]
13733 [label="java.math.BigDecimal.divide(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;"]
13735 [label="java.math.BigDecimal.<init>(Ljava/math/BigInteger;)V"]
13737 [label="org.apache.commons.math3.fraction.BigFraction.bigDecimalValue(I)Ljava/math/BigDecimal;"]
13740 [label="java.math.BigDecimal.divide(Ljava/math/BigDecimal;I)Ljava/math/BigDecimal;"]
13745 [label="java.math.BigDecimal.divide(Ljava/math/BigDecimal;II)Ljava/math/BigDecimal;"]
13749 [label="org.apache.commons.math3.fraction.BigFraction.divide(Ljava/math/BigInteger;)Lorg/apache/commons/math3/fraction/BigFraction;"]
13755 [label="org.apache.commons.math3.fraction.BigFraction.divide(J)Lorg/apache/commons/math3/fraction/BigFraction;"]
13758 [label="org.apache.commons.math3.fraction.BigFraction.divide(Lorg/apache/commons/math3/fraction/BigFraction;)Lorg/apache/commons/math3/fraction/BigFraction;"]
13761 [label="org.apache.commons.math3.fraction.BigFraction.reciprocal()Lorg/apache/commons/math3/fraction/BigFraction;"]
13764 [label="java.math.BigInteger.doubleValue()D"]
13766 [label="java.math.BigInteger.bitLength()I"]
13768 [label="java.math.BigInteger.shiftRight(I)Ljava/math/BigInteger;"]
13770 [label="org.apache.commons.math3.fraction.BigFraction.equals(Ljava/lang/Object;)Z"]
13773 [label="org.apache.commons.math3.fraction.BigFraction.reduce()Lorg/apache/commons/math3/fraction/BigFraction;"]
13775 [label="org.apache.commons.math3.fraction.BigFraction.floatValue()F"]
13780 [label="java.math.BigInteger.floatValue()F"]
13782 [label="org.apache.commons.math3.util.FastMath.getExponent(F)I"]
13786 [label="org.apache.commons.math3.fraction.BigFraction.getDenominator()Ljava/math/BigInteger;"]
13788 [label="org.apache.commons.math3.fraction.BigFraction.getDenominatorAsInt()I"]
13790 [label="java.math.BigInteger.intValue()I"]
13792 [label="org.apache.commons.math3.fraction.BigFraction.getDenominatorAsLong()J"]
13794 [label="java.math.BigInteger.longValue()J"]
13796 [label="org.apache.commons.math3.fraction.BigFraction.getNumerator()Ljava/math/BigInteger;"]
13798 [label="org.apache.commons.math3.fraction.BigFraction.getNumeratorAsInt()I"]
13800 [label="org.apache.commons.math3.fraction.BigFraction.getNumeratorAsLong()J"]
13802 [label="org.apache.commons.math3.fraction.BigFraction.hashCode()I"]
13804 [label="java.math.BigInteger.hashCode()I"]
13806 [label="org.apache.commons.math3.fraction.BigFraction.intValue()I"]
13808 [label="org.apache.commons.math3.fraction.BigFraction.longValue()J"]
13810 [label="org.apache.commons.math3.fraction.BigFraction.multiply(Ljava/math/BigInteger;)Lorg/apache/commons/math3/fraction/BigFraction;"]
13816 [label="org.apache.commons.math3.fraction.BigFraction.multiply(J)Lorg/apache/commons/math3/fraction/BigFraction;"]
13822 [label="org.apache.commons.math3.fraction.BigFraction.percentageValue()D"]
13827 [label="java.math.BigInteger.pow(I)Ljava/math/BigInteger;"]
13829 [label="org.apache.commons.math3.fraction.BigFraction.pow(J)Lorg/apache/commons/math3/fraction/BigFraction;"]
13832 [label="org.apache.commons.math3.util.ArithmeticUtils.pow(Ljava/math/BigInteger;J)Ljava/math/BigInteger;"]
13834 [label="org.apache.commons.math3.fraction.BigFraction.pow(Ljava/math/BigInteger;)Lorg/apache/commons/math3/fraction/BigFraction;"]
13837 [label="org.apache.commons.math3.util.ArithmeticUtils.pow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;"]
13839 [label="org.apache.commons.math3.fraction.BigFraction.pow(D)D"]
13844 [label="org.apache.commons.math3.fraction.BigFraction.subtract(Ljava/math/BigInteger;)Lorg/apache/commons/math3/fraction/BigFraction;"]
13847 [label="java.math.BigInteger.subtract(Ljava/math/BigInteger;)Ljava/math/BigInteger;"]
13852 [label="org.apache.commons.math3.fraction.BigFraction.subtract(J)Lorg/apache/commons/math3/fraction/BigFraction;"]
13857 [label="org.apache.commons.math3.fraction.BigFraction.toString()Ljava/lang/String;"]
13859 [label="java.math.BigInteger.toString()Ljava/lang/String;"]
13861 [label="org.apache.commons.math3.fraction.BigFraction.getField()Lorg/apache/commons/math3/fraction/BigFractionField;"]
13872 [label="org.apache.commons.math3.fraction.BigFractionField.<init>()V"]
13889 [label="org.apache.commons.math3.fraction.BigFractionField$LazyHolder.<init>()V"]
13900 [label="org.apache.commons.math3.fraction.BigFractionFormat.<init>()V"]
13903 [label="org.apache.commons.math3.fraction.BigFractionFormat.<init>(Ljava/text/NumberFormat;)V"]
13906 [label="org.apache.commons.math3.fraction.BigFractionFormat.<init>(Ljava/text/NumberFormat;Ljava/text/NumberFormat;)V"]
13910 [label="org.apache.commons.math3.fraction.BigFractionFormat.getAvailableLocales()[Ljava/util/Locale;"]
13912 [label="org.apache.commons.math3.fraction.BigFractionFormat.formatBigFraction(Lorg/apache/commons/math3/fraction/BigFraction;)Ljava/lang/String;"]
13915 [label="org.apache.commons.math3.fraction.BigFractionFormat.getImproperInstance()Lorg/apache/commons/math3/fraction/BigFractionFormat;"]
13920 [label="org.apache.commons.math3.fraction.BigFractionFormat.getImproperInstance(Ljava/util/Locale;)Lorg/apache/commons/math3/fraction/BigFractionFormat;"]
13925 [label="org.apache.commons.math3.fraction.BigFractionFormat.getProperInstance()Lorg/apache/commons/math3/fraction/BigFractionFormat;"]
13927 [label="org.apache.commons.math3.fraction.BigFractionFormat.getProperInstance(Ljava/util/Locale;)Lorg/apache/commons/math3/fraction/BigFractionFormat;"]
13934 [label="org.apache.commons.math3.fraction.ProperBigFractionFormat.<init>(Ljava/text/NumberFormat;)V"]
13936 [label="org.apache.commons.math3.fraction.BigFractionFormat.format(Lorg/apache/commons/math3/fraction/BigFraction;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;"]
13945 [label="org.apache.commons.math3.fraction.BigFractionFormat.format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;"]
13953 [label="org.apache.commons.math3.fraction.BigFractionFormat.parse(Ljava/lang/String;)Lorg/apache/commons/math3/fraction/BigFraction;"]
13956 [label="org.apache.commons.math3.fraction.BigFractionFormat.parse(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math3/fraction/BigFraction;"]
13962 [label="org.apache.commons.math3.fraction.BigFractionFormat.parseNextBigInteger(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/math/BigInteger;"]
13967 [label="java.lang.Character.isDigit(C)Z"]
13969 [label="java.math.BigInteger.<init>(Ljava/lang/String;)V"]
14020 [label="org.apache.commons.math3.fraction.Fraction.<init>(D)V"]
14023 [label="org.apache.commons.math3.fraction.Fraction.<init>(DDI)V"]
14030 [label="org.apache.commons.math3.fraction.Fraction.<init>(DDII)V"]
14032 [label="org.apache.commons.math3.fraction.Fraction.<init>(DI)V"]
14043 [label="org.apache.commons.math3.fraction.Fraction.<init>(I)V"]
14046 [label="org.apache.commons.math3.fraction.Fraction.<init>(II)V"]
14053 [label="org.apache.commons.math3.util.ArithmeticUtils.gcd(II)I"]
14055 [label="org.apache.commons.math3.fraction.Fraction.abs()Lorg/apache/commons/math3/fraction/Fraction;"]
14057 [label="org.apache.commons.math3.fraction.Fraction.negate()Lorg/apache/commons/math3/fraction/Fraction;"]
14062 [label="org.apache.commons.math3.fraction.Fraction.doubleValue()D"]
14067 [label="org.apache.commons.math3.fraction.Fraction.floatValue()F"]
14070 [label="org.apache.commons.math3.fraction.Fraction.getDenominator()I"]
14072 [label="org.apache.commons.math3.fraction.Fraction.getNumerator()I"]
14076 [label="org.apache.commons.math3.fraction.Fraction.intValue()I"]
14078 [label="org.apache.commons.math3.fraction.Fraction.longValue()J"]
14081 [label="org.apache.commons.math3.fraction.Fraction.reciprocal()Lorg/apache/commons/math3/fraction/Fraction;"]
14083 [label="org.apache.commons.math3.fraction.Fraction.add(Lorg/apache/commons/math3/fraction/Fraction;)Lorg/apache/commons/math3/fraction/Fraction;"]
14086 [label="org.apache.commons.math3.fraction.Fraction.addSub(Lorg/apache/commons/math3/fraction/Fraction;Z)Lorg/apache/commons/math3/fraction/Fraction;"]
14088 [label="org.apache.commons.math3.fraction.Fraction.add(I)Lorg/apache/commons/math3/fraction/Fraction;"]
14091 [label="org.apache.commons.math3.fraction.Fraction.subtract(Lorg/apache/commons/math3/fraction/Fraction;)Lorg/apache/commons/math3/fraction/Fraction;"]
14094 [label="org.apache.commons.math3.fraction.Fraction.subtract(I)Lorg/apache/commons/math3/fraction/Fraction;"]
14100 [label="org.apache.commons.math3.util.ArithmeticUtils.mulAndCheck(II)I"]
14102 [label="org.apache.commons.math3.util.ArithmeticUtils.addAndCheck(II)I"]
14104 [label="org.apache.commons.math3.util.ArithmeticUtils.subAndCheck(II)I"]
14106 [label="java.math.BigInteger.mod(Ljava/math/BigInteger;)Ljava/math/BigInteger;"]
14109 [label="org.apache.commons.math3.fraction.Fraction.multiply(Lorg/apache/commons/math3/fraction/Fraction;)Lorg/apache/commons/math3/fraction/Fraction;"]
14113 [label="org.apache.commons.math3.fraction.Fraction.getReducedFraction(II)Lorg/apache/commons/math3/fraction/Fraction;"]
14115 [label="org.apache.commons.math3.fraction.Fraction.multiply(I)Lorg/apache/commons/math3/fraction/Fraction;"]
14120 [label="org.apache.commons.math3.fraction.Fraction.divide(Lorg/apache/commons/math3/fraction/Fraction;)Lorg/apache/commons/math3/fraction/Fraction;"]
14125 [label="org.apache.commons.math3.fraction.Fraction.divide(I)Lorg/apache/commons/math3/fraction/Fraction;"]
14129 [label="org.apache.commons.math3.fraction.Fraction.percentageValue()D"]
14134 [label="org.apache.commons.math3.fraction.Fraction.toString()Ljava/lang/String;"]
14136 [label="org.apache.commons.math3.fraction.Fraction.getField()Lorg/apache/commons/math3/fraction/FractionField;"]
14141 [label="org.apache.commons.math3.fraction.FractionField.getInstance()Lorg/apache/commons/math3/fraction/FractionField;"]
14161 [label="org.apache.commons.math3.fraction.FractionField.<init>()V"]
14179 [label="org.apache.commons.math3.fraction.FractionField$LazyHolder.<init>()V"]
14188 [label="org.apache.commons.math3.fraction.FractionFormat.<init>()V"]
14190 [label="org.apache.commons.math3.fraction.FractionFormat.<init>(Ljava/text/NumberFormat;)V"]
14193 [label="org.apache.commons.math3.fraction.FractionFormat.<init>(Ljava/text/NumberFormat;Ljava/text/NumberFormat;)V"]
14197 [label="org.apache.commons.math3.fraction.FractionFormat.getAvailableLocales()[Ljava/util/Locale;"]
14199 [label="org.apache.commons.math3.fraction.FractionFormat.formatFraction(Lorg/apache/commons/math3/fraction/Fraction;)Ljava/lang/String;"]
14202 [label="org.apache.commons.math3.fraction.FractionFormat.getImproperInstance()Lorg/apache/commons/math3/fraction/FractionFormat;"]
14207 [label="org.apache.commons.math3.fraction.FractionFormat.getImproperInstance(Ljava/util/Locale;)Lorg/apache/commons/math3/fraction/FractionFormat;"]
14212 [label="org.apache.commons.math3.fraction.FractionFormat.getProperInstance()Lorg/apache/commons/math3/fraction/FractionFormat;"]
14214 [label="org.apache.commons.math3.fraction.FractionFormat.getProperInstance(Ljava/util/Locale;)Lorg/apache/commons/math3/fraction/FractionFormat;"]
14221 [label="org.apache.commons.math3.fraction.ProperFractionFormat.<init>(Ljava/text/NumberFormat;)V"]
14223 [label="org.apache.commons.math3.fraction.FractionFormat.getDefaultNumberFormat()Ljava/text/NumberFormat;"]
14225 [label="org.apache.commons.math3.fraction.FractionFormat.format(Lorg/apache/commons/math3/fraction/Fraction;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;"]
14230 [label="java.text.NumberFormat.format(JLjava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;"]
14234 [label="org.apache.commons.math3.fraction.FractionFormat.format(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;"]
14241 [label="org.apache.commons.math3.fraction.FractionFormat.parse(Ljava/lang/String;)Lorg/apache/commons/math3/fraction/Fraction;"]
14244 [label="org.apache.commons.math3.fraction.FractionFormat.parse(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math3/fraction/Fraction;"]
14249 [label="java.text.NumberFormat.parse(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Number;"]
14251 [label="java.lang.Number.intValue()I"]
14258 [label="org.apache.commons.math3.fraction.ProperBigFractionFormat.<init>()V"]
14262 [label="org.apache.commons.math3.fraction.ProperBigFractionFormat.<init>(Ljava/text/NumberFormat;Ljava/text/NumberFormat;Ljava/text/NumberFormat;)V"]
14269 [label="org.apache.commons.math3.fraction.ProperBigFractionFormat.setWholeFormat(Ljava/text/NumberFormat;)V"]
14271 [label="org.apache.commons.math3.fraction.ProperBigFractionFormat.format(Lorg/apache/commons/math3/fraction/BigFraction;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;"]
14276 [label="java.math.BigInteger.remainder(Ljava/math/BigInteger;)Ljava/math/BigInteger;"]
14278 [label="org.apache.commons.math3.fraction.ProperBigFractionFormat.getWholeFormat()Ljava/text/NumberFormat;"]
14280 [label="java.lang.StringBuffer.append(C)Ljava/lang/StringBuffer;"]
14284 [label="org.apache.commons.math3.fraction.ProperBigFractionFormat.parse(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math3/fraction/BigFraction;"]
14296 [label="org.apache.commons.math3.fraction.ProperFractionFormat.<init>()V"]
14301 [label="org.apache.commons.math3.fraction.ProperFractionFormat.<init>(Ljava/text/NumberFormat;Ljava/text/NumberFormat;Ljava/text/NumberFormat;)V"]
14308 [label="org.apache.commons.math3.fraction.ProperFractionFormat.setWholeFormat(Ljava/text/NumberFormat;)V"]
14310 [label="org.apache.commons.math3.fraction.ProperFractionFormat.format(Lorg/apache/commons/math3/fraction/Fraction;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;"]
14315 [label="org.apache.commons.math3.fraction.ProperFractionFormat.getWholeFormat()Ljava/text/NumberFormat;"]
14319 [label="org.apache.commons.math3.fraction.ProperFractionFormat.parse(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math3/fraction/Fraction;"]
14323 [label="org.apache.commons.math3.util.MathUtils.copySign(II)I"]
14366 [label="org.apache.commons.math3.genetics.AbstractListChromosome.<init>(Ljava/util/List;)V"]
14372 [label="org.apache.commons.math3.genetics.AbstractListChromosome.<init>(Ljava/util/List;Z)V"]
14374 [label="org.apache.commons.math3.genetics.AbstractListChromosome.<init>([Ljava/lang/Object;)V"]
14379 [label="java.util.Arrays.asList([Ljava/lang/Object;)Ljava/util/List;"]
14384 [label="org.apache.commons.math3.genetics.Chromosome.<init>()V"]
14386 [label="org.apache.commons.math3.genetics.AbstractListChromosome.checkValidity(Ljava/util/List;)V"]
14389 [label="java.util.Collections.unmodifiableList(Ljava/util/List;)Ljava/util/List;"]
14393 [label="org.apache.commons.math3.genetics.AbstractListChromosome.getRepresentation()Ljava/util/List;"]
14395 [label="org.apache.commons.math3.genetics.AbstractListChromosome.getLength()I"]
14398 [label="org.apache.commons.math3.genetics.AbstractListChromosome.newFixedLengthChromosome(Ljava/util/List;)Lorg/apache/commons/math3/genetics/AbstractListChromosome;"]
14406 [label="org.apache.commons.math3.genetics.AbstractListChromosome.toString()Ljava/lang/String;"]
14408 [label="java.lang.String.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;"]
14410 [label="org.apache.commons.math3.genetics.Chromosome.getFitness()D"]
14417 [label="org.apache.commons.math3.genetics.BinaryChromosome.<init>(Ljava/util/List;)V"]
14423 [label="org.apache.commons.math3.genetics.BinaryChromosome.<init>([Ljava/lang/Integer;)V"]
14427 [label="org.apache.commons.math3.genetics.BinaryChromosome.checkValidity(Ljava/util/List;)V"]
14430 [label="org.apache.commons.math3.genetics.InvalidRepresentationException.<init>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V"]
14433 [label="org.apache.commons.math3.genetics.BinaryChromosome.randomBinaryRepresentation(I)Ljava/util/List;"]
14439 [label="org.apache.commons.math3.genetics.GeneticAlgorithm.getRandomGenerator()Lorg/apache/commons/math3/random/RandomGenerator;"]
14441 [label="org.apache.commons.math3.genetics.BinaryChromosome.isSame(Lorg/apache/commons/math3/genetics/Chromosome;)Z"]
14447 [label="java.lang.Integer.equals(Ljava/lang/Object;)Z"]
14454 [label="org.apache.commons.math3.genetics.BinaryMutation.<init>()V"]
14455 [label="org.apache.commons.math3.genetics.BinaryMutation.mutate(Lorg/apache/commons/math3/genetics/Chromosome;)Lorg/apache/commons/math3/genetics/Chromosome;"]
14474 [label="org.apache.commons.math3.genetics.Fitness.fitness()D"]
14476 [label="org.apache.commons.math3.genetics.Chromosome.compareTo(Lorg/apache/commons/math3/genetics/Chromosome;)I"]
14479 [label="org.apache.commons.math3.genetics.Chromosome.isSame(Lorg/apache/commons/math3/genetics/Chromosome;)Z"]
14482 [label="org.apache.commons.math3.genetics.Chromosome.findSameChromosome(Lorg/apache/commons/math3/genetics/Population;)Lorg/apache/commons/math3/genetics/Chromosome;"]
14489 [label="org.apache.commons.math3.genetics.Chromosome.searchForFitnessUpdate(Lorg/apache/commons/math3/genetics/Population;)V"]
14499 [label="org.apache.commons.math3.genetics.ChromosomePair.<init>(Lorg/apache/commons/math3/genetics/Chromosome;Lorg/apache/commons/math3/genetics/Chromosome;)V"]
14505 [label="org.apache.commons.math3.genetics.ChromosomePair.getFirst()Lorg/apache/commons/math3/genetics/Chromosome;"]
14507 [label="org.apache.commons.math3.genetics.ChromosomePair.getSecond()Lorg/apache/commons/math3/genetics/Chromosome;"]
14509 [label="org.apache.commons.math3.genetics.ChromosomePair.toString()Ljava/lang/String;"]
14515 [label="org.apache.commons.math3.genetics.CrossoverPolicy.crossover(Lorg/apache/commons/math3/genetics/Chromosome;Lorg/apache/commons/math3/genetics/Chromosome;)Lorg/apache/commons/math3/genetics/ChromosomePair;"]
14527 [label="org.apache.commons.math3.genetics.CycleCrossover.<init>()V"]
14529 [label="org.apache.commons.math3.genetics.CycleCrossover.<init>(Z)V"]
14536 [label="org.apache.commons.math3.genetics.CycleCrossover.crossover(Lorg/apache/commons/math3/genetics/Chromosome;Lorg/apache/commons/math3/genetics/Chromosome;)Lorg/apache/commons/math3/genetics/ChromosomePair;"]
14544 [label="org.apache.commons.math3.genetics.CycleCrossover.mate(Lorg/apache/commons/math3/genetics/AbstractListChromosome;Lorg/apache/commons/math3/genetics/AbstractListChromosome;)Lorg/apache/commons/math3/genetics/ChromosomePair;"]
14559 [label="java.util.HashSet.<init>(I)V"]
14563 [label="java.util.List.indexOf(Ljava/lang/Object;)I"]
14565 [label="java.util.Set.addAll(Ljava/util/Collection;)Z"]
14567 [label="java.util.Set.contains(Ljava/lang/Object;)Z"]
14569 [label="java.util.Set.size()I"]
14579 [label="org.apache.commons.math3.genetics.ElitisticListPopulation.<init>(Ljava/util/List;ID)V"]
14587 [label="org.apache.commons.math3.genetics.ListPopulation.<init>(Ljava/util/List;I)V"]
14589 [label="org.apache.commons.math3.genetics.ElitisticListPopulation.setElitismRate(D)V"]
14591 [label="org.apache.commons.math3.genetics.ElitisticListPopulation.<init>(ID)V"]
14595 [label="org.apache.commons.math3.genetics.ListPopulation.<init>(I)V"]
14597 [label="org.apache.commons.math3.genetics.ElitisticListPopulation.nextGeneration()Lorg/apache/commons/math3/genetics/Population;"]
14602 [label="org.apache.commons.math3.genetics.ListPopulation.getPopulationLimit()I"]
14604 [label="org.apache.commons.math3.genetics.ElitisticListPopulation.getElitismRate()D"]
14606 [label="org.apache.commons.math3.genetics.ListPopulation.getChromosomeList()Ljava/util/List;"]
14608 [label="java.util.Collections.sort(Ljava/util/List;)V"]
14610 [label="org.apache.commons.math3.genetics.ListPopulation.addChromosome(Lorg/apache/commons/math3/genetics/Chromosome;)V"]
14628 [label="org.apache.commons.math3.genetics.FixedElapsedTime.<init>(J)V"]
14631 [label="org.apache.commons.math3.genetics.FixedElapsedTime.<init>(JLjava/util/concurrent/TimeUnit;)V"]
14642 [label="java.util.concurrent.TimeUnit.toNanos(J)J"]
14644 [label="org.apache.commons.math3.genetics.FixedElapsedTime.isSatisfied(Lorg/apache/commons/math3/genetics/Population;)Z"]
14648 [label="java.lang.System.nanoTime()J"]
14656 [label="org.apache.commons.math3.genetics.FixedGenerationCount.<init>(I)V"]
14689 [label="org.apache.commons.math3.genetics.GeneticAlgorithm.<init>(Lorg/apache/commons/math3/genetics/CrossoverPolicy;DLorg/apache/commons/math3/genetics/MutationPolicy;DLorg/apache/commons/math3/genetics/SelectionPolicy;)V"]
14708 [label="org.apache.commons.math3.genetics.GeneticAlgorithm.evolve(Lorg/apache/commons/math3/genetics/Population;Lorg/apache/commons/math3/genetics/StoppingCondition;)Lorg/apache/commons/math3/genetics/Population;"]
14713 [label="org.apache.commons.math3.genetics.GeneticAlgorithm.nextGeneration(Lorg/apache/commons/math3/genetics/Population;)Lorg/apache/commons/math3/genetics/Population;"]
14715 [label="org.apache.commons.math3.genetics.StoppingCondition.isSatisfied(Lorg/apache/commons/math3/genetics/Population;)Z"]
14719 [label="org.apache.commons.math3.genetics.Population.nextGeneration()Lorg/apache/commons/math3/genetics/Population;"]
14721 [label="org.apache.commons.math3.genetics.SelectionPolicy.select(Lorg/apache/commons/math3/genetics/Population;)Lorg/apache/commons/math3/genetics/ChromosomePair;"]
14723 [label="org.apache.commons.math3.genetics.GeneticAlgorithm.getSelectionPolicy()Lorg/apache/commons/math3/genetics/SelectionPolicy;"]
14725 [label="org.apache.commons.math3.genetics.GeneticAlgorithm.getCrossoverRate()D"]
14728 [label="org.apache.commons.math3.genetics.GeneticAlgorithm.getCrossoverPolicy()Lorg/apache/commons/math3/genetics/CrossoverPolicy;"]
14730 [label="org.apache.commons.math3.genetics.GeneticAlgorithm.getMutationRate()D"]
14732 [label="org.apache.commons.math3.genetics.MutationPolicy.mutate(Lorg/apache/commons/math3/genetics/Chromosome;)Lorg/apache/commons/math3/genetics/Chromosome;"]
14734 [label="org.apache.commons.math3.genetics.GeneticAlgorithm.getMutationPolicy()Lorg/apache/commons/math3/genetics/MutationPolicy;"]
14736 [label="org.apache.commons.math3.genetics.Population.addChromosome(Lorg/apache/commons/math3/genetics/Chromosome;)V"]
14738 [label="org.apache.commons.math3.genetics.Population.getPopulationSize()I"]
14740 [label="org.apache.commons.math3.genetics.Population.getPopulationLimit()I"]
14762 [label="java.util.Collections.emptyList()Ljava/util/List;"]
14774 [label="java.util.List.addAll(Ljava/util/Collection;)Z"]
14776 [label="org.apache.commons.math3.genetics.ListPopulation.setChromosomes(Ljava/util/List;)V"]
14779 [label="org.apache.commons.math3.genetics.ListPopulation.addChromosomes(Ljava/util/Collection;)V"]
14785 [label="org.apache.commons.math3.genetics.ListPopulation.getChromosomes()Ljava/util/List;"]
14790 [label="org.apache.commons.math3.genetics.ListPopulation.getFittestChromosome()Lorg/apache/commons/math3/genetics/Chromosome;"]
14794 [label="org.apache.commons.math3.genetics.ListPopulation.setPopulationLimit(I)V"]
14797 [label="org.apache.commons.math3.genetics.ListPopulation.getPopulationSize()I"]
14799 [label="org.apache.commons.math3.genetics.ListPopulation.toString()Ljava/lang/String;"]
14801 [label="java.lang.Object.toString()Ljava/lang/String;"]
14803 [label="org.apache.commons.math3.genetics.ListPopulation.iterator()Ljava/util/Iterator;"]
14811 [label="java.util.List.iterator()Ljava/util/Iterator;"]
14821 [label="org.apache.commons.math3.genetics.NPointCrossover.<init>(I)V"]
14827 [label="org.apache.commons.math3.genetics.NPointCrossover.crossover(Lorg/apache/commons/math3/genetics/Chromosome;Lorg/apache/commons/math3/genetics/Chromosome;)Lorg/apache/commons/math3/genetics/ChromosomePair;"]
14831 [label="org.apache.commons.math3.genetics.NPointCrossover.mate(Lorg/apache/commons/math3/genetics/AbstractListChromosome;Lorg/apache/commons/math3/genetics/AbstractListChromosome;)Lorg/apache/commons/math3/genetics/ChromosomePair;"]
14841 [label="org.apache.commons.math3.genetics.OnePointCrossover.<init>()V"]
14842 [label="org.apache.commons.math3.genetics.OnePointCrossover.crossover(Lorg/apache/commons/math3/genetics/Chromosome;Lorg/apache/commons/math3/genetics/Chromosome;)Lorg/apache/commons/math3/genetics/ChromosomePair;"]
14846 [label="org.apache.commons.math3.genetics.OnePointCrossover.crossover(Lorg/apache/commons/math3/genetics/AbstractListChromosome;Lorg/apache/commons/math3/genetics/AbstractListChromosome;)Lorg/apache/commons/math3/genetics/ChromosomePair;"]
14856 [label="org.apache.commons.math3.genetics.OrderedCrossover.<init>()V"]
14857 [label="org.apache.commons.math3.genetics.OrderedCrossover.crossover(Lorg/apache/commons/math3/genetics/Chromosome;Lorg/apache/commons/math3/genetics/Chromosome;)Lorg/apache/commons/math3/genetics/ChromosomePair;"]
14861 [label="org.apache.commons.math3.genetics.OrderedCrossover.mate(Lorg/apache/commons/math3/genetics/AbstractListChromosome;Lorg/apache/commons/math3/genetics/AbstractListChromosome;)Lorg/apache/commons/math3/genetics/ChromosomePair;"]
14875 [label="java.util.List.subList(II)Ljava/util/List;"]
14877 [label="java.util.Set.add(Ljava/lang/Object;)Z"]
14879 [label="java.util.Collections.rotate(Ljava/util/List;I)V"]
14918 [label="org.apache.commons.math3.genetics.RandomKey.<init>(Ljava/util/List;)V"]
14923 [label="org.apache.commons.math3.genetics.RandomKey.decodeGeneric(Ljava/util/List;Ljava/util/List;Ljava/util/List;)Ljava/util/List;"]
14925 [label="org.apache.commons.math3.genetics.RandomKey.baseSequence(I)Ljava/util/List;"]
14927 [label="org.apache.commons.math3.genetics.RandomKey.<init>([Ljava/lang/Double;)V"]
14931 [label="org.apache.commons.math3.genetics.RandomKey.decode(Ljava/util/List;)Ljava/util/List;"]
14941 [label="org.apache.commons.math3.genetics.RandomKey.isSame(Lorg/apache/commons/math3/genetics/Chromosome;)Z"]
14949 [label="org.apache.commons.math3.genetics.RandomKey.checkValidity(Ljava/util/List;)V"]
14952 [label="org.apache.commons.math3.genetics.RandomKey.randomPermutation(I)Ljava/util/List;"]
14955 [label="org.apache.commons.math3.genetics.RandomKey.identityPermutation(I)Ljava/util/List;"]
14958 [label="org.apache.commons.math3.genetics.RandomKey.comparatorPermutation(Ljava/util/List;Ljava/util/Comparator;)Ljava/util/List;"]
14968 [label="org.apache.commons.math3.genetics.RandomKey.inducedPermutation(Ljava/util/List;Ljava/util/List;)Ljava/util/List;"]
14977 [label="org.apache.commons.math3.genetics.RandomKey.toString()Ljava/lang/String;"]
14985 [label="org.apache.commons.math3.genetics.RandomKeyMutation.<init>()V"]
14986 [label="org.apache.commons.math3.genetics.RandomKeyMutation.mutate(Lorg/apache/commons/math3/genetics/Chromosome;)Lorg/apache/commons/math3/genetics/Chromosome;"]
14990 [label="java.lang.Class.getSimpleName()Ljava/lang/String;"]
15002 [label="org.apache.commons.math3.genetics.TournamentSelection.<init>(I)V"]
15006 [label="org.apache.commons.math3.genetics.TournamentSelection.select(Lorg/apache/commons/math3/genetics/Population;)Lorg/apache/commons/math3/genetics/ChromosomePair;"]
15009 [label="org.apache.commons.math3.genetics.TournamentSelection.tournament(Lorg/apache/commons/math3/genetics/ListPopulation;)Lorg/apache/commons/math3/genetics/Chromosome;"]
15015 [label="org.apache.commons.math3.genetics.TournamentSelection$1.<init>(I)V"]
15021 [label="java.util.List.remove(I)Ljava/lang/Object;"]
15033 [label="org.apache.commons.math3.genetics.UniformCrossover.<init>(D)V"]
15039 [label="org.apache.commons.math3.genetics.UniformCrossover.crossover(Lorg/apache/commons/math3/genetics/Chromosome;Lorg/apache/commons/math3/genetics/Chromosome;)Lorg/apache/commons/math3/genetics/ChromosomePair;"]
15043 [label="org.apache.commons.math3.genetics.UniformCrossover.mate(Lorg/apache/commons/math3/genetics/AbstractListChromosome;Lorg/apache/commons/math3/genetics/AbstractListChromosome;)Lorg/apache/commons/math3/genetics/ChromosomePair;"]
15107 [label="org.apache.commons.math3.geometry.enclosing.EnclosingBall.<init>(Lorg/apache/commons/math3/geometry/Point;D[Lorg/apache/commons/math3/geometry/Point;)V"]
15115 [label="org.apache.commons.math3.geometry.enclosing.EnclosingBall.getCenter()Lorg/apache/commons/math3/geometry/Point;"]
15117 [label="org.apache.commons.math3.geometry.enclosing.EnclosingBall.getRadius()D"]
15119 [label="org.apache.commons.math3.geometry.enclosing.EnclosingBall.getSupport()[Lorg/apache/commons/math3/geometry/Point;"]
15121 [label="org.apache.commons.math3.geometry.enclosing.EnclosingBall.getSupportSize()I"]
15123 [label="org.apache.commons.math3.geometry.enclosing.EnclosingBall.contains(Lorg/apache/commons/math3/geometry/Point;)Z"]
15126 [label="org.apache.commons.math3.geometry.Point.distance(Lorg/apache/commons/math3/geometry/Point;)D"]
15128 [label="org.apache.commons.math3.geometry.enclosing.EnclosingBall.contains(Lorg/apache/commons/math3/geometry/Point;D)Z"]
15137 [label="org.apache.commons.math3.geometry.enclosing.SupportBallGenerator.ballOnSupport(Ljava/util/List;)Lorg/apache/commons/math3/geometry/enclosing/EnclosingBall;"]
15169 [label="org.apache.commons.math3.geometry.enclosing.WelzlEncloser.<init>(DLorg/apache/commons/math3/geometry/enclosing/SupportBallGenerator;)V"]
15175 [label="org.apache.commons.math3.geometry.enclosing.WelzlEncloser.enclose(Ljava/lang/Iterable;)Lorg/apache/commons/math3/geometry/enclosing/EnclosingBall;"]
15178 [label="java.util.Iterator.hasNext()Z"]
15180 [label="java.lang.Iterable.iterator()Ljava/util/Iterator;"]
15186 [label="org.apache.commons.math3.geometry.enclosing.WelzlEncloser.pivotingBall(Ljava/lang/Iterable;)Lorg/apache/commons/math3/geometry/enclosing/EnclosingBall;"]
15190 [label="java.util.Iterator.next()Ljava/lang/Object;"]
15192 [label="org.apache.commons.math3.geometry.Space.getDimension()I"]
15194 [label="org.apache.commons.math3.geometry.Point.getSpace()Lorg/apache/commons/math3/geometry/Space;"]
15196 [label="org.apache.commons.math3.geometry.enclosing.WelzlEncloser.moveToFrontBall(Ljava/util/List;ILjava/util/List;)Lorg/apache/commons/math3/geometry/enclosing/EnclosingBall;"]
15198 [label="org.apache.commons.math3.geometry.enclosing.WelzlEncloser.selectFarthest(Ljava/lang/Iterable;Lorg/apache/commons/math3/geometry/enclosing/EnclosingBall;)Lorg/apache/commons/math3/geometry/Point;"]
15229 [label="org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D.<init>()V"]
15231 [label="org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D.getInstance()Lorg/apache/commons/math3/geometry/euclidean/oned/Euclidean1D;"]
15239 [label="org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D.getSubSpace()Lorg/apache/commons/math3/geometry/Space;"]
15244 [label="org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D$NoSubSpaceException.<init>()V"]
15249 [label="org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D$LazyHolder.<init>()V"]
15267 [label="org.apache.commons.math3.geometry.euclidean.oned.Interval.<init>(DD)V"]
15273 [label="org.apache.commons.math3.geometry.euclidean.oned.Interval.getInf()D"]
15275 [label="org.apache.commons.math3.geometry.euclidean.oned.Interval.getLower()D"]
15278 [label="org.apache.commons.math3.geometry.euclidean.oned.Interval.getSup()D"]
15280 [label="org.apache.commons.math3.geometry.euclidean.oned.Interval.getUpper()D"]
15283 [label="org.apache.commons.math3.geometry.euclidean.oned.Interval.getSize()D"]
15285 [label="org.apache.commons.math3.geometry.euclidean.oned.Interval.getLength()D"]
15288 [label="org.apache.commons.math3.geometry.euclidean.oned.Interval.getBarycenter()D"]
15290 [label="org.apache.commons.math3.geometry.euclidean.oned.Interval.getMidPoint()D"]
15317 [label="org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.<init>(D)V"]
15320 [label="org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(D)V"]
15322 [label="org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.<init>(DDD)V"]
15327 [label="org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;D)V"]
15329 [label="org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.buildTree(DDD)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;"]
15331 [label="org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.<init>(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;D)V"]
15341 [label="org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.<init>(Ljava/util/Collection;D)V"]
15354 [label="org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>(Ljava/util/Collection;D)V"]
15356 [label="org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.<init>()V"]
15360 [label="org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.<init>(DD)V"]
15365 [label="org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.<init>(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V"]
15369 [label="org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.<init>(Ljava/util/Collection;)V"]
15377 [label="org.apache.commons.math3.geometry.partitioning.BSPTree.<init>(Ljava/lang/Object;)V"]
15381 [label="org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.wholeHyperplane()Lorg/apache/commons/math3/geometry/euclidean/oned/SubOrientedPoint;"]
15386 [label="org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.<init>(Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;ZD)V"]
15391 [label="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.<init>(D)V"]
15393 [label="org.apache.commons.math3.geometry.partitioning.BSPTree.<init>(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Ljava/lang/Object;)V"]
15397 [label="org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.buildNew(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/euclidean/oned/IntervalsSet;"]
15402 [label="org.apache.commons.math3.geometry.partitioning.AbstractRegion.getTolerance()D"]
15404 [label="org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.computeGeometricalProperties()V"]
15406 [label="org.apache.commons.math3.geometry.partitioning.BSPTree.getCut()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;"]
15408 [label="org.apache.commons.math3.geometry.partitioning.AbstractRegion.getTree(Z)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;"]
15410 [label="org.apache.commons.math3.geometry.partitioning.AbstractRegion.setBarycenter(Lorg/apache/commons/math3/geometry/Point;)V"]
15417 [label="org.apache.commons.math3.geometry.partitioning.AbstractRegion.setSize(D)V"]
15419 [label="org.apache.commons.math3.geometry.partitioning.BSPTree.getAttribute()Ljava/lang/Object;"]
15426 [label="org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.asList()Ljava/util/List;"]
15428 [label="org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.getLocation()Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;"]
15430 [label="org.apache.commons.math3.geometry.partitioning.SubHyperplane.getHyperplane()Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;"]
15432 [label="org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.getInf()D"]
15434 [label="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.getX()D"]
15436 [label="org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.isDirect()Z"]
15438 [label="org.apache.commons.math3.geometry.partitioning.BSPTree.getMinus()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;"]
15440 [label="org.apache.commons.math3.geometry.partitioning.BSPTree.getPlus()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;"]
15442 [label="org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.getSup()D"]
15444 [label="org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.projectToBoundary(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/partitioning/BoundaryProjection;"]
15453 [label="org.apache.commons.math3.geometry.partitioning.BoundaryProjection.<init>(Lorg/apache/commons/math3/geometry/Point;Lorg/apache/commons/math3/geometry/Point;D)V"]
15455 [label="org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.finiteOrNullPoint(D)Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;"]
15467 [label="org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.getFirstLeaf(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;"]
15470 [label="org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.previousInternalNode(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;"]
15472 [label="org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.leafBefore(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;"]
15474 [label="org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.getFirstIntervalBoundary()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;"]
15476 [label="org.apache.commons.math3.geometry.partitioning.BSPTree.getParent()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;"]
15479 [label="org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.nextInternalNode(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;"]
15481 [label="org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.isIntervalStart(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z"]
15483 [label="org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.isIntervalEnd(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z"]
15487 [label="org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.leafAfter(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;"]
15493 [label="org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.childAfter(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;"]
15495 [label="org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.isAfterParent(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z"]
15499 [label="org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.childBefore(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;"]
15501 [label="org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.isBeforeParent(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z"]
15513 [label="org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.isDirect(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z"]
15519 [label="org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.getAngle(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)D"]
15522 [label="org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet.iterator()Ljava/util/Iterator;"]
15530 [label="org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator.<init>()V"]
15542 [label="org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator.selectPending()V"]
15547 [label="org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator.next()[D"]
15552 [label="java.util.NoSuchElementException.<init>()V"]
15554 [label="org.apache.commons.math3.geometry.euclidean.oned.IntervalsSet$SubIntervalsIterator.remove()V"]
15578 [label="org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.<init>(Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;Z)V"]
15585 [label="org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.getOffset(Lorg/apache/commons/math3/geometry/Vector;)D"]
15594 [label="org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.getOffset(Lorg/apache/commons/math3/geometry/Point;)D"]
15602 [label="org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint.<init>(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Region;)V"]
15604 [label="org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint.wholeSpace()Lorg/apache/commons/math3/geometry/euclidean/oned/IntervalsSet;"]
15634 [label="org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.<init>(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Region;)V"]
15640 [label="org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint.buildNew(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Region;)Lorg/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane;"]
15646 [label="org.apache.commons.math3.geometry.euclidean.oned.SubOrientedPoint.split(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane;"]
15655 [label="org.apache.commons.math3.geometry.partitioning.Hyperplane.getOffset(Lorg/apache/commons/math3/geometry/Point;)D"]
15657 [label="org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.getHyperplane()Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;"]
15659 [label="org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane.<init>(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)V"]
15680 [label="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.<init>(DLorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;)V"]
15684 [label="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.<init>(DLorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;DLorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;)V"]
15690 [label="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.<init>(DLorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;DLorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;DLorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;)V"]
15698 [label="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.<init>(DLorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;DLorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;DLorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;DLorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;)V"]
15709 [label="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.getSpace()Lorg/apache/commons/math3/geometry/Space;"]
15715 [label="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.getNorm1()D"]
15717 [label="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.getNorm()D"]
15721 [label="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.getNormInf()D"]
15723 [label="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.add(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;"]
15726 [label="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.add(DLorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;"]
15730 [label="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.subtract(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;"]
15733 [label="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.subtract(DLorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;"]
15737 [label="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.normalize()Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;"]
15741 [label="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.scalarMultiply(D)Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;"]
15743 [label="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.negate()Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;"]
15747 [label="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.isNaN()Z"]
15749 [label="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.isInfinite()Z"]
15752 [label="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.distance1(Lorg/apache/commons/math3/geometry/Vector;)D"]
15755 [label="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.distance(Lorg/apache/commons/math3/geometry/Vector;)D"]
15758 [label="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.distance(Lorg/apache/commons/math3/geometry/Point;)D"]
15762 [label="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.distanceInf(Lorg/apache/commons/math3/geometry/Vector;)D"]
15765 [label="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.distanceSq(Lorg/apache/commons/math3/geometry/Vector;)D"]
15771 [label="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.distance(Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;)D"]
15776 [label="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.distanceInf(Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;)D"]
15781 [label="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.distanceSq(Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;)D"]
15786 [label="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.equals(Ljava/lang/Object;)Z"]
15789 [label="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.hashCode()I"]
15791 [label="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.toString()Ljava/lang/String;"]
15793 [label="org.apache.commons.math3.geometry.VectorFormat.format(Lorg/apache/commons/math3/geometry/Vector;)Ljava/lang/String;"]
15795 [label="org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormat.getInstance()Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1DFormat;"]
15797 [label="org.apache.commons.math3.geometry.euclidean.oned.Vector1D.toString(Ljava/text/NumberFormat;)Ljava/lang/String;"]
15803 [label="org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormat.<init>(Ljava/text/NumberFormat;)V"]
15810 [label="org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormat.<init>()V"]
15812 [label="org.apache.commons.math3.geometry.VectorFormat.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/text/NumberFormat;)V"]
15822 [label="org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormat.<init>(Ljava/lang/String;Ljava/lang/String;)V"]
15826 [label="org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormat.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/text/NumberFormat;)V"]
15832 [label="org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormat.getInstance(Ljava/util/Locale;)Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1DFormat;"]
15836 [label="org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormat.format(Lorg/apache/commons/math3/geometry/Vector;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;"]
15841 [label="org.apache.commons.math3.geometry.VectorFormat.format(Ljava/lang/StringBuffer;Ljava/text/FieldPosition;[D)Ljava/lang/StringBuffer;"]
15843 [label="org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormat.parse(Ljava/lang/String;)Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;"]
15846 [label="org.apache.commons.math3.geometry.euclidean.oned.Vector1DFormat.parse(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;"]
15851 [label="org.apache.commons.math3.geometry.VectorFormat.parseCoordinates(ILjava/lang/String;Ljava/text/ParsePosition;)[D"]
15881 [label="org.apache.commons.math3.geometry.euclidean.threed.CardanEulerSingularityException.<init>(Z)V"]
15890 [label="org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D.<init>()V"]
15892 [label="org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D.getInstance()Lorg/apache/commons/math3/geometry/euclidean/threed/Euclidean3D;"]
15900 [label="org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D.getSubSpace()Lorg/apache/commons/math3/geometry/euclidean/twod/Euclidean2D;"]
15905 [label="org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D.getInstance()Lorg/apache/commons/math3/geometry/euclidean/twod/Euclidean2D;"]
15910 [label="org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D$LazyHolder.<init>()V"]
15930 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.<init>(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Z)V"]
15937 [label="org.apache.commons.math3.RealFieldElement.reciprocal()Ljava/lang/Object;"]
15939 [label="org.apache.commons.math3.RealFieldElement.sqrt()Ljava/lang/Object;"]
15945 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/RealFieldElement;)V"]
15955 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)V"]
15966 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.getNorm()Lorg/apache/commons/math3/RealFieldElement;"]
15969 [label="org.apache.commons.math3.RealFieldElement.multiply(D)Ljava/lang/Object;"]
15971 [label="org.apache.commons.math3.RealFieldElement.sin()Ljava/lang/Object;"]
15973 [label="org.apache.commons.math3.RealFieldElement.cos()Ljava/lang/Object;"]
15975 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.getX()Lorg/apache/commons/math3/RealFieldElement;"]
15977 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.getY()Lorg/apache/commons/math3/RealFieldElement;"]
15979 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.getZ()Lorg/apache/commons/math3/RealFieldElement;"]
15981 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.<init>([[Lorg/apache/commons/math3/RealFieldElement;D)V"]
15990 [label="org.apache.commons.math3.geometry.euclidean.threed.NotARotationMatrixException.<init>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V"]
15993 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.orthogonalizeMatrix([[Lorg/apache/commons/math3/RealFieldElement;D)[[Lorg/apache/commons/math3/RealFieldElement;"]
15996 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.mat2quat([[Lorg/apache/commons/math3/RealFieldElement;)[Lorg/apache/commons/math3/RealFieldElement;"]
15998 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)V"]
16004 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.normalize()Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;"]
16006 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.crossProduct(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;"]
16008 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)V"]
16013 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.dotProduct(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/RealFieldElement;"]
16015 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.orthogonal()Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;"]
16017 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)V"]
16026 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)V"]
16039 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.<init>(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V"]
16041 [label="org.apache.commons.math3.geometry.euclidean.threed.RotationOrder.getA1()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;"]
16043 [label="org.apache.commons.math3.geometry.euclidean.threed.RotationOrder.getA2()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;"]
16045 [label="org.apache.commons.math3.geometry.euclidean.threed.RotationOrder.getA3()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;"]
16047 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.compose(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;"]
16051 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.revert()Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;"]
16062 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.getAxis()Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;"]
16064 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.getAxis(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;"]
16068 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.<init>(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)V"]
16070 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.getAngle()Lorg/apache/commons/math3/RealFieldElement;"]
16072 [label="org.apache.commons.math3.RealFieldElement.asin()Ljava/lang/Object;"]
16074 [label="org.apache.commons.math3.RealFieldElement.acos()Ljava/lang/Object;"]
16076 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.getAngles(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;)[Lorg/apache/commons/math3/RealFieldElement;"]
16081 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.getAngles(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[Lorg/apache/commons/math3/RealFieldElement;"]
16088 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.applyTo(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;"]
16090 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.vector(DDD)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;"]
16092 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.applyInverseTo(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;"]
16095 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.buildArray(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)[Lorg/apache/commons/math3/RealFieldElement;"]
16097 [label="org.apache.commons.math3.RealFieldElement.atan2(Ljava/lang/Object;)Ljava/lang/Object;"]
16119 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.applyTo(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;"]
16123 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.applyInverseTo(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;"]
16137 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.getMatrix()[[Lorg/apache/commons/math3/RealFieldElement;"]
16139 [label="org.apache.commons.math3.RealFieldElement.subtract(D)Ljava/lang/Object;"]
16141 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.toRotation()Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;"]
16146 [label="org.apache.commons.math3.geometry.euclidean.threed.Rotation.<init>(DDDDZ)V"]
16155 [label="org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getX()D"]
16157 [label="org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getY()D"]
16159 [label="org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getZ()D"]
16161 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.applyTo([Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;)V"]
16165 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.applyTo([D[Lorg/apache/commons/math3/RealFieldElement;)V"]
16169 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.applyTo(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;"]
16176 [label="org.apache.commons.math3.geometry.euclidean.threed.Rotation.getQ1()D"]
16178 [label="org.apache.commons.math3.geometry.euclidean.threed.Rotation.getQ2()D"]
16180 [label="org.apache.commons.math3.geometry.euclidean.threed.Rotation.getQ3()D"]
16182 [label="org.apache.commons.math3.geometry.euclidean.threed.Rotation.getQ0()D"]
16188 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.applyInverseTo([Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;)V"]
16192 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.applyInverseTo([D[Lorg/apache/commons/math3/RealFieldElement;)V"]
16196 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.applyInverseTo(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;"]
16203 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.applyTo(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;"]
16209 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.composeInternal(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;"]
16213 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.applyTo(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;"]
16216 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.compose(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;"]
16221 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.composeInternal(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;"]
16223 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.applyTo(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;"]
16233 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.applyInverseTo(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;"]
16236 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.composeInverse(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;"]
16241 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.composeInverseInternal(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;"]
16246 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.applyInverseTo(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;"]
16249 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.composeInverse(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;"]
16254 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.composeInverseInternal(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;"]
16258 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.applyInverseTo(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;"]
16269 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldRotation.distance(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldRotation;)Lorg/apache/commons/math3/RealFieldElement;"]
16296 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.<init>([Lorg/apache/commons/math3/RealFieldElement;)V"]
16300 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.<init>(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)V"]
16304 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.<init>(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)V"]
16311 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.<init>(DLorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)V"]
16315 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.<init>(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)V"]
16321 [label="org.apache.commons.math3.RealFieldElement.linearCombination(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"]
16323 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.<init>(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V"]
16329 [label="org.apache.commons.math3.RealFieldElement.linearCombination(DLjava/lang/Object;DLjava/lang/Object;)Ljava/lang/Object;"]
16331 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.<init>(DLorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)V"]
16337 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.<init>(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)V"]
16345 [label="org.apache.commons.math3.RealFieldElement.linearCombination(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"]
16347 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.<init>(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V"]
16355 [label="org.apache.commons.math3.RealFieldElement.linearCombination(DLjava/lang/Object;DLjava/lang/Object;DLjava/lang/Object;)Ljava/lang/Object;"]
16357 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.<init>(DLorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)V"]
16365 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.<init>(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)V"]
16375 [label="org.apache.commons.math3.RealFieldElement.linearCombination(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"]
16377 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.<init>(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V"]
16387 [label="org.apache.commons.math3.RealFieldElement.linearCombination(DLjava/lang/Object;DLjava/lang/Object;DLjava/lang/Object;DLjava/lang/Object;)Ljava/lang/Object;"]
16389 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.<init>(DLorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)V"]
16402 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.toArray()[Lorg/apache/commons/math3/RealFieldElement;"]
16404 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.toVector3D()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;"]
16406 [label="org.apache.commons.math3.geometry.euclidean.threed.Vector3D.<init>(DDD)V"]
16408 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.getNorm1()Lorg/apache/commons/math3/RealFieldElement;"]
16411 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.getNormSq()Lorg/apache/commons/math3/RealFieldElement;"]
16413 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.getNormInf()Lorg/apache/commons/math3/RealFieldElement;"]
16415 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.getAlpha()Lorg/apache/commons/math3/RealFieldElement;"]
16417 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.getDelta()Lorg/apache/commons/math3/RealFieldElement;"]
16419 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.add(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;"]
16422 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.add(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;"]
16425 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.add(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;"]
16430 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.add(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;"]
16434 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.add(DLorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;"]
16439 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.add(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;"]
16443 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.subtract(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;"]
16446 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.subtract(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;"]
16449 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.subtract(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;"]
16453 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.subtract(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;"]
16457 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.subtract(DLorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;"]
16461 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.subtract(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;"]
16466 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.scalarMultiply(Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;"]
16470 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.angle(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/RealFieldElement;"]
16477 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.angle(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/RealFieldElement;"]
16484 [label="org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getNorm()D"]
16486 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.dotProduct(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/RealFieldElement;"]
16488 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.crossProduct(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;"]
16490 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.angle(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/RealFieldElement;"]
16498 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.negate()Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;"]
16502 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.scalarMultiply(D)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;"]
16505 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.isNaN()Z"]
16507 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.isInfinite()Z"]
16510 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.equals(Ljava/lang/Object;)Z"]
16513 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.hashCode()I"]
16515 [label="java.lang.Object.hashCode()I"]
16517 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.dotProduct(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/RealFieldElement;"]
16520 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.dotProduct(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/RealFieldElement;"]
16523 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.crossProduct(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;"]
16526 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.crossProduct(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;"]
16529 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.distance1(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/RealFieldElement;"]
16532 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.distance1(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/RealFieldElement;"]
16535 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.distance(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/RealFieldElement;"]
16538 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.distance(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/RealFieldElement;"]
16541 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.distanceInf(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/RealFieldElement;"]
16544 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.distanceInf(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/RealFieldElement;"]
16547 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.distanceSq(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/RealFieldElement;"]
16550 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.distanceSq(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/RealFieldElement;"]
16567 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.dotProduct(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/RealFieldElement;"]
16588 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.crossProduct(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;"]
16595 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.distance1(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/RealFieldElement;"]
16603 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.distance1(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/RealFieldElement;"]
16611 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.distance1(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/RealFieldElement;"]
16618 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.distance(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/RealFieldElement;"]
16626 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.distance(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/RealFieldElement;"]
16634 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.distance(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/RealFieldElement;"]
16641 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.distanceInf(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/RealFieldElement;"]
16649 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.distanceInf(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/RealFieldElement;"]
16657 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.distanceInf(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/RealFieldElement;"]
16664 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.distanceSq(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/RealFieldElement;"]
16672 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.distanceSq(Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/RealFieldElement;"]
16680 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.distanceSq(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/FieldVector3D;)Lorg/apache/commons/math3/RealFieldElement;"]
16687 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.toString()Ljava/lang/String;"]
16689 [label="org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat.getInstance()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3DFormat;"]
16692 [label="org.apache.commons.math3.geometry.euclidean.threed.FieldVector3D.toString(Ljava/text/NumberFormat;)Ljava/lang/String;"]
16698 [label="org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat.<init>(Ljava/text/NumberFormat;)V"]
16714 [label="org.apache.commons.math3.geometry.euclidean.threed.Line.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;D)V"]
16719 [label="org.apache.commons.math3.geometry.euclidean.threed.Line.reset(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V"]
16722 [label="org.apache.commons.math3.geometry.euclidean.threed.Line.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Line;)V"]
16729 [label="org.apache.commons.math3.geometry.euclidean.threed.Line.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V"]
16738 [label="org.apache.commons.math3.geometry.euclidean.threed.Vector3D.subtract(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;"]
16740 [label="org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getNormSq()D"]
16742 [label="org.apache.commons.math3.geometry.euclidean.threed.Vector3D.<init>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V"]
16744 [label="org.apache.commons.math3.geometry.euclidean.threed.Vector3D.<init>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V"]
16746 [label="org.apache.commons.math3.geometry.euclidean.threed.Vector3D.dotProduct(Lorg/apache/commons/math3/geometry/Vector;)D"]
16748 [label="org.apache.commons.math3.geometry.euclidean.threed.Line.getTolerance()D"]
16750 [label="org.apache.commons.math3.geometry.euclidean.threed.Line.revert()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;"]
16753 [label="org.apache.commons.math3.geometry.euclidean.threed.Vector3D.negate()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;"]
16755 [label="org.apache.commons.math3.geometry.euclidean.threed.Line.getDirection()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;"]
16759 [label="org.apache.commons.math3.geometry.euclidean.threed.Line.getAbscissa(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)D"]
16762 [label="org.apache.commons.math3.geometry.euclidean.threed.Line.pointAt(D)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;"]
16765 [label="org.apache.commons.math3.geometry.euclidean.threed.Line.toSubSpace(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;"]
16771 [label="org.apache.commons.math3.geometry.euclidean.threed.Line.toSubSpace(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;"]
16776 [label="org.apache.commons.math3.geometry.euclidean.threed.Line.toSpace(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;"]
16779 [label="org.apache.commons.math3.geometry.euclidean.threed.Line.toSpace(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;"]
16787 [label="org.apache.commons.math3.geometry.euclidean.threed.Line.isSimilarTo(Lorg/apache/commons/math3/geometry/euclidean/threed/Line;)Z"]
16790 [label="org.apache.commons.math3.geometry.euclidean.threed.Vector3D.angle(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)D"]
16792 [label="org.apache.commons.math3.geometry.euclidean.threed.Line.contains(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Z"]
16796 [label="org.apache.commons.math3.geometry.euclidean.threed.Line.distance(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)D"]
16800 [label="org.apache.commons.math3.geometry.euclidean.threed.Line.distance(Lorg/apache/commons/math3/geometry/euclidean/threed/Line;)D"]
16803 [label="org.apache.commons.math3.geometry.euclidean.threed.Vector3D.crossProduct(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;"]
16805 [label="org.apache.commons.math3.geometry.euclidean.threed.Line.closestPoint(Lorg/apache/commons/math3/geometry/euclidean/threed/Line;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;"]
16808 [label="org.apache.commons.math3.geometry.euclidean.threed.Line.intersection(Lorg/apache/commons/math3/geometry/euclidean/threed/Line;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;"]
16812 [label="org.apache.commons.math3.geometry.euclidean.threed.Line.wholeLine()Lorg/apache/commons/math3/geometry/euclidean/threed/SubLine;"]
16817 [label="org.apache.commons.math3.geometry.euclidean.threed.SubLine.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Line;Lorg/apache/commons/math3/geometry/euclidean/oned/IntervalsSet;)V"]
16835 [label="org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V"]
16842 [label="org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor.getOutline(Lorg/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet;)[[Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;"]
16856 [label="org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor$BoundaryProjector.<init>(D)V"]
16858 [label="org.apache.commons.math3.geometry.partitioning.BSPTree.visit(Lorg/apache/commons/math3/geometry/partitioning/BSPTreeVisitor;)V"]
16863 [label="org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor$BoundaryProjector.getProjected()Lorg/apache/commons/math3/geometry/euclidean/twod/PolygonsSet;"]
16865 [label="org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getVertices()[[Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;"]
16867 [label="org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor.pointIsBetween([Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;II)Z"]
16873 [label="org.apache.commons.math3.geometry.euclidean.twod.Vector2D.getX()D"]
16875 [label="org.apache.commons.math3.geometry.euclidean.twod.Vector2D.getY()D"]
16889 [label="org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;D)V"]
16906 [label="org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor$BoundaryProjector.visitInternalNode(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V"]
16915 [label="org.apache.commons.math3.geometry.partitioning.BoundaryAttribute.getPlusOutside()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;"]
16917 [label="org.apache.commons.math3.geometry.euclidean.threed.OutlineExtractor$BoundaryProjector.addContribution(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Z)V"]
16919 [label="org.apache.commons.math3.geometry.partitioning.BoundaryAttribute.getPlusInside()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;"]
16936 [label="org.apache.commons.math3.geometry.euclidean.threed.Plane.getNormal()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;"]
16938 [label="org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.getRemainingRegion()Lorg/apache/commons/math3/geometry/partitioning/Region;"]
16946 [label="org.apache.commons.math3.geometry.euclidean.threed.Plane.toSpace(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;"]
16951 [label="org.apache.commons.math3.geometry.euclidean.twod.Vector2D.<init>(DD)V"]
16956 [label="org.apache.commons.math3.geometry.euclidean.twod.Line.<init>(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;D)V"]
16958 [label="org.apache.commons.math3.geometry.euclidean.twod.Line.wholeHyperplane()Lorg/apache/commons/math3/geometry/euclidean/twod/SubLine;"]
16960 [label="org.apache.commons.math3.geometry.euclidean.twod.Line.getAngle()D"]
16962 [label="org.apache.commons.math3.geometry.euclidean.twod.Line.<init>(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;DD)V"]
16964 [label="org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane.getPlus()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;"]
16966 [label="org.apache.commons.math3.geometry.partitioning.SubHyperplane.split(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane;"]
16968 [label="org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane.getMinus()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;"]
16970 [label="java.util.ArrayList.add(Ljava/lang/Object;)Z"]
16972 [label="org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(Ljava/util/Collection;D)V"]
16974 [label="org.apache.commons.math3.geometry.partitioning.RegionFactory.union(Lorg/apache/commons/math3/geometry/partitioning/Region;Lorg/apache/commons/math3/geometry/partitioning/Region;)Lorg/apache/commons/math3/geometry/partitioning/Region;"]
16980 [label="org.apache.commons.math3.geometry.partitioning.RegionFactory.<init>()V"]
17008 [label="org.apache.commons.math3.geometry.euclidean.threed.Plane.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;D)V"]
17012 [label="org.apache.commons.math3.geometry.euclidean.threed.Plane.setNormal(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V"]
17016 [label="org.apache.commons.math3.geometry.euclidean.threed.Plane.setFrame()V"]
17018 [label="org.apache.commons.math3.geometry.euclidean.threed.Plane.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;D)V"]
17024 [label="org.apache.commons.math3.geometry.euclidean.threed.Plane.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;D)V"]
17031 [label="org.apache.commons.math3.geometry.euclidean.threed.Vector3D.crossProduct(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;"]
17033 [label="org.apache.commons.math3.geometry.euclidean.threed.Plane.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V"]
17038 [label="org.apache.commons.math3.geometry.euclidean.threed.Plane.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V"]
17042 [label="org.apache.commons.math3.geometry.euclidean.threed.Plane.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V"]
17048 [label="org.apache.commons.math3.geometry.euclidean.threed.Plane.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Plane;)V"]
17054 [label="org.apache.commons.math3.geometry.euclidean.threed.Plane.copySelf()Lorg/apache/commons/math3/geometry/euclidean/threed/Plane;"]
17057 [label="org.apache.commons.math3.geometry.euclidean.threed.Plane.reset(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V"]
17067 [label="org.apache.commons.math3.geometry.euclidean.threed.Vector3D.orthogonal()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;"]
17069 [label="org.apache.commons.math3.geometry.euclidean.threed.Plane.getOrigin()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;"]
17076 [label="org.apache.commons.math3.geometry.euclidean.threed.Plane.project(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/Point;"]
17079 [label="org.apache.commons.math3.geometry.euclidean.threed.Plane.toSpace(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;"]
17081 [label="org.apache.commons.math3.geometry.euclidean.threed.Plane.toSubSpace(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;"]
17083 [label="org.apache.commons.math3.geometry.euclidean.threed.Plane.getTolerance()D"]
17085 [label="org.apache.commons.math3.geometry.euclidean.threed.Plane.revertSelf()V"]
17087 [label="org.apache.commons.math3.geometry.euclidean.threed.Plane.toSubSpace(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;"]
17099 [label="org.apache.commons.math3.geometry.euclidean.threed.Vector3D.<init>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V"]
17101 [label="org.apache.commons.math3.geometry.euclidean.threed.Plane.getPointAt(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;D)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;"]
17105 [label="org.apache.commons.math3.geometry.euclidean.threed.Plane.isSimilarTo(Lorg/apache/commons/math3/geometry/euclidean/threed/Plane;)Z"]
17108 [label="org.apache.commons.math3.geometry.euclidean.threed.Plane.rotate(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Plane;"]
17112 [label="org.apache.commons.math3.geometry.euclidean.threed.Vector3D.add(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;"]
17114 [label="org.apache.commons.math3.geometry.euclidean.threed.Rotation.applyTo(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;"]
17116 [label="org.apache.commons.math3.geometry.euclidean.threed.Plane.translate(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Plane;"]
17119 [label="org.apache.commons.math3.geometry.euclidean.threed.Plane.intersection(Lorg/apache/commons/math3/geometry/euclidean/threed/Line;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;"]
17123 [label="org.apache.commons.math3.geometry.euclidean.threed.Plane.intersection(Lorg/apache/commons/math3/geometry/euclidean/threed/Plane;)Lorg/apache/commons/math3/geometry/euclidean/threed/Line;"]
17126 [label="org.apache.commons.math3.geometry.euclidean.threed.Plane.intersection(Lorg/apache/commons/math3/geometry/euclidean/threed/Plane;Lorg/apache/commons/math3/geometry/euclidean/threed/Plane;Lorg/apache/commons/math3/geometry/euclidean/threed/Plane;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;"]
17132 [label="org.apache.commons.math3.geometry.euclidean.threed.Plane.wholeHyperplane()Lorg/apache/commons/math3/geometry/euclidean/threed/SubPlane;"]
17137 [label="org.apache.commons.math3.geometry.euclidean.threed.SubPlane.<init>(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Region;)V"]
17139 [label="org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(D)V"]
17141 [label="org.apache.commons.math3.geometry.euclidean.threed.Plane.wholeSpace()Lorg/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet;"]
17143 [label="org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.<init>(D)V"]
17145 [label="org.apache.commons.math3.geometry.euclidean.threed.Plane.contains(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Z"]
17148 [label="org.apache.commons.math3.geometry.euclidean.threed.Plane.getOffset(Lorg/apache/commons/math3/geometry/Vector;)D"]
17150 [label="org.apache.commons.math3.geometry.euclidean.threed.Plane.getOffset(Lorg/apache/commons/math3/geometry/euclidean/threed/Plane;)D"]
17153 [label="org.apache.commons.math3.geometry.euclidean.threed.Plane.sameOrientationAs(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Z"]
17157 [label="org.apache.commons.math3.geometry.euclidean.threed.Plane.getOffset(Lorg/apache/commons/math3/geometry/Point;)D"]
17171 [label="org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.<init>(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;D)V"]
17175 [label="org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.<init>(Ljava/util/Collection;D)V"]
17182 [label="org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.<init>(Ljava/util/List;Ljava/util/List;D)V"]
17190 [label="org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.buildBoundary(Ljava/util/List;Ljava/util/List;D)Ljava/util/List;"]
17192 [label="org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.<init>(DDDDDDD)V"]
17201 [label="org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.buildBoundary(DDDDDDD)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;"]
17203 [label="org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.<init>()V"]
17206 [label="org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.<init>(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V"]
17210 [label="org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.<init>(Ljava/util/Collection;)V"]
17214 [label="org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.<init>(DDDDDD)V"]
17240 [label="org.apache.commons.math3.geometry.partitioning.RegionFactory.buildConvex([Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/Region;"]
17245 [label="org.apache.commons.math3.geometry.partitioning.Region.getTree(Z)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;"]
17254 [label="org.apache.commons.math3.geometry.euclidean.threed.Vector3D.distance(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)D"]
17257 [label="org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.findReferences(Ljava/util/List;Ljava/util/List;)[[I"]
17259 [label="org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.successors(Ljava/util/List;Ljava/util/List;[[I)[[I"]
17268 [label="org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(D[Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)V"]
17278 [label="org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.buildNew(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet;"]
17281 [label="org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.computeGeometricalProperties()V"]
17286 [label="org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$FacetsContributionVisitor.<init>()V"]
17288 [label="org.apache.commons.math3.geometry.partitioning.AbstractRegion.getSize()D"]
17292 [label="org.apache.commons.math3.geometry.partitioning.AbstractRegion.getBarycenter()Lorg/apache/commons/math3/geometry/Point;"]
17299 [label="org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$FacetsContributionVisitor.visitInternalNode(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V"]
17302 [label="org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$FacetsContributionVisitor.addContribution(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Z)V"]
17313 [label="org.apache.commons.math3.geometry.partitioning.Region.getSize()D"]
17315 [label="org.apache.commons.math3.geometry.partitioning.Region.getBarycenter()Lorg/apache/commons/math3/geometry/Point;"]
17317 [label="org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.firstIntersection(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Line;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;"]
17321 [label="org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.recurseFirstIntersection(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Line;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;"]
17327 [label="org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.boundaryFacet(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;"]
17333 [label="org.apache.commons.math3.geometry.partitioning.Region.checkPoint(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/partitioning/Region$Location;"]
17335 [label="org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.rotate(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet;"]
17339 [label="org.apache.commons.math3.geometry.partitioning.AbstractRegion.applyTransform(Lorg/apache/commons/math3/geometry/partitioning/Transform;)Lorg/apache/commons/math3/geometry/partitioning/AbstractRegion;"]
17344 [label="org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$RotationTransform.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)V"]
17369 [label="org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$RotationTransform.apply(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;"]
17372 [label="org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$RotationTransform.apply(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/euclidean/threed/Plane;"]
17376 [label="org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$RotationTransform.apply(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;"]
17385 [label="org.apache.commons.math3.geometry.euclidean.twod.Line.getTransform(DDDDDD)Lorg/apache/commons/math3/geometry/partitioning/Transform;"]
17387 [label="org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.applyTransform(Lorg/apache/commons/math3/geometry/partitioning/Transform;)Lorg/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane;"]
17392 [label="org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet.translate(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/PolyhedronsSet;"]
17398 [label="org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$TranslationTransform.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V"]
17410 [label="org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$TranslationTransform.apply(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;"]
17413 [label="org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$TranslationTransform.apply(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/euclidean/threed/Plane;"]
17417 [label="org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$TranslationTransform.apply(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;"]
17448 [label="org.apache.commons.math3.geometry.euclidean.threed.Rotation.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;D)V"]
17452 [label="org.apache.commons.math3.geometry.euclidean.threed.Rotation.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)V"]
17458 [label="org.apache.commons.math3.geometry.euclidean.threed.Rotation.<init>([[DD)V"]
17462 [label="org.apache.commons.math3.geometry.euclidean.threed.Rotation.orthogonalizeMatrix([[DD)[[D"]
17464 [label="org.apache.commons.math3.geometry.euclidean.threed.Rotation.mat2quat([[D)[D"]
17466 [label="org.apache.commons.math3.geometry.euclidean.threed.Rotation.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V"]
17472 [label="org.apache.commons.math3.geometry.euclidean.threed.Vector3D.normalize()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;"]
17474 [label="org.apache.commons.math3.geometry.euclidean.threed.Rotation.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V"]
17478 [label="org.apache.commons.math3.geometry.euclidean.threed.Rotation.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;DDD)V"]
17484 [label="org.apache.commons.math3.geometry.euclidean.threed.Rotation.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;DDD)V"]
17492 [label="org.apache.commons.math3.geometry.euclidean.threed.Rotation.compose(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;"]
17496 [label="org.apache.commons.math3.geometry.euclidean.threed.Rotation.revert()Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;"]
17502 [label="org.apache.commons.math3.geometry.euclidean.threed.Rotation.getAxis()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;"]
17504 [label="org.apache.commons.math3.geometry.euclidean.threed.Rotation.getAxis(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;"]
17508 [label="org.apache.commons.math3.geometry.euclidean.threed.Rotation.getAngle()D"]
17510 [label="org.apache.commons.math3.geometry.euclidean.threed.Rotation.getAngles(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;)[D"]
17513 [label="org.apache.commons.math3.geometry.euclidean.threed.Rotation.getAngles(Lorg/apache/commons/math3/geometry/euclidean/threed/RotationOrder;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)[D"]
17518 [label="org.apache.commons.math3.geometry.euclidean.threed.Rotation.applyInverseTo(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;"]
17534 [label="org.apache.commons.math3.geometry.euclidean.threed.Rotation.applyTo(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;"]
17540 [label="org.apache.commons.math3.geometry.euclidean.threed.Rotation.composeInternal(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;"]
17544 [label="org.apache.commons.math3.geometry.euclidean.threed.Rotation.applyInverseTo(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;"]
17547 [label="org.apache.commons.math3.geometry.euclidean.threed.Rotation.composeInverse(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/RotationConvention;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;"]
17552 [label="org.apache.commons.math3.geometry.euclidean.threed.Rotation.composeInverseInternal(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;"]
17560 [label="org.apache.commons.math3.geometry.euclidean.threed.Rotation.distance(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)D"]
17569 [label="org.apache.commons.math3.geometry.euclidean.threed.RotationConvention.<init>()V"]
17599 [label="org.apache.commons.math3.geometry.euclidean.threed.RotationOrder.<init>(Ljava/lang/String;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V"]
17622 [label="org.apache.commons.math3.geometry.euclidean.threed.Segment.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Line;)V"]
17630 [label="org.apache.commons.math3.geometry.euclidean.threed.Segment.getStart()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;"]
17632 [label="org.apache.commons.math3.geometry.euclidean.threed.Segment.getEnd()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;"]
17634 [label="org.apache.commons.math3.geometry.euclidean.threed.Segment.getLine()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;"]
17641 [label="org.apache.commons.math3.geometry.euclidean.threed.SphereGenerator.<init>()V"]
17642 [label="org.apache.commons.math3.geometry.euclidean.threed.SphereGenerator.ballOnSupport(Ljava/util/List;)Lorg/apache/commons/math3/geometry/enclosing/EnclosingBall;"]
17651 [label="org.apache.commons.math3.geometry.euclidean.threed.Vector3D.distance(Lorg/apache/commons/math3/geometry/Vector;)D"]
17653 [label="org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getNorm1()D"]
17658 [label="org.apache.commons.math3.geometry.euclidean.twod.DiskGenerator.ballOnSupport(Ljava/util/List;)Lorg/apache/commons/math3/geometry/enclosing/EnclosingBall;"]
17663 [label="org.apache.commons.math3.geometry.euclidean.twod.DiskGenerator.<init>()V"]
17665 [label="org.apache.commons.math3.geometry.euclidean.threed.SphereGenerator.minor([Lorg/apache/commons/math3/fraction/BigFraction;[Lorg/apache/commons/math3/fraction/BigFraction;[Lorg/apache/commons/math3/fraction/BigFraction;)Lorg/apache/commons/math3/fraction/BigFraction;"]
17692 [label="org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V"]
17698 [label="org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getAlpha()D"]
17701 [label="org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates.<init>(DDD)V"]
17714 [label="org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates.toCartesianGradient([D)[D"]
17717 [label="org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates.computeJacobian()V"]
17720 [label="org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates.toCartesianHessian([[D[D)[[D"]
17724 [label="org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates.computeHessians()V"]
17731 [label="org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates.writeReplace()Ljava/lang/Object;"]
17736 [label="org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates$DataTransferObject.<init>(DDD)V"]
17754 [label="org.apache.commons.math3.geometry.euclidean.threed.SphericalCoordinates$DataTransferObject.readResolve()Ljava/lang/Object;"]
17771 [label="org.apache.commons.math3.geometry.euclidean.threed.SubLine.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;D)V"]
17776 [label="org.apache.commons.math3.geometry.euclidean.threed.SubLine.buildIntervalSet(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;D)Lorg/apache/commons/math3/geometry/euclidean/oned/IntervalsSet;"]
17778 [label="org.apache.commons.math3.geometry.euclidean.threed.SubLine.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V"]
17784 [label="org.apache.commons.math3.geometry.euclidean.threed.SubLine.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Segment;)V"]
17793 [label="org.apache.commons.math3.geometry.euclidean.threed.SubLine.getSegments()Ljava/util/List;"]
17802 [label="org.apache.commons.math3.geometry.euclidean.threed.SubLine.intersection(Lorg/apache/commons/math3/geometry/euclidean/threed/SubLine;Z)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;"]
17807 [label="org.apache.commons.math3.geometry.partitioning.AbstractRegion.checkPoint(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/partitioning/Region$Location;"]
17817 [label="org.apache.commons.math3.geometry.euclidean.threed.SubPlane.buildNew(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Region;)Lorg/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane;"]
17821 [label="org.apache.commons.math3.geometry.euclidean.threed.SubPlane.split(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane;"]
17831 [label="org.apache.commons.math3.geometry.partitioning.BSPTree.split(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;"]
17833 [label="org.apache.commons.math3.geometry.partitioning.Region.isEmpty(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z"]
17866 [label="org.apache.commons.math3.geometry.euclidean.threed.Vector3D.<init>([D)V"]
17869 [label="org.apache.commons.math3.geometry.euclidean.threed.Vector3D.<init>(DD)V"]
17888 [label="org.apache.commons.math3.geometry.euclidean.threed.Vector3D.<init>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V"]
17903 [label="org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getSpace()Lorg/apache/commons/math3/geometry/Space;"]
17911 [label="org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getNormInf()D"]
17914 [label="org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getDelta()D"]
17918 [label="org.apache.commons.math3.geometry.euclidean.threed.Vector3D.add(DLorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;"]
17924 [label="org.apache.commons.math3.geometry.euclidean.threed.Vector3D.subtract(DLorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;"]
17929 [label="org.apache.commons.math3.geometry.euclidean.threed.Vector3D.scalarMultiply(D)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;"]
17938 [label="org.apache.commons.math3.geometry.euclidean.threed.Vector3D.isNaN()Z"]
17940 [label="org.apache.commons.math3.geometry.euclidean.threed.Vector3D.isInfinite()Z"]
17943 [label="org.apache.commons.math3.geometry.euclidean.threed.Vector3D.equals(Ljava/lang/Object;)Z"]
17946 [label="org.apache.commons.math3.geometry.euclidean.threed.Vector3D.hashCode()I"]
17952 [label="org.apache.commons.math3.geometry.euclidean.threed.Vector3D.distance1(Lorg/apache/commons/math3/geometry/Vector;)D"]
17957 [label="org.apache.commons.math3.geometry.euclidean.threed.Vector3D.distance(Lorg/apache/commons/math3/geometry/Point;)D"]
17961 [label="org.apache.commons.math3.geometry.euclidean.threed.Vector3D.distanceInf(Lorg/apache/commons/math3/geometry/Vector;)D"]
17964 [label="org.apache.commons.math3.geometry.euclidean.threed.Vector3D.distanceSq(Lorg/apache/commons/math3/geometry/Vector;)D"]
17967 [label="org.apache.commons.math3.geometry.euclidean.threed.Vector3D.dotProduct(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)D"]
17974 [label="org.apache.commons.math3.geometry.euclidean.threed.Vector3D.distance1(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)D"]
17982 [label="org.apache.commons.math3.geometry.euclidean.threed.Vector3D.distanceInf(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)D"]
17987 [label="org.apache.commons.math3.geometry.euclidean.threed.Vector3D.distanceSq(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)D"]
17992 [label="org.apache.commons.math3.geometry.euclidean.threed.Vector3D.toString()Ljava/lang/String;"]
17994 [label="org.apache.commons.math3.geometry.euclidean.threed.Vector3D.toString(Ljava/text/NumberFormat;)Ljava/lang/String;"]
18001 [label="org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat.<init>()V"]
18005 [label="org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"]
18010 [label="org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/text/NumberFormat;)V"]
18017 [label="org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat.getInstance(Ljava/util/Locale;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3DFormat;"]
18021 [label="org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat.format(Lorg/apache/commons/math3/geometry/Vector;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;"]
18026 [label="org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat.parse(Ljava/lang/String;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;"]
18029 [label="org.apache.commons.math3.geometry.euclidean.threed.Vector3DFormat.parse(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;"]
18057 [label="org.apache.commons.math3.geometry.euclidean.twod.Vector2D.<init>(DLorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;DLorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)V"]
18059 [label="org.apache.commons.math3.geometry.euclidean.twod.Vector2D.distance(Lorg/apache/commons/math3/geometry/Vector;)D"]
18061 [label="org.apache.commons.math3.geometry.euclidean.twod.DiskGenerator.minor([Lorg/apache/commons/math3/fraction/BigFraction;[Lorg/apache/commons/math3/fraction/BigFraction;)Lorg/apache/commons/math3/fraction/BigFraction;"]
18069 [label="org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D.<init>()V"]
18076 [label="org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D.getSubSpace()Lorg/apache/commons/math3/geometry/euclidean/oned/Euclidean1D;"]
18081 [label="org.apache.commons.math3.geometry.euclidean.twod.Euclidean2D$LazyHolder.<init>()V"]
18105 [label="org.apache.commons.math3.geometry.euclidean.twod.hull.AbstractConvexHullGenerator2D.<init>(Z)V"]
18108 [label="org.apache.commons.math3.geometry.euclidean.twod.hull.AbstractConvexHullGenerator2D.<init>(ZD)V"]
18116 [label="org.apache.commons.math3.geometry.euclidean.twod.hull.AbstractConvexHullGenerator2D.getTolerance()D"]
18118 [label="org.apache.commons.math3.geometry.euclidean.twod.hull.AbstractConvexHullGenerator2D.isIncludeCollinearPoints()Z"]
18120 [label="org.apache.commons.math3.geometry.euclidean.twod.hull.AbstractConvexHullGenerator2D.generate(Ljava/util/Collection;)Lorg/apache/commons/math3/geometry/euclidean/twod/hull/ConvexHull2D;"]
18129 [label="org.apache.commons.math3.geometry.euclidean.twod.hull.AbstractConvexHullGenerator2D.findHullVertices(Ljava/util/Collection;)Ljava/util/Collection;"]
18131 [label="org.apache.commons.math3.geometry.euclidean.twod.hull.ConvexHull2D.<init>([Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;D)V"]
18133 [label="java.util.Collection.toArray([Ljava/lang/Object;)[Ljava/lang/Object;"]
18139 [label="org.apache.commons.math3.geometry.euclidean.twod.hull.AklToussaintHeuristic.<init>()V"]
18141 [label="org.apache.commons.math3.geometry.euclidean.twod.hull.AklToussaintHeuristic.reducePoints(Ljava/util/Collection;)Ljava/util/Collection;"]
18144 [label="org.apache.commons.math3.geometry.euclidean.twod.hull.AklToussaintHeuristic.buildQuadrilateral([Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)Ljava/util/List;"]
18149 [label="org.apache.commons.math3.geometry.euclidean.twod.hull.AklToussaintHeuristic.insideQuadrilateral(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Ljava/util/List;)Z"]
18153 [label="java.util.List.contains(Ljava/lang/Object;)Z"]
18158 [label="org.apache.commons.math3.geometry.euclidean.twod.Vector2D.equals(Ljava/lang/Object;)Z"]
18160 [label="org.apache.commons.math3.geometry.euclidean.twod.Vector2D.crossProduct(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)D"]
18183 [label="org.apache.commons.math3.geometry.euclidean.twod.hull.ConvexHull2D.isConvex([Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)Z"]
18189 [label="org.apache.commons.math3.geometry.euclidean.twod.Vector2D.subtract(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;"]
18191 [label="org.apache.commons.math3.util.Precision.compareTo(DDD)I"]
18193 [label="org.apache.commons.math3.geometry.euclidean.twod.hull.ConvexHull2D.getVertices()[Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;"]
18195 [label="org.apache.commons.math3.geometry.euclidean.twod.hull.ConvexHull2D.getLineSegments()[Lorg/apache/commons/math3/geometry/euclidean/twod/Segment;"]
18197 [label="org.apache.commons.math3.geometry.euclidean.twod.hull.ConvexHull2D.retrieveLineSegments()[Lorg/apache/commons/math3/geometry/euclidean/twod/Segment;"]
18201 [label="org.apache.commons.math3.geometry.euclidean.twod.Segment.<init>(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Line;)V"]
18203 [label="org.apache.commons.math3.geometry.euclidean.twod.hull.ConvexHull2D.createRegion()Lorg/apache/commons/math3/geometry/partitioning/Region;"]
18206 [label="org.apache.commons.math3.geometry.euclidean.twod.Segment.getLine()Lorg/apache/commons/math3/geometry/euclidean/twod/Line;"]
18224 [label="org.apache.commons.math3.geometry.euclidean.twod.hull.MonotoneChain.<init>()V"]
18226 [label="org.apache.commons.math3.geometry.euclidean.twod.hull.MonotoneChain.<init>(Z)V"]
18231 [label="org.apache.commons.math3.geometry.euclidean.twod.hull.MonotoneChain.<init>(ZD)V"]
18235 [label="org.apache.commons.math3.geometry.euclidean.twod.hull.MonotoneChain.findHullVertices(Ljava/util/Collection;)Ljava/util/Collection;"]
18241 [label="org.apache.commons.math3.geometry.euclidean.twod.hull.MonotoneChain$1.<init>()V"]
18244 [label="org.apache.commons.math3.geometry.euclidean.twod.hull.MonotoneChain$1.compare(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)I"]
18249 [label="org.apache.commons.math3.geometry.euclidean.twod.hull.MonotoneChain.updateHull(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Ljava/util/List;)V"]
18254 [label="org.apache.commons.math3.geometry.euclidean.twod.Line.getOffset(Lorg/apache/commons/math3/geometry/Vector;)D"]
18282 [label="org.apache.commons.math3.geometry.euclidean.twod.Line.reset(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)V"]
18289 [label="org.apache.commons.math3.geometry.euclidean.twod.Line.reset(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;D)V"]
18291 [label="org.apache.commons.math3.geometry.euclidean.twod.Line.<init>(DDDDD)V"]
18303 [label="org.apache.commons.math3.geometry.euclidean.twod.Line.<init>(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)V"]
18308 [label="org.apache.commons.math3.geometry.euclidean.twod.Line.<init>(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;D)V"]
18312 [label="org.apache.commons.math3.geometry.euclidean.twod.Line.<init>(Lorg/apache/commons/math3/geometry/euclidean/twod/Line;)V"]
18315 [label="org.apache.commons.math3.util.MathUtils.normalizeAngle(DD)D"]
18317 [label="org.apache.commons.math3.geometry.euclidean.twod.Line.copySelf()Lorg/apache/commons/math3/geometry/euclidean/twod/Line;"]
18323 [label="org.apache.commons.math3.geometry.euclidean.twod.Line.unlinkReverse()V"]
18325 [label="org.apache.commons.math3.util.FastMath.hypot(DD)D"]
18330 [label="org.apache.commons.math3.geometry.euclidean.twod.Line.revertSelf()V"]
18333 [label="org.apache.commons.math3.geometry.euclidean.twod.Line.getReverse()Lorg/apache/commons/math3/geometry/euclidean/twod/Line;"]
18336 [label="org.apache.commons.math3.geometry.euclidean.twod.Line.toSubSpace(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;"]
18339 [label="org.apache.commons.math3.geometry.euclidean.twod.Line.toSubSpace(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;"]
18341 [label="org.apache.commons.math3.geometry.euclidean.twod.Line.toSpace(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;"]
18344 [label="org.apache.commons.math3.geometry.euclidean.twod.Line.toSpace(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;"]
18350 [label="org.apache.commons.math3.geometry.euclidean.twod.Line.intersection(Lorg/apache/commons/math3/geometry/euclidean/twod/Line;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;"]
18353 [label="org.apache.commons.math3.geometry.euclidean.twod.Line.project(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/Point;"]
18357 [label="org.apache.commons.math3.geometry.euclidean.twod.Line.getTolerance()D"]
18360 [label="org.apache.commons.math3.geometry.euclidean.twod.SubLine.<init>(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Region;)V"]
18362 [label="org.apache.commons.math3.geometry.euclidean.twod.Line.wholeSpace()Lorg/apache/commons/math3/geometry/euclidean/twod/PolygonsSet;"]
18364 [label="org.apache.commons.math3.geometry.euclidean.twod.Line.getOffset(Lorg/apache/commons/math3/geometry/euclidean/twod/Line;)D"]
18369 [label="org.apache.commons.math3.geometry.euclidean.twod.Line.getOffset(Lorg/apache/commons/math3/geometry/Point;)D"]
18373 [label="org.apache.commons.math3.geometry.euclidean.twod.Line.sameOrientationAs(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Z"]
18376 [label="org.apache.commons.math3.geometry.euclidean.twod.Line.getPointAt(Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;D)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;"]
18380 [label="org.apache.commons.math3.geometry.euclidean.twod.Line.contains(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)Z"]
18383 [label="org.apache.commons.math3.geometry.euclidean.twod.Line.distance(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)D"]
18386 [label="org.apache.commons.math3.geometry.euclidean.twod.Line.isParallelTo(Lorg/apache/commons/math3/geometry/euclidean/twod/Line;)Z"]
18389 [label="org.apache.commons.math3.geometry.euclidean.twod.Line.translateToPoint(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)V"]
18393 [label="org.apache.commons.math3.geometry.euclidean.twod.Line.setAngle(D)V"]
18398 [label="org.apache.commons.math3.geometry.euclidean.twod.Line.setOriginOffset(D)V"]
18401 [label="org.apache.commons.math3.geometry.euclidean.twod.Line.getTransform(Ljava/awt/geom/AffineTransform;)Lorg/apache/commons/math3/geometry/partitioning/Transform;"]
18407 [label="java.awt.geom.AffineTransform.getMatrix([D)V"]
18412 [label="org.apache.commons.math3.geometry.euclidean.twod.Line$LineTransform.<init>(DDDDDD)V"]
18457 [label="org.apache.commons.math3.geometry.euclidean.twod.Line$LineTransform.apply(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;"]
18460 [label="org.apache.commons.math3.geometry.euclidean.twod.Line$LineTransform.apply(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/euclidean/twod/Line;"]
18463 [label="org.apache.commons.math3.geometry.euclidean.twod.Line$LineTransform.apply(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;"]
18487 [label="org.apache.commons.math3.geometry.euclidean.twod.NestedLoops.<init>(D)V"]
18495 [label="org.apache.commons.math3.geometry.euclidean.twod.NestedLoops.<init>([Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;D)V"]
18502 [label="org.apache.commons.math3.geometry.partitioning.RegionFactory.getComplement(Lorg/apache/commons/math3/geometry/partitioning/Region;)Lorg/apache/commons/math3/geometry/partitioning/Region;"]
18505 [label="org.apache.commons.math3.geometry.euclidean.twod.NestedLoops.add([Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)V"]
18508 [label="org.apache.commons.math3.geometry.euclidean.twod.NestedLoops.add(Lorg/apache/commons/math3/geometry/euclidean/twod/NestedLoops;)V"]
18513 [label="org.apache.commons.math3.geometry.partitioning.Region.contains(Lorg/apache/commons/math3/geometry/partitioning/Region;)Z"]
18515 [label="java.util.Iterator.remove()V"]
18520 [label="org.apache.commons.math3.geometry.partitioning.Region.isEmpty()Z"]
18522 [label="org.apache.commons.math3.geometry.partitioning.RegionFactory.intersection(Lorg/apache/commons/math3/geometry/partitioning/Region;Lorg/apache/commons/math3/geometry/partitioning/Region;)Lorg/apache/commons/math3/geometry/partitioning/Region;"]
18525 [label="org.apache.commons.math3.geometry.euclidean.twod.NestedLoops.correctOrientation()V"]
18527 [label="org.apache.commons.math3.geometry.euclidean.twod.NestedLoops.setClockWise(Z)V"]
18550 [label="org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(DDDDD)V"]
18557 [label="org.apache.commons.math3.geometry.partitioning.AbstractRegion.<init>([Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;D)V"]
18559 [label="org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.boxBoundary(DDDDD)[Lorg/apache/commons/math3/geometry/euclidean/twod/Line;"]
18564 [label="org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.verticesToTree(D[Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;"]
18566 [label="org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>()V"]
18569 [label="org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V"]
18572 [label="org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(Ljava/util/Collection;)V"]
18575 [label="org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.<init>(DDDD)V"]
18595 [label="org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$Vertex.<init>(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)V"]
18606 [label="org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$Vertex.sharedLineWith(Lorg/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$Vertex;)Lorg/apache/commons/math3/geometry/euclidean/twod/Line;"]
18608 [label="org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$Vertex.getLocation()Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;"]
18610 [label="org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$Edge.<init>(Lorg/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$Vertex;Lorg/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$Vertex;Lorg/apache/commons/math3/geometry/euclidean/twod/Line;)V"]
18612 [label="org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$Vertex.bindWith(Lorg/apache/commons/math3/geometry/euclidean/twod/Line;)V"]
18614 [label="org.apache.commons.math3.geometry.partitioning.BSPTree.<init>()V"]
18616 [label="org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.insertEdges(DLorg/apache/commons/math3/geometry/partitioning/BSPTree;Ljava/util/List;)V"]
18622 [label="org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$Edge.getNode()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;"]
18624 [label="org.apache.commons.math3.geometry.partitioning.BSPTree.insertCut(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Z"]
18626 [label="org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$Edge.getLine()Lorg/apache/commons/math3/geometry/euclidean/twod/Line;"]
18628 [label="org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$Edge.setNode(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V"]
18630 [label="org.apache.commons.math3.geometry.partitioning.BSPTree.setAttribute(Ljava/lang/Object;)V"]
18632 [label="org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$Edge.getStart()Lorg/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$Vertex;"]
18634 [label="org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$Edge.getEnd()Lorg/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$Vertex;"]
18645 [label="org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$Edge.split(Lorg/apache/commons/math3/geometry/euclidean/twod/Line;)Lorg/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$Vertex;"]
18647 [label="org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$Vertex.getOutgoing()Lorg/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$Edge;"]
18649 [label="org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$Vertex.getIncoming()Lorg/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$Edge;"]
18677 [label="org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$Vertex.setIncoming(Lorg/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$Edge;)V"]
18681 [label="org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$Vertex.setOutgoing(Lorg/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$Edge;)V"]
18713 [label="org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.buildNew(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/euclidean/twod/PolygonsSet;"]
18716 [label="org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.computeGeometricalProperties()V"]
18725 [label="org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.<init>(D)V"]
18733 [label="org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.getSegments()Ljava/util/List;"]
18735 [label="org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.naturalFollowerConnections(Ljava/util/List;)I"]
18737 [label="org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.splitEdgeConnections(Ljava/util/List;)I"]
18739 [label="org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.closeVerticesConnections(Ljava/util/List;)I"]
18747 [label="org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.followLoop(Lorg/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$ConnectableSegment;)Ljava/util/List;"]
18749 [label="org.apache.commons.math3.geometry.euclidean.twod.Segment.getStart()Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;"]
18751 [label="java.util.ArrayList.add(ILjava/lang/Object;)V"]
18753 [label="org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.getUnprocessed(Ljava/util/List;)Lorg/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$ConnectableSegment;"]
18755 [label="java.util.ArrayList.size()I"]
18757 [label="org.apache.commons.math3.geometry.euclidean.twod.Segment.getEnd()Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;"]
18761 [label="org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ConnectableSegment.getNext()Lorg/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$ConnectableSegment;"]
18763 [label="org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ConnectableSegment.getNode()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;"]
18765 [label="org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ConnectableSegment.getEndNode()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;"]
18767 [label="org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ConnectableSegment.getPrevious()Lorg/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$ConnectableSegment;"]
18769 [label="org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ConnectableSegment.getStartNode()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;"]
18771 [label="org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ConnectableSegment.setNext(Lorg/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$ConnectableSegment;)V"]
18773 [label="org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ConnectableSegment.setPrevious(Lorg/apache/commons/math3/geometry/euclidean/twod/PolygonsSet$ConnectableSegment;)V"]
18779 [label="org.apache.commons.math3.geometry.euclidean.twod.Vector2D.distance(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)D"]
18783 [label="org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ConnectableSegment.isProcessed()Z"]
18790 [label="org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ConnectableSegment.setProcessed(Z)V"]
18792 [label="org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet.filterSpuriousVertices(Ljava/util/List;)V"]
18809 [label="org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$ConnectableSegment.<init>(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Line;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V"]
18853 [label="org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.visitInternalNode(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V"]
18862 [label="org.apache.commons.math3.geometry.partitioning.BoundaryAttribute.getSplitters()Lorg/apache/commons/math3/geometry/partitioning/NodesSet;"]
18864 [label="org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.addContribution(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Ljava/lang/Iterable;Z)V"]
18877 [label="org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet$SegmentsBuilder.selectClosest(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Ljava/lang/Iterable;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;"]
18902 [label="org.apache.commons.math3.geometry.euclidean.twod.Segment.distance(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)D"]
18905 [label="org.apache.commons.math3.geometry.euclidean.twod.Vector2D.distance(Lorg/apache/commons/math3/geometry/Point;)D"]
18913 [label="org.apache.commons.math3.geometry.euclidean.twod.SubLine.<init>(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;D)V"]
18918 [label="org.apache.commons.math3.geometry.euclidean.twod.SubLine.buildIntervalSet(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;D)Lorg/apache/commons/math3/geometry/euclidean/oned/IntervalsSet;"]
18920 [label="org.apache.commons.math3.geometry.euclidean.twod.SubLine.<init>(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)V"]
18926 [label="org.apache.commons.math3.geometry.euclidean.twod.SubLine.<init>(Lorg/apache/commons/math3/geometry/euclidean/twod/Segment;)V"]
18930 [label="org.apache.commons.math3.geometry.euclidean.twod.SubLine.getSegments()Ljava/util/List;"]
18932 [label="org.apache.commons.math3.geometry.euclidean.twod.SubLine.intersection(Lorg/apache/commons/math3/geometry/euclidean/twod/SubLine;Z)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;"]
18940 [label="org.apache.commons.math3.geometry.euclidean.twod.SubLine.buildNew(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Region;)Lorg/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane;"]
18944 [label="org.apache.commons.math3.geometry.euclidean.twod.SubLine.split(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane;"]
18972 [label="org.apache.commons.math3.geometry.euclidean.twod.Vector2D.<init>([D)V"]
18975 [label="org.apache.commons.math3.geometry.euclidean.twod.Vector2D.<init>(DLorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)V"]
18984 [label="org.apache.commons.math3.geometry.euclidean.twod.Vector2D.<init>(DLorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;DLorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;DLorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)V"]
18992 [label="org.apache.commons.math3.geometry.euclidean.twod.Vector2D.<init>(DLorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;DLorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;DLorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;DLorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)V"]
19006 [label="org.apache.commons.math3.geometry.euclidean.twod.Vector2D.getSpace()Lorg/apache/commons/math3/geometry/Space;"]
19010 [label="org.apache.commons.math3.geometry.euclidean.twod.Vector2D.getNorm1()D"]
19012 [label="org.apache.commons.math3.geometry.euclidean.twod.Vector2D.getNorm()D"]
19016 [label="org.apache.commons.math3.geometry.euclidean.twod.Vector2D.getNormInf()D"]
19018 [label="org.apache.commons.math3.geometry.euclidean.twod.Vector2D.add(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;"]
19021 [label="org.apache.commons.math3.geometry.euclidean.twod.Vector2D.add(DLorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;"]
19027 [label="org.apache.commons.math3.geometry.euclidean.twod.Vector2D.subtract(DLorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;"]
19031 [label="org.apache.commons.math3.geometry.euclidean.twod.Vector2D.normalize()Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;"]
19034 [label="org.apache.commons.math3.geometry.euclidean.twod.Vector2D.scalarMultiply(D)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;"]
19036 [label="org.apache.commons.math3.geometry.euclidean.twod.Vector2D.angle(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)D"]
19040 [label="org.apache.commons.math3.geometry.euclidean.twod.Vector2D.dotProduct(Lorg/apache/commons/math3/geometry/Vector;)D"]
19042 [label="org.apache.commons.math3.geometry.euclidean.twod.Vector2D.negate()Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;"]
19046 [label="org.apache.commons.math3.geometry.euclidean.twod.Vector2D.isNaN()Z"]
19048 [label="org.apache.commons.math3.geometry.euclidean.twod.Vector2D.isInfinite()Z"]
19051 [label="org.apache.commons.math3.geometry.euclidean.twod.Vector2D.distance1(Lorg/apache/commons/math3/geometry/Vector;)D"]
19058 [label="org.apache.commons.math3.geometry.euclidean.twod.Vector2D.distanceInf(Lorg/apache/commons/math3/geometry/Vector;)D"]
19061 [label="org.apache.commons.math3.geometry.euclidean.twod.Vector2D.distanceSq(Lorg/apache/commons/math3/geometry/Vector;)D"]
19072 [label="org.apache.commons.math3.geometry.euclidean.twod.Vector2D.distanceInf(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)D"]
19077 [label="org.apache.commons.math3.geometry.euclidean.twod.Vector2D.distanceSq(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)D"]
19084 [label="org.apache.commons.math3.geometry.euclidean.twod.Vector2D.hashCode()I"]
19086 [label="org.apache.commons.math3.geometry.euclidean.twod.Vector2D.toString()Ljava/lang/String;"]
19088 [label="org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormat.getInstance()Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2DFormat;"]
19090 [label="org.apache.commons.math3.geometry.euclidean.twod.Vector2D.toString(Ljava/text/NumberFormat;)Ljava/lang/String;"]
19096 [label="org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormat.<init>(Ljava/text/NumberFormat;)V"]
19102 [label="org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormat.<init>()V"]
19106 [label="org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormat.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"]
19111 [label="org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormat.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/text/NumberFormat;)V"]
19118 [label="org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormat.getInstance(Ljava/util/Locale;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2DFormat;"]
19122 [label="org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormat.format(Lorg/apache/commons/math3/geometry/Vector;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;"]
19127 [label="org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormat.parse(Ljava/lang/String;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;"]
19130 [label="org.apache.commons.math3.geometry.euclidean.twod.Vector2DFormat.parse(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;"]
19230 [label="java.util.TreeSet.<init>(Ljava/util/Comparator;)V"]
19235 [label="org.apache.commons.math3.geometry.partitioning.AbstractRegion$1.<init>()V"]
19238 [label="org.apache.commons.math3.geometry.partitioning.AbstractRegion$1.compare(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)I"]
19242 [label="org.apache.commons.math3.geometry.partitioning.SubHyperplane.getSize()D"]
19244 [label="java.util.TreeSet.addAll(Ljava/util/Collection;)Z"]
19246 [label="org.apache.commons.math3.geometry.partitioning.AbstractRegion.insertCuts(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Ljava/util/Collection;)V"]
19251 [label="org.apache.commons.math3.geometry.partitioning.AbstractRegion$2.<init>()V"]
19262 [label="org.apache.commons.math3.geometry.partitioning.AbstractRegion$2.visitLeafNode(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V"]
19272 [label="org.apache.commons.math3.geometry.partitioning.Hyperplane.wholeSpace()Lorg/apache/commons/math3/geometry/partitioning/Region;"]
19274 [label="org.apache.commons.math3.geometry.partitioning.AbstractRegion.buildNew(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/AbstractRegion;"]
19290 [label="java.util.Collection.iterator()Ljava/util/Iterator;"]
19292 [label="org.apache.commons.math3.geometry.partitioning.Hyperplane.copySelf()Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;"]
19300 [label="org.apache.commons.math3.geometry.partitioning.SubHyperplane$SplitSubHyperplane.getSide()Lorg/apache/commons/math3/geometry/partitioning/Side;"]
19304 [label="org.apache.commons.math3.geometry.partitioning.AbstractRegion.copySelf()Lorg/apache/commons/math3/geometry/partitioning/AbstractRegion;"]
19307 [label="org.apache.commons.math3.geometry.partitioning.BSPTree.copySelf()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;"]
19309 [label="org.apache.commons.math3.geometry.partitioning.AbstractRegion.isEmpty()Z"]
19311 [label="org.apache.commons.math3.geometry.partitioning.AbstractRegion.isEmpty(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z"]
19315 [label="org.apache.commons.math3.geometry.partitioning.AbstractRegion.isFull()Z"]
19317 [label="org.apache.commons.math3.geometry.partitioning.AbstractRegion.isFull(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z"]
19321 [label="org.apache.commons.math3.geometry.partitioning.AbstractRegion.contains(Lorg/apache/commons/math3/geometry/partitioning/Region;)Z"]
19324 [label="org.apache.commons.math3.geometry.partitioning.RegionFactory.difference(Lorg/apache/commons/math3/geometry/partitioning/Region;Lorg/apache/commons/math3/geometry/partitioning/Region;)Lorg/apache/commons/math3/geometry/partitioning/Region;"]
19329 [label="org.apache.commons.math3.geometry.partitioning.AbstractRegion.projectToBoundary(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/partitioning/BoundaryProjection;"]
19341 [label="org.apache.commons.math3.geometry.partitioning.BoundaryProjector.<init>(Lorg/apache/commons/math3/geometry/Point;)V"]
19343 [label="org.apache.commons.math3.geometry.partitioning.BoundaryProjector.getProjection()Lorg/apache/commons/math3/geometry/partitioning/BoundaryProjection;"]
19345 [label="org.apache.commons.math3.geometry.partitioning.AbstractRegion.checkPoint(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/partitioning/Region$Location;"]
19353 [label="org.apache.commons.math3.geometry.partitioning.AbstractRegion.checkPoint(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/partitioning/Region$Location;"]
19355 [label="org.apache.commons.math3.geometry.partitioning.AbstractRegion.checkPoint(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/partitioning/Region$Location;"]
19362 [label="org.apache.commons.math3.geometry.partitioning.BSPTree.getCell(Lorg/apache/commons/math3/geometry/Point;D)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;"]
19370 [label="org.apache.commons.math3.geometry.partitioning.BoundaryBuilder.<init>()V"]
19374 [label="org.apache.commons.math3.geometry.partitioning.AbstractRegion.getBoundarySize()D"]
19382 [label="org.apache.commons.math3.geometry.partitioning.BoundarySizeVisitor.<init>()V"]
19384 [label="org.apache.commons.math3.geometry.partitioning.BoundarySizeVisitor.getSize()D"]
19388 [label="org.apache.commons.math3.geometry.partitioning.AbstractRegion.computeGeometricalProperties()V"]
19394 [label="org.apache.commons.math3.geometry.partitioning.AbstractRegion.setBarycenter(Lorg/apache/commons/math3/geometry/Vector;)V"]
19400 [label="org.apache.commons.math3.geometry.partitioning.AbstractRegion.side(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/Side;"]
19409 [label="org.apache.commons.math3.geometry.partitioning.InsideFinder.<init>(Lorg/apache/commons/math3/geometry/partitioning/Region;)V"]
19411 [label="org.apache.commons.math3.geometry.partitioning.InsideFinder.recurseSides(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)V"]
19413 [label="org.apache.commons.math3.geometry.partitioning.Hyperplane.wholeHyperplane()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;"]
19415 [label="org.apache.commons.math3.geometry.partitioning.InsideFinder.plusFound()Z"]
19417 [label="org.apache.commons.math3.geometry.partitioning.InsideFinder.minusFound()Z"]
19419 [label="org.apache.commons.math3.geometry.partitioning.AbstractRegion.intersection(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;"]
19422 [label="org.apache.commons.math3.geometry.partitioning.AbstractRegion.recurseIntersection(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;"]
19427 [label="org.apache.commons.math3.geometry.partitioning.SubHyperplane.copySelf()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;"]
19429 [label="org.apache.commons.math3.geometry.partitioning.SubHyperplane.reunite(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;"]
19442 [label="org.apache.commons.math3.geometry.partitioning.AbstractRegion.recurseTransform(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/Transform;Ljava/util/Map;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;"]
19447 [label="org.apache.commons.math3.geometry.partitioning.NodesSet.add(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V"]
19459 [label="org.apache.commons.math3.geometry.partitioning.BoundaryAttribute.<init>(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/NodesSet;)V"]
19465 [label="org.apache.commons.math3.geometry.partitioning.NodesSet.<init>()V"]
19485 [label="org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.buildNew(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Region;)Lorg/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane;"]
19489 [label="org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.copySelf()Lorg/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane;"]
19494 [label="org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.getSize()D"]
19496 [label="org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.reunite(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)Lorg/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane;"]
19501 [label="org.apache.commons.math3.geometry.partitioning.Transform.apply(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;"]
19503 [label="org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.recurseTransform(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Transform;Ljava/util/Map;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;"]
19505 [label="org.apache.commons.math3.geometry.partitioning.Region.buildNew(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/Region;"]
19512 [label="org.apache.commons.math3.geometry.partitioning.Transform.apply(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;"]
19514 [label="org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.side(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/Side;"]
19517 [label="org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.split(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane;"]
19521 [label="org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane.isEmpty()Z"]
19533 [label="org.apache.commons.math3.geometry.partitioning.BoundaryAttribute.<init>(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)V"]
19556 [label="org.apache.commons.math3.geometry.partitioning.BoundaryBuilder.visitInternalNode(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V"]
19565 [label="org.apache.commons.math3.geometry.partitioning.Characterization.<init>(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)V"]
19567 [label="org.apache.commons.math3.geometry.partitioning.Characterization.touchOutside()Z"]
19569 [label="org.apache.commons.math3.geometry.partitioning.Characterization.outsideTouching()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;"]
19571 [label="org.apache.commons.math3.geometry.partitioning.Characterization.touchInside()Z"]
19573 [label="org.apache.commons.math3.geometry.partitioning.Characterization.insideTouching()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;"]
19575 [label="org.apache.commons.math3.geometry.partitioning.NodesSet.addAll(Ljava/lang/Iterable;)V"]
19577 [label="org.apache.commons.math3.geometry.partitioning.Characterization.getInsideSplitters()Lorg/apache/commons/math3/geometry/partitioning/NodesSet;"]
19579 [label="org.apache.commons.math3.geometry.partitioning.Characterization.getOutsideSplitters()Lorg/apache/commons/math3/geometry/partitioning/NodesSet;"]
19603 [label="org.apache.commons.math3.geometry.partitioning.BoundaryProjection.getProjected()Lorg/apache/commons/math3/geometry/Point;"]
19605 [label="org.apache.commons.math3.geometry.partitioning.BoundaryProjection.getOffset()D"]
19625 [label="org.apache.commons.math3.geometry.partitioning.BoundaryProjector.visitOrder(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTreeVisitor$Order;"]
19628 [label="org.apache.commons.math3.geometry.partitioning.BoundaryProjector.visitInternalNode(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V"]
19631 [label="org.apache.commons.math3.geometry.partitioning.Hyperplane.project(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/Point;"]
19639 [label="org.apache.commons.math3.geometry.partitioning.BoundaryProjector.boundaryRegions(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Ljava/util/List;"]
19641 [label="org.apache.commons.math3.geometry.partitioning.BoundaryProjector.belongsToPart(Lorg/apache/commons/math3/geometry/Point;Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Region;)Z"]
19643 [label="org.apache.commons.math3.geometry.partitioning.BoundaryProjector.singularProjection(Lorg/apache/commons/math3/geometry/Point;Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Region;)Lorg/apache/commons/math3/geometry/Point;"]
19654 [label="org.apache.commons.math3.geometry.partitioning.BoundaryProjector.addRegion(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Ljava/util/List;)V"]
19666 [label="org.apache.commons.math3.geometry.partitioning.Embedding.toSubSpace(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/Point;"]
19672 [label="org.apache.commons.math3.geometry.partitioning.Region.projectToBoundary(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/partitioning/BoundaryProjection;"]
19675 [label="org.apache.commons.math3.geometry.partitioning.Embedding.toSpace(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/Point;"]
19688 [label="org.apache.commons.math3.geometry.partitioning.BoundarySizeVisitor.visitInternalNode(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V"]
19724 [label="org.apache.commons.math3.geometry.partitioning.BSPTree.fitToCell(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;"]
19726 [label="org.apache.commons.math3.geometry.partitioning.SubHyperplane.isEmpty()Z"]
19738 [label="org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor.visitLeafNode(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V"]
19740 [label="org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor.visitOrder(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTreeVisitor$Order;"]
19742 [label="org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor.visitInternalNode(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V"]
19752 [label="org.apache.commons.math3.geometry.partitioning.BSPTree.getCell(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;"]
19758 [label="org.apache.commons.math3.geometry.partitioning.BSPTree.getCloseCuts(Lorg/apache/commons/math3/geometry/Point;D)Ljava/util/List;"]
19768 [label="org.apache.commons.math3.geometry.partitioning.BSPTree.recurseCloseCuts(Lorg/apache/commons/math3/geometry/Point;DLjava/util/List;)V"]
19774 [label="org.apache.commons.math3.geometry.partitioning.BSPTree.condense()V"]
19776 [label="org.apache.commons.math3.geometry.partitioning.BSPTree.merge(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/BSPTree$LeafMerger;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;"]
19786 [label="org.apache.commons.math3.geometry.partitioning.BSPTree.merge(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/BSPTree$LeafMerger;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Z)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;"]
19793 [label="org.apache.commons.math3.geometry.partitioning.BSPTree$LeafMerger.merge(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;ZZ)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;"]
19808 [label="org.apache.commons.math3.geometry.partitioning.BSPTree$VanishingCutHandler.fixNode(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;"]
19816 [label="org.apache.commons.math3.geometry.partitioning.Hyperplane.sameOrientationAs(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Z"]
19818 [label="org.apache.commons.math3.geometry.partitioning.BSPTree.insertInTree(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Z)V"]
19822 [label="org.apache.commons.math3.geometry.partitioning.BSPTree.insertInTree(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;ZLorg/apache/commons/math3/geometry/partitioning/BSPTree$VanishingCutHandler;)V"]
19827 [label="org.apache.commons.math3.geometry.partitioning.BSPTree$1.<init>()V"]
19832 [label="org.apache.commons.math3.geometry.partitioning.BSPTree$1.fixNode(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;"]
19839 [label="org.apache.commons.math3.geometry.partitioning.BSPTree.chopOffMinus(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/BSPTree$VanishingCutHandler;)V"]
19841 [label="org.apache.commons.math3.geometry.partitioning.BSPTree.chopOffPlus(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/BSPTree$VanishingCutHandler;)V"]
19844 [label="org.apache.commons.math3.geometry.partitioning.BSPTree.pruneAroundConvexCell(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;"]
19860 [label="org.apache.commons.math3.geometry.partitioning.BSPTreeVisitor$Order.<init>()V"]
19899 [label="org.apache.commons.math3.geometry.partitioning.Characterization.characterize(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Ljava/util/List;)V"]
19905 [label="org.apache.commons.math3.geometry.partitioning.Characterization.addInsideTouching(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Ljava/util/List;)V"]
19907 [label="org.apache.commons.math3.geometry.partitioning.Characterization.addOutsideTouching(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Ljava/util/List;)V"]
19982 [label="org.apache.commons.math3.geometry.partitioning.NodesSet.iterator()Ljava/util/Iterator;"]
19992 [label="org.apache.commons.math3.geometry.partitioning.Region$Location.<init>()V"]
20005 [label="org.apache.commons.math3.geometry.partitioning.Region.copySelf()Lorg/apache/commons/math3/geometry/partitioning/Region;"]
20041 [label="org.apache.commons.math3.geometry.partitioning.RegionFactory$NodesCleaner.<init>()V"]
20056 [label="org.apache.commons.math3.geometry.partitioning.RegionFactory$UnionMerger.<init>()V"]
20064 [label="org.apache.commons.math3.geometry.partitioning.RegionFactory$IntersectionMerger.<init>()V"]
20066 [label="org.apache.commons.math3.geometry.partitioning.RegionFactory.xor(Lorg/apache/commons/math3/geometry/partitioning/Region;Lorg/apache/commons/math3/geometry/partitioning/Region;)Lorg/apache/commons/math3/geometry/partitioning/Region;"]
20073 [label="org.apache.commons.math3.geometry.partitioning.RegionFactory$XorMerger.<init>()V"]
20081 [label="org.apache.commons.math3.geometry.partitioning.RegionFactory$DifferenceMerger.<init>(Lorg/apache/commons/math3/geometry/partitioning/Region;Lorg/apache/commons/math3/geometry/partitioning/Region;)V"]
20086 [label="org.apache.commons.math3.geometry.partitioning.RegionFactory.recurseComplement(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;"]
20090 [label="org.apache.commons.math3.geometry.partitioning.RegionFactory.recurseComplement(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Ljava/util/Map;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;"]
20096 [label="org.apache.commons.math3.geometry.partitioning.RegionFactory$UnionMerger.merge(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;ZZ)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;"]
20106 [label="org.apache.commons.math3.geometry.partitioning.RegionFactory$VanishingToLeaf.<init>(Z)V"]
20109 [label="org.apache.commons.math3.geometry.partitioning.RegionFactory$IntersectionMerger.merge(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;ZZ)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;"]
20117 [label="org.apache.commons.math3.geometry.partitioning.RegionFactory$XorMerger.merge(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;ZZ)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;"]
20135 [label="org.apache.commons.math3.geometry.partitioning.RegionFactory$DifferenceMerger.merge(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;ZZ)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;"]
20142 [label="org.apache.commons.math3.geometry.partitioning.RegionFactory$DifferenceMerger.fixNode(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;"]
20150 [label="org.apache.commons.math3.geometry.partitioning.RegionFactory$NodesCleaner.visitInternalNode(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V"]
20162 [label="org.apache.commons.math3.geometry.partitioning.RegionFactory$VanishingToLeaf.fixNode(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;"]
20169 [label="org.apache.commons.math3.geometry.partitioning.Side.<init>()V"]
20237 [label="org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.<init>()V"]
20240 [label="org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.insert(Ljava/lang/Comparable;)V"]
20246 [label="org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.<init>(Ljava/lang/Comparable;Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;)V"]
20248 [label="org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.insert(Ljava/lang/Comparable;)Z"]
20250 [label="org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.delete(Ljava/lang/Comparable;)Z"]
20255 [label="org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.delete()V"]
20257 [label="java.lang.Comparable.compareTo(Ljava/lang/Object;)I"]
20259 [label="org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotSmaller(Ljava/lang/Comparable;)Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;"]
20261 [label="org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.getNext()Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;"]
20265 [label="org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.size()I"]
20267 [label="org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.size()I"]
20269 [label="org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getSmallest()Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;"]
20271 [label="org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.getSmallest()Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;"]
20273 [label="org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getLargest()Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;"]
20275 [label="org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.getLargest()Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;"]
20283 [label="org.apache.commons.math3.geometry.partitioning.utilities.AVLTree.getNotLarger(Ljava/lang/Comparable;)Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;"]
20293 [label="org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Skew.<init>()V"]
20323 [label="org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.getPrevious()Lorg/apache/commons/math3/geometry/partitioning/utilities/AVLTree$Node;"]
20328 [label="org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.rebalanceLeftGrown()Z"]
20330 [label="org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.rebalanceRightGrown()Z"]
20333 [label="org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.rebalanceLeftShrunk()Z"]
20335 [label="org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.rebalanceRightShrunk()Z"]
20339 [label="org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.rotateCW()V"]
20341 [label="org.apache.commons.math3.geometry.partitioning.utilities.AVLTree$Node.rotateCCW()V"]
20382 [label="org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.<init>([D)V"]
20390 [label="org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.mantissa(J)J"]
20392 [label="org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.exponent(J)I"]
20394 [label="org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.computeMSB(J)I"]
20396 [label="org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.computeLSB(J)I"]
20398 [label="org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.encode(I)V"]
20404 [label="org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.getBit(II)I"]
20406 [label="org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.compareTo(Lorg/apache/commons/math3/geometry/partitioning/utilities/OrderedTuple;)I"]
20409 [label="org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.equals(Ljava/lang/Object;)Z"]
20413 [label="org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.hashCode()I"]
20415 [label="org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.getComponents()[D"]
20417 [label="org.apache.commons.math3.geometry.partitioning.utilities.OrderedTuple.sign(J)J"]
20470 [label="org.apache.commons.math3.geometry.spherical.oned.Arc.<init>(DDD)V"]
20479 [label="org.apache.commons.math3.geometry.spherical.oned.Arc.getInf()D"]
20481 [label="org.apache.commons.math3.geometry.spherical.oned.Arc.getSup()D"]
20483 [label="org.apache.commons.math3.geometry.spherical.oned.Arc.getSize()D"]
20489 [label="org.apache.commons.math3.geometry.spherical.oned.Arc.checkPoint(D)Lorg/apache/commons/math3/geometry/partitioning/Region$Location;"]
20501 [label="org.apache.commons.math3.geometry.spherical.oned.ArcsSet.<init>(D)V"]
20504 [label="org.apache.commons.math3.geometry.spherical.oned.ArcsSet.<init>(DDD)V"]
20509 [label="org.apache.commons.math3.geometry.spherical.oned.ArcsSet.buildTree(DDD)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;"]
20511 [label="org.apache.commons.math3.geometry.spherical.oned.ArcsSet.<init>(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;D)V"]
20521 [label="org.apache.commons.math3.geometry.spherical.oned.ArcsSet.check2PiConsistency()V"]
20523 [label="org.apache.commons.math3.geometry.spherical.oned.ArcsSet.<init>(Ljava/util/Collection;D)V"]
20537 [label="org.apache.commons.math3.geometry.spherical.oned.LimitAngle.wholeHyperplane()Lorg/apache/commons/math3/geometry/spherical/oned/SubLimitAngle;"]
20542 [label="org.apache.commons.math3.geometry.spherical.oned.LimitAngle.<init>(Lorg/apache/commons/math3/geometry/spherical/oned/S1Point;ZD)V"]
20547 [label="org.apache.commons.math3.geometry.spherical.oned.S1Point.<init>(D)V"]
20550 [label="org.apache.commons.math3.geometry.spherical.oned.ArcsSet.getFirstLeaf(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;"]
20552 [label="org.apache.commons.math3.geometry.spherical.oned.ArcsSet.getLastLeaf(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;"]
20554 [label="org.apache.commons.math3.geometry.spherical.oned.ArcsSet$InconsistentStateAt2PiWrapping.<init>()V"]
20558 [label="org.apache.commons.math3.geometry.spherical.oned.ArcsSet.previousInternalNode(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;"]
20560 [label="org.apache.commons.math3.geometry.spherical.oned.ArcsSet.leafBefore(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;"]
20564 [label="org.apache.commons.math3.geometry.spherical.oned.ArcsSet.nextInternalNode(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;"]
20566 [label="org.apache.commons.math3.geometry.spherical.oned.ArcsSet.leafAfter(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;"]
20568 [label="org.apache.commons.math3.geometry.spherical.oned.ArcsSet.getFirstArcStart()Lorg/apache/commons/math3/geometry/partitioning/BSPTree;"]
20570 [label="org.apache.commons.math3.geometry.spherical.oned.ArcsSet.isArcStart(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z"]
20574 [label="org.apache.commons.math3.geometry.spherical.oned.ArcsSet.isArcEnd(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z"]
20579 [label="org.apache.commons.math3.geometry.spherical.oned.ArcsSet.childAfter(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;"]
20581 [label="org.apache.commons.math3.geometry.spherical.oned.ArcsSet.isAfterParent(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z"]
20585 [label="org.apache.commons.math3.geometry.spherical.oned.ArcsSet.childBefore(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;"]
20587 [label="org.apache.commons.math3.geometry.spherical.oned.ArcsSet.isBeforeParent(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z"]
20599 [label="org.apache.commons.math3.geometry.spherical.oned.ArcsSet.isDirect(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Z"]
20605 [label="org.apache.commons.math3.geometry.spherical.oned.LimitAngle.isDirect()Z"]
20607 [label="org.apache.commons.math3.geometry.spherical.oned.ArcsSet.getAngle(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)D"]
20610 [label="org.apache.commons.math3.geometry.spherical.oned.S1Point.getAlpha()D"]
20612 [label="org.apache.commons.math3.geometry.spherical.oned.LimitAngle.getLocation()Lorg/apache/commons/math3/geometry/spherical/oned/S1Point;"]
20614 [label="org.apache.commons.math3.geometry.spherical.oned.ArcsSet.buildNew(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/spherical/oned/ArcsSet;"]
20620 [label="org.apache.commons.math3.geometry.spherical.oned.ArcsSet.computeGeometricalProperties()V"]
20624 [label="org.apache.commons.math3.geometry.spherical.oned.ArcsSet.projectToBoundary(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/partitioning/BoundaryProjection;"]
20633 [label="org.apache.commons.math3.geometry.spherical.oned.ArcsSet.asList()Ljava/util/List;"]
20644 [label="org.apache.commons.math3.geometry.spherical.oned.ArcsSet.iterator()Ljava/util/Iterator;"]
20649 [label="org.apache.commons.math3.geometry.spherical.oned.ArcsSet$SubArcsIterator.<init>()V"]
20663 [label="org.apache.commons.math3.geometry.spherical.oned.ArcsSet$SubArcsIterator.selectPending()V"]
20670 [label="org.apache.commons.math3.geometry.spherical.oned.ArcsSet$SubArcsIterator.next()[D"]
20672 [label="org.apache.commons.math3.geometry.spherical.oned.ArcsSet$SubArcsIterator.remove()V"]
20674 [label="org.apache.commons.math3.geometry.spherical.oned.ArcsSet.side(Lorg/apache/commons/math3/geometry/spherical/oned/Arc;)Lorg/apache/commons/math3/geometry/partitioning/Side;"]
20677 [label="org.apache.commons.math3.geometry.spherical.oned.ArcsSet$Split.getSide()Lorg/apache/commons/math3/geometry/partitioning/Side;"]
20679 [label="org.apache.commons.math3.geometry.spherical.oned.ArcsSet.split(Lorg/apache/commons/math3/geometry/spherical/oned/Arc;)Lorg/apache/commons/math3/geometry/spherical/oned/ArcsSet$Split;"]
20688 [label="org.apache.commons.math3.geometry.spherical.oned.ArcsSet$Split.<init>(Lorg/apache/commons/math3/geometry/spherical/oned/ArcsSet;Lorg/apache/commons/math3/geometry/spherical/oned/ArcsSet;)V"]
20690 [label="org.apache.commons.math3.geometry.spherical.oned.ArcsSet.createSplitPart(Ljava/util/List;)Lorg/apache/commons/math3/geometry/spherical/oned/ArcsSet;"]
20692 [label="org.apache.commons.math3.geometry.spherical.oned.ArcsSet.addArcLimit(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;DZ)V"]
20710 [label="org.apache.commons.math3.geometry.spherical.oned.ArcsSet$Split.getPlus()Lorg/apache/commons/math3/geometry/spherical/oned/ArcsSet;"]
20712 [label="org.apache.commons.math3.geometry.spherical.oned.ArcsSet$Split.getMinus()Lorg/apache/commons/math3/geometry/spherical/oned/ArcsSet;"]
20739 [label="org.apache.commons.math3.geometry.spherical.oned.LimitAngle.getOffset(Lorg/apache/commons/math3/geometry/Point;)D"]
20743 [label="org.apache.commons.math3.geometry.spherical.oned.LimitAngle.getReverse()Lorg/apache/commons/math3/geometry/spherical/oned/LimitAngle;"]
20749 [label="org.apache.commons.math3.geometry.spherical.oned.SubLimitAngle.<init>(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Region;)V"]
20751 [label="org.apache.commons.math3.geometry.spherical.oned.LimitAngle.wholeSpace()Lorg/apache/commons/math3/geometry/spherical/oned/ArcsSet;"]
20775 [label="org.apache.commons.math3.geometry.spherical.oned.S1Point.<init>(DLorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)V"]
20785 [label="org.apache.commons.math3.geometry.spherical.oned.S1Point.getSpace()Lorg/apache/commons/math3/geometry/Space;"]
20787 [label="org.apache.commons.math3.geometry.spherical.oned.Sphere1D.getInstance()Lorg/apache/commons/math3/geometry/spherical/oned/Sphere1D;"]
20789 [label="org.apache.commons.math3.geometry.spherical.oned.S1Point.isNaN()Z"]
20791 [label="org.apache.commons.math3.geometry.spherical.oned.S1Point.distance(Lorg/apache/commons/math3/geometry/Point;)D"]
20794 [label="org.apache.commons.math3.geometry.spherical.oned.S1Point.distance(Lorg/apache/commons/math3/geometry/spherical/oned/S1Point;Lorg/apache/commons/math3/geometry/spherical/oned/S1Point;)D"]
20800 [label="org.apache.commons.math3.geometry.spherical.oned.S1Point.equals(Ljava/lang/Object;)Z"]
20804 [label="org.apache.commons.math3.geometry.spherical.oned.S1Point.hashCode()I"]
20809 [label="org.apache.commons.math3.geometry.spherical.oned.Sphere1D.<init>()V"]
20816 [label="org.apache.commons.math3.geometry.spherical.oned.Sphere1D.getSubSpace()Lorg/apache/commons/math3/geometry/Space;"]
20821 [label="org.apache.commons.math3.geometry.spherical.oned.Sphere1D$NoSubSpaceException.<init>()V"]
20826 [label="org.apache.commons.math3.geometry.spherical.oned.Sphere1D$LazyHolder.<init>()V"]
20849 [label="org.apache.commons.math3.geometry.spherical.oned.SubLimitAngle.buildNew(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Region;)Lorg/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane;"]
20853 [label="org.apache.commons.math3.geometry.spherical.oned.SubLimitAngle.split(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane;"]
20890 [label="org.apache.commons.math3.geometry.spherical.twod.Circle.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;D)V"]
20894 [label="org.apache.commons.math3.geometry.spherical.twod.Circle.reset(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V"]
20897 [label="org.apache.commons.math3.geometry.spherical.twod.Circle.<init>(Lorg/apache/commons/math3/geometry/spherical/twod/S2Point;Lorg/apache/commons/math3/geometry/spherical/twod/S2Point;D)V"]
20905 [label="org.apache.commons.math3.geometry.spherical.twod.S2Point.getVector()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;"]
20907 [label="org.apache.commons.math3.geometry.spherical.twod.Circle.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;D)V"]
20916 [label="org.apache.commons.math3.geometry.spherical.twod.Circle.<init>(Lorg/apache/commons/math3/geometry/spherical/twod/Circle;)V"]
20922 [label="org.apache.commons.math3.geometry.spherical.twod.Circle.copySelf()Lorg/apache/commons/math3/geometry/spherical/twod/Circle;"]
20927 [label="org.apache.commons.math3.geometry.spherical.twod.Circle.revertSelf()V"]
20929 [label="org.apache.commons.math3.geometry.spherical.twod.Circle.getReverse()Lorg/apache/commons/math3/geometry/spherical/twod/Circle;"]
20931 [label="org.apache.commons.math3.geometry.spherical.twod.Circle.project(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/Point;"]
20937 [label="org.apache.commons.math3.geometry.spherical.twod.Circle.toSpace(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/spherical/twod/S2Point;"]
20939 [label="org.apache.commons.math3.geometry.spherical.twod.Circle.toSubSpace(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/spherical/oned/S1Point;"]
20941 [label="org.apache.commons.math3.geometry.spherical.twod.Circle.getTolerance()D"]
20945 [label="org.apache.commons.math3.geometry.spherical.twod.Circle.getPhase(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)D"]
20951 [label="org.apache.commons.math3.geometry.spherical.twod.S2Point.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V"]
20953 [label="org.apache.commons.math3.geometry.spherical.twod.Circle.getPointAt(D)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;"]
20961 [label="org.apache.commons.math3.geometry.spherical.twod.Circle.getPole()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;"]
20963 [label="org.apache.commons.math3.geometry.spherical.twod.Circle.getInsideArc(Lorg/apache/commons/math3/geometry/spherical/twod/Circle;)Lorg/apache/commons/math3/geometry/spherical/oned/Arc;"]
20966 [label="org.apache.commons.math3.geometry.spherical.twod.Circle.wholeHyperplane()Lorg/apache/commons/math3/geometry/spherical/twod/SubCircle;"]
20971 [label="org.apache.commons.math3.geometry.spherical.twod.SubCircle.<init>(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Region;)V"]
20973 [label="org.apache.commons.math3.geometry.spherical.twod.Circle.wholeSpace()Lorg/apache/commons/math3/geometry/spherical/twod/SphericalPolygonsSet;"]
20978 [label="org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSet.<init>(D)V"]
20980 [label="org.apache.commons.math3.geometry.spherical.twod.Circle.getOffset(Lorg/apache/commons/math3/geometry/Point;)D"]
20983 [label="org.apache.commons.math3.geometry.spherical.twod.Circle.getOffset(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)D"]
20987 [label="org.apache.commons.math3.geometry.spherical.twod.Circle.sameOrientationAs(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Z"]
20991 [label="org.apache.commons.math3.geometry.spherical.twod.Circle.getTransform(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)Lorg/apache/commons/math3/geometry/partitioning/Transform;"]
21000 [label="org.apache.commons.math3.geometry.spherical.twod.Circle$CircleTransform.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Rotation;)V"]
21008 [label="org.apache.commons.math3.geometry.spherical.twod.Circle$CircleTransform.apply(Lorg/apache/commons/math3/geometry/Point;)Lorg/apache/commons/math3/geometry/spherical/twod/S2Point;"]
21011 [label="org.apache.commons.math3.geometry.spherical.twod.Circle$CircleTransform.apply(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/spherical/twod/Circle;"]
21032 [label="org.apache.commons.math3.geometry.spherical.twod.Edge.<init>(Lorg/apache/commons/math3/geometry/spherical/twod/Vertex;Lorg/apache/commons/math3/geometry/spherical/twod/Vertex;DLorg/apache/commons/math3/geometry/spherical/twod/Circle;)V"]
21042 [label="org.apache.commons.math3.geometry.spherical.twod.Vertex.setOutgoing(Lorg/apache/commons/math3/geometry/spherical/twod/Edge;)V"]
21044 [label="org.apache.commons.math3.geometry.spherical.twod.Vertex.setIncoming(Lorg/apache/commons/math3/geometry/spherical/twod/Edge;)V"]
21046 [label="org.apache.commons.math3.geometry.spherical.twod.Edge.getStart()Lorg/apache/commons/math3/geometry/spherical/twod/Vertex;"]
21048 [label="org.apache.commons.math3.geometry.spherical.twod.Edge.getEnd()Lorg/apache/commons/math3/geometry/spherical/twod/Vertex;"]
21050 [label="org.apache.commons.math3.geometry.spherical.twod.Edge.getLength()D"]
21052 [label="org.apache.commons.math3.geometry.spherical.twod.Edge.getCircle()Lorg/apache/commons/math3/geometry/spherical/twod/Circle;"]
21054 [label="org.apache.commons.math3.geometry.spherical.twod.Edge.getPointAt(D)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;"]
21057 [label="org.apache.commons.math3.geometry.spherical.twod.Vertex.getLocation()Lorg/apache/commons/math3/geometry/spherical/twod/S2Point;"]
21059 [label="org.apache.commons.math3.geometry.spherical.twod.Edge.setNextEdge(Lorg/apache/commons/math3/geometry/spherical/twod/Edge;)V"]
21065 [label="org.apache.commons.math3.geometry.spherical.twod.Vertex.bindWith(Lorg/apache/commons/math3/geometry/spherical/twod/Circle;)V"]
21068 [label="org.apache.commons.math3.geometry.spherical.twod.Edge.split(Lorg/apache/commons/math3/geometry/spherical/twod/Circle;Ljava/util/List;Ljava/util/List;)V"]
21078 [label="org.apache.commons.math3.geometry.spherical.twod.Edge.addSubEdge(Lorg/apache/commons/math3/geometry/spherical/twod/Vertex;Lorg/apache/commons/math3/geometry/spherical/twod/Vertex;DLjava/util/List;Lorg/apache/commons/math3/geometry/spherical/twod/Circle;)Lorg/apache/commons/math3/geometry/spherical/twod/Vertex;"]
21080 [label="org.apache.commons.math3.geometry.spherical.twod.Vertex.<init>(Lorg/apache/commons/math3/geometry/spherical/twod/S2Point;)V"]
21111 [label="org.apache.commons.math3.geometry.spherical.twod.EdgesBuilder.<init>(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;D)V"]
21122 [label="java.util.IdentityHashMap.<init>()V"]
21133 [label="org.apache.commons.math3.geometry.spherical.twod.EdgesBuilder.visitInternalNode(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V"]
21142 [label="org.apache.commons.math3.geometry.spherical.twod.EdgesBuilder.addContribution(Lorg/apache/commons/math3/geometry/spherical/twod/SubCircle;ZLorg/apache/commons/math3/geometry/partitioning/BSPTree;)V"]
21153 [label="org.apache.commons.math3.geometry.spherical.twod.EdgesBuilder.getFollowingEdge(Lorg/apache/commons/math3/geometry/spherical/twod/Edge;)Lorg/apache/commons/math3/geometry/spherical/twod/Edge;"]
21161 [label="org.apache.commons.math3.geometry.spherical.twod.Vertex.getIncoming()Lorg/apache/commons/math3/geometry/spherical/twod/Edge;"]
21163 [label="org.apache.commons.math3.geometry.spherical.twod.EdgesBuilder.getEdges()Ljava/util/List;"]
21177 [label="org.apache.commons.math3.geometry.spherical.twod.PropertiesComputer.<init>(D)V"]
21193 [label="org.apache.commons.math3.geometry.spherical.twod.PropertiesComputer.visitLeafNode(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V"]
21196 [label="org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSet.<init>(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;D)V"]
21201 [label="org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSet.getBoundaryLoops()Ljava/util/List;"]
21203 [label="org.apache.commons.math3.geometry.spherical.twod.PropertiesComputer.convexCellArea(Lorg/apache/commons/math3/geometry/spherical/twod/Vertex;)D"]
21205 [label="org.apache.commons.math3.geometry.spherical.twod.PropertiesComputer.convexCellBarycenter(Lorg/apache/commons/math3/geometry/spherical/twod/Vertex;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;"]
21210 [label="org.apache.commons.math3.geometry.spherical.twod.Vertex.getOutgoing()Lorg/apache/commons/math3/geometry/spherical/twod/Edge;"]
21215 [label="org.apache.commons.math3.geometry.spherical.twod.PropertiesComputer.getArea()D"]
21217 [label="org.apache.commons.math3.geometry.spherical.twod.PropertiesComputer.getBarycenter()Lorg/apache/commons/math3/geometry/spherical/twod/S2Point;"]
21221 [label="org.apache.commons.math3.geometry.spherical.twod.PropertiesComputer.getConvexCellsInsidePoints()Ljava/util/List;"]
21247 [label="org.apache.commons.math3.geometry.spherical.twod.S2Point.<init>(DD)V"]
21251 [label="org.apache.commons.math3.geometry.spherical.twod.S2Point.<init>(DDLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V"]
21253 [label="org.apache.commons.math3.geometry.spherical.twod.S2Point.vector(DD)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;"]
21272 [label="org.apache.commons.math3.geometry.spherical.twod.S2Point.getSpace()Lorg/apache/commons/math3/geometry/Space;"]
21274 [label="org.apache.commons.math3.geometry.spherical.twod.Sphere2D.getInstance()Lorg/apache/commons/math3/geometry/spherical/twod/Sphere2D;"]
21276 [label="org.apache.commons.math3.geometry.spherical.twod.S2Point.isNaN()Z"]
21278 [label="org.apache.commons.math3.geometry.spherical.twod.S2Point.negate()Lorg/apache/commons/math3/geometry/spherical/twod/S2Point;"]
21280 [label="org.apache.commons.math3.geometry.spherical.twod.S2Point.distance(Lorg/apache/commons/math3/geometry/Point;)D"]
21283 [label="org.apache.commons.math3.geometry.spherical.twod.S2Point.distance(Lorg/apache/commons/math3/geometry/spherical/twod/S2Point;Lorg/apache/commons/math3/geometry/spherical/twod/S2Point;)D"]
21288 [label="org.apache.commons.math3.geometry.spherical.twod.S2Point.equals(Ljava/lang/Object;)Z"]
21292 [label="org.apache.commons.math3.geometry.spherical.twod.S2Point.hashCode()I"]
21297 [label="org.apache.commons.math3.geometry.spherical.twod.Sphere2D.<init>()V"]
21304 [label="org.apache.commons.math3.geometry.spherical.twod.Sphere2D.getSubSpace()Lorg/apache/commons/math3/geometry/spherical/oned/Sphere1D;"]
21309 [label="org.apache.commons.math3.geometry.spherical.twod.Sphere2D$LazyHolder.<init>()V"]
21322 [label="org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSet.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;D)V"]
21328 [label="org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSet.<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DID)V"]
21335 [label="org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSet.<init>(D[Lorg/apache/commons/math3/geometry/spherical/twod/S2Point;)V"]
21337 [label="org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSet.createRegularPolygonVertices(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DI)[Lorg/apache/commons/math3/geometry/spherical/twod/S2Point;"]
21342 [label="org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSet.<init>(Ljava/util/Collection;D)V"]
21356 [label="org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSet.verticesToTree(D[Lorg/apache/commons/math3/geometry/spherical/twod/S2Point;)Lorg/apache/commons/math3/geometry/partitioning/BSPTree;"]
21367 [label="org.apache.commons.math3.geometry.spherical.twod.Vertex.sharedCircleWith(Lorg/apache/commons/math3/geometry/spherical/twod/Vertex;)Lorg/apache/commons/math3/geometry/spherical/twod/Circle;"]
21371 [label="org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSet.insertEdges(DLorg/apache/commons/math3/geometry/partitioning/BSPTree;Ljava/util/List;)V"]
21378 [label="org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSet.buildNew(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)Lorg/apache/commons/math3/geometry/spherical/twod/SphericalPolygonsSet;"]
21381 [label="org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSet.computeGeometricalProperties()V"]
21401 [label="org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSet.getEnclosingCap()Lorg/apache/commons/math3/geometry/enclosing/EnclosingBall;"]
21410 [label="org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSet.getInsidePoints()Ljava/util/List;"]
21429 [label="org.apache.commons.math3.geometry.spherical.twod.SphericalPolygonsSet.getOutsidePoints()Ljava/util/List;"]
21444 [label="org.apache.commons.math3.geometry.spherical.twod.SubCircle.buildNew(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Region;)Lorg/apache/commons/math3/geometry/partitioning/AbstractSubHyperplane;"]
21448 [label="org.apache.commons.math3.geometry.spherical.twod.SubCircle.split(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane;"]
21562 [label="org.apache.commons.math3.geometry.VectorFormat.<init>()V"]
21564 [label="org.apache.commons.math3.geometry.VectorFormat.<init>(Ljava/text/NumberFormat;)V"]
21567 [label="org.apache.commons.math3.geometry.VectorFormat.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"]
21581 [label="java.lang.String.trim()Ljava/lang/String;"]
21586 [label="org.apache.commons.math3.geometry.VectorFormat.getAvailableLocales()[Ljava/util/Locale;"]
21601 [label="org.apache.commons.math3.geometry.VectorFormat.format(Lorg/apache/commons/math3/geometry/Vector;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;"]
21705 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.<init>()V"]
21708 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.<init>(Lorg/apache/commons/math3/Field;)V"]
21711 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.<init>(Lorg/apache/commons/math3/Field;II)V"]
21716 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.extractField([[Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/Field;"]
21726 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.extractField([Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/Field;"]
21733 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.buildArray(Lorg/apache/commons/math3/Field;II)[[Lorg/apache/commons/math3/FieldElement;"]
21743 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.buildArray(Lorg/apache/commons/math3/Field;I)[Lorg/apache/commons/math3/FieldElement;"]
21751 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.getField()Lorg/apache/commons/math3/Field;"]
21753 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.createMatrix(II)Lorg/apache/commons/math3/linear/FieldMatrix;"]
21757 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.copy()Lorg/apache/commons/math3/linear/FieldMatrix;"]
21759 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.add(Lorg/apache/commons/math3/linear/FieldMatrix;)Lorg/apache/commons/math3/linear/FieldMatrix;"]
21762 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.checkAdditionCompatible(Lorg/apache/commons/math3/linear/FieldMatrix;)V"]
21764 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.getRowDimension()I"]
21766 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.getColumnDimension()I"]
21769 [label="org.apache.commons.math3.linear.FieldMatrix.setEntry(IILorg/apache/commons/math3/FieldElement;)V"]
21771 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.getEntry(II)Lorg/apache/commons/math3/FieldElement;"]
21773 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.subtract(Lorg/apache/commons/math3/linear/FieldMatrix;)Lorg/apache/commons/math3/linear/FieldMatrix;"]
21776 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.checkSubtractionCompatible(Lorg/apache/commons/math3/linear/FieldMatrix;)V"]
21778 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.scalarAdd(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldMatrix;"]
21781 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.scalarMultiply(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldMatrix;"]
21784 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.multiply(Lorg/apache/commons/math3/linear/FieldMatrix;)Lorg/apache/commons/math3/linear/FieldMatrix;"]
21787 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.checkMultiplicationCompatible(Lorg/apache/commons/math3/linear/FieldMatrix;)V"]
21789 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.preMultiply(Lorg/apache/commons/math3/linear/FieldMatrix;)Lorg/apache/commons/math3/linear/FieldMatrix;"]
21792 [label="org.apache.commons.math3.linear.FieldMatrix.multiply(Lorg/apache/commons/math3/linear/FieldMatrix;)Lorg/apache/commons/math3/linear/FieldMatrix;"]
21794 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.power(I)Lorg/apache/commons/math3/linear/FieldMatrix;"]
21797 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.isSquare()Z"]
21799 [label="org.apache.commons.math3.linear.MatrixUtils.createFieldIdentityMatrix(Lorg/apache/commons/math3/Field;I)Lorg/apache/commons/math3/linear/FieldMatrix;"]
21803 [label="java.lang.String.toCharArray()[C"]
21805 [label="java.lang.Integer.toBinaryString(I)Ljava/lang/String;"]
21810 [label="java.util.ArrayList.get(I)Ljava/lang/Object;"]
21812 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.getData()[[Lorg/apache/commons/math3/FieldElement;"]
21816 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.getSubMatrix(IIII)Lorg/apache/commons/math3/linear/FieldMatrix;"]
21822 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.checkSubMatrixIndex(IIII)V"]
21824 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.getSubMatrix([I[I)Lorg/apache/commons/math3/linear/FieldMatrix;"]
21828 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.checkSubMatrixIndex([I[I)V"]
21830 [label="org.apache.commons.math3.linear.FieldMatrix.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/FieldMatrixChangingVisitor;)Lorg/apache/commons/math3/FieldElement;"]
21836 [label="org.apache.commons.math3.linear.AbstractFieldMatrix$1.<init>(Lorg/apache/commons/math3/FieldElement;)V"]
21842 [label="org.apache.commons.math3.linear.DefaultFieldMatrixChangingVisitor.<init>(Lorg/apache/commons/math3/FieldElement;)V"]
21844 [label="org.apache.commons.math3.linear.AbstractFieldMatrix$1.visit(IILorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/FieldElement;"]
21849 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.copySubMatrix(IIII[[Lorg/apache/commons/math3/FieldElement;)V"]
21856 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/FieldMatrixPreservingVisitor;IIII)Lorg/apache/commons/math3/FieldElement;"]
21862 [label="org.apache.commons.math3.linear.AbstractFieldMatrix$2.<init>(Lorg/apache/commons/math3/FieldElement;)V"]
21868 [label="org.apache.commons.math3.linear.DefaultFieldMatrixPreservingVisitor.<init>(Lorg/apache/commons/math3/FieldElement;)V"]
21889 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.copySubMatrix([I[I[[Lorg/apache/commons/math3/FieldElement;)V"]
21894 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.setSubMatrix([[Lorg/apache/commons/math3/FieldElement;II)V"]
21899 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.checkRowIndex(I)V"]
21901 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.checkColumnIndex(I)V"]
21903 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.setEntry(IILorg/apache/commons/math3/FieldElement;)V"]
21905 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.getRowMatrix(I)Lorg/apache/commons/math3/linear/FieldMatrix;"]
21908 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.setRowMatrix(ILorg/apache/commons/math3/linear/FieldMatrix;)V"]
21912 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.getColumnMatrix(I)Lorg/apache/commons/math3/linear/FieldMatrix;"]
21915 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.setColumnMatrix(ILorg/apache/commons/math3/linear/FieldMatrix;)V"]
21919 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.getRowVector(I)Lorg/apache/commons/math3/linear/FieldVector;"]
21932 [label="org.apache.commons.math3.linear.ArrayFieldVector.<init>(Lorg/apache/commons/math3/Field;[Lorg/apache/commons/math3/FieldElement;Z)V"]
21936 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.getRow(I)[Lorg/apache/commons/math3/FieldElement;"]
21938 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.setRowVector(ILorg/apache/commons/math3/linear/FieldVector;)V"]
21942 [label="org.apache.commons.math3.linear.FieldVector.getDimension()I"]
21944 [label="org.apache.commons.math3.linear.FieldVector.getEntry(I)Lorg/apache/commons/math3/FieldElement;"]
21946 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.getColumnVector(I)Lorg/apache/commons/math3/linear/FieldVector;"]
21949 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.getColumn(I)[Lorg/apache/commons/math3/FieldElement;"]
21951 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.setColumnVector(ILorg/apache/commons/math3/linear/FieldVector;)V"]
21957 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.setRow(I[Lorg/apache/commons/math3/FieldElement;)V"]
21963 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.setColumn(I[Lorg/apache/commons/math3/FieldElement;)V"]
21984 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.transpose()Lorg/apache/commons/math3/linear/FieldMatrix;"]
21986 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/FieldMatrixPreservingVisitor;)Lorg/apache/commons/math3/FieldElement;"]
21988 [label="org.apache.commons.math3.linear.AbstractFieldMatrix$3.<init>(Lorg/apache/commons/math3/FieldElement;)V"]
21992 [label="org.apache.commons.math3.linear.AbstractFieldMatrix$3.visit(IILorg/apache/commons/math3/FieldElement;)V"]
22000 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.getTrace()Lorg/apache/commons/math3/FieldElement;"]
22002 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.operate([Lorg/apache/commons/math3/FieldElement;)[Lorg/apache/commons/math3/FieldElement;"]
22005 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.operate(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldVector;"]
22009 [label="org.apache.commons.math3.linear.ArrayFieldVector.getDataRef()[Lorg/apache/commons/math3/FieldElement;"]
22014 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.preMultiply([Lorg/apache/commons/math3/FieldElement;)[Lorg/apache/commons/math3/FieldElement;"]
22017 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.preMultiply(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldVector;"]
22021 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.walkInRowOrder(Lorg/apache/commons/math3/linear/FieldMatrixChangingVisitor;)Lorg/apache/commons/math3/FieldElement;"]
22030 [label="org.apache.commons.math3.linear.FieldMatrixChangingVisitor.start(IIIIII)V"]
22032 [label="org.apache.commons.math3.linear.FieldMatrixChangingVisitor.visit(IILorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/FieldElement;"]
22034 [label="org.apache.commons.math3.linear.FieldMatrixChangingVisitor.end()Lorg/apache/commons/math3/FieldElement;"]
22036 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.walkInRowOrder(Lorg/apache/commons/math3/linear/FieldMatrixPreservingVisitor;)Lorg/apache/commons/math3/FieldElement;"]
22045 [label="org.apache.commons.math3.linear.FieldMatrixPreservingVisitor.start(IIIIII)V"]
22047 [label="org.apache.commons.math3.linear.FieldMatrixPreservingVisitor.visit(IILorg/apache/commons/math3/FieldElement;)V"]
22049 [label="org.apache.commons.math3.linear.FieldMatrixPreservingVisitor.end()Lorg/apache/commons/math3/FieldElement;"]
22051 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.walkInRowOrder(Lorg/apache/commons/math3/linear/FieldMatrixChangingVisitor;IIII)Lorg/apache/commons/math3/FieldElement;"]
22058 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.walkInRowOrder(Lorg/apache/commons/math3/linear/FieldMatrixPreservingVisitor;IIII)Lorg/apache/commons/math3/FieldElement;"]
22065 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.walkInColumnOrder(Lorg/apache/commons/math3/linear/FieldMatrixChangingVisitor;)Lorg/apache/commons/math3/FieldElement;"]
22068 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.walkInColumnOrder(Lorg/apache/commons/math3/linear/FieldMatrixPreservingVisitor;)Lorg/apache/commons/math3/FieldElement;"]
22071 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.walkInColumnOrder(Lorg/apache/commons/math3/linear/FieldMatrixChangingVisitor;IIII)Lorg/apache/commons/math3/FieldElement;"]
22078 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.walkInColumnOrder(Lorg/apache/commons/math3/linear/FieldMatrixPreservingVisitor;IIII)Lorg/apache/commons/math3/FieldElement;"]
22085 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/FieldMatrixChangingVisitor;)Lorg/apache/commons/math3/FieldElement;"]
22092 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/FieldMatrixChangingVisitor;IIII)Lorg/apache/commons/math3/FieldElement;"]
22107 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.toString()Ljava/lang/String;"]
22109 [label="java.lang.String.lastIndexOf(I)I"]
22111 [label="java.lang.StringBuffer.append(Ljava/lang/Object;)Ljava/lang/StringBuffer;"]
22113 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.equals(Ljava/lang/Object;)Z"]
22119 [label="org.apache.commons.math3.linear.AbstractFieldMatrix.hashCode()I"]
22153 [label="org.apache.commons.math3.linear.RealMatrixFormat.getInstance(Ljava/util/Locale;)Lorg/apache/commons/math3/linear/RealMatrixFormat;"]
22155 [label="org.apache.commons.math3.linear.AbstractRealMatrix.<clinit>()"]
22156 [label="java.text.NumberFormat.setMinimumFractionDigits(I)V"]
22158 [label="org.apache.commons.math3.linear.RealMatrixFormat.getFormat()Ljava/text/NumberFormat;"]
22161 [label="org.apache.commons.math3.linear.AbstractRealMatrix.<init>()V"]
22163 [label="org.apache.commons.math3.linear.RealLinearOperator.<init>()V"]
22165 [label="org.apache.commons.math3.linear.AbstractRealMatrix.<init>(II)V"]
22169 [label="org.apache.commons.math3.linear.AbstractRealMatrix.add(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;"]
22172 [label="org.apache.commons.math3.linear.AbstractRealMatrix.getRowDimension()I"]
22174 [label="org.apache.commons.math3.linear.AbstractRealMatrix.getColumnDimension()I"]
22176 [label="org.apache.commons.math3.linear.AbstractRealMatrix.createMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix;"]
22178 [label="org.apache.commons.math3.linear.AbstractRealMatrix.getEntry(II)D"]
22180 [label="org.apache.commons.math3.linear.AbstractRealMatrix.subtract(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;"]
22183 [label="org.apache.commons.math3.linear.MatrixUtils.checkSubtractionCompatible(Lorg/apache/commons/math3/linear/AnyMatrix;Lorg/apache/commons/math3/linear/AnyMatrix;)V"]
22185 [label="org.apache.commons.math3.linear.AbstractRealMatrix.scalarAdd(D)Lorg/apache/commons/math3/linear/RealMatrix;"]
22188 [label="org.apache.commons.math3.linear.AbstractRealMatrix.scalarMultiply(D)Lorg/apache/commons/math3/linear/RealMatrix;"]
22193 [label="org.apache.commons.math3.linear.MatrixUtils.checkMultiplicationCompatible(Lorg/apache/commons/math3/linear/AnyMatrix;Lorg/apache/commons/math3/linear/AnyMatrix;)V"]
22195 [label="org.apache.commons.math3.linear.AbstractRealMatrix.preMultiply(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;"]
22198 [label="org.apache.commons.math3.linear.AbstractRealMatrix.power(I)Lorg/apache/commons/math3/linear/RealMatrix;"]
22202 [label="org.apache.commons.math3.linear.AbstractRealMatrix.isSquare()Z"]
22204 [label="org.apache.commons.math3.linear.AbstractRealMatrix.copy()Lorg/apache/commons/math3/linear/RealMatrix;"]
22206 [label="org.apache.commons.math3.linear.AbstractRealMatrix.getData()[[D"]
22208 [label="org.apache.commons.math3.linear.AbstractRealMatrix.getNorm()D"]
22210 [label="org.apache.commons.math3.linear.AbstractRealMatrix.walkInColumnOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D"]
22215 [label="org.apache.commons.math3.linear.AbstractRealMatrix$1.<init>()V"]
22235 [label="org.apache.commons.math3.linear.AbstractRealMatrix$1.visit(IID)V"]
22242 [label="org.apache.commons.math3.linear.AbstractRealMatrix.getFrobeniusNorm()D"]
22244 [label="org.apache.commons.math3.linear.AbstractRealMatrix.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D"]
22246 [label="org.apache.commons.math3.linear.AbstractRealMatrix$2.<init>()V"]
22265 [label="org.apache.commons.math3.linear.AbstractRealMatrix$2.end()D"]
22267 [label="org.apache.commons.math3.linear.AbstractRealMatrix.getSubMatrix(IIII)Lorg/apache/commons/math3/linear/RealMatrix;"]
22273 [label="org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;IIII)V"]
22275 [label="org.apache.commons.math3.linear.AbstractRealMatrix.getSubMatrix([I[I)Lorg/apache/commons/math3/linear/RealMatrix;"]
22279 [label="org.apache.commons.math3.linear.MatrixUtils.checkSubMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;[I[I)V"]
22281 [label="org.apache.commons.math3.linear.RealMatrix.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D"]
22286 [label="org.apache.commons.math3.linear.AbstractRealMatrix$3.<init>()V"]
22289 [label="org.apache.commons.math3.linear.DefaultRealMatrixChangingVisitor.<init>()V"]
22291 [label="org.apache.commons.math3.linear.AbstractRealMatrix$3.visit(IID)D"]
22296 [label="org.apache.commons.math3.linear.AbstractRealMatrix.copySubMatrix(IIII[[D)V"]
22303 [label="org.apache.commons.math3.linear.AbstractRealMatrix.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D"]
22308 [label="org.apache.commons.math3.linear.AbstractRealMatrix$4.<init>()V"]
22311 [label="org.apache.commons.math3.linear.DefaultRealMatrixPreservingVisitor.<init>()V"]
22332 [label="org.apache.commons.math3.linear.AbstractRealMatrix.copySubMatrix([I[I[[D)V"]
22337 [label="org.apache.commons.math3.linear.AbstractRealMatrix.setSubMatrix([[DII)V"]
22342 [label="org.apache.commons.math3.linear.MatrixUtils.checkRowIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V"]
22344 [label="org.apache.commons.math3.linear.MatrixUtils.checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V"]
22346 [label="org.apache.commons.math3.linear.AbstractRealMatrix.setEntry(IID)V"]
22348 [label="org.apache.commons.math3.linear.AbstractRealMatrix.getRowMatrix(I)Lorg/apache/commons/math3/linear/RealMatrix;"]
22351 [label="org.apache.commons.math3.linear.AbstractRealMatrix.setRowMatrix(ILorg/apache/commons/math3/linear/RealMatrix;)V"]
22355 [label="org.apache.commons.math3.linear.AbstractRealMatrix.getColumnMatrix(I)Lorg/apache/commons/math3/linear/RealMatrix;"]
22358 [label="org.apache.commons.math3.linear.AbstractRealMatrix.setColumnMatrix(ILorg/apache/commons/math3/linear/RealMatrix;)V"]
22362 [label="org.apache.commons.math3.linear.AbstractRealMatrix.getRowVector(I)Lorg/apache/commons/math3/linear/RealVector;"]
22365 [label="org.apache.commons.math3.linear.AbstractRealMatrix.getRow(I)[D"]
22367 [label="org.apache.commons.math3.linear.AbstractRealMatrix.setRowVector(ILorg/apache/commons/math3/linear/RealVector;)V"]
22371 [label="org.apache.commons.math3.linear.AbstractRealMatrix.getColumnVector(I)Lorg/apache/commons/math3/linear/RealVector;"]
22374 [label="org.apache.commons.math3.linear.AbstractRealMatrix.getColumn(I)[D"]
22376 [label="org.apache.commons.math3.linear.AbstractRealMatrix.setColumnVector(ILorg/apache/commons/math3/linear/RealVector;)V"]
22382 [label="org.apache.commons.math3.linear.AbstractRealMatrix.setRow(I[D)V"]
22391 [label="org.apache.commons.math3.linear.AbstractRealMatrix.addToEntry(IID)V"]
22396 [label="org.apache.commons.math3.linear.MatrixUtils.checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V"]
22398 [label="org.apache.commons.math3.linear.AbstractRealMatrix.multiplyEntry(IID)V"]
22404 [label="org.apache.commons.math3.linear.AbstractRealMatrix$5.<init>()V"]
22407 [label="org.apache.commons.math3.linear.AbstractRealMatrix$5.visit(IID)V"]
22415 [label="org.apache.commons.math3.linear.AbstractRealMatrix.getTrace()D"]
22417 [label="org.apache.commons.math3.linear.AbstractRealMatrix.operate([D)[D"]
22420 [label="org.apache.commons.math3.linear.AbstractRealMatrix.operate(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
22424 [label="org.apache.commons.math3.linear.ArrayRealVector.getDataRef()[D"]
22426 [label="org.apache.commons.math3.linear.AbstractRealMatrix.preMultiply([D)[D"]
22429 [label="org.apache.commons.math3.linear.AbstractRealMatrix.preMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
22433 [label="org.apache.commons.math3.linear.AbstractRealMatrix.walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D"]
22439 [label="org.apache.commons.math3.linear.RealMatrixChangingVisitor.start(IIIIII)V"]
22441 [label="org.apache.commons.math3.linear.RealMatrixChangingVisitor.visit(IID)D"]
22443 [label="org.apache.commons.math3.linear.RealMatrixChangingVisitor.end()D"]
22445 [label="org.apache.commons.math3.linear.AbstractRealMatrix.walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D"]
22448 [label="org.apache.commons.math3.linear.RealMatrixPreservingVisitor.start(IIIIII)V"]
22450 [label="org.apache.commons.math3.linear.RealMatrixPreservingVisitor.visit(IID)V"]
22452 [label="org.apache.commons.math3.linear.RealMatrixPreservingVisitor.end()D"]
22454 [label="org.apache.commons.math3.linear.AbstractRealMatrix.walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D"]
22461 [label="org.apache.commons.math3.linear.AbstractRealMatrix.walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D"]
22468 [label="org.apache.commons.math3.linear.AbstractRealMatrix.walkInColumnOrder(Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D"]
22473 [label="org.apache.commons.math3.linear.AbstractRealMatrix.walkInColumnOrder(Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D"]
22480 [label="org.apache.commons.math3.linear.AbstractRealMatrix.walkInColumnOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D"]
22487 [label="org.apache.commons.math3.linear.AbstractRealMatrix.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D"]
22494 [label="org.apache.commons.math3.linear.AbstractRealMatrix.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D"]
22509 [label="org.apache.commons.math3.linear.AbstractRealMatrix.toString()Ljava/lang/String;"]
22511 [label="org.apache.commons.math3.linear.RealMatrixFormat.format(Lorg/apache/commons/math3/linear/RealMatrix;)Ljava/lang/String;"]
22513 [label="org.apache.commons.math3.linear.AbstractRealMatrix.equals(Ljava/lang/Object;)Z"]
22516 [label="org.apache.commons.math3.linear.AbstractRealMatrix.hashCode()I"]
22548 [label="org.apache.commons.math3.linear.Array2DRowFieldMatrix.<init>(Lorg/apache/commons/math3/Field;)V"]
22552 [label="org.apache.commons.math3.linear.Array2DRowFieldMatrix.<init>(Lorg/apache/commons/math3/Field;II)V"]
22559 [label="org.apache.commons.math3.linear.Array2DRowFieldMatrix.<init>([[Lorg/apache/commons/math3/FieldElement;)V"]
22566 [label="org.apache.commons.math3.linear.Array2DRowFieldMatrix.copyIn([[Lorg/apache/commons/math3/FieldElement;)V"]
22568 [label="org.apache.commons.math3.linear.Array2DRowFieldMatrix.<init>([[Lorg/apache/commons/math3/FieldElement;Z)V"]
22572 [label="org.apache.commons.math3.linear.Array2DRowFieldMatrix.<init>(Lorg/apache/commons/math3/Field;[[Lorg/apache/commons/math3/FieldElement;Z)V"]
22578 [label="org.apache.commons.math3.linear.Array2DRowFieldMatrix.<init>([Lorg/apache/commons/math3/FieldElement;)V"]
22581 [label="org.apache.commons.math3.linear.Array2DRowFieldMatrix.<init>(Lorg/apache/commons/math3/Field;[Lorg/apache/commons/math3/FieldElement;)V"]
22587 [label="org.apache.commons.math3.linear.Array2DRowFieldMatrix.createMatrix(II)Lorg/apache/commons/math3/linear/FieldMatrix;"]
22595 [label="org.apache.commons.math3.linear.Array2DRowFieldMatrix.copy()Lorg/apache/commons/math3/linear/FieldMatrix;"]
22597 [label="org.apache.commons.math3.linear.Array2DRowFieldMatrix.copyOut()[[Lorg/apache/commons/math3/FieldElement;"]
22599 [label="org.apache.commons.math3.linear.Array2DRowFieldMatrix.add(Lorg/apache/commons/math3/linear/Array2DRowFieldMatrix;)Lorg/apache/commons/math3/linear/Array2DRowFieldMatrix;"]
22602 [label="org.apache.commons.math3.linear.Array2DRowFieldMatrix.getRowDimension()I"]
22604 [label="org.apache.commons.math3.linear.Array2DRowFieldMatrix.getColumnDimension()I"]
22606 [label="org.apache.commons.math3.linear.Array2DRowFieldMatrix.subtract(Lorg/apache/commons/math3/linear/Array2DRowFieldMatrix;)Lorg/apache/commons/math3/linear/Array2DRowFieldMatrix;"]
22609 [label="org.apache.commons.math3.linear.Array2DRowFieldMatrix.multiply(Lorg/apache/commons/math3/linear/Array2DRowFieldMatrix;)Lorg/apache/commons/math3/linear/Array2DRowFieldMatrix;"]
22612 [label="org.apache.commons.math3.linear.Array2DRowFieldMatrix.getData()[[Lorg/apache/commons/math3/FieldElement;"]
22614 [label="org.apache.commons.math3.linear.Array2DRowFieldMatrix.getDataRef()[[Lorg/apache/commons/math3/FieldElement;"]
22616 [label="org.apache.commons.math3.linear.Array2DRowFieldMatrix.setSubMatrix([[Lorg/apache/commons/math3/FieldElement;II)V"]
22624 [label="org.apache.commons.math3.linear.Array2DRowFieldMatrix.getEntry(II)Lorg/apache/commons/math3/FieldElement;"]
22628 [label="org.apache.commons.math3.linear.Array2DRowFieldMatrix.setEntry(IILorg/apache/commons/math3/FieldElement;)V"]
22633 [label="org.apache.commons.math3.linear.Array2DRowFieldMatrix.addToEntry(IILorg/apache/commons/math3/FieldElement;)V"]
22638 [label="org.apache.commons.math3.linear.Array2DRowFieldMatrix.multiplyEntry(IILorg/apache/commons/math3/FieldElement;)V"]
22645 [label="org.apache.commons.math3.linear.Array2DRowFieldMatrix.operate([Lorg/apache/commons/math3/FieldElement;)[Lorg/apache/commons/math3/FieldElement;"]
22648 [label="org.apache.commons.math3.linear.Array2DRowFieldMatrix.preMultiply([Lorg/apache/commons/math3/FieldElement;)[Lorg/apache/commons/math3/FieldElement;"]
22651 [label="org.apache.commons.math3.linear.Array2DRowFieldMatrix.walkInRowOrder(Lorg/apache/commons/math3/linear/FieldMatrixChangingVisitor;)Lorg/apache/commons/math3/FieldElement;"]
22654 [label="org.apache.commons.math3.linear.Array2DRowFieldMatrix.walkInRowOrder(Lorg/apache/commons/math3/linear/FieldMatrixPreservingVisitor;)Lorg/apache/commons/math3/FieldElement;"]
22657 [label="org.apache.commons.math3.linear.Array2DRowFieldMatrix.walkInRowOrder(Lorg/apache/commons/math3/linear/FieldMatrixChangingVisitor;IIII)Lorg/apache/commons/math3/FieldElement;"]
22664 [label="org.apache.commons.math3.linear.Array2DRowFieldMatrix.walkInRowOrder(Lorg/apache/commons/math3/linear/FieldMatrixPreservingVisitor;IIII)Lorg/apache/commons/math3/FieldElement;"]
22671 [label="org.apache.commons.math3.linear.Array2DRowFieldMatrix.walkInColumnOrder(Lorg/apache/commons/math3/linear/FieldMatrixChangingVisitor;)Lorg/apache/commons/math3/FieldElement;"]
22674 [label="org.apache.commons.math3.linear.Array2DRowFieldMatrix.walkInColumnOrder(Lorg/apache/commons/math3/linear/FieldMatrixPreservingVisitor;)Lorg/apache/commons/math3/FieldElement;"]
22677 [label="org.apache.commons.math3.linear.Array2DRowFieldMatrix.walkInColumnOrder(Lorg/apache/commons/math3/linear/FieldMatrixChangingVisitor;IIII)Lorg/apache/commons/math3/FieldElement;"]
22684 [label="org.apache.commons.math3.linear.Array2DRowFieldMatrix.walkInColumnOrder(Lorg/apache/commons/math3/linear/FieldMatrixPreservingVisitor;IIII)Lorg/apache/commons/math3/FieldElement;"]
22713 [label="org.apache.commons.math3.linear.Array2DRowRealMatrix.copyIn([[D)V"]
22720 [label="org.apache.commons.math3.linear.Array2DRowRealMatrix.createMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix;"]
22724 [label="org.apache.commons.math3.linear.Array2DRowRealMatrix.copy()Lorg/apache/commons/math3/linear/RealMatrix;"]
22726 [label="org.apache.commons.math3.linear.Array2DRowRealMatrix.copyOut()[[D"]
22728 [label="org.apache.commons.math3.linear.Array2DRowRealMatrix.add(Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;"]
22731 [label="org.apache.commons.math3.linear.Array2DRowRealMatrix.getRowDimension()I"]
22733 [label="org.apache.commons.math3.linear.Array2DRowRealMatrix.getColumnDimension()I"]
22735 [label="org.apache.commons.math3.linear.Array2DRowRealMatrix.subtract(Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;"]
22738 [label="org.apache.commons.math3.linear.Array2DRowRealMatrix.multiply(Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;"]
22741 [label="org.apache.commons.math3.linear.Array2DRowRealMatrix.getData()[[D"]
22743 [label="org.apache.commons.math3.linear.Array2DRowRealMatrix.getDataRef()[[D"]
22745 [label="org.apache.commons.math3.linear.Array2DRowRealMatrix.setSubMatrix([[DII)V"]
22751 [label="org.apache.commons.math3.linear.Array2DRowRealMatrix.getEntry(II)D"]
22755 [label="org.apache.commons.math3.linear.Array2DRowRealMatrix.setEntry(IID)V"]
22760 [label="org.apache.commons.math3.linear.Array2DRowRealMatrix.addToEntry(IID)V"]
22765 [label="org.apache.commons.math3.linear.Array2DRowRealMatrix.multiplyEntry(IID)V"]
22772 [label="org.apache.commons.math3.linear.Array2DRowRealMatrix.operate([D)[D"]
22775 [label="org.apache.commons.math3.linear.Array2DRowRealMatrix.preMultiply([D)[D"]
22778 [label="org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D"]
22781 [label="org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D"]
22784 [label="org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D"]
22791 [label="org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D"]
22798 [label="org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder(Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D"]
22801 [label="org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D"]
22804 [label="org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder(Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D"]
22811 [label="org.apache.commons.math3.linear.Array2DRowRealMatrix.walkInColumnOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D"]
22833 [label="org.apache.commons.math3.linear.ArrayFieldVector.<init>(Lorg/apache/commons/math3/Field;)V"]
22836 [label="org.apache.commons.math3.linear.ArrayFieldVector.<init>(Lorg/apache/commons/math3/Field;I)V"]
22843 [label="org.apache.commons.math3.linear.ArrayFieldVector.<init>(ILorg/apache/commons/math3/FieldElement;)V"]
22847 [label="org.apache.commons.math3.linear.ArrayFieldVector.<init>([Lorg/apache/commons/math3/FieldElement;)V"]
22854 [label="org.apache.commons.math3.linear.ArrayFieldVector.<init>(Lorg/apache/commons/math3/Field;[Lorg/apache/commons/math3/FieldElement;)V"]
22858 [label="org.apache.commons.math3.linear.ArrayFieldVector.<init>([Lorg/apache/commons/math3/FieldElement;Z)V"]
22866 [label="org.apache.commons.math3.linear.ArrayFieldVector.<init>([Lorg/apache/commons/math3/FieldElement;II)V"]
22871 [label="org.apache.commons.math3.linear.ArrayFieldVector.<init>(Lorg/apache/commons/math3/Field;[Lorg/apache/commons/math3/FieldElement;II)V"]
22877 [label="org.apache.commons.math3.linear.ArrayFieldVector.<init>(Lorg/apache/commons/math3/linear/FieldVector;)V"]
22880 [label="org.apache.commons.math3.linear.FieldVector.getField()Lorg/apache/commons/math3/Field;"]
22882 [label="org.apache.commons.math3.linear.ArrayFieldVector.<init>(Lorg/apache/commons/math3/linear/ArrayFieldVector;)V"]
22885 [label="org.apache.commons.math3.linear.ArrayFieldVector.getField()Lorg/apache/commons/math3/Field;"]
22887 [label="org.apache.commons.math3.linear.ArrayFieldVector.<init>(Lorg/apache/commons/math3/linear/ArrayFieldVector;Z)V"]
22891 [label="org.apache.commons.math3.linear.ArrayFieldVector.<init>(Lorg/apache/commons/math3/linear/ArrayFieldVector;Lorg/apache/commons/math3/linear/ArrayFieldVector;)V"]
22895 [label="org.apache.commons.math3.linear.ArrayFieldVector.<init>(Lorg/apache/commons/math3/linear/FieldVector;Lorg/apache/commons/math3/linear/FieldVector;)V"]
22900 [label="org.apache.commons.math3.linear.FieldVector.toArray()[Lorg/apache/commons/math3/FieldElement;"]
22902 [label="org.apache.commons.math3.linear.ArrayFieldVector.<init>(Lorg/apache/commons/math3/linear/ArrayFieldVector;[Lorg/apache/commons/math3/FieldElement;)V"]
22906 [label="org.apache.commons.math3.linear.ArrayFieldVector.<init>(Lorg/apache/commons/math3/linear/FieldVector;[Lorg/apache/commons/math3/FieldElement;)V"]
22911 [label="org.apache.commons.math3.linear.ArrayFieldVector.<init>([Lorg/apache/commons/math3/FieldElement;Lorg/apache/commons/math3/linear/ArrayFieldVector;)V"]
22915 [label="org.apache.commons.math3.linear.ArrayFieldVector.<init>([Lorg/apache/commons/math3/FieldElement;Lorg/apache/commons/math3/linear/FieldVector;)V"]
22920 [label="org.apache.commons.math3.linear.ArrayFieldVector.<init>([Lorg/apache/commons/math3/FieldElement;[Lorg/apache/commons/math3/FieldElement;)V"]
22924 [label="org.apache.commons.math3.linear.ArrayFieldVector.<init>(Lorg/apache/commons/math3/Field;[Lorg/apache/commons/math3/FieldElement;[Lorg/apache/commons/math3/FieldElement;)V"]
22930 [label="org.apache.commons.math3.linear.ArrayFieldVector.copy()Lorg/apache/commons/math3/linear/FieldVector;"]
22933 [label="org.apache.commons.math3.linear.ArrayFieldVector.add(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldVector;"]
22936 [label="org.apache.commons.math3.linear.ArrayFieldVector.add(Lorg/apache/commons/math3/linear/ArrayFieldVector;)Lorg/apache/commons/math3/linear/ArrayFieldVector;"]
22938 [label="org.apache.commons.math3.linear.ArrayFieldVector.checkVectorDimensions(Lorg/apache/commons/math3/linear/FieldVector;)V"]
22942 [label="org.apache.commons.math3.linear.ArrayFieldVector.checkVectorDimensions(I)V"]
22944 [label="org.apache.commons.math3.linear.ArrayFieldVector.subtract(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldVector;"]
22947 [label="org.apache.commons.math3.linear.ArrayFieldVector.subtract(Lorg/apache/commons/math3/linear/ArrayFieldVector;)Lorg/apache/commons/math3/linear/ArrayFieldVector;"]
22951 [label="org.apache.commons.math3.linear.ArrayFieldVector.mapAdd(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;"]
22954 [label="org.apache.commons.math3.linear.ArrayFieldVector.mapAddToSelf(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;"]
22957 [label="org.apache.commons.math3.linear.ArrayFieldVector.mapSubtract(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;"]
22960 [label="org.apache.commons.math3.linear.ArrayFieldVector.mapSubtractToSelf(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;"]
22963 [label="org.apache.commons.math3.linear.ArrayFieldVector.mapMultiply(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;"]
22966 [label="org.apache.commons.math3.linear.ArrayFieldVector.mapMultiplyToSelf(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;"]
22969 [label="org.apache.commons.math3.linear.ArrayFieldVector.mapDivide(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;"]
22972 [label="org.apache.commons.math3.linear.ArrayFieldVector.mapDivideToSelf(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;"]
22975 [label="org.apache.commons.math3.linear.ArrayFieldVector.mapInv()Lorg/apache/commons/math3/linear/FieldVector;"]
22978 [label="org.apache.commons.math3.linear.ArrayFieldVector.mapInvToSelf()Lorg/apache/commons/math3/linear/FieldVector;"]
22980 [label="org.apache.commons.math3.linear.ArrayFieldVector.ebeMultiply(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldVector;"]
22983 [label="org.apache.commons.math3.linear.ArrayFieldVector.ebeMultiply(Lorg/apache/commons/math3/linear/ArrayFieldVector;)Lorg/apache/commons/math3/linear/ArrayFieldVector;"]
22987 [label="org.apache.commons.math3.linear.ArrayFieldVector.ebeDivide(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldVector;"]
22990 [label="org.apache.commons.math3.linear.ArrayFieldVector.ebeDivide(Lorg/apache/commons/math3/linear/ArrayFieldVector;)Lorg/apache/commons/math3/linear/ArrayFieldVector;"]
22994 [label="org.apache.commons.math3.linear.ArrayFieldVector.getData()[Lorg/apache/commons/math3/FieldElement;"]
22997 [label="org.apache.commons.math3.linear.ArrayFieldVector.dotProduct(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/FieldElement;"]
23000 [label="org.apache.commons.math3.linear.ArrayFieldVector.dotProduct(Lorg/apache/commons/math3/linear/ArrayFieldVector;)Lorg/apache/commons/math3/FieldElement;"]
23004 [label="org.apache.commons.math3.linear.ArrayFieldVector.projection(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldVector;"]
23007 [label="org.apache.commons.math3.linear.FieldVector.mapMultiply(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;"]
23010 [label="org.apache.commons.math3.linear.FieldVector.dotProduct(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/FieldElement;"]
23012 [label="org.apache.commons.math3.linear.ArrayFieldVector.projection(Lorg/apache/commons/math3/linear/ArrayFieldVector;)Lorg/apache/commons/math3/linear/ArrayFieldVector;"]
23016 [label="org.apache.commons.math3.linear.ArrayFieldVector.outerProduct(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldMatrix;"]
23019 [label="org.apache.commons.math3.linear.ArrayFieldVector.outerProduct(Lorg/apache/commons/math3/linear/ArrayFieldVector;)Lorg/apache/commons/math3/linear/FieldMatrix;"]
23023 [label="org.apache.commons.math3.linear.ArrayFieldVector.getEntry(I)Lorg/apache/commons/math3/FieldElement;"]
23026 [label="org.apache.commons.math3.linear.ArrayFieldVector.getDimension()I"]
23028 [label="org.apache.commons.math3.linear.ArrayFieldVector.append(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldVector;"]
23031 [label="org.apache.commons.math3.linear.ArrayFieldVector.append(Lorg/apache/commons/math3/linear/ArrayFieldVector;)Lorg/apache/commons/math3/linear/ArrayFieldVector;"]
23037 [label="org.apache.commons.math3.linear.ArrayFieldVector.append(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;"]
23040 [label="org.apache.commons.math3.linear.ArrayFieldVector.getSubVector(II)Lorg/apache/commons/math3/linear/FieldVector;"]
23048 [label="org.apache.commons.math3.linear.ArrayFieldVector.checkIndex(I)V"]
23050 [label="org.apache.commons.math3.linear.ArrayFieldVector.setEntry(ILorg/apache/commons/math3/FieldElement;)V"]
23054 [label="org.apache.commons.math3.linear.ArrayFieldVector.setSubVector(ILorg/apache/commons/math3/linear/FieldVector;)V"]
23058 [label="org.apache.commons.math3.linear.ArrayFieldVector.set(ILorg/apache/commons/math3/linear/ArrayFieldVector;)V"]
23063 [label="org.apache.commons.math3.linear.ArrayFieldVector.set(Lorg/apache/commons/math3/FieldElement;)V"]
23066 [label="org.apache.commons.math3.linear.ArrayFieldVector.toArray()[Lorg/apache/commons/math3/FieldElement;"]
23072 [label="org.apache.commons.math3.linear.ArrayFieldVector.walkInDefaultOrder(Lorg/apache/commons/math3/linear/FieldVectorPreservingVisitor;)Lorg/apache/commons/math3/FieldElement;"]
23082 [label="org.apache.commons.math3.linear.FieldVectorPreservingVisitor.start(III)V"]
23084 [label="org.apache.commons.math3.linear.FieldVectorPreservingVisitor.visit(ILorg/apache/commons/math3/FieldElement;)V"]
23087 [label="org.apache.commons.math3.linear.FieldVectorPreservingVisitor.end()Lorg/apache/commons/math3/FieldElement;"]
23089 [label="org.apache.commons.math3.linear.ArrayFieldVector.walkInDefaultOrder(Lorg/apache/commons/math3/linear/FieldVectorPreservingVisitor;II)Lorg/apache/commons/math3/FieldElement;"]
23094 [label="org.apache.commons.math3.linear.ArrayFieldVector.checkIndices(II)V"]
23096 [label="org.apache.commons.math3.linear.ArrayFieldVector.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/FieldVectorPreservingVisitor;)Lorg/apache/commons/math3/FieldElement;"]
23100 [label="org.apache.commons.math3.linear.ArrayFieldVector.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/FieldVectorPreservingVisitor;II)Lorg/apache/commons/math3/FieldElement;"]
23106 [label="org.apache.commons.math3.linear.ArrayFieldVector.walkInDefaultOrder(Lorg/apache/commons/math3/linear/FieldVectorChangingVisitor;)Lorg/apache/commons/math3/FieldElement;"]
23115 [label="org.apache.commons.math3.linear.FieldVectorChangingVisitor.start(III)V"]
23118 [label="org.apache.commons.math3.linear.FieldVectorChangingVisitor.visit(ILorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/FieldElement;"]
23120 [label="org.apache.commons.math3.linear.FieldVectorChangingVisitor.end()Lorg/apache/commons/math3/FieldElement;"]
23122 [label="org.apache.commons.math3.linear.ArrayFieldVector.walkInDefaultOrder(Lorg/apache/commons/math3/linear/FieldVectorChangingVisitor;II)Lorg/apache/commons/math3/FieldElement;"]
23127 [label="org.apache.commons.math3.linear.ArrayFieldVector.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/FieldVectorChangingVisitor;)Lorg/apache/commons/math3/FieldElement;"]
23131 [label="org.apache.commons.math3.linear.ArrayFieldVector.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/FieldVectorChangingVisitor;II)Lorg/apache/commons/math3/FieldElement;"]
23137 [label="org.apache.commons.math3.linear.ArrayFieldVector.equals(Ljava/lang/Object;)Z"]
23140 [label="org.apache.commons.math3.linear.ArrayFieldVector.hashCode()I"]
23155 [label="org.apache.commons.math3.linear.RealVectorFormat.getInstance()Lorg/apache/commons/math3/linear/RealVectorFormat;"]
23159 [label="org.apache.commons.math3.linear.ArrayRealVector.<init>()V"]
23161 [label="org.apache.commons.math3.linear.RealVector.<init>()V"]
23166 [label="org.apache.commons.math3.linear.ArrayRealVector.<init>(ID)V"]
23175 [label="org.apache.commons.math3.linear.ArrayRealVector.<init>([DII)V"]
23180 [label="org.apache.commons.math3.linear.ArrayRealVector.<init>([Ljava/lang/Double;)V"]
23183 [label="org.apache.commons.math3.linear.ArrayRealVector.<init>([Ljava/lang/Double;II)V"]
23190 [label="org.apache.commons.math3.linear.ArrayRealVector.<init>(Lorg/apache/commons/math3/linear/ArrayRealVector;)V"]
23193 [label="org.apache.commons.math3.linear.ArrayRealVector.<init>(Lorg/apache/commons/math3/linear/ArrayRealVector;Z)V"]
23198 [label="org.apache.commons.math3.linear.ArrayRealVector.<init>(Lorg/apache/commons/math3/linear/ArrayRealVector;Lorg/apache/commons/math3/linear/ArrayRealVector;)V"]
23202 [label="org.apache.commons.math3.linear.ArrayRealVector.<init>(Lorg/apache/commons/math3/linear/ArrayRealVector;Lorg/apache/commons/math3/linear/RealVector;)V"]
23206 [label="org.apache.commons.math3.linear.ArrayRealVector.<init>(Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/ArrayRealVector;)V"]
23210 [label="org.apache.commons.math3.linear.ArrayRealVector.<init>(Lorg/apache/commons/math3/linear/ArrayRealVector;[D)V"]
23214 [label="org.apache.commons.math3.linear.ArrayRealVector.getDimension()I"]
23216 [label="org.apache.commons.math3.linear.ArrayRealVector.<init>([DLorg/apache/commons/math3/linear/ArrayRealVector;)V"]
23220 [label="org.apache.commons.math3.linear.ArrayRealVector.<init>([D[D)V"]
23224 [label="org.apache.commons.math3.linear.ArrayRealVector.copy()Lorg/apache/commons/math3/linear/ArrayRealVector;"]
23226 [label="org.apache.commons.math3.linear.ArrayRealVector.add(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/ArrayRealVector;"]
23229 [label="org.apache.commons.math3.linear.ArrayRealVector.checkVectorDimensions(I)V"]
23231 [label="org.apache.commons.math3.linear.ArrayRealVector.checkVectorDimensions(Lorg/apache/commons/math3/linear/RealVector;)V"]
23239 [label="org.apache.commons.math3.linear.RealVector.iterator()Ljava/util/Iterator;"]
23241 [label="org.apache.commons.math3.linear.RealVector$Entry.getIndex()I"]
23243 [label="org.apache.commons.math3.linear.RealVector$Entry.getValue()D"]
23245 [label="org.apache.commons.math3.linear.ArrayRealVector.subtract(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/ArrayRealVector;"]
23248 [label="org.apache.commons.math3.linear.ArrayRealVector.map(Lorg/apache/commons/math3/analysis/UnivariateFunction;)Lorg/apache/commons/math3/linear/ArrayRealVector;"]
23251 [label="org.apache.commons.math3.linear.ArrayRealVector.mapToSelf(Lorg/apache/commons/math3/analysis/UnivariateFunction;)Lorg/apache/commons/math3/linear/ArrayRealVector;"]
23262 [label="org.apache.commons.math3.linear.ArrayRealVector.mapMultiplyToSelf(D)Lorg/apache/commons/math3/linear/RealVector;"]
23268 [label="org.apache.commons.math3.linear.ArrayRealVector.ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/ArrayRealVector;"]
23271 [label="org.apache.commons.math3.linear.ArrayRealVector.ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/ArrayRealVector;"]
23277 [label="org.apache.commons.math3.linear.ArrayRealVector.getNorm()D"]
23279 [label="org.apache.commons.math3.linear.ArrayRealVector.getL1Norm()D"]
23281 [label="org.apache.commons.math3.linear.ArrayRealVector.getLInfNorm()D"]
23283 [label="org.apache.commons.math3.linear.ArrayRealVector.getDistance(Lorg/apache/commons/math3/linear/RealVector;)D"]
23286 [label="org.apache.commons.math3.linear.ArrayRealVector.getL1Distance(Lorg/apache/commons/math3/linear/RealVector;)D"]
23289 [label="org.apache.commons.math3.linear.ArrayRealVector.getLInfDistance(Lorg/apache/commons/math3/linear/RealVector;)D"]
23292 [label="org.apache.commons.math3.linear.ArrayRealVector.outerProduct(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealMatrix;"]
23295 [label="org.apache.commons.math3.linear.ArrayRealVector.getEntry(I)D"]
23299 [label="org.apache.commons.math3.linear.ArrayRealVector.append(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
23304 [label="org.apache.commons.math3.linear.ArrayRealVector.append(Lorg/apache/commons/math3/linear/ArrayRealVector;)Lorg/apache/commons/math3/linear/ArrayRealVector;"]
23307 [label="org.apache.commons.math3.linear.ArrayRealVector.append(D)Lorg/apache/commons/math3/linear/RealVector;"]
23310 [label="org.apache.commons.math3.linear.ArrayRealVector.getSubVector(II)Lorg/apache/commons/math3/linear/RealVector;"]
23314 [label="org.apache.commons.math3.linear.RealVector.checkIndex(I)V"]
23316 [label="org.apache.commons.math3.linear.ArrayRealVector.setEntry(ID)V"]
23320 [label="org.apache.commons.math3.linear.ArrayRealVector.addToEntry(ID)V"]
23324 [label="org.apache.commons.math3.linear.ArrayRealVector.setSubVector(ILorg/apache/commons/math3/linear/RealVector;)V"]
23328 [label="org.apache.commons.math3.linear.ArrayRealVector.setSubVector(I[D)V"]
23333 [label="org.apache.commons.math3.linear.ArrayRealVector.set(D)V"]
23336 [label="org.apache.commons.math3.linear.ArrayRealVector.toArray()[D"]
23338 [label="org.apache.commons.math3.linear.ArrayRealVector.toString()Ljava/lang/String;"]
23340 [label="org.apache.commons.math3.linear.RealVectorFormat.format(Lorg/apache/commons/math3/linear/RealVector;)Ljava/lang/String;"]
23347 [label="org.apache.commons.math3.linear.ArrayRealVector.isNaN()Z"]
23349 [label="org.apache.commons.math3.linear.ArrayRealVector.isInfinite()Z"]
23352 [label="org.apache.commons.math3.linear.ArrayRealVector.equals(Ljava/lang/Object;)Z"]
23355 [label="org.apache.commons.math3.linear.RealVector.isNaN()Z"]
23357 [label="org.apache.commons.math3.linear.ArrayRealVector.hashCode()I"]
23359 [label="org.apache.commons.math3.linear.ArrayRealVector.combine(DDLorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/ArrayRealVector;"]
23364 [label="org.apache.commons.math3.linear.ArrayRealVector.combineToSelf(DDLorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/ArrayRealVector;"]
23370 [label="org.apache.commons.math3.linear.ArrayRealVector.walkInDefaultOrder(Lorg/apache/commons/math3/linear/RealVectorPreservingVisitor;)D"]
23376 [label="org.apache.commons.math3.linear.RealVectorPreservingVisitor.start(III)V"]
23378 [label="org.apache.commons.math3.linear.RealVectorPreservingVisitor.visit(ID)V"]
23380 [label="org.apache.commons.math3.linear.RealVectorPreservingVisitor.end()D"]
23382 [label="org.apache.commons.math3.linear.ArrayRealVector.walkInDefaultOrder(Lorg/apache/commons/math3/linear/RealVectorPreservingVisitor;II)D"]
23387 [label="org.apache.commons.math3.linear.RealVector.checkIndices(II)V"]
23389 [label="org.apache.commons.math3.linear.ArrayRealVector.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealVectorPreservingVisitor;)D"]
23393 [label="org.apache.commons.math3.linear.ArrayRealVector.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealVectorPreservingVisitor;II)D"]
23399 [label="org.apache.commons.math3.linear.ArrayRealVector.walkInDefaultOrder(Lorg/apache/commons/math3/linear/RealVectorChangingVisitor;)D"]
23405 [label="org.apache.commons.math3.linear.RealVectorChangingVisitor.start(III)V"]
23407 [label="org.apache.commons.math3.linear.RealVectorChangingVisitor.visit(ID)D"]
23409 [label="org.apache.commons.math3.linear.RealVectorChangingVisitor.end()D"]
23411 [label="org.apache.commons.math3.linear.ArrayRealVector.walkInDefaultOrder(Lorg/apache/commons/math3/linear/RealVectorChangingVisitor;II)D"]
23416 [label="org.apache.commons.math3.linear.ArrayRealVector.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealVectorChangingVisitor;)D"]
23420 [label="org.apache.commons.math3.linear.ArrayRealVector.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealVectorChangingVisitor;II)D"]
23440 [label="org.apache.commons.math3.linear.BiDiagonalTransformer.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V"]
23449 [label="org.apache.commons.math3.linear.BiDiagonalTransformer.transformToUpperBiDiagonal()V"]
23451 [label="org.apache.commons.math3.linear.BiDiagonalTransformer.transformToLowerBiDiagonal()V"]
23453 [label="org.apache.commons.math3.linear.BiDiagonalTransformer.getU()Lorg/apache/commons/math3/linear/RealMatrix;"]
23455 [label="org.apache.commons.math3.linear.MatrixUtils.createRealMatrix([[D)Lorg/apache/commons/math3/linear/RealMatrix;"]
23457 [label="org.apache.commons.math3.linear.BiDiagonalTransformer.getB()Lorg/apache/commons/math3/linear/RealMatrix;"]
23459 [label="org.apache.commons.math3.linear.BiDiagonalTransformer.getV()Lorg/apache/commons/math3/linear/RealMatrix;"]
23492 [label="org.apache.commons.math3.linear.BlockFieldMatrix.<init>(Lorg/apache/commons/math3/Field;II)V"]
23503 [label="org.apache.commons.math3.linear.BlockFieldMatrix.createBlocksLayout(Lorg/apache/commons/math3/Field;II)[[Lorg/apache/commons/math3/FieldElement;"]
23505 [label="org.apache.commons.math3.linear.BlockFieldMatrix.<init>([[Lorg/apache/commons/math3/FieldElement;)V"]
23508 [label="org.apache.commons.math3.linear.BlockFieldMatrix.<init>(II[[Lorg/apache/commons/math3/FieldElement;Z)V"]
23510 [label="org.apache.commons.math3.linear.BlockFieldMatrix.toBlocksLayout([[Lorg/apache/commons/math3/FieldElement;)[[Lorg/apache/commons/math3/FieldElement;"]
23517 [label="org.apache.commons.math3.linear.BlockFieldMatrix.blockHeight(I)I"]
23519 [label="org.apache.commons.math3.linear.BlockFieldMatrix.blockWidth(I)I"]
23537 [label="org.apache.commons.math3.linear.BlockFieldMatrix.createMatrix(II)Lorg/apache/commons/math3/linear/FieldMatrix;"]
23547 [label="org.apache.commons.math3.linear.BlockFieldMatrix.copy()Lorg/apache/commons/math3/linear/FieldMatrix;"]
23549 [label="org.apache.commons.math3.linear.BlockFieldMatrix.add(Lorg/apache/commons/math3/linear/FieldMatrix;)Lorg/apache/commons/math3/linear/FieldMatrix;"]
23552 [label="org.apache.commons.math3.linear.BlockFieldMatrix.add(Lorg/apache/commons/math3/linear/BlockFieldMatrix;)Lorg/apache/commons/math3/linear/BlockFieldMatrix;"]
23556 [label="org.apache.commons.math3.linear.BlockFieldMatrix.subtract(Lorg/apache/commons/math3/linear/FieldMatrix;)Lorg/apache/commons/math3/linear/FieldMatrix;"]
23559 [label="org.apache.commons.math3.linear.BlockFieldMatrix.subtract(Lorg/apache/commons/math3/linear/BlockFieldMatrix;)Lorg/apache/commons/math3/linear/BlockFieldMatrix;"]
23563 [label="org.apache.commons.math3.linear.BlockFieldMatrix.scalarAdd(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldMatrix;"]
23566 [label="org.apache.commons.math3.linear.BlockFieldMatrix.scalarMultiply(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldMatrix;"]
23569 [label="org.apache.commons.math3.linear.BlockFieldMatrix.multiply(Lorg/apache/commons/math3/linear/FieldMatrix;)Lorg/apache/commons/math3/linear/FieldMatrix;"]
23572 [label="org.apache.commons.math3.linear.BlockFieldMatrix.multiply(Lorg/apache/commons/math3/linear/BlockFieldMatrix;)Lorg/apache/commons/math3/linear/BlockFieldMatrix;"]
23576 [label="org.apache.commons.math3.linear.BlockFieldMatrix.getData()[[Lorg/apache/commons/math3/FieldElement;"]
23578 [label="org.apache.commons.math3.linear.BlockFieldMatrix.getRowDimension()I"]
23580 [label="org.apache.commons.math3.linear.BlockFieldMatrix.getColumnDimension()I"]
23582 [label="org.apache.commons.math3.linear.BlockFieldMatrix.getSubMatrix(IIII)Lorg/apache/commons/math3/linear/FieldMatrix;"]
23588 [label="org.apache.commons.math3.linear.BlockFieldMatrix.copyBlockPart([Lorg/apache/commons/math3/FieldElement;IIIII[Lorg/apache/commons/math3/FieldElement;III)V"]
23601 [label="org.apache.commons.math3.linear.BlockFieldMatrix.setSubMatrix([[Lorg/apache/commons/math3/FieldElement;II)V"]
23606 [label="org.apache.commons.math3.linear.BlockFieldMatrix.getRowMatrix(I)Lorg/apache/commons/math3/linear/FieldMatrix;"]
23609 [label="org.apache.commons.math3.linear.BlockFieldMatrix.setRowMatrix(ILorg/apache/commons/math3/linear/FieldMatrix;)V"]
23613 [label="org.apache.commons.math3.linear.BlockFieldMatrix.setRowMatrix(ILorg/apache/commons/math3/linear/BlockFieldMatrix;)V"]
23619 [label="org.apache.commons.math3.linear.BlockFieldMatrix.getColumnMatrix(I)Lorg/apache/commons/math3/linear/FieldMatrix;"]
23622 [label="org.apache.commons.math3.linear.BlockFieldMatrix.setColumnMatrix(ILorg/apache/commons/math3/linear/FieldMatrix;)V"]
23626 [label="org.apache.commons.math3.linear.BlockFieldMatrix.setColumnMatrix(ILorg/apache/commons/math3/linear/BlockFieldMatrix;)V"]
23632 [label="org.apache.commons.math3.linear.BlockFieldMatrix.getRowVector(I)Lorg/apache/commons/math3/linear/FieldVector;"]
23635 [label="org.apache.commons.math3.linear.BlockFieldMatrix.setRowVector(ILorg/apache/commons/math3/linear/FieldVector;)V"]
23639 [label="org.apache.commons.math3.linear.BlockFieldMatrix.setRow(I[Lorg/apache/commons/math3/FieldElement;)V"]
23642 [label="org.apache.commons.math3.linear.BlockFieldMatrix.getColumnVector(I)Lorg/apache/commons/math3/linear/FieldVector;"]
23645 [label="org.apache.commons.math3.linear.BlockFieldMatrix.setColumnVector(ILorg/apache/commons/math3/linear/FieldVector;)V"]
23649 [label="org.apache.commons.math3.linear.BlockFieldMatrix.setColumn(I[Lorg/apache/commons/math3/FieldElement;)V"]
23652 [label="org.apache.commons.math3.linear.BlockFieldMatrix.getRow(I)[Lorg/apache/commons/math3/FieldElement;"]
23658 [label="org.apache.commons.math3.linear.BlockFieldMatrix.getColumn(I)[Lorg/apache/commons/math3/FieldElement;"]
23664 [label="org.apache.commons.math3.linear.BlockFieldMatrix.getEntry(II)Lorg/apache/commons/math3/FieldElement;"]
23668 [label="org.apache.commons.math3.linear.BlockFieldMatrix.setEntry(IILorg/apache/commons/math3/FieldElement;)V"]
23673 [label="org.apache.commons.math3.linear.BlockFieldMatrix.addToEntry(IILorg/apache/commons/math3/FieldElement;)V"]
23678 [label="org.apache.commons.math3.linear.BlockFieldMatrix.multiplyEntry(IILorg/apache/commons/math3/FieldElement;)V"]
23683 [label="org.apache.commons.math3.linear.BlockFieldMatrix.transpose()Lorg/apache/commons/math3/linear/FieldMatrix;"]
23687 [label="org.apache.commons.math3.linear.BlockFieldMatrix.operate([Lorg/apache/commons/math3/FieldElement;)[Lorg/apache/commons/math3/FieldElement;"]
23690 [label="org.apache.commons.math3.linear.BlockFieldMatrix.preMultiply([Lorg/apache/commons/math3/FieldElement;)[Lorg/apache/commons/math3/FieldElement;"]
23693 [label="org.apache.commons.math3.linear.BlockFieldMatrix.walkInRowOrder(Lorg/apache/commons/math3/linear/FieldMatrixChangingVisitor;)Lorg/apache/commons/math3/FieldElement;"]
23696 [label="org.apache.commons.math3.linear.BlockFieldMatrix.walkInRowOrder(Lorg/apache/commons/math3/linear/FieldMatrixPreservingVisitor;)Lorg/apache/commons/math3/FieldElement;"]
23699 [label="org.apache.commons.math3.linear.BlockFieldMatrix.walkInRowOrder(Lorg/apache/commons/math3/linear/FieldMatrixChangingVisitor;IIII)Lorg/apache/commons/math3/FieldElement;"]
23706 [label="org.apache.commons.math3.linear.BlockFieldMatrix.walkInRowOrder(Lorg/apache/commons/math3/linear/FieldMatrixPreservingVisitor;IIII)Lorg/apache/commons/math3/FieldElement;"]
23713 [label="org.apache.commons.math3.linear.BlockFieldMatrix.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/FieldMatrixChangingVisitor;)Lorg/apache/commons/math3/FieldElement;"]
23716 [label="org.apache.commons.math3.linear.BlockFieldMatrix.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/FieldMatrixPreservingVisitor;)Lorg/apache/commons/math3/FieldElement;"]
23719 [label="org.apache.commons.math3.linear.BlockFieldMatrix.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/FieldMatrixChangingVisitor;IIII)Lorg/apache/commons/math3/FieldElement;"]
23726 [label="org.apache.commons.math3.linear.BlockFieldMatrix.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/FieldMatrixPreservingVisitor;IIII)Lorg/apache/commons/math3/FieldElement;"]
23753 [label="org.apache.commons.math3.linear.BlockRealMatrix.<init>(II)V"]
23763 [label="org.apache.commons.math3.linear.BlockRealMatrix.createBlocksLayout(II)[[D"]
23765 [label="org.apache.commons.math3.linear.BlockRealMatrix.<init>([[D)V"]
23768 [label="org.apache.commons.math3.linear.BlockRealMatrix.<init>(II[[DZ)V"]
23770 [label="org.apache.commons.math3.linear.BlockRealMatrix.toBlocksLayout([[D)[[D"]
23777 [label="org.apache.commons.math3.linear.BlockRealMatrix.blockHeight(I)I"]
23779 [label="org.apache.commons.math3.linear.BlockRealMatrix.blockWidth(I)I"]
23786 [label="org.apache.commons.math3.linear.BlockRealMatrix.createMatrix(II)Lorg/apache/commons/math3/linear/BlockRealMatrix;"]
23793 [label="org.apache.commons.math3.linear.BlockRealMatrix.copy()Lorg/apache/commons/math3/linear/BlockRealMatrix;"]
23795 [label="org.apache.commons.math3.linear.BlockRealMatrix.add(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/BlockRealMatrix;"]
23798 [label="org.apache.commons.math3.linear.BlockRealMatrix.add(Lorg/apache/commons/math3/linear/BlockRealMatrix;)Lorg/apache/commons/math3/linear/BlockRealMatrix;"]
23802 [label="org.apache.commons.math3.linear.BlockRealMatrix.subtract(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/BlockRealMatrix;"]
23805 [label="org.apache.commons.math3.linear.BlockRealMatrix.subtract(Lorg/apache/commons/math3/linear/BlockRealMatrix;)Lorg/apache/commons/math3/linear/BlockRealMatrix;"]
23809 [label="org.apache.commons.math3.linear.BlockRealMatrix.scalarAdd(D)Lorg/apache/commons/math3/linear/BlockRealMatrix;"]
23812 [label="org.apache.commons.math3.linear.BlockRealMatrix.scalarMultiply(D)Lorg/apache/commons/math3/linear/RealMatrix;"]
23815 [label="org.apache.commons.math3.linear.BlockRealMatrix.multiply(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/BlockRealMatrix;"]
23818 [label="org.apache.commons.math3.linear.BlockRealMatrix.multiply(Lorg/apache/commons/math3/linear/BlockRealMatrix;)Lorg/apache/commons/math3/linear/BlockRealMatrix;"]
23822 [label="org.apache.commons.math3.linear.BlockRealMatrix.getData()[[D"]
23824 [label="org.apache.commons.math3.linear.BlockRealMatrix.getRowDimension()I"]
23826 [label="org.apache.commons.math3.linear.BlockRealMatrix.getColumnDimension()I"]
23828 [label="org.apache.commons.math3.linear.BlockRealMatrix.getNorm()D"]
23830 [label="org.apache.commons.math3.linear.BlockRealMatrix.getFrobeniusNorm()D"]
23832 [label="org.apache.commons.math3.linear.BlockRealMatrix.getSubMatrix(IIII)Lorg/apache/commons/math3/linear/BlockRealMatrix;"]
23838 [label="org.apache.commons.math3.linear.BlockRealMatrix.copyBlockPart([DIIIII[DIII)V"]
23851 [label="org.apache.commons.math3.linear.BlockRealMatrix.setSubMatrix([[DII)V"]
23856 [label="org.apache.commons.math3.linear.BlockRealMatrix.getRowMatrix(I)Lorg/apache/commons/math3/linear/BlockRealMatrix;"]
23859 [label="org.apache.commons.math3.linear.BlockRealMatrix.setRowMatrix(ILorg/apache/commons/math3/linear/RealMatrix;)V"]
23863 [label="org.apache.commons.math3.linear.BlockRealMatrix.setRowMatrix(ILorg/apache/commons/math3/linear/BlockRealMatrix;)V"]
23869 [label="org.apache.commons.math3.linear.BlockRealMatrix.getColumnMatrix(I)Lorg/apache/commons/math3/linear/BlockRealMatrix;"]
23872 [label="org.apache.commons.math3.linear.BlockRealMatrix.setColumnMatrix(ILorg/apache/commons/math3/linear/RealMatrix;)V"]
23876 [label="org.apache.commons.math3.linear.BlockRealMatrix.setColumnMatrix(ILorg/apache/commons/math3/linear/BlockRealMatrix;)V"]
23882 [label="org.apache.commons.math3.linear.BlockRealMatrix.getRowVector(I)Lorg/apache/commons/math3/linear/RealVector;"]
23885 [label="org.apache.commons.math3.linear.BlockRealMatrix.setRowVector(ILorg/apache/commons/math3/linear/RealVector;)V"]
23889 [label="org.apache.commons.math3.linear.BlockRealMatrix.setRow(I[D)V"]
23892 [label="org.apache.commons.math3.linear.BlockRealMatrix.getColumnVector(I)Lorg/apache/commons/math3/linear/RealVector;"]
23895 [label="org.apache.commons.math3.linear.BlockRealMatrix.setColumnVector(ILorg/apache/commons/math3/linear/RealVector;)V"]
23899 [label="org.apache.commons.math3.linear.BlockRealMatrix.setColumn(I[D)V"]
23902 [label="org.apache.commons.math3.linear.BlockRealMatrix.getRow(I)[D"]
23908 [label="org.apache.commons.math3.linear.BlockRealMatrix.getColumn(I)[D"]
23914 [label="org.apache.commons.math3.linear.BlockRealMatrix.getEntry(II)D"]
23918 [label="org.apache.commons.math3.linear.BlockRealMatrix.setEntry(IID)V"]
23923 [label="org.apache.commons.math3.linear.BlockRealMatrix.addToEntry(IID)V"]
23928 [label="org.apache.commons.math3.linear.BlockRealMatrix.multiplyEntry(IID)V"]
23933 [label="org.apache.commons.math3.linear.BlockRealMatrix.transpose()Lorg/apache/commons/math3/linear/BlockRealMatrix;"]
23937 [label="org.apache.commons.math3.linear.BlockRealMatrix.operate([D)[D"]
23940 [label="org.apache.commons.math3.linear.BlockRealMatrix.preMultiply([D)[D"]
23943 [label="org.apache.commons.math3.linear.BlockRealMatrix.walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D"]
23946 [label="org.apache.commons.math3.linear.BlockRealMatrix.walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D"]
23949 [label="org.apache.commons.math3.linear.BlockRealMatrix.walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D"]
23956 [label="org.apache.commons.math3.linear.BlockRealMatrix.walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D"]
23963 [label="org.apache.commons.math3.linear.BlockRealMatrix.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;)D"]
23966 [label="org.apache.commons.math3.linear.BlockRealMatrix.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D"]
23969 [label="org.apache.commons.math3.linear.BlockRealMatrix.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealMatrixChangingVisitor;IIII)D"]
23976 [label="org.apache.commons.math3.linear.BlockRealMatrix.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D"]
24012 [label="org.apache.commons.math3.linear.NonSymmetricMatrixException.<init>(IID)V"]
24014 [label="org.apache.commons.math3.linear.CholeskyDecomposition.getL()Lorg/apache/commons/math3/linear/RealMatrix;"]
24016 [label="org.apache.commons.math3.linear.CholeskyDecomposition.getLT()Lorg/apache/commons/math3/linear/RealMatrix;"]
24025 [label="org.apache.commons.math3.linear.CholeskyDecomposition$Solver.<init>([[D)V"]
24035 [label="org.apache.commons.math3.linear.CholeskyDecomposition$Solver.solve(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
24038 [label="org.apache.commons.math3.linear.CholeskyDecomposition$Solver.solve(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;"]
24041 [label="org.apache.commons.math3.linear.CholeskyDecomposition$Solver.getInverse()Lorg/apache/commons/math3/linear/RealMatrix;"]
24057 [label="org.apache.commons.math3.linear.ConjugateGradient.<init>(IDZ)V"]
24062 [label="org.apache.commons.math3.linear.PreconditionedIterativeLinearSolver.<init>(I)V"]
24066 [label="org.apache.commons.math3.linear.ConjugateGradient.<init>(Lorg/apache/commons/math3/util/IterationManager;DZ)V"]
24074 [label="org.apache.commons.math3.linear.PreconditionedIterativeLinearSolver.<init>(Lorg/apache/commons/math3/util/IterationManager;)V"]
24078 [label="org.apache.commons.math3.linear.ConjugateGradient.solveInPlace(Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
24090 [label="org.apache.commons.math3.linear.PreconditionedIterativeLinearSolver.checkParameters(Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;)V"]
24092 [label="org.apache.commons.math3.linear.IterativeLinearSolver.getIterationManager()Lorg/apache/commons/math3/util/IterationManager;"]
24094 [label="org.apache.commons.math3.util.IterationManager.resetIterationCount()V"]
24096 [label="org.apache.commons.math3.linear.RealVector.unmodifiableRealVector(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
24098 [label="org.apache.commons.math3.util.IterationManager.incrementIterationCount()V"]
24100 [label="org.apache.commons.math3.linear.RealLinearOperator.operate(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
24102 [label="org.apache.commons.math3.linear.RealVector.combine(DDLorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
24110 [label="org.apache.commons.math3.linear.DefaultIterativeLinearSolverEvent.<init>(Ljava/lang/Object;ILorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;D)V"]
24112 [label="org.apache.commons.math3.util.IterationManager.getIterations()I"]
24114 [label="org.apache.commons.math3.util.IterationManager.fireInitializationEvent(Lorg/apache/commons/math3/util/IterationEvent;)V"]
24116 [label="org.apache.commons.math3.util.IterationManager.fireTerminationEvent(Lorg/apache/commons/math3/util/IterationEvent;)V"]
24118 [label="org.apache.commons.math3.util.IterationManager.fireIterationStartedEvent(Lorg/apache/commons/math3/util/IterationEvent;)V"]
24120 [label="org.apache.commons.math3.linear.NonPositiveDefiniteOperatorException.<init>()V"]
24126 [label="org.apache.commons.math3.linear.RealVector.setSubVector(ILorg/apache/commons/math3/linear/RealVector;)V"]
24128 [label="org.apache.commons.math3.linear.RealVector.combineToSelf(DDLorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
24130 [label="org.apache.commons.math3.util.IterationManager.fireIterationPerformedEvent(Lorg/apache/commons/math3/util/IterationEvent;)V"]
24137 [label="org.apache.commons.math3.linear.DecompositionSolver.isNonSingular()Z"]
24206 [label="org.apache.commons.math3.linear.IterativeLinearSolverEvent.<init>(Ljava/lang/Object;I)V"]
24212 [label="org.apache.commons.math3.linear.DefaultIterativeLinearSolverEvent.<init>(Ljava/lang/Object;ILorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;D)V"]
24221 [label="org.apache.commons.math3.linear.DefaultIterativeLinearSolverEvent.getResidual()Lorg/apache/commons/math3/linear/RealVector;"]
24272 [label="org.apache.commons.math3.linear.DiagonalMatrix.<init>([DZ)V"]
24277 [label="org.apache.commons.math3.linear.DiagonalMatrix.createMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix;"]
24281 [label="org.apache.commons.math3.linear.DiagonalMatrix.copy()Lorg/apache/commons/math3/linear/RealMatrix;"]
24283 [label="org.apache.commons.math3.linear.DiagonalMatrix.add(Lorg/apache/commons/math3/linear/DiagonalMatrix;)Lorg/apache/commons/math3/linear/DiagonalMatrix;"]
24286 [label="org.apache.commons.math3.linear.DiagonalMatrix.getRowDimension()I"]
24288 [label="org.apache.commons.math3.linear.DiagonalMatrix.subtract(Lorg/apache/commons/math3/linear/DiagonalMatrix;)Lorg/apache/commons/math3/linear/DiagonalMatrix;"]
24291 [label="org.apache.commons.math3.linear.DiagonalMatrix.multiply(Lorg/apache/commons/math3/linear/DiagonalMatrix;)Lorg/apache/commons/math3/linear/DiagonalMatrix;"]
24294 [label="org.apache.commons.math3.linear.DiagonalMatrix.multiply(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;"]
24298 [label="org.apache.commons.math3.linear.DiagonalMatrix.getData()[[D"]
24300 [label="org.apache.commons.math3.linear.DiagonalMatrix.getDataRef()[D"]
24302 [label="org.apache.commons.math3.linear.DiagonalMatrix.getEntry(II)D"]
24306 [label="org.apache.commons.math3.linear.DiagonalMatrix.setEntry(IID)V"]
24311 [label="org.apache.commons.math3.linear.DiagonalMatrix.ensureZero(D)V"]
24313 [label="org.apache.commons.math3.linear.DiagonalMatrix.addToEntry(IID)V"]
24318 [label="org.apache.commons.math3.linear.DiagonalMatrix.multiplyEntry(IID)V"]
24326 [label="org.apache.commons.math3.linear.DiagonalMatrix.operate([D)[D"]
24330 [label="org.apache.commons.math3.linear.DiagonalMatrix.preMultiply([D)[D"]
24334 [label="org.apache.commons.math3.linear.DiagonalMatrix.preMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
24337 [label="org.apache.commons.math3.linear.MatrixUtils.createRealVector([D)Lorg/apache/commons/math3/linear/RealVector;"]
24342 [label="org.apache.commons.math3.linear.DiagonalMatrix.inverse()Lorg/apache/commons/math3/linear/DiagonalMatrix;"]
24344 [label="org.apache.commons.math3.linear.DiagonalMatrix.inverse(D)Lorg/apache/commons/math3/linear/DiagonalMatrix;"]
24348 [label="org.apache.commons.math3.linear.DiagonalMatrix.isSingular(D)Z"]
24350 [label="org.apache.commons.math3.linear.SingularMatrixException.<init>()V"]
24386 [label="org.apache.commons.math3.linear.MatrixUtils.isSymmetric(Lorg/apache/commons/math3/linear/RealMatrix;D)Z"]
24388 [label="org.apache.commons.math3.linear.EigenDecomposition.transformToTridiagonal(Lorg/apache/commons/math3/linear/RealMatrix;)V"]
24390 [label="org.apache.commons.math3.linear.EigenDecomposition.findEigenVectors([[D)V"]
24392 [label="org.apache.commons.math3.linear.TriDiagonalTransformer.getQ()Lorg/apache/commons/math3/linear/RealMatrix;"]
24398 [label="org.apache.commons.math3.linear.EigenDecomposition.transformToSchur(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/SchurTransformer;"]
24400 [label="org.apache.commons.math3.linear.EigenDecomposition.findEigenVectorsFromSchur(Lorg/apache/commons/math3/linear/SchurTransformer;)V"]
24402 [label="org.apache.commons.math3.linear.EigenDecomposition.<init>(Lorg/apache/commons/math3/linear/RealMatrix;D)V"]
24406 [label="org.apache.commons.math3.linear.EigenDecomposition.<init>([D[D)V"]
24412 [label="org.apache.commons.math3.linear.EigenDecomposition.<init>([D[DD)V"]
24418 [label="org.apache.commons.math3.linear.EigenDecomposition.getV()Lorg/apache/commons/math3/linear/RealMatrix;"]
24422 [label="org.apache.commons.math3.linear.RealMatrix.setColumnVector(ILorg/apache/commons/math3/linear/RealVector;)V"]
24424 [label="org.apache.commons.math3.linear.EigenDecomposition.getD()Lorg/apache/commons/math3/linear/RealMatrix;"]
24427 [label="org.apache.commons.math3.linear.MatrixUtils.createRealDiagonalMatrix([D)Lorg/apache/commons/math3/linear/RealMatrix;"]
24432 [label="org.apache.commons.math3.linear.EigenDecomposition.getVT()Lorg/apache/commons/math3/linear/RealMatrix;"]
24435 [label="org.apache.commons.math3.linear.RealMatrix.setRowVector(ILorg/apache/commons/math3/linear/RealVector;)V"]
24437 [label="org.apache.commons.math3.linear.EigenDecomposition.hasComplexEigenvalues()Z"]
24443 [label="org.apache.commons.math3.linear.EigenDecomposition.getImagEigenvalues()[D"]
24459 [label="org.apache.commons.math3.linear.EigenDecomposition$Solver.<init>([D[D[Lorg/apache/commons/math3/linear/ArrayRealVector;)V"]
24475 [label="org.apache.commons.math3.linear.EigenDecomposition$Solver.solve(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
24478 [label="org.apache.commons.math3.linear.EigenDecomposition$Solver.isNonSingular()Z"]
24480 [label="org.apache.commons.math3.linear.EigenDecomposition$Solver.solve(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;"]
24485 [label="org.apache.commons.math3.linear.EigenDecomposition$Solver.eigenvalueNorm(I)D"]
24489 [label="org.apache.commons.math3.linear.EigenDecomposition$Solver.getInverse()Lorg/apache/commons/math3/linear/RealMatrix;"]
24493 [label="org.apache.commons.math3.linear.TriDiagonalTransformer.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V"]
24495 [label="org.apache.commons.math3.linear.TriDiagonalTransformer.getMainDiagonalRef()[D"]
24497 [label="org.apache.commons.math3.linear.TriDiagonalTransformer.getSecondaryDiagonalRef()[D"]
24504 [label="org.apache.commons.math3.linear.SchurTransformer.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V"]
24506 [label="org.apache.commons.math3.linear.SchurTransformer.getT()Lorg/apache/commons/math3/linear/RealMatrix;"]
24508 [label="org.apache.commons.math3.linear.EigenDecomposition.cdiv(DDDD)Lorg/apache/commons/math3/complex/Complex;"]
24516 [label="org.apache.commons.math3.linear.SchurTransformer.getP()Lorg/apache/commons/math3/linear/RealMatrix;"]
24521 [label="org.apache.commons.math3.linear.FieldDecompositionSolver.solve(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldVector;"]
24527 [label="org.apache.commons.math3.linear.FieldDecompositionSolver.solve(Lorg/apache/commons/math3/linear/FieldMatrix;)Lorg/apache/commons/math3/linear/FieldMatrix;"]
24557 [label="org.apache.commons.math3.linear.FieldLUDecomposition.<init>(Lorg/apache/commons/math3/linear/FieldMatrix;)V"]
24561 [label="org.apache.commons.math3.linear.FieldMatrix.getField()Lorg/apache/commons/math3/Field;"]
24564 [label="org.apache.commons.math3.linear.FieldMatrix.getData()[[Lorg/apache/commons/math3/FieldElement;"]
24572 [label="org.apache.commons.math3.linear.FieldLUDecomposition.getL()Lorg/apache/commons/math3/linear/FieldMatrix;"]
24574 [label="org.apache.commons.math3.linear.FieldLUDecomposition.getU()Lorg/apache/commons/math3/linear/FieldMatrix;"]
24576 [label="org.apache.commons.math3.linear.FieldLUDecomposition.getP()Lorg/apache/commons/math3/linear/FieldMatrix;"]
24578 [label="org.apache.commons.math3.linear.FieldLUDecomposition.getPivot()[I"]
24580 [label="org.apache.commons.math3.linear.FieldLUDecomposition.getDeterminant()Lorg/apache/commons/math3/FieldElement;"]
24582 [label="org.apache.commons.math3.linear.FieldLUDecomposition.getSolver()Lorg/apache/commons/math3/linear/FieldDecompositionSolver;"]
24593 [label="org.apache.commons.math3.linear.FieldLUDecomposition$Solver.<init>(Lorg/apache/commons/math3/Field;[[Lorg/apache/commons/math3/FieldElement;[IZ)V"]
24622 [label="org.apache.commons.math3.linear.FieldLUDecomposition$Solver.solve(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldVector;"]
24625 [label="org.apache.commons.math3.linear.FieldLUDecomposition$Solver.solve(Lorg/apache/commons/math3/linear/ArrayFieldVector;)Lorg/apache/commons/math3/linear/ArrayFieldVector;"]
24630 [label="org.apache.commons.math3.linear.FieldLUDecomposition$Solver.solve(Lorg/apache/commons/math3/linear/FieldMatrix;)Lorg/apache/commons/math3/linear/FieldMatrix;"]
24633 [label="org.apache.commons.math3.linear.FieldLUDecomposition$Solver.getInverse()Lorg/apache/commons/math3/linear/FieldMatrix;"]
24815 [label="org.apache.commons.math3.linear.FieldMatrix.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/FieldMatrixPreservingVisitor;)Lorg/apache/commons/math3/FieldElement;"]
24883 [label="org.apache.commons.math3.linear.FieldVector.mapAddToSelf(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;"]
24889 [label="org.apache.commons.math3.linear.FieldVector.mapSubtractToSelf(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;"]
24894 [label="org.apache.commons.math3.linear.FieldVector.mapMultiplyToSelf(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;"]
24900 [label="org.apache.commons.math3.linear.FieldVector.mapDivideToSelf(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;"]
24905 [label="org.apache.commons.math3.linear.FieldVector.mapInvToSelf()Lorg/apache/commons/math3/linear/FieldVector;"]
24926 [label="org.apache.commons.math3.linear.FieldVector.setEntry(ILorg/apache/commons/math3/FieldElement;)V"]
24985 [label="org.apache.commons.math3.linear.HessenbergTransformer.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V"]
24993 [label="org.apache.commons.math3.linear.HessenbergTransformer.transform()V"]
24995 [label="org.apache.commons.math3.linear.HessenbergTransformer.getP()Lorg/apache/commons/math3/linear/RealMatrix;"]
24997 [label="org.apache.commons.math3.linear.HessenbergTransformer.getPT()Lorg/apache/commons/math3/linear/RealMatrix;"]
25000 [label="org.apache.commons.math3.linear.HessenbergTransformer.getH()Lorg/apache/commons/math3/linear/RealMatrix;"]
25009 [label="org.apache.commons.math3.linear.IllConditionedOperatorException.<init>(D)V"]
25017 [label="org.apache.commons.math3.linear.IterativeLinearSolver.<init>(I)V"]
25021 [label="org.apache.commons.math3.util.IterationManager.<init>(I)V"]
25023 [label="org.apache.commons.math3.linear.IterativeLinearSolver.<init>(Lorg/apache/commons/math3/util/IterationManager;)V"]
25026 [label="org.apache.commons.math3.linear.IterativeLinearSolver.checkParameters(Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;)V"]
25031 [label="org.apache.commons.math3.linear.RealLinearOperator.getRowDimension()I"]
25033 [label="org.apache.commons.math3.linear.RealLinearOperator.getColumnDimension()I"]
25035 [label="org.apache.commons.math3.linear.NonSquareOperatorException.<init>(II)V"]
25038 [label="org.apache.commons.math3.linear.IterativeLinearSolver.solve(Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
25042 [label="org.apache.commons.math3.linear.RealVector.set(D)V"]
25044 [label="org.apache.commons.math3.linear.IterativeLinearSolver.solveInPlace(Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
25046 [label="org.apache.commons.math3.linear.IterativeLinearSolver.solve(Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
25064 [label="org.apache.commons.math3.util.IterationEvent.<init>(Ljava/lang/Object;I)V"]
25070 [label="org.apache.commons.math3.linear.IterativeLinearSolverEvent.getResidual()Lorg/apache/commons/math3/linear/RealVector;"]
25080 [label="org.apache.commons.math3.linear.JacobiPreconditioner.<init>([DZ)V"]
25085 [label="org.apache.commons.math3.linear.JacobiPreconditioner.create(Lorg/apache/commons/math3/linear/RealLinearOperator;)Lorg/apache/commons/math3/linear/JacobiPreconditioner;"]
25093 [label="org.apache.commons.math3.linear.JacobiPreconditioner.getColumnDimension()I"]
25095 [label="org.apache.commons.math3.linear.JacobiPreconditioner.getRowDimension()I"]
25097 [label="org.apache.commons.math3.linear.JacobiPreconditioner.operate(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
25100 [label="org.apache.commons.math3.util.MathArrays.ebeDivide([D[D)[D"]
25103 [label="org.apache.commons.math3.linear.JacobiPreconditioner.sqrt()Lorg/apache/commons/math3/linear/RealLinearOperator;"]
25109 [label="org.apache.commons.math3.linear.JacobiPreconditioner$1.<init>()V"]
25112 [label="org.apache.commons.math3.linear.JacobiPreconditioner$1.operate(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
25115 [label="org.apache.commons.math3.linear.JacobiPreconditioner$1.getRowDimension()I"]
25117 [label="org.apache.commons.math3.linear.JacobiPreconditioner$1.getColumnDimension()I"]
25136 [label="org.apache.commons.math3.linear.LUDecomposition.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V"]
25150 [label="org.apache.commons.math3.linear.LUDecomposition.getL()Lorg/apache/commons/math3/linear/RealMatrix;"]
25152 [label="org.apache.commons.math3.linear.LUDecomposition.getU()Lorg/apache/commons/math3/linear/RealMatrix;"]
25154 [label="org.apache.commons.math3.linear.LUDecomposition.getP()Lorg/apache/commons/math3/linear/RealMatrix;"]
25156 [label="org.apache.commons.math3.linear.LUDecomposition.getPivot()[I"]
25164 [label="org.apache.commons.math3.linear.LUDecomposition$Solver.<init>([[D[IZ)V"]
25182 [label="org.apache.commons.math3.linear.LUDecomposition$Solver.solve(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
25185 [label="org.apache.commons.math3.linear.LUDecomposition$Solver.solve(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;"]
25188 [label="org.apache.commons.math3.linear.LUDecomposition$Solver.getInverse()Lorg/apache/commons/math3/linear/RealMatrix;"]
25202 [label="org.apache.commons.math3.linear.MatrixDimensionMismatchException.getWrongRowDimension()I"]
25205 [label="org.apache.commons.math3.linear.MatrixDimensionMismatchException.getExpectedRowDimension()I"]
25208 [label="org.apache.commons.math3.linear.MatrixDimensionMismatchException.getWrongColumnDimension()I"]
25210 [label="org.apache.commons.math3.linear.MatrixDimensionMismatchException.getExpectedColumnDimension()I"]
25216 [label="org.apache.commons.math3.linear.RealMatrixFormat.getInstance()Lorg/apache/commons/math3/linear/RealMatrixFormat;"]
25220 [label="org.apache.commons.math3.linear.MatrixUtils.<init>()V"]
25225 [label="org.apache.commons.math3.linear.MatrixUtils.createFieldMatrix(Lorg/apache/commons/math3/Field;II)Lorg/apache/commons/math3/linear/FieldMatrix;"]
25236 [label="org.apache.commons.math3.linear.MatrixUtils.createFieldMatrix([[Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldMatrix;"]
25258 [label="org.apache.commons.math3.linear.MatrixUtils.createFieldDiagonalMatrix([Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldMatrix;"]
25268 [label="org.apache.commons.math3.linear.MatrixUtils.createFieldVector([Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;"]
25275 [label="org.apache.commons.math3.linear.MatrixUtils.createRowRealMatrix([D)Lorg/apache/commons/math3/linear/RealMatrix;"]
25278 [label="org.apache.commons.math3.linear.MatrixUtils.createRowFieldMatrix([Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldMatrix;"]
25285 [label="org.apache.commons.math3.linear.MatrixUtils.createColumnRealMatrix([D)Lorg/apache/commons/math3/linear/RealMatrix;"]
25288 [label="org.apache.commons.math3.linear.MatrixUtils.createColumnFieldMatrix([Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldMatrix;"]
25295 [label="org.apache.commons.math3.linear.MatrixUtils.isSymmetricInternal(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z"]
25300 [label="org.apache.commons.math3.linear.MatrixUtils.checkSymmetric(Lorg/apache/commons/math3/linear/RealMatrix;D)V"]
25339 [label="org.apache.commons.math3.linear.MatrixUtils.fractionMatrixToRealMatrix(Lorg/apache/commons/math3/linear/FieldMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;"]
25348 [label="org.apache.commons.math3.linear.MatrixUtils$FractionMatrixConverter.<init>()V"]
25351 [label="org.apache.commons.math3.linear.MatrixUtils$FractionMatrixConverter.getConvertedMatrix()Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;"]
25369 [label="org.apache.commons.math3.linear.MatrixUtils$FractionMatrixConverter.visit(IILorg/apache/commons/math3/fraction/Fraction;)V"]
25375 [label="org.apache.commons.math3.linear.MatrixUtils.bigFractionMatrixToRealMatrix(Lorg/apache/commons/math3/linear/FieldMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;"]
25381 [label="org.apache.commons.math3.linear.MatrixUtils$BigFractionMatrixConverter.<init>()V"]
25383 [label="org.apache.commons.math3.linear.MatrixUtils$BigFractionMatrixConverter.getConvertedMatrix()Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;"]
25401 [label="org.apache.commons.math3.linear.MatrixUtils$BigFractionMatrixConverter.visit(IILorg/apache/commons/math3/fraction/BigFraction;)V"]
25407 [label="org.apache.commons.math3.linear.MatrixUtils.serializeRealVector(Lorg/apache/commons/math3/linear/RealVector;Ljava/io/ObjectOutputStream;)V"]
25411 [label="java.io.ObjectOutputStream.writeDouble(D)V"]
25413 [label="org.apache.commons.math3.linear.MatrixUtils.deserializeRealVector(Ljava/lang/Object;Ljava/lang/String;Ljava/io/ObjectInputStream;)V"]
25418 [label="java.io.ObjectInputStream.readDouble()D"]
25423 [label="java.lang.Class.getDeclaredField(Ljava/lang/String;)Ljava/lang/reflect/Field;"]
25425 [label="java.lang.reflect.AccessibleObject.setAccessible(Z)V"]
25427 [label="java.lang.reflect.Field.set(Ljava/lang/Object;Ljava/lang/Object;)V"]
25432 [label="java.io.IOException.<init>()V"]
25434 [label="java.lang.Throwable.initCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;"]
25439 [label="org.apache.commons.math3.linear.MatrixUtils.serializeRealMatrix(Lorg/apache/commons/math3/linear/RealMatrix;Ljava/io/ObjectOutputStream;)V"]
25443 [label="org.apache.commons.math3.linear.MatrixUtils.deserializeRealMatrix(Ljava/lang/Object;Ljava/lang/String;Ljava/io/ObjectInputStream;)V"]
25448 [label="org.apache.commons.math3.linear.MatrixUtils.solveLowerTriangularSystem(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealVector;)V"]
25452 [label="org.apache.commons.math3.linear.MatrixUtils.solveUpperTriangularSystem(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealVector;)V"]
25456 [label="org.apache.commons.math3.linear.MatrixUtils.blockInverse(Lorg/apache/commons/math3/linear/RealMatrix;I)Lorg/apache/commons/math3/linear/RealMatrix;"]
25460 [label="org.apache.commons.math3.linear.RealMatrix.getSubMatrix(IIII)Lorg/apache/commons/math3/linear/RealMatrix;"]
25463 [label="org.apache.commons.math3.linear.RealMatrix.setSubMatrix([[DII)V"]
25465 [label="org.apache.commons.math3.linear.MatrixUtils.inverse(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;"]
25468 [label="org.apache.commons.math3.linear.MatrixUtils.inverse(Lorg/apache/commons/math3/linear/RealMatrix;D)Lorg/apache/commons/math3/linear/RealMatrix;"]
25503 [label="org.apache.commons.math3.linear.NonSelfAdjointOperatorException.<init>()V"]
25559 [label="org.apache.commons.math3.linear.OpenMapRealMatrix.<init>(II)V"]
25566 [label="org.apache.commons.math3.util.OpenIntToDoubleHashMap.<init>(D)V"]
25568 [label="org.apache.commons.math3.linear.OpenMapRealMatrix.<init>(Lorg/apache/commons/math3/linear/OpenMapRealMatrix;)V"]
25573 [label="org.apache.commons.math3.util.OpenIntToDoubleHashMap.<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V"]
25575 [label="org.apache.commons.math3.linear.OpenMapRealMatrix.copy()Lorg/apache/commons/math3/linear/OpenMapRealMatrix;"]
25578 [label="org.apache.commons.math3.linear.OpenMapRealMatrix.createMatrix(II)Lorg/apache/commons/math3/linear/OpenMapRealMatrix;"]
25583 [label="org.apache.commons.math3.linear.OpenMapRealMatrix.getColumnDimension()I"]
25585 [label="org.apache.commons.math3.linear.OpenMapRealMatrix.add(Lorg/apache/commons/math3/linear/OpenMapRealMatrix;)Lorg/apache/commons/math3/linear/OpenMapRealMatrix;"]
25588 [label="org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.advance()V"]
25590 [label="org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.key()I"]
25592 [label="org.apache.commons.math3.linear.OpenMapRealMatrix.setEntry(IID)V"]
25594 [label="org.apache.commons.math3.linear.OpenMapRealMatrix.getEntry(II)D"]
25596 [label="org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.value()D"]
25601 [label="org.apache.commons.math3.util.OpenIntToDoubleHashMap.iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator;"]
25603 [label="org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.hasNext()Z"]
25605 [label="org.apache.commons.math3.linear.OpenMapRealMatrix.subtract(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/OpenMapRealMatrix;"]
25608 [label="org.apache.commons.math3.linear.OpenMapRealMatrix.subtract(Lorg/apache/commons/math3/linear/OpenMapRealMatrix;)Lorg/apache/commons/math3/linear/OpenMapRealMatrix;"]
25613 [label="org.apache.commons.math3.linear.OpenMapRealMatrix.multiply(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;"]
25616 [label="org.apache.commons.math3.linear.OpenMapRealMatrix.multiply(Lorg/apache/commons/math3/linear/OpenMapRealMatrix;)Lorg/apache/commons/math3/linear/OpenMapRealMatrix;"]
25622 [label="org.apache.commons.math3.linear.OpenMapRealMatrix.computeKey(II)I"]
25624 [label="org.apache.commons.math3.util.OpenIntToDoubleHashMap.containsKey(I)Z"]
25626 [label="org.apache.commons.math3.util.OpenIntToDoubleHashMap.get(I)D"]
25628 [label="org.apache.commons.math3.util.OpenIntToDoubleHashMap.remove(I)D"]
25630 [label="org.apache.commons.math3.util.OpenIntToDoubleHashMap.put(ID)D"]
25641 [label="org.apache.commons.math3.linear.OpenMapRealMatrix.addToEntry(IID)V"]
25646 [label="org.apache.commons.math3.linear.OpenMapRealMatrix.multiplyEntry(IID)V"]
25669 [label="org.apache.commons.math3.linear.OpenMapRealVector.<init>()V"]
25671 [label="org.apache.commons.math3.linear.OpenMapRealVector.<init>(ID)V"]
25674 [label="org.apache.commons.math3.linear.OpenMapRealVector.<init>(I)V"]
25680 [label="org.apache.commons.math3.linear.SparseRealVector.<init>()V"]
25685 [label="org.apache.commons.math3.linear.OpenMapRealVector.<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;I)V"]
25691 [label="org.apache.commons.math3.linear.OpenMapRealVector.getDimension()I"]
25693 [label="org.apache.commons.math3.linear.OpenMapRealVector.<init>(II)V"]
25697 [label="org.apache.commons.math3.linear.OpenMapRealVector.<init>(IID)V"]
25703 [label="org.apache.commons.math3.util.OpenIntToDoubleHashMap.<init>(ID)V"]
25705 [label="org.apache.commons.math3.linear.OpenMapRealVector.<init>([D)V"]
25708 [label="org.apache.commons.math3.linear.OpenMapRealVector.<init>([DD)V"]
25713 [label="org.apache.commons.math3.linear.OpenMapRealVector.isDefaultValue(D)Z"]
25715 [label="org.apache.commons.math3.linear.OpenMapRealVector.<init>([Ljava/lang/Double;)V"]
25718 [label="org.apache.commons.math3.linear.OpenMapRealVector.<init>([Ljava/lang/Double;D)V"]
25723 [label="org.apache.commons.math3.linear.OpenMapRealVector.<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V"]
25726 [label="org.apache.commons.math3.linear.OpenMapRealVector.getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;"]
25728 [label="org.apache.commons.math3.linear.OpenMapRealVector.<init>(Lorg/apache/commons/math3/linear/RealVector;)V"]
25734 [label="org.apache.commons.math3.linear.OpenMapRealVector.add(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
25737 [label="org.apache.commons.math3.linear.RealVector.checkVectorDimensions(I)V"]
25739 [label="org.apache.commons.math3.linear.OpenMapRealVector.add(Lorg/apache/commons/math3/linear/OpenMapRealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;"]
25743 [label="org.apache.commons.math3.util.OpenIntToDoubleHashMap.size()I"]
25745 [label="org.apache.commons.math3.linear.OpenMapRealVector.copy()Lorg/apache/commons/math3/linear/OpenMapRealVector;"]
25747 [label="org.apache.commons.math3.linear.OpenMapRealVector.setEntry(ID)V"]
25749 [label="org.apache.commons.math3.linear.OpenMapRealVector.append(Lorg/apache/commons/math3/linear/OpenMapRealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;"]
25753 [label="org.apache.commons.math3.linear.OpenMapRealVector.append(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;"]
25757 [label="org.apache.commons.math3.linear.OpenMapRealVector.append(D)Lorg/apache/commons/math3/linear/OpenMapRealVector;"]
25762 [label="org.apache.commons.math3.linear.OpenMapRealVector.dotProduct(Lorg/apache/commons/math3/linear/OpenMapRealVector;)D"]
25765 [label="org.apache.commons.math3.linear.OpenMapRealVector.ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;"]
25768 [label="org.apache.commons.math3.linear.OpenMapRealVector.getEntry(I)D"]
25770 [label="org.apache.commons.math3.linear.OpenMapRealVector.ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;"]
25773 [label="org.apache.commons.math3.linear.OpenMapRealVector.getSubVector(II)Lorg/apache/commons/math3/linear/OpenMapRealVector;"]
25779 [label="org.apache.commons.math3.linear.OpenMapRealVector.getDistance(Lorg/apache/commons/math3/linear/OpenMapRealVector;)D"]
25782 [label="org.apache.commons.math3.linear.OpenMapRealVector.getDistance(Lorg/apache/commons/math3/linear/RealVector;)D"]
25786 [label="org.apache.commons.math3.linear.RealVector.getDistance(Lorg/apache/commons/math3/linear/RealVector;)D"]
25790 [label="org.apache.commons.math3.linear.OpenMapRealVector.getL1Distance(Lorg/apache/commons/math3/linear/OpenMapRealVector;)D"]
25793 [label="org.apache.commons.math3.linear.OpenMapRealVector.getL1Distance(Lorg/apache/commons/math3/linear/RealVector;)D"]
25797 [label="org.apache.commons.math3.linear.RealVector.getL1Distance(Lorg/apache/commons/math3/linear/RealVector;)D"]
25799 [label="org.apache.commons.math3.linear.OpenMapRealVector.getLInfDistance(Lorg/apache/commons/math3/linear/OpenMapRealVector;)D"]
25802 [label="org.apache.commons.math3.linear.OpenMapRealVector.getLInfDistance(Lorg/apache/commons/math3/linear/RealVector;)D"]
25806 [label="org.apache.commons.math3.linear.RealVector.getLInfDistance(Lorg/apache/commons/math3/linear/RealVector;)D"]
25808 [label="org.apache.commons.math3.linear.OpenMapRealVector.isInfinite()Z"]
25810 [label="org.apache.commons.math3.linear.OpenMapRealVector.isNaN()Z"]
25812 [label="org.apache.commons.math3.linear.OpenMapRealVector.mapAdd(D)Lorg/apache/commons/math3/linear/OpenMapRealVector;"]
25815 [label="org.apache.commons.math3.linear.OpenMapRealVector.mapAddToSelf(D)Lorg/apache/commons/math3/linear/OpenMapRealVector;"]
25822 [label="org.apache.commons.math3.linear.OpenMapRealVector.setSubVector(ILorg/apache/commons/math3/linear/RealVector;)V"]
25826 [label="org.apache.commons.math3.linear.OpenMapRealVector.set(D)V"]
25829 [label="org.apache.commons.math3.linear.OpenMapRealVector.subtract(Lorg/apache/commons/math3/linear/OpenMapRealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;"]
25832 [label="org.apache.commons.math3.linear.OpenMapRealVector.subtract(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
25836 [label="org.apache.commons.math3.linear.OpenMapRealVector.unitVector()Lorg/apache/commons/math3/linear/OpenMapRealVector;"]
25838 [label="org.apache.commons.math3.linear.OpenMapRealVector.unitize()V"]
25841 [label="org.apache.commons.math3.linear.OpenMapRealVector.toArray()[D"]
25843 [label="org.apache.commons.math3.linear.OpenMapRealVector.hashCode()I"]
25845 [label="org.apache.commons.math3.linear.OpenMapRealVector.equals(Ljava/lang/Object;)Z"]
25848 [label="org.apache.commons.math3.linear.OpenMapRealVector.getSparsity()D"]
25850 [label="org.apache.commons.math3.linear.OpenMapRealVector.sparseIterator()Ljava/util/Iterator;"]
25855 [label="org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.<init>()V"]
25861 [label="org.apache.commons.math3.linear.OpenMapRealVector$OpenMapEntry.<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator;)V"]
25864 [label="org.apache.commons.math3.linear.RealVector$Entry.<init>()V"]
25867 [label="org.apache.commons.math3.linear.OpenMapRealVector$OpenMapEntry.getValue()D"]
25869 [label="org.apache.commons.math3.linear.OpenMapRealVector$OpenMapEntry.setValue(D)V"]
25872 [label="org.apache.commons.math3.linear.OpenMapRealVector$OpenMapEntry.getIndex()I"]
25885 [label="org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.hasNext()Z"]
25887 [label="org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.next()Lorg/apache/commons/math3/linear/RealVector$Entry;"]
25889 [label="org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator.remove()V"]
25891 [label="java.lang.UnsupportedOperationException.<init>(Ljava/lang/String;)V"]
25902 [label="org.apache.commons.math3.linear.PreconditionedIterativeLinearSolver.solve(Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
25908 [label="org.apache.commons.math3.linear.PreconditionedIterativeLinearSolver.solveInPlace(Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
25910 [label="org.apache.commons.math3.linear.PreconditionedIterativeLinearSolver.solve(Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
25914 [label="org.apache.commons.math3.linear.PreconditionedIterativeLinearSolver.solve(Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
25925 [label="org.apache.commons.math3.linear.PreconditionedIterativeLinearSolver.solve(Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
25935 [label="org.apache.commons.math3.linear.PreconditionedIterativeLinearSolver.solveInPlace(Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
25955 [label="org.apache.commons.math3.linear.QRDecomposition.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V"]
25968 [label="org.apache.commons.math3.linear.QRDecomposition.decompose([[D)V"]
25972 [label="org.apache.commons.math3.linear.QRDecomposition.performHouseholderReflection(I[[D)V"]
25977 [label="org.apache.commons.math3.linear.QRDecomposition.getR()Lorg/apache/commons/math3/linear/RealMatrix;"]
25979 [label="org.apache.commons.math3.linear.QRDecomposition.getQ()Lorg/apache/commons/math3/linear/RealMatrix;"]
25981 [label="org.apache.commons.math3.linear.QRDecomposition.getQT()Lorg/apache/commons/math3/linear/RealMatrix;"]
25984 [label="org.apache.commons.math3.linear.QRDecomposition.getH()Lorg/apache/commons/math3/linear/RealMatrix;"]
25990 [label="org.apache.commons.math3.linear.QRDecomposition$Solver.<init>([[D[DD)V"]
26006 [label="org.apache.commons.math3.linear.QRDecomposition$Solver.isNonSingular()Z"]
26008 [label="org.apache.commons.math3.linear.QRDecomposition$Solver.solve(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
26012 [label="org.apache.commons.math3.linear.QRDecomposition$Solver.solve(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;"]
26015 [label="org.apache.commons.math3.linear.RealMatrix.copySubMatrix(IIII[[D)V"]
26017 [label="org.apache.commons.math3.linear.QRDecomposition$Solver.getInverse()Lorg/apache/commons/math3/linear/RealMatrix;"]
26025 [label="org.apache.commons.math3.linear.RealLinearOperator.operateTranspose(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
26040 [label="org.apache.commons.math3.linear.RealMatrix.scalarAdd(D)Lorg/apache/commons/math3/linear/RealMatrix;"]
26055 [label="org.apache.commons.math3.linear.RealMatrix.getFrobeniusNorm()D"]
26088 [label="org.apache.commons.math3.linear.RealMatrix.getColumnMatrix(I)Lorg/apache/commons/math3/linear/RealMatrix;"]
26107 [label="org.apache.commons.math3.linear.RealMatrix.getRow(I)[D"]
26114 [label="org.apache.commons.math3.linear.RealMatrix.getColumn(I)[D"]
26117 [label="org.apache.commons.math3.linear.RealMatrix.setColumn(I[D)V"]
26201 [label="org.apache.commons.math3.linear.RealMatrix.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;IIII)D"]
26248 [label="org.apache.commons.math3.linear.RealMatrixFormat.<init>()V"]
26250 [label="org.apache.commons.math3.linear.RealMatrixFormat.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/text/NumberFormat;)V"]
26258 [label="org.apache.commons.math3.linear.RealMatrixFormat.<init>(Ljava/text/NumberFormat;)V"]
26261 [label="org.apache.commons.math3.linear.RealMatrixFormat.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"]
26284 [label="java.text.NumberFormat.setGroupingUsed(Z)V"]
26286 [label="org.apache.commons.math3.linear.RealMatrixFormat.getAvailableLocales()[Ljava/util/Locale;"]
26307 [label="org.apache.commons.math3.linear.RealMatrixFormat.format(Lorg/apache/commons/math3/linear/RealMatrix;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;"]
26313 [label="org.apache.commons.math3.linear.RealMatrixFormat.parse(Ljava/lang/String;)Lorg/apache/commons/math3/linear/RealMatrix;"]
26316 [label="org.apache.commons.math3.linear.RealMatrixFormat.parse(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math3/linear/RealMatrix;"]
26353 [label="org.apache.commons.math3.linear.RealVector.addToEntry(ID)V"]
26357 [label="org.apache.commons.math3.linear.RealVector.append(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
26360 [label="org.apache.commons.math3.linear.RealVector.append(D)Lorg/apache/commons/math3/linear/RealVector;"]
26363 [label="org.apache.commons.math3.linear.RealVector.getSubVector(II)Lorg/apache/commons/math3/linear/RealVector;"]
26371 [label="org.apache.commons.math3.linear.RealVector.isInfinite()Z"]
26373 [label="org.apache.commons.math3.linear.RealVector.checkVectorDimensions(Lorg/apache/commons/math3/linear/RealVector;)V"]
26388 [label="org.apache.commons.math3.linear.RealVector.mapMultiply(D)Lorg/apache/commons/math3/linear/RealVector;"]
26390 [label="org.apache.commons.math3.linear.RealVector.mapAdd(D)Lorg/apache/commons/math3/linear/RealVector;"]
26393 [label="org.apache.commons.math3.linear.RealVector.mapAddToSelf(D)Lorg/apache/commons/math3/linear/RealVector;"]
26397 [label="org.apache.commons.math3.linear.RealVector.mapToSelf(Lorg/apache/commons/math3/analysis/UnivariateFunction;)Lorg/apache/commons/math3/linear/RealVector;"]
26406 [label="org.apache.commons.math3.linear.RealVector.cosine(Lorg/apache/commons/math3/linear/RealVector;)D"]
26409 [label="org.apache.commons.math3.linear.RealVector.ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
26412 [label="org.apache.commons.math3.linear.RealVector.ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
26418 [label="org.apache.commons.math3.linear.RealVector.getL1Norm()D"]
26420 [label="org.apache.commons.math3.linear.RealVector.getLInfNorm()D"]
26426 [label="org.apache.commons.math3.linear.RealVector.getMinIndex()I"]
26428 [label="org.apache.commons.math3.linear.RealVector.getMinValue()D"]
26431 [label="org.apache.commons.math3.linear.RealVector.getMaxIndex()I"]
26433 [label="org.apache.commons.math3.linear.RealVector.getMaxValue()D"]
26438 [label="org.apache.commons.math3.linear.RealVector.mapMultiplyToSelf(D)Lorg/apache/commons/math3/linear/RealVector;"]
26445 [label="org.apache.commons.math3.linear.RealVector.mapSubtract(D)Lorg/apache/commons/math3/linear/RealVector;"]
26448 [label="org.apache.commons.math3.linear.RealVector.mapSubtractToSelf(D)Lorg/apache/commons/math3/linear/RealVector;"]
26452 [label="org.apache.commons.math3.linear.RealVector.mapDivide(D)Lorg/apache/commons/math3/linear/RealVector;"]
26455 [label="org.apache.commons.math3.linear.RealVector.mapDivideToSelf(D)Lorg/apache/commons/math3/linear/RealVector;"]
26462 [label="org.apache.commons.math3.linear.RealVector.outerProduct(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealMatrix;"]
26465 [label="org.apache.commons.math3.linear.RealVector.projection(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
26470 [label="org.apache.commons.math3.linear.RealVector$Entry.setValue(D)V"]
26473 [label="org.apache.commons.math3.linear.RealVector.unitVector()Lorg/apache/commons/math3/linear/RealVector;"]
26476 [label="org.apache.commons.math3.linear.RealVector.unitize()V"]
26478 [label="org.apache.commons.math3.linear.RealVector.sparseIterator()Ljava/util/Iterator;"]
26483 [label="org.apache.commons.math3.linear.RealVector$SparseEntryIterator.<init>()V"]
26486 [label="org.apache.commons.math3.linear.RealVector$1.<init>()V"]
26496 [label="org.apache.commons.math3.linear.RealVector$1.next()Lorg/apache/commons/math3/linear/RealVector$Entry;"]
26498 [label="org.apache.commons.math3.linear.RealVector$Entry.setIndex(I)V"]
26501 [label="org.apache.commons.math3.linear.RealVector$1.remove()V"]
26503 [label="org.apache.commons.math3.linear.RealVector.map(Lorg/apache/commons/math3/analysis/UnivariateFunction;)Lorg/apache/commons/math3/linear/RealVector;"]
26516 [label="org.apache.commons.math3.linear.RealVector.walkInDefaultOrder(Lorg/apache/commons/math3/linear/RealVectorPreservingVisitor;)D"]
26519 [label="org.apache.commons.math3.linear.RealVector.walkInDefaultOrder(Lorg/apache/commons/math3/linear/RealVectorPreservingVisitor;II)D"]
26524 [label="org.apache.commons.math3.linear.RealVector.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealVectorPreservingVisitor;)D"]
26528 [label="org.apache.commons.math3.linear.RealVector.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealVectorPreservingVisitor;II)D"]
26534 [label="org.apache.commons.math3.linear.RealVector.walkInDefaultOrder(Lorg/apache/commons/math3/linear/RealVectorChangingVisitor;)D"]
26537 [label="org.apache.commons.math3.linear.RealVector.walkInDefaultOrder(Lorg/apache/commons/math3/linear/RealVectorChangingVisitor;II)D"]
26542 [label="org.apache.commons.math3.linear.RealVector.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealVectorChangingVisitor;)D"]
26546 [label="org.apache.commons.math3.linear.RealVector.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealVectorChangingVisitor;II)D"]
26563 [label="org.apache.commons.math3.linear.RealVector.equals(Ljava/lang/Object;)Z"]
26566 [label="org.apache.commons.math3.linear.RealVector.hashCode()I"]
26579 [label="org.apache.commons.math3.linear.RealVector$SparseEntryIterator.advance(Lorg/apache/commons/math3/linear/RealVector$Entry;)V"]
26583 [label="org.apache.commons.math3.linear.RealVector$SparseEntryIterator.hasNext()Z"]
26585 [label="org.apache.commons.math3.linear.RealVector$SparseEntryIterator.next()Lorg/apache/commons/math3/linear/RealVector$Entry;"]
26587 [label="org.apache.commons.math3.linear.RealVector$SparseEntryIterator.remove()V"]
26591 [label="org.apache.commons.math3.linear.RealVector$2.<init>()V"]
26594 [label="org.apache.commons.math3.linear.RealVector$2.mapToSelf(Lorg/apache/commons/math3/analysis/UnivariateFunction;)Lorg/apache/commons/math3/linear/RealVector;"]
26597 [label="org.apache.commons.math3.linear.RealVector$2.map(Lorg/apache/commons/math3/analysis/UnivariateFunction;)Lorg/apache/commons/math3/linear/RealVector;"]
26601 [label="org.apache.commons.math3.linear.RealVector$2.iterator()Ljava/util/Iterator;"]
26603 [label="org.apache.commons.math3.linear.RealVector$2$1.<init>()V"]
26611 [label="org.apache.commons.math3.linear.RealVector$2$UnmodifiableEntry.<init>()V"]
26613 [label="org.apache.commons.math3.linear.RealVector$2$1.hasNext()Z"]
26615 [label="org.apache.commons.math3.linear.RealVector$2$1.next()Lorg/apache/commons/math3/linear/RealVector$Entry;"]
26618 [label="org.apache.commons.math3.linear.RealVector$2$1.remove()V"]
26620 [label="org.apache.commons.math3.linear.RealVector$2.sparseIterator()Ljava/util/Iterator;"]
26623 [label="org.apache.commons.math3.linear.RealVector$2$2.<init>()V"]
26628 [label="org.apache.commons.math3.linear.RealVector$2$2.hasNext()Z"]
26630 [label="org.apache.commons.math3.linear.RealVector$2$2.next()Lorg/apache/commons/math3/linear/RealVector$Entry;"]
26633 [label="org.apache.commons.math3.linear.RealVector$2$2.remove()V"]
26635 [label="org.apache.commons.math3.linear.RealVector$2.copy()Lorg/apache/commons/math3/linear/RealVector;"]
26637 [label="org.apache.commons.math3.linear.RealVector$2.add(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
26640 [label="org.apache.commons.math3.linear.RealVector$2.subtract(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
26643 [label="org.apache.commons.math3.linear.RealVector$2.mapAdd(D)Lorg/apache/commons/math3/linear/RealVector;"]
26647 [label="org.apache.commons.math3.linear.RealVector$2.mapAddToSelf(D)Lorg/apache/commons/math3/linear/RealVector;"]
26650 [label="org.apache.commons.math3.linear.RealVector$2.mapSubtract(D)Lorg/apache/commons/math3/linear/RealVector;"]
26654 [label="org.apache.commons.math3.linear.RealVector$2.mapSubtractToSelf(D)Lorg/apache/commons/math3/linear/RealVector;"]
26657 [label="org.apache.commons.math3.linear.RealVector$2.mapMultiply(D)Lorg/apache/commons/math3/linear/RealVector;"]
26660 [label="org.apache.commons.math3.linear.RealVector$2.mapMultiplyToSelf(D)Lorg/apache/commons/math3/linear/RealVector;"]
26663 [label="org.apache.commons.math3.linear.RealVector$2.mapDivide(D)Lorg/apache/commons/math3/linear/RealVector;"]
26666 [label="org.apache.commons.math3.linear.RealVector$2.mapDivideToSelf(D)Lorg/apache/commons/math3/linear/RealVector;"]
26669 [label="org.apache.commons.math3.linear.RealVector$2.ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
26673 [label="org.apache.commons.math3.linear.RealVector$2.ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
26677 [label="org.apache.commons.math3.linear.RealVector$2.dotProduct(Lorg/apache/commons/math3/linear/RealVector;)D"]
26680 [label="org.apache.commons.math3.linear.RealVector$2.cosine(Lorg/apache/commons/math3/linear/RealVector;)D"]
26684 [label="org.apache.commons.math3.linear.RealVector$2.getNorm()D"]
26686 [label="org.apache.commons.math3.linear.RealVector$2.getL1Norm()D"]
26689 [label="org.apache.commons.math3.linear.RealVector$2.getLInfNorm()D"]
26692 [label="org.apache.commons.math3.linear.RealVector$2.getDistance(Lorg/apache/commons/math3/linear/RealVector;)D"]
26695 [label="org.apache.commons.math3.linear.RealVector$2.getL1Distance(Lorg/apache/commons/math3/linear/RealVector;)D"]
26698 [label="org.apache.commons.math3.linear.RealVector$2.getLInfDistance(Lorg/apache/commons/math3/linear/RealVector;)D"]
26701 [label="org.apache.commons.math3.linear.RealVector$2.unitVector()Lorg/apache/commons/math3/linear/RealVector;"]
26704 [label="org.apache.commons.math3.linear.RealVector$2.unitize()V"]
26706 [label="org.apache.commons.math3.linear.RealVector$2.outerProduct(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealMatrix;"]
26710 [label="org.apache.commons.math3.linear.RealVector$2.getEntry(I)D"]
26713 [label="org.apache.commons.math3.linear.RealVector$2.setEntry(ID)V"]
26717 [label="org.apache.commons.math3.linear.RealVector$2.addToEntry(ID)V"]
26721 [label="org.apache.commons.math3.linear.RealVector$2.getDimension()I"]
26723 [label="org.apache.commons.math3.linear.RealVector$2.append(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
26727 [label="org.apache.commons.math3.linear.RealVector$2.append(D)Lorg/apache/commons/math3/linear/RealVector;"]
26731 [label="org.apache.commons.math3.linear.RealVector$2.getSubVector(II)Lorg/apache/commons/math3/linear/RealVector;"]
26736 [label="org.apache.commons.math3.linear.RealVector$2.setSubVector(ILorg/apache/commons/math3/linear/RealVector;)V"]
26740 [label="org.apache.commons.math3.linear.RealVector$2.set(D)V"]
26743 [label="org.apache.commons.math3.linear.RealVector$2.toArray()[D"]
26745 [label="org.apache.commons.math3.linear.RealVector$2.isNaN()Z"]
26747 [label="org.apache.commons.math3.linear.RealVector$2.isInfinite()Z"]
26750 [label="org.apache.commons.math3.linear.RealVector$2.combine(DDLorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
26755 [label="org.apache.commons.math3.linear.RealVector$2.combineToSelf(DDLorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
26761 [label="org.apache.commons.math3.linear.RealVector$2$UnmodifiableEntry.getValue()D"]
26763 [label="org.apache.commons.math3.linear.RealVector$2$UnmodifiableEntry.setValue(D)V"]
26796 [label="org.apache.commons.math3.linear.RealVectorFormat.<init>()V"]
26798 [label="org.apache.commons.math3.linear.RealVectorFormat.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/text/NumberFormat;)V"]
26803 [label="org.apache.commons.math3.linear.RealVectorFormat.<init>(Ljava/text/NumberFormat;)V"]
26806 [label="org.apache.commons.math3.linear.RealVectorFormat.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"]
26823 [label="org.apache.commons.math3.linear.RealVectorFormat.getAvailableLocales()[Ljava/util/Locale;"]
26834 [label="org.apache.commons.math3.linear.RealVectorFormat.getInstance(Ljava/util/Locale;)Lorg/apache/commons/math3/linear/RealVectorFormat;"]
26841 [label="org.apache.commons.math3.linear.RealVectorFormat.format(Lorg/apache/commons/math3/linear/RealVector;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;"]
26847 [label="org.apache.commons.math3.linear.RealVectorFormat.parse(Ljava/lang/String;)Lorg/apache/commons/math3/linear/ArrayRealVector;"]
26850 [label="org.apache.commons.math3.linear.RealVectorFormat.parse(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math3/linear/ArrayRealVector;"]
26870 [label="org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V"]
26873 [label="org.apache.commons.math3.linear.RectangularCholeskyDecomposition.<init>(Lorg/apache/commons/math3/linear/RealMatrix;D)V"]
26880 [label="org.apache.commons.math3.linear.RectangularCholeskyDecomposition.getRootMatrix()Lorg/apache/commons/math3/linear/RealMatrix;"]
26882 [label="org.apache.commons.math3.linear.RectangularCholeskyDecomposition.getRank()I"]
26890 [label="org.apache.commons.math3.linear.RRQRDecomposition.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V"]
26893 [label="org.apache.commons.math3.linear.RRQRDecomposition.<init>(Lorg/apache/commons/math3/linear/RealMatrix;D)V"]
26898 [label="org.apache.commons.math3.linear.RRQRDecomposition.decompose([[D)V"]
26902 [label="org.apache.commons.math3.linear.RRQRDecomposition.performHouseholderReflection(I[[D)V"]
26906 [label="org.apache.commons.math3.linear.RRQRDecomposition.getP()Lorg/apache/commons/math3/linear/RealMatrix;"]
26909 [label="org.apache.commons.math3.linear.RRQRDecomposition.getRank(D)I"]
26914 [label="org.apache.commons.math3.linear.RRQRDecomposition.getSolver()Lorg/apache/commons/math3/linear/DecompositionSolver;"]
26919 [label="org.apache.commons.math3.linear.RRQRDecomposition$Solver.<init>(Lorg/apache/commons/math3/linear/DecompositionSolver;Lorg/apache/commons/math3/linear/RealMatrix;)V"]
26932 [label="org.apache.commons.math3.linear.RRQRDecomposition$Solver.isNonSingular()Z"]
26934 [label="org.apache.commons.math3.linear.RRQRDecomposition$Solver.solve(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
26937 [label="org.apache.commons.math3.linear.RRQRDecomposition$Solver.solve(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;"]
26940 [label="org.apache.commons.math3.linear.RRQRDecomposition$Solver.getInverse()Lorg/apache/commons/math3/linear/RealMatrix;"]
26969 [label="org.apache.commons.math3.linear.SchurTransformer.transform()V"]
26972 [label="org.apache.commons.math3.linear.SchurTransformer.getPT()Lorg/apache/commons/math3/linear/RealMatrix;"]
26976 [label="org.apache.commons.math3.linear.SchurTransformer.getNorm()D"]
26981 [label="org.apache.commons.math3.linear.SchurTransformer$ShiftInfo.<init>()V"]
26983 [label="org.apache.commons.math3.linear.SchurTransformer.findSmallSubDiagonalElement(ID)I"]
26987 [label="org.apache.commons.math3.linear.SchurTransformer.computeShift(IIILorg/apache/commons/math3/linear/SchurTransformer$ShiftInfo;)V"]
26990 [label="org.apache.commons.math3.linear.SchurTransformer.initQRStep(IILorg/apache/commons/math3/linear/SchurTransformer$ShiftInfo;[D)I"]
26992 [label="org.apache.commons.math3.linear.SchurTransformer.performDoubleQRStep(IIILorg/apache/commons/math3/linear/SchurTransformer$ShiftInfo;[D)V"]
27036 [label="org.apache.commons.math3.linear.SingularOperatorException.<init>()V"]
27075 [label="org.apache.commons.math3.linear.SingularValueDecomposition.getU()Lorg/apache/commons/math3/linear/RealMatrix;"]
27077 [label="org.apache.commons.math3.linear.SingularValueDecomposition.getUT()Lorg/apache/commons/math3/linear/RealMatrix;"]
27081 [label="org.apache.commons.math3.linear.SingularValueDecomposition.getS()Lorg/apache/commons/math3/linear/RealMatrix;"]
27084 [label="org.apache.commons.math3.linear.SingularValueDecomposition.getSingularValues()[D"]
27086 [label="org.apache.commons.math3.linear.SingularValueDecomposition.getV()Lorg/apache/commons/math3/linear/RealMatrix;"]
27088 [label="org.apache.commons.math3.linear.SingularValueDecomposition.getVT()Lorg/apache/commons/math3/linear/RealMatrix;"]
27092 [label="org.apache.commons.math3.linear.SingularValueDecomposition.getCovariance(D)Lorg/apache/commons/math3/linear/RealMatrix;"]
27098 [label="org.apache.commons.math3.linear.SingularValueDecomposition$1.<init>()V"]
27112 [label="org.apache.commons.math3.linear.SingularValueDecomposition.getRank()I"]
27118 [label="org.apache.commons.math3.linear.SingularValueDecomposition$Solver.<init>([DLorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;ZD)V"]
27135 [label="org.apache.commons.math3.linear.SingularValueDecomposition$Solver.solve(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
27138 [label="org.apache.commons.math3.linear.SingularValueDecomposition$Solver.solve(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;"]
27162 [label="org.apache.commons.math3.linear.SparseFieldMatrix.<init>(Lorg/apache/commons/math3/Field;)V"]
27168 [label="org.apache.commons.math3.util.OpenIntToFieldHashMap.<init>(Lorg/apache/commons/math3/Field;)V"]
27170 [label="org.apache.commons.math3.linear.SparseFieldMatrix.<init>(Lorg/apache/commons/math3/Field;II)V"]
27175 [label="org.apache.commons.math3.linear.SparseFieldMatrix.<init>(Lorg/apache/commons/math3/linear/SparseFieldMatrix;)V"]
27183 [label="org.apache.commons.math3.linear.SparseFieldMatrix.getRowDimension()I"]
27185 [label="org.apache.commons.math3.linear.SparseFieldMatrix.getColumnDimension()I"]
27187 [label="org.apache.commons.math3.util.OpenIntToFieldHashMap.<init>(Lorg/apache/commons/math3/util/OpenIntToFieldHashMap;)V"]
27189 [label="org.apache.commons.math3.linear.SparseFieldMatrix.<init>(Lorg/apache/commons/math3/linear/FieldMatrix;)V"]
27192 [label="org.apache.commons.math3.linear.SparseFieldMatrix.setEntry(IILorg/apache/commons/math3/FieldElement;)V"]
27194 [label="org.apache.commons.math3.linear.SparseFieldMatrix.addToEntry(IILorg/apache/commons/math3/FieldElement;)V"]
27199 [label="org.apache.commons.math3.linear.SparseFieldMatrix.computeKey(II)I"]
27201 [label="org.apache.commons.math3.util.OpenIntToFieldHashMap.get(I)Lorg/apache/commons/math3/FieldElement;"]
27203 [label="org.apache.commons.math3.util.OpenIntToFieldHashMap.remove(I)Lorg/apache/commons/math3/FieldElement;"]
27205 [label="org.apache.commons.math3.util.OpenIntToFieldHashMap.put(ILorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/FieldElement;"]
27207 [label="org.apache.commons.math3.linear.SparseFieldMatrix.copy()Lorg/apache/commons/math3/linear/FieldMatrix;"]
27210 [label="org.apache.commons.math3.linear.SparseFieldMatrix.createMatrix(II)Lorg/apache/commons/math3/linear/FieldMatrix;"]
27216 [label="org.apache.commons.math3.linear.SparseFieldMatrix.getEntry(II)Lorg/apache/commons/math3/FieldElement;"]
27221 [label="org.apache.commons.math3.linear.SparseFieldMatrix.multiplyEntry(IILorg/apache/commons/math3/FieldElement;)V"]
27246 [label="org.apache.commons.math3.linear.SparseFieldVector.<init>(Lorg/apache/commons/math3/Field;)V"]
27249 [label="org.apache.commons.math3.linear.SparseFieldVector.<init>(Lorg/apache/commons/math3/Field;I)V"]
27257 [label="org.apache.commons.math3.linear.SparseFieldVector.<init>(Lorg/apache/commons/math3/linear/SparseFieldVector;I)V"]
27266 [label="org.apache.commons.math3.linear.SparseFieldVector.getDimension()I"]
27268 [label="org.apache.commons.math3.linear.SparseFieldVector.<init>(Lorg/apache/commons/math3/Field;II)V"]
27273 [label="org.apache.commons.math3.util.OpenIntToFieldHashMap.<init>(Lorg/apache/commons/math3/Field;I)V"]
27275 [label="org.apache.commons.math3.linear.SparseFieldVector.<init>(Lorg/apache/commons/math3/Field;[Lorg/apache/commons/math3/FieldElement;)V"]
27280 [label="org.apache.commons.math3.linear.SparseFieldVector.<init>(Lorg/apache/commons/math3/linear/SparseFieldVector;)V"]
27283 [label="org.apache.commons.math3.linear.SparseFieldVector.getEntries()Lorg/apache/commons/math3/util/OpenIntToFieldHashMap;"]
27286 [label="org.apache.commons.math3.linear.SparseFieldVector.add(Lorg/apache/commons/math3/linear/SparseFieldVector;)Lorg/apache/commons/math3/linear/FieldVector;"]
27289 [label="org.apache.commons.math3.linear.SparseFieldVector.checkVectorDimensions(I)V"]
27291 [label="org.apache.commons.math3.linear.SparseFieldVector.copy()Lorg/apache/commons/math3/linear/FieldVector;"]
27296 [label="org.apache.commons.math3.util.OpenIntToFieldHashMap.iterator()Lorg/apache/commons/math3/util/OpenIntToFieldHashMap$Iterator;"]
27298 [label="org.apache.commons.math3.util.OpenIntToFieldHashMap$Iterator.advance()V"]
27300 [label="org.apache.commons.math3.util.OpenIntToFieldHashMap$Iterator.key()I"]
27302 [label="org.apache.commons.math3.util.OpenIntToFieldHashMap$Iterator.value()Lorg/apache/commons/math3/FieldElement;"]
27304 [label="org.apache.commons.math3.util.OpenIntToFieldHashMap.containsKey(I)Z"]
27306 [label="org.apache.commons.math3.linear.SparseFieldVector.setEntry(ILorg/apache/commons/math3/FieldElement;)V"]
27308 [label="org.apache.commons.math3.util.OpenIntToFieldHashMap$Iterator.hasNext()Z"]
27310 [label="org.apache.commons.math3.linear.SparseFieldVector.append(Lorg/apache/commons/math3/linear/SparseFieldVector;)Lorg/apache/commons/math3/linear/FieldVector;"]
27314 [label="org.apache.commons.math3.linear.SparseFieldVector.append(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldVector;"]
27322 [label="org.apache.commons.math3.linear.SparseFieldVector.append(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;"]
27327 [label="org.apache.commons.math3.linear.SparseFieldVector.dotProduct(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/FieldElement;"]
27330 [label="org.apache.commons.math3.linear.SparseFieldVector.ebeDivide(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldVector;"]
27333 [label="org.apache.commons.math3.linear.SparseFieldVector.ebeMultiply(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldVector;"]
27336 [label="org.apache.commons.math3.linear.SparseFieldVector.getData()[Lorg/apache/commons/math3/FieldElement;"]
27338 [label="org.apache.commons.math3.linear.SparseFieldVector.toArray()[Lorg/apache/commons/math3/FieldElement;"]
27341 [label="org.apache.commons.math3.linear.SparseFieldVector.getEntry(I)Lorg/apache/commons/math3/FieldElement;"]
27344 [label="org.apache.commons.math3.linear.SparseFieldVector.checkIndex(I)V"]
27348 [label="org.apache.commons.math3.linear.SparseFieldVector.getSubVector(II)Lorg/apache/commons/math3/linear/FieldVector;"]
27352 [label="org.apache.commons.math3.linear.SparseFieldVector.mapAdd(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;"]
27356 [label="org.apache.commons.math3.linear.SparseFieldVector.mapAddToSelf(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;"]
27360 [label="org.apache.commons.math3.linear.SparseFieldVector.mapDivide(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;"]
27364 [label="org.apache.commons.math3.linear.SparseFieldVector.mapDivideToSelf(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;"]
27367 [label="org.apache.commons.math3.linear.SparseFieldVector.mapInv()Lorg/apache/commons/math3/linear/FieldVector;"]
27370 [label="org.apache.commons.math3.linear.SparseFieldVector.mapInvToSelf()Lorg/apache/commons/math3/linear/FieldVector;"]
27372 [label="org.apache.commons.math3.linear.SparseFieldVector.mapMultiply(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;"]
27376 [label="org.apache.commons.math3.linear.SparseFieldVector.mapMultiplyToSelf(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;"]
27379 [label="org.apache.commons.math3.linear.SparseFieldVector.mapSubtract(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;"]
27383 [label="org.apache.commons.math3.linear.SparseFieldVector.mapSubtractToSelf(Lorg/apache/commons/math3/FieldElement;)Lorg/apache/commons/math3/linear/FieldVector;"]
27387 [label="org.apache.commons.math3.linear.SparseFieldVector.outerProduct(Lorg/apache/commons/math3/linear/SparseFieldVector;)Lorg/apache/commons/math3/linear/FieldMatrix;"]
27390 [label="org.apache.commons.math3.linear.SparseFieldVector.outerProduct(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldMatrix;"]
27394 [label="org.apache.commons.math3.linear.SparseFieldVector.projection(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldVector;"]
27398 [label="org.apache.commons.math3.linear.SparseFieldVector.set(Lorg/apache/commons/math3/FieldElement;)V"]
27404 [label="org.apache.commons.math3.linear.SparseFieldVector.setSubVector(ILorg/apache/commons/math3/linear/FieldVector;)V"]
27408 [label="org.apache.commons.math3.linear.SparseFieldVector.subtract(Lorg/apache/commons/math3/linear/SparseFieldVector;)Lorg/apache/commons/math3/linear/SparseFieldVector;"]
27411 [label="org.apache.commons.math3.linear.SparseFieldVector.subtract(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldVector;"]
27418 [label="org.apache.commons.math3.linear.SparseFieldVector.checkIndices(II)V"]
27424 [label="org.apache.commons.math3.linear.SparseFieldVector.add(Lorg/apache/commons/math3/linear/FieldVector;)Lorg/apache/commons/math3/linear/FieldVector;"]
27428 [label="org.apache.commons.math3.linear.SparseFieldVector.walkInDefaultOrder(Lorg/apache/commons/math3/linear/FieldVectorPreservingVisitor;)Lorg/apache/commons/math3/FieldElement;"]
27431 [label="org.apache.commons.math3.linear.SparseFieldVector.walkInDefaultOrder(Lorg/apache/commons/math3/linear/FieldVectorPreservingVisitor;II)Lorg/apache/commons/math3/FieldElement;"]
27437 [label="org.apache.commons.math3.linear.SparseFieldVector.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/FieldVectorPreservingVisitor;)Lorg/apache/commons/math3/FieldElement;"]
27441 [label="org.apache.commons.math3.linear.SparseFieldVector.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/FieldVectorPreservingVisitor;II)Lorg/apache/commons/math3/FieldElement;"]
27447 [label="org.apache.commons.math3.linear.SparseFieldVector.walkInDefaultOrder(Lorg/apache/commons/math3/linear/FieldVectorChangingVisitor;)Lorg/apache/commons/math3/FieldElement;"]
27450 [label="org.apache.commons.math3.linear.SparseFieldVector.walkInDefaultOrder(Lorg/apache/commons/math3/linear/FieldVectorChangingVisitor;II)Lorg/apache/commons/math3/FieldElement;"]
27455 [label="org.apache.commons.math3.linear.SparseFieldVector.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/FieldVectorChangingVisitor;)Lorg/apache/commons/math3/FieldElement;"]
27459 [label="org.apache.commons.math3.linear.SparseFieldVector.walkInOptimizedOrder(Lorg/apache/commons/math3/linear/FieldVectorChangingVisitor;II)Lorg/apache/commons/math3/FieldElement;"]
27465 [label="org.apache.commons.math3.linear.SparseFieldVector.hashCode()I"]
27467 [label="org.apache.commons.math3.linear.SparseFieldVector.equals(Ljava/lang/Object;)Z"]
27543 [label="org.apache.commons.math3.linear.SymmLQ$State.<clinit>()"]
27546 [label="org.apache.commons.math3.linear.SymmLQ$State.<init>(Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealVector;ZDDZ)V"]
27565 [label="org.apache.commons.math3.linear.SymmLQ$State.checkSymmetry(Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;)V"]
27582 [label="org.apache.commons.math3.linear.SymmLQ$State.throwNPDLOException(Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealVector;)V"]
27588 [label="org.apache.commons.math3.linear.SymmLQ$State.daxpy(DLorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;)V"]
27593 [label="org.apache.commons.math3.linear.SymmLQ$State.daxpbypz(DLorg/apache/commons/math3/linear/RealVector;DLorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;)V"]
27600 [label="org.apache.commons.math3.linear.SymmLQ$State.refineSolution(Lorg/apache/commons/math3/linear/RealVector;)V"]
27612 [label="org.apache.commons.math3.linear.SymmLQ$State.init()V"]
27628 [label="org.apache.commons.math3.linear.SymmLQ$State.updateNorms()V"]
27630 [label="org.apache.commons.math3.linear.SymmLQ$State.update()V"]
27641 [label="org.apache.commons.math3.linear.SymmLQ$State.hasConverged()Z"]
27643 [label="org.apache.commons.math3.linear.SymmLQ$State.bEqualsNullVector()Z"]
27645 [label="org.apache.commons.math3.linear.SymmLQ$State.betaEqualsZero()Z"]
27647 [label="org.apache.commons.math3.linear.SymmLQ$State.getNormOfResidual()D"]
27658 [label="org.apache.commons.math3.linear.SymmLQ.<init>(IDZ)V"]
27665 [label="org.apache.commons.math3.linear.SymmLQ.<init>(Lorg/apache/commons/math3/util/IterationManager;DZ)V"]
27672 [label="org.apache.commons.math3.linear.SymmLQ.solve(Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
27677 [label="org.apache.commons.math3.linear.SymmLQ.solveInPlace(Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;ZD)Lorg/apache/commons/math3/linear/RealVector;"]
27679 [label="org.apache.commons.math3.linear.SymmLQ.solve(Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealVector;ZD)Lorg/apache/commons/math3/linear/RealVector;"]
27686 [label="org.apache.commons.math3.linear.SymmLQ.solve(Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
27692 [label="org.apache.commons.math3.linear.SymmLQ.solve(Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
27696 [label="org.apache.commons.math3.linear.SymmLQ.solve(Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealVector;ZD)Lorg/apache/commons/math3/linear/RealVector;"]
27702 [label="org.apache.commons.math3.linear.SymmLQ.solve(Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
27707 [label="org.apache.commons.math3.linear.SymmLQ.solveInPlace(Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
27731 [label="org.apache.commons.math3.linear.SymmLQ.solveInPlace(Lorg/apache/commons/math3/linear/RealLinearOperator;Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/RealVector;"]
27757 [label="org.apache.commons.math3.linear.TriDiagonalTransformer.transform()V"]
27760 [label="org.apache.commons.math3.linear.TriDiagonalTransformer.getQT()Lorg/apache/commons/math3/linear/RealMatrix;"]
27763 [label="org.apache.commons.math3.linear.TriDiagonalTransformer.getT()Lorg/apache/commons/math3/linear/RealMatrix;"]
27801 [label="org.apache.commons.math3.ml.clustering.CentroidCluster.<init>(Lorg/apache/commons/math3/ml/clustering/Clusterable;)V"]
27804 [label="org.apache.commons.math3.ml.clustering.Cluster.<init>()V"]
27807 [label="org.apache.commons.math3.ml.clustering.CentroidCluster.getCenter()Lorg/apache/commons/math3/ml/clustering/Clusterable;"]
27827 [label="org.apache.commons.math3.ml.clustering.Cluster.addPoint(Lorg/apache/commons/math3/ml/clustering/Clusterable;)V"]
27830 [label="org.apache.commons.math3.ml.clustering.Cluster.getPoints()Ljava/util/List;"]
27833 [label="org.apache.commons.math3.ml.clustering.Clusterable.getPoint()[D"]
27842 [label="org.apache.commons.math3.ml.clustering.Clusterer.<init>(Lorg/apache/commons/math3/ml/distance/DistanceMeasure;)V"]
27858 [label="org.apache.commons.math3.ml.clustering.Clusterer.getDistanceMeasure()Lorg/apache/commons/math3/ml/distance/DistanceMeasure;"]
27860 [label="org.apache.commons.math3.ml.clustering.Clusterer.distance(Lorg/apache/commons/math3/ml/clustering/Clusterable;Lorg/apache/commons/math3/ml/clustering/Clusterable;)D"]
27864 [label="org.apache.commons.math3.ml.distance.DistanceMeasure.compute([D[D)D"]
27886 [label="org.apache.commons.math3.ml.clustering.DBSCANClusterer$PointStatus.<init>()V"]
27895 [label="org.apache.commons.math3.ml.clustering.DBSCANClusterer.<init>(DI)V"]
27899 [label="org.apache.commons.math3.ml.clustering.DBSCANClusterer.<init>(DILorg/apache/commons/math3/ml/distance/DistanceMeasure;)V"]
27904 [label="org.apache.commons.math3.ml.distance.EuclideanDistance.<init>()V"]
27917 [label="org.apache.commons.math3.ml.clustering.DBSCANClusterer.cluster(Ljava/util/Collection;)Ljava/util/List;"]
27932 [label="org.apache.commons.math3.ml.clustering.DBSCANClusterer.getNeighbors(Lorg/apache/commons/math3/ml/clustering/Clusterable;Ljava/util/Collection;)Ljava/util/List;"]
27934 [label="org.apache.commons.math3.ml.clustering.DBSCANClusterer.expandCluster(Lorg/apache/commons/math3/ml/clustering/Cluster;Lorg/apache/commons/math3/ml/clustering/Clusterable;Ljava/util/List;Ljava/util/Collection;Ljava/util/Map;)Lorg/apache/commons/math3/ml/clustering/Cluster;"]
27945 [label="org.apache.commons.math3.ml.clustering.DBSCANClusterer.merge(Ljava/util/List;Ljava/util/List;)Ljava/util/List;"]
27960 [label="java.util.HashSet.<init>(Ljava/util/Collection;)V"]
27970 [label="org.apache.commons.math3.ml.clustering.DoublePoint.<init>([D)V"]
27974 [label="org.apache.commons.math3.ml.clustering.DoublePoint.<init>([I)V"]
27979 [label="org.apache.commons.math3.ml.clustering.DoublePoint.equals(Ljava/lang/Object;)Z"]
27984 [label="org.apache.commons.math3.ml.clustering.DoublePoint.hashCode()I"]
27986 [label="org.apache.commons.math3.ml.clustering.DoublePoint.toString()Ljava/lang/String;"]
27988 [label="java.util.Arrays.toString([D)Ljava/lang/String;"]
27999 [label="org.apache.commons.math3.ml.clustering.evaluation.ClusterEvaluator.<init>()V"]
28001 [label="org.apache.commons.math3.ml.clustering.evaluation.ClusterEvaluator.<init>(Lorg/apache/commons/math3/ml/distance/DistanceMeasure;)V"]
28006 [label="org.apache.commons.math3.ml.clustering.evaluation.ClusterEvaluator.score(Ljava/util/List;)D"]
28012 [label="org.apache.commons.math3.ml.clustering.evaluation.ClusterEvaluator.isBetterScore(DD)Z"]
28016 [label="org.apache.commons.math3.ml.clustering.evaluation.ClusterEvaluator.distance(Lorg/apache/commons/math3/ml/clustering/Clusterable;Lorg/apache/commons/math3/ml/clustering/Clusterable;)D"]
28020 [label="org.apache.commons.math3.ml.clustering.evaluation.ClusterEvaluator.centroidOf(Lorg/apache/commons/math3/ml/clustering/Cluster;)Lorg/apache/commons/math3/ml/clustering/Clusterable;"]
28039 [label="org.apache.commons.math3.ml.clustering.evaluation.SumOfClusterVariances.<init>(Lorg/apache/commons/math3/ml/distance/DistanceMeasure;)V"]
28042 [label="org.apache.commons.math3.ml.clustering.evaluation.SumOfClusterVariances.score(Ljava/util/List;)D"]
28049 [label="org.apache.commons.math3.stat.descriptive.moment.Variance.<init>()V"]
28051 [label="org.apache.commons.math3.stat.descriptive.moment.Variance.increment(D)V"]
28054 [label="org.apache.commons.math3.stat.descriptive.moment.Variance.getResult()D"]
28084 [label="org.apache.commons.math3.ml.clustering.FuzzyKMeansClusterer.<init>(ID)V"]
28088 [label="org.apache.commons.math3.ml.clustering.FuzzyKMeansClusterer.<init>(IDILorg/apache/commons/math3/ml/distance/DistanceMeasure;)V"]
28095 [label="org.apache.commons.math3.ml.clustering.FuzzyKMeansClusterer.<init>(IDILorg/apache/commons/math3/ml/distance/DistanceMeasure;DLorg/apache/commons/math3/random/RandomGenerator;)V"]
28098 [label="org.apache.commons.math3.random.JDKRandomGenerator.<init>()V"]
28125 [label="org.apache.commons.math3.ml.clustering.FuzzyKMeansClusterer.getMembershipMatrix()Lorg/apache/commons/math3/linear/RealMatrix;"]
28131 [label="org.apache.commons.math3.ml.clustering.FuzzyKMeansClusterer.getObjectiveFunctionValue()D"]
28133 [label="org.apache.commons.math3.ml.clustering.FuzzyKMeansClusterer.cluster(Ljava/util/Collection;)Ljava/util/List;"]
28139 [label="org.apache.commons.math3.ml.clustering.FuzzyKMeansClusterer.initializeMembershipMatrix()V"]
28142 [label="org.apache.commons.math3.ml.clustering.FuzzyKMeansClusterer.saveMembershipMatrix([[D)V"]
28144 [label="org.apache.commons.math3.ml.clustering.FuzzyKMeansClusterer.updateClusterCenters()V"]
28146 [label="org.apache.commons.math3.ml.clustering.FuzzyKMeansClusterer.updateMembershipMatrix()V"]
28148 [label="org.apache.commons.math3.ml.clustering.FuzzyKMeansClusterer.calculateMaxMembershipChange([[D)D"]
28166 [label="org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy.<init>()V"]
28187 [label="org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer.<init>(I)V"]
28190 [label="org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer.<init>(II)V"]
28195 [label="org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer.<init>(IILorg/apache/commons/math3/ml/distance/DistanceMeasure;)V"]
28201 [label="org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer.<init>(IILorg/apache/commons/math3/ml/distance/DistanceMeasure;Lorg/apache/commons/math3/random/RandomGenerator;)V"]
28208 [label="org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer.<init>(IILorg/apache/commons/math3/ml/distance/DistanceMeasure;Lorg/apache/commons/math3/random/RandomGenerator;Lorg/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer$EmptyClusterStrategy;)V"]
28229 [label="org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer.cluster(Ljava/util/Collection;)Ljava/util/List;"]
28235 [label="org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer.chooseInitialCenters(Ljava/util/Collection;)Ljava/util/List;"]
28237 [label="org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer.assignPointsToClusters(Ljava/util/List;Ljava/util/Collection;[I)I"]
28239 [label="org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer.getPointFromLargestVarianceCluster(Ljava/util/Collection;)Lorg/apache/commons/math3/ml/clustering/Clusterable;"]
28241 [label="org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer.getPointFromLargestNumberCluster(Ljava/util/Collection;)Lorg/apache/commons/math3/ml/clustering/Clusterable;"]
28244 [label="org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer.getFarthestPoint(Ljava/util/Collection;)Lorg/apache/commons/math3/ml/clustering/Clusterable;"]
28248 [label="org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer.centroidOf(Ljava/util/Collection;I)Lorg/apache/commons/math3/ml/clustering/Clusterable;"]
28254 [label="org.apache.commons.math3.ml.clustering.KMeansPlusPlusClusterer.getNearestCluster(Ljava/util/Collection;Lorg/apache/commons/math3/ml/clustering/Clusterable;)I"]
28293 [label="org.apache.commons.math3.ml.clustering.MultiKMeansPlusPlusClusterer.<init>(Lorg/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer;I)V"]
28297 [label="org.apache.commons.math3.ml.clustering.MultiKMeansPlusPlusClusterer.<init>(Lorg/apache/commons/math3/ml/clustering/KMeansPlusPlusClusterer;ILorg/apache/commons/math3/ml/clustering/evaluation/ClusterEvaluator;)V"]
28319 [label="org.apache.commons.math3.ml.clustering.MultiKMeansPlusPlusClusterer.cluster(Ljava/util/Collection;)Ljava/util/List;"]
28336 [label="org.apache.commons.math3.ml.distance.CanberraDistance.<init>()V"]
28339 [label="org.apache.commons.math3.ml.distance.CanberraDistance.compute([D[D)D"]
28343 [label="org.apache.commons.math3.util.MathArrays.checkEqualLength([D[D)V"]
28347 [label="org.apache.commons.math3.ml.distance.ChebyshevDistance.<init>()V"]
28350 [label="org.apache.commons.math3.ml.distance.ChebyshevDistance.compute([D[D)D"]
28354 [label="org.apache.commons.math3.util.MathArrays.distanceInf([D[D)D"]
28362 [label="org.apache.commons.math3.ml.distance.EarthMoversDistance.<init>()V"]
28365 [label="org.apache.commons.math3.ml.distance.EarthMoversDistance.compute([D[D)D"]
28372 [label="org.apache.commons.math3.ml.distance.EuclideanDistance.compute([D[D)D"]
28376 [label="org.apache.commons.math3.util.MathArrays.distance([D[D)D"]
28380 [label="org.apache.commons.math3.ml.distance.ManhattanDistance.<init>()V"]
28383 [label="org.apache.commons.math3.ml.distance.ManhattanDistance.compute([D[D)D"]
28387 [label="org.apache.commons.math3.util.MathArrays.distance1([D[D)D"]
28401 [label="org.apache.commons.math3.ml.neuralnet.FeatureInitializer.value()D"]
28405 [label="org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory.<init>()V"]
28407 [label="org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory.uniform(Lorg/apache/commons/math3/random/RandomGenerator;DD)Lorg/apache/commons/math3/ml/neuralnet/FeatureInitializer;"]
28414 [label="org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory.randomize(Lorg/apache/commons/math3/distribution/RealDistribution;Lorg/apache/commons/math3/ml/neuralnet/FeatureInitializer;)Lorg/apache/commons/math3/ml/neuralnet/FeatureInitializer;"]
28418 [label="org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory.function(Lorg/apache/commons/math3/analysis/UnivariateFunction;DD)Lorg/apache/commons/math3/ml/neuralnet/FeatureInitializer;"]
28420 [label="org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory.uniform(DD)Lorg/apache/commons/math3/ml/neuralnet/FeatureInitializer;"]
28428 [label="org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory$1.<init>()V"]
28433 [label="org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory$1.value()D"]
28439 [label="org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory$2.<init>()V"]
28442 [label="org.apache.commons.math3.ml.neuralnet.FeatureInitializerFactory$2.value()D"]
28448 [label="org.apache.commons.math3.ml.neuralnet.MapUtils.<init>()V"]
28450 [label="org.apache.commons.math3.ml.neuralnet.MapUtils.findBest([DLjava/lang/Iterable;Lorg/apache/commons/math3/ml/distance/DistanceMeasure;)Lorg/apache/commons/math3/ml/neuralnet/Neuron;"]
28461 [label="org.apache.commons.math3.ml.neuralnet.Neuron.getFeatures()[D"]
28463 [label="org.apache.commons.math3.ml.neuralnet.MapUtils.findBestAndSecondBest([DLjava/lang/Iterable;Lorg/apache/commons/math3/ml/distance/DistanceMeasure;)Lorg/apache/commons/math3/util/Pair;"]
28472 [label="org.apache.commons.math3.ml.neuralnet.MapUtils.sort([DLjava/lang/Iterable;Lorg/apache/commons/math3/ml/distance/DistanceMeasure;)[Lorg/apache/commons/math3/ml/neuralnet/Neuron;"]
28486 [label="org.apache.commons.math3.ml.neuralnet.MapUtils$PairNeuronDouble.<init>(Lorg/apache/commons/math3/ml/neuralnet/Neuron;D)V"]
28490 [label="org.apache.commons.math3.ml.neuralnet.MapUtils$PairNeuronDouble.getNeuron()Lorg/apache/commons/math3/ml/neuralnet/Neuron;"]
28492 [label="org.apache.commons.math3.ml.neuralnet.MapUtils.computeU(Lorg/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D;Lorg/apache/commons/math3/ml/distance/DistanceMeasure;)[[D"]
28499 [label="org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D.getNumberOfRows()I"]
28501 [label="org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D.getNumberOfColumns()I"]
28506 [label="org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D.getNetwork()Lorg/apache/commons/math3/ml/neuralnet/Network;"]
28508 [label="org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D.getNeuron(II)Lorg/apache/commons/math3/ml/neuralnet/Neuron;"]
28513 [label="org.apache.commons.math3.ml.neuralnet.Network.getNeighbours(Lorg/apache/commons/math3/ml/neuralnet/Neuron;)Ljava/util/Collection;"]
28515 [label="org.apache.commons.math3.ml.neuralnet.MapUtils.computeHitHistogram(Ljava/lang/Iterable;Lorg/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D;Lorg/apache/commons/math3/ml/distance/DistanceMeasure;)[[I"]
28524 [label="java.util.HashMap.get(Ljava/lang/Object;)Ljava/lang/Object;"]
28526 [label="java.util.HashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"]
28528 [label="org.apache.commons.math3.ml.neuralnet.MapUtils.computeQuantizationError(Ljava/lang/Iterable;Ljava/lang/Iterable;Lorg/apache/commons/math3/ml/distance/DistanceMeasure;)D"]
28533 [label="org.apache.commons.math3.ml.neuralnet.MapUtils.computeTopographicError(Ljava/lang/Iterable;Lorg/apache/commons/math3/ml/neuralnet/Network;Lorg/apache/commons/math3/ml/distance/DistanceMeasure;)D"]
28539 [label="java.util.Collection.contains(Ljava/lang/Object;)Z"]
28596 [label="org.apache.commons.math3.ml.neuralnet.Network$NeuronIdentifierComparator.<init>()V"]
28599 [label="org.apache.commons.math3.ml.neuralnet.Network$NeuronIdentifierComparator.compare(Lorg/apache/commons/math3/ml/neuralnet/Neuron;Lorg/apache/commons/math3/ml/neuralnet/Neuron;)I"]
28603 [label="org.apache.commons.math3.ml.neuralnet.Neuron.getIdentifier()J"]
28605 [label="org.apache.commons.math3.ml.neuralnet.Network.<init>(JI[Lorg/apache/commons/math3/ml/neuralnet/Neuron;[[J)V"]
28612 [label="java.util.concurrent.ConcurrentHashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"]
28619 [label="java.util.HashSet.<init>()V"]
28621 [label="java.util.concurrent.ConcurrentHashMap.get(Ljava/lang/Object;)Ljava/lang/Object;"]
28623 [label="org.apache.commons.math3.ml.neuralnet.Network.addLinkToLinkSet(Ljava/util/Set;J)V"]
28626 [label="java.util.concurrent.atomic.AtomicLong.<init>(J)V"]
28629 [label="org.apache.commons.math3.ml.neuralnet.Network.<init>(JI)V"]
28633 [label="org.apache.commons.math3.ml.neuralnet.Network.copy()Lorg/apache/commons/math3/ml/neuralnet/Network;"]
28636 [label="java.util.concurrent.atomic.AtomicLong.get()J"]
28638 [label="org.apache.commons.math3.ml.neuralnet.Neuron.copy()Lorg/apache/commons/math3/ml/neuralnet/Neuron;"]
28643 [label="java.util.concurrent.ConcurrentHashMap.entrySet()Ljava/util/Set;"]
28648 [label="org.apache.commons.math3.ml.neuralnet.Network.iterator()Ljava/util/Iterator;"]
28653 [label="java.util.concurrent.ConcurrentHashMap.values()Ljava/util/Collection;"]
28655 [label="org.apache.commons.math3.ml.neuralnet.Network.getNeurons(Ljava/util/Comparator;)Ljava/util/Collection;"]
28664 [label="org.apache.commons.math3.ml.neuralnet.Network.createNeuron([D)J"]
28667 [label="org.apache.commons.math3.ml.neuralnet.Network.createNextId()Ljava/lang/Long;"]
28669 [label="org.apache.commons.math3.ml.neuralnet.Neuron.<init>(J[D)V"]
28671 [label="org.apache.commons.math3.ml.neuralnet.Network.deleteNeuron(Lorg/apache/commons/math3/ml/neuralnet/Neuron;)V"]
28674 [label="org.apache.commons.math3.ml.neuralnet.Network.deleteLink(Lorg/apache/commons/math3/ml/neuralnet/Neuron;Lorg/apache/commons/math3/ml/neuralnet/Neuron;)V"]
28676 [label="java.util.concurrent.ConcurrentHashMap.remove(Ljava/lang/Object;)Ljava/lang/Object;"]
28680 [label="org.apache.commons.math3.ml.neuralnet.Network.addLink(Lorg/apache/commons/math3/ml/neuralnet/Neuron;Lorg/apache/commons/math3/ml/neuralnet/Neuron;)V"]
28684 [label="org.apache.commons.math3.ml.neuralnet.Network.getNeuron(J)Lorg/apache/commons/math3/ml/neuralnet/Neuron;"]
28686 [label="java.util.NoSuchElementException.<init>(Ljava/lang/String;)V"]
28688 [label="java.lang.Long.toString(J)Ljava/lang/String;"]
28696 [label="org.apache.commons.math3.ml.neuralnet.Network.deleteLinkFromLinkSet(Ljava/util/Set;J)V"]
28701 [label="java.util.Set.remove(Ljava/lang/Object;)Z"]
28705 [label="org.apache.commons.math3.ml.neuralnet.Network.getNeighbours(Ljava/lang/Iterable;)Ljava/util/Collection;"]
28708 [label="org.apache.commons.math3.ml.neuralnet.Network.getNeighbours(Ljava/lang/Iterable;Ljava/lang/Iterable;)Ljava/util/Collection;"]
28715 [label="org.apache.commons.math3.ml.neuralnet.Network.getNeighbours(Lorg/apache/commons/math3/ml/neuralnet/Neuron;Ljava/lang/Iterable;)Ljava/util/Collection;"]
28721 [label="java.util.concurrent.atomic.AtomicLong.getAndIncrement()J"]
28723 [label="org.apache.commons.math3.ml.neuralnet.Network.readObject(Ljava/io/ObjectInputStream;)V"]
28726 [label="org.apache.commons.math3.ml.neuralnet.Network.writeReplace()Ljava/lang/Object;"]
28731 [label="org.apache.commons.math3.ml.neuralnet.Network$SerializationProxy.<init>(JI[Lorg/apache/commons/math3/ml/neuralnet/Neuron;[[J)V"]
28753 [label="org.apache.commons.math3.ml.neuralnet.Network$SerializationProxy.readResolve()Ljava/lang/Object;"]
28778 [label="java.util.concurrent.atomic.AtomicReference.<init>(Ljava/lang/Object;)V"]
28781 [label="java.util.concurrent.atomic.AtomicLong.set(J)V"]
28789 [label="org.apache.commons.math3.ml.neuralnet.Neuron.compareAndSetFeatures([D[D)Z"]
28793 [label="org.apache.commons.math3.ml.neuralnet.Neuron.containSameValues([D[D)Z"]
28795 [label="java.util.concurrent.atomic.AtomicLong.incrementAndGet()J"]
28797 [label="org.apache.commons.math3.ml.neuralnet.Neuron.getNumberOfAttemptedUpdates()J"]
28799 [label="org.apache.commons.math3.ml.neuralnet.Neuron.getNumberOfSuccessfulUpdates()J"]
28804 [label="org.apache.commons.math3.ml.neuralnet.Neuron.readObject(Ljava/io/ObjectInputStream;)V"]
28807 [label="org.apache.commons.math3.ml.neuralnet.Neuron.writeReplace()Ljava/lang/Object;"]
28812 [label="org.apache.commons.math3.ml.neuralnet.Neuron$SerializationProxy.<init>(J[D)V"]
28826 [label="org.apache.commons.math3.ml.neuralnet.Neuron$SerializationProxy.readResolve()Ljava/lang/Object;"]
28844 [label="org.apache.commons.math3.ml.neuralnet.oned.NeuronString.<init>(Z[[D)V"]
28853 [label="org.apache.commons.math3.ml.neuralnet.oned.NeuronString.createLinks()V"]
28855 [label="org.apache.commons.math3.ml.neuralnet.oned.NeuronString.<init>(IZ[Lorg/apache/commons/math3/ml/neuralnet/FeatureInitializer;)V"]
28865 [label="org.apache.commons.math3.ml.neuralnet.oned.NeuronString.getFeatures(I)[D"]
28870 [label="org.apache.commons.math3.ml.neuralnet.oned.NeuronString.readObject(Ljava/io/ObjectInputStream;)V"]
28873 [label="org.apache.commons.math3.ml.neuralnet.oned.NeuronString.writeReplace()Ljava/lang/Object;"]
28879 [label="org.apache.commons.math3.ml.neuralnet.oned.NeuronString$SerializationProxy.<init>(Z[[D)V"]
28893 [label="org.apache.commons.math3.ml.neuralnet.oned.NeuronString$SerializationProxy.readResolve()Ljava/lang/Object;"]
28921 [label="org.apache.commons.math3.ml.neuralnet.sofm.KohonenTrainingTask.<init>(Lorg/apache/commons/math3/ml/neuralnet/Network;Ljava/util/Iterator;Lorg/apache/commons/math3/ml/neuralnet/sofm/KohonenUpdateAction;)V"]
28929 [label="org.apache.commons.math3.ml.neuralnet.sofm.KohonenTrainingTask.run()V"]
28931 [label="org.apache.commons.math3.ml.neuralnet.sofm.KohonenUpdateAction.update(Lorg/apache/commons/math3/ml/neuralnet/Network;[D)V"]
28951 [label="org.apache.commons.math3.ml.neuralnet.sofm.KohonenUpdateAction.<init>(Lorg/apache/commons/math3/ml/distance/DistanceMeasure;Lorg/apache/commons/math3/ml/neuralnet/sofm/LearningFactorFunction;Lorg/apache/commons/math3/ml/neuralnet/sofm/NeighbourhoodSizeFunction;)V"]
28963 [label="org.apache.commons.math3.ml.neuralnet.sofm.LearningFactorFunction.value(J)D"]
28965 [label="org.apache.commons.math3.ml.neuralnet.sofm.KohonenUpdateAction.findAndUpdateBestNeuron(Lorg/apache/commons/math3/ml/neuralnet/Network;[DD)Lorg/apache/commons/math3/ml/neuralnet/Neuron;"]
28967 [label="org.apache.commons.math3.ml.neuralnet.sofm.NeighbourhoodSizeFunction.value(J)I"]
28972 [label="java.util.Collection.add(Ljava/lang/Object;)Z"]
28974 [label="java.util.HashSet.add(Ljava/lang/Object;)Z"]
28976 [label="org.apache.commons.math3.ml.neuralnet.sofm.KohonenUpdateAction.updateNeighbouringNeuron(Lorg/apache/commons/math3/ml/neuralnet/Neuron;[DD)V"]
28979 [label="java.util.AbstractCollection.addAll(Ljava/util/Collection;)Z"]
28981 [label="org.apache.commons.math3.ml.neuralnet.sofm.KohonenUpdateAction.getNumberOfCalls()J"]
28983 [label="org.apache.commons.math3.ml.neuralnet.sofm.KohonenUpdateAction.attemptNeuronUpdate(Lorg/apache/commons/math3/ml/neuralnet/Neuron;[DD)Z"]
28988 [label="org.apache.commons.math3.ml.neuralnet.sofm.KohonenUpdateAction.computeFeatures([D[DD)[D"]
29011 [label="org.apache.commons.math3.ml.neuralnet.sofm.LearningFactorFunctionFactory.<init>()V"]
29013 [label="org.apache.commons.math3.ml.neuralnet.sofm.LearningFactorFunctionFactory.exponentialDecay(DDJ)Lorg/apache/commons/math3/ml/neuralnet/sofm/LearningFactorFunction;"]
29018 [label="org.apache.commons.math3.ml.neuralnet.sofm.LearningFactorFunctionFactory$1.<init>()V"]
29026 [label="org.apache.commons.math3.ml.neuralnet.sofm.util.ExponentialDecayFunction.<init>(DDJ)V"]
29028 [label="org.apache.commons.math3.ml.neuralnet.sofm.LearningFactorFunctionFactory$1.value(J)D"]
29031 [label="org.apache.commons.math3.ml.neuralnet.sofm.util.ExponentialDecayFunction.value(J)D"]
29034 [label="org.apache.commons.math3.ml.neuralnet.sofm.LearningFactorFunctionFactory.quasiSigmoidDecay(DDJ)Lorg/apache/commons/math3/ml/neuralnet/sofm/LearningFactorFunction;"]
29039 [label="org.apache.commons.math3.ml.neuralnet.sofm.LearningFactorFunctionFactory$2.<init>()V"]
29047 [label="org.apache.commons.math3.ml.neuralnet.sofm.util.QuasiSigmoidDecayFunction.<init>(DDJ)V"]
29049 [label="org.apache.commons.math3.ml.neuralnet.sofm.LearningFactorFunctionFactory$2.value(J)D"]
29052 [label="org.apache.commons.math3.ml.neuralnet.sofm.util.QuasiSigmoidDecayFunction.value(J)D"]
29060 [label="org.apache.commons.math3.ml.neuralnet.sofm.NeighbourhoodSizeFunctionFactory.<init>()V"]
29062 [label="org.apache.commons.math3.ml.neuralnet.sofm.NeighbourhoodSizeFunctionFactory.exponentialDecay(DDJ)Lorg/apache/commons/math3/ml/neuralnet/sofm/NeighbourhoodSizeFunction;"]
29067 [label="org.apache.commons.math3.ml.neuralnet.sofm.NeighbourhoodSizeFunctionFactory$1.<init>()V"]
29072 [label="org.apache.commons.math3.ml.neuralnet.sofm.NeighbourhoodSizeFunctionFactory$1.value(J)I"]
29076 [label="org.apache.commons.math3.ml.neuralnet.sofm.NeighbourhoodSizeFunctionFactory.quasiSigmoidDecay(DDJ)Lorg/apache/commons/math3/ml/neuralnet/sofm/NeighbourhoodSizeFunction;"]
29081 [label="org.apache.commons.math3.ml.neuralnet.sofm.NeighbourhoodSizeFunctionFactory$2.<init>()V"]
29086 [label="org.apache.commons.math3.ml.neuralnet.sofm.NeighbourhoodSizeFunctionFactory$2.value(J)I"]
29132 [label="org.apache.commons.math3.ml.neuralnet.SquareNeighbourhood.<init>()V"]
29169 [label="org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$HorizontalDirection.<init>()V"]
29187 [label="org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$VerticalDirection.<init>()V"]
29198 [label="org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D.<init>(ZZLorg/apache/commons/math3/ml/neuralnet/SquareNeighbourhood;[[[D)V"]
29211 [label="org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D.createLinks()V"]
29213 [label="org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D.<init>(IZIZLorg/apache/commons/math3/ml/neuralnet/SquareNeighbourhood;[Lorg/apache/commons/math3/ml/neuralnet/FeatureInitializer;)V"]
29221 [label="org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D.<init>(ZZLorg/apache/commons/math3/ml/neuralnet/SquareNeighbourhood;Lorg/apache/commons/math3/ml/neuralnet/Network;[[J)V"]
29228 [label="org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D.copy()Lorg/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D;"]
29232 [label="org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D.iterator()Ljava/util/Iterator;"]
29241 [label="org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D.getNeuron(IILorg/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D$HorizontalDirection;Lorg/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D$VerticalDirection;)Lorg/apache/commons/math3/ml/neuralnet/Neuron;"]
29247 [label="org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D.getLocation(IILorg/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D$HorizontalDirection;Lorg/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D$VerticalDirection;)[I"]
29269 [label="org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D.readObject(Ljava/io/ObjectInputStream;)V"]
29272 [label="org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D.writeReplace()Ljava/lang/Object;"]
29277 [label="org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$SerializationProxy.<init>(ZZLorg/apache/commons/math3/ml/neuralnet/SquareNeighbourhood;[[[D)V"]
29299 [label="org.apache.commons.math3.ml.neuralnet.twod.NeuronSquareMesh2D$SerializationProxy.readResolve()Ljava/lang/Object;"]
29322 [label="org.apache.commons.math3.ml.neuralnet.twod.util.HitHistogram.<init>(ZLorg/apache/commons/math3/ml/distance/DistanceMeasure;)V"]
29328 [label="org.apache.commons.math3.ml.neuralnet.twod.util.HitHistogram.computeImage(Lorg/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D;Ljava/lang/Iterable;)[[D"]
29335 [label="org.apache.commons.math3.ml.neuralnet.twod.util.LocationFinder.<init>(Lorg/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D;)V"]
29340 [label="org.apache.commons.math3.ml.neuralnet.twod.util.LocationFinder.getLocation(Lorg/apache/commons/math3/ml/neuralnet/Neuron;)Lorg/apache/commons/math3/ml/neuralnet/twod/util/LocationFinder$Location;"]
29342 [label="org.apache.commons.math3.ml.neuralnet.twod.util.LocationFinder$Location.getRow()I"]
29344 [label="org.apache.commons.math3.ml.neuralnet.twod.util.LocationFinder$Location.getColumn()I"]
29360 [label="org.apache.commons.math3.ml.neuralnet.twod.util.LocationFinder$Location.<init>(II)V"]
29388 [label="org.apache.commons.math3.ml.neuralnet.twod.util.QuantizationError.<init>(Lorg/apache/commons/math3/ml/distance/DistanceMeasure;)V"]
29392 [label="org.apache.commons.math3.ml.neuralnet.twod.util.QuantizationError.computeImage(Lorg/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D;Ljava/lang/Iterable;)[[D"]
29404 [label="org.apache.commons.math3.ml.neuralnet.twod.util.SmoothedDataHistogram.<init>(ILorg/apache/commons/math3/ml/distance/DistanceMeasure;)V"]
29411 [label="org.apache.commons.math3.ml.neuralnet.twod.util.SmoothedDataHistogram.computeImage(Lorg/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D;Ljava/lang/Iterable;)[[D"]
29422 [label="org.apache.commons.math3.ml.neuralnet.twod.util.TopographicErrorHistogram.<init>(ZLorg/apache/commons/math3/ml/distance/DistanceMeasure;)V"]
29428 [label="org.apache.commons.math3.ml.neuralnet.twod.util.TopographicErrorHistogram.computeImage(Lorg/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D;Ljava/lang/Iterable;)[[D"]
29440 [label="org.apache.commons.math3.ml.neuralnet.twod.util.UnifiedDistanceMatrix.<init>(ZLorg/apache/commons/math3/ml/distance/DistanceMeasure;)V"]
29446 [label="org.apache.commons.math3.ml.neuralnet.twod.util.UnifiedDistanceMatrix.computeImage(Lorg/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D;)[[D"]
29449 [label="org.apache.commons.math3.ml.neuralnet.twod.util.UnifiedDistanceMatrix.individualDistances(Lorg/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D;)[[D"]
29451 [label="org.apache.commons.math3.ml.neuralnet.twod.util.UnifiedDistanceMatrix.averageDistances(Lorg/apache/commons/math3/ml/neuralnet/twod/NeuronSquareMesh2D;)[[D"]
29563 [label="org.apache.commons.math3.ode.AbstractFieldIntegrator.<init>(Lorg/apache/commons/math3/Field;Ljava/lang/String;)V"]
29581 [label="org.apache.commons.math3.ode.AbstractFieldIntegrator.getField()Lorg/apache/commons/math3/Field;"]
29585 [label="org.apache.commons.math3.ode.AbstractFieldIntegrator.addStepHandler(Lorg/apache/commons/math3/ode/sampling/FieldStepHandler;)V"]
29588 [label="org.apache.commons.math3.ode.AbstractFieldIntegrator.getStepHandlers()Ljava/util/Collection;"]
29590 [label="java.util.Collections.unmodifiableCollection(Ljava/util/Collection;)Ljava/util/Collection;"]
29592 [label="org.apache.commons.math3.ode.AbstractFieldIntegrator.clearStepHandlers()V"]
29594 [label="java.util.Collection.clear()V"]
29596 [label="org.apache.commons.math3.ode.AbstractFieldIntegrator.addEventHandler(Lorg/apache/commons/math3/ode/events/FieldEventHandler;DDI)V"]
29608 [label="org.apache.commons.math3.ode.AbstractFieldIntegrator.addEventHandler(Lorg/apache/commons/math3/ode/events/FieldEventHandler;DDILorg/apache/commons/math3/analysis/solvers/BracketedRealFieldUnivariateSolver;)V"]
29621 [label="org.apache.commons.math3.ode.events.FieldEventState.<init>(Lorg/apache/commons/math3/ode/events/FieldEventHandler;DLorg/apache/commons/math3/RealFieldElement;ILorg/apache/commons/math3/analysis/solvers/BracketedRealFieldUnivariateSolver;)V"]
29623 [label="org.apache.commons.math3.ode.AbstractFieldIntegrator.getEventHandlers()Ljava/util/Collection;"]
29634 [label="org.apache.commons.math3.ode.events.FieldEventState.getEventHandler()Lorg/apache/commons/math3/ode/events/FieldEventHandler;"]
29636 [label="org.apache.commons.math3.ode.AbstractFieldIntegrator.clearEventHandlers()V"]
29642 [label="org.apache.commons.math3.ode.AbstractFieldIntegrator.setMaxEvaluations(I)V"]
29645 [label="org.apache.commons.math3.ode.AbstractFieldIntegrator.getMaxEvaluations()I"]
29647 [label="org.apache.commons.math3.ode.AbstractFieldIntegrator.getEvaluations()I"]
29649 [label="org.apache.commons.math3.ode.AbstractFieldIntegrator.initIntegration(Lorg/apache/commons/math3/ode/FieldExpandableODE;Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;"]
29657 [label="org.apache.commons.math3.ode.FieldExpandableODE.init(Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)V"]
29659 [label="org.apache.commons.math3.ode.AbstractFieldIntegrator.computeDerivatives(Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;)[Lorg/apache/commons/math3/RealFieldElement;"]
29661 [label="org.apache.commons.math3.ode.FieldODEStateAndDerivative.<init>(Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;)V"]
29663 [label="org.apache.commons.math3.ode.events.FieldEventHandler.init(Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/RealFieldElement;)V"]
29665 [label="org.apache.commons.math3.ode.sampling.FieldStepHandler.init(Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/RealFieldElement;)V"]
29667 [label="org.apache.commons.math3.ode.AbstractFieldIntegrator.setStateInitialized(Z)V"]
29671 [label="org.apache.commons.math3.ode.AbstractFieldIntegrator.getEvaluationsCounter()Lorg/apache/commons/math3/util/IntegerSequence$Incrementor;"]
29679 [label="org.apache.commons.math3.ode.FieldExpandableODE.computeDerivatives(Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;)[Lorg/apache/commons/math3/RealFieldElement;"]
29683 [label="org.apache.commons.math3.ode.AbstractFieldIntegrator.acceptStep(Lorg/apache/commons/math3/ode/sampling/AbstractFieldStepInterpolator;Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;"]
29693 [label="org.apache.commons.math3.ode.sampling.AbstractFieldStepInterpolator.getGlobalPreviousState()Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;"]
29695 [label="org.apache.commons.math3.ode.sampling.AbstractFieldStepInterpolator.getGlobalCurrentState()Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;"]
29697 [label="org.apache.commons.math3.ode.events.FieldEventState.reinitializeBegin(Lorg/apache/commons/math3/ode/sampling/FieldStepInterpolator;)V"]
29699 [label="org.apache.commons.math3.ode.sampling.AbstractFieldStepInterpolator.isForward()Z"]
29713 [label="org.apache.commons.math3.ode.AbstractFieldIntegrator$1.<init>()V"]
29716 [label="org.apache.commons.math3.ode.AbstractFieldIntegrator$1.compare(Lorg/apache/commons/math3/ode/events/FieldEventState;Lorg/apache/commons/math3/ode/events/FieldEventState;)I"]
29720 [label="org.apache.commons.math3.ode.events.FieldEventState.getEventTime()Lorg/apache/commons/math3/RealFieldElement;"]
29722 [label="org.apache.commons.math3.ode.events.FieldEventState.evaluateStep(Lorg/apache/commons/math3/ode/sampling/FieldStepInterpolator;)Z"]
29727 [label="java.util.Set.iterator()Ljava/util/Iterator;"]
29729 [label="org.apache.commons.math3.ode.sampling.AbstractFieldStepInterpolator.getInterpolatedState(Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;"]
29731 [label="org.apache.commons.math3.ode.sampling.AbstractFieldStepInterpolator.restrictStep(Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;)Lorg/apache/commons/math3/ode/sampling/AbstractFieldStepInterpolator;"]
29733 [label="org.apache.commons.math3.ode.events.FieldEventState.stepAccepted(Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;)V"]
29736 [label="org.apache.commons.math3.ode.events.FieldEventState.stop()Z"]
29738 [label="org.apache.commons.math3.ode.sampling.FieldStepHandler.handleStep(Lorg/apache/commons/math3/ode/sampling/FieldStepInterpolator;Z)V"]
29747 [label="org.apache.commons.math3.ode.events.FieldEventState.reset(Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;)Lorg/apache/commons/math3/ode/FieldODEState;"]
29749 [label="org.apache.commons.math3.ode.FieldEquationsMapper.mapState(Lorg/apache/commons/math3/ode/FieldODEState;)[Lorg/apache/commons/math3/RealFieldElement;"]
29751 [label="org.apache.commons.math3.ode.FieldExpandableODE.getMapper()Lorg/apache/commons/math3/ode/FieldEquationsMapper;"]
29753 [label="org.apache.commons.math3.ode.FieldODEState.getTime()Lorg/apache/commons/math3/RealFieldElement;"]
29755 [label="org.apache.commons.math3.ode.FieldEquationsMapper.mapStateAndDerivative(Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;"]
29757 [label="java.util.Set.isEmpty()Z"]
29759 [label="org.apache.commons.math3.ode.AbstractFieldIntegrator.sanityChecks(Lorg/apache/commons/math3/ode/FieldODEState;Lorg/apache/commons/math3/RealFieldElement;)V"]
29764 [label="org.apache.commons.math3.ode.AbstractFieldIntegrator.resetOccurred()Z"]
29766 [label="org.apache.commons.math3.ode.AbstractFieldIntegrator.setStepSize(Lorg/apache/commons/math3/RealFieldElement;)V"]
29769 [label="org.apache.commons.math3.ode.AbstractFieldIntegrator.getStepSize()Lorg/apache/commons/math3/RealFieldElement;"]
29771 [label="org.apache.commons.math3.ode.AbstractFieldIntegrator.setStepStart(Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;)V"]
29774 [label="org.apache.commons.math3.ode.AbstractFieldIntegrator.getStepStart()Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;"]
29776 [label="org.apache.commons.math3.ode.AbstractFieldIntegrator.setIsLastStep(Z)V"]
29779 [label="org.apache.commons.math3.ode.AbstractFieldIntegrator.isLastStep()Z"]
29823 [label="org.apache.commons.math3.ode.AbstractIntegrator.<init>(Ljava/lang/String;)V"]
29839 [label="org.apache.commons.math3.ode.AbstractIntegrator.<init>()V"]
29844 [label="org.apache.commons.math3.ode.AbstractIntegrator.addStepHandler(Lorg/apache/commons/math3/ode/sampling/StepHandler;)V"]
29847 [label="org.apache.commons.math3.ode.AbstractIntegrator.getStepHandlers()Ljava/util/Collection;"]
29849 [label="org.apache.commons.math3.ode.AbstractIntegrator.clearStepHandlers()V"]
29851 [label="org.apache.commons.math3.ode.AbstractIntegrator.addEventHandler(Lorg/apache/commons/math3/ode/events/EventHandler;DDI)V"]
29860 [label="org.apache.commons.math3.ode.AbstractIntegrator.addEventHandler(Lorg/apache/commons/math3/ode/events/EventHandler;DDILorg/apache/commons/math3/analysis/solvers/UnivariateSolver;)V"]
29870 [label="org.apache.commons.math3.ode.events.EventState.<init>(Lorg/apache/commons/math3/ode/events/EventHandler;DDILorg/apache/commons/math3/analysis/solvers/UnivariateSolver;)V"]
29872 [label="org.apache.commons.math3.ode.AbstractIntegrator.getEventHandlers()Ljava/util/Collection;"]
29883 [label="org.apache.commons.math3.ode.events.EventState.getEventHandler()Lorg/apache/commons/math3/ode/events/EventHandler;"]
29885 [label="org.apache.commons.math3.ode.AbstractIntegrator.clearEventHandlers()V"]
29891 [label="org.apache.commons.math3.ode.AbstractIntegrator.setMaxEvaluations(I)V"]
29894 [label="org.apache.commons.math3.ode.AbstractIntegrator.getMaxEvaluations()I"]
29896 [label="org.apache.commons.math3.ode.AbstractIntegrator.getEvaluations()I"]
29898 [label="org.apache.commons.math3.ode.AbstractIntegrator.initIntegration(D[DD)V"]
29903 [label="org.apache.commons.math3.ode.events.EventState.setExpandable(Lorg/apache/commons/math3/ode/ExpandableStatefulODE;)V"]
29906 [label="org.apache.commons.math3.ode.events.EventHandler.init(D[DD)V"]
29908 [label="org.apache.commons.math3.ode.sampling.StepHandler.init(D[DD)V"]
29910 [label="org.apache.commons.math3.ode.AbstractIntegrator.setStateInitialized(Z)V"]
29912 [label="org.apache.commons.math3.ode.AbstractIntegrator.setEquations(Lorg/apache/commons/math3/ode/ExpandableStatefulODE;)V"]
29915 [label="org.apache.commons.math3.ode.AbstractIntegrator.getExpandable()Lorg/apache/commons/math3/ode/ExpandableStatefulODE;"]
29917 [label="org.apache.commons.math3.ode.AbstractIntegrator.getEvaluationsCounter()Lorg/apache/commons/math3/util/Incrementor;"]
29919 [label="org.apache.commons.math3.ode.AbstractIntegrator.getCounter()Lorg/apache/commons/math3/util/IntegerSequence$Incrementor;"]
29921 [label="org.apache.commons.math3.ode.AbstractIntegrator.integrate(Lorg/apache/commons/math3/ode/FirstOrderDifferentialEquations;D[DD[D)D"]
29931 [label="org.apache.commons.math3.ode.FirstOrderDifferentialEquations.getDimension()I"]
29933 [label="org.apache.commons.math3.ode.ExpandableStatefulODE.<init>(Lorg/apache/commons/math3/ode/FirstOrderDifferentialEquations;)V"]
29935 [label="org.apache.commons.math3.ode.ExpandableStatefulODE.setTime(D)V"]
29937 [label="org.apache.commons.math3.ode.ExpandableStatefulODE.setPrimaryState([D)V"]
29939 [label="org.apache.commons.math3.ode.AbstractIntegrator.integrate(Lorg/apache/commons/math3/ode/ExpandableStatefulODE;D)V"]
29941 [label="org.apache.commons.math3.ode.ExpandableStatefulODE.getPrimaryState()[D"]
29943 [label="org.apache.commons.math3.ode.ExpandableStatefulODE.getTime()D"]
29948 [label="org.apache.commons.math3.ode.AbstractIntegrator.computeDerivatives(D[D[D)V"]
29953 [label="org.apache.commons.math3.ode.ExpandableStatefulODE.computeDerivatives(D[D[D)V"]
29957 [label="org.apache.commons.math3.ode.AbstractIntegrator.acceptStep(Lorg/apache/commons/math3/ode/sampling/AbstractStepInterpolator;[D[DD)D"]
29966 [label="org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.getGlobalPreviousTime()D"]
29968 [label="org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.getGlobalCurrentTime()D"]
29970 [label="org.apache.commons.math3.ode.events.EventState.reinitializeBegin(Lorg/apache/commons/math3/ode/sampling/StepInterpolator;)V"]
29972 [label="org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.isForward()Z"]
29983 [label="org.apache.commons.math3.ode.AbstractIntegrator$1.<init>()V"]
29986 [label="org.apache.commons.math3.ode.AbstractIntegrator$1.compare(Lorg/apache/commons/math3/ode/events/EventState;Lorg/apache/commons/math3/ode/events/EventState;)I"]
29990 [label="org.apache.commons.math3.ode.events.EventState.getEventTime()D"]
29992 [label="org.apache.commons.math3.ode.events.EventState.evaluateStep(Lorg/apache/commons/math3/ode/sampling/StepInterpolator;)Z"]
29997 [label="org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.setSoftPreviousTime(D)V"]
29999 [label="org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.setSoftCurrentTime(D)V"]
30001 [label="org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.setInterpolatedTime(D)V"]
30003 [label="org.apache.commons.math3.ode.EquationsMapper.insertEquationData([D[D)V"]
30005 [label="org.apache.commons.math3.ode.ExpandableStatefulODE.getPrimaryMapper()Lorg/apache/commons/math3/ode/EquationsMapper;"]
30007 [label="org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.getInterpolatedState()[D"]
30009 [label="org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.getInterpolatedSecondaryState(I)[D"]
30014 [label="org.apache.commons.math3.ode.ExpandableStatefulODE.getSecondaryMappers()[Lorg/apache/commons/math3/ode/EquationsMapper;"]
30016 [label="org.apache.commons.math3.ode.events.EventState.stepAccepted(D[D)V"]
30019 [label="org.apache.commons.math3.ode.events.EventState.stop()Z"]
30021 [label="org.apache.commons.math3.ode.sampling.StepHandler.handleStep(Lorg/apache/commons/math3/ode/sampling/StepInterpolator;Z)V"]
30024 [label="org.apache.commons.math3.ode.events.EventState.reset(D[D)Z"]
30027 [label="org.apache.commons.math3.ode.AbstractIntegrator.sanityChecks(Lorg/apache/commons/math3/ode/ExpandableStatefulODE;D)V"]
30041 [label="org.apache.commons.math3.ode.AbstractParameterizable.<init>([Ljava/lang/String;)V"]
30049 [label="org.apache.commons.math3.ode.AbstractParameterizable.<init>(Ljava/util/Collection;)V"]
30052 [label="java.util.Collection.addAll(Ljava/util/Collection;)Z"]
30056 [label="org.apache.commons.math3.ode.AbstractParameterizable.isSupported(Ljava/lang/String;)Z"]
30059 [label="org.apache.commons.math3.ode.AbstractParameterizable.complainIfNotSupported(Ljava/lang/String;)V"]
30066 [label="org.apache.commons.math3.ode.UnknownParameterException.<init>(Ljava/lang/String;)V"]
30092 [label="org.apache.commons.math3.ode.ContinuousOutputFieldModel.<init>()V"]
30102 [label="org.apache.commons.math3.ode.ContinuousOutputFieldModel.append(Lorg/apache/commons/math3/ode/ContinuousOutputFieldModel;)V"]
30110 [label="org.apache.commons.math3.ode.sampling.FieldStepInterpolator.getPreviousState()Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;"]
30112 [label="org.apache.commons.math3.ode.ContinuousOutputFieldModel.checkDimensionsEquality(II)V"]
30114 [label="org.apache.commons.math3.ode.FieldODEState.getStateDimension()I"]
30116 [label="org.apache.commons.math3.ode.FieldODEState.getNumberOfSecondaryStates()I"]
30118 [label="org.apache.commons.math3.ode.FieldODEState.getSecondaryStateDimension(I)I"]
30121 [label="org.apache.commons.math3.ode.sampling.FieldStepInterpolator.getCurrentState()Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;"]
30123 [label="org.apache.commons.math3.ode.ContinuousOutputFieldModel.getInitialTime()Lorg/apache/commons/math3/RealFieldElement;"]
30129 [label="org.apache.commons.math3.ode.ContinuousOutputFieldModel.init(Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/RealFieldElement;)V"]
30133 [label="org.apache.commons.math3.ode.ContinuousOutputFieldModel.handleStep(Lorg/apache/commons/math3/ode/sampling/FieldStepInterpolator;Z)V"]
30137 [label="org.apache.commons.math3.ode.sampling.FieldStepInterpolator.isForward()Z"]
30142 [label="org.apache.commons.math3.ode.ContinuousOutputFieldModel.getInterpolatedState(Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;"]
30145 [label="org.apache.commons.math3.ode.ContinuousOutputFieldModel.locatePoint(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/sampling/FieldStepInterpolator;)I"]
30147 [label="org.apache.commons.math3.ode.sampling.FieldStepInterpolator.getInterpolatedState(Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;"]
30172 [label="org.apache.commons.math3.ode.ContinuousOutputModel.<init>()V"]
30182 [label="org.apache.commons.math3.ode.ContinuousOutputModel.append(Lorg/apache/commons/math3/ode/ContinuousOutputModel;)V"]
30187 [label="org.apache.commons.math3.ode.ContinuousOutputModel.getInterpolatedState()[D"]
30189 [label="org.apache.commons.math3.ode.sampling.StepInterpolator.getCurrentTime()D"]
30191 [label="org.apache.commons.math3.ode.sampling.StepInterpolator.getPreviousTime()D"]
30193 [label="org.apache.commons.math3.ode.ContinuousOutputModel.getInitialTime()D"]
30195 [label="org.apache.commons.math3.ode.sampling.StepInterpolator.copy()Lorg/apache/commons/math3/ode/sampling/StepInterpolator;"]
30197 [label="org.apache.commons.math3.ode.ContinuousOutputModel.init(D[DD)V"]
30202 [label="org.apache.commons.math3.ode.ContinuousOutputModel.handleStep(Lorg/apache/commons/math3/ode/sampling/StepInterpolator;Z)V"]
30206 [label="org.apache.commons.math3.ode.sampling.StepInterpolator.isForward()Z"]
30211 [label="org.apache.commons.math3.ode.ContinuousOutputModel.getInterpolatedTime()D"]
30213 [label="org.apache.commons.math3.ode.sampling.StepInterpolator.getInterpolatedTime()D"]
30215 [label="org.apache.commons.math3.ode.ContinuousOutputModel.setInterpolatedTime(D)V"]
30218 [label="org.apache.commons.math3.ode.ContinuousOutputModel.locatePoint(DLorg/apache/commons/math3/ode/sampling/StepInterpolator;)I"]
30220 [label="org.apache.commons.math3.ode.sampling.StepInterpolator.setInterpolatedTime(D)V"]
30223 [label="org.apache.commons.math3.ode.sampling.StepInterpolator.getInterpolatedState()[D"]
30225 [label="org.apache.commons.math3.ode.ContinuousOutputModel.getInterpolatedDerivatives()[D"]
30227 [label="org.apache.commons.math3.ode.sampling.StepInterpolator.getInterpolatedDerivatives()[D"]
30229 [label="org.apache.commons.math3.ode.ContinuousOutputModel.getInterpolatedSecondaryState(I)[D"]
30232 [label="org.apache.commons.math3.ode.sampling.StepInterpolator.getInterpolatedSecondaryState(I)[D"]
30234 [label="org.apache.commons.math3.ode.ContinuousOutputModel.getInterpolatedSecondaryDerivatives(I)[D"]
30237 [label="org.apache.commons.math3.ode.sampling.StepInterpolator.getInterpolatedSecondaryDerivatives(I)[D"]
30249 [label="org.apache.commons.math3.ode.EquationsMapper.<init>(II)V"]
30255 [label="org.apache.commons.math3.ode.EquationsMapper.getFirstIndex()I"]
30257 [label="org.apache.commons.math3.ode.EquationsMapper.getDimension()I"]
30259 [label="org.apache.commons.math3.ode.EquationsMapper.extractEquationData([D[D)V"]
30284 [label="org.apache.commons.math3.ode.events.Action.<init>()V"]
30320 [label="org.apache.commons.math3.ode.events.EventFilter.<init>(Lorg/apache/commons/math3/ode/events/EventHandler;Lorg/apache/commons/math3/ode/events/FilterType;)V"]
30329 [label="org.apache.commons.math3.ode.events.EventFilter.init(D[DD)V"]
30338 [label="org.apache.commons.math3.ode.events.EventFilter.g(D[D)D"]
30342 [label="org.apache.commons.math3.ode.events.EventHandler.g(D[D)D"]
30344 [label="org.apache.commons.math3.ode.events.FilterType.selectTransformer(Lorg/apache/commons/math3/ode/events/Transformer;DZ)Lorg/apache/commons/math3/ode/events/Transformer;"]
30346 [label="org.apache.commons.math3.ode.events.Transformer.transformed(D)D"]
30348 [label="org.apache.commons.math3.ode.events.EventFilter.eventOccurred(D[DZ)Lorg/apache/commons/math3/ode/events/EventHandler$Action;"]
30356 [label="org.apache.commons.math3.ode.events.EventHandler.eventOccurred(D[DZ)Lorg/apache/commons/math3/ode/events/EventHandler$Action;"]
30358 [label="org.apache.commons.math3.ode.events.FilterType.getTriggeredIncreasing()Z"]
30360 [label="org.apache.commons.math3.ode.events.EventFilter.resetState(D[D)V"]
30364 [label="org.apache.commons.math3.ode.events.EventHandler.resetState(D[D)V"]
30371 [label="org.apache.commons.math3.ode.events.EventHandler$Action.<init>()V"]
30461 [label="org.apache.commons.math3.ode.events.EventState.getCompleteState(Lorg/apache/commons/math3/ode/sampling/StepInterpolator;)[D"]
30465 [label="org.apache.commons.math3.ode.ExpandableStatefulODE.getTotalDimension()I"]
30470 [label="org.apache.commons.math3.ode.events.EventState$1.<init>()V"]
30473 [label="org.apache.commons.math3.ode.events.EventState$1.value(D)D"]
30479 [label="org.apache.commons.math3.ode.events.EventState$LocalMaxCountExceededException.<init>(Lorg/apache/commons/math3/exception/MaxCountExceededException;)V"]
30490 [label="org.apache.commons.math3.ode.events.EventState$LocalMaxCountExceededException.getException()Lorg/apache/commons/math3/exception/MaxCountExceededException;"]
30519 [label="org.apache.commons.math3.ode.events.FieldEventHandler.g(Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;)Lorg/apache/commons/math3/RealFieldElement;"]
30522 [label="org.apache.commons.math3.ode.events.FieldEventHandler.eventOccurred(Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Z)Lorg/apache/commons/math3/ode/events/Action;"]
30526 [label="org.apache.commons.math3.ode.events.FieldEventHandler.resetState(Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;)Lorg/apache/commons/math3/ode/FieldODEState;"]
30596 [label="org.apache.commons.math3.ode.events.FieldEventState$1.<init>()V"]
30599 [label="org.apache.commons.math3.ode.events.FieldEventState$1.value(Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/RealFieldElement;"]
30618 [label="org.apache.commons.math3.ode.events.FilterType.<init>()V"]
30626 [label="org.apache.commons.math3.ode.events.FilterType$1.selectTransformer(Lorg/apache/commons/math3/ode/events/Transformer;DZ)Lorg/apache/commons/math3/ode/events/Transformer;"]
30645 [label="org.apache.commons.math3.ode.events.FilterType$2.selectTransformer(Lorg/apache/commons/math3/ode/events/Transformer;DZ)Lorg/apache/commons/math3/ode/events/Transformer;"]
30663 [label="org.apache.commons.math3.ode.events.Transformer.<init>()V"]
30731 [label="org.apache.commons.math3.ode.ExpandableStatefulODE.getPrimary()Lorg/apache/commons/math3/ode/FirstOrderDifferentialEquations;"]
30743 [label="org.apache.commons.math3.ode.FirstOrderDifferentialEquations.computeDerivatives(D[D[D)V"]
30747 [label="org.apache.commons.math3.ode.SecondaryEquations.computeDerivatives(D[D[D[D[D)V"]
30753 [label="org.apache.commons.math3.ode.ExpandableStatefulODE.addSecondaryEquations(Lorg/apache/commons/math3/ode/SecondaryEquations;)I"]
30759 [label="org.apache.commons.math3.ode.ExpandableStatefulODE$SecondaryComponent.<init>(Lorg/apache/commons/math3/ode/SecondaryEquations;I)V"]
30770 [label="org.apache.commons.math3.ode.ExpandableStatefulODE.getPrimaryStateDot()[D"]
30772 [label="org.apache.commons.math3.ode.ExpandableStatefulODE.setSecondaryState(I[D)V"]
30776 [label="org.apache.commons.math3.ode.ExpandableStatefulODE.getSecondaryState(I)[D"]
30779 [label="org.apache.commons.math3.ode.ExpandableStatefulODE.getSecondaryStateDot(I)[D"]
30782 [label="org.apache.commons.math3.ode.ExpandableStatefulODE.setCompleteState([D)V"]
30785 [label="org.apache.commons.math3.ode.ExpandableStatefulODE.getCompleteState()[D"]
30795 [label="org.apache.commons.math3.ode.SecondaryEquations.getDimension()I"]
30803 [label="org.apache.commons.math3.ode.FieldEquationsMapper.<init>(Lorg/apache/commons/math3/ode/FieldEquationsMapper;I)V"]
30815 [label="org.apache.commons.math3.ode.FieldEquationsMapper.getNumberOfEquations()I"]
30819 [label="org.apache.commons.math3.ode.FieldEquationsMapper.getTotalDimension()I"]
30825 [label="org.apache.commons.math3.ode.FieldEquationsMapper.insertEquationData(I[Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;)V"]
30827 [label="org.apache.commons.math3.ode.FieldODEState.getState()[Lorg/apache/commons/math3/RealFieldElement;"]
30829 [label="org.apache.commons.math3.ode.FieldODEState.getSecondaryState(I)[Lorg/apache/commons/math3/RealFieldElement;"]
30831 [label="org.apache.commons.math3.ode.FieldEquationsMapper.mapDerivative(Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;)[Lorg/apache/commons/math3/RealFieldElement;"]
30834 [label="org.apache.commons.math3.ode.FieldODEStateAndDerivative.getDerivative()[Lorg/apache/commons/math3/RealFieldElement;"]
30836 [label="org.apache.commons.math3.ode.FieldODEStateAndDerivative.getSecondaryDerivative(I)[Lorg/apache/commons/math3/RealFieldElement;"]
30842 [label="org.apache.commons.math3.ode.FieldEquationsMapper.extractEquationData(I[Lorg/apache/commons/math3/RealFieldElement;)[Lorg/apache/commons/math3/RealFieldElement;"]
30845 [label="org.apache.commons.math3.ode.FieldODEStateAndDerivative.<init>(Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;[[Lorg/apache/commons/math3/RealFieldElement;[[Lorg/apache/commons/math3/RealFieldElement;)V"]
30850 [label="org.apache.commons.math3.ode.FieldEquationsMapper.checkIndex(I)V"]
30884 [label="org.apache.commons.math3.ode.FieldExpandableODE.<init>(Lorg/apache/commons/math3/ode/FirstOrderFieldDifferentialEquations;)V"]
30894 [label="org.apache.commons.math3.ode.FirstOrderFieldDifferentialEquations.getDimension()I"]
30897 [label="org.apache.commons.math3.ode.FieldExpandableODE.addSecondaryEquations(Lorg/apache/commons/math3/ode/FieldSecondaryEquations;)I"]
30900 [label="org.apache.commons.math3.ode.FieldSecondaryEquations.getDimension()I"]
30907 [label="org.apache.commons.math3.ode.FirstOrderFieldDifferentialEquations.init(Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)V"]
30909 [label="org.apache.commons.math3.ode.FieldSecondaryEquations.init(Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)V"]
30914 [label="org.apache.commons.math3.ode.FirstOrderFieldDifferentialEquations.computeDerivatives(Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;)[Lorg/apache/commons/math3/RealFieldElement;"]
30916 [label="org.apache.commons.math3.ode.FieldSecondaryEquations.computeDerivatives(Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;)[Lorg/apache/commons/math3/RealFieldElement;"]
30930 [label="org.apache.commons.math3.ode.FieldODEState.<init>(Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;)V"]
30934 [label="org.apache.commons.math3.ode.FieldODEState.<init>(Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;[[Lorg/apache/commons/math3/RealFieldElement;)V"]
30943 [label="org.apache.commons.math3.ode.FieldODEState.copy(Lorg/apache/commons/math3/Field;[[Lorg/apache/commons/math3/RealFieldElement;)[[Lorg/apache/commons/math3/RealFieldElement;"]
31012 [label="org.apache.commons.math3.ode.FirstOrderConverter.<init>(Lorg/apache/commons/math3/ode/SecondOrderDifferentialEquations;)V"]
31017 [label="org.apache.commons.math3.ode.SecondOrderDifferentialEquations.getDimension()I"]
31024 [label="org.apache.commons.math3.ode.FirstOrderConverter.computeDerivatives(D[D[D)V"]
31029 [label="org.apache.commons.math3.ode.SecondOrderDifferentialEquations.computeSecondDerivatives(D[D[D[D)V"]
31053 [label="org.apache.commons.math3.ode.FirstOrderFieldIntegrator.addStepHandler(Lorg/apache/commons/math3/ode/sampling/FieldStepHandler;)V"]
31061 [label="org.apache.commons.math3.ode.FirstOrderFieldIntegrator.clearStepHandlers()V"]
31078 [label="org.apache.commons.math3.ode.FirstOrderFieldIntegrator.clearEventHandlers()V"]
31089 [label="org.apache.commons.math3.ode.FirstOrderFieldIntegrator.getEvaluations()I"]
31091 [label="org.apache.commons.math3.ode.FirstOrderFieldIntegrator.integrate(Lorg/apache/commons/math3/ode/FieldExpandableODE;Lorg/apache/commons/math3/ode/FieldODEState;Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;"]
31100 [label="org.apache.commons.math3.ode.FirstOrderIntegrator.integrate(Lorg/apache/commons/math3/ode/FirstOrderDifferentialEquations;D[DD[D)D"]
31145 [label="org.apache.commons.math3.ode.JacobianMatrices.<init>(Lorg/apache/commons/math3/ode/FirstOrderDifferentialEquations;[D[Ljava/lang/String;)V"]
31150 [label="org.apache.commons.math3.ode.JacobianMatrices.<init>(Lorg/apache/commons/math3/ode/MainStateJacobianProvider;[Ljava/lang/String;)V"]
31155 [label="org.apache.commons.math3.ode.JacobianMatrices$MainStateJacobianWrapper.<init>(Lorg/apache/commons/math3/ode/FirstOrderDifferentialEquations;[D)V"]
31167 [label="org.apache.commons.math3.ode.ParameterConfiguration.<init>(Ljava/lang/String;D)V"]
31175 [label="org.apache.commons.math3.ode.JacobianMatrices.registerVariationalEquations(Lorg/apache/commons/math3/ode/ExpandableStatefulODE;)V"]
31184 [label="org.apache.commons.math3.ode.JacobianMatrices$MismatchedEquations.<init>()V"]
31190 [label="org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.<init>()V"]
31193 [label="org.apache.commons.math3.ode.JacobianMatrices.addParameterJacobianProvider(Lorg/apache/commons/math3/ode/ParameterJacobianProvider;)V"]
31199 [label="org.apache.commons.math3.ode.JacobianMatrices.setParameterStep(Ljava/lang/String;D)V"]
31203 [label="org.apache.commons.math3.ode.ParameterConfiguration.getParameterName()Ljava/lang/String;"]
31205 [label="org.apache.commons.math3.ode.ParameterConfiguration.setHP(D)V"]
31207 [label="org.apache.commons.math3.ode.JacobianMatrices.setInitialMainStateJacobian([[D)V"]
31210 [label="org.apache.commons.math3.ode.JacobianMatrices.checkDimension(ILjava/lang/Object;)V"]
31212 [label="org.apache.commons.math3.ode.JacobianMatrices.setInitialParameterJacobian(Ljava/lang/String;[D)V"]
31216 [label="org.apache.commons.math3.ode.JacobianMatrices.getCurrentMainSetJacobian([[D)V"]
31220 [label="org.apache.commons.math3.ode.JacobianMatrices.getCurrentParameterJacobian(Ljava/lang/String;[D)V"]
31227 [label="java.lang.reflect.Array.getLength(Ljava/lang/Object;)I"]
31232 [label="org.apache.commons.math3.ode.JacobianMatrices$JacobiansSecondaryEquations.computeDerivatives(D[D[D[D[D)V"]
31242 [label="org.apache.commons.math3.ode.ParameterJacobianWrapper.<init>(Lorg/apache/commons/math3/ode/FirstOrderDifferentialEquations;Lorg/apache/commons/math3/ode/ParameterizedODE;[Lorg/apache/commons/math3/ode/ParameterConfiguration;)V"]
31244 [label="org.apache.commons.math3.ode.MainStateJacobianProvider.computeMainStateJacobian(D[D[D[[D)V"]
31246 [label="org.apache.commons.math3.ode.Parameterizable.isSupported(Ljava/lang/String;)Z"]
31248 [label="org.apache.commons.math3.ode.ParameterJacobianProvider.computeParameterJacobian(D[D[DLjava/lang/String;[D)V"]
31258 [label="org.apache.commons.math3.ode.JacobianMatrices$MainStateJacobianWrapper.getDimension()I"]
31260 [label="org.apache.commons.math3.ode.JacobianMatrices$MainStateJacobianWrapper.computeDerivatives(D[D[D)V"]
31265 [label="org.apache.commons.math3.ode.JacobianMatrices$MainStateJacobianWrapper.computeMainStateJacobian(D[D[D[[D)V"]
31311 [label="org.apache.commons.math3.ode.MultistepFieldIntegrator.<init>(Lorg/apache/commons/math3/Field;Ljava/lang/String;IIDDDD)V"]
31321 [label="org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator.<init>(Lorg/apache/commons/math3/Field;Ljava/lang/String;DDDD)V"]
31329 [label="org.apache.commons.math3.ode.nonstiff.DormandPrince853FieldIntegrator.<init>(Lorg/apache/commons/math3/Field;DDDD)V"]
31335 [label="org.apache.commons.math3.ode.MultistepFieldIntegrator.setSafety(D)V"]
31337 [label="org.apache.commons.math3.ode.MultistepFieldIntegrator.setMinReduction(D)V"]
31339 [label="org.apache.commons.math3.ode.MultistepFieldIntegrator.setMaxGrowth(D)V"]
31341 [label="org.apache.commons.math3.ode.MultistepFieldIntegrator.<init>(Lorg/apache/commons/math3/Field;Ljava/lang/String;IIDD[D[D)V"]
31351 [label="org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator.<init>(Lorg/apache/commons/math3/Field;Ljava/lang/String;DD[D[D)V"]
31353 [label="org.apache.commons.math3.ode.nonstiff.DormandPrince853FieldIntegrator.<init>(Lorg/apache/commons/math3/Field;DD[D[D)V"]
31360 [label="org.apache.commons.math3.ode.MultistepFieldIntegrator.start(Lorg/apache/commons/math3/ode/FieldExpandableODE;Lorg/apache/commons/math3/ode/FieldODEState;Lorg/apache/commons/math3/RealFieldElement;)V"]
31371 [label="org.apache.commons.math3.ode.MultistepFieldIntegrator$FieldNordsieckInitializer.<init>(Lorg/apache/commons/math3/ode/FieldEquationsMapper;I)V"]
31378 [label="org.apache.commons.math3.util.IntegerSequence$Incrementor.increment(I)V"]
31382 [label="org.apache.commons.math3.ode.MultistepFieldIntegrator.initializeHighOrderDerivatives(Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;[[Lorg/apache/commons/math3/RealFieldElement;[[Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/linear/Array2DRowFieldMatrix;"]
31406 [label="org.apache.commons.math3.ode.MultistepFieldIntegrator.rescale(Lorg/apache/commons/math3/RealFieldElement;)V"]
31414 [label="org.apache.commons.math3.ode.MultistepFieldIntegrator.computeStepGrowShrinkFactor(Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/RealFieldElement;"]
31417 [label="org.apache.commons.math3.util.MathUtils.min(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/RealFieldElement;"]
31419 [label="org.apache.commons.math3.util.MathUtils.max(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/RealFieldElement;"]
31421 [label="org.apache.commons.math3.RealFieldElement.pow(D)Ljava/lang/Object;"]
31445 [label="org.apache.commons.math3.ode.MultistepFieldIntegrator$FieldNordsieckInitializer.handleStep(Lorg/apache/commons/math3/ode/sampling/FieldStepInterpolator;Z)V"]
31453 [label="org.apache.commons.math3.ode.MultistepFieldIntegrator$InitializationCompletedMarkerException.<init>()V"]
31463 [label="java.lang.RuntimeException.<init>(Ljava/lang/Throwable;)V"]
31488 [label="org.apache.commons.math3.ode.MultistepIntegrator.<init>(Ljava/lang/String;IIDDDD)V"]
31497 [label="org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator.<init>(Ljava/lang/String;DDDD)V"]
31503 [label="org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator.<init>(DDDD)V"]
31507 [label="org.apache.commons.math3.ode.MultistepIntegrator.setSafety(D)V"]
31509 [label="org.apache.commons.math3.ode.MultistepIntegrator.setMinReduction(D)V"]
31511 [label="org.apache.commons.math3.ode.MultistepIntegrator.setMaxGrowth(D)V"]
31513 [label="org.apache.commons.math3.ode.MultistepIntegrator.<init>(Ljava/lang/String;IIDD[D[D)V"]
31522 [label="org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator.<init>(Ljava/lang/String;DD[D[D)V"]
31524 [label="org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator.<init>(DD[D[D)V"]
31531 [label="org.apache.commons.math3.ode.MultistepIntegrator.start(D[DD)V"]
31536 [label="org.apache.commons.math3.ode.ODEIntegrator.clearEventHandlers()V"]
31538 [label="org.apache.commons.math3.ode.ODEIntegrator.clearStepHandlers()V"]
31540 [label="org.apache.commons.math3.ode.ODEIntegrator.addStepHandler(Lorg/apache/commons/math3/ode/sampling/StepHandler;)V"]
31545 [label="org.apache.commons.math3.ode.MultistepIntegrator$NordsieckInitializer.<init>(II)V"]
31551 [label="org.apache.commons.math3.ode.MultistepIntegrator$1.<init>()V"]
31554 [label="org.apache.commons.math3.ode.MultistepIntegrator$1.getDimension()I"]
31556 [label="org.apache.commons.math3.ode.MultistepIntegrator$1.computeDerivatives(D[D[D)V"]
31565 [label="org.apache.commons.math3.ode.ODEIntegrator.getEvaluations()I"]
31567 [label="org.apache.commons.math3.ode.MultistepIntegrator.initializeHighOrderDerivatives(D[D[[D[[D)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;"]
31590 [label="org.apache.commons.math3.ode.MultistepIntegrator.computeStepGrowShrinkFactor(D)D"]
31617 [label="org.apache.commons.math3.ode.MultistepIntegrator$NordsieckInitializer.handleStep(Lorg/apache/commons/math3/ode/sampling/StepInterpolator;Z)V"]
31624 [label="org.apache.commons.math3.ode.MultistepIntegrator$InitializationCompletedMarkerException.<init>()V"]
31705 [label="org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator.<init>(Lorg/apache/commons/math3/Field;IDDDD)V"]
31713 [label="org.apache.commons.math3.ode.nonstiff.AdamsFieldIntegrator.<init>(Lorg/apache/commons/math3/Field;Ljava/lang/String;IIDDDD)V"]
31716 [label="org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator.<init>(Lorg/apache/commons/math3/Field;IDD[D[D)V"]
31724 [label="org.apache.commons.math3.ode.nonstiff.AdamsFieldIntegrator.<init>(Lorg/apache/commons/math3/Field;Ljava/lang/String;IIDD[D[D)V"]
31726 [label="org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator.errorEstimation([Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/linear/FieldMatrix;)Lorg/apache/commons/math3/RealFieldElement;"]
31746 [label="org.apache.commons.math3.ode.nonstiff.AdamsBashforthFieldIntegrator.integrate(Lorg/apache/commons/math3/ode/FieldExpandableODE;Lorg/apache/commons/math3/ode/FieldODEState;Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;"]
31751 [label="org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator.sanityChecks(Lorg/apache/commons/math3/ode/FieldODEState;Lorg/apache/commons/math3/RealFieldElement;)V"]
31756 [label="org.apache.commons.math3.ode.nonstiff.AdamsFieldStepInterpolator.taylor(Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/linear/Array2DRowFieldMatrix;)Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;"]
31759 [label="org.apache.commons.math3.ode.nonstiff.AdamsFieldIntegrator.updateHighOrderDerivativesPhase1(Lorg/apache/commons/math3/linear/Array2DRowFieldMatrix;)Lorg/apache/commons/math3/linear/Array2DRowFieldMatrix;"]
31761 [label="org.apache.commons.math3.ode.nonstiff.AdamsFieldIntegrator.updateHighOrderDerivativesPhase2([Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/linear/Array2DRowFieldMatrix;)V"]
31766 [label="org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator.filterStep(Lorg/apache/commons/math3/RealFieldElement;ZZ)Lorg/apache/commons/math3/RealFieldElement;"]
31773 [label="org.apache.commons.math3.ode.nonstiff.AdamsFieldStepInterpolator.<init>(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/linear/Array2DRowFieldMatrix;ZLorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)V"]
31788 [label="org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegrator.<init>(IDDDD)V"]
31795 [label="org.apache.commons.math3.ode.nonstiff.AdamsIntegrator.<init>(Ljava/lang/String;IIDDDD)V"]
31798 [label="org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegrator.<init>(IDD[D[D)V"]
31805 [label="org.apache.commons.math3.ode.nonstiff.AdamsIntegrator.<init>(Ljava/lang/String;IIDD[D[D)V"]
31807 [label="org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegrator.errorEstimation([D[D[DLorg/apache/commons/math3/linear/RealMatrix;)D"]
31823 [label="org.apache.commons.math3.ode.nonstiff.AdamsBashforthIntegrator.integrate(Lorg/apache/commons/math3/ode/ExpandableStatefulODE;D)V"]
31827 [label="org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator.sanityChecks(Lorg/apache/commons/math3/ode/ExpandableStatefulODE;D)V"]
31834 [label="org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator.<init>()V"]
31836 [label="org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator.reinitialize([DZLorg/apache/commons/math3/ode/EquationsMapper;[Lorg/apache/commons/math3/ode/EquationsMapper;)V"]
31840 [label="org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator.reinitialize(DD[DLorg/apache/commons/math3/linear/Array2DRowRealMatrix;)V"]
31842 [label="org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.storeTime(D)V"]
31844 [label="org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator.rescale(D)V"]
31846 [label="org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.shift()V"]
31848 [label="org.apache.commons.math3.ode.nonstiff.AdamsIntegrator.updateHighOrderDerivativesPhase1(Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;"]
31850 [label="org.apache.commons.math3.ode.nonstiff.AdamsIntegrator.updateHighOrderDerivativesPhase2([D[DLorg/apache/commons/math3/linear/Array2DRowRealMatrix;)V"]
31854 [label="org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator.filterStep(DZZ)D"]
31858 [label="org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator.resetInternalState()V"]
31886 [label="org.apache.commons.math3.ode.nonstiff.AdamsNordsieckFieldTransformer.getInstance(Lorg/apache/commons/math3/Field;I)Lorg/apache/commons/math3/ode/nonstiff/AdamsNordsieckFieldTransformer;"]
31903 [label="org.apache.commons.math3.ode.nonstiff.AdamsFieldIntegrator.initializeHighOrderDerivatives(Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;[[Lorg/apache/commons/math3/RealFieldElement;[[Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/linear/Array2DRowFieldMatrix;"]
31911 [label="org.apache.commons.math3.ode.nonstiff.AdamsNordsieckFieldTransformer.initializeHighOrderDerivatives(Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;[[Lorg/apache/commons/math3/RealFieldElement;[[Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/linear/Array2DRowFieldMatrix;"]
31915 [label="org.apache.commons.math3.ode.nonstiff.AdamsNordsieckFieldTransformer.updateHighOrderDerivativesPhase1(Lorg/apache/commons/math3/linear/Array2DRowFieldMatrix;)Lorg/apache/commons/math3/linear/Array2DRowFieldMatrix;"]
31921 [label="org.apache.commons.math3.ode.nonstiff.AdamsNordsieckFieldTransformer.updateHighOrderDerivativesPhase2([Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/linear/Array2DRowFieldMatrix;)V"]
31947 [label="org.apache.commons.math3.ode.nonstiff.AdamsFieldStepInterpolator.<init>(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/linear/Array2DRowFieldMatrix;ZLorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)V"]
31960 [label="org.apache.commons.math3.ode.sampling.AbstractFieldStepInterpolator.<init>(ZLorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)V"]
31968 [label="org.apache.commons.math3.ode.nonstiff.AdamsFieldStepInterpolator.create(ZLorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/AdamsFieldStepInterpolator;"]
31976 [label="org.apache.commons.math3.ode.nonstiff.AdamsFieldStepInterpolator.computeInterpolatedStateAndDerivatives(Lorg/apache/commons/math3/ode/FieldEquationsMapper;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;"]
31994 [label="org.apache.commons.math3.RealFieldElement.pow(I)Ljava/lang/Object;"]
32014 [label="org.apache.commons.math3.ode.nonstiff.AdamsNordsieckTransformer.getInstance(I)Lorg/apache/commons/math3/ode/nonstiff/AdamsNordsieckTransformer;"]
32029 [label="org.apache.commons.math3.ode.nonstiff.AdamsIntegrator.initializeHighOrderDerivatives(D[D[[D[[D)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;"]
32035 [label="org.apache.commons.math3.ode.nonstiff.AdamsNordsieckTransformer.initializeHighOrderDerivatives(D[D[[D[[D)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;"]
32039 [label="org.apache.commons.math3.ode.nonstiff.AdamsNordsieckTransformer.updateHighOrderDerivativesPhase1(Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;"]
32045 [label="org.apache.commons.math3.ode.nonstiff.AdamsNordsieckTransformer.updateHighOrderDerivativesPhase2([D[DLorg/apache/commons/math3/linear/Array2DRowRealMatrix;)V"]
32051 [label="org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator.<init>(Lorg/apache/commons/math3/Field;IDDDD)V"]
32063 [label="org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator.<init>(Lorg/apache/commons/math3/Field;IDD[D[D)V"]
32071 [label="org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator.integrate(Lorg/apache/commons/math3/ode/FieldExpandableODE;Lorg/apache/commons/math3/ode/FieldODEState;Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;"]
32080 [label="org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator$Corrector.<init>([Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;)V"]
32102 [label="org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator$Corrector.start(IIIIII)V"]
32110 [label="org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator$Corrector.visit(IILorg/apache/commons/math3/RealFieldElement;)V"]
32115 [label="org.apache.commons.math3.ode.nonstiff.AdamsMoultonFieldIntegrator$Corrector.end()Lorg/apache/commons/math3/RealFieldElement;"]
32121 [label="org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegrator.<init>(IDDDD)V"]
32129 [label="org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegrator.<init>(IDD[D[D)V"]
32136 [label="org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegrator.integrate(Lorg/apache/commons/math3/ode/ExpandableStatefulODE;D)V"]
32143 [label="org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegrator$Corrector.<init>([D[D[D)V"]
32162 [label="org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegrator$Corrector.start(IIIIII)V"]
32175 [label="org.apache.commons.math3.ode.nonstiff.AdamsMoultonIntegrator$Corrector.end()D"]
32208 [label="org.apache.commons.math3.ode.nonstiff.AdamsNordsieckFieldTransformer.<init>(Lorg/apache/commons/math3/Field;I)V"]
32213 [label="org.apache.commons.math3.ode.nonstiff.AdamsNordsieckFieldTransformer.buildP(I)Lorg/apache/commons/math3/linear/FieldMatrix;"]
32272 [label="org.apache.commons.math3.ode.nonstiff.AdamsNordsieckTransformer.<init>(I)V"]
32275 [label="org.apache.commons.math3.ode.nonstiff.AdamsNordsieckTransformer.buildP(I)Lorg/apache/commons/math3/linear/FieldMatrix;"]
32338 [label="org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator.setStepSizeControl(DDDD)V"]
32340 [label="org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator.resetInternalState()V"]
32349 [label="org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator.setStepSizeControl(DD[D[D)V"]
32364 [label="org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator.setInitialStepSize(Lorg/apache/commons/math3/RealFieldElement;)V"]
32371 [label="org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeFieldIntegrator.initializeStep(ZI[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/RealFieldElement;"]
32409 [label="org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator.setStepSizeControl(DDDD)V"]
32417 [label="org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator.setStepSizeControl(DD[D[D)V"]
32439 [label="org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator.initializeStep(ZI[DD[D[D[D[D)D"]
32449 [label="org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator.getMinStep()D"]
32451 [label="org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator.getMaxStep()D"]
32475 [label="org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaFieldIntegrator.<init>(Lorg/apache/commons/math3/Field;Lorg/apache/commons/math3/RealFieldElement;)V"]
32479 [label="org.apache.commons.math3.ode.nonstiff.RungeKuttaFieldIntegrator.<init>(Lorg/apache/commons/math3/Field;Ljava/lang/String;Lorg/apache/commons/math3/RealFieldElement;)V"]
32481 [label="org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaFieldIntegrator.getC()[Lorg/apache/commons/math3/RealFieldElement;"]
32484 [label="org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaFieldIntegrator.getA()[[Lorg/apache/commons/math3/RealFieldElement;"]
32487 [label="org.apache.commons.math3.ode.nonstiff.RungeKuttaFieldIntegrator.fraction(II)Lorg/apache/commons/math3/RealFieldElement;"]
32489 [label="org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaFieldIntegrator.getB()[Lorg/apache/commons/math3/RealFieldElement;"]
32491 [label="org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaFieldIntegrator.createInterpolator(Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/ClassicalRungeKuttaFieldStepInterpolator;"]
32504 [label="org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaFieldStepInterpolator.<init>(Lorg/apache/commons/math3/Field;Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)V"]
32527 [label="org.apache.commons.math3.ode.nonstiff.RungeKuttaFieldStepInterpolator.<init>(Lorg/apache/commons/math3/Field;Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)V"]
32529 [label="org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaFieldStepInterpolator.create(Lorg/apache/commons/math3/Field;Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/ClassicalRungeKuttaFieldStepInterpolator;"]
32539 [label="org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaFieldStepInterpolator.computeInterpolatedStateAndDerivatives(Lorg/apache/commons/math3/ode/FieldEquationsMapper;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;"]
32546 [label="org.apache.commons.math3.ode.nonstiff.RungeKuttaFieldStepInterpolator.previousStateLinearCombination([Lorg/apache/commons/math3/RealFieldElement;)[Lorg/apache/commons/math3/RealFieldElement;"]
32548 [label="org.apache.commons.math3.ode.nonstiff.RungeKuttaFieldStepInterpolator.derivativeLinearCombination([Lorg/apache/commons/math3/RealFieldElement;)[Lorg/apache/commons/math3/RealFieldElement;"]
32550 [label="org.apache.commons.math3.ode.nonstiff.RungeKuttaFieldStepInterpolator.currentStateLinearCombination([Lorg/apache/commons/math3/RealFieldElement;)[Lorg/apache/commons/math3/RealFieldElement;"]
32565 [label="org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaIntegrator.<init>(D)V"]
32568 [label="org.apache.commons.math3.ode.nonstiff.RungeKuttaIntegrator.<init>(Ljava/lang/String;[D[[D[DLorg/apache/commons/math3/ode/nonstiff/RungeKuttaStepInterpolator;D)V"]
32576 [label="org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolator.<init>()V"]
32587 [label="org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator.<init>()V"]
32589 [label="org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolator.<init>(Lorg/apache/commons/math3/ode/nonstiff/ClassicalRungeKuttaStepInterpolator;)V"]
32593 [label="org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator.<init>(Lorg/apache/commons/math3/ode/nonstiff/RungeKuttaStepInterpolator;)V"]
32595 [label="org.apache.commons.math3.ode.nonstiff.ClassicalRungeKuttaStepInterpolator.doCopy()Lorg/apache/commons/math3/ode/sampling/StepInterpolator;"]
32638 [label="org.apache.commons.math3.ode.nonstiff.DormandPrince54FieldIntegrator.<init>(Lorg/apache/commons/math3/Field;DDDD)V"]
32645 [label="org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaFieldIntegrator.<init>(Lorg/apache/commons/math3/Field;Ljava/lang/String;IDDDD)V"]
32649 [label="org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaFieldIntegrator.fraction(II)Lorg/apache/commons/math3/RealFieldElement;"]
32656 [label="org.apache.commons.math3.ode.nonstiff.DormandPrince54FieldIntegrator.<init>(Lorg/apache/commons/math3/Field;DD[D[D)V"]
32663 [label="org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaFieldIntegrator.<init>(Lorg/apache/commons/math3/Field;Ljava/lang/String;IDD[D[D)V"]
32665 [label="org.apache.commons.math3.ode.nonstiff.DormandPrince54FieldIntegrator.getC()[Lorg/apache/commons/math3/RealFieldElement;"]
32668 [label="org.apache.commons.math3.ode.nonstiff.DormandPrince54FieldIntegrator.getA()[[Lorg/apache/commons/math3/RealFieldElement;"]
32671 [label="org.apache.commons.math3.ode.nonstiff.DormandPrince54FieldIntegrator.getB()[Lorg/apache/commons/math3/RealFieldElement;"]
32673 [label="org.apache.commons.math3.ode.nonstiff.DormandPrince54FieldIntegrator.createInterpolator(Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/DormandPrince54FieldStepInterpolator;"]
32686 [label="org.apache.commons.math3.ode.nonstiff.DormandPrince54FieldStepInterpolator.<init>(Lorg/apache/commons/math3/Field;Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)V"]
32690 [label="org.apache.commons.math3.ode.nonstiff.DormandPrince54FieldIntegrator.estimateError([[Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/RealFieldElement;"]
32748 [label="org.apache.commons.math3.ode.nonstiff.DormandPrince54FieldStepInterpolator.create(Lorg/apache/commons/math3/Field;Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/DormandPrince54FieldStepInterpolator;"]
32758 [label="org.apache.commons.math3.ode.nonstiff.DormandPrince54FieldStepInterpolator.computeInterpolatedStateAndDerivatives(Lorg/apache/commons/math3/ode/FieldEquationsMapper;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;"]
32791 [label="org.apache.commons.math3.ode.nonstiff.DormandPrince54Integrator.<init>(DDDD)V"]
32797 [label="org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaIntegrator.<init>(Ljava/lang/String;Z[D[[D[DLorg/apache/commons/math3/ode/nonstiff/RungeKuttaStepInterpolator;DDDD)V"]
32806 [label="org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator.<init>()V"]
32808 [label="org.apache.commons.math3.ode.nonstiff.DormandPrince54Integrator.<init>(DD[D[D)V"]
32814 [label="org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaIntegrator.<init>(Ljava/lang/String;Z[D[[D[DLorg/apache/commons/math3/ode/nonstiff/RungeKuttaStepInterpolator;DD[D[D)V"]
32818 [label="org.apache.commons.math3.ode.nonstiff.DormandPrince54Integrator.estimateError([[D[D[DD)D"]
32875 [label="org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator.<init>(Lorg/apache/commons/math3/ode/nonstiff/DormandPrince54StepInterpolator;)V"]
32879 [label="org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator.doCopy()Lorg/apache/commons/math3/ode/sampling/StepInterpolator;"]
32882 [label="org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator.reinitialize(Lorg/apache/commons/math3/ode/AbstractIntegrator;[D[[DZLorg/apache/commons/math3/ode/EquationsMapper;[Lorg/apache/commons/math3/ode/EquationsMapper;)V"]
32890 [label="org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator.reinitialize(Lorg/apache/commons/math3/ode/AbstractIntegrator;[D[[DZLorg/apache/commons/math3/ode/EquationsMapper;[Lorg/apache/commons/math3/ode/EquationsMapper;)V"]
32892 [label="org.apache.commons.math3.ode.nonstiff.DormandPrince54StepInterpolator.storeTime(D)V"]
32958 [label="org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaFieldIntegrator.fraction(DD)Lorg/apache/commons/math3/RealFieldElement;"]
32981 [label="org.apache.commons.math3.ode.nonstiff.DormandPrince853FieldIntegrator.getC()[Lorg/apache/commons/math3/RealFieldElement;"]
32984 [label="org.apache.commons.math3.ode.nonstiff.DormandPrince853FieldIntegrator.getA()[[Lorg/apache/commons/math3/RealFieldElement;"]
32987 [label="org.apache.commons.math3.ode.nonstiff.DormandPrince853FieldIntegrator.getB()[Lorg/apache/commons/math3/RealFieldElement;"]
32989 [label="org.apache.commons.math3.ode.nonstiff.DormandPrince853FieldIntegrator.createInterpolator(Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/DormandPrince853FieldStepInterpolator;"]
33002 [label="org.apache.commons.math3.ode.nonstiff.DormandPrince853FieldStepInterpolator.<init>(Lorg/apache/commons/math3/Field;Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)V"]
33006 [label="org.apache.commons.math3.ode.nonstiff.DormandPrince853FieldIntegrator.estimateError([[Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/RealFieldElement;"]
33030 [label="org.apache.commons.math3.ode.nonstiff.DormandPrince853FieldStepInterpolator.fraction(Lorg/apache/commons/math3/Field;DD)Lorg/apache/commons/math3/RealFieldElement;"]
33032 [label="org.apache.commons.math3.ode.nonstiff.DormandPrince853FieldStepInterpolator.create(Lorg/apache/commons/math3/Field;Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/DormandPrince853FieldStepInterpolator;"]
33046 [label="org.apache.commons.math3.ode.nonstiff.DormandPrince853FieldStepInterpolator.computeInterpolatedStateAndDerivatives(Lorg/apache/commons/math3/ode/FieldEquationsMapper;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;"]
33108 [label="org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator.<init>()V"]
33117 [label="org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator.estimateError([[D[D[DD)D"]
33250 [label="org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator.<init>(Lorg/apache/commons/math3/ode/nonstiff/DormandPrince853StepInterpolator;)V"]
33254 [label="org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator.doCopy()Lorg/apache/commons/math3/ode/sampling/StepInterpolator;"]
33257 [label="org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator.reinitialize(Lorg/apache/commons/math3/ode/AbstractIntegrator;[D[[DZLorg/apache/commons/math3/ode/EquationsMapper;[Lorg/apache/commons/math3/ode/EquationsMapper;)V"]
33265 [label="org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator.storeTime(D)V"]
33268 [label="org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator.computeInterpolatedStateAndDerivatives(DD)V"]
33272 [label="org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.finalizeStep()V"]
33275 [label="org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator.doFinalize()V"]
33312 [label="org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator.writeExternal(Ljava/io/ObjectOutput;)V"]
33318 [label="java.io.IOException.<init>(Ljava/lang/String;)V"]
33321 [label="java.io.DataOutput.writeInt(I)V"]
33323 [label="java.io.DataOutput.writeDouble(D)V"]
33325 [label="org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator.writeExternal(Ljava/io/ObjectOutput;)V"]
33327 [label="org.apache.commons.math3.ode.nonstiff.DormandPrince853StepInterpolator.readExternal(Ljava/io/ObjectInput;)V"]
33333 [label="java.io.DataInput.readInt()I"]
33335 [label="java.io.DataInput.readDouble()D"]
33337 [label="org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator.readExternal(Ljava/io/ObjectInput;)V"]
33375 [label="org.apache.commons.math3.ode.nonstiff.FieldButcherArrayProvider.getC()[Lorg/apache/commons/math3/RealFieldElement;"]
33378 [label="org.apache.commons.math3.ode.nonstiff.FieldButcherArrayProvider.getA()[[Lorg/apache/commons/math3/RealFieldElement;"]
33381 [label="org.apache.commons.math3.ode.nonstiff.FieldButcherArrayProvider.getB()[Lorg/apache/commons/math3/RealFieldElement;"]
33384 [label="org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaFieldIntegrator.getOrder()I"]
33386 [label="org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaFieldIntegrator.setSafety(Lorg/apache/commons/math3/RealFieldElement;)V"]
33388 [label="org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaFieldIntegrator.setMinReduction(Lorg/apache/commons/math3/RealFieldElement;)V"]
33390 [label="org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaFieldIntegrator.setMaxGrowth(Lorg/apache/commons/math3/RealFieldElement;)V"]
33406 [label="org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaFieldIntegrator.createInterpolator(Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/RungeKuttaFieldStepInterpolator;"]
33419 [label="org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaFieldIntegrator.integrate(Lorg/apache/commons/math3/ode/FieldExpandableODE;Lorg/apache/commons/math3/ode/FieldODEState;Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;"]
33425 [label="org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaFieldIntegrator.estimateError([[Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/RealFieldElement;"]
33429 [label="org.apache.commons.math3.RealFieldElement.pow(Ljava/lang/Object;)Ljava/lang/Object;"]
33483 [label="org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaIntegrator.getOrder()I"]
33485 [label="org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaIntegrator.setSafety(D)V"]
33487 [label="org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaIntegrator.setMinReduction(D)V"]
33489 [label="org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaIntegrator.setMaxGrowth(D)V"]
33508 [label="org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(Lorg/apache/commons/math3/ode/ExpandableStatefulODE;D)V"]
33512 [label="org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.copy()Lorg/apache/commons/math3/ode/sampling/StepInterpolator;"]
33514 [label="org.apache.commons.math3.ode.nonstiff.RungeKuttaStepInterpolator.shift()V"]
33517 [label="org.apache.commons.math3.ode.nonstiff.EmbeddedRungeKuttaIntegrator.estimateError([[D[D[DD)D"]
33536 [label="org.apache.commons.math3.ode.nonstiff.EulerFieldIntegrator.<init>(Lorg/apache/commons/math3/Field;Lorg/apache/commons/math3/RealFieldElement;)V"]
33543 [label="org.apache.commons.math3.ode.nonstiff.EulerFieldIntegrator.getC()[Lorg/apache/commons/math3/RealFieldElement;"]
33546 [label="org.apache.commons.math3.ode.nonstiff.EulerFieldIntegrator.getA()[[Lorg/apache/commons/math3/RealFieldElement;"]
33549 [label="org.apache.commons.math3.ode.nonstiff.EulerFieldIntegrator.getB()[Lorg/apache/commons/math3/RealFieldElement;"]
33551 [label="org.apache.commons.math3.ode.nonstiff.EulerFieldIntegrator.createInterpolator(Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/EulerFieldStepInterpolator;"]
33564 [label="org.apache.commons.math3.ode.nonstiff.EulerFieldStepInterpolator.<init>(Lorg/apache/commons/math3/Field;Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)V"]
33581 [label="org.apache.commons.math3.ode.nonstiff.EulerFieldStepInterpolator.create(Lorg/apache/commons/math3/Field;Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/EulerFieldStepInterpolator;"]
33591 [label="org.apache.commons.math3.ode.nonstiff.EulerFieldStepInterpolator.computeInterpolatedStateAndDerivatives(Lorg/apache/commons/math3/ode/FieldEquationsMapper;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;"]
33606 [label="org.apache.commons.math3.ode.nonstiff.EulerIntegrator.<init>(D)V"]
33615 [label="org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator.<init>()V"]
33623 [label="org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator.<init>(Lorg/apache/commons/math3/ode/nonstiff/EulerStepInterpolator;)V"]
33627 [label="org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator.doCopy()Lorg/apache/commons/math3/ode/sampling/StepInterpolator;"]
33630 [label="org.apache.commons.math3.ode.nonstiff.EulerStepInterpolator.computeInterpolatedStateAndDerivatives(DD)V"]
33645 [label="org.apache.commons.math3.ode.nonstiff.GillFieldIntegrator.<init>(Lorg/apache/commons/math3/Field;Lorg/apache/commons/math3/RealFieldElement;)V"]
33652 [label="org.apache.commons.math3.ode.nonstiff.GillFieldIntegrator.getC()[Lorg/apache/commons/math3/RealFieldElement;"]
33655 [label="org.apache.commons.math3.ode.nonstiff.GillFieldIntegrator.getA()[[Lorg/apache/commons/math3/RealFieldElement;"]
33658 [label="org.apache.commons.math3.ode.nonstiff.GillFieldIntegrator.getB()[Lorg/apache/commons/math3/RealFieldElement;"]
33660 [label="org.apache.commons.math3.ode.nonstiff.GillFieldIntegrator.createInterpolator(Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/GillFieldStepInterpolator;"]
33673 [label="org.apache.commons.math3.ode.nonstiff.GillFieldStepInterpolator.<init>(Lorg/apache/commons/math3/Field;Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)V"]
33696 [label="org.apache.commons.math3.ode.nonstiff.GillFieldStepInterpolator.create(Lorg/apache/commons/math3/Field;Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/GillFieldStepInterpolator;"]
33706 [label="org.apache.commons.math3.ode.nonstiff.GillFieldStepInterpolator.computeInterpolatedStateAndDerivatives(Lorg/apache/commons/math3/ode/FieldEquationsMapper;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;"]
33721 [label="org.apache.commons.math3.ode.nonstiff.GillIntegrator.<init>(D)V"]
33730 [label="org.apache.commons.math3.ode.nonstiff.GillStepInterpolator.<init>()V"]
33742 [label="org.apache.commons.math3.ode.nonstiff.GillStepInterpolator.<init>(Lorg/apache/commons/math3/ode/nonstiff/GillStepInterpolator;)V"]
33746 [label="org.apache.commons.math3.ode.nonstiff.GillStepInterpolator.doCopy()Lorg/apache/commons/math3/ode/sampling/StepInterpolator;"]
33795 [label="org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator.<init>(DDDD)V"]
33802 [label="org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator.setStabilityCheck(ZIID)V"]
33804 [label="org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator.setControlFactors(DDDD)V"]
33806 [label="org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator.setOrderControl(IDD)V"]
33808 [label="org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator.setInterpolationControl(ZI)V"]
33810 [label="org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator.<init>(DD[D[D)V"]
33841 [label="org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator.initializeArrays()V"]
33843 [label="org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator.addStepHandler(Lorg/apache/commons/math3/ode/sampling/StepHandler;)V"]
33847 [label="org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator.addEventHandler(Lorg/apache/commons/math3/ode/events/EventHandler;DDILorg/apache/commons/math3/analysis/solvers/UnivariateSolver;)V"]
33865 [label="org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator.rescale([D[D[D)V"]
33870 [label="org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator.tryStep(D[DDI[D[[D[D[D[D)Z"]
33881 [label="org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator.extrapolate(II[[D[D)V"]
33887 [label="org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator.integrate(Lorg/apache/commons/math3/ode/ExpandableStatefulODE;D)V"]
33895 [label="org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator.<init>([D[D[D[D[[DZLorg/apache/commons/math3/ode/EquationsMapper;[Lorg/apache/commons/math3/ode/EquationsMapper;)V"]
33899 [label="org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator.computeCoefficients(ID)V"]
33901 [label="org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator.estimateError([D)D"]
33920 [label="org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator.<init>()V"]
33924 [label="org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.<init>()V"]
33930 [label="org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator.resetTables(I)V"]
33942 [label="org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.<init>([DZLorg/apache/commons/math3/ode/EquationsMapper;[Lorg/apache/commons/math3/ode/EquationsMapper;)V"]
33944 [label="org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator.<init>(Lorg/apache/commons/math3/ode/nonstiff/GraggBulirschStoerStepInterpolator;)V"]
33947 [label="org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.<init>(Lorg/apache/commons/math3/ode/sampling/AbstractStepInterpolator;)V"]
33954 [label="org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator.doCopy()Lorg/apache/commons/math3/ode/sampling/StepInterpolator;"]
33962 [label="org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator.computeInterpolatedStateAndDerivatives(DD)V"]
33966 [label="org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator.writeExternal(Ljava/io/ObjectOutput;)V"]
33969 [label="org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.writeBaseExternal(Ljava/io/ObjectOutput;)V"]
33971 [label="org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerStepInterpolator.readExternal(Ljava/io/ObjectInput;)V"]
33974 [label="org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.readBaseExternal(Ljava/io/ObjectInput;)D"]
33986 [label="org.apache.commons.math3.ode.nonstiff.HighamHall54FieldIntegrator.<init>(Lorg/apache/commons/math3/Field;DDDD)V"]
33995 [label="org.apache.commons.math3.ode.nonstiff.HighamHall54FieldIntegrator.<init>(Lorg/apache/commons/math3/Field;DD[D[D)V"]
34002 [label="org.apache.commons.math3.ode.nonstiff.HighamHall54FieldIntegrator.getC()[Lorg/apache/commons/math3/RealFieldElement;"]
34004 [label="org.apache.commons.math3.ode.nonstiff.HighamHall54FieldIntegrator.getA()[[Lorg/apache/commons/math3/RealFieldElement;"]
34007 [label="org.apache.commons.math3.ode.nonstiff.HighamHall54FieldIntegrator.getB()[Lorg/apache/commons/math3/RealFieldElement;"]
34009 [label="org.apache.commons.math3.ode.nonstiff.HighamHall54FieldIntegrator.createInterpolator(Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/HighamHall54FieldStepInterpolator;"]
34022 [label="org.apache.commons.math3.ode.nonstiff.HighamHall54FieldStepInterpolator.<init>(Lorg/apache/commons/math3/Field;Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)V"]
34026 [label="org.apache.commons.math3.ode.nonstiff.HighamHall54FieldIntegrator.estimateError([[Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/RealFieldElement;"]
34047 [label="org.apache.commons.math3.ode.nonstiff.HighamHall54FieldStepInterpolator.create(Lorg/apache/commons/math3/Field;Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/HighamHall54FieldStepInterpolator;"]
34057 [label="org.apache.commons.math3.ode.nonstiff.HighamHall54FieldStepInterpolator.computeInterpolatedStateAndDerivatives(Lorg/apache/commons/math3/ode/FieldEquationsMapper;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;"]
34076 [label="org.apache.commons.math3.ode.nonstiff.HighamHall54Integrator.<init>(DDDD)V"]
34089 [label="org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator.<init>()V"]
34091 [label="org.apache.commons.math3.ode.nonstiff.HighamHall54Integrator.<init>(DD[D[D)V"]
34099 [label="org.apache.commons.math3.ode.nonstiff.HighamHall54Integrator.estimateError([[D[D[DD)D"]
34112 [label="org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator.<init>(Lorg/apache/commons/math3/ode/nonstiff/HighamHall54StepInterpolator;)V"]
34116 [label="org.apache.commons.math3.ode.nonstiff.HighamHall54StepInterpolator.doCopy()Lorg/apache/commons/math3/ode/sampling/StepInterpolator;"]
34125 [label="org.apache.commons.math3.ode.nonstiff.LutherFieldIntegrator.<init>(Lorg/apache/commons/math3/Field;Lorg/apache/commons/math3/RealFieldElement;)V"]
34132 [label="org.apache.commons.math3.ode.nonstiff.LutherFieldIntegrator.getC()[Lorg/apache/commons/math3/RealFieldElement;"]
34135 [label="org.apache.commons.math3.ode.nonstiff.LutherFieldIntegrator.getA()[[Lorg/apache/commons/math3/RealFieldElement;"]
34138 [label="org.apache.commons.math3.ode.nonstiff.LutherFieldIntegrator.getB()[Lorg/apache/commons/math3/RealFieldElement;"]
34140 [label="org.apache.commons.math3.ode.nonstiff.LutherFieldIntegrator.createInterpolator(Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/LutherFieldStepInterpolator;"]
34153 [label="org.apache.commons.math3.ode.nonstiff.LutherFieldStepInterpolator.<init>(Lorg/apache/commons/math3/Field;Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)V"]
34212 [label="org.apache.commons.math3.ode.nonstiff.LutherFieldStepInterpolator.create(Lorg/apache/commons/math3/Field;Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/LutherFieldStepInterpolator;"]
34222 [label="org.apache.commons.math3.ode.nonstiff.LutherFieldStepInterpolator.computeInterpolatedStateAndDerivatives(Lorg/apache/commons/math3/ode/FieldEquationsMapper;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;"]
34240 [label="org.apache.commons.math3.ode.nonstiff.LutherIntegrator.<init>(D)V"]
34249 [label="org.apache.commons.math3.ode.nonstiff.LutherStepInterpolator.<init>()V"]
34259 [label="org.apache.commons.math3.ode.nonstiff.LutherStepInterpolator.<init>(Lorg/apache/commons/math3/ode/nonstiff/LutherStepInterpolator;)V"]
34263 [label="org.apache.commons.math3.ode.nonstiff.LutherStepInterpolator.doCopy()Lorg/apache/commons/math3/ode/sampling/StepInterpolator;"]
34273 [label="org.apache.commons.math3.ode.nonstiff.MidpointFieldIntegrator.<init>(Lorg/apache/commons/math3/Field;Lorg/apache/commons/math3/RealFieldElement;)V"]
34280 [label="org.apache.commons.math3.ode.nonstiff.MidpointFieldIntegrator.getC()[Lorg/apache/commons/math3/RealFieldElement;"]
34283 [label="org.apache.commons.math3.ode.nonstiff.MidpointFieldIntegrator.getA()[[Lorg/apache/commons/math3/RealFieldElement;"]
34286 [label="org.apache.commons.math3.ode.nonstiff.MidpointFieldIntegrator.getB()[Lorg/apache/commons/math3/RealFieldElement;"]
34288 [label="org.apache.commons.math3.ode.nonstiff.MidpointFieldIntegrator.createInterpolator(Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/MidpointFieldStepInterpolator;"]
34301 [label="org.apache.commons.math3.ode.nonstiff.MidpointFieldStepInterpolator.<init>(Lorg/apache/commons/math3/Field;Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)V"]
34318 [label="org.apache.commons.math3.ode.nonstiff.MidpointFieldStepInterpolator.create(Lorg/apache/commons/math3/Field;Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/MidpointFieldStepInterpolator;"]
34328 [label="org.apache.commons.math3.ode.nonstiff.MidpointFieldStepInterpolator.computeInterpolatedStateAndDerivatives(Lorg/apache/commons/math3/ode/FieldEquationsMapper;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;"]
34343 [label="org.apache.commons.math3.ode.nonstiff.MidpointIntegrator.<init>(D)V"]
34352 [label="org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolator.<init>()V"]
34360 [label="org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolator.<init>(Lorg/apache/commons/math3/ode/nonstiff/MidpointStepInterpolator;)V"]
34364 [label="org.apache.commons.math3.ode.nonstiff.MidpointStepInterpolator.doCopy()Lorg/apache/commons/math3/ode/sampling/StepInterpolator;"]
34396 [label="org.apache.commons.math3.ode.nonstiff.RungeKuttaFieldIntegrator.createInterpolator(Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/RungeKuttaFieldStepInterpolator;"]
34403 [label="org.apache.commons.math3.ode.nonstiff.RungeKuttaFieldIntegrator.integrate(Lorg/apache/commons/math3/ode/FieldExpandableODE;Lorg/apache/commons/math3/ode/FieldODEState;Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;"]
34409 [label="org.apache.commons.math3.ode.nonstiff.RungeKuttaFieldIntegrator.singleStep(Lorg/apache/commons/math3/ode/FirstOrderFieldDifferentialEquations;Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)[Lorg/apache/commons/math3/RealFieldElement;"]
34436 [label="org.apache.commons.math3.ode.nonstiff.RungeKuttaFieldStepInterpolator.create(ZLorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/RungeKuttaFieldStepInterpolator;"]
34444 [label="org.apache.commons.math3.ode.nonstiff.RungeKuttaFieldStepInterpolator.create(Lorg/apache/commons/math3/Field;Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/RungeKuttaFieldStepInterpolator;"]
34457 [label="org.apache.commons.math3.ode.nonstiff.RungeKuttaFieldStepInterpolator.combine([Lorg/apache/commons/math3/RealFieldElement;[Lorg/apache/commons/math3/RealFieldElement;)[Lorg/apache/commons/math3/RealFieldElement;"]
34459 [label="org.apache.commons.math3.ode.sampling.AbstractFieldStepInterpolator.getPreviousState()Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;"]
34463 [label="org.apache.commons.math3.ode.sampling.AbstractFieldStepInterpolator.getCurrentState()Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;"]
34493 [label="org.apache.commons.math3.ode.nonstiff.RungeKuttaIntegrator.integrate(Lorg/apache/commons/math3/ode/ExpandableStatefulODE;D)V"]
34497 [label="org.apache.commons.math3.ode.nonstiff.RungeKuttaIntegrator.singleStep(Lorg/apache/commons/math3/ode/FirstOrderDifferentialEquations;D[DD)[D"]
34517 [label="org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.reinitialize([DZLorg/apache/commons/math3/ode/EquationsMapper;[Lorg/apache/commons/math3/ode/EquationsMapper;)V"]
34528 [label="org.apache.commons.math3.ode.nonstiff.ThreeEighthesFieldIntegrator.<init>(Lorg/apache/commons/math3/Field;Lorg/apache/commons/math3/RealFieldElement;)V"]
34535 [label="org.apache.commons.math3.ode.nonstiff.ThreeEighthesFieldIntegrator.getC()[Lorg/apache/commons/math3/RealFieldElement;"]
34538 [label="org.apache.commons.math3.ode.nonstiff.ThreeEighthesFieldIntegrator.getA()[[Lorg/apache/commons/math3/RealFieldElement;"]
34541 [label="org.apache.commons.math3.ode.nonstiff.ThreeEighthesFieldIntegrator.getB()[Lorg/apache/commons/math3/RealFieldElement;"]
34543 [label="org.apache.commons.math3.ode.nonstiff.ThreeEighthesFieldIntegrator.createInterpolator(Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/ThreeEighthesFieldStepInterpolator;"]
34556 [label="org.apache.commons.math3.ode.nonstiff.ThreeEighthesFieldStepInterpolator.<init>(Lorg/apache/commons/math3/Field;Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)V"]
34573 [label="org.apache.commons.math3.ode.nonstiff.ThreeEighthesFieldStepInterpolator.create(Lorg/apache/commons/math3/Field;Z[[Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/nonstiff/ThreeEighthesFieldStepInterpolator;"]
34583 [label="org.apache.commons.math3.ode.nonstiff.ThreeEighthesFieldStepInterpolator.computeInterpolatedStateAndDerivatives(Lorg/apache/commons/math3/ode/FieldEquationsMapper;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;"]
34598 [label="org.apache.commons.math3.ode.nonstiff.ThreeEighthesIntegrator.<init>(D)V"]
34607 [label="org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolator.<init>()V"]
34615 [label="org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolator.<init>(Lorg/apache/commons/math3/ode/nonstiff/ThreeEighthesStepInterpolator;)V"]
34619 [label="org.apache.commons.math3.ode.nonstiff.ThreeEighthesStepInterpolator.doCopy()Lorg/apache/commons/math3/ode/sampling/StepInterpolator;"]
34673 [label="org.apache.commons.math3.ode.ParameterConfiguration.getHP()D"]
34678 [label="org.apache.commons.math3.ode.Parameterizable.getParametersNames()Ljava/util/Collection;"]
34683 [label="org.apache.commons.math3.ode.ParameterizedODE.getParameter(Ljava/lang/String;)D"]
34686 [label="org.apache.commons.math3.ode.ParameterizedODE.setParameter(Ljava/lang/String;D)V"]
34694 [label="org.apache.commons.math3.ode.ParameterizedWrapper.<init>(Lorg/apache/commons/math3/ode/FirstOrderDifferentialEquations;)V"]
34698 [label="org.apache.commons.math3.ode.ParameterizedWrapper.getDimension()I"]
34700 [label="org.apache.commons.math3.ode.ParameterizedWrapper.computeDerivatives(D[D[D)V"]
34705 [label="org.apache.commons.math3.ode.ParameterizedWrapper.getParametersNames()Ljava/util/Collection;"]
34707 [label="org.apache.commons.math3.ode.ParameterizedWrapper.isSupported(Ljava/lang/String;)Z"]
34710 [label="org.apache.commons.math3.ode.ParameterizedWrapper.getParameter(Ljava/lang/String;)D"]
34746 [label="org.apache.commons.math3.ode.ParameterJacobianWrapper.getParametersNames()Ljava/util/Collection;"]
34749 [label="org.apache.commons.math3.ode.ParameterJacobianWrapper.isSupported(Ljava/lang/String;)Z"]
34752 [label="org.apache.commons.math3.ode.ParameterJacobianWrapper.computeParameterJacobian(D[D[DLjava/lang/String;[D)V"]
34810 [label="org.apache.commons.math3.ode.sampling.AbstractFieldStepInterpolator.create(ZLorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/ode/FieldEquationsMapper;)Lorg/apache/commons/math3/ode/sampling/AbstractFieldStepInterpolator;"]
34825 [label="org.apache.commons.math3.ode.sampling.AbstractFieldStepInterpolator.computeInterpolatedStateAndDerivatives(Lorg/apache/commons/math3/ode/FieldEquationsMapper;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/RealFieldElement;)Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;"]
34876 [label="org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.allocateInterpolatedArrays(I)V"]
34897 [label="org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.doCopy()Lorg/apache/commons/math3/ode/sampling/StepInterpolator;"]
34913 [label="org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.getInterpolatedTime()D"]
34918 [label="org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.computeInterpolatedStateAndDerivatives(DD)V"]
34922 [label="org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.evaluateCompleteInterpolatedState()V"]
34927 [label="org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.getInterpolatedDerivatives()[D"]
34931 [label="org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.getInterpolatedSecondaryDerivatives(I)[D"]
34935 [label="org.apache.commons.math3.ode.sampling.AbstractStepInterpolator.doFinalize()V"]
34946 [label="java.io.DataOutput.writeBoolean(Z)V"]
34948 [label="java.io.ObjectOutput.writeObject(Ljava/lang/Object;)V"]
34950 [label="java.io.ObjectOutput.write(I)V"]
34954 [label="java.io.DataInput.readBoolean()Z"]
34956 [label="java.io.ObjectInput.readObject()Ljava/lang/Object;"]
34958 [label="java.io.ObjectInput.read()I"]
34962 [label="org.apache.commons.math3.ode.sampling.DummyStepHandler.<init>()V"]
34982 [label="org.apache.commons.math3.ode.sampling.DummyStepHandler$LazyHolder.<init>()V"]
34989 [label="org.apache.commons.math3.ode.sampling.FieldFixedStepHandler.init(Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/RealFieldElement;)V"]
34996 [label="org.apache.commons.math3.ode.sampling.FieldFixedStepHandler.handleStep(Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Z)V"]
35049 [label="org.apache.commons.math3.ode.sampling.FieldStepNormalizer.<init>(DLorg/apache/commons/math3/ode/sampling/FieldFixedStepHandler;)V"]
35053 [label="org.apache.commons.math3.ode.sampling.FieldStepNormalizer.<init>(DLorg/apache/commons/math3/ode/sampling/FieldFixedStepHandler;Lorg/apache/commons/math3/ode/sampling/StepNormalizerMode;Lorg/apache/commons/math3/ode/sampling/StepNormalizerBounds;)V"]
35059 [label="org.apache.commons.math3.ode.sampling.FieldStepNormalizer.<init>(DLorg/apache/commons/math3/ode/sampling/FieldFixedStepHandler;Lorg/apache/commons/math3/ode/sampling/StepNormalizerMode;)V"]
35064 [label="org.apache.commons.math3.ode.sampling.FieldStepNormalizer.<init>(DLorg/apache/commons/math3/ode/sampling/FieldFixedStepHandler;Lorg/apache/commons/math3/ode/sampling/StepNormalizerBounds;)V"]
35081 [label="org.apache.commons.math3.ode.sampling.FieldStepNormalizer.init(Lorg/apache/commons/math3/ode/FieldODEStateAndDerivative;Lorg/apache/commons/math3/RealFieldElement;)V"]
35086 [label="org.apache.commons.math3.ode.sampling.FieldStepNormalizer.handleStep(Lorg/apache/commons/math3/ode/sampling/FieldStepInterpolator;Z)V"]
35092 [label="org.apache.commons.math3.ode.sampling.FieldStepNormalizer.isNextInStep(Lorg/apache/commons/math3/RealFieldElement;Lorg/apache/commons/math3/ode/sampling/FieldStepInterpolator;)Z"]
35094 [label="org.apache.commons.math3.ode.sampling.FieldStepNormalizer.doNormalizedStep(Z)V"]
35096 [label="org.apache.commons.math3.ode.sampling.StepNormalizerBounds.lastIncluded()Z"]
35103 [label="org.apache.commons.math3.ode.sampling.StepNormalizerBounds.firstIncluded()Z"]
35108 [label="org.apache.commons.math3.ode.sampling.FixedStepHandler.init(D[DD)V"]
35113 [label="org.apache.commons.math3.ode.sampling.FixedStepHandler.handleStep(D[D[DZ)V"]
35133 [label="org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator.<init>(Lorg/apache/commons/math3/ode/sampling/NordsieckStepInterpolator;)V"]
35141 [label="org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator.doCopy()Lorg/apache/commons/math3/ode/sampling/StepInterpolator;"]
35157 [label="org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator.getInterpolatedStateVariation()[D"]
35159 [label="org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator.computeInterpolatedStateAndDerivatives(DD)V"]
35163 [label="org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator.writeExternal(Ljava/io/ObjectOutput;)V"]
35166 [label="org.apache.commons.math3.ode.sampling.NordsieckStepInterpolator.readExternal(Ljava/io/ObjectInput;)V"]
35216 [label="org.apache.commons.math3.ode.sampling.StepNormalizer.<init>(DLorg/apache/commons/math3/ode/sampling/FixedStepHandler;)V"]
35220 [label="org.apache.commons.math3.ode.sampling.StepNormalizer.<init>(DLorg/apache/commons/math3/ode/sampling/FixedStepHandler;Lorg/apache/commons/math3/ode/sampling/StepNormalizerMode;Lorg/apache/commons/math3/ode/sampling/StepNormalizerBounds;)V"]
35222 [label="org.apache.commons.math3.ode.sampling.StepNormalizer.<init>(DLorg/apache/commons/math3/ode/sampling/FixedStepHandler;Lorg/apache/commons/math3/ode/sampling/StepNormalizerMode;)V"]
35227 [label="org.apache.commons.math3.ode.sampling.StepNormalizer.<init>(DLorg/apache/commons/math3/ode/sampling/FixedStepHandler;Lorg/apache/commons/math3/ode/sampling/StepNormalizerBounds;)V"]
35246 [label="org.apache.commons.math3.ode.sampling.StepNormalizer.init(D[DD)V"]
35252 [label="org.apache.commons.math3.ode.sampling.StepNormalizer.handleStep(Lorg/apache/commons/math3/ode/sampling/StepInterpolator;Z)V"]
35256 [label="org.apache.commons.math3.ode.sampling.StepNormalizer.isNextInStep(DLorg/apache/commons/math3/ode/sampling/StepInterpolator;)Z"]
35258 [label="org.apache.commons.math3.ode.sampling.StepNormalizer.doNormalizedStep(Z)V"]
35260 [label="org.apache.commons.math3.ode.sampling.StepNormalizer.storeStep(Lorg/apache/commons/math3/ode/sampling/StepInterpolator;D)V"]
35286 [label="org.apache.commons.math3.ode.sampling.StepNormalizerBounds.<init>(ZZ)V"]
35302 [label="org.apache.commons.math3.ode.sampling.StepNormalizerMode.<init>()V"]
35378 [label="org.apache.commons.math3.optim.AbstractConvergenceChecker.<init>(DD)V"]
35384 [label="org.apache.commons.math3.optim.AbstractConvergenceChecker.getRelativeThreshold()D"]
35386 [label="org.apache.commons.math3.optim.AbstractConvergenceChecker.getAbsoluteThreshold()D"]
35423 [label="org.apache.commons.math3.optim.AbstractOptimizationProblem.getEvaluationCounter()Lorg/apache/commons/math3/util/Incrementor;"]
35425 [label="org.apache.commons.math3.util.Incrementor.<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V"]
35428 [label="org.apache.commons.math3.optim.AbstractOptimizationProblem.getIterationCounter()Lorg/apache/commons/math3/util/Incrementor;"]
35437 [label="org.apache.commons.math3.optim.AbstractOptimizationProblem$MaxEvalCallback.<init>()V"]
35438 [label="org.apache.commons.math3.optim.AbstractOptimizationProblem$MaxEvalCallback.trigger(I)V"]
35442 [label="org.apache.commons.math3.optim.AbstractOptimizationProblem$MaxIterCallback.<init>()V"]
35443 [label="org.apache.commons.math3.optim.AbstractOptimizationProblem$MaxIterCallback.trigger(I)V"]
35481 [label="org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer.<init>(Lorg/apache/commons/math3/optim/BaseMultivariateOptimizer;ILorg/apache/commons/math3/random/RandomVectorGenerator;)V"]
35486 [label="org.apache.commons.math3.optim.BaseMultivariateOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V"]
35488 [label="org.apache.commons.math3.optim.BaseOptimizer.getConvergenceChecker()Lorg/apache/commons/math3/optim/ConvergenceChecker;"]
35496 [label="org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer.getOptima()[Ljava/lang/Object;"]
35499 [label="org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Ljava/lang/Object;"]
35503 [label="org.apache.commons.math3.optim.BaseMultivariateOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Ljava/lang/Object;"]
35505 [label="org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer.doOptimize()Ljava/lang/Object;"]
35509 [label="org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer.clear()V"]
35511 [label="org.apache.commons.math3.optim.BaseOptimizer.getMaxEvaluations()I"]
35513 [label="org.apache.commons.math3.optim.BaseMultivariateOptimizer.getLowerBound()[D"]
35515 [label="org.apache.commons.math3.optim.BaseMultivariateOptimizer.getUpperBound()[D"]
35517 [label="org.apache.commons.math3.optim.BaseMultivariateOptimizer.getStartPoint()[D"]
35519 [label="org.apache.commons.math3.random.RandomVectorGenerator.nextVector()[D"]
35521 [label="org.apache.commons.math3.optim.BaseMultiStartMultivariateOptimizer.store(Ljava/lang/Object;)V"]
35523 [label="org.apache.commons.math3.optim.BaseOptimizer.getEvaluations()I"]
35545 [label="org.apache.commons.math3.optim.BaseOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V"]
35549 [label="org.apache.commons.math3.optim.BaseOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Ljava/lang/Object;"]
35551 [label="org.apache.commons.math3.optim.BaseMultivariateOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V"]
35554 [label="org.apache.commons.math3.optim.BaseOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V"]
35557 [label="org.apache.commons.math3.optim.InitialGuess.getInitialGuess()[D"]
35563 [label="org.apache.commons.math3.optim.SimpleBounds.getLower()[D"]
35566 [label="org.apache.commons.math3.optim.SimpleBounds.getUpper()[D"]
35568 [label="org.apache.commons.math3.optim.BaseMultivariateOptimizer.checkParameters()V"]
35588 [label="org.apache.commons.math3.optim.BaseOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;II)V"]
35599 [label="org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback.<init>()V"]
35605 [label="org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback.<init>()V"]
35608 [label="org.apache.commons.math3.util.Incrementor.getMaximalCount()I"]
35611 [label="org.apache.commons.math3.optim.BaseOptimizer.getMaxIterations()I"]
35613 [label="org.apache.commons.math3.optim.BaseOptimizer.getIterations()I"]
35618 [label="org.apache.commons.math3.util.Incrementor.resetCount()V"]
35620 [label="org.apache.commons.math3.optim.BaseOptimizer.doOptimize()Ljava/lang/Object;"]
35622 [label="org.apache.commons.math3.optim.BaseOptimizer.optimize()Ljava/lang/Object;"]
35625 [label="org.apache.commons.math3.optim.BaseOptimizer.incrementEvaluationCount()V"]
35627 [label="org.apache.commons.math3.optim.BaseOptimizer.incrementIterationCount()V"]
35631 [label="org.apache.commons.math3.util.Incrementor.setMaximalCount(I)V"]
35633 [label="org.apache.commons.math3.optim.MaxEval.getMaxEval()I"]
35638 [label="org.apache.commons.math3.optim.MaxIter.getMaxIter()I"]
35641 [label="org.apache.commons.math3.optim.BaseOptimizer$MaxEvalCallback.trigger(I)V"]
35645 [label="org.apache.commons.math3.optim.BaseOptimizer$MaxIterCallback.trigger(I)V"]
35691 [label="org.apache.commons.math3.optim.linear.LinearConstraint.<init>([DLorg/apache/commons/math3/optim/linear/Relationship;D)V"]
35696 [label="org.apache.commons.math3.optim.linear.LinearConstraint.<init>(Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/optim/linear/Relationship;D)V"]
35705 [label="org.apache.commons.math3.optim.linear.LinearConstraint.<init>([DDLorg/apache/commons/math3/optim/linear/Relationship;[DD)V"]
35712 [label="org.apache.commons.math3.optim.linear.LinearConstraint.<init>(Lorg/apache/commons/math3/linear/RealVector;DLorg/apache/commons/math3/optim/linear/Relationship;Lorg/apache/commons/math3/linear/RealVector;D)V"]
35719 [label="org.apache.commons.math3.optim.linear.LinearConstraint.getCoefficients()Lorg/apache/commons/math3/linear/RealVector;"]
35721 [label="org.apache.commons.math3.optim.linear.LinearConstraint.getRelationship()Lorg/apache/commons/math3/optim/linear/Relationship;"]
35723 [label="org.apache.commons.math3.optim.linear.LinearConstraint.getValue()D"]
35725 [label="org.apache.commons.math3.optim.linear.LinearConstraint.equals(Ljava/lang/Object;)Z"]
35731 [label="org.apache.commons.math3.optim.linear.LinearConstraint.hashCode()I"]
35733 [label="java.lang.Enum.hashCode()I"]
35735 [label="java.lang.Double.hashCode()I"]
35738 [label="org.apache.commons.math3.optim.linear.LinearConstraint.writeObject(Ljava/io/ObjectOutputStream;)V"]
35741 [label="java.io.ObjectOutputStream.defaultWriteObject()V"]
35744 [label="org.apache.commons.math3.optim.linear.LinearConstraint.readObject(Ljava/io/ObjectInputStream;)V"]
35747 [label="java.io.ObjectInputStream.defaultReadObject()V"]
35763 [label="org.apache.commons.math3.optim.linear.LinearConstraintSet.<init>([Lorg/apache/commons/math3/optim/linear/LinearConstraint;)V"]
35768 [label="org.apache.commons.math3.optim.linear.LinearConstraintSet.<init>(Ljava/util/Collection;)V"]
35774 [label="org.apache.commons.math3.optim.linear.LinearConstraintSet.getConstraints()Ljava/util/Collection;"]
35776 [label="java.util.Collections.unmodifiableSet(Ljava/util/Set;)Ljava/util/Set;"]
35786 [label="org.apache.commons.math3.optim.linear.LinearObjectiveFunction.<init>([DD)V"]
35790 [label="org.apache.commons.math3.optim.linear.LinearObjectiveFunction.<init>(Lorg/apache/commons/math3/linear/RealVector;D)V"]
35797 [label="org.apache.commons.math3.optim.linear.LinearObjectiveFunction.getCoefficients()Lorg/apache/commons/math3/linear/RealVector;"]
35799 [label="org.apache.commons.math3.optim.linear.LinearObjectiveFunction.getConstantTerm()D"]
35801 [label="org.apache.commons.math3.optim.linear.LinearObjectiveFunction.value([D)D"]
35804 [label="org.apache.commons.math3.optim.linear.LinearObjectiveFunction.value(Lorg/apache/commons/math3/linear/RealVector;)D"]
35808 [label="org.apache.commons.math3.optim.linear.LinearObjectiveFunction.equals(Ljava/lang/Object;)Z"]
35813 [label="org.apache.commons.math3.optim.linear.LinearObjectiveFunction.hashCode()I"]
35815 [label="org.apache.commons.math3.optim.linear.LinearObjectiveFunction.writeObject(Ljava/io/ObjectOutputStream;)V"]
35818 [label="org.apache.commons.math3.optim.linear.LinearObjectiveFunction.readObject(Ljava/io/ObjectInputStream;)V"]
35832 [label="org.apache.commons.math3.optim.linear.LinearOptimizer.<init>()V"]
35834 [label="org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V"]
35836 [label="org.apache.commons.math3.optim.linear.LinearOptimizer.isRestrictedToNonNegative()Z"]
35839 [label="org.apache.commons.math3.optim.linear.LinearOptimizer.getFunction()Lorg/apache/commons/math3/optim/linear/LinearObjectiveFunction;"]
35842 [label="org.apache.commons.math3.optim.linear.LinearOptimizer.getConstraints()Ljava/util/Collection;"]
35845 [label="org.apache.commons.math3.optim.linear.LinearOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;"]
35851 [label="org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;"]
35853 [label="org.apache.commons.math3.optim.linear.LinearOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V"]
35856 [label="org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V"]
35864 [label="org.apache.commons.math3.optim.linear.NonNegativeConstraint.isRestrictedToNonNegative()Z"]
35870 [label="org.apache.commons.math3.optim.linear.NoFeasibleSolutionException.<init>()V"]
35876 [label="org.apache.commons.math3.optim.linear.NonNegativeConstraint.<init>(Z)V"]
35888 [label="org.apache.commons.math3.optim.linear.PivotSelectionRule.<init>()V"]
35909 [label="org.apache.commons.math3.optim.linear.Relationship.<init>(Ljava/lang/String;)V"]
35915 [label="org.apache.commons.math3.optim.linear.Relationship.oppositeRelationship()Lorg/apache/commons/math3/optim/linear/Relationship;"]
35947 [label="org.apache.commons.math3.optim.linear.SimplexSolver.<init>()V"]
35949 [label="org.apache.commons.math3.optim.linear.SimplexSolver.<init>(DID)V"]
35954 [label="org.apache.commons.math3.optim.linear.SimplexSolver.<init>(D)V"]
35957 [label="org.apache.commons.math3.optim.linear.SimplexSolver.<init>(DI)V"]
35971 [label="org.apache.commons.math3.optim.linear.SimplexSolver.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;"]
35975 [label="org.apache.commons.math3.optim.linear.SimplexSolver.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V"]
35980 [label="org.apache.commons.math3.optim.linear.SimplexSolver.getPivotColumn(Lorg/apache/commons/math3/optim/linear/SimplexTableau;)Ljava/lang/Integer;"]
35986 [label="org.apache.commons.math3.optim.linear.SimplexTableau.getEntry(II)D"]
35989 [label="org.apache.commons.math3.optim.linear.SimplexSolver.isValidPivotColumn(Lorg/apache/commons/math3/optim/linear/SimplexTableau;I)Z"]
35991 [label="org.apache.commons.math3.optim.linear.SimplexTableau.getNumObjectiveFunctions()I"]
35993 [label="org.apache.commons.math3.optim.linear.SimplexTableau.getWidth()I"]
35998 [label="org.apache.commons.math3.optim.linear.SimplexTableau.getHeight()I"]
36000 [label="org.apache.commons.math3.optim.linear.SimplexSolver.getPivotRow(Lorg/apache/commons/math3/optim/linear/SimplexTableau;I)Ljava/lang/Integer;"]
36004 [label="org.apache.commons.math3.optim.linear.SimplexTableau.getNumArtificialVariables()I"]
36006 [label="org.apache.commons.math3.optim.linear.SimplexTableau.getArtificialVariableOffset()I"]
36008 [label="org.apache.commons.math3.optim.linear.SimplexTableau.getBasicRow(I)Ljava/lang/Integer;"]
36010 [label="org.apache.commons.math3.optim.linear.SimplexTableau.getBasicVariable(I)I"]
36012 [label="org.apache.commons.math3.optim.linear.SimplexSolver.doIteration(Lorg/apache/commons/math3/optim/linear/SimplexTableau;)V"]
36021 [label="org.apache.commons.math3.optim.linear.UnboundedSolutionException.<init>()V"]
36023 [label="org.apache.commons.math3.optim.linear.SimplexTableau.performRowOperations(II)V"]
36025 [label="org.apache.commons.math3.optim.linear.SimplexSolver.solvePhase1(Lorg/apache/commons/math3/optim/linear/SimplexTableau;)V"]
36031 [label="org.apache.commons.math3.optim.linear.SimplexTableau.isOptimal()Z"]
36033 [label="org.apache.commons.math3.optim.linear.SimplexTableau.getRhsOffset()I"]
36036 [label="org.apache.commons.math3.optim.linear.SimplexSolver.doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;"]
36038 [label="org.apache.commons.math3.optim.linear.SolutionCallback.setTableau(Lorg/apache/commons/math3/optim/linear/SimplexTableau;)V"]
36040 [label="org.apache.commons.math3.optim.linear.SimplexTableau.<init>(Lorg/apache/commons/math3/optim/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math3/optim/nonlinear/scalar/GoalType;ZDI)V"]
36044 [label="org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.getGoalType()Lorg/apache/commons/math3/optim/nonlinear/scalar/GoalType;"]
36048 [label="org.apache.commons.math3.optim.linear.SimplexTableau.dropPhase1Objective()V"]
36050 [label="org.apache.commons.math3.optim.linear.SimplexTableau.getSolution()Lorg/apache/commons/math3/optim/PointValuePair;"]
36052 [label="org.apache.commons.math3.optim.PointValuePair.getPoint()[D"]
36089 [label="org.apache.commons.math3.optim.linear.SimplexTableau.<init>(Lorg/apache/commons/math3/optim/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math3/optim/nonlinear/scalar/GoalType;ZD)V"]
36108 [label="org.apache.commons.math3.optim.linear.SimplexTableau.normalizeConstraints(Ljava/util/Collection;)Ljava/util/List;"]
36116 [label="org.apache.commons.math3.optim.linear.SimplexTableau.getConstraintTypeCounts(Lorg/apache/commons/math3/optim/linear/Relationship;)I"]
36120 [label="org.apache.commons.math3.optim.linear.SimplexTableau.createTableau(Z)Lorg/apache/commons/math3/linear/Array2DRowRealMatrix;"]
36124 [label="org.apache.commons.math3.optim.linear.SimplexTableau.initializeBasicVariables(I)V"]
36126 [label="org.apache.commons.math3.optim.linear.SimplexTableau.getSlackVariableOffset()I"]
36128 [label="org.apache.commons.math3.optim.linear.SimplexTableau.initializeColumnLabels()V"]
36132 [label="org.apache.commons.math3.optim.linear.SimplexTableau.getOriginalNumDecisionVariables()I"]
36135 [label="org.apache.commons.math3.optim.linear.SimplexTableau.getNumSlackVariables()I"]
36139 [label="org.apache.commons.math3.optim.linear.SimplexTableau.copyArray([D[D)V"]
36142 [label="org.apache.commons.math3.optim.linear.SimplexTableau.getInvertedCoefficientSum(Lorg/apache/commons/math3/linear/RealVector;)D"]
36153 [label="org.apache.commons.math3.optim.linear.SimplexTableau.normalize(Lorg/apache/commons/math3/optim/linear/LinearConstraint;)Lorg/apache/commons/math3/optim/linear/LinearConstraint;"]
36171 [label="org.apache.commons.math3.optim.linear.SimplexTableau.findBasicRow(I)Ljava/lang/Integer;"]
36179 [label="java.util.TreeSet.<init>()V"]
36181 [label="java.util.Set.toArray([Ljava/lang/Object;)[Ljava/lang/Object;"]
36187 [label="org.apache.commons.math3.optim.linear.SimplexTableau.getRow(I)[D"]
36190 [label="org.apache.commons.math3.optim.PointValuePair.<init>([DD)V"]
36196 [label="org.apache.commons.math3.optim.linear.SimplexTableau.divideRow(ID)V"]
36198 [label="org.apache.commons.math3.optim.linear.SimplexTableau.subtractRow(IID)V"]
36213 [label="org.apache.commons.math3.optim.linear.SimplexTableau.setEntry(IID)V"]
36228 [label="org.apache.commons.math3.optim.linear.SimplexTableau.getData()[[D"]
36231 [label="org.apache.commons.math3.optim.linear.SimplexTableau.equals(Ljava/lang/Object;)Z"]
36235 [label="java.util.List.equals(Ljava/lang/Object;)Z"]
36238 [label="org.apache.commons.math3.optim.linear.SimplexTableau.hashCode()I"]
36240 [label="java.lang.Boolean.hashCode()I"]
36242 [label="java.lang.Boolean.valueOf(Z)Ljava/lang/Boolean;"]
36245 [label="java.util.List.hashCode()I"]
36248 [label="org.apache.commons.math3.optim.linear.SimplexTableau.writeObject(Ljava/io/ObjectOutputStream;)V"]
36252 [label="org.apache.commons.math3.optim.linear.SimplexTableau.readObject(Ljava/io/ObjectInputStream;)V"]
36257 [label="org.apache.commons.math3.optim.linear.SolutionCallback.<init>()V"]
36263 [label="org.apache.commons.math3.optim.linear.SolutionCallback.getSolution()Lorg/apache/commons/math3/optim/PointValuePair;"]
36265 [label="org.apache.commons.math3.optim.linear.SolutionCallback.isSolutionOptimal()Z"]
36279 [label="org.apache.commons.math3.optim.MaxEval.unlimited()Lorg/apache/commons/math3/optim/MaxEval;"]
36284 [label="org.apache.commons.math3.optim.MaxIter.<init>(I)V"]
36289 [label="org.apache.commons.math3.optim.MaxIter.unlimited()Lorg/apache/commons/math3/optim/MaxIter;"]
36311 [label="org.apache.commons.math3.optim.nonlinear.scalar.GoalType.<init>()V"]
36348 [label="org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$Formula.<init>()V"]
36361 [label="org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$BracketingStep.<init>(D)V"]
36367 [label="org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer$Formula;Lorg/apache/commons/math3/optim/ConvergenceChecker;)V"]
36374 [label="org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer$Formula;Lorg/apache/commons/math3/optim/ConvergenceChecker;DDDLorg/apache/commons/math3/optim/nonlinear/scalar/gradient/Preconditioner;)V"]
36379 [label="org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$IdentityPreconditioner.<init>()V"]
36381 [label="org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer$Formula;Lorg/apache/commons/math3/optim/ConvergenceChecker;Lorg/apache/commons/math3/analysis/solvers/UnivariateSolver;)V"]
36386 [label="org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer$Formula;Lorg/apache/commons/math3/optim/ConvergenceChecker;Lorg/apache/commons/math3/analysis/solvers/UnivariateSolver;Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/Preconditioner;)V"]
36388 [label="org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer$Formula;Lorg/apache/commons/math3/optim/ConvergenceChecker;DDD)V"]
36407 [label="org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V"]
36412 [label="org.apache.commons.math3.optim.nonlinear.scalar.LineSearch.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/MultivariateOptimizer;DDD)V"]
36414 [label="org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;"]
36417 [label="org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;"]
36419 [label="org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;"]
36421 [label="org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer.computeObjectiveGradient([D)[D"]
36424 [label="org.apache.commons.math3.optim.nonlinear.scalar.gradient.Preconditioner.precondition([D[D)[D"]
36426 [label="org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer.computeObjectiveValue([D)D"]
36429 [label="org.apache.commons.math3.optim.univariate.UnivariatePointValuePair.getPoint()D"]
36431 [label="org.apache.commons.math3.optim.nonlinear.scalar.LineSearch.search([D[D)Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;"]
36435 [label="org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V"]
36438 [label="org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V"]
36440 [label="org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer.checkParameters()V"]
36443 [label="org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer$IdentityPreconditioner.precondition([D[D)[D"]
36512 [label="org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunctionGradient.getObjectiveFunctionGradient()Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;"]
36524 [label="org.apache.commons.math3.optim.nonlinear.scalar.LeastSquaresConverter.<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;[D)V"]
36532 [label="org.apache.commons.math3.optim.nonlinear.scalar.LeastSquaresConverter.<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;[D[D)V"]
36537 [label="org.apache.commons.math3.optim.nonlinear.scalar.LeastSquaresConverter.<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;[DLorg/apache/commons/math3/linear/RealMatrix;)V"]
36542 [label="org.apache.commons.math3.optim.nonlinear.scalar.LeastSquaresConverter.value([D)D"]
36574 [label="org.apache.commons.math3.optim.univariate.BrentOptimizer.<init>(DDLorg/apache/commons/math3/optim/ConvergenceChecker;)V"]
36581 [label="org.apache.commons.math3.optim.univariate.SimpleUnivariateValueChecker.<init>(DD)V"]
36590 [label="org.apache.commons.math3.optim.nonlinear.scalar.LineSearch$1.<init>()V"]
36593 [label="org.apache.commons.math3.optim.nonlinear.scalar.LineSearch$1.value(D)D"]
36596 [label="org.apache.commons.math3.optim.univariate.BracketFinder.search(Lorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optim/nonlinear/scalar/GoalType;DD)V"]
36599 [label="org.apache.commons.math3.optim.univariate.UnivariateOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;"]
36604 [label="org.apache.commons.math3.optim.univariate.UnivariateObjectiveFunction.<init>(Lorg/apache/commons/math3/analysis/UnivariateFunction;)V"]
36609 [label="org.apache.commons.math3.optim.univariate.SearchInterval.<init>(DDD)V"]
36611 [label="org.apache.commons.math3.optim.univariate.BracketFinder.getLo()D"]
36613 [label="org.apache.commons.math3.optim.univariate.BracketFinder.getHi()D"]
36615 [label="org.apache.commons.math3.optim.univariate.BracketFinder.getMid()D"]
36632 [label="org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer.<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/MultivariateOptimizer;ILorg/apache/commons/math3/random/RandomVectorGenerator;)V"]
36639 [label="org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer.getOptima()[Lorg/apache/commons/math3/optim/PointValuePair;"]
36643 [label="org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer.getPairComparator()Ljava/util/Comparator;"]
36645 [label="org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer.store(Lorg/apache/commons/math3/optim/PointValuePair;)V"]
36648 [label="org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer.clear()V"]
36654 [label="org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer$1.<init>()V"]
36657 [label="org.apache.commons.math3.optim.nonlinear.scalar.MultiStartMultivariateOptimizer$1.compare(Lorg/apache/commons/math3/optim/PointValuePair;Lorg/apache/commons/math3/optim/PointValuePair;)I"]
36673 [label="org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.<init>(Lorg/apache/commons/math3/analysis/MultivariateFunction;[D[D)V"]
36683 [label="org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$NoBoundsMapper.<init>()V"]
36688 [label="org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$UpperBoundMapper.<init>(D)V"]
36693 [label="org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerBoundMapper.<init>(D)V"]
36698 [label="org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.<init>(DD)V"]
36700 [label="org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.unboundedToBounded([D)[D"]
36703 [label="org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$Mapper.unboundedToBounded(D)D"]
36705 [label="org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.boundedToUnbounded([D)[D"]
36708 [label="org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$Mapper.boundedToUnbounded(D)D"]
36710 [label="org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter.value([D)D"]
36732 [label="org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerBoundMapper.unboundedToBounded(D)D"]
36735 [label="org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerBoundMapper.boundedToUnbounded(D)D"]
36744 [label="org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$UpperBoundMapper.unboundedToBounded(D)D"]
36747 [label="org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$UpperBoundMapper.boundedToUnbounded(D)D"]
36764 [label="org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(D)D"]
36767 [label="org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.boundedToUnbounded(D)D"]
36782 [label="org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapter.<init>(Lorg/apache/commons/math3/analysis/MultivariateFunction;[D[DD[D)V"]
36794 [label="org.apache.commons.math3.optim.nonlinear.scalar.MultivariateFunctionPenaltyAdapter.value([D)D"]
36817 [label="org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunction.getObjectiveFunction()Lorg/apache/commons/math3/analysis/MultivariateFunction;"]
36841 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.<init>(I)V"]
36844 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.<init>(ID)V"]
36849 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.<init>([D)V"]
36851 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.createHypercubeSteps(ID)[D"]
36858 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.<init>([[D)V"]
36862 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.getDimension()I"]
36864 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.getSize()I"]
36867 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.iterate(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V"]
36871 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.build([D)V"]
36874 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.evaluate(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V"]
36878 [label="org.apache.commons.math3.optim.PointValuePair.getPointRef()[D"]
36880 [label="org.apache.commons.math3.optim.PointValuePair.<init>([DDZ)V"]
36882 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.replaceWorstPoint(Lorg/apache/commons/math3/optim/PointValuePair;Ljava/util/Comparator;)V"]
36886 [label="java.util.Comparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I"]
36888 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.getPoints()[Lorg/apache/commons/math3/optim/PointValuePair;"]
36890 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.getPoint(I)Lorg/apache/commons/math3/optim/PointValuePair;"]
36893 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.setPoint(ILorg/apache/commons/math3/optim/PointValuePair;)V"]
36897 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex.setPoints([Lorg/apache/commons/math3/optim/PointValuePair;)V"]
36980 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer.<init>(I)V"]
36983 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer.<init>(IDD)V"]
36994 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer.doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;"]
36996 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer.setup([D[D)V"]
37000 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer.bobyqa([D[D)D"]
37005 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer.printMethod()V"]
37011 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer.bobyqb([D[D)D"]
37019 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer.prelim([D[D)V"]
37024 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer.printState(I)V"]
37029 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer.trsbox(DLorg/apache/commons/math3/linear/ArrayRealVector;Lorg/apache/commons/math3/linear/ArrayRealVector;Lorg/apache/commons/math3/linear/ArrayRealVector;Lorg/apache/commons/math3/linear/ArrayRealVector;Lorg/apache/commons/math3/linear/ArrayRealVector;)[D"]
37041 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer.altmov(ID)[D"]
37047 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer.update(DDI)V"]
37086 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer.caller(I)Ljava/lang/String;"]
37089 [label="java.lang.Throwable.<init>()V"]
37095 [label="java.lang.Throwable.getStackTrace()[Ljava/lang/StackTraceElement;"]
37097 [label="java.lang.StackTraceElement.getMethodName()Ljava/lang/String;"]
37099 [label="java.lang.StackTraceElement.getLineNumber()I"]
37110 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.BOBYQAOptimizer$PathIsExploredException.<init>()V"]
37111 [label="java.lang.RuntimeException.<init>(Ljava/lang/String;)V"]
37218 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.<init>(IDZIILorg/apache/commons/math3/random/RandomGenerator;ZLorg/apache/commons/math3/optim/ConvergenceChecker;)V"]
37251 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$Sigma.<init>([D)V"]
37255 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$Sigma.getSigma()[D"]
37261 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$PopulationSize.<init>(I)V"]
37265 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$PopulationSize.getPopulationSize()I"]
37267 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;"]
37270 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;"]
37273 [label="java.lang.Enum.equals(Ljava/lang/Object;)Z"]
37278 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction.<init>()V"]
37281 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.initializeCMA([D)V"]
37287 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction.value([D)Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer$ValuePenaltyPair;"]
37293 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.push([DD)V"]
37296 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.randn1(II)Lorg/apache/commons/math3/linear/RealMatrix;"]
37299 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.zeros(II)Lorg/apache/commons/math3/linear/RealMatrix;"]
37306 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.times(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;"]
37309 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction.isFeasible([D)Z"]
37313 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.randn(I)[D"]
37315 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.copyColumn(Lorg/apache/commons/math3/linear/RealMatrix;ILorg/apache/commons/math3/linear/RealMatrix;I)V"]
37317 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.valueRange([Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer$ValuePenaltyPair;)D"]
37319 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.sortedIndices([D)[I"]
37321 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.selectColumns(Lorg/apache/commons/math3/linear/RealMatrix;[I)Lorg/apache/commons/math3/linear/RealMatrix;"]
37323 [label="org.apache.commons.math3.util.MathArrays.copyOf([II)[I"]
37327 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.updateEvolutionPaths(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)Z"]
37329 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.updateCovariance(ZLorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;[ILorg/apache/commons/math3/linear/RealMatrix;)V"]
37331 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.updateCovarianceDiagonalOnly(ZLorg/apache/commons/math3/linear/RealMatrix;)V"]
37337 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction.repair([D)[D"]
37339 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.sqrt(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;"]
37345 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.min([D)D"]
37347 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.max([D)D"]
37351 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.max(Lorg/apache/commons/math3/linear/RealMatrix;)D"]
37353 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.min(Lorg/apache/commons/math3/linear/RealMatrix;)D"]
37355 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V"]
37365 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.checkParameters()V"]
37372 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.log(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;"]
37374 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.sequence(DDD)Lorg/apache/commons/math3/linear/RealMatrix;"]
37383 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.square(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;"]
37387 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.eye(II)Lorg/apache/commons/math3/linear/RealMatrix;"]
37390 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.ones(II)Lorg/apache/commons/math3/linear/RealMatrix;"]
37392 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.repmat(Lorg/apache/commons/math3/linear/RealMatrix;II)Lorg/apache/commons/math3/linear/RealMatrix;"]
37395 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.diag(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;"]
37410 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.reverse([I)[I"]
37412 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.sumRows(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;"]
37415 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.divide(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;"]
37417 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.inverse([I)[I"]
37419 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.updateBD(D)V"]
37423 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer.triu(Lorg/apache/commons/math3/linear/RealMatrix;I)Lorg/apache/commons/math3/linear/RealMatrix;"]
37435 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex.<init>(DI)V"]
37452 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex.compareTo(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer$DoubleIndex;)I"]
37455 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex.equals(Ljava/lang/Object;)Z"]
37458 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex.hashCode()I"]
37463 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$ValuePenaltyPair.<init>(DD)V"]
37474 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction.penalty([D[D)D"]
37558 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex.<init>(I)V"]
37561 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex.<init>(ID)V"]
37566 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex.<init>(IDDD)V"]
37570 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex.<init>(IDD)V"]
37582 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex.<init>([D)V"]
37585 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex.<init>([DDD)V"]
37591 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex.<init>([[D)V"]
37594 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex.<init>([[DDD)V"]
37601 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex.iterate(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V"]
37606 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex.evaluateNewSimplex(Lorg/apache/commons/math3/analysis/MultivariateFunction;[Lorg/apache/commons/math3/optim/PointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math3/optim/PointValuePair;"]
37637 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex.<init>(I)V"]
37640 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex.<init>(ID)V"]
37645 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex.<init>(IDDDDD)V"]
37662 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex.<init>(IDDDD)V"]
37669 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex.<init>([D)V"]
37672 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex.<init>([DDDDD)V"]
37680 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex.<init>([[D)V"]
37683 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex.<init>([[DDDDD)V"]
37691 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex.iterate(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V"]
37706 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.<init>(DDLorg/apache/commons/math3/optim/ConvergenceChecker;)V"]
37711 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.<init>(DDDDLorg/apache/commons/math3/optim/ConvergenceChecker;)V"]
37723 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.<init>(DD)V"]
37728 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.<init>(DDDD)V"]
37734 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;"]
37736 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.checkParameters()V"]
37738 [label="org.apache.commons.math3.optim.univariate.UnivariatePointValuePair.getValue()D"]
37740 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer.newPointAndDirection([D[DD)[[D"]
37751 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V"]
37754 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.<init>(DD)V"]
37762 [label="org.apache.commons.math3.optim.SimpleValueChecker.<init>(DD)V"]
37764 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;"]
37767 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;"]
37769 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.checkParameters()V"]
37771 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$1.<init>()V"]
37774 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$1.value([D)D"]
37777 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$2.<init>()V"]
37780 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$2.compare(Lorg/apache/commons/math3/optim/PointValuePair;Lorg/apache/commons/math3/optim/PointValuePair;)I"]
37787 [label="org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V"]
37794 [label="org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunction.<init>(Lorg/apache/commons/math3/analysis/MultivariateFunction;)V"]
37802 [label="org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunctionGradient.<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V"]
37832 [label="org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V"]
37835 [label="org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V"]
37837 [label="org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.computeWeightedJacobian([D)Lorg/apache/commons/math3/linear/RealMatrix;"]
37841 [label="org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer.computeJacobian([D)[[D"]
37843 [label="org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.computeCost([D)D"]
37846 [label="org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.getWeight()Lorg/apache/commons/math3/linear/RealMatrix;"]
37848 [label="org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.getRMS()D"]
37850 [label="org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.getChiSquare()D"]
37852 [label="org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.getTargetSize()I"]
37856 [label="org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.getWeightSquareRoot()Lorg/apache/commons/math3/linear/RealMatrix;"]
37858 [label="org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.setCost(D)V"]
37861 [label="org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.computeCovariances([DD)[[D"]
37866 [label="org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.computeSigma([DD)[D"]
37871 [label="org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair;"]
37874 [label="org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair;"]
37876 [label="org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.computeResiduals([D)[D"]
37879 [label="org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.getTarget()[D"]
37881 [label="org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V"]
37884 [label="org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V"]
37886 [label="org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer.squareRoot(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;"]
37888 [label="org.apache.commons.math3.optim.nonlinear.vector.Weight.getWeight()Lorg/apache/commons/math3/linear/RealMatrix;"]
37897 [label="org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V"]
37905 [label="org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer.doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;"]
37907 [label="org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer.checkParameters()V"]
37909 [label="org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.computeObjectiveValue([D)[D"]
37912 [label="org.apache.commons.math3.optim.PointVectorValuePair.<init>([D[D)V"]
37952 [label="org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.<init>()V"]
37954 [label="org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.<init>(DDDDD)V"]
37956 [label="org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V"]
37959 [label="org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.<init>(DLorg/apache/commons/math3/optim/ConvergenceChecker;DDDD)V"]
37973 [label="org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.<init>(DDD)V"]
37984 [label="org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;"]
37986 [label="org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.checkParameters()V"]
37996 [label="org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.qrDecomposition(Lorg/apache/commons/math3/linear/RealMatrix;)V"]
37999 [label="org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.qTy([D)V"]
38002 [label="org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.determineLMParameter([DD[D[D[D[D)V"]
38013 [label="org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer.determineLMDirection([D[D[D[D)V"]
38030 [label="org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V"]
38039 [label="org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V"]
38041 [label="org.apache.commons.math3.optim.nonlinear.vector.ModelFunctionJacobian.getModelFunctionJacobian()Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;"]
38049 [label="org.apache.commons.math3.optim.nonlinear.vector.ModelFunction.getModelFunction()Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;"]
38073 [label="org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer.<init>(Lorg/apache/commons/math3/optim/nonlinear/vector/MultivariateVectorOptimizer;ILorg/apache/commons/math3/random/RandomVectorGenerator;)V"]
38079 [label="org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer.getOptima()[Lorg/apache/commons/math3/optim/PointVectorValuePair;"]
38083 [label="org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer.getPairComparator()Ljava/util/Comparator;"]
38085 [label="org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer.store(Lorg/apache/commons/math3/optim/PointVectorValuePair;)V"]
38088 [label="org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer.clear()V"]
38094 [label="org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1.<init>()V"]
38101 [label="org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1.compare(Lorg/apache/commons/math3/optim/PointVectorValuePair;Lorg/apache/commons/math3/optim/PointVectorValuePair;)I"]
38105 [label="org.apache.commons.math3.optim.nonlinear.vector.MultiStartMultivariateVectorOptimizer$1.weightedResidual(Lorg/apache/commons/math3/optim/PointVectorValuePair;)D"]
38108 [label="org.apache.commons.math3.optim.PointVectorValuePair.getValueRef()[D"]
38137 [label="org.apache.commons.math3.optim.nonlinear.vector.Target.getTarget()[D"]
38139 [label="org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer.checkParameters()V"]
38155 [label="org.apache.commons.math3.optim.nonlinear.vector.Weight.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V"]
38182 [label="org.apache.commons.math3.optim.PointValuePair.writeReplace()Ljava/lang/Object;"]
38187 [label="org.apache.commons.math3.optim.PointValuePair$DataTransferObject.<init>([DD)V"]
38201 [label="org.apache.commons.math3.optim.PointValuePair$DataTransferObject.readResolve()Ljava/lang/Object;"]
38213 [label="org.apache.commons.math3.optim.PointVectorValuePair.getPoint()[D"]
38216 [label="org.apache.commons.math3.optim.PointVectorValuePair.getValue()[D"]
38219 [label="org.apache.commons.math3.optim.PointVectorValuePair.writeReplace()Ljava/lang/Object;"]
38224 [label="org.apache.commons.math3.optim.PointVectorValuePair$DataTransferObject.<init>([D[D)V"]
38239 [label="org.apache.commons.math3.optim.PointVectorValuePair$DataTransferObject.readResolve()Ljava/lang/Object;"]
38246 [label="org.apache.commons.math3.optim.SimpleBounds.<init>([D[D)V"]
38254 [label="org.apache.commons.math3.optim.SimpleBounds.unbounded(I)Lorg/apache/commons/math3/optim/SimpleBounds;"]
38270 [label="org.apache.commons.math3.optim.SimplePointChecker.<init>(DD)V"]
38277 [label="org.apache.commons.math3.optim.SimplePointChecker.<init>(DDI)V"]
38282 [label="org.apache.commons.math3.optim.SimplePointChecker.converged(ILorg/apache/commons/math3/util/Pair;Lorg/apache/commons/math3/util/Pair;)Z"]
38307 [label="org.apache.commons.math3.optim.SimpleValueChecker.<init>(DDI)V"]
38312 [label="org.apache.commons.math3.optim.SimpleValueChecker.converged(ILorg/apache/commons/math3/optim/PointValuePair;Lorg/apache/commons/math3/optim/PointValuePair;)Z"]
38330 [label="org.apache.commons.math3.optim.SimpleVectorValueChecker.<init>(DDI)V"]
38335 [label="org.apache.commons.math3.optim.SimpleVectorValueChecker.converged(ILorg/apache/commons/math3/optim/PointVectorValuePair;Lorg/apache/commons/math3/optim/PointVectorValuePair;)Z"]
38372 [label="org.apache.commons.math3.optim.univariate.BracketFinder.<init>()V"]
38374 [label="org.apache.commons.math3.optim.univariate.BracketFinder.<init>(DI)V"]
38386 [label="org.apache.commons.math3.optim.univariate.BracketFinder.eval(Lorg/apache/commons/math3/analysis/UnivariateFunction;D)D"]
38396 [label="org.apache.commons.math3.optim.univariate.BracketFinder.getMaxEvaluations()I"]
38398 [label="org.apache.commons.math3.optim.univariate.BracketFinder.getEvaluations()I"]
38428 [label="org.apache.commons.math3.optim.univariate.UnivariateOptimizer.<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V"]
38433 [label="org.apache.commons.math3.optim.univariate.BrentOptimizer.<init>(DD)V"]
38437 [label="org.apache.commons.math3.optim.univariate.BrentOptimizer.doOptimize()Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;"]
38439 [label="org.apache.commons.math3.optim.univariate.UnivariateOptimizer.getGoalType()Lorg/apache/commons/math3/optim/nonlinear/scalar/GoalType;"]
38441 [label="org.apache.commons.math3.optim.univariate.UnivariateOptimizer.getMin()D"]
38443 [label="org.apache.commons.math3.optim.univariate.UnivariateOptimizer.getStartValue()D"]
38445 [label="org.apache.commons.math3.optim.univariate.UnivariateOptimizer.getMax()D"]
38447 [label="org.apache.commons.math3.optim.univariate.UnivariateOptimizer.computeObjectiveValue(D)D"]
38449 [label="org.apache.commons.math3.optim.univariate.UnivariatePointValuePair.<init>(DD)V"]
38452 [label="org.apache.commons.math3.optim.univariate.BrentOptimizer.best(Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;Z)Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;"]
38477 [label="org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizer.<init>(Lorg/apache/commons/math3/optim/univariate/UnivariateOptimizer;ILorg/apache/commons/math3/random/RandomGenerator;)V"]
38488 [label="org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizer.getOptima()[Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;"]
38492 [label="org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizer.optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;"]
38496 [label="org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizer.doOptimize()Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;"]
38500 [label="org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizer.sortPairs(Lorg/apache/commons/math3/optim/nonlinear/scalar/GoalType;)V"]
38507 [label="org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizer$1.<init>()V"]
38510 [label="org.apache.commons.math3.optim.univariate.MultiStartUnivariateOptimizer$1.compare(Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;)I"]
38528 [label="org.apache.commons.math3.optim.univariate.SearchInterval.<init>(DD)V"]
38532 [label="org.apache.commons.math3.optim.univariate.SearchInterval.getMin()D"]
38534 [label="org.apache.commons.math3.optim.univariate.SearchInterval.getMax()D"]
38536 [label="org.apache.commons.math3.optim.univariate.SearchInterval.getStartValue()D"]
38551 [label="org.apache.commons.math3.optim.univariate.SimpleUnivariateValueChecker.<init>(DDI)V"]
38556 [label="org.apache.commons.math3.optim.univariate.SimpleUnivariateValueChecker.converged(ILorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optim/univariate/UnivariatePointValuePair;)Z"]
38567 [label="org.apache.commons.math3.optim.univariate.UnivariateObjectiveFunction.getObjectiveFunction()Lorg/apache/commons/math3/analysis/UnivariateFunction;"]
38589 [label="org.apache.commons.math3.optim.univariate.UnivariateOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V"]
38669 [label="org.apache.commons.math3.optimization.AbstractConvergenceChecker.<init>()V"]
38675 [label="org.apache.commons.math3.optimization.AbstractConvergenceChecker.<init>(DD)V"]
38679 [label="org.apache.commons.math3.optimization.AbstractConvergenceChecker.getRelativeThreshold()D"]
38681 [label="org.apache.commons.math3.optimization.AbstractConvergenceChecker.getAbsoluteThreshold()D"]
38717 [label="org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer.<init>(Lorg/apache/commons/math3/optimization/BaseMultivariateOptimizer;ILorg/apache/commons/math3/random/RandomVectorGenerator;)V"]
38725 [label="org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer.getOptima()[Lorg/apache/commons/math3/optimization/PointValuePair;"]
38734 [label="org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer.getConvergenceChecker()Lorg/apache/commons/math3/optimization/ConvergenceChecker;"]
38739 [label="org.apache.commons.math3.optimization.BaseOptimizer.getConvergenceChecker()Lorg/apache/commons/math3/optimization/ConvergenceChecker;"]
38741 [label="org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer.optimize(ILorg/apache/commons/math3/analysis/MultivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;[D)Lorg/apache/commons/math3/optimization/PointValuePair;"]
38750 [label="org.apache.commons.math3.optimization.BaseMultivariateOptimizer.optimize(ILorg/apache/commons/math3/analysis/MultivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;[D)Lorg/apache/commons/math3/optimization/PointValuePair;"]
38752 [label="org.apache.commons.math3.optimization.BaseOptimizer.getEvaluations()I"]
38754 [label="org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer.sortPairs(Lorg/apache/commons/math3/optimization/GoalType;)V"]
38761 [label="org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer$1.<init>()V"]
38764 [label="org.apache.commons.math3.optimization.BaseMultivariateMultiStartOptimizer$1.compare(Lorg/apache/commons/math3/optimization/PointValuePair;Lorg/apache/commons/math3/optimization/PointValuePair;)I"]
38825 [label="org.apache.commons.math3.optimization.BaseMultivariateVectorMultiStartOptimizer.<init>(Lorg/apache/commons/math3/optimization/BaseMultivariateVectorOptimizer;ILorg/apache/commons/math3/random/RandomVectorGenerator;)V"]
38833 [label="org.apache.commons.math3.optimization.BaseMultivariateVectorMultiStartOptimizer.getOptima()[Lorg/apache/commons/math3/optimization/PointVectorValuePair;"]
38842 [label="org.apache.commons.math3.optimization.BaseMultivariateVectorMultiStartOptimizer.getConvergenceChecker()Lorg/apache/commons/math3/optimization/ConvergenceChecker;"]
38847 [label="org.apache.commons.math3.optimization.BaseMultivariateVectorMultiStartOptimizer.optimize(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;"]
38854 [label="org.apache.commons.math3.optimization.BaseMultivariateVectorOptimizer.optimize(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;"]
38856 [label="org.apache.commons.math3.optimization.BaseMultivariateVectorMultiStartOptimizer.sortPairs([D[D)V"]
38864 [label="org.apache.commons.math3.optimization.BaseMultivariateVectorMultiStartOptimizer$1.<init>()V"]
38867 [label="org.apache.commons.math3.optimization.BaseMultivariateVectorMultiStartOptimizer$1.compare(Lorg/apache/commons/math3/optimization/PointVectorValuePair;Lorg/apache/commons/math3/optimization/PointVectorValuePair;)I"]
38871 [label="org.apache.commons.math3.optimization.BaseMultivariateVectorMultiStartOptimizer$1.weightedResidual(Lorg/apache/commons/math3/optimization/PointVectorValuePair;)D"]
38874 [label="org.apache.commons.math3.optimization.PointVectorValuePair.getValueRef()[D"]
38898 [label="org.apache.commons.math3.optimization.ConvergenceChecker.converged(ILjava/lang/Object;Ljava/lang/Object;)Z"]
38914 [label="org.apache.commons.math3.optimization.DifferentiableMultivariateMultiStartOptimizer.<init>(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateOptimizer;ILorg/apache/commons/math3/random/RandomVectorGenerator;)V"]
38934 [label="org.apache.commons.math3.optimization.DifferentiableMultivariateVectorMultiStartOptimizer.<init>(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;ILorg/apache/commons/math3/random/RandomVectorGenerator;)V"]
38972 [label="org.apache.commons.math3.optimization.direct.AbstractSimplex.<init>(I)V"]
38975 [label="org.apache.commons.math3.optimization.direct.AbstractSimplex.<init>(ID)V"]
38980 [label="org.apache.commons.math3.optimization.direct.AbstractSimplex.<init>([D)V"]
38982 [label="org.apache.commons.math3.optimization.direct.AbstractSimplex.createHypercubeSteps(ID)[D"]
38988 [label="org.apache.commons.math3.optimization.direct.AbstractSimplex.<init>([[D)V"]
38991 [label="org.apache.commons.math3.optimization.direct.AbstractSimplex.getDimension()I"]
38993 [label="org.apache.commons.math3.optimization.direct.AbstractSimplex.getSize()I"]
38996 [label="org.apache.commons.math3.optimization.direct.AbstractSimplex.iterate(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V"]
39000 [label="org.apache.commons.math3.optimization.direct.AbstractSimplex.build([D)V"]
39003 [label="org.apache.commons.math3.optimization.PointValuePair.<init>([DD)V"]
39005 [label="org.apache.commons.math3.optimization.direct.AbstractSimplex.evaluate(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V"]
39009 [label="org.apache.commons.math3.optimization.PointValuePair.getPointRef()[D"]
39011 [label="org.apache.commons.math3.optimization.PointValuePair.<init>([DDZ)V"]
39013 [label="org.apache.commons.math3.optimization.direct.AbstractSimplex.replaceWorstPoint(Lorg/apache/commons/math3/optimization/PointValuePair;Ljava/util/Comparator;)V"]
39017 [label="org.apache.commons.math3.optimization.direct.AbstractSimplex.getPoints()[Lorg/apache/commons/math3/optimization/PointValuePair;"]
39019 [label="org.apache.commons.math3.optimization.direct.AbstractSimplex.getPoint(I)Lorg/apache/commons/math3/optimization/PointValuePair;"]
39022 [label="org.apache.commons.math3.optimization.direct.AbstractSimplex.setPoint(ILorg/apache/commons/math3/optimization/PointValuePair;)V"]
39026 [label="org.apache.commons.math3.optimization.direct.AbstractSimplex.setPoints([Lorg/apache/commons/math3/optimization/PointValuePair;)V"]
39048 [label="org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.<init>()V"]
39050 [label="org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.<init>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V"]
39055 [label="org.apache.commons.math3.optimization.SimpleValueChecker.<init>()V"]
39060 [label="org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.getMaxEvaluations()I"]
39063 [label="org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.getEvaluations()I"]
39065 [label="org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.getConvergenceChecker()Lorg/apache/commons/math3/optimization/ConvergenceChecker;"]
39067 [label="org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.computeObjectiveValue([D)D"]
39071 [label="org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.optimize(ILorg/apache/commons/math3/analysis/MultivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;[D)Lorg/apache/commons/math3/optimization/PointValuePair;"]
39080 [label="org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.optimizeInternal(ILorg/apache/commons/math3/analysis/MultivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointValuePair;"]
39085 [label="org.apache.commons.math3.optimization.InitialGuess.<init>([D)V"]
39087 [label="org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.optimize(ILorg/apache/commons/math3/analysis/MultivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointValuePair;"]
39094 [label="org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.optimizeInternal(ILorg/apache/commons/math3/analysis/MultivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;[D)Lorg/apache/commons/math3/optimization/PointValuePair;"]
39106 [label="org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optimization/OptimizationData;)V"]
39108 [label="org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.checkParameters()V"]
39110 [label="org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.doOptimize()Lorg/apache/commons/math3/optimization/PointValuePair;"]
39115 [label="org.apache.commons.math3.optimization.InitialGuess.getInitialGuess()[D"]
39121 [label="org.apache.commons.math3.optimization.SimpleBounds.getLower()[D"]
39124 [label="org.apache.commons.math3.optimization.SimpleBounds.getUpper()[D"]
39126 [label="org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.getGoalType()Lorg/apache/commons/math3/optimization/GoalType;"]
39128 [label="org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.getStartPoint()[D"]
39130 [label="org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.getLowerBound()[D"]
39132 [label="org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer.getUpperBound()[D"]
39147 [label="org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer.<init>()V"]
39150 [label="org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer.<init>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V"]
39153 [label="org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer.optimize(ILorg/apache/commons/math3/analysis/MultivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;[D)Lorg/apache/commons/math3/optimization/PointValuePair;"]
39159 [label="org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer.optimize(ILorg/apache/commons/math3/analysis/MultivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;[D[D[D)Lorg/apache/commons/math3/optimization/PointValuePair;"]
39167 [label="org.apache.commons.math3.optimization.SimpleBounds.<init>([D[D)V"]
39192 [label="org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.<init>()V"]
39194 [label="org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.<init>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V"]
39199 [label="org.apache.commons.math3.optimization.SimpleVectorValueChecker.<init>()V"]
39204 [label="org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.getMaxEvaluations()I"]
39207 [label="org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.getEvaluations()I"]
39209 [label="org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.getConvergenceChecker()Lorg/apache/commons/math3/optimization/ConvergenceChecker;"]
39211 [label="org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.computeObjectiveValue([D)[D"]
39215 [label="org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.optimize(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;"]
39222 [label="org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.optimizeInternal(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;"]
39224 [label="org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.optimize(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;"]
39229 [label="org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.optimizeInternal(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;"]
39240 [label="org.apache.commons.math3.optimization.Target.<init>([D)V"]
39245 [label="org.apache.commons.math3.optimization.Weight.<init>([D)V"]
39251 [label="org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optimization/OptimizationData;)V"]
39253 [label="org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.checkParameters()V"]
39255 [label="org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.setUp()V"]
39257 [label="org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.doOptimize()Lorg/apache/commons/math3/optimization/PointVectorValuePair;"]
39259 [label="org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.getStartPoint()[D"]
39262 [label="org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.getWeight()Lorg/apache/commons/math3/linear/RealMatrix;"]
39265 [label="org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.getTarget()[D"]
39268 [label="org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.getObjectiveFunction()Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;"]
39279 [label="org.apache.commons.math3.optimization.Target.getTarget()[D"]
39281 [label="org.apache.commons.math3.optimization.Weight.getWeight()Lorg/apache/commons/math3/linear/RealMatrix;"]
39367 [label="org.apache.commons.math3.optimization.direct.BOBYQAOptimizer.<init>(I)V"]
39370 [label="org.apache.commons.math3.optimization.direct.BOBYQAOptimizer.<init>(IDD)V"]
39382 [label="org.apache.commons.math3.optimization.direct.BOBYQAOptimizer.doOptimize()Lorg/apache/commons/math3/optimization/PointValuePair;"]
39386 [label="org.apache.commons.math3.optimization.direct.BOBYQAOptimizer.setup([D[D)V"]
39392 [label="org.apache.commons.math3.optimization.direct.BOBYQAOptimizer.bobyqa([D[D)D"]
39397 [label="org.apache.commons.math3.optimization.direct.BOBYQAOptimizer.printMethod()V"]
39403 [label="org.apache.commons.math3.optimization.direct.BOBYQAOptimizer.bobyqb([D[D)D"]
39411 [label="org.apache.commons.math3.optimization.direct.BOBYQAOptimizer.prelim([D[D)V"]
39417 [label="org.apache.commons.math3.optimization.direct.BOBYQAOptimizer.printState(I)V"]
39422 [label="org.apache.commons.math3.optimization.direct.BOBYQAOptimizer.trsbox(DLorg/apache/commons/math3/linear/ArrayRealVector;Lorg/apache/commons/math3/linear/ArrayRealVector;Lorg/apache/commons/math3/linear/ArrayRealVector;Lorg/apache/commons/math3/linear/ArrayRealVector;Lorg/apache/commons/math3/linear/ArrayRealVector;)[D"]
39434 [label="org.apache.commons.math3.optimization.direct.BOBYQAOptimizer.altmov(ID)[D"]
39440 [label="org.apache.commons.math3.optimization.direct.BOBYQAOptimizer.update(DDI)V"]
39476 [label="org.apache.commons.math3.optimization.direct.BOBYQAOptimizer.caller(I)Ljava/lang/String;"]
39488 [label="org.apache.commons.math3.optimization.direct.BOBYQAOptimizer$PathIsExploredException.<init>()V"]
39605 [label="org.apache.commons.math3.optimization.direct.CMAESOptimizer.<init>()V"]
39607 [label="org.apache.commons.math3.optimization.direct.CMAESOptimizer.<init>(I)V"]
39611 [label="org.apache.commons.math3.optimization.direct.CMAESOptimizer.<init>(I[DIDZIILorg/apache/commons/math3/random/RandomGenerator;ZLorg/apache/commons/math3/optimization/ConvergenceChecker;)V"]
39619 [label="org.apache.commons.math3.optimization.direct.CMAESOptimizer.<init>(I[D)V"]
39623 [label="org.apache.commons.math3.optimization.direct.CMAESOptimizer.<init>(I[DIDZIILorg/apache/commons/math3/random/RandomGenerator;Z)V"]
39655 [label="org.apache.commons.math3.optimization.direct.CMAESOptimizer.<init>(IDZIILorg/apache/commons/math3/random/RandomGenerator;ZLorg/apache/commons/math3/optimization/ConvergenceChecker;)V"]
39681 [label="org.apache.commons.math3.optimization.direct.CMAESOptimizer$Sigma.<init>([D)V"]
39685 [label="org.apache.commons.math3.optimization.direct.CMAESOptimizer$Sigma.getSigma()[D"]
39691 [label="org.apache.commons.math3.optimization.direct.CMAESOptimizer$PopulationSize.<init>(I)V"]
39695 [label="org.apache.commons.math3.optimization.direct.CMAESOptimizer$PopulationSize.getPopulationSize()I"]
39697 [label="org.apache.commons.math3.optimization.direct.CMAESOptimizer.optimizeInternal(ILorg/apache/commons/math3/analysis/MultivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointValuePair;"]
39703 [label="org.apache.commons.math3.optimization.direct.CMAESOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optimization/OptimizationData;)V"]
39705 [label="org.apache.commons.math3.optimization.direct.CMAESOptimizer.doOptimize()Lorg/apache/commons/math3/optimization/PointValuePair;"]
39707 [label="org.apache.commons.math3.optimization.direct.CMAESOptimizer.checkParameters()V"]
39713 [label="org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction.<init>()V"]
39716 [label="org.apache.commons.math3.optimization.direct.CMAESOptimizer.initializeCMA([D)V"]
39719 [label="org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction.value([D)D"]
39721 [label="org.apache.commons.math3.optimization.direct.CMAESOptimizer.push([DD)V"]
39724 [label="org.apache.commons.math3.optimization.direct.CMAESOptimizer.randn1(II)Lorg/apache/commons/math3/linear/RealMatrix;"]
39726 [label="org.apache.commons.math3.optimization.direct.CMAESOptimizer.zeros(II)Lorg/apache/commons/math3/linear/RealMatrix;"]
39731 [label="org.apache.commons.math3.optimization.direct.CMAESOptimizer.times(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;"]
39734 [label="org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction.isFeasible([D)Z"]
39736 [label="org.apache.commons.math3.optimization.direct.CMAESOptimizer.randn(I)[D"]
39738 [label="org.apache.commons.math3.optimization.direct.CMAESOptimizer.copyColumn(Lorg/apache/commons/math3/linear/RealMatrix;ILorg/apache/commons/math3/linear/RealMatrix;I)V"]
39740 [label="org.apache.commons.math3.optimization.direct.CMAESOptimizer.sortedIndices([D)[I"]
39742 [label="org.apache.commons.math3.optimization.direct.CMAESOptimizer.selectColumns(Lorg/apache/commons/math3/linear/RealMatrix;[I)Lorg/apache/commons/math3/linear/RealMatrix;"]
39746 [label="org.apache.commons.math3.optimization.direct.CMAESOptimizer.updateEvolutionPaths(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)Z"]
39748 [label="org.apache.commons.math3.optimization.direct.CMAESOptimizer.updateCovariance(ZLorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;[ILorg/apache/commons/math3/linear/RealMatrix;)V"]
39750 [label="org.apache.commons.math3.optimization.direct.CMAESOptimizer.updateCovarianceDiagonalOnly(ZLorg/apache/commons/math3/linear/RealMatrix;)V"]
39756 [label="org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction.repair([D)[D"]
39760 [label="org.apache.commons.math3.optimization.direct.CMAESOptimizer.sqrt(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;"]
39766 [label="org.apache.commons.math3.optimization.direct.CMAESOptimizer.min([D)D"]
39768 [label="org.apache.commons.math3.optimization.direct.CMAESOptimizer.max([D)D"]
39772 [label="org.apache.commons.math3.optimization.direct.CMAESOptimizer.max(Lorg/apache/commons/math3/linear/RealMatrix;)D"]
39774 [label="org.apache.commons.math3.optimization.direct.CMAESOptimizer.min(Lorg/apache/commons/math3/linear/RealMatrix;)D"]
39776 [label="org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction.setValueRange(D)V"]
39790 [label="org.apache.commons.math3.optimization.direct.CMAESOptimizer.log(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;"]
39792 [label="org.apache.commons.math3.optimization.direct.CMAESOptimizer.sequence(DDD)Lorg/apache/commons/math3/linear/RealMatrix;"]
39800 [label="org.apache.commons.math3.optimization.direct.CMAESOptimizer.square(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;"]
39804 [label="org.apache.commons.math3.optimization.direct.CMAESOptimizer.eye(II)Lorg/apache/commons/math3/linear/RealMatrix;"]
39807 [label="org.apache.commons.math3.optimization.direct.CMAESOptimizer.ones(II)Lorg/apache/commons/math3/linear/RealMatrix;"]
39809 [label="org.apache.commons.math3.optimization.direct.CMAESOptimizer.repmat(Lorg/apache/commons/math3/linear/RealMatrix;II)Lorg/apache/commons/math3/linear/RealMatrix;"]
39812 [label="org.apache.commons.math3.optimization.direct.CMAESOptimizer.diag(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;"]
39827 [label="org.apache.commons.math3.optimization.direct.CMAESOptimizer.reverse([I)[I"]
39829 [label="org.apache.commons.math3.optimization.direct.CMAESOptimizer.sumRows(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;"]
39831 [label="org.apache.commons.math3.optimization.direct.CMAESOptimizer.divide(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;"]
39833 [label="org.apache.commons.math3.optimization.direct.CMAESOptimizer.inverse([I)[I"]
39835 [label="org.apache.commons.math3.optimization.direct.CMAESOptimizer.updateBD(D)V"]
39839 [label="org.apache.commons.math3.optimization.direct.CMAESOptimizer.triu(Lorg/apache/commons/math3/linear/RealMatrix;I)Lorg/apache/commons/math3/linear/RealMatrix;"]
39850 [label="org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex.<init>(DI)V"]
39865 [label="org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex.compareTo(Lorg/apache/commons/math3/optimization/direct/CMAESOptimizer$DoubleIndex;)I"]
39868 [label="org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex.equals(Ljava/lang/Object;)Z"]
39871 [label="org.apache.commons.math3.optimization.direct.CMAESOptimizer$DoubleIndex.hashCode()I"]
39883 [label="org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction.penalty([D[D)D"]
39968 [label="org.apache.commons.math3.optimization.direct.MultiDirectionalSimplex.<init>(I)V"]
39971 [label="org.apache.commons.math3.optimization.direct.MultiDirectionalSimplex.<init>(ID)V"]
39976 [label="org.apache.commons.math3.optimization.direct.MultiDirectionalSimplex.<init>(IDDD)V"]
39980 [label="org.apache.commons.math3.optimization.direct.MultiDirectionalSimplex.<init>(IDD)V"]
39992 [label="org.apache.commons.math3.optimization.direct.MultiDirectionalSimplex.<init>([D)V"]
39995 [label="org.apache.commons.math3.optimization.direct.MultiDirectionalSimplex.<init>([DDD)V"]
40001 [label="org.apache.commons.math3.optimization.direct.MultiDirectionalSimplex.<init>([[D)V"]
40004 [label="org.apache.commons.math3.optimization.direct.MultiDirectionalSimplex.<init>([[DDD)V"]
40011 [label="org.apache.commons.math3.optimization.direct.MultiDirectionalSimplex.iterate(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V"]
40016 [label="org.apache.commons.math3.optimization.direct.MultiDirectionalSimplex.evaluateNewSimplex(Lorg/apache/commons/math3/analysis/MultivariateFunction;[Lorg/apache/commons/math3/optimization/PointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math3/optimization/PointValuePair;"]
40039 [label="org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.<init>(Lorg/apache/commons/math3/analysis/MultivariateFunction;[D[D)V"]
40049 [label="org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$NoBoundsMapper.<init>()V"]
40054 [label="org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$UpperBoundMapper.<init>(D)V"]
40059 [label="org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerBoundMapper.<init>(D)V"]
40064 [label="org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.<init>(DD)V"]
40066 [label="org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.unboundedToBounded([D)[D"]
40069 [label="org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$Mapper.unboundedToBounded(D)D"]
40071 [label="org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.boundedToUnbounded([D)[D"]
40074 [label="org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$Mapper.boundedToUnbounded(D)D"]
40076 [label="org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter.value([D)D"]
40099 [label="org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerBoundMapper.unboundedToBounded(D)D"]
40102 [label="org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerBoundMapper.boundedToUnbounded(D)D"]
40111 [label="org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$UpperBoundMapper.unboundedToBounded(D)D"]
40114 [label="org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$UpperBoundMapper.boundedToUnbounded(D)D"]
40127 [label="org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.unboundedToBounded(D)D"]
40130 [label="org.apache.commons.math3.optimization.direct.MultivariateFunctionMappingAdapter$LowerUpperBoundMapper.boundedToUnbounded(D)D"]
40145 [label="org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapter.<init>(Lorg/apache/commons/math3/analysis/MultivariateFunction;[D[DD[D)V"]
40157 [label="org.apache.commons.math3.optimization.direct.MultivariateFunctionPenaltyAdapter.value([D)D"]
40178 [label="org.apache.commons.math3.optimization.direct.NelderMeadSimplex.<init>(I)V"]
40181 [label="org.apache.commons.math3.optimization.direct.NelderMeadSimplex.<init>(ID)V"]
40186 [label="org.apache.commons.math3.optimization.direct.NelderMeadSimplex.<init>(IDDDDD)V"]
40203 [label="org.apache.commons.math3.optimization.direct.NelderMeadSimplex.<init>(IDDDD)V"]
40210 [label="org.apache.commons.math3.optimization.direct.NelderMeadSimplex.<init>([D)V"]
40213 [label="org.apache.commons.math3.optimization.direct.NelderMeadSimplex.<init>([DDDDD)V"]
40221 [label="org.apache.commons.math3.optimization.direct.NelderMeadSimplex.<init>([[D)V"]
40224 [label="org.apache.commons.math3.optimization.direct.NelderMeadSimplex.<init>([[DDDDD)V"]
40232 [label="org.apache.commons.math3.optimization.direct.NelderMeadSimplex.iterate(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V"]
40237 [label="org.apache.commons.math3.optimization.PointValuePair.getPoint()[D"]
40255 [label="org.apache.commons.math3.optimization.direct.PowellOptimizer.<init>(DDLorg/apache/commons/math3/optimization/ConvergenceChecker;)V"]
40260 [label="org.apache.commons.math3.optimization.direct.PowellOptimizer.<init>(DDDDLorg/apache/commons/math3/optimization/ConvergenceChecker;)V"]
40272 [label="org.apache.commons.math3.optimization.direct.PowellOptimizer$LineSearch.<init>(DD)V"]
40274 [label="org.apache.commons.math3.optimization.direct.PowellOptimizer.<init>(DD)V"]
40279 [label="org.apache.commons.math3.optimization.direct.PowellOptimizer.<init>(DDDD)V"]
40285 [label="org.apache.commons.math3.optimization.direct.PowellOptimizer.doOptimize()Lorg/apache/commons/math3/optimization/PointValuePair;"]
40290 [label="org.apache.commons.math3.optimization.direct.PowellOptimizer$LineSearch.search([D[D)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;"]
40292 [label="org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair.getValue()D"]
40294 [label="org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair.getPoint()D"]
40296 [label="org.apache.commons.math3.optimization.direct.PowellOptimizer.newPointAndDirection([D[DD)[[D"]
40318 [label="org.apache.commons.math3.optimization.univariate.BrentOptimizer.<init>(DDLorg/apache/commons/math3/optimization/ConvergenceChecker;)V"]
40325 [label="org.apache.commons.math3.optimization.univariate.SimpleUnivariateValueChecker.<init>(DD)V"]
40330 [label="org.apache.commons.math3.optimization.direct.PowellOptimizer$LineSearch$1.<init>()V"]
40333 [label="org.apache.commons.math3.optimization.direct.PowellOptimizer$LineSearch$1.value(D)D"]
40336 [label="org.apache.commons.math3.optimization.univariate.BracketFinder.search(Lorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DD)V"]
40339 [label="org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer.optimize(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;"]
40341 [label="org.apache.commons.math3.optimization.univariate.BracketFinder.getLo()D"]
40343 [label="org.apache.commons.math3.optimization.univariate.BracketFinder.getHi()D"]
40345 [label="org.apache.commons.math3.optimization.univariate.BracketFinder.getMid()D"]
40351 [label="org.apache.commons.math3.optimization.direct.SimplexOptimizer.<init>()V"]
40353 [label="org.apache.commons.math3.optimization.direct.SimplexOptimizer.<init>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V"]
40357 [label="org.apache.commons.math3.optimization.direct.SimplexOptimizer.<init>(DD)V"]
40361 [label="org.apache.commons.math3.optimization.SimpleValueChecker.<init>(DD)V"]
40363 [label="org.apache.commons.math3.optimization.direct.SimplexOptimizer.setSimplex(Lorg/apache/commons/math3/optimization/direct/AbstractSimplex;)V"]
40366 [label="org.apache.commons.math3.optimization.direct.SimplexOptimizer.parseOptimizationData([Lorg/apache/commons/math3/optimization/OptimizationData;)V"]
40368 [label="org.apache.commons.math3.optimization.direct.SimplexOptimizer.optimizeInternal(ILorg/apache/commons/math3/analysis/MultivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointValuePair;"]
40377 [label="org.apache.commons.math3.optimization.direct.SimplexOptimizer.doOptimize()Lorg/apache/commons/math3/optimization/PointValuePair;"]
40379 [label="org.apache.commons.math3.optimization.direct.SimplexOptimizer$1.<init>()V"]
40382 [label="org.apache.commons.math3.optimization.direct.SimplexOptimizer$1.value([D)D"]
40385 [label="org.apache.commons.math3.optimization.direct.SimplexOptimizer$2.<init>()V"]
40388 [label="org.apache.commons.math3.optimization.direct.SimplexOptimizer$2.compare(Lorg/apache/commons/math3/optimization/PointValuePair;Lorg/apache/commons/math3/optimization/PointValuePair;)I"]
40419 [label="org.apache.commons.math3.optimization.fitting.CurveFitter.<init>(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;)V"]
40428 [label="org.apache.commons.math3.optimization.fitting.CurveFitter.<init>(Lorg/apache/commons/math3/optimization/MultivariateDifferentiableVectorOptimizer;)V"]
40431 [label="org.apache.commons.math3.optimization.fitting.CurveFitter.addObservedPoint(DD)V"]
40435 [label="org.apache.commons.math3.optimization.fitting.CurveFitter.addObservedPoint(DDD)V"]
40441 [label="org.apache.commons.math3.optimization.fitting.WeightedObservedPoint.<init>(DDD)V"]
40443 [label="org.apache.commons.math3.optimization.fitting.CurveFitter.addObservedPoint(Lorg/apache/commons/math3/optimization/fitting/WeightedObservedPoint;)V"]
40446 [label="org.apache.commons.math3.optimization.fitting.CurveFitter.getObservations()[Lorg/apache/commons/math3/optimization/fitting/WeightedObservedPoint;"]
40449 [label="org.apache.commons.math3.optimization.fitting.CurveFitter.clearObservations()V"]
40451 [label="org.apache.commons.math3.optimization.fitting.CurveFitter.fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D"]
40458 [label="org.apache.commons.math3.optimization.fitting.CurveFitter.fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D"]
40464 [label="org.apache.commons.math3.optimization.fitting.WeightedObservedPoint.getY()D"]
40466 [label="org.apache.commons.math3.optimization.fitting.WeightedObservedPoint.getWeight()D"]
40471 [label="org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.<init>(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V"]
40476 [label="org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.<init>(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V"]
40478 [label="org.apache.commons.math3.optimization.PointVectorValuePair.getPointRef()[D"]
40486 [label="org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.jacobian()Lorg/apache/commons/math3/analysis/MultivariateMatrixFunction;"]
40488 [label="org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction$1.<init>()V"]
40491 [label="org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction$1.value([D)[[D"]
40494 [label="org.apache.commons.math3.optimization.fitting.WeightedObservedPoint.getX()D"]
40496 [label="org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction.value([D)[D"]
40505 [label="org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value([D)[D"]
40508 [label="org.apache.commons.math3.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value([Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;)[Lorg/apache/commons/math3/analysis/differentiation/DerivativeStructure;"]
40516 [label="org.apache.commons.math3.optimization.fitting.GaussianFitter.<init>(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;)V"]
40520 [label="org.apache.commons.math3.optimization.fitting.GaussianFitter.fit([D)[D"]
40523 [label="org.apache.commons.math3.optimization.fitting.GaussianFitter$1.<init>()V"]
40526 [label="org.apache.commons.math3.optimization.fitting.GaussianFitter$1.value(D[D)D"]
40530 [label="org.apache.commons.math3.optimization.fitting.GaussianFitter$1.gradient(D[D)[D"]
40535 [label="org.apache.commons.math3.optimization.fitting.GaussianFitter.fit()[D"]
40537 [label="org.apache.commons.math3.optimization.fitting.GaussianFitter$ParameterGuesser.guess()[D"]
40542 [label="org.apache.commons.math3.optimization.fitting.GaussianFitter$ParameterGuesser.<init>([Lorg/apache/commons/math3/optimization/fitting/WeightedObservedPoint;)V"]
40555 [label="org.apache.commons.math3.optimization.fitting.GaussianFitter$ParameterGuesser.sortObservations([Lorg/apache/commons/math3/optimization/fitting/WeightedObservedPoint;)[Lorg/apache/commons/math3/optimization/fitting/WeightedObservedPoint;"]
40557 [label="org.apache.commons.math3.optimization.fitting.GaussianFitter$ParameterGuesser.basicGuess([Lorg/apache/commons/math3/optimization/fitting/WeightedObservedPoint;)[D"]
40568 [label="org.apache.commons.math3.optimization.fitting.GaussianFitter$ParameterGuesser$1.<init>()V"]
40571 [label="org.apache.commons.math3.optimization.fitting.GaussianFitter$ParameterGuesser$1.compare(Lorg/apache/commons/math3/optimization/fitting/WeightedObservedPoint;Lorg/apache/commons/math3/optimization/fitting/WeightedObservedPoint;)I"]
40577 [label="org.apache.commons.math3.optimization.fitting.GaussianFitter$ParameterGuesser.findMaxY([Lorg/apache/commons/math3/optimization/fitting/WeightedObservedPoint;)I"]
40579 [label="org.apache.commons.math3.optimization.fitting.GaussianFitter$ParameterGuesser.interpolateXAtY([Lorg/apache/commons/math3/optimization/fitting/WeightedObservedPoint;IID)D"]
40588 [label="org.apache.commons.math3.optimization.fitting.GaussianFitter$ParameterGuesser.getInterpolationPointsForY([Lorg/apache/commons/math3/optimization/fitting/WeightedObservedPoint;IID)[Lorg/apache/commons/math3/optimization/fitting/WeightedObservedPoint;"]
40595 [label="org.apache.commons.math3.optimization.fitting.GaussianFitter$ParameterGuesser.isBetween(DDD)Z"]
40608 [label="org.apache.commons.math3.optimization.fitting.HarmonicFitter.<init>(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;)V"]
40611 [label="org.apache.commons.math3.optimization.fitting.HarmonicFitter.fit([D)[D"]
40614 [label="org.apache.commons.math3.optimization.fitting.HarmonicFitter.fit()[D"]
40617 [label="org.apache.commons.math3.optimization.fitting.HarmonicFitter$ParameterGuesser.guess()[D"]
40622 [label="org.apache.commons.math3.optimization.fitting.HarmonicFitter$ParameterGuesser.<init>([Lorg/apache/commons/math3/optimization/fitting/WeightedObservedPoint;)V"]
40633 [label="org.apache.commons.math3.optimization.fitting.HarmonicFitter$ParameterGuesser.sortObservations([Lorg/apache/commons/math3/optimization/fitting/WeightedObservedPoint;)[Lorg/apache/commons/math3/optimization/fitting/WeightedObservedPoint;"]
40635 [label="org.apache.commons.math3.optimization.fitting.HarmonicFitter$ParameterGuesser.guessAOmega([Lorg/apache/commons/math3/optimization/fitting/WeightedObservedPoint;)[D"]
40640 [label="org.apache.commons.math3.optimization.fitting.HarmonicFitter$ParameterGuesser.guessPhi([Lorg/apache/commons/math3/optimization/fitting/WeightedObservedPoint;)D"]
40656 [label="org.apache.commons.math3.optimization.fitting.PolynomialFitter.<init>(ILorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;)V"]
40661 [label="org.apache.commons.math3.optimization.fitting.PolynomialFitter.<init>(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;)V"]
40664 [label="org.apache.commons.math3.optimization.fitting.PolynomialFitter.fit()[D"]
40666 [label="org.apache.commons.math3.optimization.fitting.PolynomialFitter.fit(I[D)[D"]
40670 [label="org.apache.commons.math3.optimization.fitting.PolynomialFitter.fit([D)[D"]
40710 [label="org.apache.commons.math3.optimization.general.AbstractDifferentiableOptimizer.<init>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V"]
40713 [label="org.apache.commons.math3.optimization.general.AbstractDifferentiableOptimizer.computeObjectiveGradient([D)[D"]
40717 [label="org.apache.commons.math3.optimization.general.AbstractDifferentiableOptimizer.optimizeInternal(ILorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableFunction;Lorg/apache/commons/math3/optimization/GoalType;[D)Lorg/apache/commons/math3/optimization/PointValuePair;"]
40723 [label="org.apache.commons.math3.optimization.general.AbstractDifferentiableOptimizer.optimizeInternal(ILorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableFunction;Lorg/apache/commons/math3/optimization/GoalType;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointValuePair;"]
40760 [label="org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.<init>()V"]
40763 [label="org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.<init>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V"]
40769 [label="org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.updateJacobian()V"]
40771 [label="org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.computeWeightedJacobian([D)Lorg/apache/commons/math3/linear/RealMatrix;"]
40780 [label="org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.updateResidualsAndCost()V"]
40784 [label="org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.computeResiduals([D)[D"]
40787 [label="org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.computeCost([D)D"]
40793 [label="org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.getRMS()D"]
40795 [label="org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.getChiSquare()D"]
40799 [label="org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.getWeightSquareRoot()Lorg/apache/commons/math3/linear/RealMatrix;"]
40801 [label="org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.setCost(D)V"]
40804 [label="org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.getCovariances()[[D"]
40806 [label="org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.getCovariances(D)[[D"]
40811 [label="org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.computeCovariances([DD)[[D"]
40816 [label="org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.guessParametersErrors()[D"]
40820 [label="org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.computeSigma([DD)[D"]
40824 [label="org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.optimize(ILorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;"]
40831 [label="org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.optimizeInternal(ILorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;"]
40834 [label="org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.optimize(ILorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;"]
40846 [label="org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.setUp()V"]
40848 [label="org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.squareRoot(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;"]
40865 [label="org.apache.commons.math3.optimization.general.AbstractScalarDifferentiableOptimizer.<init>()V"]
40867 [label="org.apache.commons.math3.optimization.general.AbstractScalarDifferentiableOptimizer.<init>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V"]
40870 [label="org.apache.commons.math3.optimization.general.AbstractScalarDifferentiableOptimizer.computeObjectiveGradient([D)[D"]
40874 [label="org.apache.commons.math3.optimization.general.AbstractScalarDifferentiableOptimizer.optimizeInternal(ILorg/apache/commons/math3/analysis/DifferentiableMultivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;[D)Lorg/apache/commons/math3/optimization/PointValuePair;"]
40881 [label="org.apache.commons.math3.optimization.general.AbstractScalarDifferentiableOptimizer.optimize(ILorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableFunction;Lorg/apache/commons/math3/optimization/GoalType;[D)Lorg/apache/commons/math3/optimization/PointValuePair;"]
40896 [label="org.apache.commons.math3.optimization.general.ConjugateGradientFormula.<init>()V"]
40911 [label="org.apache.commons.math3.optimization.general.GaussNewtonOptimizer.<init>()V"]
40913 [label="org.apache.commons.math3.optimization.general.GaussNewtonOptimizer.<init>(Z)V"]
40915 [label="org.apache.commons.math3.optimization.general.GaussNewtonOptimizer.<init>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V"]
40918 [label="org.apache.commons.math3.optimization.general.GaussNewtonOptimizer.<init>(ZLorg/apache/commons/math3/optimization/ConvergenceChecker;)V"]
40927 [label="org.apache.commons.math3.optimization.general.GaussNewtonOptimizer.doOptimize()Lorg/apache/commons/math3/optimization/PointVectorValuePair;"]
40930 [label="org.apache.commons.math3.optimization.PointVectorValuePair.<init>([D[D)V"]
40932 [label="org.apache.commons.math3.optimization.PointVectorValuePair.getPoint()[D"]
40966 [label="org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer.<init>()V"]
40968 [label="org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer.<init>(DDDDD)V"]
40970 [label="org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer.<init>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V"]
40973 [label="org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer.<init>(DLorg/apache/commons/math3/optimization/ConvergenceChecker;DDDD)V"]
40987 [label="org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer.<init>(DDD)V"]
40998 [label="org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer.doOptimize()Lorg/apache/commons/math3/optimization/PointVectorValuePair;"]
41008 [label="org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer.qrDecomposition(Lorg/apache/commons/math3/linear/RealMatrix;)V"]
41011 [label="org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer.qTy([D)V"]
41015 [label="org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer.determineLMParameter([DD[D[D[D[D)V"]
41025 [label="org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer.determineLMDirection([D[D[D[D)V"]
41053 [label="org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer.<init>(Lorg/apache/commons/math3/optimization/general/ConjugateGradientFormula;)V"]
41056 [label="org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer.<init>(Lorg/apache/commons/math3/optimization/general/ConjugateGradientFormula;Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V"]
41061 [label="org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer.<init>(Lorg/apache/commons/math3/optimization/general/ConjugateGradientFormula;Lorg/apache/commons/math3/optimization/ConvergenceChecker;Lorg/apache/commons/math3/analysis/solvers/UnivariateSolver;Lorg/apache/commons/math3/optimization/general/Preconditioner;)V"]
41066 [label="org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$IdentityPreconditioner.<init>()V"]
41068 [label="org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer.<init>(Lorg/apache/commons/math3/optimization/general/ConjugateGradientFormula;Lorg/apache/commons/math3/optimization/ConvergenceChecker;Lorg/apache/commons/math3/analysis/solvers/UnivariateSolver;)V"]
41086 [label="org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer.doOptimize()Lorg/apache/commons/math3/optimization/PointValuePair;"]
41090 [label="org.apache.commons.math3.optimization.general.Preconditioner.precondition([D[D)[D"]
41096 [label="org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.<init>([D)V"]
41098 [label="org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer.findUpperBound(Lorg/apache/commons/math3/analysis/UnivariateFunction;DD)D"]
41108 [label="org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$IdentityPreconditioner.precondition([D[D)[D"]
41118 [label="org.apache.commons.math3.optimization.general.NonLinearConjugateGradientOptimizer$LineSearchFunction.value(D)D"]
41129 [label="org.apache.commons.math3.optimization.GoalType.<init>()V"]
41154 [label="org.apache.commons.math3.optimization.LeastSquaresConverter.<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;[D)V"]
41162 [label="org.apache.commons.math3.optimization.LeastSquaresConverter.<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;[D[D)V"]
41167 [label="org.apache.commons.math3.optimization.LeastSquaresConverter.<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;[DLorg/apache/commons/math3/linear/RealMatrix;)V"]
41172 [label="org.apache.commons.math3.optimization.LeastSquaresConverter.value([D)D"]
41215 [label="org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer.<init>()V"]
41217 [label="org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer.setMaxIterations(I)V"]
41220 [label="org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer.restrictToNonNegative()Z"]
41223 [label="org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer.getGoalType()Lorg/apache/commons/math3/optimization/GoalType;"]
41226 [label="org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer.getFunction()Lorg/apache/commons/math3/optimization/linear/LinearObjectiveFunction;"]
41229 [label="org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer.getConstraints()Ljava/util/Collection;"]
41235 [label="org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer.getMaxIterations()I"]
41237 [label="org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer.getIterations()I"]
41240 [label="org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer.incrementIterationsCounter()V"]
41242 [label="org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer.optimize(Lorg/apache/commons/math3/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math3/optimization/GoalType;Z)Lorg/apache/commons/math3/optimization/PointValuePair;"]
41248 [label="org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer.doOptimize()Lorg/apache/commons/math3/optimization/PointValuePair;"]
41263 [label="org.apache.commons.math3.optimization.linear.LinearConstraint.<init>([DLorg/apache/commons/math3/optimization/linear/Relationship;D)V"]
41268 [label="org.apache.commons.math3.optimization.linear.LinearConstraint.<init>(Lorg/apache/commons/math3/linear/RealVector;Lorg/apache/commons/math3/optimization/linear/Relationship;D)V"]
41277 [label="org.apache.commons.math3.optimization.linear.LinearConstraint.<init>([DDLorg/apache/commons/math3/optimization/linear/Relationship;[DD)V"]
41284 [label="org.apache.commons.math3.optimization.linear.LinearConstraint.<init>(Lorg/apache/commons/math3/linear/RealVector;DLorg/apache/commons/math3/optimization/linear/Relationship;Lorg/apache/commons/math3/linear/RealVector;D)V"]
41291 [label="org.apache.commons.math3.optimization.linear.LinearConstraint.getCoefficients()Lorg/apache/commons/math3/linear/RealVector;"]
41293 [label="org.apache.commons.math3.optimization.linear.LinearConstraint.getRelationship()Lorg/apache/commons/math3/optimization/linear/Relationship;"]
41295 [label="org.apache.commons.math3.optimization.linear.LinearConstraint.getValue()D"]
41297 [label="org.apache.commons.math3.optimization.linear.LinearConstraint.equals(Ljava/lang/Object;)Z"]
41300 [label="org.apache.commons.math3.optimization.linear.LinearConstraint.hashCode()I"]
41302 [label="org.apache.commons.math3.optimization.linear.LinearConstraint.writeObject(Ljava/io/ObjectOutputStream;)V"]
41305 [label="org.apache.commons.math3.optimization.linear.LinearConstraint.readObject(Ljava/io/ObjectInputStream;)V"]
41315 [label="org.apache.commons.math3.optimization.linear.LinearObjectiveFunction.<init>([DD)V"]
41319 [label="org.apache.commons.math3.optimization.linear.LinearObjectiveFunction.<init>(Lorg/apache/commons/math3/linear/RealVector;D)V"]
41326 [label="org.apache.commons.math3.optimization.linear.LinearObjectiveFunction.getCoefficients()Lorg/apache/commons/math3/linear/RealVector;"]
41328 [label="org.apache.commons.math3.optimization.linear.LinearObjectiveFunction.getConstantTerm()D"]
41330 [label="org.apache.commons.math3.optimization.linear.LinearObjectiveFunction.getValue([D)D"]
41333 [label="org.apache.commons.math3.optimization.linear.LinearObjectiveFunction.getValue(Lorg/apache/commons/math3/linear/RealVector;)D"]
41336 [label="org.apache.commons.math3.optimization.linear.LinearObjectiveFunction.equals(Ljava/lang/Object;)Z"]
41339 [label="org.apache.commons.math3.optimization.linear.LinearObjectiveFunction.hashCode()I"]
41341 [label="org.apache.commons.math3.optimization.linear.LinearObjectiveFunction.writeObject(Ljava/io/ObjectOutputStream;)V"]
41344 [label="org.apache.commons.math3.optimization.linear.LinearObjectiveFunction.readObject(Ljava/io/ObjectInputStream;)V"]
41365 [label="org.apache.commons.math3.optimization.linear.NoFeasibleSolutionException.<init>()V"]
41379 [label="org.apache.commons.math3.optimization.linear.Relationship.<init>(Ljava/lang/String;)V"]
41385 [label="org.apache.commons.math3.optimization.linear.Relationship.oppositeRelationship()Lorg/apache/commons/math3/optimization/linear/Relationship;"]
41406 [label="org.apache.commons.math3.optimization.linear.SimplexSolver.<init>()V"]
41408 [label="org.apache.commons.math3.optimization.linear.SimplexSolver.<init>(DI)V"]
41418 [label="org.apache.commons.math3.optimization.linear.SimplexSolver.getPivotColumn(Lorg/apache/commons/math3/optimization/linear/SimplexTableau;)Ljava/lang/Integer;"]
41424 [label="org.apache.commons.math3.optimization.linear.SimplexTableau.getEntry(II)D"]
41426 [label="org.apache.commons.math3.optimization.linear.SimplexTableau.getNumObjectiveFunctions()I"]
41428 [label="org.apache.commons.math3.optimization.linear.SimplexTableau.getWidth()I"]
41430 [label="org.apache.commons.math3.optimization.linear.SimplexSolver.getPivotRow(Lorg/apache/commons/math3/optimization/linear/SimplexTableau;I)Ljava/lang/Integer;"]
41434 [label="org.apache.commons.math3.util.Precision.compareTo(DDI)I"]
41436 [label="org.apache.commons.math3.optimization.linear.SimplexTableau.getHeight()I"]
41438 [label="org.apache.commons.math3.optimization.linear.SimplexTableau.getNumArtificialVariables()I"]
41440 [label="org.apache.commons.math3.optimization.linear.SimplexTableau.getArtificialVariableOffset()I"]
41442 [label="org.apache.commons.math3.optimization.linear.SimplexTableau.getBasicRow(I)Ljava/lang/Integer;"]
41446 [label="org.apache.commons.math3.optimization.linear.SimplexSolver.doIteration(Lorg/apache/commons/math3/optimization/linear/SimplexTableau;)V"]
41455 [label="org.apache.commons.math3.optimization.linear.UnboundedSolutionException.<init>()V"]
41457 [label="org.apache.commons.math3.optimization.linear.SimplexTableau.divideRow(ID)V"]
41459 [label="org.apache.commons.math3.optimization.linear.SimplexTableau.subtractRow(IID)V"]
41461 [label="org.apache.commons.math3.optimization.linear.SimplexSolver.solvePhase1(Lorg/apache/commons/math3/optimization/linear/SimplexTableau;)V"]
41467 [label="org.apache.commons.math3.optimization.linear.SimplexTableau.isOptimal()Z"]
41469 [label="org.apache.commons.math3.optimization.linear.SimplexTableau.getRhsOffset()I"]
41472 [label="org.apache.commons.math3.optimization.linear.SimplexSolver.doOptimize()Lorg/apache/commons/math3/optimization/PointValuePair;"]
41474 [label="org.apache.commons.math3.optimization.linear.SimplexTableau.<init>(Lorg/apache/commons/math3/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math3/optimization/GoalType;ZDI)V"]
41481 [label="org.apache.commons.math3.optimization.linear.SimplexTableau.dropPhase1Objective()V"]
41483 [label="org.apache.commons.math3.optimization.linear.SimplexTableau.getSolution()Lorg/apache/commons/math3/optimization/PointValuePair;"]
41517 [label="org.apache.commons.math3.optimization.linear.SimplexTableau.<init>(Lorg/apache/commons/math3/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math3/optimization/GoalType;ZD)V"]
41534 [label="org.apache.commons.math3.optimization.linear.SimplexTableau.normalizeConstraints(Ljava/util/Collection;)Ljava/util/List;"]
41542 [label="org.apache.commons.math3.optimization.linear.SimplexTableau.getConstraintTypeCounts(Lorg/apache/commons/math3/optimization/linear/Relationship;)I"]
41546 [label="org.apache.commons.math3.optimization.linear.SimplexTableau.createTableau(Z)Lorg/apache/commons/math3/linear/RealMatrix;"]
41549 [label="org.apache.commons.math3.optimization.linear.SimplexTableau.initializeColumnLabels()V"]
41553 [label="org.apache.commons.math3.optimization.linear.SimplexTableau.getOriginalNumDecisionVariables()I"]
41556 [label="org.apache.commons.math3.optimization.linear.SimplexTableau.getNumSlackVariables()I"]
41560 [label="org.apache.commons.math3.optimization.linear.SimplexTableau.copyArray([D[D)V"]
41563 [label="org.apache.commons.math3.optimization.linear.SimplexTableau.getSlackVariableOffset()I"]
41565 [label="org.apache.commons.math3.optimization.linear.SimplexTableau.getInvertedCoefficientSum(Lorg/apache/commons/math3/linear/RealVector;)D"]
41575 [label="org.apache.commons.math3.optimization.linear.SimplexTableau.normalize(Lorg/apache/commons/math3/optimization/linear/LinearConstraint;)Lorg/apache/commons/math3/optimization/linear/LinearConstraint;"]
41607 [label="org.apache.commons.math3.optimization.linear.SimplexTableau.setEntry(IID)V"]
41620 [label="org.apache.commons.math3.optimization.linear.SimplexTableau.getData()[[D"]
41622 [label="org.apache.commons.math3.optimization.linear.SimplexTableau.equals(Ljava/lang/Object;)Z"]
41626 [label="org.apache.commons.math3.optimization.linear.SimplexTableau.hashCode()I"]
41629 [label="org.apache.commons.math3.optimization.linear.SimplexTableau.writeObject(Ljava/io/ObjectOutputStream;)V"]
41632 [label="org.apache.commons.math3.optimization.linear.SimplexTableau.readObject(Ljava/io/ObjectInputStream;)V"]
41647 [label="org.apache.commons.math3.optimization.MultivariateDifferentiableMultiStartOptimizer.<init>(Lorg/apache/commons/math3/optimization/MultivariateDifferentiableOptimizer;ILorg/apache/commons/math3/random/RandomVectorGenerator;)V"]
41661 [label="org.apache.commons.math3.optimization.MultivariateDifferentiableVectorMultiStartOptimizer.<init>(Lorg/apache/commons/math3/optimization/MultivariateDifferentiableVectorOptimizer;ILorg/apache/commons/math3/random/RandomVectorGenerator;)V"]
41675 [label="org.apache.commons.math3.optimization.MultivariateMultiStartOptimizer.<init>(Lorg/apache/commons/math3/optimization/MultivariateOptimizer;ILorg/apache/commons/math3/random/RandomVectorGenerator;)V"]
41697 [label="org.apache.commons.math3.optimization.PointValuePair.writeReplace()Ljava/lang/Object;"]
41702 [label="org.apache.commons.math3.optimization.PointValuePair$DataTransferObject.<init>([DD)V"]
41716 [label="org.apache.commons.math3.optimization.PointValuePair$DataTransferObject.readResolve()Ljava/lang/Object;"]
41724 [label="org.apache.commons.math3.optimization.PointVectorValuePair.<init>([D[DZ)V"]
41732 [label="org.apache.commons.math3.optimization.PointVectorValuePair.getValue()[D"]
41735 [label="org.apache.commons.math3.optimization.PointVectorValuePair.writeReplace()Ljava/lang/Object;"]
41740 [label="org.apache.commons.math3.optimization.PointVectorValuePair$DataTransferObject.<init>([D[D)V"]
41755 [label="org.apache.commons.math3.optimization.PointVectorValuePair$DataTransferObject.readResolve()Ljava/lang/Object;"]
41781 [label="org.apache.commons.math3.optimization.SimplePointChecker.<init>()V"]
41786 [label="org.apache.commons.math3.optimization.SimplePointChecker.<init>(DD)V"]
41791 [label="org.apache.commons.math3.optimization.SimplePointChecker.<init>(DDI)V"]
41796 [label="org.apache.commons.math3.optimization.SimplePointChecker.converged(ILorg/apache/commons/math3/util/Pair;Lorg/apache/commons/math3/util/Pair;)Z"]
41819 [label="org.apache.commons.math3.optimization.SimpleValueChecker.<init>(DDI)V"]
41824 [label="org.apache.commons.math3.optimization.SimpleValueChecker.converged(ILorg/apache/commons/math3/optimization/PointValuePair;Lorg/apache/commons/math3/optimization/PointValuePair;)Z"]
41840 [label="org.apache.commons.math3.optimization.SimpleVectorValueChecker.<init>(DD)V"]
41844 [label="org.apache.commons.math3.optimization.SimpleVectorValueChecker.<init>(DDI)V"]
41849 [label="org.apache.commons.math3.optimization.SimpleVectorValueChecker.converged(ILorg/apache/commons/math3/optimization/PointVectorValuePair;Lorg/apache/commons/math3/optimization/PointVectorValuePair;)Z"]
41894 [label="org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer.<init>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V"]
41898 [label="org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer.getMaxEvaluations()I"]
41901 [label="org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer.getEvaluations()I"]
41903 [label="org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer.getGoalType()Lorg/apache/commons/math3/optimization/GoalType;"]
41906 [label="org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer.getMin()D"]
41909 [label="org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer.getMax()D"]
41912 [label="org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer.getStartValue()D"]
41915 [label="org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer.computeObjectiveValue(D)D"]
41926 [label="org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer.doOptimize()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;"]
41928 [label="org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer.optimize(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;"]
41935 [label="org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer.getConvergenceChecker()Lorg/apache/commons/math3/optimization/ConvergenceChecker;"]
41953 [label="org.apache.commons.math3.optimization.univariate.BaseUnivariateOptimizer.optimize(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;"]
41982 [label="org.apache.commons.math3.optimization.univariate.BracketFinder.<init>()V"]
41984 [label="org.apache.commons.math3.optimization.univariate.BracketFinder.<init>(DI)V"]
41996 [label="org.apache.commons.math3.optimization.univariate.BracketFinder.eval(Lorg/apache/commons/math3/analysis/UnivariateFunction;D)D"]
42006 [label="org.apache.commons.math3.optimization.univariate.BracketFinder.getMaxEvaluations()I"]
42008 [label="org.apache.commons.math3.optimization.univariate.BracketFinder.getEvaluations()I"]
42041 [label="org.apache.commons.math3.optimization.univariate.BrentOptimizer.<init>(DD)V"]
42045 [label="org.apache.commons.math3.optimization.univariate.BrentOptimizer.doOptimize()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;"]
42053 [label="org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair.<init>(DD)V"]
42056 [label="org.apache.commons.math3.optimization.univariate.BrentOptimizer.best(Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Z)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;"]
42070 [label="org.apache.commons.math3.optimization.univariate.SimpleUnivariateValueChecker.<init>()V"]
42077 [label="org.apache.commons.math3.optimization.univariate.SimpleUnivariateValueChecker.<init>(DDI)V"]
42082 [label="org.apache.commons.math3.optimization.univariate.SimpleUnivariateValueChecker.converged(ILorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;)Z"]
42110 [label="org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer.<init>(Lorg/apache/commons/math3/optimization/univariate/BaseUnivariateOptimizer;ILorg/apache/commons/math3/random/RandomGenerator;)V"]
42118 [label="org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer.getConvergenceChecker()Lorg/apache/commons/math3/optimization/ConvergenceChecker;"]
42126 [label="org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer.getOptima()[Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;"]
42129 [label="org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer.optimize(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;"]
42136 [label="org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer.optimize(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;"]
42146 [label="org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer.sortPairs(Lorg/apache/commons/math3/optimization/GoalType;)V"]
42153 [label="org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer$1.<init>()V"]
42156 [label="org.apache.commons.math3.optimization.univariate.UnivariateMultiStartOptimizer$1.compare(Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;)I"]
42184 [label="org.apache.commons.math3.optimization.Weight.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V"]
42196 [label="org.apache.commons.math3.primes.PollardRho.<init>()V"]
42198 [label="org.apache.commons.math3.primes.PollardRho.primeFactors(I)Ljava/util/List;"]
42201 [label="org.apache.commons.math3.primes.SmallPrimes.smallTrialDivision(ILjava/util/List;)I"]
42203 [label="org.apache.commons.math3.primes.SmallPrimes.millerRabinPrimeTest(I)Z"]
42205 [label="org.apache.commons.math3.primes.PollardRho.rhoBrent(I)I"]
42211 [label="org.apache.commons.math3.primes.PollardRho.gcdPositive(II)I"]
42216 [label="java.lang.Integer.numberOfTrailingZeros(I)I"]
42220 [label="org.apache.commons.math3.primes.Primes.<init>()V"]
42222 [label="org.apache.commons.math3.primes.Primes.isPrime(I)Z"]
42227 [label="org.apache.commons.math3.primes.Primes.nextPrime(I)I"]
42231 [label="org.apache.commons.math3.primes.Primes.primeFactors(I)Ljava/util/List;"]
42234 [label="org.apache.commons.math3.primes.SmallPrimes.trialDivision(I)Ljava/util/List;"]
42240 [label="org.apache.commons.math3.primes.SmallPrimes.<init>()V"]
42245 [label="org.apache.commons.math3.primes.SmallPrimes.boundedTrialDivision(IILjava/util/List;)I"]
42255 [label="java.math.BigInteger.modPow(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;"]
42295 [label="org.apache.commons.math3.random.AbstractRandomGenerator.<init>()V"]
42300 [label="org.apache.commons.math3.random.AbstractRandomGenerator.setSeed(I)V"]
42303 [label="org.apache.commons.math3.random.AbstractRandomGenerator.setSeed(J)V"]
42305 [label="org.apache.commons.math3.random.AbstractRandomGenerator.setSeed([I)V"]
42310 [label="org.apache.commons.math3.random.AbstractRandomGenerator.nextBytes([B)V"]
42314 [label="org.apache.commons.math3.random.AbstractRandomGenerator.nextInt()I"]
42317 [label="org.apache.commons.math3.random.AbstractRandomGenerator.nextDouble()D"]
42319 [label="org.apache.commons.math3.random.AbstractRandomGenerator.nextInt(I)I"]
42322 [label="org.apache.commons.math3.random.AbstractRandomGenerator.nextLong()J"]
42326 [label="org.apache.commons.math3.random.AbstractRandomGenerator.nextBoolean()Z"]
42328 [label="org.apache.commons.math3.random.AbstractRandomGenerator.nextFloat()F"]
42331 [label="org.apache.commons.math3.random.AbstractRandomGenerator.nextGaussian()D"]
42354 [label="org.apache.commons.math3.random.AbstractWell.<init>(IIII)V"]
42360 [label="org.apache.commons.math3.random.AbstractWell.<init>(IIII[I)V"]
42362 [label="org.apache.commons.math3.random.AbstractWell.<init>(IIIII)V"]
42375 [label="org.apache.commons.math3.random.BitsStreamGenerator.<init>()V"]
42384 [label="org.apache.commons.math3.random.AbstractWell.setSeed([I)V"]
42386 [label="org.apache.commons.math3.random.AbstractWell.<init>(IIIIJ)V"]
42393 [label="org.apache.commons.math3.random.AbstractWell.setSeed(I)V"]
42398 [label="org.apache.commons.math3.random.AbstractWell.setSeed(J)V"]
42400 [label="java.lang.System.currentTimeMillis()J"]
42402 [label="java.lang.System.identityHashCode(Ljava/lang/Object;)I"]
42404 [label="org.apache.commons.math3.random.BitsStreamGenerator.clear()V"]
42427 [label="org.apache.commons.math3.random.BitsStreamGenerator.next(I)I"]
42430 [label="org.apache.commons.math3.random.BitsStreamGenerator.nextBoolean()Z"]
42433 [label="org.apache.commons.math3.random.BitsStreamGenerator.nextDouble()D"]
42435 [label="org.apache.commons.math3.random.BitsStreamGenerator.nextFloat()F"]
42437 [label="org.apache.commons.math3.random.BitsStreamGenerator.nextGaussian()D"]
42440 [label="org.apache.commons.math3.random.BitsStreamGenerator.nextInt()I"]
42442 [label="org.apache.commons.math3.random.BitsStreamGenerator.nextInt(I)I"]
42445 [label="org.apache.commons.math3.random.BitsStreamGenerator.nextLong()J"]
42447 [label="org.apache.commons.math3.random.BitsStreamGenerator.nextLong(J)J"]
42451 [label="org.apache.commons.math3.random.BitsStreamGenerator.nextBytes([B)V"]
42454 [label="org.apache.commons.math3.random.BitsStreamGenerator.nextBytesFill([BII)V"]
42456 [label="org.apache.commons.math3.random.BitsStreamGenerator.nextBytes([BII)V"]
42478 [label="org.apache.commons.math3.random.CorrelatedRandomVectorGenerator.<init>([DLorg/apache/commons/math3/linear/RealMatrix;DLorg/apache/commons/math3/random/NormalizedRandomGenerator;)V"]
42492 [label="org.apache.commons.math3.random.CorrelatedRandomVectorGenerator.<init>(Lorg/apache/commons/math3/linear/RealMatrix;DLorg/apache/commons/math3/random/NormalizedRandomGenerator;)V"]
42503 [label="org.apache.commons.math3.random.CorrelatedRandomVectorGenerator.nextVector()[D"]
42505 [label="org.apache.commons.math3.random.NormalizedRandomGenerator.nextNormalizedDouble()D"]
42542 [label="org.apache.commons.math3.random.EmpiricalDistribution.<init>()V"]
42544 [label="org.apache.commons.math3.random.EmpiricalDistribution.<init>(I)V"]
42549 [label="org.apache.commons.math3.random.EmpiricalDistribution.<init>(ILorg/apache/commons/math3/random/RandomDataGenerator;)V"]
42551 [label="org.apache.commons.math3.random.RandomDataGenerator.<init>()V"]
42553 [label="org.apache.commons.math3.random.EmpiricalDistribution.<init>(ILorg/apache/commons/math3/random/RandomGenerator;)V"]
42557 [label="org.apache.commons.math3.random.RandomDataGenerator.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V"]
42559 [label="org.apache.commons.math3.random.EmpiricalDistribution.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V"]
42563 [label="org.apache.commons.math3.random.EmpiricalDistribution.<init>(ILorg/apache/commons/math3/random/RandomDataImpl;)V"]
42567 [label="org.apache.commons.math3.random.RandomDataImpl.getDelegate()Lorg/apache/commons/math3/random/RandomDataGenerator;"]
42569 [label="org.apache.commons.math3.random.EmpiricalDistribution.<init>(Lorg/apache/commons/math3/random/RandomDataImpl;)V"]
42576 [label="org.apache.commons.math3.random.RandomDataGenerator.getRandomGenerator()Lorg/apache/commons/math3/random/RandomGenerator;"]
42584 [label="org.apache.commons.math3.random.EmpiricalDistribution.load([D)V"]
42593 [label="org.apache.commons.math3.random.EmpiricalDistribution$ArrayDataAdapter.<init>([D)V"]
42595 [label="org.apache.commons.math3.random.EmpiricalDistribution$DataAdapter.computeStats()V"]
42597 [label="org.apache.commons.math3.random.EmpiricalDistribution.fillBinStats(Lorg/apache/commons/math3/random/EmpiricalDistribution$DataAdapter;)V"]
42600 [label="org.apache.commons.math3.random.EmpiricalDistribution.load(Ljava/net/URL;)V"]
42609 [label="java.nio.charset.Charset.forName(Ljava/lang/String;)Ljava/nio/charset/Charset;"]
42615 [label="java.io.BufferedReader.<init>(Ljava/io/Reader;)V"]
42620 [label="java.io.InputStreamReader.<init>(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V"]
42622 [label="java.net.URL.openStream()Ljava/io/InputStream;"]
42627 [label="org.apache.commons.math3.random.EmpiricalDistribution$StreamDataAdapter.<init>(Ljava/io/BufferedReader;)V"]
42629 [label="org.apache.commons.math3.stat.descriptive.SummaryStatistics.getN()J"]
42633 [label="java.io.BufferedReader.close()V"]
42635 [label="org.apache.commons.math3.random.EmpiricalDistribution.load(Ljava/io/File;)V"]
42647 [label="java.io.FileInputStream.<init>(Ljava/io/File;)V"]
42650 [label="org.apache.commons.math3.random.EmpiricalDistribution$DataAdapter.<init>()V"]
42651 [label="org.apache.commons.math3.random.EmpiricalDistribution$DataAdapter.computeBinStats()V"]
42661 [label="org.apache.commons.math3.random.EmpiricalDistribution$StreamDataAdapter.computeBinStats()V"]
42663 [label="java.lang.Double.parseDouble(Ljava/lang/String;)D"]
42665 [label="org.apache.commons.math3.random.EmpiricalDistribution.findBin(D)I"]
42667 [label="org.apache.commons.math3.stat.descriptive.SummaryStatistics.addValue(D)V"]
42669 [label="java.io.BufferedReader.readLine()Ljava/lang/String;"]
42671 [label="org.apache.commons.math3.random.EmpiricalDistribution$StreamDataAdapter.computeStats()V"]
42673 [label="org.apache.commons.math3.stat.descriptive.SummaryStatistics.<init>()V"]
42681 [label="org.apache.commons.math3.random.EmpiricalDistribution$ArrayDataAdapter.computeStats()V"]
42683 [label="org.apache.commons.math3.random.EmpiricalDistribution$ArrayDataAdapter.computeBinStats()V"]
42688 [label="org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMin()D"]
42691 [label="org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMax()D"]
42698 [label="org.apache.commons.math3.random.EmpiricalDistribution.getNextValue()D"]
42701 [label="org.apache.commons.math3.random.EmpiricalDistribution.getSampleStats()Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;"]
42708 [label="org.apache.commons.math3.random.EmpiricalDistribution.getBinStats()Ljava/util/List;"]
42710 [label="org.apache.commons.math3.random.EmpiricalDistribution.getUpperBounds()[D"]
42712 [label="org.apache.commons.math3.random.EmpiricalDistribution.getGeneratorUpperBounds()[D"]
42716 [label="org.apache.commons.math3.random.EmpiricalDistribution.reSeed(J)V"]
42719 [label="org.apache.commons.math3.random.RandomDataGenerator.reSeed(J)V"]
42725 [label="org.apache.commons.math3.random.EmpiricalDistribution.density(D)D"]
42728 [label="org.apache.commons.math3.random.EmpiricalDistribution.getKernel(Lorg/apache/commons/math3/stat/descriptive/SummaryStatistics;)Lorg/apache/commons/math3/distribution/RealDistribution;"]
42730 [label="org.apache.commons.math3.random.EmpiricalDistribution.pB(I)D"]
42732 [label="org.apache.commons.math3.random.EmpiricalDistribution.kB(I)D"]
42734 [label="org.apache.commons.math3.random.EmpiricalDistribution.cumulativeProbability(D)D"]
42737 [label="org.apache.commons.math3.random.EmpiricalDistribution.pBminus(I)D"]
42739 [label="org.apache.commons.math3.random.EmpiricalDistribution.k(D)Lorg/apache/commons/math3/distribution/RealDistribution;"]
42744 [label="org.apache.commons.math3.random.EmpiricalDistribution.inverseCumulativeProbability(D)D"]
42747 [label="org.apache.commons.math3.random.EmpiricalDistribution.getSupportLowerBound()D"]
42749 [label="org.apache.commons.math3.random.EmpiricalDistribution.getSupportUpperBound()D"]
42751 [label="org.apache.commons.math3.random.EmpiricalDistribution.cumBinP(I)D"]
42754 [label="org.apache.commons.math3.random.EmpiricalDistribution.getNumericalMean()D"]
42756 [label="org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMean()D"]
42758 [label="org.apache.commons.math3.random.EmpiricalDistribution.getNumericalVariance()D"]
42760 [label="org.apache.commons.math3.stat.descriptive.SummaryStatistics.getVariance()D"]
42770 [label="org.apache.commons.math3.random.EmpiricalDistribution.reseedRandomGenerator(J)V"]
42787 [label="org.apache.commons.math3.stat.descriptive.SummaryStatistics.getStandardDeviation()D"]
42793 [label="org.apache.commons.math3.random.GaussianRandomGenerator.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V"]
42797 [label="org.apache.commons.math3.random.GaussianRandomGenerator.nextNormalizedDouble()D"]
42813 [label="org.apache.commons.math3.random.HaltonSequenceGenerator.<init>(I)V"]
42816 [label="org.apache.commons.math3.random.HaltonSequenceGenerator.<init>(I[I[I)V"]
42828 [label="org.apache.commons.math3.random.HaltonSequenceGenerator.nextVector()[D"]
42830 [label="org.apache.commons.math3.random.HaltonSequenceGenerator.scramble(IIII)I"]
42837 [label="org.apache.commons.math3.random.HaltonSequenceGenerator.skipTo(I)[D"]
42879 [label="org.apache.commons.math3.random.ISAACRandom.<init>()V"]
42881 [label="org.apache.commons.math3.random.ISAACRandom.setSeed(J)V"]
42883 [label="org.apache.commons.math3.random.ISAACRandom.<init>(J)V"]
42886 [label="org.apache.commons.math3.random.ISAACRandom.<init>([I)V"]
42889 [label="org.apache.commons.math3.random.ISAACRandom.setSeed([I)V"]
42891 [label="org.apache.commons.math3.random.ISAACRandom.setSeed(I)V"]
42899 [label="org.apache.commons.math3.random.ISAACRandom.initState()V"]
42901 [label="org.apache.commons.math3.random.ISAACRandom.next(I)I"]
42905 [label="org.apache.commons.math3.random.ISAACRandom.isaac()V"]
42913 [label="org.apache.commons.math3.random.ISAACRandom.isaac2()V"]
42919 [label="org.apache.commons.math3.random.ISAACRandom.isaac3()V"]
42926 [label="org.apache.commons.math3.random.ISAACRandom.shuffle()V"]
42928 [label="org.apache.commons.math3.random.ISAACRandom.setState(I)V"]
42940 [label="java.util.Random.<init>()V"]
42942 [label="org.apache.commons.math3.random.JDKRandomGenerator.<init>(I)V"]
42945 [label="org.apache.commons.math3.random.JDKRandomGenerator.setSeed(I)V"]
42949 [label="java.util.Random.setSeed(J)V"]
42951 [label="org.apache.commons.math3.random.JDKRandomGenerator.setSeed([I)V"]
42954 [label="org.apache.commons.math3.random.RandomGeneratorFactory.convertToLong([I)J"]
42969 [label="org.apache.commons.math3.random.MersenneTwister.<init>()V"]
42973 [label="org.apache.commons.math3.random.MersenneTwister.setSeed(J)V"]
42975 [label="org.apache.commons.math3.random.MersenneTwister.<init>(I)V"]
42978 [label="org.apache.commons.math3.random.MersenneTwister.setSeed(I)V"]
42980 [label="org.apache.commons.math3.random.MersenneTwister.<init>([I)V"]
42983 [label="org.apache.commons.math3.random.MersenneTwister.setSeed([I)V"]
42985 [label="org.apache.commons.math3.random.MersenneTwister.<init>(J)V"]
43008 [label="org.apache.commons.math3.random.RandomAdaptor.<init>()V"]
43011 [label="org.apache.commons.math3.random.RandomAdaptor.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V"]
43014 [label="org.apache.commons.math3.random.RandomAdaptor.createAdaptor(Lorg/apache/commons/math3/random/RandomGenerator;)Ljava/util/Random;"]
43020 [label="org.apache.commons.math3.random.RandomAdaptor.nextBoolean()Z"]
43022 [label="org.apache.commons.math3.random.RandomGenerator.nextBoolean()Z"]
43024 [label="org.apache.commons.math3.random.RandomAdaptor.nextBytes([B)V"]
43027 [label="org.apache.commons.math3.random.RandomGenerator.nextBytes([B)V"]
43029 [label="org.apache.commons.math3.random.RandomAdaptor.nextDouble()D"]
43031 [label="org.apache.commons.math3.random.RandomAdaptor.nextFloat()F"]
43033 [label="org.apache.commons.math3.random.RandomGenerator.nextFloat()F"]
43035 [label="org.apache.commons.math3.random.RandomAdaptor.nextGaussian()D"]
43037 [label="org.apache.commons.math3.random.RandomAdaptor.nextInt()I"]
43039 [label="org.apache.commons.math3.random.RandomAdaptor.nextInt(I)I"]
43042 [label="org.apache.commons.math3.random.RandomAdaptor.nextLong()J"]
43044 [label="org.apache.commons.math3.random.RandomGenerator.nextLong()J"]
43046 [label="org.apache.commons.math3.random.RandomAdaptor.setSeed(I)V"]
43049 [label="org.apache.commons.math3.random.RandomGenerator.setSeed(I)V"]
43051 [label="org.apache.commons.math3.random.RandomAdaptor.setSeed([I)V"]
43054 [label="org.apache.commons.math3.random.RandomGenerator.setSeed([I)V"]
43056 [label="org.apache.commons.math3.random.RandomAdaptor.setSeed(J)V"]
43126 [label="org.apache.commons.math3.random.RandomDataGenerator.nextHexString(I)Ljava/lang/String;"]
43130 [label="java.lang.Integer.toHexString(I)Ljava/lang/String;"]
43132 [label="org.apache.commons.math3.random.RandomDataGenerator.nextInt(II)I"]
43139 [label="org.apache.commons.math3.random.RandomDataGenerator.nextLong(JJ)J"]
43143 [label="org.apache.commons.math3.random.RandomDataGenerator.nextLong(Lorg/apache/commons/math3/random/RandomGenerator;J)J"]
43148 [label="org.apache.commons.math3.random.RandomDataGenerator.nextSecureHexString(I)Ljava/lang/String;"]
43151 [label="org.apache.commons.math3.random.RandomDataGenerator.getSecRan()Lorg/apache/commons/math3/random/RandomGenerator;"]
43156 [label="java.security.MessageDigest.getInstance(Ljava/lang/String;)Ljava/security/MessageDigest;"]
43161 [label="java.security.MessageDigest.reset()V"]
43163 [label="java.security.MessageDigest.update([B)V"]
43165 [label="java.security.MessageDigest.digest()[B"]
43167 [label="org.apache.commons.math3.random.RandomDataGenerator.nextSecureInt(II)I"]
43171 [label="org.apache.commons.math3.random.RandomDataGenerator.nextSecureLong(JJ)J"]
43175 [label="org.apache.commons.math3.random.RandomDataGenerator.nextPoisson(D)J"]
43181 [label="org.apache.commons.math3.random.RandomDataGenerator.nextGaussian(DD)D"]
43185 [label="org.apache.commons.math3.random.RandomDataGenerator.nextExponential(D)D"]
43188 [label="org.apache.commons.math3.random.RandomDataGenerator.nextGamma(DD)D"]
43193 [label="org.apache.commons.math3.random.RandomDataGenerator.nextHypergeometric(III)I"]
43200 [label="org.apache.commons.math3.random.RandomDataGenerator.nextPascal(ID)I"]
43206 [label="org.apache.commons.math3.random.RandomDataGenerator.nextT(D)D"]
43211 [label="org.apache.commons.math3.random.RandomDataGenerator.nextWeibull(DD)D"]
43217 [label="org.apache.commons.math3.random.RandomDataGenerator.nextZipf(ID)I"]
43224 [label="org.apache.commons.math3.random.RandomDataGenerator.nextBeta(DD)D"]
43231 [label="org.apache.commons.math3.random.RandomDataGenerator.nextBinomial(ID)I"]
43237 [label="org.apache.commons.math3.random.RandomDataGenerator.nextCauchy(DD)D"]
43243 [label="org.apache.commons.math3.random.RandomDataGenerator.nextChiSquare(D)D"]
43248 [label="org.apache.commons.math3.random.RandomDataGenerator.nextF(DD)D"]
43254 [label="org.apache.commons.math3.random.RandomDataGenerator.nextUniform(DD)D"]
43258 [label="org.apache.commons.math3.random.RandomDataGenerator.nextUniform(DDZ)D"]
43265 [label="org.apache.commons.math3.random.RandomDataGenerator.nextPermutation(II)[I"]
43271 [label="org.apache.commons.math3.util.MathArrays.natural(I)[I"]
43273 [label="org.apache.commons.math3.util.MathArrays.shuffle([ILorg/apache/commons/math3/random/RandomGenerator;)V"]
43275 [label="org.apache.commons.math3.random.RandomDataGenerator.nextSample(Ljava/util/Collection;I)[Ljava/lang/Object;"]
43280 [label="java.util.Collection.toArray()[Ljava/lang/Object;"]
43285 [label="org.apache.commons.math3.random.RandomDataGenerator.reSeedSecure()V"]
43287 [label="org.apache.commons.math3.random.RandomDataGenerator.reSeedSecure(J)V"]
43290 [label="org.apache.commons.math3.random.RandomDataGenerator.reSeed()V"]
43292 [label="org.apache.commons.math3.random.RandomDataGenerator.setSecureAlgorithm(Ljava/lang/String;Ljava/lang/String;)V"]
43300 [label="org.apache.commons.math3.random.RandomGeneratorFactory.createRandomGenerator(Ljava/util/Random;)Lorg/apache/commons/math3/random/RandomGenerator;"]
43302 [label="java.security.SecureRandom.getInstance(Ljava/lang/String;Ljava/lang/String;)Ljava/security/SecureRandom;"]
43305 [label="org.apache.commons.math3.random.RandomDataGenerator.initRan()V"]
43308 [label="org.apache.commons.math3.random.Well19937c.<init>(J)V"]
43314 [label="java.security.SecureRandom.<init>()V"]
43321 [label="org.apache.commons.math3.random.RandomDataImpl.<init>()V"]
43324 [label="org.apache.commons.math3.random.RandomDataImpl.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V"]
43328 [label="org.apache.commons.math3.random.RandomDataImpl.nextHexString(I)Ljava/lang/String;"]
43332 [label="org.apache.commons.math3.random.RandomDataImpl.nextInt(II)I"]
43337 [label="org.apache.commons.math3.random.RandomDataImpl.nextLong(JJ)J"]
43342 [label="org.apache.commons.math3.random.RandomDataImpl.nextSecureHexString(I)Ljava/lang/String;"]
43346 [label="org.apache.commons.math3.random.RandomDataImpl.nextSecureInt(II)I"]
43351 [label="org.apache.commons.math3.random.RandomDataImpl.nextSecureLong(JJ)J"]
43356 [label="org.apache.commons.math3.random.RandomDataImpl.nextPoisson(D)J"]
43360 [label="org.apache.commons.math3.random.RandomDataImpl.nextGaussian(DD)D"]
43365 [label="org.apache.commons.math3.random.RandomDataImpl.nextExponential(D)D"]
43369 [label="org.apache.commons.math3.random.RandomDataImpl.nextUniform(DD)D"]
43374 [label="org.apache.commons.math3.random.RandomDataImpl.nextUniform(DDZ)D"]
43379 [label="org.apache.commons.math3.random.RandomDataImpl.nextBeta(DD)D"]
43384 [label="org.apache.commons.math3.random.RandomDataImpl.nextBinomial(ID)I"]
43389 [label="org.apache.commons.math3.random.RandomDataImpl.nextCauchy(DD)D"]
43394 [label="org.apache.commons.math3.random.RandomDataImpl.nextChiSquare(D)D"]
43398 [label="org.apache.commons.math3.random.RandomDataImpl.nextF(DD)D"]
43403 [label="org.apache.commons.math3.random.RandomDataImpl.nextGamma(DD)D"]
43408 [label="org.apache.commons.math3.random.RandomDataImpl.nextHypergeometric(III)I"]
43414 [label="org.apache.commons.math3.random.RandomDataImpl.nextPascal(ID)I"]
43419 [label="org.apache.commons.math3.random.RandomDataImpl.nextT(D)D"]
43423 [label="org.apache.commons.math3.random.RandomDataImpl.nextWeibull(DD)D"]
43428 [label="org.apache.commons.math3.random.RandomDataImpl.nextZipf(ID)I"]
43435 [label="org.apache.commons.math3.random.RandomDataImpl.reSeedSecure()V"]
43438 [label="org.apache.commons.math3.random.RandomDataImpl.reSeedSecure(J)V"]
43442 [label="org.apache.commons.math3.random.RandomDataImpl.reSeed()V"]
43445 [label="org.apache.commons.math3.random.RandomDataImpl.setSecureAlgorithm(Ljava/lang/String;Ljava/lang/String;)V"]
43450 [label="org.apache.commons.math3.random.RandomDataImpl.nextPermutation(II)[I"]
43454 [label="org.apache.commons.math3.random.RandomDataImpl.nextSample(Ljava/util/Collection;I)[Ljava/lang/Object;"]
43459 [label="org.apache.commons.math3.random.RandomDataImpl.nextInversionDeviate(Lorg/apache/commons/math3/distribution/RealDistribution;)D"]
43463 [label="org.apache.commons.math3.random.RandomDataImpl.nextInversionDeviate(Lorg/apache/commons/math3/distribution/IntegerDistribution;)I"]
43486 [label="org.apache.commons.math3.random.RandomGeneratorFactory.<init>()V"]
43490 [label="org.apache.commons.math3.random.RandomGeneratorFactory$1.<init>()V"]
43493 [label="org.apache.commons.math3.random.RandomGeneratorFactory$1.setSeed(I)V"]
43496 [label="org.apache.commons.math3.random.RandomGeneratorFactory$1.setSeed([I)V"]
43499 [label="org.apache.commons.math3.random.RandomGeneratorFactory$1.setSeed(J)V"]
43502 [label="org.apache.commons.math3.random.RandomGeneratorFactory$1.nextBytes([B)V"]
43505 [label="java.util.Random.nextBytes([B)V"]
43507 [label="org.apache.commons.math3.random.RandomGeneratorFactory$1.nextInt()I"]
43509 [label="java.util.Random.nextInt()I"]
43511 [label="org.apache.commons.math3.random.RandomGeneratorFactory$1.nextInt(I)I"]
43514 [label="java.util.Random.nextInt(I)I"]
43516 [label="org.apache.commons.math3.random.RandomGeneratorFactory$1.nextLong()J"]
43518 [label="java.util.Random.nextLong()J"]
43520 [label="org.apache.commons.math3.random.RandomGeneratorFactory$1.nextBoolean()Z"]
43522 [label="java.util.Random.nextBoolean()Z"]
43524 [label="org.apache.commons.math3.random.RandomGeneratorFactory$1.nextFloat()F"]
43526 [label="java.util.Random.nextFloat()F"]
43528 [label="org.apache.commons.math3.random.RandomGeneratorFactory$1.nextDouble()D"]
43530 [label="java.util.Random.nextDouble()D"]
43532 [label="org.apache.commons.math3.random.RandomGeneratorFactory$1.nextGaussian()D"]
43534 [label="java.util.Random.nextGaussian()D"]
43561 [label="org.apache.commons.math3.random.SobolSequenceGenerator.<init>(I)V"]
43565 [label="java.lang.Class.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream;"]
43571 [label="org.apache.commons.math3.random.SobolSequenceGenerator.initFromStream(Ljava/io/InputStream;)I"]
43573 [label="java.io.InputStream.close()V"]
43575 [label="org.apache.commons.math3.random.SobolSequenceGenerator.<init>(ILjava/io/InputStream;)V"]
43585 [label="java.util.StringTokenizer.<init>(Ljava/lang/String;Ljava/lang/String;)V"]
43587 [label="java.lang.Integer.parseInt(Ljava/lang/String;)I"]
43589 [label="java.util.StringTokenizer.nextToken()Ljava/lang/String;"]
43591 [label="org.apache.commons.math3.random.SobolSequenceGenerator.initDirectionVector(II[I)V"]
43598 [label="org.apache.commons.math3.random.SobolSequenceGenerator.nextVector()[D"]
43602 [label="org.apache.commons.math3.random.SobolSequenceGenerator.skipTo(I)[D"]
43605 [label="java.util.Arrays.fill([JJ)V"]
43620 [label="org.apache.commons.math3.random.StableRandomGenerator.<init>(Lorg/apache/commons/math3/random/RandomGenerator;DD)V"]
43629 [label="org.apache.commons.math3.random.StableRandomGenerator.nextNormalizedDouble()D"]
43635 [label="org.apache.commons.math3.random.SynchronizedRandomGenerator.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V"]
43639 [label="org.apache.commons.math3.random.SynchronizedRandomGenerator.setSeed(I)V"]
43642 [label="org.apache.commons.math3.random.SynchronizedRandomGenerator.setSeed([I)V"]
43645 [label="org.apache.commons.math3.random.SynchronizedRandomGenerator.setSeed(J)V"]
43648 [label="org.apache.commons.math3.random.SynchronizedRandomGenerator.nextBytes([B)V"]
43651 [label="org.apache.commons.math3.random.SynchronizedRandomGenerator.nextInt()I"]
43653 [label="org.apache.commons.math3.random.SynchronizedRandomGenerator.nextInt(I)I"]
43656 [label="org.apache.commons.math3.random.SynchronizedRandomGenerator.nextLong()J"]
43658 [label="org.apache.commons.math3.random.SynchronizedRandomGenerator.nextBoolean()Z"]
43660 [label="org.apache.commons.math3.random.SynchronizedRandomGenerator.nextFloat()F"]
43662 [label="org.apache.commons.math3.random.SynchronizedRandomGenerator.nextDouble()D"]
43664 [label="org.apache.commons.math3.random.SynchronizedRandomGenerator.nextGaussian()D"]
43674 [label="org.apache.commons.math3.random.UncorrelatedRandomVectorGenerator.<init>([D[DLorg/apache/commons/math3/random/NormalizedRandomGenerator;)V"]
43682 [label="org.apache.commons.math3.random.UncorrelatedRandomVectorGenerator.<init>(ILorg/apache/commons/math3/random/NormalizedRandomGenerator;)V"]
43686 [label="org.apache.commons.math3.random.UncorrelatedRandomVectorGenerator.nextVector()[D"]
43694 [label="org.apache.commons.math3.random.UniformRandomGenerator.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V"]
43698 [label="org.apache.commons.math3.random.UniformRandomGenerator.nextNormalizedDouble()D"]
43706 [label="org.apache.commons.math3.random.UnitSphereRandomVectorGenerator.<init>(ILorg/apache/commons/math3/random/RandomGenerator;)V"]
43747 [label="org.apache.commons.math3.random.ValueServer.<init>()V"]
43751 [label="org.apache.commons.math3.random.ValueServer.<init>(Lorg/apache/commons/math3/random/RandomDataImpl;)V"]
43754 [label="org.apache.commons.math3.random.ValueServer.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V"]
43757 [label="org.apache.commons.math3.random.ValueServer.getNext()D"]
43760 [label="org.apache.commons.math3.random.ValueServer.getNextDigest()D"]
43763 [label="org.apache.commons.math3.random.ValueServer.getNextReplay()D"]
43766 [label="org.apache.commons.math3.random.ValueServer.getNextUniform()D"]
43769 [label="org.apache.commons.math3.random.ValueServer.getNextExponential()D"]
43772 [label="org.apache.commons.math3.random.ValueServer.getNextGaussian()D"]
43778 [label="org.apache.commons.math3.random.ValueServer.fill([D)V"]
43782 [label="org.apache.commons.math3.random.ValueServer.fill(I)[D"]
43785 [label="org.apache.commons.math3.random.ValueServer.computeDistribution()V"]
43787 [label="org.apache.commons.math3.random.ValueServer.computeDistribution(I)V"]
43794 [label="org.apache.commons.math3.stat.descriptive.StatisticalSummary.getMean()D"]
43798 [label="org.apache.commons.math3.stat.descriptive.StatisticalSummary.getStandardDeviation()D"]
43807 [label="org.apache.commons.math3.random.ValueServer.setValuesFileURL(Ljava/lang/String;)V"]
43813 [label="java.net.URL.<init>(Ljava/lang/String;)V"]
43820 [label="org.apache.commons.math3.random.ValueServer.resetReplayFile()V"]
43823 [label="java.io.InputStreamReader.<init>(Ljava/io/InputStream;Ljava/lang/String;)V"]
43825 [label="org.apache.commons.math3.random.ValueServer.closeReplayFile()V"]
43837 [label="org.apache.commons.math3.random.ValueServer.reSeed(J)V"]
43865 [label="org.apache.commons.math3.random.Well1024a.<init>()V"]
43872 [label="org.apache.commons.math3.random.Well1024a.<init>(I)V"]
43876 [label="org.apache.commons.math3.random.Well1024a.<init>([I)V"]
43879 [label="org.apache.commons.math3.random.Well1024a.<init>(J)V"]
43898 [label="org.apache.commons.math3.random.Well19937a.<init>()V"]
43904 [label="org.apache.commons.math3.random.Well19937a.<init>(I)V"]
43907 [label="org.apache.commons.math3.random.Well19937a.<init>([I)V"]
43910 [label="org.apache.commons.math3.random.Well19937a.<init>(J)V"]
43932 [label="org.apache.commons.math3.random.Well19937c.<init>(I)V"]
43935 [label="org.apache.commons.math3.random.Well19937c.<init>([I)V"]
43955 [label="org.apache.commons.math3.random.Well44497a.<init>()V"]
43961 [label="org.apache.commons.math3.random.Well44497a.<init>(I)V"]
43964 [label="org.apache.commons.math3.random.Well44497a.<init>([I)V"]
43967 [label="org.apache.commons.math3.random.Well44497a.<init>(J)V"]
43985 [label="org.apache.commons.math3.random.Well44497b.<init>()V"]
43991 [label="org.apache.commons.math3.random.Well44497b.<init>(I)V"]
43994 [label="org.apache.commons.math3.random.Well44497b.<init>([I)V"]
43997 [label="org.apache.commons.math3.random.Well44497b.<init>(J)V"]
44015 [label="org.apache.commons.math3.random.Well512a.<init>()V"]
44021 [label="org.apache.commons.math3.random.Well512a.<init>(I)V"]
44024 [label="org.apache.commons.math3.random.Well512a.<init>([I)V"]
44027 [label="org.apache.commons.math3.random.Well512a.<init>(J)V"]
44216 [label="org.apache.commons.math3.special.BesselJ.<init>(D)V"]
44220 [label="org.apache.commons.math3.special.BesselJ.value(D)D"]
44223 [label="org.apache.commons.math3.special.BesselJ.value(DD)D"]
44231 [label="org.apache.commons.math3.special.BesselJ.rjBesl(DDI)Lorg/apache/commons/math3/special/BesselJ$BesselJResult;"]
44242 [label="org.apache.commons.math3.special.BesselJ$BesselJResult.<init>([DI)V"]
44246 [label="org.apache.commons.math3.special.BesselJ$BesselJResult.getVals()[D"]
44272 [label="org.apache.commons.math3.special.Beta.<init>()V"]
44278 [label="org.apache.commons.math3.special.Beta.regularizedBeta(DDDDI)D"]
44281 [label="org.apache.commons.math3.special.Beta.regularizedBeta(DDDD)D"]
44287 [label="org.apache.commons.math3.special.Beta.regularizedBeta(DDDI)D"]
44302 [label="org.apache.commons.math3.special.Beta$1.<init>()V"]
44305 [label="org.apache.commons.math3.util.ContinuedFraction.<init>()V"]
44315 [label="org.apache.commons.math3.util.ContinuedFraction.evaluate(DDI)D"]
44317 [label="org.apache.commons.math3.special.Beta.logBeta(DDDI)D"]
44323 [label="org.apache.commons.math3.special.Beta.logGammaSum(DD)D"]
44327 [label="org.apache.commons.math3.special.Gamma.logGamma1p(D)D"]
44329 [label="org.apache.commons.math3.special.Beta.logGammaMinusLogGammaSum(DD)D"]
44333 [label="org.apache.commons.math3.special.Beta.deltaMinusDeltaSum(DD)D"]
44339 [label="org.apache.commons.math3.special.Beta.sumDeltaMinusDeltaSum(DD)D"]
44354 [label="org.apache.commons.math3.special.Erf.<init>()V"]
44358 [label="org.apache.commons.math3.special.Gamma.regularizedGammaP(DDDI)D"]
44461 [label="org.apache.commons.math3.special.Gamma.<init>()V"]
44475 [label="org.apache.commons.math3.special.Gamma.regularizedGammaQ(DD)D"]
44484 [label="org.apache.commons.math3.special.Gamma$1.<init>()V"]
44495 [label="org.apache.commons.math3.special.Gamma.digamma(D)D"]
44502 [label="org.apache.commons.math3.special.Gamma.trigamma(D)D"]
44509 [label="org.apache.commons.math3.special.Gamma.invGamma1pm1(D)D"]
44582 [label="org.apache.commons.math3.stat.clustering.Cluster.<init>(Lorg/apache/commons/math3/stat/clustering/Clusterable;)V"]
44590 [label="org.apache.commons.math3.stat.clustering.Cluster.addPoint(Lorg/apache/commons/math3/stat/clustering/Clusterable;)V"]
44593 [label="org.apache.commons.math3.stat.clustering.Cluster.getPoints()Ljava/util/List;"]
44595 [label="org.apache.commons.math3.stat.clustering.Cluster.getCenter()Lorg/apache/commons/math3/stat/clustering/Clusterable;"]
44604 [label="org.apache.commons.math3.stat.clustering.Clusterable.distanceFrom(Ljava/lang/Object;)D"]
44610 [label="org.apache.commons.math3.stat.clustering.Clusterable.centroidOf(Ljava/util/Collection;)Ljava/lang/Object;"]
44629 [label="org.apache.commons.math3.stat.clustering.DBSCANClusterer$PointStatus.<init>()V"]
44638 [label="org.apache.commons.math3.stat.clustering.DBSCANClusterer.<init>(DI)V"]
44648 [label="org.apache.commons.math3.stat.clustering.DBSCANClusterer.cluster(Ljava/util/Collection;)Ljava/util/List;"]
44674 [label="org.apache.commons.math3.stat.clustering.DBSCANClusterer.getNeighbors(Lorg/apache/commons/math3/stat/clustering/Clusterable;Ljava/util/Collection;)Ljava/util/List;"]
44677 [label="org.apache.commons.math3.stat.clustering.DBSCANClusterer.expandCluster(Lorg/apache/commons/math3/stat/clustering/Cluster;Lorg/apache/commons/math3/stat/clustering/Clusterable;Ljava/util/List;Ljava/util/Collection;Ljava/util/Map;)Lorg/apache/commons/math3/stat/clustering/Cluster;"]
44688 [label="org.apache.commons.math3.stat.clustering.DBSCANClusterer.merge(Ljava/util/List;Ljava/util/List;)Ljava/util/List;"]
44714 [label="org.apache.commons.math3.stat.clustering.EuclideanDoublePoint.<init>([D)V"]
44718 [label="org.apache.commons.math3.stat.clustering.EuclideanDoublePoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math3/stat/clustering/EuclideanDoublePoint;"]
44724 [label="org.apache.commons.math3.stat.clustering.EuclideanDoublePoint.getPoint()[D"]
44727 [label="org.apache.commons.math3.stat.clustering.EuclideanDoublePoint.distanceFrom(Lorg/apache/commons/math3/stat/clustering/EuclideanDoublePoint;)D"]
44730 [label="org.apache.commons.math3.stat.clustering.EuclideanDoublePoint.equals(Ljava/lang/Object;)Z"]
44734 [label="org.apache.commons.math3.stat.clustering.EuclideanDoublePoint.hashCode()I"]
44736 [label="org.apache.commons.math3.stat.clustering.EuclideanDoublePoint.toString()Ljava/lang/String;"]
44749 [label="org.apache.commons.math3.stat.clustering.EuclideanIntegerPoint.<init>([I)V"]
44753 [label="org.apache.commons.math3.stat.clustering.EuclideanIntegerPoint.getPoint()[I"]
44755 [label="org.apache.commons.math3.stat.clustering.EuclideanIntegerPoint.distanceFrom(Lorg/apache/commons/math3/stat/clustering/EuclideanIntegerPoint;)D"]
44758 [label="org.apache.commons.math3.util.MathArrays.distance([I[I)D"]
44761 [label="org.apache.commons.math3.stat.clustering.EuclideanIntegerPoint.centroidOf(Ljava/util/Collection;)Lorg/apache/commons/math3/stat/clustering/EuclideanIntegerPoint;"]
44768 [label="org.apache.commons.math3.stat.clustering.EuclideanIntegerPoint.equals(Ljava/lang/Object;)Z"]
44771 [label="java.util.Arrays.equals([I[I)Z"]
44773 [label="org.apache.commons.math3.stat.clustering.EuclideanIntegerPoint.hashCode()I"]
44775 [label="org.apache.commons.math3.stat.clustering.EuclideanIntegerPoint.toString()Ljava/lang/String;"]
44777 [label="java.util.Arrays.toString([I)Ljava/lang/String;"]
44788 [label="org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer$EmptyClusterStrategy.<init>()V"]
44805 [label="org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer.<init>(Ljava/util/Random;)V"]
44808 [label="org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer.<init>(Ljava/util/Random;Lorg/apache/commons/math3/stat/clustering/KMeansPlusPlusClusterer$EmptyClusterStrategy;)V"]
44816 [label="org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer.cluster(Ljava/util/Collection;III)Ljava/util/List;"]
44825 [label="org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer.cluster(Ljava/util/Collection;II)Ljava/util/List;"]
44833 [label="org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer.chooseInitialCenters(Ljava/util/Collection;ILjava/util/Random;)Ljava/util/List;"]
44835 [label="org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer.assignPointsToClusters(Ljava/util/List;Ljava/util/Collection;[I)I"]
44837 [label="org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer.getPointFromLargestVarianceCluster(Ljava/util/Collection;)Lorg/apache/commons/math3/stat/clustering/Clusterable;"]
44839 [label="org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer.getPointFromLargestNumberCluster(Ljava/util/Collection;)Lorg/apache/commons/math3/stat/clustering/Clusterable;"]
44842 [label="org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer.getFarthestPoint(Ljava/util/Collection;)Lorg/apache/commons/math3/stat/clustering/Clusterable;"]
44853 [label="org.apache.commons.math3.stat.clustering.KMeansPlusPlusClusterer.getNearestCluster(Ljava/util/Collection;Lorg/apache/commons/math3/stat/clustering/Clusterable;)I"]
44892 [label="org.apache.commons.math3.stat.correlation.Covariance.<init>()V"]
44896 [label="org.apache.commons.math3.stat.correlation.Covariance.<init>([[DZ)V"]
44900 [label="org.apache.commons.math3.stat.correlation.Covariance.<init>(Lorg/apache/commons/math3/linear/RealMatrix;Z)V"]
44908 [label="org.apache.commons.math3.stat.correlation.Covariance.checkSufficientData(Lorg/apache/commons/math3/linear/RealMatrix;)V"]
44910 [label="org.apache.commons.math3.stat.correlation.Covariance.computeCovarianceMatrix(Lorg/apache/commons/math3/linear/RealMatrix;Z)Lorg/apache/commons/math3/linear/RealMatrix;"]
44912 [label="org.apache.commons.math3.stat.correlation.Covariance.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V"]
44916 [label="org.apache.commons.math3.stat.correlation.Covariance.getN()I"]
44921 [label="org.apache.commons.math3.stat.descriptive.moment.Variance.<init>(Z)V"]
44923 [label="org.apache.commons.math3.stat.correlation.Covariance.covariance([D[DZ)D"]
44925 [label="org.apache.commons.math3.stat.descriptive.moment.Variance.evaluate([D)D"]
44927 [label="org.apache.commons.math3.stat.correlation.Covariance.computeCovarianceMatrix(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;"]
44930 [label="org.apache.commons.math3.stat.correlation.Covariance.computeCovarianceMatrix([[DZ)Lorg/apache/commons/math3/linear/RealMatrix;"]
44934 [label="org.apache.commons.math3.stat.correlation.Covariance.computeCovarianceMatrix([[D)Lorg/apache/commons/math3/linear/RealMatrix;"]
44945 [label="org.apache.commons.math3.stat.descriptive.moment.Mean.<init>()V"]
44947 [label="org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate([D)D"]
44949 [label="org.apache.commons.math3.stat.correlation.Covariance.covariance([D[D)D"]
44960 [label="org.apache.commons.math3.stat.correlation.KendallsCorrelation.<init>()V"]
44963 [label="org.apache.commons.math3.stat.correlation.KendallsCorrelation.<init>([[D)V"]
44966 [label="org.apache.commons.math3.stat.correlation.KendallsCorrelation.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V"]
44970 [label="org.apache.commons.math3.stat.correlation.KendallsCorrelation.computeCorrelationMatrix(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;"]
44976 [label="org.apache.commons.math3.stat.correlation.KendallsCorrelation.correlation([D[D)D"]
44978 [label="org.apache.commons.math3.stat.correlation.KendallsCorrelation.computeCorrelationMatrix([[D)Lorg/apache/commons/math3/linear/RealMatrix;"]
44984 [label="org.apache.commons.math3.stat.correlation.KendallsCorrelation.sum(J)J"]
44990 [label="org.apache.commons.math3.stat.correlation.KendallsCorrelation$1.<init>()V"]
44993 [label="org.apache.commons.math3.stat.correlation.KendallsCorrelation$1.compare(Lorg/apache/commons/math3/util/Pair;Lorg/apache/commons/math3/util/Pair;)I"]
44997 [label="java.lang.Double.equals(Ljava/lang/Object;)Z"]
45007 [label="org.apache.commons.math3.stat.correlation.PearsonsCorrelation.<init>()V"]
45011 [label="org.apache.commons.math3.stat.correlation.PearsonsCorrelation.<init>([[D)V"]
45014 [label="org.apache.commons.math3.stat.correlation.PearsonsCorrelation.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V"]
45018 [label="org.apache.commons.math3.stat.correlation.PearsonsCorrelation.computeCorrelationMatrix(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;"]
45020 [label="org.apache.commons.math3.stat.correlation.PearsonsCorrelation.<init>(Lorg/apache/commons/math3/stat/correlation/Covariance;)V"]
45025 [label="org.apache.commons.math3.stat.correlation.PearsonsCorrelation.covarianceToCorrelation(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;"]
45027 [label="org.apache.commons.math3.stat.correlation.PearsonsCorrelation.<init>(Lorg/apache/commons/math3/linear/RealMatrix;I)V"]
45031 [label="org.apache.commons.math3.stat.correlation.PearsonsCorrelation.getCorrelationMatrix()Lorg/apache/commons/math3/linear/RealMatrix;"]
45033 [label="org.apache.commons.math3.stat.correlation.PearsonsCorrelation.getCorrelationStandardErrors()Lorg/apache/commons/math3/linear/RealMatrix;"]
45035 [label="org.apache.commons.math3.stat.correlation.PearsonsCorrelation.getCorrelationPValues()Lorg/apache/commons/math3/linear/RealMatrix;"]
45041 [label="org.apache.commons.math3.stat.correlation.PearsonsCorrelation.checkSufficientData(Lorg/apache/commons/math3/linear/RealMatrix;)V"]
45043 [label="org.apache.commons.math3.stat.correlation.PearsonsCorrelation.correlation([D[D)D"]
45045 [label="org.apache.commons.math3.stat.correlation.PearsonsCorrelation.computeCorrelationMatrix([[D)Lorg/apache/commons/math3/linear/RealMatrix;"]
45054 [label="org.apache.commons.math3.stat.regression.SimpleRegression.<init>()V"]
45057 [label="org.apache.commons.math3.stat.regression.SimpleRegression.addData(DD)V"]
45059 [label="org.apache.commons.math3.stat.regression.SimpleRegression.getR()D"]
45078 [label="org.apache.commons.math3.stat.correlation.SpearmansCorrelation.<init>()V"]
45080 [label="org.apache.commons.math3.stat.correlation.SpearmansCorrelation.<init>(Lorg/apache/commons/math3/stat/ranking/RankingAlgorithm;)V"]
45085 [label="org.apache.commons.math3.stat.ranking.NaturalRanking.<init>()V"]
45092 [label="org.apache.commons.math3.stat.correlation.SpearmansCorrelation.<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V"]
45095 [label="org.apache.commons.math3.stat.correlation.SpearmansCorrelation.<init>(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/stat/ranking/RankingAlgorithm;)V"]
45100 [label="org.apache.commons.math3.stat.correlation.SpearmansCorrelation.rankTransform(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;"]
45102 [label="org.apache.commons.math3.stat.correlation.SpearmansCorrelation.getCorrelationMatrix()Lorg/apache/commons/math3/linear/RealMatrix;"]
45107 [label="org.apache.commons.math3.stat.correlation.SpearmansCorrelation.computeCorrelationMatrix(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;"]
45111 [label="org.apache.commons.math3.stat.correlation.SpearmansCorrelation.computeCorrelationMatrix([[D)Lorg/apache/commons/math3/linear/RealMatrix;"]
45115 [label="org.apache.commons.math3.stat.correlation.SpearmansCorrelation.correlation([D[D)D"]
45121 [label="org.apache.commons.math3.stat.ranking.NaturalRanking.getNanStrategy()Lorg/apache/commons/math3/stat/ranking/NaNStrategy;"]
45123 [label="org.apache.commons.math3.stat.correlation.SpearmansCorrelation.getNaNPositions([D)Ljava/util/List;"]
45125 [label="org.apache.commons.math3.stat.correlation.SpearmansCorrelation.removeValues([DLjava/util/Set;)[D"]
45127 [label="org.apache.commons.math3.stat.ranking.RankingAlgorithm.rank([D)[D"]
45148 [label="org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance.<init>()V"]
45150 [label="org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance.<init>(Z)V"]
45159 [label="org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance.increment(DD)V"]
45163 [label="org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance.append(Lorg/apache/commons/math3/stat/correlation/StorelessBivariateCovariance;)V"]
45170 [label="org.apache.commons.math3.stat.correlation.StorelessBivariateCovariance.getResult()D"]
45179 [label="org.apache.commons.math3.stat.correlation.StorelessCovariance.<init>(I)V"]
45182 [label="org.apache.commons.math3.stat.correlation.StorelessCovariance.<init>(IZ)V"]
45190 [label="org.apache.commons.math3.stat.correlation.StorelessCovariance.initializeMatrix(Z)V"]
45194 [label="org.apache.commons.math3.stat.correlation.StorelessCovariance.setElement(IILorg/apache/commons/math3/stat/correlation/StorelessBivariateCovariance;)V"]
45196 [label="org.apache.commons.math3.stat.correlation.StorelessCovariance.indexOf(II)I"]
45200 [label="org.apache.commons.math3.stat.correlation.StorelessCovariance.getElement(II)Lorg/apache/commons/math3/stat/correlation/StorelessBivariateCovariance;"]
45209 [label="org.apache.commons.math3.stat.correlation.StorelessCovariance.getCovariance(II)D"]
45215 [label="org.apache.commons.math3.stat.correlation.StorelessCovariance.increment([D)V"]
45219 [label="org.apache.commons.math3.stat.correlation.StorelessCovariance.append(Lorg/apache/commons/math3/stat/correlation/StorelessCovariance;)V"]
45225 [label="org.apache.commons.math3.stat.correlation.StorelessCovariance.getCovarianceMatrix()Lorg/apache/commons/math3/linear/RealMatrix;"]
45227 [label="org.apache.commons.math3.stat.correlation.StorelessCovariance.getData()[[D"]
45230 [label="org.apache.commons.math3.stat.correlation.StorelessCovariance.getN()I"]
45258 [label="org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.<init>()V"]
45259 [label="org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.<init>()V"]
45263 [label="org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate([DII)D"]
45269 [label="org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.test([DII)Z"]
45271 [label="org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.clear()V"]
45273 [label="org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.incrementAll([DII)V"]
45275 [label="org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.getResult()D"]
45281 [label="org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.increment(D)V"]
45284 [label="org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.incrementAll([D)V"]
45292 [label="org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.equals(Ljava/lang/Object;)Z"]
45297 [label="org.apache.commons.math3.util.Precision.equalsIncludingNaN(DD)Z"]
45299 [label="org.apache.commons.math3.util.Precision.equalsIncludingNaN(FF)Z"]
45301 [label="org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic.getN()J"]
45303 [label="org.apache.commons.math3.stat.descriptive.AbstractStorelessUnivariateStatistic.hashCode()I"]
45311 [label="org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.setData([D)V"]
45315 [label="org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.getData()[D"]
45317 [label="org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.getDataRef()[D"]
45319 [label="org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.setData([DII)V"]
45326 [label="org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.evaluate()D"]
45328 [label="org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.evaluate([D)D"]
45332 [label="org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.evaluate([DII)D"]
45344 [label="org.apache.commons.math3.util.MathArrays.verifyValues([DIIZ)Z"]
45346 [label="org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.test([DIIZ)Z"]
45352 [label="org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.test([D[DII)Z"]
45358 [label="org.apache.commons.math3.util.MathArrays.verifyValues([D[DIIZ)Z"]
45360 [label="org.apache.commons.math3.stat.descriptive.AbstractUnivariateStatistic.test([D[DIIZ)Z"]
45375 [label="org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics.<init>()V"]
45377 [label="org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics.<init>(Lorg/apache/commons/math3/stat/descriptive/SummaryStatistics;)V"]
45381 [label="org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics.<init>(Lorg/apache/commons/math3/stat/descriptive/SummaryStatistics;Lorg/apache/commons/math3/stat/descriptive/SummaryStatistics;)V"]
45383 [label="org.apache.commons.math3.stat.descriptive.SummaryStatistics.<init>(Lorg/apache/commons/math3/stat/descriptive/SummaryStatistics;)V"]
45390 [label="org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics.getMax()D"]
45392 [label="org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics.getMean()D"]
45394 [label="org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics.getMin()D"]
45396 [label="org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics.getN()J"]
45398 [label="org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics.getStandardDeviation()D"]
45400 [label="org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics.getSum()D"]
45402 [label="org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSum()D"]
45404 [label="org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics.getVariance()D"]
45406 [label="org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics.getSumOfLogs()D"]
45408 [label="org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSumOfLogs()D"]
45410 [label="org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics.getGeometricMean()D"]
45412 [label="org.apache.commons.math3.stat.descriptive.SummaryStatistics.getGeometricMean()D"]
45414 [label="org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics.getSumsq()D"]
45416 [label="org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSumsq()D"]
45418 [label="org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics.getSecondMoment()D"]
45420 [label="org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSecondMoment()D"]
45422 [label="org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics.getSummary()Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;"]
45427 [label="org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.<init>(DDJDDD)V"]
45435 [label="org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics.createContributingStatistics()Lorg/apache/commons/math3/stat/descriptive/SummaryStatistics;"]
45440 [label="org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics$AggregatingSummaryStatistics.<init>(Lorg/apache/commons/math3/stat/descriptive/SummaryStatistics;)V"]
45442 [label="org.apache.commons.math3.stat.descriptive.SummaryStatistics.copy(Lorg/apache/commons/math3/stat/descriptive/SummaryStatistics;Lorg/apache/commons/math3/stat/descriptive/SummaryStatistics;)V"]
45444 [label="org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics.aggregate(Ljava/util/Collection;)Lorg/apache/commons/math3/stat/descriptive/StatisticalSummaryValues;"]
45453 [label="org.apache.commons.math3.stat.descriptive.StatisticalSummary.getN()J"]
45455 [label="org.apache.commons.math3.stat.descriptive.StatisticalSummary.getMin()D"]
45457 [label="org.apache.commons.math3.stat.descriptive.StatisticalSummary.getSum()D"]
45459 [label="org.apache.commons.math3.stat.descriptive.StatisticalSummary.getMax()D"]
45461 [label="org.apache.commons.math3.stat.descriptive.StatisticalSummary.getVariance()D"]
45471 [label="org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics$AggregatingSummaryStatistics.addValue(D)V"]
45474 [label="org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics$AggregatingSummaryStatistics.equals(Ljava/lang/Object;)Z"]
45477 [label="org.apache.commons.math3.stat.descriptive.SummaryStatistics.equals(Ljava/lang/Object;)Z"]
45479 [label="org.apache.commons.math3.stat.descriptive.AggregateSummaryStatistics$AggregatingSummaryStatistics.hashCode()I"]
45481 [label="org.apache.commons.math3.stat.descriptive.SummaryStatistics.hashCode()I"]
45540 [label="org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.<init>()V"]
45542 [label="org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.<init>(I)V"]
45545 [label="org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.setWindowSize(I)V"]
45547 [label="org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.<init>([D)V"]
45551 [label="org.apache.commons.math3.util.ResizableDoubleArray.<init>([D)V"]
45553 [label="org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.<init>(Lorg/apache/commons/math3/stat/descriptive/DescriptiveStatistics;)V"]
45558 [label="org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.copy(Lorg/apache/commons/math3/stat/descriptive/DescriptiveStatistics;Lorg/apache/commons/math3/stat/descriptive/DescriptiveStatistics;)V"]
45560 [label="org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.addValue(D)V"]
45564 [label="org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getN()J"]
45566 [label="org.apache.commons.math3.util.ResizableDoubleArray.addElementRolling(D)D"]
45568 [label="org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.removeMostRecentValue()V"]
45570 [label="org.apache.commons.math3.util.ResizableDoubleArray.discardMostRecentElements(I)V"]
45572 [label="org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.replaceMostRecentValue(D)D"]
45575 [label="org.apache.commons.math3.util.ResizableDoubleArray.substituteMostRecentElement(D)D"]
45577 [label="org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getMean()D"]
45579 [label="org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.apply(Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;)D"]
45582 [label="org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getGeometricMean()D"]
45585 [label="org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getVariance()D"]
45588 [label="org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getPopulationVariance()D"]
45590 [label="org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getStandardDeviation()D"]
45593 [label="org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getQuadraticMean()D"]
45595 [label="org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getSumsq()D"]
45597 [label="org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getSkewness()D"]
45600 [label="org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getKurtosis()D"]
45603 [label="org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getMax()D"]
45606 [label="org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getMin()D"]
45610 [label="org.apache.commons.math3.util.ResizableDoubleArray.getNumElements()I"]
45612 [label="org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getSum()D"]
45617 [label="org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.clear()V"]
45619 [label="org.apache.commons.math3.util.ResizableDoubleArray.clear()V"]
45621 [label="org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getWindowSize()I"]
45626 [label="org.apache.commons.math3.util.ResizableDoubleArray.discardFrontElements(I)V"]
45628 [label="org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getValues()[D"]
45630 [label="org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getSortedValues()[D"]
45633 [label="org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getElement(I)D"]
45636 [label="org.apache.commons.math3.util.ResizableDoubleArray.getElement(I)D"]
45638 [label="org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.getPercentile(D)D"]
45642 [label="org.apache.commons.math3.stat.descriptive.rank.Percentile.setQuantile(D)V"]
45644 [label="java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;"]
45646 [label="java.lang.Class.getMethod(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;"]
45659 [label="java.lang.reflect.InvocationTargetException.getCause()Ljava/lang/Throwable;"]
45661 [label="org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.toString()Ljava/lang/String;"]
45663 [label="java.lang.StringBuilder.append(J)Ljava/lang/StringBuilder;"]
45674 [label="org.apache.commons.math3.util.ResizableDoubleArray.compute(Lorg/apache/commons/math3/util/MathArrays$Function;)D"]
45704 [label="org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.setPercentileImpl(Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;)V"]
45707 [label="java.lang.IllegalArgumentException.<init>(Ljava/lang/Throwable;)V"]
45729 [label="org.apache.commons.math3.stat.descriptive.DescriptiveStatistics.copy()Lorg/apache/commons/math3/stat/descriptive/DescriptiveStatistics;"]
45735 [label="org.apache.commons.math3.util.ResizableDoubleArray.copy()Lorg/apache/commons/math3/util/ResizableDoubleArray;"]
45737 [label="org.apache.commons.math3.stat.descriptive.UnivariateStatistic.copy()Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;"]
45767 [label="org.apache.commons.math3.stat.descriptive.moment.FirstMoment.<init>()V"]
45774 [label="org.apache.commons.math3.stat.descriptive.moment.FirstMoment.<init>(Lorg/apache/commons/math3/stat/descriptive/moment/FirstMoment;)V"]
45779 [label="org.apache.commons.math3.stat.descriptive.moment.FirstMoment.copy(Lorg/apache/commons/math3/stat/descriptive/moment/FirstMoment;Lorg/apache/commons/math3/stat/descriptive/moment/FirstMoment;)V"]
45781 [label="org.apache.commons.math3.stat.descriptive.moment.FirstMoment.increment(D)V"]
45784 [label="org.apache.commons.math3.stat.descriptive.moment.FirstMoment.clear()V"]
45788 [label="org.apache.commons.math3.stat.descriptive.moment.FirstMoment.getN()J"]
45790 [label="org.apache.commons.math3.stat.descriptive.moment.FirstMoment.copy()Lorg/apache/commons/math3/stat/descriptive/moment/FirstMoment;"]
45807 [label="org.apache.commons.math3.stat.descriptive.moment.FourthMoment.<init>()V"]
45809 [label="org.apache.commons.math3.stat.descriptive.moment.ThirdMoment.<init>()V"]
45812 [label="org.apache.commons.math3.stat.descriptive.moment.FourthMoment.<init>(Lorg/apache/commons/math3/stat/descriptive/moment/FourthMoment;)V"]
45817 [label="org.apache.commons.math3.stat.descriptive.moment.FourthMoment.copy(Lorg/apache/commons/math3/stat/descriptive/moment/FourthMoment;Lorg/apache/commons/math3/stat/descriptive/moment/FourthMoment;)V"]
45819 [label="org.apache.commons.math3.stat.descriptive.moment.FourthMoment.increment(D)V"]
45826 [label="org.apache.commons.math3.stat.descriptive.moment.ThirdMoment.increment(D)V"]
45830 [label="org.apache.commons.math3.stat.descriptive.moment.FourthMoment.getResult()D"]
45832 [label="org.apache.commons.math3.stat.descriptive.moment.FourthMoment.clear()V"]
45834 [label="org.apache.commons.math3.stat.descriptive.moment.ThirdMoment.clear()V"]
45836 [label="org.apache.commons.math3.stat.descriptive.moment.FourthMoment.copy()Lorg/apache/commons/math3/stat/descriptive/moment/FourthMoment;"]
45842 [label="org.apache.commons.math3.stat.descriptive.moment.ThirdMoment.copy(Lorg/apache/commons/math3/stat/descriptive/moment/ThirdMoment;Lorg/apache/commons/math3/stat/descriptive/moment/ThirdMoment;)V"]
45849 [label="org.apache.commons.math3.stat.descriptive.moment.GeometricMean.<init>()V"]
45855 [label="org.apache.commons.math3.stat.descriptive.summary.SumOfLogs.<init>()V"]
45857 [label="org.apache.commons.math3.stat.descriptive.moment.GeometricMean.<init>(Lorg/apache/commons/math3/stat/descriptive/moment/GeometricMean;)V"]
45860 [label="org.apache.commons.math3.stat.descriptive.moment.GeometricMean.copy(Lorg/apache/commons/math3/stat/descriptive/moment/GeometricMean;Lorg/apache/commons/math3/stat/descriptive/moment/GeometricMean;)V"]
45862 [label="org.apache.commons.math3.stat.descriptive.moment.GeometricMean.<init>(Lorg/apache/commons/math3/stat/descriptive/summary/SumOfLogs;)V"]
45865 [label="org.apache.commons.math3.stat.descriptive.moment.GeometricMean.copy()Lorg/apache/commons/math3/stat/descriptive/moment/GeometricMean;"]
45868 [label="org.apache.commons.math3.stat.descriptive.moment.GeometricMean.increment(D)V"]
45871 [label="org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic.increment(D)V"]
45873 [label="org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getResult()D"]
45875 [label="org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic.getResult()D"]
45877 [label="org.apache.commons.math3.stat.descriptive.moment.GeometricMean.clear()V"]
45879 [label="org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic.clear()V"]
45881 [label="org.apache.commons.math3.stat.descriptive.moment.GeometricMean.evaluate([DII)D"]
45886 [label="org.apache.commons.math3.stat.descriptive.UnivariateStatistic.evaluate([DII)D"]
45888 [label="org.apache.commons.math3.stat.descriptive.moment.GeometricMean.getN()J"]
45890 [label="org.apache.commons.math3.stat.descriptive.moment.GeometricMean.setSumLogImpl(Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V"]
45893 [label="org.apache.commons.math3.stat.descriptive.moment.GeometricMean.checkEmpty()V"]
45900 [label="org.apache.commons.math3.stat.descriptive.StorelessUnivariateStatistic.copy()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;"]
45912 [label="org.apache.commons.math3.stat.descriptive.moment.Kurtosis.<init>()V"]
45916 [label="org.apache.commons.math3.stat.descriptive.moment.Kurtosis.<init>(Lorg/apache/commons/math3/stat/descriptive/moment/FourthMoment;)V"]
45919 [label="org.apache.commons.math3.stat.descriptive.moment.Kurtosis.<init>(Lorg/apache/commons/math3/stat/descriptive/moment/Kurtosis;)V"]
45922 [label="org.apache.commons.math3.stat.descriptive.moment.Kurtosis.copy(Lorg/apache/commons/math3/stat/descriptive/moment/Kurtosis;Lorg/apache/commons/math3/stat/descriptive/moment/Kurtosis;)V"]
45924 [label="org.apache.commons.math3.stat.descriptive.moment.Kurtosis.increment(D)V"]
45928 [label="org.apache.commons.math3.stat.descriptive.moment.Kurtosis.getResult()D"]
45932 [label="org.apache.commons.math3.stat.descriptive.moment.Kurtosis.clear()V"]
45935 [label="org.apache.commons.math3.stat.descriptive.moment.Kurtosis.getN()J"]
45937 [label="org.apache.commons.math3.stat.descriptive.moment.Kurtosis.evaluate([DII)D"]
45945 [label="org.apache.commons.math3.stat.descriptive.moment.Kurtosis.copy()Lorg/apache/commons/math3/stat/descriptive/moment/Kurtosis;"]
45965 [label="org.apache.commons.math3.stat.descriptive.moment.Mean.<init>(Lorg/apache/commons/math3/stat/descriptive/moment/FirstMoment;)V"]
45968 [label="org.apache.commons.math3.stat.descriptive.moment.Mean.<init>(Lorg/apache/commons/math3/stat/descriptive/moment/Mean;)V"]
45971 [label="org.apache.commons.math3.stat.descriptive.moment.Mean.copy(Lorg/apache/commons/math3/stat/descriptive/moment/Mean;Lorg/apache/commons/math3/stat/descriptive/moment/Mean;)V"]
45973 [label="org.apache.commons.math3.stat.descriptive.moment.Mean.increment(D)V"]
45977 [label="org.apache.commons.math3.stat.descriptive.moment.Mean.clear()V"]
45980 [label="org.apache.commons.math3.stat.descriptive.moment.Mean.getResult()D"]
45982 [label="org.apache.commons.math3.stat.descriptive.moment.Mean.getN()J"]
45984 [label="org.apache.commons.math3.stat.descriptive.moment.Mean.evaluate([DII)D"]
45989 [label="org.apache.commons.math3.stat.descriptive.summary.Sum.<init>()V"]
45991 [label="org.apache.commons.math3.stat.descriptive.summary.Sum.evaluate([DII)D"]
45993 [label="org.apache.commons.math3.stat.descriptive.moment.Mean.evaluate([D[DII)D"]
46000 [label="org.apache.commons.math3.stat.descriptive.summary.Sum.evaluate([D[DII)D"]
46002 [label="org.apache.commons.math3.stat.descriptive.moment.Mean.evaluate([D[D)D"]
46007 [label="org.apache.commons.math3.stat.descriptive.moment.Mean.copy()Lorg/apache/commons/math3/stat/descriptive/moment/Mean;"]
46018 [label="org.apache.commons.math3.stat.descriptive.moment.SecondMoment.<init>()V"]
46020 [label="org.apache.commons.math3.stat.descriptive.moment.SecondMoment.<init>(Lorg/apache/commons/math3/stat/descriptive/moment/SecondMoment;)V"]
46026 [label="org.apache.commons.math3.stat.descriptive.moment.SecondMoment.increment(D)V"]
46029 [label="org.apache.commons.math3.stat.descriptive.moment.SecondMoment.clear()V"]
46031 [label="org.apache.commons.math3.stat.descriptive.moment.SecondMoment.getResult()D"]
46033 [label="org.apache.commons.math3.stat.descriptive.moment.SecondMoment.copy()Lorg/apache/commons/math3/stat/descriptive/moment/SecondMoment;"]
46036 [label="org.apache.commons.math3.stat.descriptive.moment.SecondMoment.copy(Lorg/apache/commons/math3/stat/descriptive/moment/SecondMoment;Lorg/apache/commons/math3/stat/descriptive/moment/SecondMoment;)V"]
46060 [label="org.apache.commons.math3.stat.descriptive.moment.SemiVariance.<init>()V"]
46062 [label="org.apache.commons.math3.stat.descriptive.moment.SemiVariance.<init>(Z)V"]
46066 [label="org.apache.commons.math3.stat.descriptive.moment.SemiVariance.<init>(Lorg/apache/commons/math3/stat/descriptive/moment/SemiVariance$Direction;)V"]
46070 [label="org.apache.commons.math3.stat.descriptive.moment.SemiVariance.<init>(ZLorg/apache/commons/math3/stat/descriptive/moment/SemiVariance$Direction;)V"]
46074 [label="org.apache.commons.math3.stat.descriptive.moment.SemiVariance.<init>(Lorg/apache/commons/math3/stat/descriptive/moment/SemiVariance;)V"]
46079 [label="org.apache.commons.math3.stat.descriptive.moment.SemiVariance.copy(Lorg/apache/commons/math3/stat/descriptive/moment/SemiVariance;Lorg/apache/commons/math3/stat/descriptive/moment/SemiVariance;)V"]
46081 [label="org.apache.commons.math3.stat.descriptive.moment.SemiVariance.copy()Lorg/apache/commons/math3/stat/descriptive/moment/SemiVariance;"]
46087 [label="org.apache.commons.math3.stat.descriptive.moment.SemiVariance.evaluate([DII)D"]
46093 [label="org.apache.commons.math3.stat.descriptive.moment.SemiVariance.evaluate([DDLorg/apache/commons/math3/stat/descriptive/moment/SemiVariance$Direction;ZII)D"]
46095 [label="org.apache.commons.math3.stat.descriptive.moment.SemiVariance.evaluate([DLorg/apache/commons/math3/stat/descriptive/moment/SemiVariance$Direction;)D"]
46099 [label="org.apache.commons.math3.stat.descriptive.moment.SemiVariance.evaluate([DD)D"]
46103 [label="org.apache.commons.math3.stat.descriptive.moment.SemiVariance.evaluate([DDLorg/apache/commons/math3/stat/descriptive/moment/SemiVariance$Direction;)D"]
46115 [label="org.apache.commons.math3.stat.descriptive.moment.SemiVariance$Direction.getDirection()Z"]
46135 [label="org.apache.commons.math3.stat.descriptive.moment.SemiVariance$Direction.<init>(Z)V"]
46151 [label="org.apache.commons.math3.stat.descriptive.moment.Skewness.<init>()V"]
46155 [label="org.apache.commons.math3.stat.descriptive.moment.Skewness.<init>(Lorg/apache/commons/math3/stat/descriptive/moment/ThirdMoment;)V"]
46158 [label="org.apache.commons.math3.stat.descriptive.moment.Skewness.<init>(Lorg/apache/commons/math3/stat/descriptive/moment/Skewness;)V"]
46161 [label="org.apache.commons.math3.stat.descriptive.moment.Skewness.copy(Lorg/apache/commons/math3/stat/descriptive/moment/Skewness;Lorg/apache/commons/math3/stat/descriptive/moment/Skewness;)V"]
46163 [label="org.apache.commons.math3.stat.descriptive.moment.Skewness.increment(D)V"]
46166 [label="org.apache.commons.math3.stat.descriptive.moment.Skewness.getResult()D"]
46168 [label="org.apache.commons.math3.stat.descriptive.moment.Skewness.getN()J"]
46170 [label="org.apache.commons.math3.stat.descriptive.moment.Skewness.clear()V"]
46172 [label="org.apache.commons.math3.stat.descriptive.moment.Skewness.evaluate([DII)D"]
46177 [label="org.apache.commons.math3.stat.descriptive.moment.Skewness.copy()Lorg/apache/commons/math3/stat/descriptive/moment/Skewness;"]
46183 [label="org.apache.commons.math3.stat.descriptive.moment.ThirdMoment.<init>(Lorg/apache/commons/math3/stat/descriptive/moment/ThirdMoment;)V"]
46185 [label="org.apache.commons.math3.stat.descriptive.moment.ThirdMoment.copy()Lorg/apache/commons/math3/stat/descriptive/moment/ThirdMoment;"]
46193 [label="org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.<init>()V"]
46196 [label="org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.<init>(Lorg/apache/commons/math3/stat/descriptive/moment/SecondMoment;)V"]
46199 [label="org.apache.commons.math3.stat.descriptive.moment.Variance.<init>(Lorg/apache/commons/math3/stat/descriptive/moment/SecondMoment;)V"]
46201 [label="org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.<init>(Lorg/apache/commons/math3/stat/descriptive/moment/StandardDeviation;)V"]
46206 [label="org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.copy(Lorg/apache/commons/math3/stat/descriptive/moment/StandardDeviation;Lorg/apache/commons/math3/stat/descriptive/moment/StandardDeviation;)V"]
46208 [label="org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.<init>(Z)V"]
46211 [label="org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.<init>(ZLorg/apache/commons/math3/stat/descriptive/moment/SecondMoment;)V"]
46215 [label="org.apache.commons.math3.stat.descriptive.moment.Variance.<init>(ZLorg/apache/commons/math3/stat/descriptive/moment/SecondMoment;)V"]
46217 [label="org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.increment(D)V"]
46220 [label="org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.getN()J"]
46222 [label="org.apache.commons.math3.stat.descriptive.moment.Variance.getN()J"]
46224 [label="org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.getResult()D"]
46226 [label="org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.clear()V"]
46228 [label="org.apache.commons.math3.stat.descriptive.moment.Variance.clear()V"]
46230 [label="org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.evaluate([D)D"]
46233 [label="org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.evaluate([DII)D"]
46238 [label="org.apache.commons.math3.stat.descriptive.moment.Variance.evaluate([DII)D"]
46240 [label="org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.evaluate([DDII)D"]
46246 [label="org.apache.commons.math3.stat.descriptive.moment.Variance.evaluate([DDII)D"]
46248 [label="org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.evaluate([DD)D"]
46252 [label="org.apache.commons.math3.stat.descriptive.moment.Variance.evaluate([DD)D"]
46254 [label="org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.isBiasCorrected()Z"]
46256 [label="org.apache.commons.math3.stat.descriptive.moment.Variance.isBiasCorrected()Z"]
46258 [label="org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.setBiasCorrected(Z)V"]
46261 [label="org.apache.commons.math3.stat.descriptive.moment.Variance.setBiasCorrected(Z)V"]
46263 [label="org.apache.commons.math3.stat.descriptive.moment.StandardDeviation.copy()Lorg/apache/commons/math3/stat/descriptive/moment/StandardDeviation;"]
46269 [label="org.apache.commons.math3.stat.descriptive.moment.Variance.copy()Lorg/apache/commons/math3/stat/descriptive/moment/Variance;"]
46308 [label="org.apache.commons.math3.stat.descriptive.moment.Variance.<init>(Lorg/apache/commons/math3/stat/descriptive/moment/Variance;)V"]
46311 [label="org.apache.commons.math3.stat.descriptive.moment.Variance.copy(Lorg/apache/commons/math3/stat/descriptive/moment/Variance;Lorg/apache/commons/math3/stat/descriptive/moment/Variance;)V"]
46324 [label="org.apache.commons.math3.stat.descriptive.moment.Variance.evaluate([D[DII)D"]
46330 [label="org.apache.commons.math3.stat.descriptive.moment.Variance.evaluate([D[DDII)D"]
46332 [label="org.apache.commons.math3.stat.descriptive.moment.Variance.evaluate([D[D)D"]
46351 [label="org.apache.commons.math3.stat.descriptive.moment.Variance.evaluate([D[DD)D"]
46376 [label="org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance.<init>(IZ)V"]
46384 [label="org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance.increment([D)V"]
46387 [label="org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance.getResult()Lorg/apache/commons/math3/linear/RealMatrix;"]
46391 [label="org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance.clear()V"]
46393 [label="org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance.hashCode()I"]
46395 [label="org.apache.commons.math3.stat.descriptive.moment.VectorialCovariance.equals(Ljava/lang/Object;)Z"]
46407 [label="org.apache.commons.math3.stat.descriptive.moment.VectorialMean.<init>(I)V"]
46411 [label="org.apache.commons.math3.stat.descriptive.moment.VectorialMean.increment([D)V"]
46415 [label="org.apache.commons.math3.stat.descriptive.moment.VectorialMean.getResult()[D"]
46418 [label="org.apache.commons.math3.stat.descriptive.moment.VectorialMean.getN()J"]
46421 [label="org.apache.commons.math3.stat.descriptive.moment.VectorialMean.hashCode()I"]
46423 [label="java.util.Arrays.hashCode([Ljava/lang/Object;)I"]
46425 [label="org.apache.commons.math3.stat.descriptive.moment.VectorialMean.equals(Ljava/lang/Object;)Z"]
46430 [label="java.util.Arrays.equals([Ljava/lang/Object;[Ljava/lang/Object;)Z"]
46460 [label="org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.<init>(IZ)V"]
46472 [label="org.apache.commons.math3.stat.descriptive.summary.SumOfSquares.<init>()V"]
46474 [label="org.apache.commons.math3.stat.descriptive.rank.Min.<init>()V"]
46476 [label="org.apache.commons.math3.stat.descriptive.rank.Max.<init>()V"]
46480 [label="org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.addValue([D)V"]
46483 [label="org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.checkDimension(I)V"]
46487 [label="org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getDimension()I"]
46489 [label="org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getN()J"]
46491 [label="org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getResults([Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)[D"]
46494 [label="org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getSum()[D"]
46497 [label="org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getSumSq()[D"]
46499 [label="org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getSumLog()[D"]
46501 [label="org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getMean()[D"]
46503 [label="org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getStandardDeviation()[D"]
46507 [label="org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getCovariance()Lorg/apache/commons/math3/linear/RealMatrix;"]
46509 [label="org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getMax()[D"]
46511 [label="org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getMin()[D"]
46513 [label="org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getGeometricMean()[D"]
46515 [label="org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.toString()Ljava/lang/String;"]
46517 [label="java.lang.System.getProperty(Ljava/lang/String;)Ljava/lang/String;"]
46519 [label="org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.append(Ljava/lang/StringBuilder;[DLjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V"]
46535 [label="org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.clear()V"]
46538 [label="org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.equals(Ljava/lang/Object;)Z"]
46543 [label="org.apache.commons.math3.util.MathArrays.equalsIncludingNaN([D[D)Z"]
46546 [label="org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.hashCode()I"]
46548 [label="org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.setImpl([Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;[Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V"]
46553 [label="org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.checkEmpty()V"]
46555 [label="org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getSumImpl()[Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;"]
46557 [label="org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.setSumImpl([Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V"]
46561 [label="org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getSumsqImpl()[Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;"]
46563 [label="org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.setSumsqImpl([Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V"]
46566 [label="org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getMinImpl()[Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;"]
46568 [label="org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.setMinImpl([Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V"]
46571 [label="org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getMaxImpl()[Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;"]
46573 [label="org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.setMaxImpl([Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V"]
46576 [label="org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getSumLogImpl()[Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;"]
46578 [label="org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.setSumLogImpl([Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V"]
46581 [label="org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getGeoMeanImpl()[Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;"]
46583 [label="org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.setGeoMeanImpl([Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V"]
46586 [label="org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.getMeanImpl()[Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;"]
46588 [label="org.apache.commons.math3.stat.descriptive.MultivariateSummaryStatistics.setMeanImpl([Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V"]
46612 [label="org.apache.commons.math3.stat.descriptive.rank.Max.<init>(Lorg/apache/commons/math3/stat/descriptive/rank/Max;)V"]
46615 [label="org.apache.commons.math3.stat.descriptive.rank.Max.copy(Lorg/apache/commons/math3/stat/descriptive/rank/Max;Lorg/apache/commons/math3/stat/descriptive/rank/Max;)V"]
46617 [label="org.apache.commons.math3.stat.descriptive.rank.Max.increment(D)V"]
46626 [label="org.apache.commons.math3.stat.descriptive.rank.Max.evaluate([DII)D"]
46631 [label="org.apache.commons.math3.stat.descriptive.rank.Max.copy()Lorg/apache/commons/math3/stat/descriptive/rank/Max;"]
46642 [label="org.apache.commons.math3.stat.descriptive.rank.Median.<init>()V"]
46644 [label="org.apache.commons.math3.stat.descriptive.rank.Percentile.<init>(D)V"]
46647 [label="org.apache.commons.math3.stat.descriptive.rank.Median.<init>(Lorg/apache/commons/math3/stat/descriptive/rank/Median;)V"]
46652 [label="org.apache.commons.math3.stat.descriptive.rank.Percentile.<init>(Lorg/apache/commons/math3/stat/descriptive/rank/Percentile;)V"]
46654 [label="org.apache.commons.math3.stat.descriptive.rank.Median.<init>(Lorg/apache/commons/math3/stat/descriptive/rank/Percentile$EstimationType;Lorg/apache/commons/math3/stat/ranking/NaNStrategy;Lorg/apache/commons/math3/util/KthSelector;)V"]
46668 [label="org.apache.commons.math3.stat.descriptive.rank.Percentile.<init>(DLorg/apache/commons/math3/stat/descriptive/rank/Percentile$EstimationType;Lorg/apache/commons/math3/stat/ranking/NaNStrategy;Lorg/apache/commons/math3/util/KthSelector;)V"]
46670 [label="org.apache.commons.math3.stat.descriptive.rank.Median.withEstimationType(Lorg/apache/commons/math3/stat/descriptive/rank/Percentile$EstimationType;)Lorg/apache/commons/math3/stat/descriptive/rank/Median;"]
46674 [label="org.apache.commons.math3.stat.descriptive.rank.Percentile.getNaNStrategy()Lorg/apache/commons/math3/stat/ranking/NaNStrategy;"]
46676 [label="org.apache.commons.math3.stat.descriptive.rank.Percentile.getKthSelector()Lorg/apache/commons/math3/util/KthSelector;"]
46678 [label="org.apache.commons.math3.stat.descriptive.rank.Median.withNaNStrategy(Lorg/apache/commons/math3/stat/ranking/NaNStrategy;)Lorg/apache/commons/math3/stat/descriptive/rank/Median;"]
46681 [label="org.apache.commons.math3.stat.descriptive.rank.Percentile.getEstimationType()Lorg/apache/commons/math3/stat/descriptive/rank/Percentile$EstimationType;"]
46683 [label="org.apache.commons.math3.stat.descriptive.rank.Median.withKthSelector(Lorg/apache/commons/math3/util/KthSelector;)Lorg/apache/commons/math3/stat/descriptive/rank/Median;"]
46696 [label="org.apache.commons.math3.stat.descriptive.rank.Min.<init>(Lorg/apache/commons/math3/stat/descriptive/rank/Min;)V"]
46699 [label="org.apache.commons.math3.stat.descriptive.rank.Min.copy(Lorg/apache/commons/math3/stat/descriptive/rank/Min;Lorg/apache/commons/math3/stat/descriptive/rank/Min;)V"]
46701 [label="org.apache.commons.math3.stat.descriptive.rank.Min.increment(D)V"]
46710 [label="org.apache.commons.math3.stat.descriptive.rank.Min.evaluate([DII)D"]
46715 [label="org.apache.commons.math3.stat.descriptive.rank.Min.copy()Lorg/apache/commons/math3/stat/descriptive/rank/Min;"]
46738 [label="org.apache.commons.math3.stat.descriptive.rank.Percentile.<init>()V"]
46744 [label="org.apache.commons.math3.util.KthSelector.<init>(Lorg/apache/commons/math3/util/PivotingStrategyInterface;)V"]
46749 [label="org.apache.commons.math3.util.MedianOf3PivotingStrategy.<init>()V"]
46756 [label="org.apache.commons.math3.stat.descriptive.rank.Percentile.setData([D)V"]
46768 [label="org.apache.commons.math3.stat.descriptive.rank.Percentile.setData([DII)V"]
46774 [label="org.apache.commons.math3.stat.descriptive.rank.Percentile.evaluate(D)D"]
46777 [label="org.apache.commons.math3.stat.descriptive.rank.Percentile.evaluate([DD)D"]
46782 [label="org.apache.commons.math3.stat.descriptive.rank.Percentile.evaluate([DIID)D"]
46784 [label="org.apache.commons.math3.stat.descriptive.rank.Percentile.evaluate([DII)D"]
46795 [label="org.apache.commons.math3.stat.descriptive.rank.Percentile.getWorkArray([DII)[D"]
46797 [label="org.apache.commons.math3.stat.descriptive.rank.Percentile.getPivots([D)[I"]
46799 [label="org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType.evaluate([D[IDLorg/apache/commons/math3/util/KthSelector;)D"]
46801 [label="org.apache.commons.math3.stat.descriptive.rank.Percentile.medianOf3([DII)I"]
46806 [label="org.apache.commons.math3.util.MedianOf3PivotingStrategy.pivotIndex([DII)I"]
46812 [label="org.apache.commons.math3.stat.descriptive.rank.Percentile.copy()Lorg/apache/commons/math3/stat/descriptive/rank/Percentile;"]
46814 [label="org.apache.commons.math3.stat.descriptive.rank.Percentile.copy(Lorg/apache/commons/math3/stat/descriptive/rank/Percentile;Lorg/apache/commons/math3/stat/descriptive/rank/Percentile;)V"]
46822 [label="org.apache.commons.math3.stat.descriptive.rank.Percentile.replaceAndSlice([DIIDD)[D"]
46828 [label="org.apache.commons.math3.stat.descriptive.rank.Percentile.removeAndSlice([DIID)[D"]
46830 [label="org.apache.commons.math3.stat.descriptive.rank.Percentile.copyOf([DII)[D"]
46832 [label="org.apache.commons.math3.util.MathArrays.checkNotNaN([D)V"]
46840 [label="org.apache.commons.math3.util.MathArrays.verifyValues([DII)Z"]
46842 [label="org.apache.commons.math3.util.MathArrays.copyOfRange([DII)[D"]
46858 [label="java.util.BitSet.<init>(I)V"]
46860 [label="java.util.BitSet.set(I)V"]
46862 [label="java.util.BitSet.isEmpty()Z"]
46864 [label="java.util.BitSet.cardinality()I"]
46866 [label="java.util.BitSet.nextClearBit(I)I"]
46868 [label="java.util.BitSet.nextSetBit(I)I"]
46873 [label="org.apache.commons.math3.stat.descriptive.rank.Percentile.withEstimationType(Lorg/apache/commons/math3/stat/descriptive/rank/Percentile$EstimationType;)Lorg/apache/commons/math3/stat/descriptive/rank/Percentile;"]
46877 [label="org.apache.commons.math3.stat.descriptive.rank.Percentile.withNaNStrategy(Lorg/apache/commons/math3/stat/ranking/NaNStrategy;)Lorg/apache/commons/math3/stat/descriptive/rank/Percentile;"]
46881 [label="org.apache.commons.math3.stat.descriptive.rank.Percentile.getPivotingStrategy()Lorg/apache/commons/math3/util/PivotingStrategyInterface;"]
46886 [label="org.apache.commons.math3.util.KthSelector.getPivotingStrategy()Lorg/apache/commons/math3/util/PivotingStrategyInterface;"]
46888 [label="org.apache.commons.math3.stat.descriptive.rank.Percentile.withKthSelector(Lorg/apache/commons/math3/util/KthSelector;)Lorg/apache/commons/math3/stat/descriptive/rank/Percentile;"]
46899 [label="org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType.<init>(Ljava/lang/String;)V"]
46920 [label="org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType.estimate([D[IDILorg/apache/commons/math3/util/KthSelector;)D"]
46998 [label="org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType.index(DI)D"]
47008 [label="org.apache.commons.math3.util.KthSelector.select([D[II)D"]
47016 [label="org.apache.commons.math3.stat.descriptive.rank.Percentile$EstimationType.evaluate([DDLorg/apache/commons/math3/util/KthSelector;)D"]
47062 [label="org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile.<init>(D)V"]
47067 [label="org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile.<init>()V"]
47071 [label="org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile.hashCode()I"]
47073 [label="org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile.getResult()D"]
47077 [label="org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile.equals(Ljava/lang/Object;)Z"]
47082 [label="org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile.getN()J"]
47084 [label="org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile.increment(D)V"]
47090 [label="org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile.newMarkers(Ljava/util/List;D)Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$PSquareMarkers;"]
47092 [label="org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$PSquareMarkers.processDataPoint(D)D"]
47094 [label="org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile.toString()Ljava/lang/String;"]
47096 [label="java.text.NumberFormat.format(D)Ljava/lang/String;"]
47100 [label="org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile.copy()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;"]
47102 [label="org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$PSquareMarkers.clone()Ljava/lang/Object;"]
47106 [label="org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile.clear()V"]
47109 [label="org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile.maximum()D"]
47111 [label="org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile.minimum()D"]
47114 [label="org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$PSquareMarkers.height(I)D"]
47133 [label="org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Markers.<init>([Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker;)V"]
47137 [label="org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker.index(I)Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker;"]
47139 [label="org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker.next(Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker;)Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker;"]
47141 [label="org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker.previous(Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker;)Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker;"]
47143 [label="org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Markers.<init>(Ljava/util/List;D)V"]
47148 [label="org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Markers.createMarkerArray(Ljava/util/List;D)[Lorg/apache/commons/math3/stat/descriptive/rank/PSquarePercentile$Marker;"]
47153 [label="org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker.<init>()V"]
47155 [label="org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker.<init>(DDDD)V"]
47157 [label="org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Markers.hashCode()I"]
47159 [label="java.util.Arrays.deepHashCode([Ljava/lang/Object;)I"]
47161 [label="org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Markers.equals(Ljava/lang/Object;)Z"]
47166 [label="java.util.Arrays.deepEquals([Ljava/lang/Object;[Ljava/lang/Object;)Z"]
47168 [label="org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Markers.processDataPoint(D)D"]
47171 [label="org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Markers.findCellAndUpdateMinMax(D)I"]
47173 [label="org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Markers.incrementPositions(III)V"]
47175 [label="org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Markers.updateDesiredPositions()V"]
47177 [label="org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Markers.adjustHeightsOfMarkers()V"]
47179 [label="org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Markers.getPercentileValue()D"]
47182 [label="org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Markers.height(I)D"]
47190 [label="org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Markers.estimate(I)D"]
47196 [label="org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker.estimate()D"]
47202 [label="org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker.incrementPosition(I)V"]
47205 [label="org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker.updateDesiredPosition()V"]
47207 [label="org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Markers.readObject(Ljava/io/ObjectInputStream;)V"]
47212 [label="org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Markers.clone()Ljava/lang/Object;"]
47214 [label="org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker.clone()Ljava/lang/Object;"]
47216 [label="org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Markers.toString()Ljava/lang/String;"]
47218 [label="org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker.toString()Ljava/lang/String;"]
47268 [label="org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker.difference()D"]
47273 [label="org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker.isEstimateBad([DD)Z"]
47279 [label="org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker.equals(Ljava/lang/Object;)Z"]
47282 [label="org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker.hashCode()I"]
47284 [label="org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$Marker.readObject(Ljava/io/ObjectInputStream;)V"]
47290 [label="org.apache.commons.math3.util.Precision.round(DI)D"]
47297 [label="org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$FixedCapacityList.<init>(I)V"]
47301 [label="org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$FixedCapacityList.add(Ljava/lang/Object;)Z"]
47307 [label="org.apache.commons.math3.stat.descriptive.rank.PSquarePercentile$FixedCapacityList.addAll(Ljava/util/Collection;)Z"]
47313 [label="java.util.ArrayList.addAll(Ljava/util/Collection;)Z"]
47389 [label="org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.getMax()D"]
47391 [label="org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.getMean()D"]
47393 [label="org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.getMin()D"]
47395 [label="org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.getN()J"]
47397 [label="org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.getSum()D"]
47399 [label="org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.getStandardDeviation()D"]
47401 [label="org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.getVariance()D"]
47403 [label="org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.equals(Ljava/lang/Object;)Z"]
47412 [label="org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.hashCode()I"]
47414 [label="org.apache.commons.math3.stat.descriptive.StatisticalSummaryValues.toString()Ljava/lang/String;"]
47416 [label="java.lang.StringBuffer.append(J)Ljava/lang/StringBuffer;"]
47418 [label="java.lang.StringBuffer.append(D)Ljava/lang/StringBuffer;"]
47451 [label="org.apache.commons.math3.stat.descriptive.summary.Product.<init>()V"]
47455 [label="org.apache.commons.math3.stat.descriptive.summary.Product.<init>(Lorg/apache/commons/math3/stat/descriptive/summary/Product;)V"]
47460 [label="org.apache.commons.math3.stat.descriptive.summary.Product.copy(Lorg/apache/commons/math3/stat/descriptive/summary/Product;Lorg/apache/commons/math3/stat/descriptive/summary/Product;)V"]
47471 [label="org.apache.commons.math3.stat.descriptive.summary.Product.evaluate([DII)D"]
47477 [label="org.apache.commons.math3.stat.descriptive.summary.Product.evaluate([D[DII)D"]
47484 [label="org.apache.commons.math3.stat.descriptive.summary.Product.evaluate([D[D)D"]
47489 [label="org.apache.commons.math3.stat.descriptive.summary.Product.copy()Lorg/apache/commons/math3/stat/descriptive/summary/Product;"]
47505 [label="org.apache.commons.math3.stat.descriptive.summary.Sum.<init>(Lorg/apache/commons/math3/stat/descriptive/summary/Sum;)V"]
47508 [label="org.apache.commons.math3.stat.descriptive.summary.Sum.copy(Lorg/apache/commons/math3/stat/descriptive/summary/Sum;Lorg/apache/commons/math3/stat/descriptive/summary/Sum;)V"]
47528 [label="org.apache.commons.math3.stat.descriptive.summary.Sum.evaluate([D[D)D"]
47532 [label="org.apache.commons.math3.stat.descriptive.summary.Sum.copy()Lorg/apache/commons/math3/stat/descriptive/summary/Sum;"]
47547 [label="org.apache.commons.math3.stat.descriptive.summary.SumOfLogs.<init>(Lorg/apache/commons/math3/stat/descriptive/summary/SumOfLogs;)V"]
47550 [label="org.apache.commons.math3.stat.descriptive.summary.SumOfLogs.copy(Lorg/apache/commons/math3/stat/descriptive/summary/SumOfLogs;Lorg/apache/commons/math3/stat/descriptive/summary/SumOfLogs;)V"]
47552 [label="org.apache.commons.math3.stat.descriptive.summary.SumOfLogs.increment(D)V"]
47561 [label="org.apache.commons.math3.stat.descriptive.summary.SumOfLogs.evaluate([DII)D"]
47566 [label="org.apache.commons.math3.stat.descriptive.summary.SumOfLogs.copy()Lorg/apache/commons/math3/stat/descriptive/summary/SumOfLogs;"]
47581 [label="org.apache.commons.math3.stat.descriptive.summary.SumOfSquares.<init>(Lorg/apache/commons/math3/stat/descriptive/summary/SumOfSquares;)V"]
47584 [label="org.apache.commons.math3.stat.descriptive.summary.SumOfSquares.copy(Lorg/apache/commons/math3/stat/descriptive/summary/SumOfSquares;Lorg/apache/commons/math3/stat/descriptive/summary/SumOfSquares;)V"]
47595 [label="org.apache.commons.math3.stat.descriptive.summary.SumOfSquares.evaluate([DII)D"]
47600 [label="org.apache.commons.math3.stat.descriptive.summary.SumOfSquares.copy()Lorg/apache/commons/math3/stat/descriptive/summary/SumOfSquares;"]
47656 [label="org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSummary()Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;"]
47674 [label="org.apache.commons.math3.stat.descriptive.SummaryStatistics.getQuadraticMean()D"]
47677 [label="org.apache.commons.math3.stat.descriptive.SummaryStatistics.getPopulationVariance()D"]
47685 [label="org.apache.commons.math3.stat.descriptive.SummaryStatistics.toString()Ljava/lang/String;"]
47688 [label="org.apache.commons.math3.stat.descriptive.SummaryStatistics.clear()V"]
47693 [label="org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSumImpl()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;"]
47696 [label="org.apache.commons.math3.stat.descriptive.SummaryStatistics.setSumImpl(Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V"]
47699 [label="org.apache.commons.math3.stat.descriptive.SummaryStatistics.checkEmpty()V"]
47701 [label="org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSumsqImpl()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;"]
47703 [label="org.apache.commons.math3.stat.descriptive.SummaryStatistics.setSumsqImpl(Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V"]
47706 [label="org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMinImpl()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;"]
47708 [label="org.apache.commons.math3.stat.descriptive.SummaryStatistics.setMinImpl(Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V"]
47711 [label="org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMaxImpl()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;"]
47713 [label="org.apache.commons.math3.stat.descriptive.SummaryStatistics.setMaxImpl(Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V"]
47716 [label="org.apache.commons.math3.stat.descriptive.SummaryStatistics.getSumLogImpl()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;"]
47718 [label="org.apache.commons.math3.stat.descriptive.SummaryStatistics.setSumLogImpl(Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V"]
47722 [label="org.apache.commons.math3.stat.descriptive.SummaryStatistics.getGeoMeanImpl()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;"]
47724 [label="org.apache.commons.math3.stat.descriptive.SummaryStatistics.setGeoMeanImpl(Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V"]
47727 [label="org.apache.commons.math3.stat.descriptive.SummaryStatistics.getMeanImpl()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;"]
47729 [label="org.apache.commons.math3.stat.descriptive.SummaryStatistics.setMeanImpl(Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V"]
47732 [label="org.apache.commons.math3.stat.descriptive.SummaryStatistics.getVarianceImpl()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;"]
47734 [label="org.apache.commons.math3.stat.descriptive.SummaryStatistics.setVarianceImpl(Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V"]
47738 [label="org.apache.commons.math3.stat.descriptive.SummaryStatistics.copy()Lorg/apache/commons/math3/stat/descriptive/SummaryStatistics;"]
47751 [label="org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics.<init>()V"]
47753 [label="org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics.<init>(I)V"]
47758 [label="org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics.<init>(Lorg/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatistics;)V"]
47763 [label="org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics.copy(Lorg/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatistics;Lorg/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatistics;)V"]
47765 [label="org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics.addValue(D)V"]
47769 [label="org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics.apply(Lorg/apache/commons/math3/stat/descriptive/UnivariateStatistic;)D"]
47772 [label="org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics.clear()V"]
47775 [label="org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics.getElement(I)D"]
47779 [label="org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics.getN()J"]
47781 [label="org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics.getStandardDeviation()D"]
47783 [label="org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics.getQuadraticMean()D"]
47786 [label="org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics.getValues()[D"]
47788 [label="org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics.getWindowSize()I"]
47791 [label="org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics.setWindowSize(I)V"]
47794 [label="org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics.toString()Ljava/lang/String;"]
47797 [label="org.apache.commons.math3.stat.descriptive.SynchronizedDescriptiveStatistics.copy()Lorg/apache/commons/math3/stat/descriptive/SynchronizedDescriptiveStatistics;"]
47807 [label="org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.<init>(IZ)V"]
47812 [label="org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.addValue([D)V"]
47816 [label="org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getDimension()I"]
47819 [label="org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getN()J"]
47821 [label="org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getSum()[D"]
47823 [label="org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getSumSq()[D"]
47825 [label="org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getSumLog()[D"]
47827 [label="org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getMean()[D"]
47829 [label="org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getStandardDeviation()[D"]
47831 [label="org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getCovariance()Lorg/apache/commons/math3/linear/RealMatrix;"]
47833 [label="org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getMax()[D"]
47835 [label="org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getMin()[D"]
47837 [label="org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getGeometricMean()[D"]
47839 [label="org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.toString()Ljava/lang/String;"]
47842 [label="org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.clear()V"]
47845 [label="org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.equals(Ljava/lang/Object;)Z"]
47849 [label="org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.hashCode()I"]
47852 [label="org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getSumImpl()[Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;"]
47855 [label="org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.setSumImpl([Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V"]
47859 [label="org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getSumsqImpl()[Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;"]
47862 [label="org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.setSumsqImpl([Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V"]
47866 [label="org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getMinImpl()[Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;"]
47869 [label="org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.setMinImpl([Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V"]
47873 [label="org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getMaxImpl()[Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;"]
47876 [label="org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.setMaxImpl([Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V"]
47880 [label="org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getSumLogImpl()[Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;"]
47883 [label="org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.setSumLogImpl([Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V"]
47887 [label="org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getGeoMeanImpl()[Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;"]
47890 [label="org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.setGeoMeanImpl([Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V"]
47894 [label="org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getMeanImpl()[Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;"]
47897 [label="org.apache.commons.math3.stat.descriptive.SynchronizedMultivariateSummaryStatistics.setMeanImpl([Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V"]
47905 [label="org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.<init>()V"]
47907 [label="org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.<init>(Lorg/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics;)V"]
47912 [label="org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.copy(Lorg/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics;Lorg/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics;)V"]
47914 [label="org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getSummary()Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;"]
47917 [label="org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.addValue(D)V"]
47920 [label="org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getN()J"]
47922 [label="org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getSum()D"]
47924 [label="org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getSumsq()D"]
47926 [label="org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getMean()D"]
47928 [label="org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getStandardDeviation()D"]
47930 [label="org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getQuadraticMean()D"]
47933 [label="org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getVariance()D"]
47935 [label="org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getPopulationVariance()D"]
47937 [label="org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getMax()D"]
47939 [label="org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getMin()D"]
47941 [label="org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getGeometricMean()D"]
47943 [label="org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.toString()Ljava/lang/String;"]
47946 [label="org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.clear()V"]
47949 [label="org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.equals(Ljava/lang/Object;)Z"]
47952 [label="org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.hashCode()I"]
47954 [label="org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getSumImpl()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;"]
47957 [label="org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.setSumImpl(Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V"]
47961 [label="org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getSumsqImpl()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;"]
47964 [label="org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.setSumsqImpl(Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V"]
47968 [label="org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getMinImpl()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;"]
47971 [label="org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.setMinImpl(Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V"]
47975 [label="org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getMaxImpl()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;"]
47978 [label="org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.setMaxImpl(Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V"]
47982 [label="org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getSumLogImpl()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;"]
47985 [label="org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.setSumLogImpl(Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V"]
47989 [label="org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getGeoMeanImpl()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;"]
47991 [label="org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.setGeoMeanImpl(Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V"]
47995 [label="org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getMeanImpl()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;"]
47998 [label="org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.setMeanImpl(Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V"]
48002 [label="org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.getVarianceImpl()Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;"]
48004 [label="org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.setVarianceImpl(Lorg/apache/commons/math3/stat/descriptive/StorelessUnivariateStatistic;)V"]
48008 [label="org.apache.commons.math3.stat.descriptive.SynchronizedSummaryStatistics.copy()Lorg/apache/commons/math3/stat/descriptive/SynchronizedSummaryStatistics;"]
48018 [label="org.apache.commons.math3.stat.descriptive.UnivariateStatistic.evaluate([D)D"]
48052 [label="org.apache.commons.math3.stat.Frequency.<init>()V"]
48058 [label="java.util.TreeMap.<init>()V"]
48060 [label="org.apache.commons.math3.stat.Frequency.<init>(Ljava/util/Comparator;)V"]
48066 [label="java.util.TreeMap.<init>(Ljava/util/Comparator;)V"]
48071 [label="org.apache.commons.math3.stat.Frequency.toString()Ljava/lang/String;"]
48073 [label="java.text.NumberFormat.getPercentInstance()Ljava/text/NumberFormat;"]
48078 [label="java.util.SortedMap.keySet()Ljava/util/Set;"]
48080 [label="java.lang.StringBuilder.append(Ljava/lang/Object;)Ljava/lang/StringBuilder;"]
48082 [label="org.apache.commons.math3.stat.Frequency.getCount(Ljava/lang/Comparable;)J"]
48084 [label="org.apache.commons.math3.stat.Frequency.getPct(Ljava/lang/Comparable;)D"]
48086 [label="org.apache.commons.math3.stat.Frequency.getCumPct(Ljava/lang/Comparable;)D"]
48088 [label="org.apache.commons.math3.stat.Frequency.addValue(Ljava/lang/Comparable;)V"]
48091 [label="org.apache.commons.math3.stat.Frequency.incrementValue(Ljava/lang/Comparable;J)V"]
48093 [label="org.apache.commons.math3.stat.Frequency.addValue(I)V"]
48097 [label="org.apache.commons.math3.stat.Frequency.addValue(J)V"]
48100 [label="org.apache.commons.math3.stat.Frequency.addValue(C)V"]
48103 [label="java.lang.Character.valueOf(C)Ljava/lang/Character;"]
48108 [label="java.lang.Integer.longValue()J"]
48110 [label="java.lang.Long.longValue()J"]
48113 [label="org.apache.commons.math3.stat.Frequency.incrementValue(IJ)V"]
48117 [label="org.apache.commons.math3.stat.Frequency.incrementValue(JJ)V"]
48121 [label="org.apache.commons.math3.stat.Frequency.incrementValue(CJ)V"]
48125 [label="org.apache.commons.math3.stat.Frequency.clear()V"]
48127 [label="java.util.Map.clear()V"]
48129 [label="org.apache.commons.math3.stat.Frequency.valuesIterator()Ljava/util/Iterator;"]
48131 [label="org.apache.commons.math3.stat.Frequency.entrySetIterator()Ljava/util/Iterator;"]
48139 [label="java.util.SortedMap.entrySet()Ljava/util/Set;"]
48141 [label="org.apache.commons.math3.stat.Frequency.getSumFreq()J"]
48147 [label="java.util.SortedMap.values()Ljava/util/Collection;"]
48151 [label="org.apache.commons.math3.stat.Frequency.getCount(J)J"]
48153 [label="org.apache.commons.math3.stat.Frequency.getCount(I)J"]
48158 [label="org.apache.commons.math3.stat.Frequency.getCount(C)J"]
48161 [label="org.apache.commons.math3.stat.Frequency.getUniqueCount()I"]
48166 [label="org.apache.commons.math3.stat.Frequency.getPct(I)D"]
48169 [label="org.apache.commons.math3.stat.Frequency.getPct(J)D"]
48172 [label="org.apache.commons.math3.stat.Frequency.getPct(C)D"]
48175 [label="org.apache.commons.math3.stat.Frequency.getCumFreq(Ljava/lang/Comparable;)J"]
48179 [label="org.apache.commons.math3.stat.Frequency.getCumFreq(J)J"]
48184 [label="java.util.SortedMap.comparator()Ljava/util/Comparator;"]
48189 [label="org.apache.commons.math3.stat.Frequency$NaturalComparator.<init>()V"]
48191 [label="java.util.SortedMap.firstKey()Ljava/lang/Object;"]
48193 [label="java.util.SortedMap.lastKey()Ljava/lang/Object;"]
48196 [label="org.apache.commons.math3.stat.Frequency.getCumFreq(I)J"]
48202 [label="org.apache.commons.math3.stat.Frequency.getCumFreq(C)J"]
48208 [label="org.apache.commons.math3.stat.Frequency.getCumPct(I)D"]
48211 [label="org.apache.commons.math3.stat.Frequency.getCumPct(J)D"]
48214 [label="org.apache.commons.math3.stat.Frequency.getCumPct(C)D"]
48217 [label="org.apache.commons.math3.stat.Frequency.getMode()Ljava/util/List;"]
48225 [label="org.apache.commons.math3.stat.Frequency.merge(Lorg/apache/commons/math3/stat/Frequency;)V"]
48232 [label="org.apache.commons.math3.stat.Frequency.merge(Ljava/util/Collection;)V"]
48246 [label="org.apache.commons.math3.stat.Frequency$NaturalComparator.compare(Ljava/lang/Comparable;Ljava/lang/Comparable;)I"]
48253 [label="org.apache.commons.math3.stat.Frequency.hashCode()I"]
48255 [label="org.apache.commons.math3.stat.Frequency.equals(Ljava/lang/Object;)Z"]
48278 [label="org.apache.commons.math3.stat.inference.AlternativeHypothesis.<init>()V"]
48291 [label="org.apache.commons.math3.stat.inference.BinomialTest.<init>()V"]
48292 [label="org.apache.commons.math3.stat.inference.BinomialTest.binomialTest(IIDLorg/apache/commons/math3/stat/inference/AlternativeHypothesis;D)Z"]
48299 [label="org.apache.commons.math3.stat.inference.BinomialTest.binomialTest(IIDLorg/apache/commons/math3/stat/inference/AlternativeHypothesis;)D"]
48314 [label="org.apache.commons.math3.stat.inference.ChiSquareTest.<init>()V"]
48316 [label="org.apache.commons.math3.stat.inference.ChiSquareTest.chiSquare([D[J)D"]
48320 [label="org.apache.commons.math3.util.MathArrays.checkPositive([D)V"]
48322 [label="org.apache.commons.math3.util.MathArrays.checkNonNegative([J)V"]
48324 [label="org.apache.commons.math3.stat.inference.ChiSquareTest.chiSquareTest([D[J)D"]
48331 [label="org.apache.commons.math3.stat.inference.ChiSquareTest.chiSquareTest([D[JD)Z"]
48338 [label="org.apache.commons.math3.stat.inference.ChiSquareTest.chiSquare([[J)D"]
48341 [label="org.apache.commons.math3.stat.inference.ChiSquareTest.checkArray([[J)V"]
48343 [label="org.apache.commons.math3.stat.inference.ChiSquareTest.chiSquareTest([[J)D"]
48348 [label="org.apache.commons.math3.stat.inference.ChiSquareTest.chiSquareTest([[JD)Z"]
48353 [label="org.apache.commons.math3.stat.inference.ChiSquareTest.chiSquareDataSetsComparison([J[J)D"]
48358 [label="org.apache.commons.math3.stat.inference.ChiSquareTest.chiSquareTestDataSetsComparison([J[J)D"]
48363 [label="org.apache.commons.math3.stat.inference.ChiSquareTest.chiSquareTestDataSetsComparison([J[JD)Z"]
48371 [label="org.apache.commons.math3.util.MathArrays.checkRectangular([[J)V"]
48373 [label="org.apache.commons.math3.util.MathArrays.checkNonNegative([[J)V"]
48377 [label="org.apache.commons.math3.stat.inference.GTest.<init>()V"]
48378 [label="org.apache.commons.math3.stat.inference.GTest.g([D[J)D"]
48382 [label="org.apache.commons.math3.stat.inference.GTest.gTest([D[J)D"]
48387 [label="org.apache.commons.math3.stat.inference.GTest.gTestIntrinsic([D[J)D"]
48391 [label="org.apache.commons.math3.stat.inference.GTest.gTest([D[JD)Z"]
48397 [label="org.apache.commons.math3.stat.inference.GTest.entropy([[J)D"]
48400 [label="org.apache.commons.math3.stat.inference.GTest.entropy([J)D"]
48403 [label="org.apache.commons.math3.stat.inference.GTest.gDataSetsComparison([J[J)D"]
48409 [label="org.apache.commons.math3.stat.inference.GTest.rootLogLikelihoodRatio(JJJJ)D"]
48416 [label="org.apache.commons.math3.stat.inference.GTest.gTestDataSetsComparison([J[J)D"]
48420 [label="org.apache.commons.math3.stat.inference.GTest.gTestDataSetsComparison([J[JD)Z"]
48442 [label="org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.<init>()V"]
48445 [label="org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V"]
48448 [label="org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.kolmogorovSmirnovTest(Lorg/apache/commons/math3/distribution/RealDistribution;[DZ)D"]
48453 [label="org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.cdf(DIZ)D"]
48455 [label="org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.kolmogorovSmirnovStatistic(Lorg/apache/commons/math3/distribution/RealDistribution;[D)D"]
48460 [label="org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.checkArray([D)V"]
48462 [label="org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.kolmogorovSmirnovTest([D[DZ)D"]
48468 [label="org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.hasTies([D[D)Z"]
48470 [label="org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.fixTies([D[D)V"]
48472 [label="org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.exactP(DIIZ)D"]
48474 [label="org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.kolmogorovSmirnovStatistic([D[D)D"]
48476 [label="org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.approximateP(DII)D"]
48478 [label="org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.kolmogorovSmirnovTest([D[D)D"]
48486 [label="org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.integralKolmogorovSmirnovStatistic([D[D)J"]
48491 [label="org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.kolmogorovSmirnovTest(Lorg/apache/commons/math3/distribution/RealDistribution;[D)D"]
48496 [label="org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.kolmogorovSmirnovTest(Lorg/apache/commons/math3/distribution/RealDistribution;[DD)Z"]
48502 [label="org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.bootstrap([D[DIZ)D"]
48511 [label="org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.bootstrap([D[DI)D"]
48517 [label="org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.cdf(DI)D"]
48521 [label="org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.cdfExact(DI)D"]
48529 [label="java.lang.Math.pow(DD)D"]
48531 [label="org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.exactK(DI)D"]
48533 [label="org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.roundedK(DI)D"]
48535 [label="org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.pelzGood(DI)D"]
48540 [label="org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.createExactH(DI)Lorg/apache/commons/math3/linear/FieldMatrix;"]
48545 [label="org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.createRoundedH(DI)Lorg/apache/commons/math3/linear/RealMatrix;"]
48560 [label="org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.ksSum(DDI)D"]
48565 [label="org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.calculateIntegralD(DIIZ)J"]
48576 [label="org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.n(IIIIJZ)D"]
48585 [label="org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.fillBooleanArrayRandomlyWithFixedNumberTrueValues([ZILorg/apache/commons/math3/random/RandomGenerator;)V"]
48590 [label="java.util.Arrays.fill([ZZ)V"]
48592 [label="org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.monteCarloP(DIIZI)D"]
48599 [label="org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.integralMonteCarloP(JIII)D"]
48610 [label="org.apache.commons.math3.util.MathArrays.unique([D)[D"]
48612 [label="org.apache.commons.math3.util.MathArrays.concatenate([[D)[D"]
48615 [label="org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.jitter([DLorg/apache/commons/math3/distribution/RealDistribution;)V"]
48626 [label="org.apache.commons.math3.stat.inference.KolmogorovSmirnovTest.c(IIIIJZ)I"]
48646 [label="org.apache.commons.math3.stat.inference.MannWhitneyUTest.<init>()V"]
48649 [label="org.apache.commons.math3.stat.ranking.NaturalRanking.<init>(Lorg/apache/commons/math3/stat/ranking/NaNStrategy;Lorg/apache/commons/math3/stat/ranking/TiesStrategy;)V"]
48655 [label="org.apache.commons.math3.stat.inference.MannWhitneyUTest.<init>(Lorg/apache/commons/math3/stat/ranking/NaNStrategy;Lorg/apache/commons/math3/stat/ranking/TiesStrategy;)V"]
48662 [label="org.apache.commons.math3.stat.inference.MannWhitneyUTest.ensureDataConformance([D[D)V"]
48666 [label="org.apache.commons.math3.stat.inference.MannWhitneyUTest.concatenateSamples([D[D)[D"]
48670 [label="org.apache.commons.math3.stat.inference.MannWhitneyUTest.mannWhitneyU([D[D)D"]
48676 [label="org.apache.commons.math3.stat.ranking.NaturalRanking.rank([D)[D"]
48678 [label="org.apache.commons.math3.stat.inference.MannWhitneyUTest.calculateAsymptoticPValue(DII)D"]
48684 [label="org.apache.commons.math3.stat.inference.MannWhitneyUTest.mannWhitneyUTest([D[D)D"]
48692 [label="org.apache.commons.math3.stat.inference.OneWayAnova.<init>()V"]
48694 [label="org.apache.commons.math3.stat.inference.OneWayAnova.anovaFValue(Ljava/util/Collection;)D"]
48703 [label="org.apache.commons.math3.stat.inference.OneWayAnova.anovaStats(Ljava/util/Collection;)Lorg/apache/commons/math3/stat/inference/OneWayAnova$AnovaStats;"]
48707 [label="org.apache.commons.math3.stat.inference.OneWayAnova.anovaPValue(Ljava/util/Collection;)D"]
48716 [label="org.apache.commons.math3.stat.inference.OneWayAnova.anovaPValue(Ljava/util/Collection;Z)D"]
48723 [label="org.apache.commons.math3.stat.inference.OneWayAnova.anovaStats(Ljava/util/Collection;Z)Lorg/apache/commons/math3/stat/inference/OneWayAnova$AnovaStats;"]
48727 [label="org.apache.commons.math3.stat.inference.OneWayAnova.anovaTest(Ljava/util/Collection;D)Z"]
48737 [label="org.apache.commons.math3.stat.inference.OneWayAnova$AnovaStats.<init>(IID)V"]
48770 [label="org.apache.commons.math3.stat.inference.TestUtils.<init>()V"]
48772 [label="org.apache.commons.math3.stat.inference.TestUtils.homoscedasticT([D[D)D"]
48777 [label="org.apache.commons.math3.stat.inference.TTest.homoscedasticT([D[D)D"]
48780 [label="org.apache.commons.math3.stat.inference.TestUtils.homoscedasticT(Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;)D"]
48784 [label="org.apache.commons.math3.stat.inference.TTest.homoscedasticT(Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;)D"]
48786 [label="org.apache.commons.math3.stat.inference.TestUtils.homoscedasticTTest([D[DD)Z"]
48791 [label="org.apache.commons.math3.stat.inference.TTest.homoscedasticTTest([D[DD)Z"]
48793 [label="org.apache.commons.math3.stat.inference.TestUtils.homoscedasticTTest([D[D)D"]
48797 [label="org.apache.commons.math3.stat.inference.TTest.homoscedasticTTest([D[D)D"]
48799 [label="org.apache.commons.math3.stat.inference.TestUtils.homoscedasticTTest(Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;)D"]
48803 [label="org.apache.commons.math3.stat.inference.TTest.homoscedasticTTest(Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;)D"]
48805 [label="org.apache.commons.math3.stat.inference.TestUtils.pairedT([D[D)D"]
48809 [label="org.apache.commons.math3.stat.inference.TTest.pairedT([D[D)D"]
48811 [label="org.apache.commons.math3.stat.inference.TestUtils.pairedTTest([D[DD)Z"]
48816 [label="org.apache.commons.math3.stat.inference.TTest.pairedTTest([D[DD)Z"]
48818 [label="org.apache.commons.math3.stat.inference.TestUtils.pairedTTest([D[D)D"]
48822 [label="org.apache.commons.math3.stat.inference.TTest.pairedTTest([D[D)D"]
48824 [label="org.apache.commons.math3.stat.inference.TestUtils.t(D[D)D"]
48828 [label="org.apache.commons.math3.stat.inference.TTest.t(D[D)D"]
48830 [label="org.apache.commons.math3.stat.inference.TestUtils.t(DLorg/apache/commons/math3/stat/descriptive/StatisticalSummary;)D"]
48834 [label="org.apache.commons.math3.stat.inference.TTest.t(DLorg/apache/commons/math3/stat/descriptive/StatisticalSummary;)D"]
48836 [label="org.apache.commons.math3.stat.inference.TestUtils.t([D[D)D"]
48840 [label="org.apache.commons.math3.stat.inference.TTest.t([D[D)D"]
48842 [label="org.apache.commons.math3.stat.inference.TestUtils.t(Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;)D"]
48846 [label="org.apache.commons.math3.stat.inference.TTest.t(Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;)D"]
48848 [label="org.apache.commons.math3.stat.inference.TestUtils.tTest(D[DD)Z"]
48853 [label="org.apache.commons.math3.stat.inference.TTest.tTest(D[DD)Z"]
48855 [label="org.apache.commons.math3.stat.inference.TestUtils.tTest(D[D)D"]
48859 [label="org.apache.commons.math3.stat.inference.TTest.tTest(D[D)D"]
48861 [label="org.apache.commons.math3.stat.inference.TestUtils.tTest(DLorg/apache/commons/math3/stat/descriptive/StatisticalSummary;D)Z"]
48866 [label="org.apache.commons.math3.stat.inference.TTest.tTest(DLorg/apache/commons/math3/stat/descriptive/StatisticalSummary;D)Z"]
48868 [label="org.apache.commons.math3.stat.inference.TestUtils.tTest(DLorg/apache/commons/math3/stat/descriptive/StatisticalSummary;)D"]
48872 [label="org.apache.commons.math3.stat.inference.TTest.tTest(DLorg/apache/commons/math3/stat/descriptive/StatisticalSummary;)D"]
48874 [label="org.apache.commons.math3.stat.inference.TestUtils.tTest([D[DD)Z"]
48879 [label="org.apache.commons.math3.stat.inference.TTest.tTest([D[DD)Z"]
48881 [label="org.apache.commons.math3.stat.inference.TestUtils.tTest([D[D)D"]
48885 [label="org.apache.commons.math3.stat.inference.TTest.tTest([D[D)D"]
48887 [label="org.apache.commons.math3.stat.inference.TestUtils.tTest(Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;D)Z"]
48892 [label="org.apache.commons.math3.stat.inference.TTest.tTest(Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;D)Z"]
48894 [label="org.apache.commons.math3.stat.inference.TestUtils.tTest(Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;)D"]
48898 [label="org.apache.commons.math3.stat.inference.TTest.tTest(Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;)D"]
48900 [label="org.apache.commons.math3.stat.inference.TestUtils.chiSquare([D[J)D"]
48905 [label="org.apache.commons.math3.stat.inference.TestUtils.chiSquare([[J)D"]
48908 [label="org.apache.commons.math3.stat.inference.TestUtils.chiSquareTest([D[JD)Z"]
48914 [label="org.apache.commons.math3.stat.inference.TestUtils.chiSquareTest([D[J)D"]
48918 [label="org.apache.commons.math3.stat.inference.TestUtils.chiSquareTest([[JD)Z"]
48923 [label="org.apache.commons.math3.stat.inference.TestUtils.chiSquareTest([[J)D"]
48926 [label="org.apache.commons.math3.stat.inference.TestUtils.chiSquareDataSetsComparison([J[J)D"]
48930 [label="org.apache.commons.math3.stat.inference.TestUtils.chiSquareTestDataSetsComparison([J[J)D"]
48934 [label="org.apache.commons.math3.stat.inference.TestUtils.chiSquareTestDataSetsComparison([J[JD)Z"]
48940 [label="org.apache.commons.math3.stat.inference.TestUtils.oneWayAnovaFValue(Ljava/util/Collection;)D"]
48945 [label="org.apache.commons.math3.stat.inference.TestUtils.oneWayAnovaPValue(Ljava/util/Collection;)D"]
48948 [label="org.apache.commons.math3.stat.inference.TestUtils.oneWayAnovaTest(Ljava/util/Collection;D)Z"]
48953 [label="org.apache.commons.math3.stat.inference.TestUtils.g([D[J)D"]
48958 [label="org.apache.commons.math3.stat.inference.TestUtils.gTest([D[J)D"]
48962 [label="org.apache.commons.math3.stat.inference.TestUtils.gTestIntrinsic([D[J)D"]
48967 [label="org.apache.commons.math3.stat.inference.TestUtils.gTest([D[JD)Z"]
48973 [label="org.apache.commons.math3.stat.inference.TestUtils.gDataSetsComparison([J[J)D"]
48977 [label="org.apache.commons.math3.stat.inference.TestUtils.rootLogLikelihoodRatio(JJJJ)D"]
48984 [label="org.apache.commons.math3.stat.inference.TestUtils.gTestDataSetsComparison([J[J)D"]
48988 [label="org.apache.commons.math3.stat.inference.TestUtils.gTestDataSetsComparison([J[JD)Z"]
48994 [label="org.apache.commons.math3.stat.inference.TestUtils.kolmogorovSmirnovStatistic(Lorg/apache/commons/math3/distribution/RealDistribution;[D)D"]
48999 [label="org.apache.commons.math3.stat.inference.TestUtils.kolmogorovSmirnovTest(Lorg/apache/commons/math3/distribution/RealDistribution;[D)D"]
49003 [label="org.apache.commons.math3.stat.inference.TestUtils.kolmogorovSmirnovTest(Lorg/apache/commons/math3/distribution/RealDistribution;[DZ)D"]
49008 [label="org.apache.commons.math3.stat.inference.TestUtils.kolmogorovSmirnovTest(Lorg/apache/commons/math3/distribution/RealDistribution;[DD)Z"]
49014 [label="org.apache.commons.math3.stat.inference.TestUtils.kolmogorovSmirnovStatistic([D[D)D"]
49018 [label="org.apache.commons.math3.stat.inference.TestUtils.kolmogorovSmirnovTest([D[D)D"]
49023 [label="org.apache.commons.math3.stat.inference.TestUtils.kolmogorovSmirnovTest([D[DZ)D"]
49028 [label="org.apache.commons.math3.stat.inference.TestUtils.exactP(DIIZ)D"]
49034 [label="org.apache.commons.math3.stat.inference.TestUtils.approximateP(DII)D"]
49039 [label="org.apache.commons.math3.stat.inference.TestUtils.monteCarloP(DIIZI)D"]
49048 [label="org.apache.commons.math3.stat.inference.TTest.<init>()V"]
49052 [label="org.apache.commons.math3.stat.inference.TTest.checkSampleData([D)V"]
49054 [label="org.apache.commons.math3.stat.StatUtils.meanDifference([D[D)D"]
49056 [label="org.apache.commons.math3.stat.inference.TTest.t(DDDD)D"]
49058 [label="org.apache.commons.math3.stat.StatUtils.varianceDifference([D[DD)D"]
49063 [label="org.apache.commons.math3.stat.inference.TTest.tTest(DDDD)D"]
49069 [label="org.apache.commons.math3.stat.inference.TTest.checkSignificanceLevel(D)V"]
49074 [label="org.apache.commons.math3.stat.StatUtils.mean([D)D"]
49076 [label="org.apache.commons.math3.stat.StatUtils.variance([D)D"]
49081 [label="org.apache.commons.math3.stat.inference.TTest.checkSampleData(Lorg/apache/commons/math3/stat/descriptive/StatisticalSummary;)V"]
49086 [label="org.apache.commons.math3.stat.inference.TTest.homoscedasticT(DDDDDD)D"]
49091 [label="org.apache.commons.math3.stat.inference.TTest.t(DDDDDD)D"]
49116 [label="org.apache.commons.math3.stat.inference.TTest.tTest(DDDDDD)D"]
49121 [label="org.apache.commons.math3.stat.inference.TTest.homoscedasticTTest(DDDDDD)D"]
49141 [label="org.apache.commons.math3.stat.inference.TTest.df(DDDD)D"]
49200 [label="org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest.<init>()V"]
49203 [label="org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest.<init>(Lorg/apache/commons/math3/stat/ranking/NaNStrategy;Lorg/apache/commons/math3/stat/ranking/TiesStrategy;)V"]
49207 [label="org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest.ensureDataConformance([D[D)V"]
49211 [label="org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest.calculateDifferences([D[D)[D"]
49215 [label="org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest.calculateAbsoluteDifferences([D)[D"]
49218 [label="org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest.wilcoxonSignedRank([D[D)D"]
49225 [label="org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest.calculateExactPValue(DI)D"]
49229 [label="org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest.calculateAsymptoticPValue(DI)D"]
49233 [label="org.apache.commons.math3.stat.inference.WilcoxonSignedRankTest.wilcoxonSignedRankTest([D[DZ)D"]
49256 [label="org.apache.commons.math3.stat.interval.AgrestiCoullInterval.<init>()V"]
49257 [label="org.apache.commons.math3.stat.interval.AgrestiCoullInterval.createInterval(IID)Lorg/apache/commons/math3/stat/interval/ConfidenceInterval;"]
49265 [label="org.apache.commons.math3.stat.interval.IntervalUtils.checkParameters(IID)V"]
49269 [label="org.apache.commons.math3.stat.interval.ConfidenceInterval.<init>(DDD)V"]
49272 [label="org.apache.commons.math3.stat.interval.BinomialConfidenceInterval.createInterval(IID)Lorg/apache/commons/math3/stat/interval/ConfidenceInterval;"]
49279 [label="org.apache.commons.math3.stat.interval.ClopperPearsonInterval.<init>()V"]
49280 [label="org.apache.commons.math3.stat.interval.ClopperPearsonInterval.createInterval(IID)Lorg/apache/commons/math3/stat/interval/ConfidenceInterval;"]
49297 [label="org.apache.commons.math3.stat.interval.ConfidenceInterval.checkParameters(DDD)V"]
49335 [label="org.apache.commons.math3.stat.interval.IntervalUtils.<init>()V"]
49337 [label="org.apache.commons.math3.stat.interval.IntervalUtils.getAgrestiCoullInterval(IID)Lorg/apache/commons/math3/stat/interval/ConfidenceInterval;"]
49344 [label="org.apache.commons.math3.stat.interval.IntervalUtils.getClopperPearsonInterval(IID)Lorg/apache/commons/math3/stat/interval/ConfidenceInterval;"]
49350 [label="org.apache.commons.math3.stat.interval.IntervalUtils.getNormalApproximationInterval(IID)Lorg/apache/commons/math3/stat/interval/ConfidenceInterval;"]
49356 [label="org.apache.commons.math3.stat.interval.IntervalUtils.getWilsonScoreInterval(IID)Lorg/apache/commons/math3/stat/interval/ConfidenceInterval;"]
49368 [label="org.apache.commons.math3.stat.interval.NormalApproximationInterval.<init>()V"]
49369 [label="org.apache.commons.math3.stat.interval.NormalApproximationInterval.createInterval(IID)Lorg/apache/commons/math3/stat/interval/ConfidenceInterval;"]
49375 [label="org.apache.commons.math3.stat.interval.WilsonScoreInterval.<init>()V"]
49376 [label="org.apache.commons.math3.stat.interval.WilsonScoreInterval.createInterval(IID)Lorg/apache/commons/math3/stat/interval/ConfidenceInterval;"]
49392 [label="org.apache.commons.math3.stat.ranking.NaNStrategy.<init>()V"]
49419 [label="org.apache.commons.math3.stat.ranking.NaturalRanking.<init>(Lorg/apache/commons/math3/stat/ranking/TiesStrategy;)V"]
49422 [label="org.apache.commons.math3.stat.ranking.NaturalRanking.<init>(Lorg/apache/commons/math3/stat/ranking/NaNStrategy;)V"]
49428 [label="org.apache.commons.math3.stat.ranking.NaturalRanking.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V"]
49433 [label="org.apache.commons.math3.stat.ranking.NaturalRanking.<init>(Lorg/apache/commons/math3/stat/ranking/NaNStrategy;Lorg/apache/commons/math3/random/RandomGenerator;)V"]
49446 [label="org.apache.commons.math3.stat.ranking.NaturalRanking$IntDoublePair.<init>(DI)V"]
49448 [label="org.apache.commons.math3.stat.ranking.NaturalRanking.recodeNaNs([Lorg/apache/commons/math3/stat/ranking/NaturalRanking$IntDoublePair;D)V"]
49450 [label="org.apache.commons.math3.stat.ranking.NaturalRanking.removeNaNs([Lorg/apache/commons/math3/stat/ranking/NaturalRanking$IntDoublePair;)[Lorg/apache/commons/math3/stat/ranking/NaturalRanking$IntDoublePair;"]
49452 [label="org.apache.commons.math3.stat.ranking.NaturalRanking.getNanPositions([Lorg/apache/commons/math3/stat/ranking/NaturalRanking$IntDoublePair;)Ljava/util/List;"]
49454 [label="org.apache.commons.math3.stat.ranking.NaturalRanking$IntDoublePair.getPosition()I"]
49456 [label="org.apache.commons.math3.stat.ranking.NaturalRanking$IntDoublePair.getValue()D"]
49458 [label="org.apache.commons.math3.stat.ranking.NaturalRanking.resolveTie([DLjava/util/List;)V"]
49460 [label="org.apache.commons.math3.stat.ranking.NaturalRanking.restoreNaNs([DLjava/util/List;)V"]
49464 [label="org.apache.commons.math3.stat.ranking.NaturalRanking.containsNaNs([Lorg/apache/commons/math3/stat/ranking/NaturalRanking$IntDoublePair;)Z"]
49474 [label="org.apache.commons.math3.stat.ranking.NaturalRanking.fill([DLjava/util/List;D)V"]
49507 [label="org.apache.commons.math3.stat.ranking.NaturalRanking$IntDoublePair.compareTo(Lorg/apache/commons/math3/stat/ranking/NaturalRanking$IntDoublePair;)I"]
49520 [label="org.apache.commons.math3.stat.ranking.TiesStrategy.<init>()V"]
49547 [label="org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression.<init>()V"]
49554 [label="org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression.getX()Lorg/apache/commons/math3/linear/RealMatrix;"]
49557 [label="org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression.getY()Lorg/apache/commons/math3/linear/RealVector;"]
49560 [label="org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression.isNoIntercept()Z"]
49566 [label="org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression.newSampleData([DII)V"]
49571 [label="org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression.newYSampleData([D)V"]
49574 [label="org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression.newXSampleData([[D)V"]
49577 [label="org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression.validateSampleData([[D[D)V"]
49582 [label="org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression.validateCovarianceData([[D[[D)V"]
49586 [label="org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression.estimateRegressionParameters()[D"]
49588 [label="org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression.calculateBeta()Lorg/apache/commons/math3/linear/RealVector;"]
49590 [label="org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression.estimateResiduals()[D"]
49592 [label="org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression.estimateRegressionParametersVariance()[[D"]
49594 [label="org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression.calculateBetaVariance()Lorg/apache/commons/math3/linear/RealMatrix;"]
49596 [label="org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression.estimateRegressionParametersStandardErrors()[D"]
49599 [label="org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression.calculateErrorVariance()D"]
49601 [label="org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression.estimateRegressandVariance()D"]
49603 [label="org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression.calculateYVariance()D"]
49605 [label="org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression.estimateErrorVariance()D"]
49607 [label="org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression.estimateRegressionStandardError()D"]
49614 [label="org.apache.commons.math3.stat.regression.AbstractMultipleLinearRegression.calculateResiduals()Lorg/apache/commons/math3/linear/RealVector;"]
49621 [label="org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression.<init>()V"]
49627 [label="org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression.newSampleData([D[[D[[D)V"]
49636 [label="org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression.newCovarianceData([[D)V"]
49642 [label="org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression.getOmegaInverse()Lorg/apache/commons/math3/linear/RealMatrix;"]
49644 [label="org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression.calculateBeta()Lorg/apache/commons/math3/linear/RealVector;"]
49649 [label="org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression.calculateBetaVariance()Lorg/apache/commons/math3/linear/RealMatrix;"]
49651 [label="org.apache.commons.math3.stat.regression.GLSMultipleLinearRegression.calculateErrorVariance()D"]
49696 [label="org.apache.commons.math3.stat.regression.MillerUpdatingRegression.<init>()V"]
49698 [label="org.apache.commons.math3.stat.regression.MillerUpdatingRegression.<init>(IZD)V"]
49707 [label="org.apache.commons.math3.stat.regression.ModelSpecificationException.<init>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V"]
49724 [label="org.apache.commons.math3.stat.regression.MillerUpdatingRegression.<init>(IZ)V"]
49732 [label="org.apache.commons.math3.stat.regression.MillerUpdatingRegression.addObservation([DD)V"]
49737 [label="org.apache.commons.math3.stat.regression.MillerUpdatingRegression.include([DDD)V"]
49739 [label="org.apache.commons.math3.stat.regression.MillerUpdatingRegression.addObservations([[D[D)V"]
49750 [label="org.apache.commons.math3.stat.regression.MillerUpdatingRegression.smartAdd(DD)D"]
49757 [label="org.apache.commons.math3.stat.regression.MillerUpdatingRegression.clear()V"]
49760 [label="org.apache.commons.math3.stat.regression.MillerUpdatingRegression.tolset()V"]
49762 [label="org.apache.commons.math3.stat.regression.MillerUpdatingRegression.regcf(I)[D"]
49767 [label="org.apache.commons.math3.stat.regression.MillerUpdatingRegression.singcheck()V"]
49769 [label="org.apache.commons.math3.stat.regression.MillerUpdatingRegression.ss()V"]
49771 [label="org.apache.commons.math3.stat.regression.MillerUpdatingRegression.cov(I)[D"]
49774 [label="org.apache.commons.math3.stat.regression.MillerUpdatingRegression.inverse([DI)V"]
49779 [label="org.apache.commons.math3.stat.regression.MillerUpdatingRegression.getPartialCorrelations(I)[D"]
49782 [label="org.apache.commons.math3.stat.regression.MillerUpdatingRegression.vmove(II)V"]
49787 [label="org.apache.commons.math3.stat.regression.MillerUpdatingRegression.reorderRegressors([II)I"]
49792 [label="org.apache.commons.math3.stat.regression.MillerUpdatingRegression.getDiagonalOfHatMatrix([D)D"]
49795 [label="org.apache.commons.math3.stat.regression.MillerUpdatingRegression.getOrderOfRegressors()[I"]
49797 [label="org.apache.commons.math3.util.MathArrays.copyOf([I)[I"]
49799 [label="org.apache.commons.math3.stat.regression.MillerUpdatingRegression.regress()Lorg/apache/commons/math3/stat/regression/RegressionResults;"]
49804 [label="org.apache.commons.math3.stat.regression.MillerUpdatingRegression.regress(I)Lorg/apache/commons/math3/stat/regression/RegressionResults;"]
49811 [label="org.apache.commons.math3.stat.regression.RegressionResults.<init>([D[[DZJIDDDZZ)V"]
49813 [label="org.apache.commons.math3.stat.regression.MillerUpdatingRegression.regress([I)Lorg/apache/commons/math3/stat/regression/RegressionResults;"]
49816 [label="java.util.Arrays.sort([I)V"]
49843 [label="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.<init>()V"]
49845 [label="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.<init>(D)V"]
49850 [label="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.newSampleData([D[[D)V"]
49854 [label="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.newXSampleData([[D)V"]
49856 [label="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.newSampleData([DII)V"]
49863 [label="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.calculateHat()Lorg/apache/commons/math3/linear/RealMatrix;"]
49866 [label="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.calculateTotalSumOfSquares()D"]
49869 [label="org.apache.commons.math3.stat.StatUtils.sumSq([D)D"]
49871 [label="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.calculateResidualSumOfSquares()D"]
49873 [label="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.calculateRSquared()D"]
49877 [label="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.calculateAdjustedRSquared()D"]
49882 [label="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.calculateBeta()Lorg/apache/commons/math3/linear/RealVector;"]
49884 [label="org.apache.commons.math3.stat.regression.OLSMultipleLinearRegression.calculateBetaVariance()Lorg/apache/commons/math3/linear/RealMatrix;"]
49913 [label="org.apache.commons.math3.stat.regression.RegressionResults.<init>()V"]
49938 [label="org.apache.commons.math3.stat.regression.RegressionResults.getParameterEstimate(I)D"]
49941 [label="org.apache.commons.math3.stat.regression.RegressionResults.getParameterEstimates()[D"]
49943 [label="org.apache.commons.math3.stat.regression.RegressionResults.getStdErrorOfEstimate(I)D"]
49946 [label="org.apache.commons.math3.stat.regression.RegressionResults.getVcvElement(II)D"]
49948 [label="org.apache.commons.math3.stat.regression.RegressionResults.getStdErrorOfEstimates()[D"]
49950 [label="org.apache.commons.math3.stat.regression.RegressionResults.getCovarianceOfParameters(II)D"]
49998 [label="org.apache.commons.math3.stat.regression.SimpleRegression.<init>(Z)V"]
50017 [label="org.apache.commons.math3.stat.regression.SimpleRegression.removeData(DD)V"]
50021 [label="org.apache.commons.math3.stat.regression.SimpleRegression.addData([[D)V"]
50024 [label="org.apache.commons.math3.stat.regression.SimpleRegression.addObservation([DD)V"]
50028 [label="org.apache.commons.math3.stat.regression.SimpleRegression.addObservations([[D[D)V"]
50032 [label="org.apache.commons.math3.stat.regression.SimpleRegression.removeData([[D)V"]
50040 [label="org.apache.commons.math3.stat.regression.SimpleRegression.predict(D)D"]
50043 [label="org.apache.commons.math3.stat.regression.SimpleRegression.getSlope()D"]
50045 [label="org.apache.commons.math3.stat.regression.SimpleRegression.getIntercept(D)D"]
50047 [label="org.apache.commons.math3.stat.regression.SimpleRegression.getIntercept()D"]
50052 [label="org.apache.commons.math3.stat.regression.SimpleRegression.getSumSquaredErrors()D"]
50054 [label="org.apache.commons.math3.stat.regression.SimpleRegression.getTotalSumSquares()D"]
50060 [label="org.apache.commons.math3.stat.regression.SimpleRegression.getRegressionSumSquares()D"]
50062 [label="org.apache.commons.math3.stat.regression.SimpleRegression.getRegressionSumSquares(D)D"]
50064 [label="org.apache.commons.math3.stat.regression.SimpleRegression.getMeanSquareError()D"]
50068 [label="org.apache.commons.math3.stat.regression.SimpleRegression.getRSquare()D"]
50072 [label="org.apache.commons.math3.stat.regression.SimpleRegression.getInterceptStdErr()D"]
50075 [label="org.apache.commons.math3.stat.regression.SimpleRegression.getSlopeStdErr()D"]
50077 [label="org.apache.commons.math3.stat.regression.SimpleRegression.getSlopeConfidenceInterval()D"]
50079 [label="org.apache.commons.math3.stat.regression.SimpleRegression.getSlopeConfidenceInterval(D)D"]
50084 [label="org.apache.commons.math3.stat.regression.SimpleRegression.getSignificance()D"]
50091 [label="org.apache.commons.math3.stat.regression.SimpleRegression.regress()Lorg/apache/commons/math3/stat/regression/RegressionResults;"]
50095 [label="org.apache.commons.math3.stat.regression.SimpleRegression.regress([I)Lorg/apache/commons/math3/stat/regression/RegressionResults;"]
50143 [label="org.apache.commons.math3.stat.StatUtils.<init>()V"]
50145 [label="org.apache.commons.math3.stat.StatUtils.sum([D)D"]
50150 [label="org.apache.commons.math3.stat.StatUtils.sum([DII)D"]
50158 [label="org.apache.commons.math3.stat.StatUtils.sumSq([DII)D"]
50163 [label="org.apache.commons.math3.stat.StatUtils.product([D)D"]
50167 [label="org.apache.commons.math3.stat.StatUtils.product([DII)D"]
50172 [label="org.apache.commons.math3.stat.StatUtils.sumLog([D)D"]
50176 [label="org.apache.commons.math3.stat.StatUtils.sumLog([DII)D"]
50184 [label="org.apache.commons.math3.stat.StatUtils.mean([DII)D"]
50189 [label="org.apache.commons.math3.stat.StatUtils.geometricMean([D)D"]
50193 [label="org.apache.commons.math3.stat.StatUtils.geometricMean([DII)D"]
50202 [label="org.apache.commons.math3.stat.StatUtils.variance([DII)D"]
50207 [label="org.apache.commons.math3.stat.StatUtils.variance([DDII)D"]
50213 [label="org.apache.commons.math3.stat.StatUtils.variance([DD)D"]
50217 [label="org.apache.commons.math3.stat.StatUtils.populationVariance([D)D"]
50220 [label="org.apache.commons.math3.stat.StatUtils.populationVariance([DII)D"]
50225 [label="org.apache.commons.math3.stat.StatUtils.populationVariance([DDII)D"]
50231 [label="org.apache.commons.math3.stat.StatUtils.populationVariance([DD)D"]
50235 [label="org.apache.commons.math3.stat.StatUtils.max([D)D"]
50239 [label="org.apache.commons.math3.stat.StatUtils.max([DII)D"]
50244 [label="org.apache.commons.math3.stat.StatUtils.min([D)D"]
50248 [label="org.apache.commons.math3.stat.StatUtils.min([DII)D"]
50253 [label="org.apache.commons.math3.stat.StatUtils.percentile([DD)D"]
50258 [label="org.apache.commons.math3.stat.StatUtils.percentile([DIID)D"]
50264 [label="org.apache.commons.math3.stat.StatUtils.sumDifference([D[D)D"]
50276 [label="org.apache.commons.math3.stat.StatUtils.normalize([D)[D"]
50279 [label="org.apache.commons.math3.stat.StatUtils.mode([D)[D"]
50282 [label="org.apache.commons.math3.stat.StatUtils.getMode([DII)[D"]
50284 [label="org.apache.commons.math3.stat.StatUtils.mode([DII)[D"]
50315 [label="org.apache.commons.math3.transform.DctNormalization.<init>()V"]
50331 [label="org.apache.commons.math3.transform.DftNormalization.<init>()V"]
50347 [label="org.apache.commons.math3.transform.DstNormalization.<init>()V"]
50365 [label="org.apache.commons.math3.transform.FastCosineTransformer.<init>(Lorg/apache/commons/math3/transform/DctNormalization;)V"]
50369 [label="org.apache.commons.math3.transform.FastCosineTransformer.transform([DLorg/apache/commons/math3/transform/TransformType;)[D"]
50379 [label="org.apache.commons.math3.transform.TransformUtils.scaleArray([DD)[D"]
50381 [label="org.apache.commons.math3.transform.FastCosineTransformer.fct([D)[D"]
50383 [label="org.apache.commons.math3.transform.FastCosineTransformer.transform(Lorg/apache/commons/math3/analysis/UnivariateFunction;DDILorg/apache/commons/math3/transform/TransformType;)[D"]
50394 [label="org.apache.commons.math3.util.ArithmeticUtils.isPowerOfTwo(J)Z"]
50400 [label="org.apache.commons.math3.transform.FastFourierTransformer.<init>(Lorg/apache/commons/math3/transform/DftNormalization;)V"]
50403 [label="org.apache.commons.math3.transform.FastFourierTransformer.transform([DLorg/apache/commons/math3/transform/TransformType;)[Lorg/apache/commons/math3/complex/Complex;"]
50417 [label="org.apache.commons.math3.transform.FastFourierTransformer.bitReversalShuffle2([D[D)V"]
50421 [label="org.apache.commons.math3.transform.FastFourierTransformer.normalizeTransformedData([[DLorg/apache/commons/math3/transform/DftNormalization;Lorg/apache/commons/math3/transform/TransformType;)V"]
50429 [label="org.apache.commons.math3.transform.FastFourierTransformer.transformInPlace([[DLorg/apache/commons/math3/transform/DftNormalization;Lorg/apache/commons/math3/transform/TransformType;)V"]
50443 [label="org.apache.commons.math3.transform.TransformUtils.createComplexArray([[D)[Lorg/apache/commons/math3/complex/Complex;"]
50445 [label="org.apache.commons.math3.transform.FastFourierTransformer.transform(Lorg/apache/commons/math3/analysis/UnivariateFunction;DDILorg/apache/commons/math3/transform/TransformType;)[Lorg/apache/commons/math3/complex/Complex;"]
50452 [label="org.apache.commons.math3.transform.FastFourierTransformer.transform([Lorg/apache/commons/math3/complex/Complex;Lorg/apache/commons/math3/transform/TransformType;)[Lorg/apache/commons/math3/complex/Complex;"]
50456 [label="org.apache.commons.math3.transform.TransformUtils.createRealImaginaryArray([Lorg/apache/commons/math3/complex/Complex;)[[D"]
50458 [label="org.apache.commons.math3.transform.FastFourierTransformer.mdfft(Ljava/lang/Object;Lorg/apache/commons/math3/transform/TransformType;)Ljava/lang/Object;"]
50465 [label="org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.clone()Ljava/lang/Object;"]
50467 [label="org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.<init>(Ljava/lang/Object;)V"]
50469 [label="org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.getDimensionSizes()[I"]
50471 [label="org.apache.commons.math3.transform.FastFourierTransformer.mdfft(Lorg/apache/commons/math3/transform/FastFourierTransformer$MultiDimensionalComplexMatrix;Lorg/apache/commons/math3/transform/TransformType;I[I)V"]
50473 [label="org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.getArray()Ljava/lang/Object;"]
50480 [label="org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.get([I)Lorg/apache/commons/math3/complex/Complex;"]
50483 [label="org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.set(Lorg/apache/commons/math3/complex/Complex;[I)Lorg/apache/commons/math3/complex/Complex;"]
50502 [label="java.lang.reflect.Array.newInstance(Ljava/lang/Class;[I)Ljava/lang/Object;"]
50504 [label="org.apache.commons.math3.transform.FastFourierTransformer$MultiDimensionalComplexMatrix.clone(Lorg/apache/commons/math3/transform/FastFourierTransformer$MultiDimensionalComplexMatrix;)V"]
50510 [label="org.apache.commons.math3.transform.FastHadamardTransformer.<init>()V"]
50513 [label="org.apache.commons.math3.transform.FastHadamardTransformer.transform([DLorg/apache/commons/math3/transform/TransformType;)[D"]
50517 [label="org.apache.commons.math3.transform.FastHadamardTransformer.fht([D)[D"]
50519 [label="org.apache.commons.math3.transform.FastHadamardTransformer.transform(Lorg/apache/commons/math3/analysis/UnivariateFunction;DDILorg/apache/commons/math3/transform/TransformType;)[D"]
50527 [label="org.apache.commons.math3.transform.FastHadamardTransformer.transform([I)[I"]
50530 [label="org.apache.commons.math3.transform.FastHadamardTransformer.fht([I)[I"]
50543 [label="org.apache.commons.math3.transform.FastSineTransformer.<init>(Lorg/apache/commons/math3/transform/DstNormalization;)V"]
50547 [label="org.apache.commons.math3.transform.FastSineTransformer.transform([DLorg/apache/commons/math3/transform/TransformType;)[D"]
50552 [label="org.apache.commons.math3.transform.FastSineTransformer.fst([D)[D"]
50554 [label="org.apache.commons.math3.transform.FastSineTransformer.transform(Lorg/apache/commons/math3/analysis/UnivariateFunction;DDILorg/apache/commons/math3/transform/TransformType;)[D"]
50581 [label="org.apache.commons.math3.transform.TransformType.<init>()V"]
50592 [label="org.apache.commons.math3.transform.TransformUtils.<init>()V"]
50597 [label="org.apache.commons.math3.transform.TransformUtils.scaleArray([Lorg/apache/commons/math3/complex/Complex;D)[Lorg/apache/commons/math3/complex/Complex;"]
50605 [label="org.apache.commons.math3.transform.TransformUtils.exactLog2(I)I"]
50608 [label="java.util.Arrays.binarySearch([II)I"]
50650 [label="org.apache.commons.math3.util.ArithmeticUtils.<init>()V"]
50656 [label="org.apache.commons.math3.util.ArithmeticUtils.addAndCheck(JJ)J"]
50660 [label="org.apache.commons.math3.util.ArithmeticUtils.addAndCheck(JJLorg/apache/commons/math3/exception/util/Localizable;)J"]
50662 [label="org.apache.commons.math3.util.ArithmeticUtils.binomialCoefficient(II)J"]
50666 [label="org.apache.commons.math3.util.ArithmeticUtils.binomialCoefficientDouble(II)D"]
50670 [label="org.apache.commons.math3.util.ArithmeticUtils.binomialCoefficientLog(II)D"]
50674 [label="org.apache.commons.math3.util.ArithmeticUtils.factorial(I)J"]
50677 [label="org.apache.commons.math3.util.ArithmeticUtils.factorialDouble(I)D"]
50680 [label="org.apache.commons.math3.util.CombinatoricsUtils.factorialDouble(I)D"]
50682 [label="org.apache.commons.math3.util.ArithmeticUtils.factorialLog(I)D"]
50689 [label="org.apache.commons.math3.util.ArithmeticUtils.gcdPositive(II)I"]
50694 [label="java.lang.Math.min(II)I"]
50696 [label="java.lang.Math.abs(I)I"]
50698 [label="org.apache.commons.math3.util.ArithmeticUtils.gcd(JJ)J"]
50703 [label="org.apache.commons.math3.util.ArithmeticUtils.lcm(II)I"]
50708 [label="org.apache.commons.math3.util.ArithmeticUtils.lcm(JJ)J"]
50712 [label="org.apache.commons.math3.util.ArithmeticUtils.mulAndCheck(JJ)J"]
50727 [label="org.apache.commons.math3.util.ArithmeticUtils.subAndCheck(JJ)J"]
50731 [label="org.apache.commons.math3.util.ArithmeticUtils.pow(II)I"]
50737 [label="org.apache.commons.math3.util.ArithmeticUtils.pow(IJ)I"]
50741 [label="org.apache.commons.math3.util.ArithmeticUtils.pow(JI)J"]
50745 [label="org.apache.commons.math3.util.ArithmeticUtils.pow(JJ)J"]
50749 [label="org.apache.commons.math3.util.ArithmeticUtils.pow(Ljava/math/BigInteger;I)Ljava/math/BigInteger;"]
50759 [label="java.math.BigInteger.testBit(I)Z"]
50761 [label="org.apache.commons.math3.util.ArithmeticUtils.stirlingS2(II)J"]
50765 [label="org.apache.commons.math3.util.CombinatoricsUtils.stirlingS2(II)J"]
50800 [label="org.apache.commons.math3.util.BigReal.<init>(Ljava/math/BigDecimal;)V"]
50804 [label="org.apache.commons.math3.util.BigReal.<init>(Ljava/math/BigInteger;)V"]
50807 [label="org.apache.commons.math3.util.BigReal.<init>(Ljava/math/BigInteger;I)V"]
50811 [label="java.math.BigDecimal.<init>(Ljava/math/BigInteger;I)V"]
50813 [label="org.apache.commons.math3.util.BigReal.<init>(Ljava/math/BigInteger;ILjava/math/MathContext;)V"]
50818 [label="java.math.BigDecimal.<init>(Ljava/math/BigInteger;ILjava/math/MathContext;)V"]
50820 [label="org.apache.commons.math3.util.BigReal.<init>(Ljava/math/BigInteger;Ljava/math/MathContext;)V"]
50824 [label="java.math.BigDecimal.<init>(Ljava/math/BigInteger;Ljava/math/MathContext;)V"]
50826 [label="org.apache.commons.math3.util.BigReal.<init>([C)V"]
50829 [label="java.math.BigDecimal.<init>([C)V"]
50831 [label="org.apache.commons.math3.util.BigReal.<init>([CII)V"]
50836 [label="java.math.BigDecimal.<init>([CII)V"]
50838 [label="org.apache.commons.math3.util.BigReal.<init>([CIILjava/math/MathContext;)V"]
50844 [label="java.math.BigDecimal.<init>([CIILjava/math/MathContext;)V"]
50846 [label="org.apache.commons.math3.util.BigReal.<init>([CLjava/math/MathContext;)V"]
50850 [label="java.math.BigDecimal.<init>([CLjava/math/MathContext;)V"]
50852 [label="org.apache.commons.math3.util.BigReal.<init>(D)V"]
50855 [label="java.math.BigDecimal.<init>(D)V"]
50857 [label="org.apache.commons.math3.util.BigReal.<init>(DLjava/math/MathContext;)V"]
50861 [label="java.math.BigDecimal.<init>(DLjava/math/MathContext;)V"]
50863 [label="org.apache.commons.math3.util.BigReal.<init>(I)V"]
50866 [label="java.math.BigDecimal.<init>(I)V"]
50868 [label="org.apache.commons.math3.util.BigReal.<init>(ILjava/math/MathContext;)V"]
50872 [label="org.apache.commons.math3.util.BigReal.<init>(J)V"]
50875 [label="java.math.BigDecimal.<init>(J)V"]
50877 [label="org.apache.commons.math3.util.BigReal.<init>(JLjava/math/MathContext;)V"]
50881 [label="java.math.BigDecimal.<init>(JLjava/math/MathContext;)V"]
50883 [label="org.apache.commons.math3.util.BigReal.<init>(Ljava/lang/String;)V"]
50886 [label="java.math.BigDecimal.<init>(Ljava/lang/String;)V"]
50888 [label="org.apache.commons.math3.util.BigReal.<init>(Ljava/lang/String;Ljava/math/MathContext;)V"]
50904 [label="org.apache.commons.math3.util.BigReal.add(Lorg/apache/commons/math3/util/BigReal;)Lorg/apache/commons/math3/util/BigReal;"]
50908 [label="java.math.BigDecimal.add(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;"]
50910 [label="org.apache.commons.math3.util.BigReal.subtract(Lorg/apache/commons/math3/util/BigReal;)Lorg/apache/commons/math3/util/BigReal;"]
50913 [label="java.math.BigDecimal.subtract(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;"]
50915 [label="org.apache.commons.math3.util.BigReal.negate()Lorg/apache/commons/math3/util/BigReal;"]
50917 [label="java.math.BigDecimal.negate()Ljava/math/BigDecimal;"]
50919 [label="org.apache.commons.math3.util.BigReal.divide(Lorg/apache/commons/math3/util/BigReal;)Lorg/apache/commons/math3/util/BigReal;"]
50922 [label="java.math.BigDecimal.divide(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;"]
50924 [label="org.apache.commons.math3.util.BigReal.reciprocal()Lorg/apache/commons/math3/util/BigReal;"]
50926 [label="org.apache.commons.math3.util.BigReal.multiply(Lorg/apache/commons/math3/util/BigReal;)Lorg/apache/commons/math3/util/BigReal;"]
50929 [label="org.apache.commons.math3.util.BigReal.multiply(I)Lorg/apache/commons/math3/util/BigReal;"]
50932 [label="org.apache.commons.math3.util.BigReal.compareTo(Lorg/apache/commons/math3/util/BigReal;)I"]
50935 [label="org.apache.commons.math3.util.BigReal.doubleValue()D"]
50939 [label="org.apache.commons.math3.util.BigReal.equals(Ljava/lang/Object;)Z"]
50942 [label="java.math.BigDecimal.equals(Ljava/lang/Object;)Z"]
50944 [label="org.apache.commons.math3.util.BigReal.hashCode()I"]
50946 [label="java.math.BigDecimal.hashCode()I"]
50948 [label="org.apache.commons.math3.util.BigReal.getField()Lorg/apache/commons/math3/Field;"]
50953 [label="org.apache.commons.math3.util.BigRealField.getInstance()Lorg/apache/commons/math3/util/BigRealField;"]
50959 [label="org.apache.commons.math3.util.BigRealField.<init>()V"]
50980 [label="org.apache.commons.math3.util.BigRealField$LazyHolder.<init>()V"]
50987 [label="org.apache.commons.math3.util.CentralPivotingStrategy.<init>()V"]
50990 [label="org.apache.commons.math3.util.CentralPivotingStrategy.pivotIndex([DII)I"]
51013 [label="org.apache.commons.math3.util.Combinations$IterationOrder.<init>()V"]
51020 [label="org.apache.commons.math3.util.Combinations.<init>(II)V"]
51024 [label="org.apache.commons.math3.util.Combinations.<init>(IILorg/apache/commons/math3/util/Combinations$IterationOrder;)V"]
51031 [label="org.apache.commons.math3.util.CombinatoricsUtils.checkBinomial(II)V"]
51040 [label="org.apache.commons.math3.util.Combinations.iterator()Ljava/util/Iterator;"]
51048 [label="org.apache.commons.math3.util.Combinations$SingletonIterator.<init>([I)V"]
51053 [label="org.apache.commons.math3.util.Combinations$LexicographicIterator.<init>(II)V"]
51055 [label="org.apache.commons.math3.util.Combinations.comparator()Ljava/util/Comparator;"]
51063 [label="org.apache.commons.math3.util.Combinations$LexicographicComparator.<init>(II)V"]
51083 [label="org.apache.commons.math3.util.Combinations$LexicographicIterator.next()[I"]
51085 [label="org.apache.commons.math3.util.Combinations$LexicographicIterator.remove()V"]
51098 [label="org.apache.commons.math3.util.Combinations$SingletonIterator.next()[I"]
51100 [label="org.apache.commons.math3.util.Combinations$SingletonIterator.remove()V"]
51114 [label="org.apache.commons.math3.util.Combinations$LexicographicComparator.compare([I[I)I"]
51118 [label="org.apache.commons.math3.util.Combinations$LexicographicComparator.lexNorm([I)J"]
51132 [label="org.apache.commons.math3.util.CombinatoricsUtils.<init>()V"]
51155 [label="org.apache.commons.math3.util.CombinatoricsUtils.combinationsIterator(II)Ljava/util/Iterator;"]
51169 [label="org.apache.commons.math3.util.CompositeFormat.<init>()V"]
51174 [label="java.text.NumberFormat.getInstance(Ljava/util/Locale;)Ljava/text/NumberFormat;"]
51182 [label="org.apache.commons.math3.util.CompositeFormat.parseNumber(Ljava/lang/String;DLjava/text/ParsePosition;)Ljava/lang/Number;"]
51187 [label="java.lang.String.compareTo(Ljava/lang/String;)I"]
51203 [label="java.text.NumberFormat.format(DLjava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;"]
51209 [label="org.apache.commons.math3.util.ContinuedFraction.getA(ID)D"]
51213 [label="org.apache.commons.math3.util.ContinuedFraction.getB(ID)D"]
51217 [label="org.apache.commons.math3.util.ContinuedFraction.evaluate(D)D"]
51221 [label="org.apache.commons.math3.util.ContinuedFraction.evaluate(DD)D"]
51225 [label="org.apache.commons.math3.util.ContinuedFraction.evaluate(DI)D"]
51260 [label="org.apache.commons.math3.util.Decimal64.<clinit>()"]
51262 [label="org.apache.commons.math3.util.Decimal64.<init>(D)V"]
51273 [label="org.apache.commons.math3.util.Decimal64.getField()Lorg/apache/commons/math3/Field;"]
51279 [label="org.apache.commons.math3.util.Decimal64Field.getInstance()Lorg/apache/commons/math3/util/Decimal64Field;"]
51281 [label="org.apache.commons.math3.util.Decimal64.add(Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;"]
51284 [label="org.apache.commons.math3.util.Decimal64.subtract(Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;"]
51287 [label="org.apache.commons.math3.util.Decimal64.negate()Lorg/apache/commons/math3/util/Decimal64;"]
51289 [label="org.apache.commons.math3.util.Decimal64.multiply(Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;"]
51292 [label="org.apache.commons.math3.util.Decimal64.multiply(I)Lorg/apache/commons/math3/util/Decimal64;"]
51295 [label="org.apache.commons.math3.util.Decimal64.divide(Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;"]
51298 [label="org.apache.commons.math3.util.Decimal64.reciprocal()Lorg/apache/commons/math3/util/Decimal64;"]
51313 [label="org.apache.commons.math3.util.Decimal64.compareTo(Lorg/apache/commons/math3/util/Decimal64;)I"]
51317 [label="org.apache.commons.math3.util.Decimal64.equals(Ljava/lang/Object;)Z"]
51321 [label="org.apache.commons.math3.util.Decimal64.hashCode()I"]
51323 [label="org.apache.commons.math3.util.Decimal64.toString()Ljava/lang/String;"]
51325 [label="org.apache.commons.math3.util.Decimal64.isInfinite()Z"]
51328 [label="org.apache.commons.math3.util.Decimal64.isNaN()Z"]
51332 [label="org.apache.commons.math3.util.Decimal64.add(D)Lorg/apache/commons/math3/util/Decimal64;"]
51335 [label="org.apache.commons.math3.util.Decimal64.subtract(D)Lorg/apache/commons/math3/util/Decimal64;"]
51338 [label="org.apache.commons.math3.util.Decimal64.multiply(D)Lorg/apache/commons/math3/util/Decimal64;"]
51341 [label="org.apache.commons.math3.util.Decimal64.divide(D)Lorg/apache/commons/math3/util/Decimal64;"]
51344 [label="org.apache.commons.math3.util.Decimal64.remainder(D)Lorg/apache/commons/math3/util/Decimal64;"]
51347 [label="org.apache.commons.math3.util.Decimal64.remainder(Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;"]
51350 [label="org.apache.commons.math3.util.Decimal64.abs()Lorg/apache/commons/math3/util/Decimal64;"]
51352 [label="org.apache.commons.math3.util.Decimal64.ceil()Lorg/apache/commons/math3/util/Decimal64;"]
51354 [label="org.apache.commons.math3.util.Decimal64.floor()Lorg/apache/commons/math3/util/Decimal64;"]
51356 [label="org.apache.commons.math3.util.Decimal64.rint()Lorg/apache/commons/math3/util/Decimal64;"]
51358 [label="org.apache.commons.math3.util.Decimal64.round()J"]
51360 [label="org.apache.commons.math3.util.Decimal64.signum()Lorg/apache/commons/math3/util/Decimal64;"]
51362 [label="org.apache.commons.math3.util.Decimal64.copySign(Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;"]
51365 [label="org.apache.commons.math3.util.Decimal64.copySign(D)Lorg/apache/commons/math3/util/Decimal64;"]
51368 [label="org.apache.commons.math3.util.Decimal64.scalb(I)Lorg/apache/commons/math3/util/Decimal64;"]
51371 [label="org.apache.commons.math3.util.Decimal64.hypot(Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;"]
51374 [label="org.apache.commons.math3.util.Decimal64.sqrt()Lorg/apache/commons/math3/util/Decimal64;"]
51376 [label="org.apache.commons.math3.util.Decimal64.cbrt()Lorg/apache/commons/math3/util/Decimal64;"]
51378 [label="org.apache.commons.math3.util.Decimal64.rootN(I)Lorg/apache/commons/math3/util/Decimal64;"]
51381 [label="org.apache.commons.math3.util.Decimal64.pow(D)Lorg/apache/commons/math3/util/Decimal64;"]
51384 [label="org.apache.commons.math3.util.Decimal64.pow(I)Lorg/apache/commons/math3/util/Decimal64;"]
51387 [label="org.apache.commons.math3.util.Decimal64.pow(Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;"]
51390 [label="org.apache.commons.math3.util.Decimal64.exp()Lorg/apache/commons/math3/util/Decimal64;"]
51392 [label="org.apache.commons.math3.util.Decimal64.expm1()Lorg/apache/commons/math3/util/Decimal64;"]
51394 [label="org.apache.commons.math3.util.Decimal64.log()Lorg/apache/commons/math3/util/Decimal64;"]
51396 [label="org.apache.commons.math3.util.Decimal64.log1p()Lorg/apache/commons/math3/util/Decimal64;"]
51398 [label="org.apache.commons.math3.util.Decimal64.log10()Lorg/apache/commons/math3/util/Decimal64;"]
51400 [label="org.apache.commons.math3.util.Decimal64.cos()Lorg/apache/commons/math3/util/Decimal64;"]
51402 [label="org.apache.commons.math3.util.Decimal64.sin()Lorg/apache/commons/math3/util/Decimal64;"]
51404 [label="org.apache.commons.math3.util.Decimal64.tan()Lorg/apache/commons/math3/util/Decimal64;"]
51406 [label="org.apache.commons.math3.util.Decimal64.acos()Lorg/apache/commons/math3/util/Decimal64;"]
51408 [label="org.apache.commons.math3.util.Decimal64.asin()Lorg/apache/commons/math3/util/Decimal64;"]
51410 [label="org.apache.commons.math3.util.Decimal64.atan()Lorg/apache/commons/math3/util/Decimal64;"]
51412 [label="org.apache.commons.math3.util.Decimal64.atan2(Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;"]
51415 [label="org.apache.commons.math3.util.Decimal64.cosh()Lorg/apache/commons/math3/util/Decimal64;"]
51417 [label="org.apache.commons.math3.util.Decimal64.sinh()Lorg/apache/commons/math3/util/Decimal64;"]
51419 [label="org.apache.commons.math3.util.Decimal64.tanh()Lorg/apache/commons/math3/util/Decimal64;"]
51421 [label="org.apache.commons.math3.util.Decimal64.acosh()Lorg/apache/commons/math3/util/Decimal64;"]
51423 [label="org.apache.commons.math3.util.Decimal64.asinh()Lorg/apache/commons/math3/util/Decimal64;"]
51425 [label="org.apache.commons.math3.util.Decimal64.atanh()Lorg/apache/commons/math3/util/Decimal64;"]
51427 [label="org.apache.commons.math3.util.Decimal64.linearCombination([Lorg/apache/commons/math3/util/Decimal64;[Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;"]
51432 [label="org.apache.commons.math3.util.Decimal64.linearCombination([D[Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;"]
51436 [label="org.apache.commons.math3.util.Decimal64.linearCombination(Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;"]
51442 [label="org.apache.commons.math3.util.Decimal64.linearCombination(DLorg/apache/commons/math3/util/Decimal64;DLorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;"]
51448 [label="org.apache.commons.math3.util.Decimal64.linearCombination(Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;"]
51456 [label="org.apache.commons.math3.util.Decimal64.linearCombination(DLorg/apache/commons/math3/util/Decimal64;DLorg/apache/commons/math3/util/Decimal64;DLorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;"]
51464 [label="org.apache.commons.math3.util.Decimal64.linearCombination(Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;Lorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;"]
51474 [label="org.apache.commons.math3.util.Decimal64.linearCombination(DLorg/apache/commons/math3/util/Decimal64;DLorg/apache/commons/math3/util/Decimal64;DLorg/apache/commons/math3/util/Decimal64;DLorg/apache/commons/math3/util/Decimal64;)Lorg/apache/commons/math3/util/Decimal64;"]
51490 [label="org.apache.commons.math3.util.Decimal64Field.<init>()V"]
51511 [label="org.apache.commons.math3.util.DefaultTransformer.<init>()V"]
51514 [label="org.apache.commons.math3.util.DefaultTransformer.transform(Ljava/lang/Object;)D"]
51651 [label="org.apache.commons.math3.util.FastMath.<init>()V"]
51653 [label="org.apache.commons.math3.util.FastMath.doubleHighPart(D)D"]
51657 [label="java.lang.Double.doubleToRawLongBits(D)J"]
51662 [label="java.lang.Math.sqrt(D)D"]
51667 [label="org.apache.commons.math3.util.FastMath.exp(DD[D)D"]
51671 [label="org.apache.commons.math3.util.FastMath.expm1(D[D)D"]
51702 [label="org.apache.commons.math3.util.FastMath.nextUp(D)D"]
51705 [label="org.apache.commons.math3.util.FastMath.nextAfter(DD)D"]
51707 [label="org.apache.commons.math3.util.FastMath.nextUp(F)F"]
51710 [label="org.apache.commons.math3.util.FastMath.nextAfter(FD)F"]
51714 [label="org.apache.commons.math3.util.FastMath.nextDown(D)D"]
51717 [label="org.apache.commons.math3.util.FastMath.nextDown(F)F"]
51723 [label="java.lang.Math.random()D"]
51746 [label="org.apache.commons.math3.util.FastMath.log(D[D)D"]
51762 [label="org.apache.commons.math3.util.FastMath.log(DD)D"]
51772 [label="org.apache.commons.math3.util.FastMath.pow(DJ)D"]
51780 [label="org.apache.commons.math3.util.FastMath$Split.pow(J)Lorg/apache/commons/math3/util/FastMath$Split;"]
51785 [label="org.apache.commons.math3.util.FastMath$Split.<init>(D)V"]
51789 [label="org.apache.commons.math3.util.FastMath$Split.reciprocal()Lorg/apache/commons/math3/util/FastMath$Split;"]
51807 [label="org.apache.commons.math3.util.FastMath$Split.<init>(DD)V"]
51811 [label="org.apache.commons.math3.util.FastMath$Split.<init>(DDD)V"]
51817 [label="org.apache.commons.math3.util.FastMath$Split.multiply(Lorg/apache/commons/math3/util/FastMath$Split;)Lorg/apache/commons/math3/util/FastMath$Split;"]
51828 [label="org.apache.commons.math3.util.FastMath.polySine(D)D"]
51831 [label="org.apache.commons.math3.util.FastMath.polyCosine(D)D"]
51834 [label="org.apache.commons.math3.util.FastMath.sinQ(DD)D"]
51845 [label="org.apache.commons.math3.util.FastMath.cosQ(DD)D"]
51850 [label="org.apache.commons.math3.util.FastMath.tanQ(DDZ)D"]
51855 [label="org.apache.commons.math3.util.FastMath.reducePayneHanek(D[D)V"]
51867 [label="org.apache.commons.math3.util.FastMath$CodyWaite.<init>(D)V"]
51869 [label="org.apache.commons.math3.util.FastMath$CodyWaite.getK()I"]
51871 [label="org.apache.commons.math3.util.FastMath$CodyWaite.getRemA()D"]
51873 [label="org.apache.commons.math3.util.FastMath$CodyWaite.getRemB()D"]
51883 [label="org.apache.commons.math3.util.FastMath.atan(DDZ)D"]
51911 [label="org.apache.commons.math3.util.FastMath.abs(F)F"]
51914 [label="java.lang.Float.intBitsToFloat(I)F"]
51917 [label="java.lang.Float.floatToRawIntBits(F)I"]
51924 [label="org.apache.commons.math3.util.FastMath.ulp(F)F"]
51927 [label="java.lang.Float.isInfinite(F)Z"]
51930 [label="java.lang.Float.floatToIntBits(F)I"]
51935 [label="org.apache.commons.math3.util.FastMath.scalb(FI)F"]
51939 [label="java.lang.Float.isNaN(F)Z"]
51959 [label="org.apache.commons.math3.util.FastMath.round(F)I"]
51968 [label="org.apache.commons.math3.util.FastMath.min(FF)F"]
51982 [label="org.apache.commons.math3.util.FastMath.max(FF)F"]
51995 [label="java.lang.StrictMath.IEEEremainder(DD)D"]
51997 [label="org.apache.commons.math3.util.FastMath.toIntExact(J)I"]
52000 [label="org.apache.commons.math3.util.FastMath.incrementExact(I)I"]
52003 [label="org.apache.commons.math3.util.FastMath.incrementExact(J)J"]
52006 [label="org.apache.commons.math3.util.FastMath.decrementExact(I)I"]
52009 [label="org.apache.commons.math3.util.FastMath.decrementExact(J)J"]
52012 [label="org.apache.commons.math3.util.FastMath.addExact(II)I"]
52016 [label="org.apache.commons.math3.util.FastMath.addExact(JJ)J"]
52020 [label="org.apache.commons.math3.util.FastMath.subtractExact(II)I"]
52024 [label="org.apache.commons.math3.util.FastMath.subtractExact(JJ)J"]
52028 [label="org.apache.commons.math3.util.FastMath.multiplyExact(II)I"]
52033 [label="org.apache.commons.math3.util.FastMath.multiplyExact(JJ)J"]
52037 [label="org.apache.commons.math3.util.FastMath.floorDiv(II)I"]
52041 [label="org.apache.commons.math3.util.FastMath.floorDiv(JJ)J"]
52045 [label="org.apache.commons.math3.util.FastMath.floorMod(II)I"]
52049 [label="org.apache.commons.math3.util.FastMath.floorMod(JJ)J"]
52056 [label="org.apache.commons.math3.util.FastMath.copySign(FF)F"]
52064 [label="org.apache.commons.math3.util.FastMath.main([Ljava/lang/String;)V"]
52072 [label="org.apache.commons.math3.util.FastMathCalc.printarray(Ljava/io/PrintStream;Ljava/lang/String;I[D)V"]
52076 [label="org.apache.commons.math3.util.FastMathCalc.printarray(Ljava/io/PrintStream;Ljava/lang/String;I[[D)V"]
52082 [label="org.apache.commons.math3.util.FastMath$ExpIntTable.<init>()V"]
52085 [label="org.apache.commons.math3.util.FastMath$ExpIntTable.<clinit>()"]
52087 [label="org.apache.commons.math3.util.FastMathCalc.expint(I[D)D"]
52089 [label="org.apache.commons.math3.util.FastMathCalc.splitReciprocal([D[D)V"]
52091 [label="org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntA()[D"]
52093 [label="org.apache.commons.math3.util.FastMathLiteralArrays.loadExpIntB()[D"]
52097 [label="org.apache.commons.math3.util.FastMath$ExpFracTable.<init>()V"]
52100 [label="org.apache.commons.math3.util.FastMath$ExpFracTable.<clinit>()"]
52101 [label="org.apache.commons.math3.util.FastMathCalc.slowexp(D[D)D"]
52103 [label="org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracA()[D"]
52105 [label="org.apache.commons.math3.util.FastMathLiteralArrays.loadExpFracB()[D"]
52109 [label="org.apache.commons.math3.util.FastMath$lnMant.<init>()V"]
52111 [label="org.apache.commons.math3.util.FastMath$lnMant.<clinit>()"]
52112 [label="org.apache.commons.math3.util.FastMathCalc.slowLog(D)[D"]
52114 [label="org.apache.commons.math3.util.FastMathLiteralArrays.loadLnMant()[[D"]
52143 [label="org.apache.commons.math3.util.FastMathCalc.<init>()V"]
52145 [label="org.apache.commons.math3.util.FastMathCalc.buildSinCosTables([D[D[D[DI[D[D)V"]
52154 [label="org.apache.commons.math3.util.FastMathCalc.slowSin(D[D)D"]
52156 [label="org.apache.commons.math3.util.FastMathCalc.slowCos(D[D)D"]
52158 [label="org.apache.commons.math3.util.FastMathCalc.splitMult([D[D[D)V"]
52160 [label="org.apache.commons.math3.util.FastMathCalc.splitAdd([D[D[D)V"]
52165 [label="org.apache.commons.math3.util.FastMathCalc.split(D[D)V"]
52178 [label="org.apache.commons.math3.util.FastMathCalc.resplit([D)V"]
52193 [label="org.apache.commons.math3.util.FastMathCalc.quadMult([D[D[D)V"]
52210 [label="java.io.PrintStream.println(Ljava/lang/String;)V"]
52212 [label="org.apache.commons.math3.util.FastMathCalc.checkLen(II)V"]
52215 [label="java.io.PrintStream.print(Ljava/lang/String;)V"]
52217 [label="java.io.PrintStream.printf(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintStream;"]
52219 [label="org.apache.commons.math3.util.FastMathCalc.format(D)Ljava/lang/String;"]
52244 [label="org.apache.commons.math3.util.FastMathLiteralArrays.<init>()V"]
52263 [label="org.apache.commons.math3.util.Incrementor.<init>()V"]
52265 [label="org.apache.commons.math3.util.Incrementor.<init>(I)V"]
52269 [label="org.apache.commons.math3.util.Incrementor$1.<init>()V"]
52272 [label="org.apache.commons.math3.util.Incrementor$1.trigger(I)V"]
52287 [label="org.apache.commons.math3.util.Incrementor.incrementCount(I)V"]
52291 [label="org.apache.commons.math3.util.Incrementor$MaxCountExceededCallback.trigger(I)V"]
52299 [label="org.apache.commons.math3.util.Incrementor$2.<init>()V"]
52305 [label="org.apache.commons.math3.util.Incrementor$2.<initblock>()"]
52308 [label="org.apache.commons.math3.util.Incrementor$2.setMaximalCount(I)V"]
52311 [label="org.apache.commons.math3.util.Incrementor$2.resetCount()V"]
52313 [label="org.apache.commons.math3.util.Incrementor$2.incrementCount()V"]
52316 [label="org.apache.commons.math3.util.IntegerSequence.<init>()V"]
52318 [label="org.apache.commons.math3.util.IntegerSequence.range(II)Lorg/apache/commons/math3/util/IntegerSequence$Range;"]
52325 [label="org.apache.commons.math3.util.IntegerSequence.range(III)Lorg/apache/commons/math3/util/IntegerSequence$Range;"]
52331 [label="org.apache.commons.math3.util.IntegerSequence$Range.<init>(III)V"]
52355 [label="org.apache.commons.math3.util.IntegerSequence$Range.iterator()Ljava/util/Iterator;"]
52357 [label="org.apache.commons.math3.util.IntegerSequence$Incrementor.withIncrement(I)Lorg/apache/commons/math3/util/IntegerSequence$Incrementor;"]
52367 [label="org.apache.commons.math3.util.IntegerSequence$Incrementor$1.trigger(I)V"]
52381 [label="org.apache.commons.math3.util.IntegerSequence$Incrementor$MaxCountExceededCallback.trigger(I)V"]
52384 [label="org.apache.commons.math3.util.IntegerSequence$Incrementor.<init>(IIILorg/apache/commons/math3/util/IntegerSequence$Incrementor$MaxCountExceededCallback;)V"]
52404 [label="org.apache.commons.math3.util.IntegerSequence$Incrementor.withCallback(Lorg/apache/commons/math3/util/IntegerSequence$Incrementor$MaxCountExceededCallback;)Lorg/apache/commons/math3/util/IntegerSequence$Incrementor;"]
52409 [label="org.apache.commons.math3.util.IntegerSequence$Incrementor.canIncrement()Z"]
52411 [label="org.apache.commons.math3.util.IntegerSequence$Incrementor.canIncrement(I)Z"]
52419 [label="org.apache.commons.math3.util.IntegerSequence$Incrementor.hasNext()Z"]
52421 [label="org.apache.commons.math3.util.IntegerSequence$Incrementor.next()Ljava/lang/Integer;"]
52423 [label="org.apache.commons.math3.util.IntegerSequence$Incrementor.remove()V"]
52436 [label="java.util.EventObject.<init>(Ljava/lang/Object;)V"]
52446 [label="org.apache.commons.math3.util.IterationListener.initializationPerformed(Lorg/apache/commons/math3/util/IterationEvent;)V"]
52449 [label="org.apache.commons.math3.util.IterationListener.iterationPerformed(Lorg/apache/commons/math3/util/IterationEvent;)V"]
52452 [label="org.apache.commons.math3.util.IterationListener.iterationStarted(Lorg/apache/commons/math3/util/IterationEvent;)V"]
52455 [label="org.apache.commons.math3.util.IterationListener.terminationPerformed(Lorg/apache/commons/math3/util/IterationEvent;)V"]
52476 [label="java.util.concurrent.CopyOnWriteArrayList.<init>()V"]
52480 [label="org.apache.commons.math3.util.IterationManager.<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V"]
52484 [label="org.apache.commons.math3.util.IterationManager.<init>(ILorg/apache/commons/math3/util/IntegerSequence$Incrementor$MaxCountExceededCallback;)V"]
52486 [label="org.apache.commons.math3.util.IterationManager$1.<init>()V"]
52489 [label="org.apache.commons.math3.util.IterationManager$1.trigger(I)V"]
52496 [label="org.apache.commons.math3.util.IterationManager.addIterationListener(Lorg/apache/commons/math3/util/IterationListener;)V"]
52512 [label="org.apache.commons.math3.util.IterationManager.getMaxIterations()I"]
52515 [label="org.apache.commons.math3.util.IterationManager.removeIterationListener(Lorg/apache/commons/math3/util/IterationListener;)V"]
52518 [label="java.util.Collection.remove(Ljava/lang/Object;)Z"]
52528 [label="org.apache.commons.math3.util.KthSelector.<init>()V"]
52538 [label="org.apache.commons.math3.util.KthSelector.partition([DIII)I"]
52540 [label="org.apache.commons.math3.util.PivotingStrategyInterface.pivotIndex([DII)I"]
52543 [label="java.util.Arrays.sort([DII)V"]
52551 [label="org.apache.commons.math3.util.MathArrays.<init>()V"]
52557 [label="org.apache.commons.math3.util.MathArrays$Function.evaluate([DII)D"]
52569 [label="org.apache.commons.math3.util.MathArrays.ebeAdd([D[D)[D"]
52576 [label="org.apache.commons.math3.util.MathArrays.ebeMultiply([D[D)[D"]
52586 [label="org.apache.commons.math3.util.MathArrays.distance1([I[I)I"]
52590 [label="org.apache.commons.math3.util.MathArrays.checkEqualLength([I[I)V"]
52604 [label="org.apache.commons.math3.util.MathArrays.distanceInf([I[I)I"]
52612 [label="org.apache.commons.math3.util.MathArrays$OrderDirection.<init>()V"]
52620 [label="org.apache.commons.math3.util.MathArrays.isMonotonic([Ljava/lang/Comparable;Lorg/apache/commons/math3/util/MathArrays$OrderDirection;Z)Z"]
52633 [label="org.apache.commons.math3.util.MathArrays.isMonotonic([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;Z)Z"]
52638 [label="org.apache.commons.math3.util.MathArrays.checkEqualLength([D[DZ)Z"]
52647 [label="org.apache.commons.math3.util.MathArrays.checkEqualLength([I[IZ)Z"]
52661 [label="org.apache.commons.math3.util.MathArrays.checkOrder([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;Z)V"]
52688 [label="org.apache.commons.math3.util.MathArrays$PairDoubleInteger.<init>(DI)V"]
52694 [label="org.apache.commons.math3.util.MathArrays$PairDoubleInteger.getKey()D"]
52696 [label="org.apache.commons.math3.util.MathArrays$PairDoubleInteger.getValue()I"]
52701 [label="org.apache.commons.math3.util.MathArrays.sortInPlace([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;[[D)V"]
52719 [label="org.apache.commons.math3.util.MathArrays$1.<init>()V"]
52722 [label="org.apache.commons.math3.util.MathArrays$1.compare(Lorg/apache/commons/math3/util/MathArrays$PairDoubleInteger;Lorg/apache/commons/math3/util/MathArrays$PairDoubleInteger;)I"]
52727 [label="org.apache.commons.math3.util.MathArrays$2.<init>()V"]
52730 [label="org.apache.commons.math3.util.MathArrays$2.compare(Lorg/apache/commons/math3/util/MathArrays$PairDoubleInteger;Lorg/apache/commons/math3/util/MathArrays$PairDoubleInteger;)I"]
52773 [label="org.apache.commons.math3.util.MathArrays.equals([F[F)Z"]
52778 [label="org.apache.commons.math3.util.Precision.equals(FF)Z"]
52780 [label="org.apache.commons.math3.util.MathArrays.equalsIncludingNaN([F[F)Z"]
52814 [label="org.apache.commons.math3.util.MathArrays.convolve([D[D)[D"]
52825 [label="org.apache.commons.math3.util.MathArrays$Position.<init>()V"]
52834 [label="org.apache.commons.math3.util.MathArrays.shuffle([IILorg/apache/commons/math3/util/MathArrays$Position;)V"]
52839 [label="org.apache.commons.math3.util.MathArrays.shuffle([IILorg/apache/commons/math3/util/MathArrays$Position;Lorg/apache/commons/math3/random/RandomGenerator;)V"]
52851 [label="org.apache.commons.math3.util.MathArrays.shuffle([I)V"]
52856 [label="org.apache.commons.math3.util.MathArrays.sequence(III)[I"]
52871 [label="org.apache.commons.math3.util.MathArrays.verifyValues([D[DII)Z"]
52893 [label="java.util.TreeSet.add(Ljava/lang/Object;)Z"]
52895 [label="java.util.TreeSet.size()I"]
52900 [label="java.util.TreeSet.iterator()Ljava/util/Iterator;"]
52906 [label="org.apache.commons.math3.util.MathUtils.<init>()V"]
52910 [label="java.lang.Double.<init>(D)V"]
52936 [label="org.apache.commons.math3.util.MathUtils.copySign(BB)B"]
52942 [label="org.apache.commons.math3.util.MathUtils.copySign(SS)S"]
52951 [label="org.apache.commons.math3.util.MathUtils.copySign(JJ)J"]
52957 [label="org.apache.commons.math3.util.MathUtils.checkFinite([D)V"]
52995 [label="org.apache.commons.math3.util.MultidimensionalCounter$Iterator.<init>()V"]
52999 [label="org.apache.commons.math3.util.MultidimensionalCounter$Iterator.hasNext()Z"]
53003 [label="org.apache.commons.math3.util.MultidimensionalCounter$Iterator.next()Ljava/lang/Integer;"]
53009 [label="org.apache.commons.math3.util.MultidimensionalCounter$Iterator.getCounts()[I"]
53014 [label="org.apache.commons.math3.util.MultidimensionalCounter$Iterator.remove()V"]
53016 [label="org.apache.commons.math3.util.MultidimensionalCounter.<init>([I)V"]
53020 [label="org.apache.commons.math3.util.MultidimensionalCounter.iterator()Lorg/apache/commons/math3/util/MultidimensionalCounter$Iterator;"]
53027 [label="org.apache.commons.math3.util.MultidimensionalCounter.getCounts(I)[I"]
53030 [label="org.apache.commons.math3.util.MultidimensionalCounter.getCount([I)I"]
53035 [label="org.apache.commons.math3.util.MultidimensionalCounter.getSizes()[I"]
53037 [label="org.apache.commons.math3.util.MultidimensionalCounter.toString()Ljava/lang/String;"]
53041 [label="org.apache.commons.math3.util.NumberTransformer.transform(Ljava/lang/Object;)D"]
53075 [label="org.apache.commons.math3.util.OpenIntToDoubleHashMap.<init>()V"]
53080 [label="org.apache.commons.math3.util.OpenIntToDoubleHashMap.<init>(I)V"]
53086 [label="org.apache.commons.math3.util.OpenIntToDoubleHashMap.computeCapacity(I)I"]
53100 [label="java.lang.Integer.highestOneBit(I)I"]
53102 [label="org.apache.commons.math3.util.OpenIntToDoubleHashMap.nextPowerOfTwo(I)I"]
53108 [label="org.apache.commons.math3.util.OpenIntToDoubleHashMap.hashOf(I)I"]
53110 [label="org.apache.commons.math3.util.OpenIntToDoubleHashMap.containsKey(II)Z"]
53113 [label="org.apache.commons.math3.util.OpenIntToDoubleHashMap.probe(II)I"]
53115 [label="org.apache.commons.math3.util.OpenIntToDoubleHashMap.perturb(I)I"]
53121 [label="org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator.<init>()V"]
53125 [label="org.apache.commons.math3.util.OpenIntToDoubleHashMap.findInsertionIndex(I)I"]
53128 [label="org.apache.commons.math3.util.OpenIntToDoubleHashMap.findInsertionIndex([I[BII)I"]
53136 [label="org.apache.commons.math3.util.OpenIntToDoubleHashMap.changeIndexSign(I)I"]
53146 [label="org.apache.commons.math3.util.OpenIntToDoubleHashMap.doRemove(I)D"]
53158 [label="org.apache.commons.math3.util.OpenIntToDoubleHashMap.shouldGrowTable()Z"]
53160 [label="org.apache.commons.math3.util.OpenIntToDoubleHashMap.growTable()V"]
53182 [label="java.util.ConcurrentModificationException.<init>()V"]
53187 [label="org.apache.commons.math3.util.OpenIntToDoubleHashMap.readObject(Ljava/io/ObjectInputStream;)V"]
53229 [label="org.apache.commons.math3.util.OpenIntToFieldHashMap.<init>(Lorg/apache/commons/math3/Field;ILorg/apache/commons/math3/FieldElement;)V"]
53232 [label="org.apache.commons.math3.util.OpenIntToFieldHashMap.<init>(Lorg/apache/commons/math3/Field;Lorg/apache/commons/math3/FieldElement;)V"]
53244 [label="org.apache.commons.math3.util.OpenIntToFieldHashMap.computeCapacity(I)I"]
53248 [label="org.apache.commons.math3.util.OpenIntToFieldHashMap.buildArray(I)[Lorg/apache/commons/math3/FieldElement;"]
53260 [label="org.apache.commons.math3.util.OpenIntToFieldHashMap.nextPowerOfTwo(I)I"]
53266 [label="org.apache.commons.math3.util.OpenIntToFieldHashMap.hashOf(I)I"]
53268 [label="org.apache.commons.math3.util.OpenIntToFieldHashMap.containsKey(II)Z"]
53271 [label="org.apache.commons.math3.util.OpenIntToFieldHashMap.probe(II)I"]
53273 [label="org.apache.commons.math3.util.OpenIntToFieldHashMap.perturb(I)I"]
53279 [label="org.apache.commons.math3.util.OpenIntToFieldHashMap$Iterator.<init>()V"]
53283 [label="org.apache.commons.math3.util.OpenIntToFieldHashMap.findInsertionIndex(I)I"]
53286 [label="org.apache.commons.math3.util.OpenIntToFieldHashMap.findInsertionIndex([I[BII)I"]
53294 [label="org.apache.commons.math3.util.OpenIntToFieldHashMap.changeIndexSign(I)I"]
53305 [label="org.apache.commons.math3.util.OpenIntToFieldHashMap.doRemove(I)Lorg/apache/commons/math3/FieldElement;"]
53317 [label="org.apache.commons.math3.util.OpenIntToFieldHashMap.shouldGrowTable()Z"]
53319 [label="org.apache.commons.math3.util.OpenIntToFieldHashMap.growTable()V"]
53341 [label="org.apache.commons.math3.util.OpenIntToFieldHashMap.readObject(Ljava/io/ObjectInputStream;)V"]
53362 [label="org.apache.commons.math3.util.Pair.<init>(Lorg/apache/commons/math3/util/Pair;)V"]
53372 [label="org.apache.commons.math3.util.Pair.equals(Ljava/lang/Object;)Z"]
53378 [label="org.apache.commons.math3.util.Pair.hashCode()I"]
53380 [label="org.apache.commons.math3.util.Pair.toString()Ljava/lang/String;"]
53382 [label="org.apache.commons.math3.util.Pair.create(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/math3/util/Pair;"]
53420 [label="org.apache.commons.math3.util.Precision.<clinit>()"]
53422 [label="org.apache.commons.math3.util.Precision.<init>()V"]
53435 [label="org.apache.commons.math3.util.Precision.equals(FFI)Z"]
53440 [label="org.apache.commons.math3.util.Precision.equals(FFF)Z"]
53445 [label="org.apache.commons.math3.util.Precision.equalsIncludingNaN(FFF)Z"]
53457 [label="org.apache.commons.math3.util.Precision.equalsIncludingNaN(FFI)Z"]
53476 [label="org.apache.commons.math3.util.Precision.equalsIncludingNaN(DDD)Z"]
53488 [label="org.apache.commons.math3.util.Precision.equalsIncludingNaN(DDI)Z"]
53496 [label="org.apache.commons.math3.util.Precision.round(DII)D"]
53502 [label="java.math.BigDecimal.setScale(II)Ljava/math/BigDecimal;"]
53505 [label="org.apache.commons.math3.util.Precision.round(FI)F"]
53509 [label="org.apache.commons.math3.util.Precision.round(FII)F"]
53516 [label="org.apache.commons.math3.util.Precision.roundUnscaled(DDI)D"]
53547 [label="org.apache.commons.math3.util.RandomPivotingStrategy.<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V"]
53551 [label="org.apache.commons.math3.util.RandomPivotingStrategy.pivotIndex([DII)I"]
53592 [label="org.apache.commons.math3.util.ResizableDoubleArray$ExpansionMode.<init>()V"]
53600 [label="org.apache.commons.math3.util.ResizableDoubleArray.<init>()V"]
53605 [label="org.apache.commons.math3.util.ResizableDoubleArray.<init>(ID)V"]
53610 [label="org.apache.commons.math3.util.ResizableDoubleArray.<init>(IDDLorg/apache/commons/math3/util/ResizableDoubleArray$ExpansionMode;[D)V"]
53613 [label="org.apache.commons.math3.util.ResizableDoubleArray.<init>(IF)V"]
53620 [label="org.apache.commons.math3.util.ResizableDoubleArray.<init>(IDD)V"]
53622 [label="org.apache.commons.math3.util.ResizableDoubleArray.<init>(IFF)V"]
53631 [label="org.apache.commons.math3.util.ResizableDoubleArray.<init>(IFFI)V"]
53639 [label="org.apache.commons.math3.util.ResizableDoubleArray.setExpansionMode(I)V"]
53648 [label="org.apache.commons.math3.util.ResizableDoubleArray.checkContractExpand(DD)V"]
53656 [label="org.apache.commons.math3.util.ResizableDoubleArray.addElements([D)V"]
53658 [label="org.apache.commons.math3.util.ResizableDoubleArray.<init>(Lorg/apache/commons/math3/util/ResizableDoubleArray;)V"]
53661 [label="org.apache.commons.math3.util.ResizableDoubleArray.copy(Lorg/apache/commons/math3/util/ResizableDoubleArray;Lorg/apache/commons/math3/util/ResizableDoubleArray;)V"]
53665 [label="org.apache.commons.math3.util.ResizableDoubleArray.expand()V"]
53671 [label="org.apache.commons.math3.util.ResizableDoubleArray.shouldContract()Z"]
53673 [label="org.apache.commons.math3.util.ResizableDoubleArray.contract()V"]
53678 [label="org.apache.commons.math3.util.ResizableDoubleArray.checkContractExpand(FF)V"]
53692 [label="org.apache.commons.math3.util.ResizableDoubleArray.discardExtremeElements(IZ)V"]
53702 [label="org.apache.commons.math3.util.ResizableDoubleArray.expandTo(I)V"]
53705 [label="org.apache.commons.math3.util.ResizableDoubleArray.getContractionCriteria()F"]
53707 [label="org.apache.commons.math3.util.ResizableDoubleArray.getContractionCriterion()D"]
53712 [label="java.lang.ArrayIndexOutOfBoundsException.<init>(I)V"]
53715 [label="org.apache.commons.math3.util.ResizableDoubleArray.getExpansionFactor()F"]
53717 [label="org.apache.commons.math3.util.ResizableDoubleArray.getExpansionMode()I"]
53731 [label="org.apache.commons.math3.util.ResizableDoubleArray.setContractionCriteria(F)V"]
53739 [label="org.apache.commons.math3.util.ResizableDoubleArray.setElement(ID)V"]
53744 [label="org.apache.commons.math3.util.ResizableDoubleArray.setExpansionFactor(F)V"]
53750 [label="org.apache.commons.math3.util.ResizableDoubleArray.setExpansionMode(Lorg/apache/commons/math3/util/ResizableDoubleArray$ExpansionMode;)V"]
53757 [label="org.apache.commons.math3.util.ResizableDoubleArray.setNumElements(I)V"]
53769 [label="org.apache.commons.math3.util.ResizableDoubleArray.equals(Ljava/lang/Object;)Z"]
53772 [label="org.apache.commons.math3.util.ResizableDoubleArray.hashCode()I"]
53785 [label="org.apache.commons.math3.util.TransformerMap.<init>()V"]
53793 [label="org.apache.commons.math3.util.TransformerMap.containsClass(Ljava/lang/Class;)Z"]
53796 [label="org.apache.commons.math3.util.TransformerMap.containsTransformer(Lorg/apache/commons/math3/util/NumberTransformer;)Z"]
53799 [label="java.util.Map.containsValue(Ljava/lang/Object;)Z"]
53801 [label="org.apache.commons.math3.util.TransformerMap.getTransformer(Ljava/lang/Class;)Lorg/apache/commons/math3/util/NumberTransformer;"]
53804 [label="org.apache.commons.math3.util.TransformerMap.putTransformer(Ljava/lang/Class;Lorg/apache/commons/math3/util/NumberTransformer;)Lorg/apache/commons/math3/util/NumberTransformer;"]
53808 [label="org.apache.commons.math3.util.TransformerMap.removeTransformer(Ljava/lang/Class;)Lorg/apache/commons/math3/util/NumberTransformer;"]
53811 [label="java.util.Map.remove(Ljava/lang/Object;)Ljava/lang/Object;"]
53813 [label="org.apache.commons.math3.util.TransformerMap.clear()V"]
53815 [label="org.apache.commons.math3.util.TransformerMap.classes()Ljava/util/Set;"]
53820 [label="org.apache.commons.math3.util.TransformerMap.transformers()Ljava/util/Collection;"]
53825 [label="java.util.Map.values()Ljava/util/Collection;"]
53827 [label="org.apache.commons.math3.util.TransformerMap.transform(Ljava/lang/Object;)D"]
53832 [label="org.apache.commons.math3.util.TransformerMap.equals(Ljava/lang/Object;)Z"]
53840 [label="org.apache.commons.math3.util.TransformerMap.hashCode()I"]
239 -> 242
239 -> 246
248 -> 239
248 -> 256
256 -> 315
256 -> 759
256 -> 785
256 -> 788
256 -> 791
256 -> 793
258 -> 248
264 -> 246
264 -> 256
264 -> 258
264 -> 271
271 -> 6273
273 -> 239
273 -> 282
273 -> 284
282 -> 313
284 -> 246
284 -> 642
286 -> 239
286 -> 282
286 -> 294
294 -> 246
294 -> 658
296 -> 239
296 -> 282
296 -> 306
306 -> 246
306 -> 678
308 -> 248
308 -> 313
308 -> 315
313 -> 4981
317 -> 242
321 -> 323
325 -> 327
329 -> 258
329 -> 321
329 -> 325
338 -> 342
342 -> 313
342 -> 323
342 -> 848
346 -> 317
350 -> 282
350 -> 317
350 -> 353
353 -> 246
355 -> 346
359 -> 282
359 -> 317
359 -> 362
362 -> 246
364 -> 367
367 -> 317
371 -> 239
371 -> 282
371 -> 374
376 -> 317
379 -> 239
379 -> 282
379 -> 382
382 -> 246
382 -> 374
382 -> 466
384 -> 317
384 -> 387
387 -> 51995
389 -> 239
389 -> 282
389 -> 392
392 -> 246
392 -> 387
392 -> 411
394 -> 239
396 -> 394
396 -> 398
401 -> 258
401 -> 323
401 -> 327
401 -> 403
403 -> 407
405 -> 258
405 -> 323
405 -> 327
405 -> 407
409 -> 258
409 -> 323
409 -> 327
409 -> 411
411 -> 407
413 -> 415
415 -> 407
417 -> 258
417 -> 323
417 -> 327
417 -> 419
421 -> 394
421 -> 398
424 -> 394
424 -> 398
427 -> 429
429 -> 51657
431 -> 239
431 -> 434
434 -> 439
434 -> 443
434 -> 7330
434 -> 51657
436 -> 258
436 -> 282
436 -> 323
436 -> 350
436 -> 371
436 -> 396
436 -> 427
436 -> 431
436 -> 439
436 -> 443
436 -> 450
450 -> 469
454 -> 436
459 -> 239
459 -> 313
459 -> 325
459 -> 462
464 -> 239
464 -> 466
466 -> 246
466 -> 462
466 -> 791
466 -> 972
466 -> 974
469 -> 239
469 -> 475
471 -> 469
475 -> 462
475 -> 956
475 -> 974
475 -> 989
475 -> 991
477 -> 485
485 -> 242
488 -> 258
488 -> 323
488 -> 327
490 -> 258
490 -> 323
490 -> 327
506 -> 239
506 -> 510
510 -> 462
510 -> 954
510 -> 956
510 -> 958
512 -> 239
512 -> 515
515 -> 462
515 -> 956
517 -> 239
517 -> 466
520 -> 239
520 -> 282
520 -> 523
523 -> 246
523 -> 374
523 -> 527
523 -> 535
525 -> 239
525 -> 527
527 -> 462
527 -> 954
527 -> 998
529 -> 239
529 -> 531
531 -> 462
531 -> 972
531 -> 998
531 -> 1005
533 -> 239
533 -> 535
535 -> 462
535 -> 958
537 -> 239
537 -> 539
539 -> 462
539 -> 1017
541 -> 239
541 -> 543
543 -> 462
543 -> 958
543 -> 1024
545 -> 239
545 -> 547
547 -> 462
547 -> 1031
547 -> 1033
549 -> 239
549 -> 551
551 -> 462
551 -> 1031
551 -> 1033
553 -> 239
553 -> 555
555 -> 462
555 -> 1045
557 -> 239
557 -> 559
559 -> 462
559 -> 989
559 -> 1052
561 -> 239
561 -> 563
563 -> 462
563 -> 989
563 -> 1059
565 -> 239
565 -> 567
567 -> 462
567 -> 1066
569 -> 239
569 -> 282
569 -> 572
572 -> 246
572 -> 353
572 -> 362
572 -> 374
572 -> 382
572 -> 475
572 -> 567
572 -> 1077
574 -> 569
579 -> 239
579 -> 581
581 -> 462
581 -> 1084
581 -> 1086
583 -> 239
583 -> 585
585 -> 462
585 -> 1084
585 -> 1086
587 -> 239
587 -> 589
589 -> 462
589 -> 1098
591 -> 239
591 -> 593
593 -> 462
593 -> 989
593 -> 1105
595 -> 239
595 -> 597
597 -> 462
597 -> 989
597 -> 1112
599 -> 239
599 -> 601
601 -> 462
601 -> 1119
603 -> 239
603 -> 605
605 -> 439
605 -> 51653
607 -> 239
607 -> 609
609 -> 439
609 -> 51653
611 -> 617
617 -> 246
617 -> 868
617 -> 974
617 -> 1132
617 -> 1140
619 -> 308
619 -> 321
619 -> 325
619 -> 336
619 -> 344
619 -> 350
619 -> 371
619 -> 477
619 -> 625
619 -> 627
625 -> 443
625 -> 7330
625 -> 28343
625 -> 51657
632 -> 308
632 -> 321
632 -> 325
632 -> 336
632 -> 344
632 -> 350
632 -> 367
632 -> 477
632 -> 625
632 -> 627
636 -> 308
636 -> 321
636 -> 325
636 -> 336
636 -> 344
636 -> 350
636 -> 371
636 -> 642
642 -> 443
642 -> 7330
642 -> 51657
644 -> 308
644 -> 321
644 -> 325
644 -> 336
644 -> 344
644 -> 350
644 -> 367
644 -> 642
650 -> 308
650 -> 321
650 -> 325
650 -> 336
650 -> 344
650 -> 350
650 -> 371
650 -> 658
658 -> 443
658 -> 7330
658 -> 51657
660 -> 308
660 -> 321
660 -> 325
660 -> 336
660 -> 344
660 -> 350
660 -> 367
660 -> 658
668 -> 308
668 -> 321
668 -> 325
668 -> 336
668 -> 344
668 -> 350
668 -> 371
668 -> 678
678 -> 443
678 -> 7330
678 -> 51657
680 -> 308
680 -> 321
680 -> 325
680 -> 336
680 -> 344
680 -> 350
680 -> 367
680 -> 678
690 -> 321
690 -> 325
690 -> 699
699 -> 3458
701 -> 321
701 -> 325
701 -> 703
703 -> 4870
705 -> 323
705 -> 327
705 -> 710
710 -> 242
728 -> 308
759 -> 242
759 -> 768
759 -> 771
759 -> 774
759 -> 777
759 -> 780
768 -> 315
768 -> 799
771 -> 315
774 -> 246
774 -> 315
777 -> 315
777 -> 827
777 -> 831
777 -> 833
777 -> 835
777 -> 837
780 -> 315
780 -> 827
780 -> 831
780 -> 833
780 -> 835
780 -> 837
780 -> 846
780 -> 848
780 -> 850
780 -> 852
848 -> 271
850 -> 315
850 -> 791
850 -> 848
956 -> 439
956 -> 51657
956 -> 51667
956 -> 51746
956 -> 51772
958 -> 51746
974 -> 51772
989 -> 51662
991 -> 7330
991 -> 51657
998 -> 51667
1005 -> 51671
1017 -> 439
1017 -> 51746
1024 -> 439
1024 -> 51746
1031 -> 51834
1031 -> 51845
1031 -> 51855
1031 -> 51867
1031 -> 51869
1031 -> 51871
1031 -> 51873
1033 -> 51657
1033 -> 51834
1033 -> 51845
1033 -> 51855
1033 -> 51867
1033 -> 51869
1033 -> 51871
1033 -> 51873
1045 -> 51657
1045 -> 51850
1045 -> 51855
1045 -> 51867
1045 -> 51869
1045 -> 51871
1045 -> 51873
1052 -> 439
1052 -> 989
1052 -> 51653
1052 -> 51883
1059 -> 989
1059 -> 51883
1066 -> 51883
1077 -> 439
1077 -> 6447
1077 -> 51653
1077 -> 51883
1084 -> 998
1084 -> 51667
1086 -> 998
1086 -> 51667
1086 -> 51671
1098 -> 51667
1098 -> 51671
1105 -> 958
1105 -> 989
1112 -> 958
1112 -> 989
1119 -> 958
1132 -> 4157
1132 -> 10840
1140 -> 10907
1167 -> 1174
1174 -> 242
1174 -> 271
1174 -> 1183
1174 -> 1186
1174 -> 1190
1183 -> 3456
1186 -> 1183
1190 -> 439
1190 -> 1726
1190 -> 7330
1190 -> 51657
1198 -> 258
1198 -> 308
1198 -> 321
1198 -> 325
1198 -> 336
1198 -> 344
1198 -> 350
1198 -> 367
1198 -> 371
1203 -> 1209
1209 -> 242
1212 -> 1218
1220 -> 271
1220 -> 325
1220 -> 336
1220 -> 1198
1220 -> 1218
1220 -> 1223
1220 -> 1225
1223 -> 51657
1225 -> 51657
1228 -> 1234
1234 -> 242
1237 -> 1240
1242 -> 271
1242 -> 325
1242 -> 336
1242 -> 1198
1242 -> 1223
1242 -> 1225
1242 -> 1240
1246 -> 1252
1252 -> 242
1255 -> 1258
1260 -> 271
1260 -> 325
1260 -> 336
1260 -> 1198
1260 -> 1223
1260 -> 1225
1260 -> 1258
1272 -> 242
1276 -> 264
1276 -> 338
1276 -> 1280
1290 -> 242
1294 -> 264
1294 -> 338
1294 -> 1297
1330 -> 242
1330 -> 1340
1330 -> 1344
1346 -> 242
1346 -> 1340
1346 -> 1351
1346 -> 1353
1346 -> 1355
1346 -> 1363
1365 -> 1330
1365 -> 1369
1371 -> 1330
1371 -> 1375
1377 -> 1379
1381 -> 1384
1390 -> 1330
1390 -> 1351
1390 -> 1353
1390 -> 1355
1390 -> 1363
1390 -> 1384
1393 -> 1351
1393 -> 1353
1393 -> 1355
1393 -> 1363
1393 -> 1384
1396 -> 1330
1399 -> 1330
1399 -> 1351
1399 -> 1353
1399 -> 1355
1399 -> 1363
1399 -> 1384
1402 -> 1330
1405 -> 1330
1405 -> 1351
1405 -> 1353
1405 -> 1355
1405 -> 1363
1405 -> 1369
1405 -> 1384
1408 -> 1351
1408 -> 1353
1408 -> 1355
1408 -> 1363
1408 -> 1384
1411 -> 1346
1415 -> 1346
1418 -> 1330
1418 -> 1351
1418 -> 1353
1418 -> 1355
1418 -> 1363
1418 -> 1369
1418 -> 1384
1421 -> 1346
1424 -> 1346
1426 -> 1431
1431 -> 242
1434 -> 1365
1437 -> 1365
1447 -> 387
1447 -> 1330
1450 -> 387
1450 -> 411
1450 -> 1399
1450 -> 1411
1455 -> 398
1455 -> 1424
1458 -> 403
1458 -> 1365
1460 -> 407
1460 -> 1365
1462 -> 411
1462 -> 1365
1464 -> 415
1466 -> 419
1466 -> 1365
1468 -> 398
1468 -> 1424
1471 -> 398
1471 -> 1424
1474 -> 434
1474 -> 1330
1474 -> 1351
1474 -> 1353
1474 -> 1355
1474 -> 1363
1474 -> 1369
1477 -> 429
1477 -> 439
1477 -> 443
1477 -> 1365
1477 -> 1390
1477 -> 1405
1477 -> 1455
1477 -> 1474
1477 -> 1482
1482 -> 989
1482 -> 1346
1486 -> 1477
1491 -> 1346
1494 -> 991
1494 -> 1346
1496 -> 956
1496 -> 974
1496 -> 1346
1496 -> 1482
1496 -> 1494
1500 -> 956
1500 -> 1346
1503 -> 974
1503 -> 1346
1503 -> 1426
1503 -> 1506
1509 -> 1405
1509 -> 1512
1509 -> 1514
1512 -> 998
1512 -> 1346
1514 -> 958
1514 -> 1346
1516 -> 627
1516 -> 956
1516 -> 958
1516 -> 1346
1516 -> 1426
1516 -> 1520
1520 -> 1346
1523 -> 998
1523 -> 1005
1523 -> 1346
1526 -> 958
1526 -> 1024
1526 -> 1346
1528 -> 1017
1528 -> 1346
1530 -> 1031
1530 -> 1033
1530 -> 1346
1532 -> 1031
1532 -> 1033
1532 -> 1346
1534 -> 1045
1534 -> 1346
1536 -> 989
1536 -> 1052
1536 -> 1346
1538 -> 989
1538 -> 1059
1538 -> 1346
1540 -> 1066
1540 -> 1346
1542 -> 1077
1542 -> 1390
1542 -> 1396
1542 -> 1399
1542 -> 1405
1542 -> 1415
1542 -> 1418
1542 -> 1482
1542 -> 1540
1549 -> 1542
1554 -> 1084
1554 -> 1086
1554 -> 1346
1556 -> 1084
1556 -> 1086
1556 -> 1346
1558 -> 1098
1558 -> 1346
1560 -> 989
1560 -> 1105
1560 -> 1346
1562 -> 989
1562 -> 1112
1562 -> 1346
1564 -> 1119
1564 -> 1346
1566 -> 605
1566 -> 1346
1568 -> 609
1568 -> 1346
1570 -> 1381
1577 -> 625
1577 -> 627
1577 -> 1386
1577 -> 1390
1577 -> 1405
1577 -> 1426
1583 -> 625
1583 -> 627
1583 -> 1386
1583 -> 1390
1583 -> 1411
1583 -> 1426
1587 -> 642
1587 -> 1390
1587 -> 1405
1593 -> 642
1593 -> 1390
1593 -> 1411
1599 -> 658
1599 -> 1390
1599 -> 1405
1607 -> 658
1607 -> 1390
1607 -> 1411
1615 -> 678
1615 -> 1390
1615 -> 1405
1625 -> 678
1625 -> 1390
1625 -> 1411
1635 -> 1353
1635 -> 1355
1635 -> 1363
1635 -> 1379
1635 -> 1384
1635 -> 1638
1635 -> 1640
1638 -> 443
1638 -> 13683
1638 -> 51657
1642 -> 1644
1642 -> 1646
1644 -> 35735
1644 -> 52910
1722 -> 242
1723 -> 1726
1726 -> 7330
1726 -> 51657
1732 -> 242
1733 -> 1052
1736 -> 178
1736 -> 1739
1739 -> 2636
1741 -> 557
1747 -> 242
1748 -> 1105
1751 -> 178
1751 -> 1739
1753 -> 591
1761 -> 242
1768 -> 242
1769 -> 1059
1772 -> 178
1772 -> 1739
1774 -> 561
1780 -> 242
1781 -> 1112
1784 -> 178
1784 -> 1739
1786 -> 595
1792 -> 242
1793 -> 1066
1796 -> 178
1796 -> 1739
1798 -> 565
1804 -> 242
1805 -> 1077
1811 -> 242
1812 -> 1119
1815 -> 178
1815 -> 1739
1817 -> 599
1823 -> 242
1824 -> 991
1827 -> 178
1827 -> 1739
1829 -> 471
1835 -> 242
1836 -> 403
1843 -> 242
1850 -> 1843
1855 -> 258
1855 -> 321
1855 -> 325
1860 -> 242
1861 -> 1031
1864 -> 178
1864 -> 1739
1866 -> 545
1872 -> 242
1873 -> 1084
1876 -> 1881
1881 -> 242
1883 -> 579
1889 -> 242
1896 -> 242
1897 -> 998
1900 -> 178
1900 -> 1739
1902 -> 525
1908 -> 242
1909 -> 1005
1912 -> 178
1912 -> 1739
1914 -> 529
1920 -> 242
1921 -> 407
1934 -> 242
1934 -> 1942
1942 -> 1183
1948 -> 989
1948 -> 1934
1955 -> 1948
1958 -> 1961
1961 -> 998
1963 -> 178
1963 -> 1739
1970 -> 242
1971 -> 1961
1971 -> 1978
1978 -> 313
1978 -> 1942
1978 -> 1986
1980 -> 1961
1980 -> 1978
1986 -> 6204
1992 -> 325
1992 -> 336
1992 -> 459
1992 -> 954
1992 -> 998
2006 -> 242
2014 -> 2017
2017 -> 1031
2019 -> 178
2019 -> 1739
2023 -> 242
2024 -> 2017
2024 -> 2028
2028 -> 313
2028 -> 1986
2030 -> 1033
2030 -> 2017
2030 -> 2028
2039 -> 325
2039 -> 336
2039 -> 459
2039 -> 1031
2039 -> 1033
2044 -> 242
2048 -> 1843
2055 -> 242
2059 -> 178
2059 -> 1739
2061 -> 464
2067 -> 242
2068 -> 958
2071 -> 178
2071 -> 1739
2073 -> 533
2079 -> 242
2080 -> 1024
2083 -> 178
2083 -> 1739
2085 -> 541
2091 -> 242
2092 -> 1017
2095 -> 178
2095 -> 1739
2097 -> 537
2115 -> 242
2115 -> 1942
2129 -> 2132
2132 -> 956
2132 -> 998
2134 -> 178
2134 -> 1739
2138 -> 242
2139 -> 2132
2139 -> 2143
2143 -> 313
2143 -> 1942
2143 -> 1986
2145 -> 956
2145 -> 958
2145 -> 998
2145 -> 2132
2145 -> 2143
2158 -> 346
2158 -> 367
2158 -> 394
2158 -> 464
2158 -> 512
2158 -> 525
2168 -> 2170
2170 -> 242
2177 -> 2183
2183 -> 958
2183 -> 2206
2185 -> 178
2185 -> 1739
2189 -> 242
2190 -> 2183
2190 -> 2194
2194 -> 313
2194 -> 1986
2196 -> 2194
2206 -> 4153
2208 -> 325
2208 -> 336
2208 -> 439
2208 -> 459
2208 -> 958
2208 -> 2206
2213 -> 242
2214 -> 1223
2220 -> 242
2221 -> 1225
2227 -> 242
2231 -> 1843
2233 -> 394
2238 -> 242
2245 -> 242
2246 -> 956
2254 -> 242
2258 -> 956
2261 -> 178
2261 -> 1739
2263 -> 512
2268 -> 242
2269 -> 411
2278 -> 2280
2280 -> 242
2287 -> 178
2287 -> 1739
2289 -> 2292
2292 -> 998
2296 -> 242
2297 -> 2292
2297 -> 2301
2301 -> 313
2301 -> 1986
2303 -> 998
2303 -> 2301
2313 -> 325
2313 -> 336
2313 -> 439
2313 -> 459
2313 -> 972
2313 -> 998
2318 -> 242
2319 -> 419
2324 -> 242
2325 -> 1033
2328 -> 1860
2333 -> 549
2343 -> 2345
2345 -> 242
2350 -> 1033
2350 -> 1726
2354 -> 178
2354 -> 1739
2356 -> 325
2356 -> 336
2356 -> 459
2356 -> 1031
2356 -> 1033
2356 -> 1726
2360 -> 1086
2363 -> 1872
2368 -> 583
2374 -> 242
2375 -> 989
2378 -> 178
2378 -> 1739
2380 -> 450
2389 -> 242
2389 -> 313
2389 -> 1986
2389 -> 2399
2389 -> 2401
2389 -> 2404
2399 -> 3886
2401 -> 52661
2404 -> 8914
2407 -> 2410
2414 -> 242
2421 -> 242
2422 -> 1045
2425 -> 178
2425 -> 1739
2427 -> 553
2433 -> 242
2434 -> 1098
2437 -> 178
2437 -> 1739
2439 -> 587
2445 -> 242
2446 -> 1190
2451 -> 242
2453 -> 2457
2457 -> 242
2460 -> 1218
2463 -> 2467
2467 -> 242
2470 -> 1218
2473 -> 1649
2477 -> 2481
2481 -> 242
2484 -> 1218
2487 -> 2489
2489 -> 242
2492 -> 178
2492 -> 1218
2495 -> 2498
2498 -> 242
2501 -> 1218
2504 -> 2507
2507 -> 242
2510 -> 1218
2513 -> 350
2513 -> 1649
2516 -> 2519
2519 -> 242
2522 -> 1218
2525 -> 2527
2527 -> 242
2530 -> 178
2530 -> 1218
2533 -> 2536
2536 -> 242
2539 -> 1218
2542 -> 2545
2545 -> 242
2548 -> 1218
2551 -> 371
2551 -> 1649
2554 -> 2557
2557 -> 242
2560 -> 1218
2563 -> 2565
2565 -> 242
2568 -> 178
2568 -> 1218
2571 -> 2576
2576 -> 242
2579 -> 140
2579 -> 1218
2583 -> 2588
2588 -> 242
2591 -> 140
2591 -> 1218
2594 -> 2044
2594 -> 2583
2602 -> 2606
2606 -> 242
2609 -> 140
2612 -> 2616
2616 -> 242
2619 -> 140
2622 -> 271
2622 -> 1218
2622 -> 2628
2622 -> 2632
2628 -> 3456
2636 -> 242
2639 -> 1218
2642 -> 2644
2644 -> 242
2647 -> 264
2647 -> 338
2647 -> 1649
2650 -> 2653
2653 -> 242
2656 -> 1218
2659 -> 178
2659 -> 258
2659 -> 271
2659 -> 308
2659 -> 321
2659 -> 325
2659 -> 336
2659 -> 338
2659 -> 1218
2662 -> 2667
2667 -> 242
2670 -> 2673
2675 -> 2678
2678 -> 242
2681 -> 258
2681 -> 264
2681 -> 338
2681 -> 1280
2684 -> 2686
2686 -> 242
2689 -> 264
2689 -> 338
2689 -> 1280
2692 -> 2695
2695 -> 242
2698 -> 2673
2701 -> 161
2701 -> 271
2701 -> 308
2701 -> 313
2701 -> 321
2701 -> 325
2701 -> 336
2701 -> 338
2701 -> 2673
2701 -> 2704
2707 -> 2712
2712 -> 242
2715 -> 2704
2718 -> 2720
2720 -> 242
2723 -> 264
2723 -> 338
2723 -> 1297
2726 -> 2729
2729 -> 242
2732 -> 2704
2735 -> 168
2735 -> 271
2735 -> 308
2735 -> 313
2735 -> 321
2735 -> 325
2735 -> 336
2735 -> 338
2735 -> 2704
2735 -> 2738
2794 -> 242
2794 -> 1183
2794 -> 1942
2794 -> 2804
2794 -> 2806
2794 -> 2811
2804 -> 52384
2806 -> 52384
2811 -> 52299
2815 -> 2794
2822 -> 2794
2834 -> 2836
2838 -> 2840
2842 -> 2840
2844 -> 2849
2849 -> 31378
2857 -> 1218
2857 -> 2849
2857 -> 2863
2857 -> 2865
2863 -> 4056
2863 -> 10789
2863 -> 10791
2868 -> 2804
2868 -> 2874
2868 -> 2876
2868 -> 2878
2874 -> 1986
2876 -> 6273
2878 -> 52384
2880 -> 2868
2880 -> 2887
2902 -> 242
2935 -> 1351
2935 -> 1384
2935 -> 2628
2935 -> 2941
2935 -> 2943
2935 -> 2945
2935 -> 2947
2935 -> 2949
2941 -> 1384
2941 -> 2941
2941 -> 2954
2941 -> 2956
2943 -> 2945
2943 -> 2947
2943 -> 2949
2943 -> 2968
2945 -> 242
2954 -> 313
2954 -> 1351
2954 -> 2947
2954 -> 2949
2979 -> 242
2979 -> 313
2979 -> 2983
2983 -> 5575
2983 -> 11126
2989 -> 2947
2989 -> 2949
2989 -> 2979
2993 -> 1218
3006 -> 242
3033 -> 2989
3033 -> 3039
3039 -> 2935
3042 -> 2989
3042 -> 3039
3042 -> 3047
3047 -> 2945
3047 -> 2947
3047 -> 2949
3049 -> 2989
3049 -> 3039
3053 -> 2989
3053 -> 3039
3053 -> 3047
3058 -> 3039
3058 -> 3064
3064 -> 2947
3064 -> 2949
3064 -> 3168
3079 -> 2902
3087 -> 989
3087 -> 2941
3087 -> 2945
3087 -> 2947
3087 -> 3095
3087 -> 3099
3113 -> 3115
3115 -> 2902
3115 -> 3123
3127 -> 2941
3127 -> 2945
3127 -> 2947
3127 -> 3138
3127 -> 3140
3127 -> 3142
3127 -> 3144
3127 -> 3146
3127 -> 3148
3127 -> 3152
3127 -> 3154
3127 -> 3156
3127 -> 3158
3127 -> 3160
3163 -> 2902
3164 -> 2941
3164 -> 2945
3164 -> 2947
3164 -> 3095
3164 -> 3099
3168 -> 2979
3175 -> 1218
3175 -> 2996
3175 -> 2998
3175 -> 3001
3191 -> 2628
3191 -> 2794
3199 -> 3191
3205 -> 3191
3210 -> 788
3210 -> 956
3210 -> 1223
3210 -> 1225
3210 -> 1726
3210 -> 2828
3210 -> 2830
3210 -> 2832
3210 -> 2842
3210 -> 2844
3210 -> 3212
3212 -> 2851
3212 -> 2854
3212 -> 2993
3212 -> 3053
3212 -> 3221
3221 -> 242
3224 -> 2857
3255 -> 2794
3255 -> 3272
3272 -> 10789
3272 -> 10845
3272 -> 10870
3276 -> 3255
3282 -> 3255
3287 -> 788
3287 -> 956
3287 -> 1223
3287 -> 1225
3287 -> 1726
3287 -> 2828
3287 -> 2830
3287 -> 2832
3287 -> 2842
3287 -> 2844
3287 -> 3289
3289 -> 2851
3289 -> 2854
3289 -> 2857
3297 -> 271
3297 -> 2794
3304 -> 271
3304 -> 2822
3309 -> 2822
3311 -> 2857
3317 -> 1726
3317 -> 2828
3317 -> 2830
3317 -> 2832
3317 -> 2842
3317 -> 2844
3317 -> 2851
3317 -> 2854
3317 -> 2857
3317 -> 3311
3324 -> 271
3324 -> 2794
3331 -> 271
3331 -> 2822
3335 -> 2822
3337 -> 1726
3337 -> 2828
3337 -> 2830
3337 -> 2832
3337 -> 2834
3337 -> 2842
3337 -> 2844
3337 -> 3343
3337 -> 3345
3343 -> 2822
3345 -> 2851
3345 -> 2854
3345 -> 2857
3351 -> 271
3351 -> 2794
3358 -> 271
3358 -> 2822
3362 -> 2822
3364 -> 1726
3364 -> 2828
3364 -> 2830
3364 -> 2832
3364 -> 2842
3364 -> 2844
3364 -> 3343
3364 -> 3345
3371 -> 271
3371 -> 2794
3378 -> 271
3378 -> 2822
3387 -> 1726
3387 -> 2828
3387 -> 2830
3387 -> 2832
3387 -> 2842
3387 -> 2844
3387 -> 3345
3445 -> 242
3448 -> 313
3448 -> 1726
3448 -> 1986
3448 -> 2401
3448 -> 3456
3448 -> 3458
3448 -> 3460
3448 -> 3462
3456 -> 10805
3458 -> 1638
3462 -> 313
3462 -> 3456
3462 -> 3479
3462 -> 3481
3479 -> 242
3479 -> 315
3479 -> 2874
3479 -> 3886
3481 -> 242
3481 -> 313
3481 -> 315
3481 -> 1986
3481 -> 2401
3481 -> 3456
3500 -> 242
3500 -> 313
3500 -> 2399
3500 -> 2401
3500 -> 3511
3500 -> 3513
3511 -> 242
3515 -> 3519
3515 -> 3521
3519 -> 2206
3519 -> 2410
3521 -> 2206
3521 -> 3549
3549 -> 625
3560 -> 242
3561 -> 313
3561 -> 2399
3561 -> 2401
3561 -> 3568
3568 -> 3500
3604 -> 3612
3612 -> 242
3612 -> 313
3612 -> 2399
3612 -> 2401
3612 -> 3625
3612 -> 3627
3612 -> 3630
3612 -> 3632
3612 -> 3634
3612 -> 3636
3612 -> 3638
3625 -> 242
3625 -> 3709
3625 -> 3719
3625 -> 3727
3625 -> 3735
3625 -> 3743
3640 -> 3644
3640 -> 3646
3644 -> 2206
3644 -> 2410
3646 -> 2206
3646 -> 3716
3652 -> 3656
3656 -> 140
3656 -> 3644
3658 -> 3656
3662 -> 3656
3666 -> 3656
3670 -> 3656
3700 -> 3625
3709 -> 242
3712 -> 3716
3719 -> 242
3722 -> 3716
3727 -> 242
3730 -> 3716
3735 -> 242
3738 -> 3716
3743 -> 242
3746 -> 3716
3766 -> 3768
3768 -> 242
3773 -> 313
3773 -> 1218
3773 -> 2399
3773 -> 2401
3773 -> 3612
3773 -> 3783
3773 -> 3786
3773 -> 3788
3773 -> 3790
3773 -> 3792
3783 -> 242
3786 -> 313
3786 -> 2401
3786 -> 3456
3786 -> 3479
3786 -> 3481
3788 -> 5003
3807 -> 242
3810 -> 315
3810 -> 3817
3810 -> 3819
3810 -> 3821
3817 -> 313
3817 -> 2983
3817 -> 3456
3819 -> 3817
3821 -> 242
3821 -> 315
3821 -> 4948
3844 -> 242
3844 -> 846
3855 -> 831
3855 -> 833
3855 -> 835
3855 -> 1506
3855 -> 2874
3855 -> 3863
3855 -> 3865
3855 -> 3867
3855 -> 3869
3855 -> 3871
3855 -> 3873
3855 -> 3875
3855 -> 3879
3875 -> 10805
3881 -> 833
3881 -> 835
3881 -> 1506
3881 -> 2874
3881 -> 3863
3881 -> 3869
3881 -> 3879
3881 -> 3884
3881 -> 3886
3881 -> 3890
3881 -> 3892
3886 -> 3272
3890 -> 627
3890 -> 3948
3890 -> 8562
3890 -> 11783
3894 -> 627
3894 -> 833
3894 -> 835
3894 -> 1506
3894 -> 2874
3894 -> 3863
3894 -> 3869
3894 -> 3879
3894 -> 3884
3894 -> 3886
3894 -> 3890
3894 -> 3892
3894 -> 3898
3898 -> 627
3898 -> 3890
3898 -> 3948
3898 -> 6632
3898 -> 8562
3898 -> 11783
3898 -> 50502
3917 -> 242
3917 -> 846
3928 -> 439
3928 -> 831
3928 -> 833
3928 -> 835
3928 -> 1132
3928 -> 3871
3928 -> 3875
3932 -> 833
3932 -> 835
3932 -> 3934
3932 -> 3936
3932 -> 3938
3932 -> 3940
3934 -> 3884
3934 -> 3886
3936 -> 3479
3938 -> 315
3938 -> 788
3938 -> 791
3938 -> 3479
3940 -> 788
3940 -> 791
3940 -> 3479
3942 -> 833
3942 -> 835
3942 -> 3934
3945 -> 350
3945 -> 355
3945 -> 367
3945 -> 371
3945 -> 477
3945 -> 627
3945 -> 833
3945 -> 835
3945 -> 1506
3945 -> 3934
3945 -> 3948
3982 -> 242
3982 -> 827
3982 -> 1186
3982 -> 1942
3982 -> 2206
4002 -> 3982
4002 -> 4014
4002 -> 4016
4014 -> 313
4014 -> 831
4014 -> 833
4014 -> 4023
4014 -> 4056
4014 -> 4058
4016 -> 989
4016 -> 9133
4018 -> 242
4018 -> 827
4018 -> 831
4018 -> 4023
4018 -> 4025
4018 -> 4027
4023 -> 242
4029 -> 4018
4036 -> 956
4036 -> 1186
4036 -> 1726
4036 -> 4043
4036 -> 4045
4036 -> 4047
4036 -> 4049
4036 -> 4051
4043 -> 4023
4043 -> 4069
4045 -> 28343
4047 -> 1726
4047 -> 51662
4049 -> 835
4049 -> 4023
4049 -> 4025
4049 -> 4065
4049 -> 4067
4049 -> 4069
4051 -> 4025
4051 -> 4027
4056 -> 11014
4058 -> 242
4067 -> 625
4067 -> 4047
4095 -> 1031
4095 -> 1033
4095 -> 3982
4095 -> 4014
4104 -> 4018
4109 -> 4104
4114 -> 242
4115 -> 313
4115 -> 2401
4115 -> 3456
4115 -> 3479
4115 -> 3481
4135 -> 242
4143 -> 4147
4147 -> 242
4147 -> 4153
4147 -> 4157
4153 -> 10805
4157 -> 3456
4161 -> 3783
4161 -> 3786
4161 -> 4168
4168 -> 313
4168 -> 954
4168 -> 4170
4170 -> 313
4170 -> 315
4170 -> 954
4170 -> 989
4170 -> 1726
4170 -> 2399
4170 -> 2401
4170 -> 3456
4170 -> 4175
4170 -> 4177
4170 -> 4179
4170 -> 4181
4175 -> 4201
4177 -> 4192
4179 -> 1726
4201 -> 439
4201 -> 443
4201 -> 8529
4235 -> 242
4235 -> 4242
4242 -> 23161
4258 -> 242
4258 -> 313
4258 -> 827
4258 -> 831
4258 -> 1351
4258 -> 1986
4258 -> 2399
4258 -> 4016
4258 -> 4235
4258 -> 4242
4258 -> 4271
4278 -> 956
4278 -> 1190
4278 -> 1353
4278 -> 1355
4278 -> 1363
4278 -> 1726
4278 -> 4242
4278 -> 4244
4278 -> 4246
4278 -> 4250
4278 -> 4254
4278 -> 4256
4278 -> 4282
4278 -> 4284
4278 -> 4287
4282 -> 12629
4282 -> 12821
4282 -> 15178
4282 -> 15190
4282 -> 23239
4282 -> 23241
4282 -> 23243
4282 -> 26373
4282 -> 26388
4284 -> 989
4284 -> 15178
4284 -> 15190
4284 -> 23239
4284 -> 23243
4287 -> 4284
4287 -> 4295
4295 -> 11949
4295 -> 12821
4295 -> 26373
4310 -> 4312
4312 -> 242
4312 -> 1186
4312 -> 1942
4321 -> 4258
4321 -> 4325
4325 -> 42969
4325 -> 43706
4340 -> 4002
4340 -> 4325
4340 -> 4350
4350 -> 242
4350 -> 1186
4362 -> 313
4362 -> 1986
4362 -> 2399
4362 -> 4029
4362 -> 4032
4362 -> 4368
4368 -> 242
4371 -> 4036
4382 -> 242
4385 -> 4392
4392 -> 242
4392 -> 315
4392 -> 3817
4392 -> 4756
4404 -> 242
4404 -> 313
4404 -> 1986
4404 -> 2399
4404 -> 2401
4404 -> 4413
4413 -> 10819
4418 -> 3445
4418 -> 3448
4418 -> 4425
4418 -> 4428
4425 -> 2206
4425 -> 2410
4428 -> 2206
4428 -> 2410
4428 -> 4506
4441 -> 242
4442 -> 1986
4442 -> 2399
4442 -> 2401
4442 -> 4404
4465 -> 4467
4467 -> 4471
4471 -> 1186
4471 -> 3766
4471 -> 4482
4471 -> 4487
4471 -> 4492
4482 -> 35378
4487 -> 12117
4492 -> 37832
4495 -> 313
4495 -> 2399
4495 -> 2401
4495 -> 3479
4495 -> 3773
4495 -> 4500
4495 -> 4502
4495 -> 4504
4495 -> 4506
4500 -> 12142
4502 -> 831
4502 -> 12133
4504 -> 4879
4504 -> 12144
4506 -> 4806
4534 -> 242
4534 -> 313
4534 -> 2399
4534 -> 2401
4534 -> 4551
4534 -> 4553
4551 -> 242
4555 -> 2206
4555 -> 4560
4555 -> 4562
4562 -> 2206
4593 -> 242
4594 -> 313
4594 -> 2399
4594 -> 2401
4594 -> 4602
4602 -> 4534
4640 -> 242
4640 -> 313
4640 -> 2399
4640 -> 2401
4640 -> 4657
4640 -> 4659
4657 -> 242
4661 -> 2206
4661 -> 4666
4661 -> 4668
4668 -> 2206
4691 -> 242
4692 -> 313
4692 -> 2399
4692 -> 2401
4692 -> 3652
4692 -> 3658
4692 -> 3670
4692 -> 3768
4692 -> 3773
4692 -> 4640
4692 -> 4704
4692 -> 4706
4736 -> 242
4744 -> 4736
4750 -> 1183
4750 -> 2401
4750 -> 4722
4750 -> 4754
4750 -> 4756
4750 -> 4759
4754 -> 407
4754 -> 1726
4756 -> 52701
4759 -> 242
4762 -> 1218
4762 -> 4754
4806 -> 2874
4806 -> 3886
4815 -> 258
4815 -> 321
4815 -> 325
4815 -> 346
4815 -> 371
4815 -> 2874
4815 -> 3886
4820 -> 315
4820 -> 788
4820 -> 791
4820 -> 3479
4823 -> 3479
4827 -> 2874
4827 -> 3886
4830 -> 3479
4830 -> 4827
4833 -> 4830
4836 -> 1726
4836 -> 4844
4836 -> 4846
4836 -> 4848
4836 -> 4850
4836 -> 4852
4836 -> 4854
4836 -> 4856
4848 -> 4860
4848 -> 4862
4848 -> 4864
4848 -> 4866
4868 -> 4870
4872 -> 4875
4879 -> 242
4884 -> 4806
4903 -> 4906
4906 -> 1726
4910 -> 315
4912 -> 315
4914 -> 315
4914 -> 4916
4916 -> 4908
4919 -> 315
4919 -> 3817
4919 -> 4756
4919 -> 4906
4948 -> 2874
4948 -> 3886
4948 -> 4981
4953 -> 4956
4956 -> 4948
4958 -> 258
4958 -> 321
4958 -> 325
4958 -> 346
4958 -> 355
4958 -> 371
4958 -> 4948
4963 -> 315
4965 -> 315
4967 -> 315
4967 -> 4969
4969 -> 4961
4981 -> 2632
4981 -> 10805
5003 -> 3481
5003 -> 4830
5006 -> 336
5006 -> 355
5006 -> 2206
5006 -> 2410
5006 -> 4815
5012 -> 315
5014 -> 315
5043 -> 831
5043 -> 846
5043 -> 1340
5063 -> 242
5065 -> 5068
5065 -> 5073
5068 -> 407
5068 -> 833
5068 -> 835
5068 -> 989
5068 -> 3479
5068 -> 5152
5068 -> 5154
5073 -> 242
5083 -> 5068
5083 -> 5086
5086 -> 242
5089 -> 5092
5092 -> 13627
5092 -> 13636
5094 -> 5068
5094 -> 5097
5097 -> 242
5100 -> 5103
5103 -> 13627
5103 -> 13636
5105 -> 5068
5105 -> 5108
5108 -> 242
5111 -> 5103
5114 -> 831
5114 -> 846
5114 -> 1351
5114 -> 1384
5114 -> 1640
5114 -> 5068
5114 -> 5103
5114 -> 5119
5114 -> 5121
5119 -> 242
5121 -> 242
5124 -> 5103
5142 -> 974
5142 -> 5146
5146 -> 5146
5146 -> 14053
5146 -> 50712
5146 -> 51031
5152 -> 831
5152 -> 835
5152 -> 5161
5152 -> 5163
5152 -> 5165
5152 -> 5167
5154 -> 429
5154 -> 443
5154 -> 788
5154 -> 13764
5154 -> 13766
5154 -> 13768
5163 -> 6204
5163 -> 13636
5163 -> 13649
5163 -> 13670
5163 -> 13711
5163 -> 13729
5163 -> 13847
5165 -> 6204
5165 -> 13636
5165 -> 13649
5165 -> 13670
5167 -> 6204
5167 -> 13636
5167 -> 13649
5167 -> 13670
5167 -> 13717
5167 -> 13729
5226 -> 5229
5229 -> 5236
5231 -> 5236
5236 -> 242
5236 -> 2806
5238 -> 1218
5238 -> 5241
5241 -> 2849
5241 -> 2863
5241 -> 2865
5244 -> 178
5244 -> 5251
5251 -> 2804
5251 -> 2874
5251 -> 2878
5265 -> 5229
5268 -> 5272
5272 -> 5236
5274 -> 5236
5279 -> 5251
5287 -> 4810
5300 -> 5229
5303 -> 5236
5308 -> 264
5308 -> 1649
5308 -> 5241
5312 -> 5251
5327 -> 5229
5330 -> 5272
5334 -> 5236
5347 -> 5348
5407 -> 2836
5409 -> 2840
5426 -> 1218
5426 -> 5241
5436 -> 5251
5436 -> 5446
5448 -> 5436
5455 -> 5436
5461 -> 5465
5465 -> 1218
5465 -> 6204
5467 -> 5472
5474 -> 2876
5478 -> 5483
5483 -> 2876
5485 -> 5489
5489 -> 1218
5489 -> 2876
5489 -> 5465
5489 -> 5743
5489 -> 6204
5511 -> 5327
5519 -> 5330
5525 -> 5334
5532 -> 5539
5539 -> 5436
5548 -> 5539
5555 -> 1223
5555 -> 1726
5555 -> 5411
5555 -> 5414
5555 -> 5420
5555 -> 5422
5555 -> 5424
5555 -> 5426
5555 -> 5485
5555 -> 5571
5555 -> 5575
5571 -> 10777
5575 -> 10787
5575 -> 10789
5575 -> 10791
5585 -> 5348
5631 -> 5633
5633 -> 5327
5638 -> 5330
5642 -> 1726
5642 -> 5411
5642 -> 5414
5642 -> 5420
5642 -> 5426
5642 -> 5474
5642 -> 5645
5715 -> 5717
5717 -> 1183
5717 -> 5327
5726 -> 1183
5726 -> 5330
5731 -> 1183
5731 -> 5334
5739 -> 315
5739 -> 443
5739 -> 1223
5739 -> 1638
5739 -> 1726
5739 -> 5411
5739 -> 5414
5739 -> 5417
5739 -> 5420
5739 -> 5422
5739 -> 5424
5739 -> 5426
5739 -> 5478
5739 -> 5575
5739 -> 5743
5739 -> 5747
5743 -> 6230
5755 -> 5448
5763 -> 5436
5775 -> 5777
5777 -> 5327
5782 -> 5330
5786 -> 5334
5791 -> 1726
5791 -> 5411
5791 -> 5414
5791 -> 5417
5791 -> 5424
5791 -> 5426
5791 -> 5478
5791 -> 5743
5791 -> 5793
5793 -> 1726
5793 -> 3458
5793 -> 5420
5793 -> 5422
5793 -> 5426
5829 -> 242
5829 -> 1183
5829 -> 2806
5829 -> 3863
5843 -> 2836
5845 -> 2840
5853 -> 3892
5853 -> 5860
5853 -> 5862
5860 -> 315
5860 -> 443
5860 -> 627
5860 -> 1140
5860 -> 1638
5860 -> 2804
5860 -> 2849
5860 -> 2874
5860 -> 2878
5860 -> 3869
5860 -> 3879
5860 -> 3890
5860 -> 3892
5860 -> 5174
5860 -> 5743
5860 -> 5862
5860 -> 5871
5860 -> 5875
5860 -> 5877
5860 -> 5880
5860 -> 5882
5882 -> 627
5882 -> 3869
5882 -> 3879
5882 -> 3892
5882 -> 5890
5898 -> 5511
5902 -> 5511
5905 -> 5519
5910 -> 5525
5927 -> 5929
5929 -> 5265
5935 -> 5268
5940 -> 5274
5946 -> 1726
5946 -> 5411
5946 -> 5414
5946 -> 5417
5946 -> 5424
5946 -> 5426
5946 -> 5478
5946 -> 5743
5946 -> 5948
5948 -> 5287
5948 -> 5959
5948 -> 5962
5948 -> 5964
5948 -> 5967
5948 -> 5969
5948 -> 5971
5959 -> 5962
5962 -> 242
5962 -> 439
5962 -> 443
5964 -> 1223
5964 -> 1986
5964 -> 3886
5964 -> 5241
5964 -> 5420
5964 -> 5422
5964 -> 5424
5964 -> 5962
5964 -> 6001
5964 -> 6010
5964 -> 6012
5964 -> 6019
5964 -> 6021
5964 -> 6023
5964 -> 6025
5967 -> 1223
5967 -> 1726
5967 -> 5420
5967 -> 5422
5967 -> 5424
5967 -> 5467
5967 -> 5969
5967 -> 6001
5967 -> 6003
5971 -> 315
5971 -> 1986
5971 -> 3886
5971 -> 5964
5971 -> 6010
5971 -> 6012
5973 -> 5977
5977 -> 3479
5977 -> 5279
5977 -> 5959
5977 -> 5962
5977 -> 5971
5984 -> 5988
5988 -> 3479
5988 -> 5279
5988 -> 5959
5988 -> 5962
5988 -> 5964
5995 -> 242
6001 -> 989
6001 -> 1726
6001 -> 6345
6010 -> 2874
6010 -> 5969
6010 -> 6003
6010 -> 6350
6012 -> 439
6012 -> 2874
6012 -> 6350
6019 -> 2874
6019 -> 5969
6019 -> 6003
6019 -> 6350
6021 -> 1726
6021 -> 2874
6021 -> 5969
6021 -> 6003
6021 -> 6345
6021 -> 6350
6023 -> 989
6023 -> 1726
6023 -> 6001
6023 -> 6350
6023 -> 6447
6025 -> 6367
6031 -> 6033
6033 -> 5327
6038 -> 5330
6042 -> 1726
6042 -> 5411
6042 -> 5414
6042 -> 5417
6042 -> 5424
6042 -> 5426
6042 -> 5461
6042 -> 5478
6042 -> 5485
6042 -> 6045
6045 -> 419
6045 -> 989
6045 -> 1223
6045 -> 1726
6045 -> 5420
6045 -> 5422
6045 -> 5424
6045 -> 5426
6045 -> 5467
6056 -> 6058
6058 -> 5327
6063 -> 5330
6067 -> 989
6067 -> 1223
6067 -> 1726
6067 -> 5411
6067 -> 5414
6067 -> 5420
6067 -> 5422
6067 -> 5424
6067 -> 5426
6067 -> 5474
6067 -> 5743
6067 -> 6069
6069 -> 51723
6077 -> 6079
6079 -> 5300
6085 -> 5455
6085 -> 5645
6092 -> 336
6092 -> 338
6092 -> 1726
6092 -> 5308
6092 -> 5417
6092 -> 5420
6101 -> 6103
6103 -> 5226
6109 -> 5455
6109 -> 5645
6115 -> 1726
6115 -> 5238
6115 -> 5417
6115 -> 5420
6115 -> 5426
6120 -> 5511
6122 -> 5511
6125 -> 5519
6129 -> 5525
6140 -> 5511
6142 -> 5511
6145 -> 5519
6149 -> 5525
6158 -> 6160
6160 -> 5327
6165 -> 5330
6169 -> 419
6169 -> 989
6169 -> 1223
6169 -> 1726
6169 -> 5411
6169 -> 5414
6169 -> 5420
6169 -> 5422
6169 -> 5424
6169 -> 5426
6169 -> 5485
6175 -> 5327
6178 -> 5327
6181 -> 5330
6185 -> 1223
6185 -> 1726
6185 -> 5411
6185 -> 5414
6185 -> 5420
6185 -> 5422
6185 -> 5424
6185 -> 5426
6185 -> 5485
6197 -> 242
6199 -> 5606
6199 -> 5775
6199 -> 6204
6204 -> 3272
6212 -> 5606
6212 -> 5777
6212 -> 6204
6218 -> 1218
6218 -> 1223
6218 -> 1225
6218 -> 1726
6218 -> 5600
6218 -> 5602
6218 -> 5693
6218 -> 6230
6230 -> 3272
6230 -> 11082
6234 -> 6240
6240 -> 1218
6240 -> 1223
6240 -> 1225
6240 -> 1942
6240 -> 2628
6240 -> 5483
6240 -> 5743
6240 -> 6204
6242 -> 6240
6273 -> 10805
6334 -> 5962
6350 -> 5962
6352 -> 443
6352 -> 6350
6355 -> 6350
6359 -> 439
6359 -> 443
6359 -> 6345
6359 -> 6350
6362 -> 1726
6362 -> 6350
6367 -> 44997
6367 -> 52910
6369 -> 1638
6374 -> 6369
6379 -> 6384
6384 -> 1638
6384 -> 1726
6386 -> 6391
6391 -> 1223
6391 -> 1638
6391 -> 1726
6393 -> 1644
6402 -> 439
6402 -> 6350
6405 -> 439
6405 -> 443
6405 -> 6350
6408 -> 6350
6412 -> 443
6412 -> 6350
6415 -> 6010
6415 -> 6012
6415 -> 6408
6415 -> 6417
6415 -> 6419
6417 -> 958
6417 -> 1077
6417 -> 6001
6417 -> 6350
6419 -> 6012
6419 -> 6019
6419 -> 6023
6419 -> 6350
6423 -> 6010
6423 -> 6012
6423 -> 6408
6423 -> 6417
6423 -> 6419
6425 -> 6010
6425 -> 6012
6425 -> 6019
6425 -> 6021
6425 -> 6350
6425 -> 6417
6427 -> 1031
6427 -> 1033
6427 -> 1084
6427 -> 1086
6427 -> 6350
6429 -> 1031
6429 -> 1033
6429 -> 1084
6429 -> 1086
6429 -> 6350
6431 -> 998
6431 -> 1031
6431 -> 1033
6431 -> 6350
6434 -> 2874
6434 -> 6012
6434 -> 6417
6434 -> 6431
6438 -> 6405
6438 -> 6417
6438 -> 6431
6442 -> 1031
6442 -> 1033
6442 -> 1084
6442 -> 1086
6442 -> 6350
6444 -> 1031
6444 -> 1033
6444 -> 1084
6444 -> 1086
6444 -> 6350
6447 -> 51657
6450 -> 439
6450 -> 1031
6450 -> 1033
6450 -> 1084
6450 -> 1086
6450 -> 6350
6452 -> 439
6452 -> 1031
6452 -> 1033
6452 -> 1084
6452 -> 1086
6452 -> 6350
6454 -> 1077
6454 -> 5969
6454 -> 6003
6456 -> 831
6456 -> 846
6456 -> 956
6456 -> 1031
6456 -> 1033
6456 -> 4157
6456 -> 6001
6456 -> 6345
6456 -> 6350
6456 -> 6454
6471 -> 443
6471 -> 5962
6475 -> 443
6475 -> 6334
6479 -> 6350
6481 -> 6486
6496 -> 242
6514 -> 242
6532 -> 242
6532 -> 6537
6537 -> 6642
6537 -> 6646
6540 -> 242
6540 -> 6204
6545 -> 242
6545 -> 6204
6551 -> 6537
6551 -> 6554
6554 -> 6559
6559 -> 242
6559 -> 1986
6559 -> 2399
6559 -> 4866
6559 -> 6204
6565 -> 6571
6573 -> 6576
6573 -> 6578
6573 -> 6583
6573 -> 6588
6578 -> 443
6578 -> 5969
6578 -> 6003
6578 -> 6583
6578 -> 6597
6578 -> 6599
6578 -> 6601
6578 -> 6603
6578 -> 6605
6578 -> 6607
6578 -> 6609
6578 -> 6611
6590 -> 5962
6590 -> 6576
6590 -> 6578
6590 -> 6583
6590 -> 6588
6601 -> 439
6601 -> 443
6601 -> 14280
6601 -> 47418
6601 -> 51203
6607 -> 6576
6607 -> 6597
6607 -> 6599
6607 -> 6601
6607 -> 6617
6607 -> 6619
6607 -> 6621
6623 -> 2968
6623 -> 3272
6623 -> 5962
6623 -> 6578
6623 -> 6630
6623 -> 6632
6636 -> 6640
6636 -> 6642
6640 -> 6540
6640 -> 6646
6646 -> 13549
6646 -> 51174
6649 -> 6554
6649 -> 6646
6654 -> 6663
6654 -> 6665
6654 -> 6667
6654 -> 6669
6654 -> 6671
6665 -> 2968
6665 -> 5962
6665 -> 6603
6665 -> 6611
6665 -> 6667
6665 -> 6676
6665 -> 6678
6665 -> 6680
6665 -> 6685
6665 -> 6687
6665 -> 6689
6669 -> 2632
6669 -> 6630
6669 -> 10787
6669 -> 10789
6669 -> 10791
6676 -> 6667
6676 -> 6680
6676 -> 6685
6678 -> 6667
6678 -> 14249
6678 -> 51182
6685 -> 4866
6685 -> 6667
6685 -> 6680
6685 -> 7070
6685 -> 13574
6689 -> 4864
6689 -> 4866
6689 -> 6667
6689 -> 6680
6689 -> 6687
6689 -> 51187
6693 -> 242
6695 -> 1031
6695 -> 1033
6695 -> 3272
6695 -> 5962
6727 -> 242
6737 -> 242
6737 -> 313
6741 -> 6737
6745 -> 6727
6748 -> 6727
6748 -> 6752
6748 -> 6754
6748 -> 6756
6748 -> 6758
6760 -> 6748
6764 -> 6727
6764 -> 6752
6764 -> 6754
6764 -> 6756
6764 -> 6758
6768 -> 6764
6772 -> 6727
6772 -> 6752
6772 -> 6754
6772 -> 6756
6772 -> 6758
6776 -> 6772
6780 -> 6752
6780 -> 6754
6780 -> 6756
6780 -> 6758
6784 -> 6780
6788 -> 989
6790 -> 3875
6790 -> 6727
6790 -> 6788
6795 -> 6752
6795 -> 6754
6795 -> 6756
6795 -> 6758
6798 -> 1644
6800 -> 6384
6800 -> 6752
6800 -> 6754
6800 -> 6756
6800 -> 6758
6804 -> 6384
6804 -> 6788
6807 -> 1726
6807 -> 6752
6810 -> 6727
6810 -> 6752
6810 -> 6754
6810 -> 6756
6810 -> 6758
6810 -> 6790
6813 -> 3875
6813 -> 6727
6819 -> 6752
6821 -> 6754
6821 -> 6756
6821 -> 6758
6823 -> 6727
6826 -> 4844
6826 -> 4846
6826 -> 4856
6826 -> 6828
6844 -> 242
6851 -> 6856
6856 -> 10789
6856 -> 10845
6856 -> 10904
6860 -> 1031
6860 -> 1033
6860 -> 3875
6860 -> 6865
6867 -> 2632
6867 -> 4153
6867 -> 6856
6872 -> 2632
6872 -> 4153
6872 -> 6856
6894 -> 5829
6901 -> 5847
6904 -> 5849
6907 -> 5851
6910 -> 6920
6910 -> 6922
6910 -> 6924
6920 -> 2874
6920 -> 5860
6920 -> 6936
6922 -> 7072
6922 -> 7099
6922 -> 7102
6922 -> 7107
6922 -> 7109
6922 -> 7132
6922 -> 7149
6924 -> 7012
6924 -> 7072
6924 -> 7099
6924 -> 7102
6924 -> 7107
6924 -> 7109
6924 -> 7132
6924 -> 7134
6924 -> 7137
6924 -> 7149
6924 -> 7151
6924 -> 7234
6936 -> 242
6939 -> 6942
7008 -> 242
7008 -> 7012
7019 -> 7023
7023 -> 242
7023 -> 315
7023 -> 7012
7025 -> 7023
7035 -> 242
7035 -> 315
7035 -> 398
7035 -> 6924
7035 -> 7012
7035 -> 7023
7035 -> 7041
7035 -> 7043
7035 -> 7045
7035 -> 7047
7035 -> 7049
7035 -> 7051
7041 -> 7012
7041 -> 7072
7041 -> 7099
7041 -> 7102
7041 -> 7107
7041 -> 7109
7041 -> 7149
7041 -> 7247
7045 -> 7012
7045 -> 7072
7045 -> 7099
7045 -> 7102
7045 -> 7107
7045 -> 7109
7045 -> 7149
7047 -> 7041
7047 -> 7045
7047 -> 7053
7047 -> 7099
7047 -> 7128
7051 -> 7099
7053 -> 242
7056 -> 242
7056 -> 4864
7056 -> 4866
7056 -> 6619
7056 -> 7012
7056 -> 7061
7056 -> 7066
7056 -> 7068
7056 -> 7070
7056 -> 7072
7061 -> 7012
7072 -> 7102
7072 -> 7134
7072 -> 7247
7074 -> 242
7074 -> 7012
7079 -> 7008
7079 -> 7082
7084 -> 7019
7084 -> 7082
7088 -> 7025
7088 -> 7082
7092 -> 7023
7092 -> 7082
7095 -> 7035
7095 -> 7082
7099 -> 7012
7099 -> 7053
7099 -> 7099
7099 -> 7102
7099 -> 7107
7099 -> 7109
7107 -> 7126
7109 -> 7099
7109 -> 7107
7109 -> 7303
7113 -> 7056
7117 -> 7121
7121 -> 7074
7128 -> 7043
7130 -> 7049
7137 -> 799
7137 -> 7102
7137 -> 7109
7137 -> 7132
7137 -> 7134
7145 -> 7012
7145 -> 7099
7145 -> 7102
7145 -> 7107
7145 -> 7109
7145 -> 7149
7145 -> 7151
7153 -> 7012
7153 -> 7099
7153 -> 7102
7153 -> 7107
7153 -> 7109
7153 -> 7149
7153 -> 7151
7157 -> 7099
7157 -> 7102
7157 -> 7107
7157 -> 7109
7157 -> 7149
7157 -> 7159
7161 -> 7099
7161 -> 7102
7161 -> 7107
7161 -> 7109
7161 -> 7149
7161 -> 7159
7163 -> 7099
7163 -> 7102
7163 -> 7107
7163 -> 7109
7163 -> 7149
7163 -> 7159
7165 -> 7099
7165 -> 7102
7165 -> 7107
7165 -> 7109
7165 -> 7149
7165 -> 7159
7167 -> 7099
7172 -> 7099
7172 -> 7102
7172 -> 7107
7172 -> 7109
7172 -> 7149
7172 -> 7159
7174 -> 7012
7174 -> 7149
7174 -> 7151
7177 -> 7172
7177 -> 7180
7182 -> 7012
7182 -> 7145
7182 -> 7149
7182 -> 7153
7190 -> 7192
7192 -> 6924
7192 -> 7088
7192 -> 7099
7192 -> 7102
7192 -> 7107
7192 -> 7109
7192 -> 7113
7192 -> 7128
7192 -> 7149
7192 -> 7153
7192 -> 7174
7192 -> 7207
7196 -> 7192
7200 -> 7192
7204 -> 7041
7204 -> 7045
7204 -> 7190
7204 -> 7207
7207 -> 6924
7207 -> 7051
7220 -> 7088
7220 -> 7145
7220 -> 7153
7220 -> 7190
7224 -> 7099
7224 -> 7128
7229 -> 7099
7229 -> 7128
7229 -> 7232
7232 -> 7045
7232 -> 7088
7232 -> 7270
7270 -> 7072
7270 -> 7099
7270 -> 7102
7270 -> 7107
7270 -> 7109
7270 -> 7134
7270 -> 7149
7281 -> 7041
7281 -> 7043
7283 -> 6922
7283 -> 6924
7283 -> 7041
7283 -> 7099
7283 -> 7102
7283 -> 7107
7283 -> 7109
7283 -> 7174
7283 -> 7182
7287 -> 7289
7287 -> 7291
7289 -> 7294
7291 -> 7294
7313 -> 7099
7317 -> 6924
7317 -> 7012
7317 -> 7099
7317 -> 7102
7317 -> 7107
7317 -> 7109
7317 -> 7128
7317 -> 7145
7317 -> 7151
7317 -> 7174
7317 -> 7207
7317 -> 7311
7322 -> 4864
7322 -> 4866
7322 -> 7041
7322 -> 7045
7322 -> 7047
7322 -> 7051
7322 -> 7092
7322 -> 7107
7322 -> 7128
7322 -> 7130
7322 -> 7145
7322 -> 7149
7322 -> 7151
7322 -> 7159
7322 -> 7174
7322 -> 7190
7322 -> 7207
7322 -> 7227
7322 -> 7232
7322 -> 7287
7322 -> 7328
7322 -> 7330
7332 -> 398
7332 -> 7095
7332 -> 7207
7332 -> 7322
7332 -> 7330
7336 -> 7322
7338 -> 6924
7338 -> 7095
7341 -> 7095
7341 -> 7207
7344 -> 7045
7344 -> 7095
7347 -> 7041
7347 -> 7095
7350 -> 7095
7350 -> 7204
7354 -> 415
7354 -> 7322
7356 -> 7088
7356 -> 7149
7356 -> 7172
7358 -> 7051
7361 -> 398
7361 -> 7051
7364 -> 7045
7364 -> 7047
7364 -> 7130
7367 -> 6924
7367 -> 7045
7367 -> 7283
7371 -> 7373
7373 -> 6922
7373 -> 7051
7373 -> 7128
7373 -> 7377
7377 -> 7012
7377 -> 7041
7377 -> 7045
7377 -> 7047
7377 -> 7051
7377 -> 7082
7377 -> 7088
7377 -> 7099
7377 -> 7102
7377 -> 7107
7377 -> 7109
7377 -> 7117
7377 -> 7128
7377 -> 7130
7377 -> 7145
7377 -> 7149
7377 -> 7153
7377 -> 7174
7377 -> 7182
7377 -> 7190
7377 -> 7204
7377 -> 7207
7377 -> 7220
7377 -> 7311
7377 -> 7313
7377 -> 7390
7377 -> 7396
7377 -> 7783
7377 -> 7827
7377 -> 7838
7379 -> 7095
7379 -> 7377
7382 -> 7047
7385 -> 7377
7388 -> 7390
7390 -> 7045
7390 -> 7079
7390 -> 7082
7390 -> 7117
7390 -> 7190
7390 -> 7207
7390 -> 7220
7390 -> 7781
7390 -> 7838
7390 -> 7853
7392 -> 7128
7392 -> 7207
7392 -> 7390
7394 -> 7396
7396 -> 4844
7396 -> 4856
7396 -> 6922
7396 -> 6924
7396 -> 7041
7396 -> 7047
7396 -> 7053
7396 -> 7082
7396 -> 7088
7396 -> 7099
7396 -> 7102
7396 -> 7107
7396 -> 7109
7396 -> 7113
7396 -> 7117
7396 -> 7130
7396 -> 7145
7396 -> 7149
7396 -> 7153
7396 -> 7174
7396 -> 7196
7396 -> 7220
7396 -> 7222
7396 -> 7311
7396 -> 7785
7396 -> 7789
7396 -> 7827
7396 -> 7830
7396 -> 7862
7396 -> 7864
7398 -> 6924
7398 -> 7128
7398 -> 7396
7400 -> 7227
7403 -> 7412
7412 -> 6922
7412 -> 7051
7412 -> 7082
7412 -> 7099
7412 -> 7126
7412 -> 7145
7412 -> 7153
7412 -> 7204
7412 -> 7207
7412 -> 7232
7412 -> 7775
7412 -> 7777
7412 -> 7875
7412 -> 7878
7414 -> 7416
7416 -> 6922
7416 -> 7051
7416 -> 7082
7416 -> 7099
7416 -> 7126
7416 -> 7145
7416 -> 7153
7416 -> 7204
7416 -> 7207
7416 -> 7232
7416 -> 7775
7416 -> 7777
7416 -> 7827
7416 -> 7875
7416 -> 7878
7418 -> 7420
7420 -> 7041
7420 -> 7412
7420 -> 7416
7422 -> 7424
7424 -> 7041
7424 -> 7045
7424 -> 7082
7424 -> 7099
7424 -> 7107
7424 -> 7128
7424 -> 7145
7424 -> 7207
7424 -> 7283
7424 -> 7313
7424 -> 7432
7424 -> 7775
7426 -> 7428
7428 -> 7041
7428 -> 7045
7428 -> 7128
7428 -> 7207
7428 -> 7283
7428 -> 7432
7430 -> 7432
7432 -> 6922
7432 -> 6924
7432 -> 7041
7432 -> 7043
7432 -> 7051
7432 -> 7053
7432 -> 7082
7432 -> 7099
7432 -> 7126
7432 -> 7145
7432 -> 7153
7432 -> 7207
7432 -> 7767
7432 -> 7777
7432 -> 7827
7432 -> 7830
7432 -> 7834
7432 -> 7891
7434 -> 6924
7434 -> 7041
7434 -> 7045
7434 -> 7095
7434 -> 7130
7434 -> 7207
7434 -> 7283
7434 -> 7430
7438 -> 6922
7438 -> 6924
7438 -> 7051
7438 -> 7390
7440 -> 6922
7440 -> 7051
7440 -> 7207
7440 -> 7390
7442 -> 6924
7442 -> 7041
7442 -> 7051
7442 -> 7207
7442 -> 7390
7444 -> 6924
7444 -> 7045
7444 -> 7128
7444 -> 7207
7444 -> 7283
7444 -> 7394
7447 -> 6924
7447 -> 7045
7447 -> 7128
7447 -> 7283
7447 -> 7394
7449 -> 6922
7449 -> 6924
7449 -> 7041
7449 -> 7128
7449 -> 7207
7449 -> 7394
7451 -> 313
7451 -> 6924
7451 -> 7045
7451 -> 7107
7456 -> 313
7456 -> 6924
7456 -> 7107
7456 -> 7344
7461 -> 6924
7461 -> 7045
7467 -> 6924
7467 -> 7344
7473 -> 6924
7473 -> 7045
7481 -> 6924
7481 -> 7344
7489 -> 6924
7489 -> 7045
7499 -> 6924
7499 -> 7344
7511 -> 7008
7514 -> 7019
7518 -> 7025
7522 -> 7023
7526 -> 7035
7526 -> 7530
7530 -> 7072
7530 -> 7082
7530 -> 7102
7530 -> 7134
7530 -> 7247
7530 -> 7580
7532 -> 7053
7532 -> 7530
7535 -> 7056
7535 -> 7530
7539 -> 7074
7545 -> 7082
7545 -> 7511
7550 -> 7082
7550 -> 7514
7554 -> 7082
7554 -> 7518
7558 -> 7082
7558 -> 7522
7562 -> 7082
7562 -> 7526
7566 -> 7012
7566 -> 7082
7566 -> 7102
7566 -> 7107
7566 -> 7109
7566 -> 7532
7566 -> 7566
7571 -> 7082
7571 -> 7535
7575 -> 7082
7575 -> 7539
7580 -> 7061
7585 -> 6924
7585 -> 7012
7585 -> 7041
7585 -> 7082
7585 -> 7102
7585 -> 7107
7585 -> 7109
7585 -> 7145
7585 -> 7174
7585 -> 7207
7585 -> 7224
7585 -> 7227
7585 -> 7229
7585 -> 7311
7585 -> 7313
7585 -> 7566
7585 -> 7580
7599 -> 5348
7676 -> 7679
7679 -> 242
7679 -> 7025
7679 -> 7056
7679 -> 7690
7679 -> 7695
7690 -> 4866
7690 -> 7025
7690 -> 7041
7690 -> 7283
7690 -> 7287
7690 -> 7679
7690 -> 7799
7690 -> 7801
7690 -> 7803
7695 -> 4866
7695 -> 7056
7695 -> 7070
7695 -> 7294
7695 -> 7795
7731 -> 7008
7733 -> 7019
7736 -> 7025
7739 -> 7023
7742 -> 7035
7745 -> 7053
7748 -> 7056
7799 -> 6924
7799 -> 7041
7799 -> 7045
7799 -> 7174
7799 -> 7207
7799 -> 7283
7801 -> 6924
7801 -> 7041
7801 -> 7045
7801 -> 7053
7801 -> 7174
7803 -> 6922
7803 -> 6924
7803 -> 7025
7803 -> 7041
7803 -> 7045
7803 -> 7053
7803 -> 7082
7803 -> 7174
7820 -> 242
7822 -> 4866
7822 -> 7012
7822 -> 7070
7822 -> 7294
7822 -> 7748
7822 -> 7795
7827 -> 6924
7827 -> 7045
7827 -> 7061
7827 -> 7207
7827 -> 7224
7830 -> 6924
7830 -> 7045
7830 -> 7107
7830 -> 7174
7830 -> 7311
7834 -> 6924
7834 -> 7041
7834 -> 7045
7834 -> 7207
7838 -> 6924
7838 -> 7041
7838 -> 7053
7838 -> 7107
7838 -> 7128
7838 -> 7830
7853 -> 6922
7853 -> 6924
7853 -> 7045
7853 -> 7053
7853 -> 7128
7853 -> 7174
7862 -> 6922
7862 -> 6924
7862 -> 7041
7862 -> 7045
7862 -> 7053
7862 -> 7113
7862 -> 7130
7862 -> 7174
7862 -> 7827
7875 -> 6922
7875 -> 6924
7875 -> 7045
7875 -> 7051
7875 -> 7053
7875 -> 7128
7875 -> 7174
7878 -> 6922
7878 -> 6924
7878 -> 7045
7878 -> 7051
7878 -> 7053
7878 -> 7128
7878 -> 7174
7891 -> 6922
7891 -> 6924
7891 -> 7045
7891 -> 7051
7891 -> 7053
7891 -> 7174
7966 -> 242
7969 -> 242
7972 -> 6273
7972 -> 7978
7980 -> 403
7980 -> 439
7980 -> 443
7980 -> 989
7980 -> 2206
7980 -> 7983
7980 -> 7987
7980 -> 7989
7980 -> 7991
7980 -> 7993
7980 -> 7995
7987 -> 443
7987 -> 7978
7987 -> 8022
7995 -> 7987
8001 -> 8004
8001 -> 8006
8006 -> 42719
8009 -> 7980
8009 -> 8012
8014 -> 2628
8014 -> 8009
8022 -> 6856
8026 -> 958
8026 -> 8029
8040 -> 242
8046 -> 8004
8053 -> 2628
8053 -> 8051
8073 -> 242
8076 -> 242
8079 -> 8083
8083 -> 6273
8083 -> 8088
8090 -> 439
8090 -> 443
8090 -> 989
8090 -> 2206
8090 -> 6212
8090 -> 8088
8090 -> 8093
8090 -> 8095
8090 -> 8097
8090 -> 8099
8090 -> 8101
8090 -> 8108
8090 -> 8110
8101 -> 242
8104 -> 8088
8114 -> 8004
8114 -> 8006
8118 -> 8012
8118 -> 8090
8121 -> 2628
8121 -> 8118
8128 -> 958
8128 -> 8131
8149 -> 8153
8153 -> 8160
8153 -> 8165
8160 -> 8076
8165 -> 42354
8167 -> 8160
8186 -> 443
8186 -> 8188
8188 -> 407
8188 -> 443
8188 -> 958
8188 -> 9093
8188 -> 44327
8190 -> 998
8190 -> 8193
8193 -> 958
8193 -> 1017
8193 -> 3456
8193 -> 8186
8202 -> 8205
8205 -> 44278
8209 -> 8182
8209 -> 8184
8213 -> 8182
8213 -> 8184
8225 -> 8227
8227 -> 1223
8227 -> 1225
8227 -> 8236
8227 -> 8238
8231 -> 242
8236 -> 958
8236 -> 989
8236 -> 998
8236 -> 1017
8236 -> 1225
8236 -> 3458
8236 -> 8012
8238 -> 958
8238 -> 998
8238 -> 1017
8238 -> 1225
8238 -> 3458
8238 -> 8012
8262 -> 8165
8262 -> 8266
8266 -> 2206
8266 -> 4157
8266 -> 7969
8281 -> 998
8281 -> 8284
8284 -> 8288
8288 -> 958
8288 -> 10215
8288 -> 10217
8290 -> 8205
8315 -> 8317
8317 -> 8322
8322 -> 8165
8322 -> 8329
8329 -> 2628
8329 -> 8076
8331 -> 8329
8346 -> 1066
8356 -> 1045
8356 -> 2206
8388 -> 8391
8391 -> 8165
8391 -> 8397
8397 -> 8076
8397 -> 8408
8399 -> 8397
8408 -> 9063
8411 -> 8413
8415 -> 8418
8418 -> 956
8418 -> 958
8418 -> 998
8418 -> 1017
8420 -> 8423
8423 -> 958
8423 -> 1017
8425 -> 8428
8428 -> 9113
8432 -> 8411
8435 -> 8411
8453 -> 8076
8463 -> 2206
8503 -> 8165
8503 -> 8515
8515 -> 242
8515 -> 439
8515 -> 443
8515 -> 827
8515 -> 831
8515 -> 833
8515 -> 835
8515 -> 1186
8515 -> 8525
8515 -> 8527
8515 -> 8529
8515 -> 8531
8515 -> 8534
8529 -> 11166
8531 -> 10805
8531 -> 11082
8534 -> 439
8534 -> 443
8534 -> 3272
8534 -> 9751
8537 -> 8004
8540 -> 835
8540 -> 3873
8543 -> 827
8543 -> 831
8543 -> 835
8543 -> 2945
8548 -> 833
8548 -> 835
8548 -> 2410
8548 -> 8012
8550 -> 2628
8550 -> 8548
8555 -> 2628
8555 -> 6204
8555 -> 6632
8555 -> 8548
8555 -> 8562
8555 -> 8564
8577 -> 8165
8577 -> 8581
8581 -> 7969
8581 -> 8515
8581 -> 8588
8588 -> 313
8588 -> 827
8588 -> 831
8588 -> 2945
8590 -> 1340
8590 -> 1351
8590 -> 1353
8590 -> 1355
8590 -> 1363
8590 -> 1379
8590 -> 1384
8590 -> 7969
8590 -> 8515
8590 -> 8588
8590 -> 8600
8605 -> 8165
8605 -> 8590
8621 -> 8540
8625 -> 8525
8625 -> 8527
8625 -> 8543
8629 -> 8525
8629 -> 8527
8629 -> 8543
8631 -> 8525
8631 -> 8527
8631 -> 8543
8633 -> 8525
8633 -> 8527
8633 -> 8543
8635 -> 8525
8635 -> 8527
8635 -> 8543
8639 -> 8548
8650 -> 8165
8650 -> 8654
8654 -> 8076
8654 -> 8515
8654 -> 8661
8661 -> 313
8661 -> 827
8661 -> 831
8661 -> 2945
8663 -> 1340
8663 -> 1351
8663 -> 1353
8663 -> 1355
8663 -> 1363
8663 -> 1379
8663 -> 1384
8663 -> 8076
8663 -> 8515
8663 -> 8600
8663 -> 8661
8676 -> 8165
8676 -> 8663
8692 -> 8540
8695 -> 8692
8699 -> 8525
8699 -> 8527
8699 -> 8543
8702 -> 2206
8702 -> 8525
8702 -> 8527
8702 -> 8543
8702 -> 8705
8705 -> 8525
8705 -> 8527
8705 -> 8543
8707 -> 8525
8707 -> 8527
8707 -> 8543
8709 -> 8525
8709 -> 8527
8709 -> 8543
8712 -> 8525
8712 -> 8527
8712 -> 8543
8720 -> 8548
8736 -> 958
8736 -> 974
8736 -> 1132
8736 -> 8741
8736 -> 8743
8736 -> 8746
8741 -> 53605
8743 -> 53665
8746 -> 315
8748 -> 8751
8751 -> 8165
8751 -> 8757
8757 -> 958
8757 -> 2628
8757 -> 8076
8759 -> 8757
8774 -> 998
8774 -> 8777
8781 -> 998
8784 -> 958
8784 -> 2206
8787 -> 8012
8791 -> 8772
8794 -> 8772
8822 -> 8826
8826 -> 8165
8826 -> 8833
8833 -> 2628
8833 -> 8076
8835 -> 8833
8850 -> 998
8850 -> 8853
8853 -> 958
8853 -> 8857
8857 -> 407
8857 -> 443
8857 -> 958
8857 -> 1017
8857 -> 1223
8857 -> 1225
8857 -> 8188
8857 -> 9906
8857 -> 44323
8857 -> 44329
8857 -> 44339
8859 -> 8205
8868 -> 8864
8871 -> 8875
8875 -> 8862
8875 -> 8864
8908 -> 242
8908 -> 313
8908 -> 1942
8908 -> 3456
8908 -> 8914
8914 -> 315
8914 -> 791
8916 -> 313
8916 -> 833
8916 -> 835
8916 -> 958
8916 -> 1726
8916 -> 1942
8916 -> 2947
8916 -> 2949
8916 -> 4045
8916 -> 5571
8916 -> 8926
8916 -> 8928
8916 -> 8932
8916 -> 8944
8916 -> 8946
8916 -> 8955
8916 -> 8957
8916 -> 8959
8916 -> 8961
8916 -> 8963
8916 -> 8965
8916 -> 8967
8916 -> 8969
8926 -> 827
8926 -> 831
8926 -> 835
8926 -> 2945
8928 -> 2404
8932 -> 9705
8944 -> 835
8944 -> 9762
8946 -> 313
8946 -> 956
8946 -> 8049
8946 -> 9842
8955 -> 22165
8957 -> 22161
8969 -> 9705
8969 -> 9707
8971 -> 8916
8977 -> 271
8977 -> 827
8977 -> 831
8977 -> 1183
8977 -> 1942
8977 -> 2945
8977 -> 8932
8977 -> 8967
8977 -> 8985
8977 -> 8987
8977 -> 8992
8977 -> 8994
8977 -> 8996
8977 -> 9001
8977 -> 9003
8985 -> 242
9001 -> 44896
9003 -> 8165
9003 -> 9795
9007 -> 8926
9007 -> 8932
9022 -> 9025
9027 -> 699
9030 -> 4870
9063 -> 8165
9063 -> 9070
9070 -> 956
9070 -> 958
9070 -> 989
9070 -> 998
9070 -> 2628
9070 -> 8076
9070 -> 9093
9072 -> 9070
9113 -> 44358
9131 -> 956
9131 -> 958
9131 -> 989
9131 -> 998
9131 -> 8012
9131 -> 9133
9145 -> 8165
9145 -> 9148
9148 -> 958
9148 -> 1017
9148 -> 4153
9148 -> 7969
9160 -> 998
9166 -> 1005
9179 -> 1017
9179 -> 2206
9179 -> 9182
9179 -> 9184
9196 -> 8165
9196 -> 9200
9200 -> 2628
9200 -> 8076
9212 -> 998
9215 -> 998
9218 -> 958
9218 -> 2206
9252 -> 8165
9252 -> 9257
9257 -> 2628
9257 -> 4157
9257 -> 6273
9257 -> 7969
9275 -> 9278
9275 -> 9280
9278 -> 9286
9278 -> 9288
9280 -> 9303
9286 -> 788
9288 -> 791
9303 -> 998
9303 -> 9306
9306 -> 8288
9306 -> 9278
9310 -> 9278
9310 -> 9280
9318 -> 9294
9318 -> 9296
9318 -> 9298
9323 -> 9327
9327 -> 9294
9327 -> 9296
9327 -> 9298
9330 -> 788
9330 -> 9294
9330 -> 9296
9330 -> 9298
9332 -> 791
9332 -> 9294
9332 -> 9298
9368 -> 242
9368 -> 2628
9372 -> 9375
9375 -> 974
9375 -> 9383
9375 -> 9385
9377 -> 9375
9383 -> 403
9383 -> 9395
9383 -> 9397
9383 -> 9399
9383 -> 9401
9383 -> 9403
9383 -> 9405
9383 -> 9407
9385 -> 403
9385 -> 5154
9385 -> 8955
9385 -> 9395
9385 -> 9399
9385 -> 9413
9385 -> 9415
9385 -> 9417
9385 -> 9419
9395 -> 271
9395 -> 403
9395 -> 5163
9395 -> 5165
9395 -> 5167
9395 -> 9401
9395 -> 9403
9395 -> 9426
9395 -> 9429
9395 -> 9433
9395 -> 9435
9395 -> 9441
9395 -> 9445
9401 -> 13627
9401 -> 13749
9403 -> 13627
9403 -> 13649
9403 -> 13810
9407 -> 13735
9407 -> 13745
9426 -> 13676
9429 -> 13649
9429 -> 13657
9429 -> 13670
9433 -> 13636
9433 -> 13649
9433 -> 13827
9435 -> 13627
9435 -> 13844
9441 -> 21708
9441 -> 22566
9455 -> 8165
9455 -> 9459
9459 -> 2628
9459 -> 8076
9473 -> 998
9473 -> 1726
9476 -> 998
9479 -> 2206
9479 -> 9482
9508 -> 8165
9508 -> 9512
9512 -> 8076
9521 -> 989
9521 -> 998
9524 -> 958
9527 -> 989
9527 -> 9530
9530 -> 1726
9530 -> 10222
9532 -> 2206
9532 -> 9535
9535 -> 9991
9563 -> 8165
9563 -> 9567
9567 -> 2628
9567 -> 8076
9579 -> 998
9582 -> 998
9585 -> 2206
9585 -> 9482
9620 -> 9622
9622 -> 9627
9627 -> 8165
9627 -> 9634
9634 -> 958
9634 -> 2628
9634 -> 8076
9636 -> 9634
9654 -> 958
9654 -> 998
9658 -> 958
9661 -> 958
9661 -> 1726
9661 -> 9664
9664 -> 1726
9664 -> 44358
9667 -> 9671
9671 -> 958
9671 -> 6273
9671 -> 8083
9671 -> 9676
9676 -> 9530
9676 -> 9664
9676 -> 9676
9680 -> 998
9682 -> 998
9682 -> 1005
9694 -> 998
9694 -> 9133
9705 -> 8165
9705 -> 9715
9707 -> 827
9707 -> 831
9707 -> 2945
9707 -> 9003
9711 -> 9715
9715 -> 313
9715 -> 439
9715 -> 831
9715 -> 833
9715 -> 835
9715 -> 846
9715 -> 1186
9715 -> 2947
9715 -> 2949
9715 -> 8040
9715 -> 8049
9715 -> 9748
9715 -> 9751
9751 -> 10789
9751 -> 10842
9751 -> 10845
9764 -> 835
9764 -> 8012
9764 -> 9766
9768 -> 833
9768 -> 835
9768 -> 8046
9768 -> 9772
9795 -> 313
9795 -> 989
9795 -> 2404
9795 -> 8040
9795 -> 8955
9795 -> 9803
9795 -> 9808
9795 -> 9811
9795 -> 9813
9795 -> 9816
9795 -> 9818
9795 -> 9820
9795 -> 9822
9795 -> 9824
9795 -> 9826
9795 -> 9828
9795 -> 9830
9795 -> 9833
9803 -> 22161
9803 -> 22713
9808 -> 242
9808 -> 8967
9808 -> 9413
9808 -> 11947
9808 -> 24386
9808 -> 24388
9808 -> 24390
9808 -> 24392
9808 -> 24398
9808 -> 24400
9813 -> 10989
9813 -> 24437
9813 -> 24459
9820 -> 1183
9820 -> 10789
9820 -> 10873
9822 -> 11949
9822 -> 12821
9824 -> 23224
9826 -> 11958
9826 -> 22172
9826 -> 22344
9826 -> 22346
9828 -> 22172
9828 -> 22174
9828 -> 22176
9828 -> 22244
9828 -> 22404
9833 -> 9415
9833 -> 9419
9833 -> 11947
9833 -> 22172
9833 -> 22174
9833 -> 22176
9833 -> 22178
9833 -> 22193
9836 -> 9838
9842 -> 998
9842 -> 8928
9842 -> 9852
9844 -> 989
9844 -> 8049
9844 -> 8967
9846 -> 8049
9846 -> 9133
9846 -> 9848
9876 -> 9880
9880 -> 8165
9880 -> 9887
9887 -> 1183
9887 -> 2628
9887 -> 8076
9903 -> 956
9903 -> 998
9903 -> 9906
9906 -> 411
9906 -> 956
9906 -> 998
9906 -> 1033
9906 -> 1726
9906 -> 9093
9906 -> 44509
9908 -> 9113
9911 -> 989
9911 -> 9906
9913 -> 9906
9941 -> 9943
9943 -> 9948
9948 -> 8165
9948 -> 9955
9955 -> 958
9955 -> 2628
9955 -> 8076
9957 -> 9955
9977 -> 998
9977 -> 9980
9984 -> 1726
9984 -> 9530
9988 -> 2206
9988 -> 9991
9991 -> 439
9991 -> 958
9991 -> 989
9993 -> 9997
9997 -> 6273
9997 -> 9676
10004 -> 9973
10007 -> 9975
10020 -> 9133
10034 -> 10036
10036 -> 10041
10041 -> 8165
10041 -> 10048
10048 -> 2628
10048 -> 8076
10050 -> 10048
10067 -> 956
10070 -> 958
10073 -> 956
10076 -> 8083
10096 -> 956
10096 -> 8012
10110 -> 8165
10110 -> 10114
10114 -> 958
10114 -> 1017
10114 -> 2206
10114 -> 2628
10114 -> 7969
10128 -> 974
10128 -> 10131
10131 -> 407
10131 -> 5146
10131 -> 10131
10131 -> 51031
10133 -> 10136
10136 -> 958
10136 -> 5146
10136 -> 10131
10136 -> 10136
10136 -> 51031
10138 -> 8205
10141 -> 10124
10141 -> 10126
10145 -> 10124
10145 -> 10126
10175 -> 10178
10178 -> 8165
10178 -> 10186
10186 -> 989
10186 -> 2628
10186 -> 7969
10186 -> 8757
10186 -> 9955
10198 -> 10178
10202 -> 10178
10208 -> 998
10208 -> 10211
10211 -> 958
10211 -> 10215
10211 -> 10217
10215 -> 407
10215 -> 958
10215 -> 8188
10217 -> 958
10217 -> 1726
10219 -> 10222
10222 -> 443
10222 -> 958
10222 -> 998
10222 -> 8188
10222 -> 44315
10222 -> 44358
10222 -> 44484
10224 -> 9984
10228 -> 10206
10231 -> 10206
10239 -> 10241
10239 -> 10243
10243 -> 403
10243 -> 407
10243 -> 958
10243 -> 989
10243 -> 998
10243 -> 8012
10243 -> 8787
10243 -> 9133
10243 -> 10243
10243 -> 10247
10247 -> 958
10247 -> 4157
10288 -> 242
10314 -> 10317
10317 -> 8165
10317 -> 10323
10323 -> 958
10323 -> 2628
10323 -> 8076
10323 -> 8188
10325 -> 10323
10338 -> 998
10338 -> 10341
10341 -> 958
10345 -> 8205
10350 -> 10336
10353 -> 10336
10377 -> 8165
10377 -> 10382
10382 -> 1190
10382 -> 1223
10382 -> 3456
10382 -> 6273
10382 -> 8076
10421 -> 989
10421 -> 2206
10432 -> 8165
10432 -> 10436
10436 -> 6273
10436 -> 7969
10460 -> 10462
10460 -> 10464
10476 -> 10478
10478 -> 8165
10478 -> 10483
10483 -> 6273
10483 -> 8076
10485 -> 8165
10485 -> 10483
10490 -> 10483
10508 -> 2206
10525 -> 8012
10547 -> 10551
10551 -> 8165
10551 -> 10558
10558 -> 2628
10558 -> 8076
10560 -> 10558
10577 -> 956
10577 -> 998
10580 -> 958
10580 -> 998
10583 -> 956
10583 -> 998
10586 -> 956
10586 -> 1017
10586 -> 2206
10591 -> 10595
10595 -> 998
10595 -> 8188
10595 -> 10573
10595 -> 10575
10600 -> 10604
10604 -> 998
10604 -> 8188
10604 -> 10573
10604 -> 10575
10604 -> 10591
10639 -> 8165
10639 -> 10643
10643 -> 2628
10643 -> 7969
10659 -> 956
10659 -> 10662
10662 -> 956
10664 -> 958
10664 -> 10662
10667 -> 10662
10670 -> 10674
10674 -> 10655
10674 -> 10657
10674 -> 10662
10679 -> 10683
10683 -> 10655
10683 -> 10657
10683 -> 10662
10691 -> 10655
10695 -> 10698
10695 -> 10700
10698 -> 242
10698 -> 10719
10698 -> 10723
10698 -> 10725
10700 -> 8012
10700 -> 10719
10700 -> 10723
10700 -> 10725
10719 -> 958
10719 -> 10731
10723 -> 998
10723 -> 10737
10725 -> 958
10725 -> 998
10731 -> 1005
10731 -> 1726
10737 -> 1017
10737 -> 1726
10777 -> 10787
10777 -> 10789
10777 -> 10791
10787 -> 6856
10789 -> 831
10789 -> 11301
10805 -> 3272
10819 -> 3272
10840 -> 10789
10840 -> 10842
10840 -> 10845
10845 -> 242
10845 -> 846
10845 -> 1340
10854 -> 10856
10856 -> 11388
10858 -> 10860
10860 -> 6642
10860 -> 11388
10875 -> 10856
10877 -> 10860
10907 -> 10789
10907 -> 10845
10907 -> 10915
10921 -> 10856
10923 -> 10860
10952 -> 2632
10952 -> 10787
10952 -> 10789
10952 -> 10791
10967 -> 10789
10967 -> 10845
10967 -> 10971
10976 -> 10856
10978 -> 10860
10989 -> 10991
10991 -> 10789
10991 -> 10845
10991 -> 10998
11003 -> 10856
11005 -> 10860
11014 -> 10787
11014 -> 10789
11014 -> 10791
11033 -> 11037
11037 -> 3272
11051 -> 8600
11054 -> 8600
11121 -> 11126
11126 -> 2632
11126 -> 10805
11166 -> 10805
11283 -> 4056
11283 -> 10789
11283 -> 10791
11299 -> 242
11301 -> 831
11301 -> 846
11301 -> 11301
11301 -> 11311
11319 -> 242
11370 -> 1351
11374 -> 1384
11377 -> 11385
11388 -> 11395
11395 -> 833
11395 -> 835
11395 -> 4844
11395 -> 4846
11395 -> 4856
11395 -> 11407
11395 -> 11409
11395 -> 11411
11397 -> 11395
11413 -> 11422
11413 -> 11424
11413 -> 11426
11424 -> 833
11424 -> 835
11424 -> 11422
11424 -> 11445
11424 -> 11447
11426 -> 1353
11426 -> 1355
11426 -> 1363
11426 -> 1379
11426 -> 11422
11426 -> 11445
11426 -> 11447
11428 -> 11437
11428 -> 11439
11428 -> 11441
11439 -> 827
11439 -> 831
11439 -> 11437
11439 -> 11451
11441 -> 1340
11441 -> 1351
11441 -> 11437
11441 -> 11451
11447 -> 6630
11447 -> 6632
11737 -> 5348
11743 -> 6619
11743 -> 6630
11743 -> 11746
11743 -> 11751
11743 -> 11753
11743 -> 11755
11743 -> 11757
11743 -> 11759
11771 -> 3875
11828 -> 9803
11828 -> 11832
11832 -> 242
11858 -> 4242
11858 -> 9803
11858 -> 11865
11865 -> 242
11867 -> 9803
11867 -> 11865
11913 -> 242
11913 -> 313
11913 -> 2874
11913 -> 8963
11913 -> 9413
11913 -> 9838
11913 -> 11926
11913 -> 11929
11913 -> 11932
11913 -> 11935
11913 -> 11938
11913 -> 11940
11913 -> 11942
11913 -> 11945
11913 -> 11947
11913 -> 11949
11913 -> 11951
11913 -> 11954
11913 -> 11956
11913 -> 11958
11913 -> 11960
11932 -> 22161
11945 -> 23161
11956 -> 4981
11958 -> 11037
11960 -> 9413
11960 -> 11947
11960 -> 11958
11962 -> 11949
11964 -> 9413
11966 -> 9822
11968 -> 11970
11972 -> 8967
11974 -> 9838
11976 -> 11978
11978 -> 313
11978 -> 8961
11978 -> 8965
11978 -> 11938
11978 -> 11947
11978 -> 11949
11978 -> 11987
11978 -> 11989
11980 -> 11978
11980 -> 11983
11983 -> 1986
11983 -> 23161
11989 -> 11970
11989 -> 12629
11989 -> 12821
11989 -> 15178
11989 -> 15190
11989 -> 23239
11989 -> 23241
11989 -> 23243
11989 -> 26373
11991 -> 11983
11991 -> 11994
11994 -> 313
11994 -> 2874
11994 -> 4282
11994 -> 8961
11994 -> 8963
11994 -> 8965
11994 -> 9413
11994 -> 11940
11994 -> 11949
11994 -> 11987
11994 -> 11989
11994 -> 11998
11994 -> 12000
11994 -> 12005
11994 -> 12007
11994 -> 12009
12000 -> 24025
12005 -> 12744
12007 -> 9415
12007 -> 12819
12036 -> 242
12037 -> 9822
12037 -> 12049
12037 -> 12051
12037 -> 12053
12037 -> 12055
12053 -> 12064
12064 -> 13222
12077 -> 242
12077 -> 12082
12077 -> 12085
12087 -> 12089
12089 -> 242
12092 -> 4778
12096 -> 12098
12098 -> 242
12101 -> 4782
12117 -> 242
12117 -> 846
12125 -> 4502
12133 -> 242
12135 -> 831
12138 -> 833
12138 -> 837
12144 -> 12151
12151 -> 833
12151 -> 12157
12151 -> 12159
12151 -> 12164
12151 -> 12169
12151 -> 12174
12151 -> 12176
12151 -> 12178
12151 -> 12183
12151 -> 12188
12151 -> 12193
12151 -> 12195
12164 -> 242
12169 -> 35503
12174 -> 242
12174 -> 1942
12176 -> 12207
12176 -> 12209
12178 -> 12219
12178 -> 12221
12183 -> 242
12188 -> 242
12188 -> 12308
12193 -> 242
12195 -> 8525
12207 -> 242
12209 -> 242
12212 -> 833
12212 -> 4778
12212 -> 12085
12219 -> 242
12221 -> 242
12224 -> 833
12224 -> 4782
12224 -> 12085
12254 -> 12036
12261 -> 12254
12266 -> 12254
12269 -> 12254
12272 -> 12077
12272 -> 12082
12272 -> 12087
12272 -> 12096
12272 -> 12157
12272 -> 12159
12272 -> 12279
12272 -> 12284
12272 -> 12286
12272 -> 12288
12272 -> 12290
12272 -> 12292
12272 -> 12294
12272 -> 12296
12272 -> 12298
12272 -> 12303
12272 -> 12308
12284 -> 242
12284 -> 837
12284 -> 1183
12284 -> 6204
12284 -> 12082
12284 -> 12321
12284 -> 12323
12286 -> 12876
12288 -> 12906
12288 -> 12908
12292 -> 11983
12292 -> 12912
12294 -> 11983
12294 -> 12918
12303 -> 242
12308 -> 24272
12321 -> 12331
12321 -> 12339
12321 -> 12348
12323 -> 958
12323 -> 989
12323 -> 12085
12323 -> 12157
12323 -> 12352
12323 -> 12354
12339 -> 242
12342 -> 12085
12342 -> 12157
12342 -> 12159
12342 -> 12346
12352 -> 12157
12354 -> 11771
12354 -> 12085
12354 -> 12157
12354 -> 12364
12364 -> 2206
12364 -> 11771
12364 -> 12157
12364 -> 12371
12382 -> 12117
12386 -> 12144
12386 -> 12389
12389 -> 1970
12392 -> 1971
12396 -> 1980
12401 -> 12138
12401 -> 12386
12401 -> 12403
12401 -> 12408
12408 -> 242
12408 -> 1183
12408 -> 6204
12408 -> 12421
12408 -> 12423
12421 -> 12431
12421 -> 12438
12423 -> 958
12423 -> 989
12423 -> 12085
12423 -> 12157
12423 -> 12442
12423 -> 12444
12431 -> 242
12434 -> 12085
12434 -> 12157
12434 -> 12159
12434 -> 12346
12442 -> 12157
12444 -> 11771
12444 -> 12085
12444 -> 12157
12444 -> 12453
12453 -> 2206
12453 -> 11771
12453 -> 12157
12453 -> 12460
12480 -> 12036
12486 -> 12480
12491 -> 12480
12494 -> 12480
12497 -> 12077
12497 -> 12082
12497 -> 12087
12497 -> 12096
12497 -> 12157
12497 -> 12159
12497 -> 12286
12497 -> 12288
12497 -> 12290
12497 -> 12292
12497 -> 12294
12497 -> 12296
12497 -> 12298
12497 -> 12303
12497 -> 12308
12497 -> 12501
12497 -> 12506
12506 -> 242
12506 -> 837
12506 -> 3456
12506 -> 12082
12506 -> 12518
12506 -> 12520
12506 -> 12525
12518 -> 833
12518 -> 835
12518 -> 4069
12518 -> 12085
12518 -> 12331
12520 -> 989
12520 -> 6856
12520 -> 11771
12520 -> 12085
12520 -> 12157
12525 -> 1031
12525 -> 1033
12525 -> 1077
12525 -> 12085
12525 -> 12157
12540 -> 12117
12543 -> 2023
12543 -> 12144
12547 -> 12138
12547 -> 12543
12547 -> 12550
12547 -> 12555
12555 -> 242
12555 -> 3456
12555 -> 12566
12555 -> 12568
12555 -> 12573
12566 -> 12085
12568 -> 989
12568 -> 6856
12568 -> 11771
12568 -> 12085
12568 -> 12157
12573 -> 1031
12573 -> 1033
12573 -> 1077
12573 -> 12085
12573 -> 12157
12606 -> 242
12610 -> 8961
12610 -> 8963
12610 -> 9811
12610 -> 12613
12610 -> 12618
12610 -> 12623
12618 -> 25990
12623 -> 242
12623 -> 791
12623 -> 8963
12623 -> 8967
12623 -> 9413
12623 -> 11947
12623 -> 25968
12625 -> 989
12625 -> 9419
12625 -> 11945
12625 -> 11947
12625 -> 12610
12625 -> 12629
12631 -> 989
12631 -> 12633
12633 -> 989
12633 -> 12636
12633 -> 12638
12633 -> 12640
12636 -> 1986
12636 -> 11949
12636 -> 12821
12636 -> 23161
12640 -> 4295
12640 -> 23229
12650 -> 11947
12650 -> 12606
12657 -> 8961
12657 -> 12613
12660 -> 11987
12660 -> 12638
12662 -> 12049
12675 -> 12678
12678 -> 242
12685 -> 6384
12685 -> 6391
12685 -> 12690
12704 -> 5348
12710 -> 10777
12710 -> 12725
12716 -> 2945
12716 -> 9413
12716 -> 9415
12716 -> 9419
12716 -> 11945
12716 -> 11947
12716 -> 12629
12716 -> 12819
12716 -> 12821
12720 -> 25164
12725 -> 242
12725 -> 1726
12725 -> 8967
12725 -> 9413
12725 -> 11947
12725 -> 11954
12725 -> 11956
12734 -> 10777
12734 -> 12623
12741 -> 10777
12741 -> 12744
12744 -> 242
12744 -> 989
12744 -> 1223
12744 -> 1726
12744 -> 8967
12744 -> 9413
12744 -> 9820
12744 -> 11947
12744 -> 11954
12744 -> 11956
12744 -> 24012
12750 -> 12758
12753 -> 27077
12753 -> 27086
12753 -> 27112
12753 -> 27118
12758 -> 242
12758 -> 788
12758 -> 791
12758 -> 989
12758 -> 1223
12758 -> 1726
12758 -> 8963
12758 -> 8967
12758 -> 9413
12758 -> 11947
12758 -> 18325
12758 -> 23455
12771 -> 12773
12773 -> 242
12781 -> 12773
12786 -> 1986
12786 -> 11989
12786 -> 12049
12786 -> 12613
12786 -> 12638
12786 -> 12760
12786 -> 12792
12786 -> 12794
12786 -> 12796
12786 -> 12798
12786 -> 12800
12786 -> 12802
12786 -> 12804
12786 -> 12806
12786 -> 12811
12800 -> 52291
12811 -> 242
12819 -> 8955
12819 -> 23753
12827 -> 242
12831 -> 12798
12833 -> 12835
12837 -> 12839
12841 -> 12802
12844 -> 12792
12846 -> 12794
12848 -> 12796
12876 -> 12949
12876 -> 12951
12894 -> 12891
12894 -> 12901
12901 -> 13018
12908 -> 13040
12934 -> 242
12949 -> 6630
12949 -> 6632
12949 -> 6856
12949 -> 13095
12951 -> 12985
12951 -> 12989
12953 -> 12876
12961 -> 12951
12961 -> 12953
12971 -> 11983
12971 -> 12908
12971 -> 12961
12985 -> 989
12985 -> 9413
12985 -> 9415
12985 -> 9419
12985 -> 9808
12985 -> 13030
12985 -> 13032
12989 -> 12827
12994 -> 12650
12994 -> 12841
13001 -> 9822
13001 -> 12308
13001 -> 12951
13005 -> 13009
13009 -> 12827
13013 -> 12800
13013 -> 12841
13018 -> 242
13021 -> 9822
13021 -> 12049
13021 -> 12638
13021 -> 12804
13021 -> 13026
13026 -> 2945
13030 -> 22165
13032 -> 989
13032 -> 8961
13032 -> 10989
13032 -> 24418
13032 -> 24427
13032 -> 24432
13040 -> 242
13055 -> 2945
13055 -> 9822
13055 -> 13061
13055 -> 13063
13061 -> 2704
13061 -> 11983
13063 -> 2738
13063 -> 13069
13069 -> 313
13069 -> 1986
13069 -> 3886
13069 -> 22161
13069 -> 22713
13095 -> 242
13103 -> 11949
13105 -> 11949
13107 -> 11970
13109 -> 2947
13109 -> 2949
13109 -> 11970
13109 -> 13112
13109 -> 13117
13109 -> 13119
13109 -> 13124
13117 -> 11949
13117 -> 12606
13124 -> 4282
13124 -> 11949
13124 -> 12606
13161 -> 9822
13161 -> 13163
13167 -> 4282
13167 -> 9822
13167 -> 13169
13222 -> 242
13235 -> 13222
13238 -> 13222
13241 -> 13222
13244 -> 13222
13247 -> 13222
13260 -> 791
13260 -> 989
13260 -> 1223
13260 -> 1225
13260 -> 1726
13260 -> 4242
13260 -> 9822
13260 -> 10777
13260 -> 12049
13260 -> 12613
13260 -> 12638
13260 -> 12792
13260 -> 12794
13260 -> 12796
13260 -> 12798
13260 -> 12800
13260 -> 12802
13260 -> 12804
13260 -> 12806
13260 -> 12811
13260 -> 12835
13260 -> 12839
13260 -> 13201
13260 -> 13267
13260 -> 13277
13260 -> 13279
13267 -> 439
13267 -> 443
13267 -> 989
13267 -> 8959
13267 -> 8967
13267 -> 10777
13267 -> 13294
13279 -> 989
13279 -> 1223
13279 -> 1225
13279 -> 1726
13279 -> 13315
13294 -> 242
13315 -> 972
13315 -> 989
13315 -> 1726
13355 -> 13193
13359 -> 13196
13363 -> 12690
13365 -> 12613
13367 -> 13201
13369 -> 12638
13371 -> 12049
13391 -> 12036
13397 -> 13391
13403 -> 13391
13406 -> 13391
13409 -> 5575
13409 -> 12077
13409 -> 12082
13409 -> 12087
13409 -> 12096
13409 -> 12157
13409 -> 12159
13409 -> 12286
13409 -> 12288
13409 -> 12290
13409 -> 12292
13409 -> 12294
13409 -> 12296
13409 -> 12298
13409 -> 12303
13409 -> 12308
13419 -> 4879
13419 -> 12151
13434 -> 12036
13442 -> 13434
13449 -> 13434
13452 -> 13434
13455 -> 12077
13455 -> 12082
13455 -> 12087
13455 -> 12096
13455 -> 12157
13455 -> 12159
13455 -> 12286
13455 -> 12288
13455 -> 12290
13455 -> 12292
13455 -> 12294
13455 -> 12296
13455 -> 12298
13455 -> 12303
13455 -> 12308
13479 -> 242
13484 -> 13488
13488 -> 831
13488 -> 12133
13495 -> 831
13498 -> 12331
13500 -> 12142
13523 -> 13525
13523 -> 13527
13525 -> 13531
13525 -> 13533
13527 -> 6642
13527 -> 13543
13531 -> 13538
13543 -> 13547
13543 -> 13549
13543 -> 13551
13557 -> 6204
13561 -> 6204
13565 -> 6667
13565 -> 6680
13565 -> 13569
13569 -> 4866
13569 -> 6667
13569 -> 6680
13569 -> 7070
13569 -> 13574
13576 -> 11082
13576 -> 13581
13583 -> 13581
13583 -> 13588
13633 -> 13636
13636 -> 3875
13636 -> 13643
13636 -> 13645
13636 -> 13649
13636 -> 13655
13636 -> 13657
13636 -> 13659
13636 -> 13661
13645 -> 6204
13663 -> 398
13663 -> 439
13663 -> 443
13663 -> 3272
13663 -> 13627
13663 -> 13643
13663 -> 13668
13663 -> 13670
13676 -> 407
13676 -> 1726
13676 -> 13627
13676 -> 13643
13676 -> 13683
13676 -> 13685
13676 -> 13687
13685 -> 10777
13687 -> 10777
13689 -> 13676
13698 -> 13627
13698 -> 13636
13701 -> 13627
13701 -> 13636
13705 -> 5103
13709 -> 13649
13709 -> 13711
13711 -> 13636
13711 -> 13661
13713 -> 2874
13713 -> 13633
13713 -> 13636
13713 -> 13649
13713 -> 13670
13713 -> 13717
13719 -> 13627
13719 -> 13713
13723 -> 13627
13723 -> 13713
13731 -> 13733
13731 -> 13735
13737 -> 13735
13737 -> 13740
13749 -> 6204
13749 -> 9751
13749 -> 13636
13749 -> 13649
13749 -> 13670
13755 -> 13627
13755 -> 13749
13758 -> 5165
13758 -> 6204
13758 -> 9751
13758 -> 13649
13758 -> 13761
13761 -> 13636
13770 -> 13729
13770 -> 13773
13773 -> 13636
13773 -> 13655
13773 -> 13657
13773 -> 13659
13775 -> 443
13775 -> 788
13775 -> 13766
13775 -> 13768
13775 -> 13780
13775 -> 13782
13782 -> 51917
13788 -> 13790
13792 -> 13794
13798 -> 13790
13800 -> 13794
13802 -> 13804
13806 -> 13659
13806 -> 13790
13808 -> 13659
13808 -> 13794
13810 -> 1986
13810 -> 13636
13810 -> 13649
13810 -> 13670
13816 -> 13627
13816 -> 13649
13816 -> 13810
13822 -> 5154
13822 -> 13810
13829 -> 13636
13829 -> 13649
13829 -> 13832
13832 -> 4157
13832 -> 13670
13834 -> 13636
13834 -> 13649
13834 -> 13661
13834 -> 13837
13837 -> 4157
13837 -> 13657
13837 -> 13670
13837 -> 13729
13837 -> 13768
13837 -> 50759
13839 -> 956
13839 -> 13764
13844 -> 1986
13844 -> 13633
13844 -> 13636
13844 -> 13649
13844 -> 13661
13844 -> 13670
13844 -> 13847
13852 -> 13627
13852 -> 13844
13857 -> 13729
13857 -> 13859
13861 -> 9445
13872 -> 242
13889 -> 242
13900 -> 13523
13903 -> 13525
13906 -> 13531
13910 -> 6571
13912 -> 11411
13912 -> 13915
13915 -> 6642
13915 -> 13920
13920 -> 13543
13920 -> 13903
13925 -> 6642
13925 -> 13927
13927 -> 13543
13927 -> 13934
13934 -> 13533
13934 -> 14262
13936 -> 6597
13936 -> 6599
13936 -> 6605
13936 -> 13553
13936 -> 13555
13936 -> 13581
13936 -> 13786
13936 -> 13796
13945 -> 2968
13945 -> 3272
13945 -> 13633
13945 -> 13663
13945 -> 13936
13953 -> 6663
13953 -> 6667
13953 -> 6669
13953 -> 6671
13953 -> 13956
13956 -> 6667
13956 -> 6680
13956 -> 6687
13956 -> 13565
13956 -> 13569
13956 -> 13633
13956 -> 13636
13956 -> 13962
13962 -> 4864
13962 -> 4866
13962 -> 6667
13962 -> 6680
13962 -> 6687
13962 -> 7070
13962 -> 13967
13962 -> 13969
14020 -> 14023
14023 -> 14030
14030 -> 407
14030 -> 1726
14030 -> 13643
14030 -> 13683
14030 -> 13685
14030 -> 13687
14032 -> 14030
14043 -> 14046
14046 -> 9751
14046 -> 13643
14046 -> 14053
14053 -> 6865
14053 -> 9751
14053 -> 50689
14055 -> 14057
14057 -> 9751
14057 -> 14046
14067 -> 14062
14076 -> 14062
14078 -> 14062
14081 -> 14046
14083 -> 14086
14086 -> 6204
14086 -> 9751
14086 -> 13627
14086 -> 13659
14086 -> 13670
14086 -> 13717
14086 -> 13766
14086 -> 13790
14086 -> 13847
14086 -> 14046
14086 -> 14053
14086 -> 14057
14086 -> 14100
14086 -> 14102
14086 -> 14104
14086 -> 14106
14088 -> 14046
14091 -> 14086
14094 -> 14046
14100 -> 10840
14102 -> 9751
14104 -> 9751
14109 -> 6204
14109 -> 14053
14109 -> 14100
14109 -> 14113
14113 -> 9751
14113 -> 14046
14113 -> 14053
14115 -> 14043
14115 -> 14109
14120 -> 6204
14120 -> 9751
14120 -> 14081
14120 -> 14109
14125 -> 14043
14125 -> 14120
14129 -> 14062
14134 -> 4854
14136 -> 14141
14161 -> 242
14179 -> 242
14188 -> 13523
14190 -> 13525
14193 -> 13531
14197 -> 6571
14199 -> 11411
14199 -> 14202
14202 -> 6642
14202 -> 14207
14207 -> 13543
14207 -> 14190
14212 -> 6642
14212 -> 14214
14214 -> 13543
14214 -> 14221
14221 -> 13533
14221 -> 14301
14223 -> 6642
14223 -> 13543
14225 -> 6597
14225 -> 6599
14225 -> 6605
14225 -> 13553
14225 -> 13555
14225 -> 14070
14225 -> 14072
14225 -> 14230
14234 -> 2968
14234 -> 3272
14234 -> 14020
14234 -> 14225
14241 -> 6663
14241 -> 6667
14241 -> 6669
14241 -> 6671
14241 -> 14244
14244 -> 6667
14244 -> 6680
14244 -> 6687
14244 -> 13553
14244 -> 13555
14244 -> 13565
14244 -> 13569
14244 -> 14046
14244 -> 14249
14244 -> 14251
14258 -> 13527
14258 -> 13934
14262 -> 13906
14262 -> 14269
14269 -> 6204
14271 -> 6597
14271 -> 6599
14271 -> 6605
14271 -> 13553
14271 -> 13555
14271 -> 13581
14271 -> 13657
14271 -> 13659
14271 -> 13661
14271 -> 13729
14271 -> 13786
14271 -> 13796
14271 -> 14276
14271 -> 14278
14271 -> 14280
14284 -> 6667
14284 -> 6680
14284 -> 6687
14284 -> 13565
14284 -> 13569
14284 -> 13633
14284 -> 13636
14284 -> 13657
14284 -> 13661
14284 -> 13670
14284 -> 13717
14284 -> 13956
14284 -> 13962
14296 -> 14221
14296 -> 14223
14301 -> 14193
14301 -> 14308
14308 -> 6204
14310 -> 6597
14310 -> 6599
14310 -> 6605
14310 -> 6865
14310 -> 13553
14310 -> 13555
14310 -> 14070
14310 -> 14072
14310 -> 14230
14310 -> 14280
14310 -> 14315
14319 -> 6667
14319 -> 6680
14319 -> 6687
14319 -> 6865
14319 -> 13553
14319 -> 13555
14319 -> 13565
14319 -> 13569
14319 -> 14046
14319 -> 14244
14319 -> 14249
14319 -> 14251
14319 -> 14315
14319 -> 14323
14323 -> 9751
14366 -> 14372
14372 -> 12331
14372 -> 14384
14372 -> 14386
14372 -> 14389
14374 -> 14366
14374 -> 14379
14384 -> 242
14395 -> 833
14395 -> 14393
14406 -> 14393
14406 -> 14408
14406 -> 14410
14410 -> 14474
14417 -> 14366
14423 -> 14374
14427 -> 14430
14430 -> 3272
14433 -> 827
14433 -> 831
14433 -> 10464
14433 -> 14439
14441 -> 833
14441 -> 835
14441 -> 14393
14441 -> 14395
14441 -> 14447
14454 -> 242
14455 -> 835
14455 -> 3272
14455 -> 4069
14455 -> 10464
14455 -> 12331
14455 -> 14393
14455 -> 14395
14455 -> 14398
14455 -> 14439
14476 -> 12346
14476 -> 14410
14482 -> 14479
14489 -> 14410
14489 -> 14482
14499 -> 242
14509 -> 14408
14509 -> 14505
14509 -> 14507
14527 -> 14529
14529 -> 242
14536 -> 3272
14536 -> 14544
14544 -> 313
14544 -> 827
14544 -> 831
14544 -> 835
14544 -> 4069
14544 -> 10464
14544 -> 12142
14544 -> 12331
14544 -> 14393
14544 -> 14395
14544 -> 14398
14544 -> 14439
14544 -> 14499
14544 -> 14559
14544 -> 14563
14544 -> 14565
14544 -> 14567
14544 -> 14569
14579 -> 14587
14579 -> 14589
14587 -> 242
14587 -> 827
14587 -> 833
14587 -> 1986
14587 -> 4157
14587 -> 6273
14587 -> 14774
14589 -> 4153
14591 -> 14589
14591 -> 14595
14595 -> 14587
14595 -> 14762
14597 -> 403
14597 -> 833
14597 -> 835
14597 -> 14591
14597 -> 14602
14597 -> 14604
14597 -> 14606
14597 -> 14608
14597 -> 14610
14610 -> 831
14610 -> 833
14610 -> 6273
14628 -> 14631
14631 -> 242
14631 -> 1183
14631 -> 14642
14644 -> 14648
14656 -> 242
14656 -> 1183
14689 -> 242
14689 -> 4153
14708 -> 14713
14708 -> 14715
14713 -> 8012
14713 -> 14439
14713 -> 14499
14713 -> 14505
14713 -> 14507
14713 -> 14515
14713 -> 14719
14713 -> 14721
14713 -> 14723
14713 -> 14725
14713 -> 14728
14713 -> 14730
14713 -> 14732
14713 -> 14734
14713 -> 14736
14713 -> 14738
14713 -> 14740
14776 -> 833
14776 -> 1986
14776 -> 6273
14776 -> 12142
14776 -> 14774
14779 -> 833
14779 -> 6273
14779 -> 12082
14779 -> 14774
14785 -> 14389
14790 -> 835
14790 -> 14476
14794 -> 833
14794 -> 1183
14794 -> 4157
14797 -> 833
14799 -> 14801
14803 -> 14785
14803 -> 14811
14821 -> 242
14821 -> 1942
14827 -> 3272
14827 -> 14831
14831 -> 271
14831 -> 313
14831 -> 827
14831 -> 831
14831 -> 835
14831 -> 10464
14831 -> 14393
14831 -> 14395
14831 -> 14398
14831 -> 14439
14831 -> 14499
14841 -> 242
14842 -> 3272
14842 -> 14846
14846 -> 313
14846 -> 827
14846 -> 831
14846 -> 835
14846 -> 10464
14846 -> 14393
14846 -> 14395
14846 -> 14398
14846 -> 14439
14846 -> 14499
14856 -> 242
14857 -> 3272
14857 -> 14861
14861 -> 313
14861 -> 788
14861 -> 791
14861 -> 827
14861 -> 831
14861 -> 835
14861 -> 10464
14861 -> 14393
14861 -> 14395
14861 -> 14398
14861 -> 14439
14861 -> 14499
14861 -> 14559
14861 -> 14565
14861 -> 14567
14861 -> 14774
14861 -> 14875
14861 -> 14877
14861 -> 14879
14918 -> 12331
14918 -> 14366
14918 -> 14389
14918 -> 14393
14918 -> 14395
14918 -> 14608
14918 -> 14923
14918 -> 14925
14923 -> 313
14923 -> 827
14923 -> 831
14923 -> 833
14923 -> 835
14923 -> 4069
14923 -> 12331
14923 -> 14563
14925 -> 827
14925 -> 831
14927 -> 14379
14927 -> 14918
14931 -> 14393
14931 -> 14923
14941 -> 835
14941 -> 14395
14949 -> 14430
14952 -> 827
14952 -> 831
14952 -> 8012
14952 -> 14439
14955 -> 827
14955 -> 831
14958 -> 12331
14958 -> 12348
14958 -> 14968
14968 -> 313
14968 -> 833
14968 -> 835
14968 -> 3272
14968 -> 4069
14968 -> 12331
14968 -> 14379
14968 -> 14563
14977 -> 14408
14977 -> 14410
14985 -> 242
14986 -> 833
14986 -> 3272
14986 -> 4069
14986 -> 6632
14986 -> 8012
14986 -> 10464
14986 -> 12331
14986 -> 14393
14986 -> 14398
14986 -> 14439
14986 -> 14990
15002 -> 242
15006 -> 14499
15006 -> 15009
15009 -> 833
15009 -> 835
15009 -> 3272
15009 -> 10464
15009 -> 12331
15009 -> 14439
15009 -> 14610
15009 -> 14785
15009 -> 14790
15009 -> 14797
15009 -> 15015
15009 -> 15021
15015 -> 14595
15033 -> 242
15033 -> 4153
15039 -> 3272
15039 -> 15043
15043 -> 313
15043 -> 827
15043 -> 831
15043 -> 835
15043 -> 8012
15043 -> 14393
15043 -> 14395
15043 -> 14398
15043 -> 14439
15043 -> 14499
15107 -> 242
15123 -> 15126
15128 -> 15126
15169 -> 242
15175 -> 846
15175 -> 15137
15175 -> 15178
15175 -> 15180
15175 -> 15186
15186 -> 827
15186 -> 831
15186 -> 833
15186 -> 3871
15186 -> 5575
15186 -> 12142
15186 -> 14875
15186 -> 15117
15186 -> 15121
15186 -> 15128
15186 -> 15180
15186 -> 15190
15186 -> 15192
15186 -> 15194
15186 -> 15196
15186 -> 15198
15196 -> 831
15196 -> 833
15196 -> 835
15196 -> 4069
15196 -> 15021
15196 -> 15115
15196 -> 15121
15196 -> 15128
15196 -> 15137
15196 -> 15192
15196 -> 15194
15196 -> 15196
15198 -> 15115
15198 -> 15126
15229 -> 242
15239 -> 15244
15244 -> 10991
15249 -> 242
15267 -> 242
15267 -> 3456
15275 -> 15273
15280 -> 15278
15285 -> 15283
15290 -> 15288
15317 -> 15320
15320 -> 242
15320 -> 15377
15322 -> 15327
15322 -> 15329
15327 -> 242
15329 -> 439
15329 -> 15377
15329 -> 15381
15329 -> 15386
15329 -> 15391
15329 -> 15393
15331 -> 15327
15341 -> 15354
15354 -> 242
15354 -> 12082
15354 -> 15377
15354 -> 16858
15354 -> 18614
15354 -> 19230
15354 -> 19235
15354 -> 19244
15354 -> 19246
15354 -> 19251
15356 -> 15317
15360 -> 15322
15365 -> 15331
15369 -> 15341
15377 -> 242
15381 -> 15602
15386 -> 242
15391 -> 242
15393 -> 242
15397 -> 15331
15397 -> 15402
15404 -> 439
15404 -> 15283
15404 -> 15288
15404 -> 15391
15404 -> 15406
15404 -> 15408
15404 -> 15410
15404 -> 15417
15404 -> 15419
15404 -> 15426
15404 -> 15428
15404 -> 15430
15408 -> 15406
15408 -> 15419
15408 -> 16858
15408 -> 19370
15426 -> 831
15426 -> 846
15426 -> 15267
15432 -> 15406
15432 -> 15408
15432 -> 15419
15432 -> 15428
15432 -> 15430
15432 -> 15434
15432 -> 15436
15432 -> 15438
15432 -> 15440
15442 -> 15406
15442 -> 15408
15442 -> 15419
15442 -> 15428
15442 -> 15430
15442 -> 15434
15442 -> 15436
15442 -> 15438
15442 -> 15440
15444 -> 15434
15444 -> 15453
15444 -> 15455
15453 -> 242
15455 -> 439
15455 -> 15391
15467 -> 15406
15467 -> 15470
15467 -> 15472
15470 -> 15406
15470 -> 15472
15470 -> 15476
15470 -> 15499
15470 -> 15501
15472 -> 15406
15472 -> 15493
15472 -> 15499
15474 -> 15406
15474 -> 15408
15474 -> 15467
15474 -> 15476
15474 -> 15479
15474 -> 15481
15474 -> 15483
15479 -> 15406
15479 -> 15476
15479 -> 15487
15479 -> 15493
15479 -> 15495
15481 -> 15419
15481 -> 15472
15481 -> 15487
15483 -> 15419
15483 -> 15472
15483 -> 15487
15487 -> 15406
15487 -> 15493
15487 -> 15499
15493 -> 15438
15493 -> 15440
15493 -> 15513
15495 -> 15476
15495 -> 15493
15499 -> 15438
15499 -> 15440
15499 -> 15513
15501 -> 15476
15501 -> 15499
15513 -> 15406
15513 -> 15430
15513 -> 15436
15519 -> 15406
15519 -> 15428
15519 -> 15430
15519 -> 15434
15522 -> 15530
15530 -> 242
15530 -> 15408
15530 -> 15419
15530 -> 15467
15530 -> 15474
15530 -> 15483
15530 -> 15519
15530 -> 15542
15542 -> 15479
15542 -> 15481
15542 -> 15483
15542 -> 15519
15547 -> 15542
15547 -> 15552
15554 -> 10998
15578 -> 15386
15585 -> 15594
15594 -> 15434
15602 -> 15634
15604 -> 15317
15634 -> 242
15640 -> 15602
15646 -> 15428
15646 -> 15655
15646 -> 15657
15646 -> 15659
15659 -> 242
15680 -> 242
15684 -> 242
15690 -> 242
15698 -> 242
15709 -> 15231
15715 -> 1726
15717 -> 1726
15721 -> 1726
15723 -> 15391
15723 -> 15434
15726 -> 15391
15726 -> 15434
15730 -> 15391
15733 -> 15391
15733 -> 15434
15737 -> 9751
15737 -> 15717
15737 -> 15741
15741 -> 15391
15743 -> 15391
15747 -> 443
15749 -> 439
15749 -> 15747
15752 -> 1726
15755 -> 15758
15758 -> 1726
15762 -> 1726
15771 -> 15755
15776 -> 15762
15781 -> 15765
15786 -> 15747
15789 -> 1644
15789 -> 15747
15791 -> 15793
15791 -> 15795
15793 -> 6576
15793 -> 6583
15793 -> 6588
15793 -> 21601
15795 -> 6642
15795 -> 15832
15797 -> 15793
15797 -> 15803
15803 -> 15812
15810 -> 6537
15810 -> 15812
15812 -> 242
15812 -> 21581
15822 -> 6537
15822 -> 15812
15826 -> 15812
15832 -> 6646
15832 -> 15803
15836 -> 15434
15836 -> 15841
15841 -> 6597
15841 -> 6599
15841 -> 6601
15841 -> 6605
15843 -> 6663
15843 -> 6667
15843 -> 6669
15843 -> 6671
15843 -> 15846
15846 -> 15391
15846 -> 15851
15851 -> 2968
15851 -> 6667
15851 -> 6676
15851 -> 6678
15851 -> 6680
15851 -> 6689
15881 -> 6856
15890 -> 242
15900 -> 15905
15910 -> 242
15930 -> 242
15930 -> 3869
15930 -> 3892
15930 -> 15937
15930 -> 15939
15945 -> 15955
15955 -> 242
15955 -> 3272
15955 -> 3869
15955 -> 5875
15955 -> 5890
15955 -> 15966
15955 -> 15969
15955 -> 15971
15955 -> 15973
15955 -> 15975
15955 -> 15977
15955 -> 15979
15966 -> 3869
15966 -> 3892
15966 -> 15939
15981 -> 242
15981 -> 3869
15981 -> 3879
15981 -> 3892
15981 -> 5875
15981 -> 15990
15981 -> 15993
15981 -> 15996
15990 -> 3272
15993 -> 1726
15993 -> 3863
15993 -> 3869
15993 -> 3879
15993 -> 3892
15993 -> 3898
15993 -> 5875
15993 -> 15969
15993 -> 15990
15996 -> 3863
15996 -> 3869
15996 -> 3879
15996 -> 3890
15996 -> 3892
15996 -> 5871
15996 -> 5875
15996 -> 15937
15996 -> 15939
15996 -> 15969
15998 -> 242
15998 -> 3863
15998 -> 3869
15998 -> 3892
15998 -> 3898
15998 -> 15975
15998 -> 15977
15998 -> 15979
15998 -> 15996
15998 -> 16004
15998 -> 16006
16004 -> 5875
16004 -> 9751
16004 -> 15937
16004 -> 15966
16004 -> 16466
16006 -> 16523
16008 -> 242
16008 -> 627
16008 -> 3863
16008 -> 3869
16008 -> 5871
16008 -> 5875
16008 -> 5880
16008 -> 5890
16008 -> 9751
16008 -> 15937
16008 -> 15939
16008 -> 15966
16008 -> 15969
16008 -> 15975
16008 -> 15977
16008 -> 15979
16008 -> 16006
16008 -> 16013
16008 -> 16015
16013 -> 16517
16015 -> 627
16015 -> 1726
16015 -> 3863
16015 -> 3869
16015 -> 3892
16015 -> 5875
16015 -> 5880
16015 -> 9751
16015 -> 15937
16015 -> 15939
16015 -> 15966
16015 -> 16068
16017 -> 16026
16026 -> 242
16026 -> 1506
16026 -> 3863
16026 -> 15955
16026 -> 16039
16026 -> 16041
16026 -> 16043
16026 -> 16045
16026 -> 16047
16039 -> 242
16039 -> 15969
16039 -> 16155
16039 -> 16157
16039 -> 16159
16047 -> 16209
16051 -> 5880
16051 -> 15930
16062 -> 16064
16064 -> 627
16064 -> 1506
16064 -> 3863
16064 -> 3869
16064 -> 3892
16064 -> 5875
16064 -> 5880
16064 -> 15937
16064 -> 15939
16064 -> 15969
16064 -> 16068
16068 -> 242
16070 -> 3865
16070 -> 3869
16070 -> 3892
16070 -> 5875
16070 -> 5880
16070 -> 15939
16070 -> 16072
16070 -> 16074
16076 -> 16081
16081 -> 5875
16081 -> 5880
16081 -> 15881
16081 -> 15975
16081 -> 15977
16081 -> 15979
16081 -> 16072
16081 -> 16074
16081 -> 16088
16081 -> 16090
16081 -> 16092
16081 -> 16095
16081 -> 16097
16081 -> 16119
16081 -> 16123
16088 -> 3865
16088 -> 3869
16088 -> 3879
16088 -> 3892
16088 -> 15975
16088 -> 15977
16088 -> 15979
16088 -> 16068
16090 -> 627
16090 -> 3863
16090 -> 5871
16090 -> 16068
16092 -> 3865
16092 -> 3869
16092 -> 3879
16092 -> 3892
16092 -> 5880
16092 -> 15975
16092 -> 15977
16092 -> 15979
16092 -> 16068
16095 -> 3863
16095 -> 3890
16119 -> 3865
16119 -> 3869
16119 -> 3879
16119 -> 3892
16119 -> 15969
16119 -> 16068
16119 -> 16139
16119 -> 16155
16119 -> 16157
16119 -> 16159
16123 -> 3865
16123 -> 3869
16123 -> 3879
16123 -> 3892
16123 -> 5880
16123 -> 15969
16123 -> 16068
16123 -> 16139
16123 -> 16155
16123 -> 16157
16123 -> 16159
16137 -> 3863
16137 -> 3865
16137 -> 3869
16137 -> 3879
16137 -> 3892
16137 -> 3898
16137 -> 16139
16141 -> 5875
16141 -> 16146
16146 -> 242
16146 -> 989
16161 -> 3865
16161 -> 3869
16161 -> 3879
16161 -> 3892
16165 -> 3865
16165 -> 3869
16165 -> 3879
16165 -> 3892
16165 -> 15969
16165 -> 16139
16169 -> 3865
16169 -> 3879
16169 -> 3892
16169 -> 15969
16169 -> 15975
16169 -> 15977
16169 -> 15979
16169 -> 16068
16169 -> 16176
16169 -> 16178
16169 -> 16180
16169 -> 16182
16188 -> 3865
16188 -> 3869
16188 -> 3879
16188 -> 3892
16188 -> 5880
16192 -> 3865
16192 -> 3869
16192 -> 3879
16192 -> 3892
16192 -> 5880
16192 -> 15969
16192 -> 16139
16196 -> 3865
16196 -> 3879
16196 -> 3892
16196 -> 15969
16196 -> 15975
16196 -> 15977
16196 -> 15979
16196 -> 16068
16196 -> 16176
16196 -> 16178
16196 -> 16180
16196 -> 16182
16203 -> 16047
16209 -> 3869
16209 -> 3879
16209 -> 3892
16209 -> 15930
16213 -> 16216
16216 -> 16221
16216 -> 16223
16221 -> 3879
16221 -> 3892
16221 -> 15930
16221 -> 15969
16221 -> 16176
16221 -> 16178
16221 -> 16180
16221 -> 16182
16223 -> 3879
16223 -> 3892
16223 -> 15930
16223 -> 15969
16223 -> 16176
16223 -> 16178
16223 -> 16180
16223 -> 16182
16233 -> 16236
16236 -> 16051
16236 -> 16209
16236 -> 16241
16241 -> 3869
16241 -> 3879
16241 -> 3892
16241 -> 5880
16241 -> 15930
16246 -> 16249
16249 -> 16051
16249 -> 16223
16249 -> 16254
16254 -> 3879
16254 -> 3892
16254 -> 5880
16254 -> 15930
16254 -> 15969
16254 -> 16176
16254 -> 16178
16254 -> 16180
16254 -> 16182
16258 -> 3879
16258 -> 3892
16258 -> 5880
16258 -> 15930
16258 -> 15969
16258 -> 16176
16258 -> 16178
16258 -> 16180
16258 -> 16182
16269 -> 16070
16269 -> 16241
16296 -> 242
16296 -> 313
16300 -> 242
16300 -> 3869
16300 -> 15971
16300 -> 15973
16304 -> 242
16304 -> 3869
16311 -> 242
16311 -> 15969
16315 -> 242
16315 -> 15975
16315 -> 15977
16315 -> 15979
16315 -> 16321
16323 -> 242
16323 -> 16155
16323 -> 16157
16323 -> 16159
16323 -> 16329
16331 -> 242
16331 -> 15975
16331 -> 15977
16331 -> 15979
16331 -> 16329
16337 -> 242
16337 -> 15975
16337 -> 15977
16337 -> 15979
16337 -> 16345
16347 -> 242
16347 -> 16155
16347 -> 16157
16347 -> 16159
16347 -> 16355
16357 -> 242
16357 -> 15975
16357 -> 15977
16357 -> 15979
16357 -> 16355
16365 -> 242
16365 -> 15975
16365 -> 15977
16365 -> 15979
16365 -> 16375
16377 -> 242
16377 -> 16155
16377 -> 16157
16377 -> 16159
16377 -> 16387
16389 -> 242
16389 -> 15975
16389 -> 15977
16389 -> 15979
16389 -> 16387
16402 -> 3863
16402 -> 3890
16404 -> 5875
16404 -> 16406
16406 -> 242
16408 -> 3892
16408 -> 5877
16411 -> 3869
16411 -> 3892
16413 -> 5875
16413 -> 5877
16415 -> 16097
16417 -> 5890
16417 -> 15966
16417 -> 16072
16419 -> 3892
16419 -> 16068
16422 -> 5871
16422 -> 16068
16422 -> 16155
16422 -> 16157
16422 -> 16159
16425 -> 1506
16425 -> 3863
16425 -> 16315
16430 -> 3892
16430 -> 15969
16430 -> 16068
16430 -> 16155
16430 -> 16157
16430 -> 16159
16434 -> 16331
16439 -> 5871
16439 -> 16068
16439 -> 16155
16439 -> 16157
16439 -> 16159
16443 -> 3879
16443 -> 16068
16446 -> 16068
16446 -> 16139
16446 -> 16155
16446 -> 16157
16446 -> 16159
16449 -> 1506
16449 -> 3863
16449 -> 5880
16449 -> 16315
16453 -> 3879
16453 -> 15969
16453 -> 16068
16453 -> 16155
16453 -> 16157
16453 -> 16159
16457 -> 16331
16461 -> 16068
16461 -> 16139
16461 -> 16155
16461 -> 16157
16461 -> 16159
16466 -> 3869
16466 -> 16068
16470 -> 3869
16470 -> 5875
16470 -> 5880
16470 -> 5890
16470 -> 9751
16470 -> 15966
16470 -> 16006
16470 -> 16013
16470 -> 16072
16470 -> 16074
16470 -> 16139
16477 -> 5875
16477 -> 5880
16477 -> 5890
16477 -> 9751
16477 -> 15966
16477 -> 15969
16477 -> 16072
16477 -> 16074
16477 -> 16139
16477 -> 16484
16477 -> 16486
16477 -> 16488
16484 -> 989
16486 -> 16520
16488 -> 16526
16490 -> 16477
16498 -> 5880
16498 -> 16068
16502 -> 15969
16502 -> 16068
16505 -> 443
16505 -> 5875
16507 -> 439
16507 -> 5875
16507 -> 16505
16510 -> 3873
16510 -> 16505
16513 -> 16505
16513 -> 16515
16517 -> 16345
16520 -> 16155
16520 -> 16157
16520 -> 16159
16520 -> 16355
16523 -> 5880
16523 -> 16068
16523 -> 16321
16526 -> 16068
16526 -> 16155
16526 -> 16157
16526 -> 16159
16526 -> 16329
16529 -> 3879
16529 -> 3892
16529 -> 5877
16532 -> 3892
16532 -> 5877
16532 -> 16139
16532 -> 16155
16532 -> 16157
16532 -> 16159
16535 -> 3869
16535 -> 3879
16535 -> 3892
16535 -> 15939
16538 -> 3869
16538 -> 3892
16538 -> 15939
16538 -> 16139
16538 -> 16155
16538 -> 16157
16538 -> 16159
16541 -> 3879
16541 -> 5875
16541 -> 5877
16544 -> 5875
16544 -> 5877
16544 -> 16139
16544 -> 16155
16544 -> 16157
16544 -> 16159
16547 -> 3869
16547 -> 3879
16547 -> 3892
16550 -> 3869
16550 -> 3892
16550 -> 16139
16550 -> 16155
16550 -> 16157
16550 -> 16159
16567 -> 16520
16588 -> 16068
16588 -> 16155
16588 -> 16157
16588 -> 16159
16588 -> 16329
16595 -> 16529
16603 -> 16532
16611 -> 16532
16618 -> 16535
16626 -> 16538
16634 -> 16538
16641 -> 16541
16649 -> 16544
16657 -> 16544
16664 -> 16547
16672 -> 16550
16680 -> 16550
16687 -> 15793
16687 -> 16404
16687 -> 16689
16689 -> 6642
16689 -> 18017
16692 -> 15793
16692 -> 16404
16692 -> 16698
16698 -> 15812
16714 -> 242
16714 -> 16719
16719 -> 989
16719 -> 3272
16719 -> 16738
16719 -> 16740
16719 -> 16742
16719 -> 16744
16719 -> 16746
16722 -> 242
16729 -> 16714
16738 -> 16406
16742 -> 242
16744 -> 242
16744 -> 642
16746 -> 658
16750 -> 16722
16750 -> 16753
16753 -> 16406
16759 -> 16738
16759 -> 16746
16762 -> 16744
16765 -> 16771
16771 -> 15391
16771 -> 16759
16776 -> 16779
16779 -> 15434
16779 -> 16762
16787 -> 16790
16787 -> 16792
16790 -> 1052
16790 -> 1059
16790 -> 9751
16790 -> 16484
16790 -> 16746
16790 -> 16803
16792 -> 16796
16796 -> 16484
16796 -> 16738
16796 -> 16744
16796 -> 16746
16800 -> 1726
16800 -> 16484
16800 -> 16738
16800 -> 16746
16800 -> 16796
16800 -> 16803
16803 -> 17031
16805 -> 16738
16805 -> 16744
16805 -> 16746
16808 -> 16792
16808 -> 16805
16812 -> 15317
16812 -> 16817
16817 -> 242
16835 -> 242
16835 -> 16803
16842 -> 315
16842 -> 15402
16842 -> 15408
16842 -> 16856
16842 -> 16858
16842 -> 16863
16842 -> 16865
16842 -> 16867
16856 -> 242
16856 -> 15377
16856 -> 16889
16858 -> 5575
16858 -> 16858
16858 -> 19738
16858 -> 19740
16858 -> 19742
16865 -> 833
16865 -> 835
16865 -> 846
16865 -> 1223
16865 -> 1726
16865 -> 15391
16865 -> 15402
16865 -> 15406
16865 -> 15408
16865 -> 15434
16865 -> 16858
16865 -> 16970
16865 -> 18206
16865 -> 18339
16865 -> 18344
16865 -> 18725
16865 -> 18733
16865 -> 18735
16865 -> 18737
16865 -> 18739
16865 -> 18747
16865 -> 18749
16865 -> 18751
16865 -> 18753
16865 -> 18755
16865 -> 18757
16867 -> 989
16867 -> 1726
16867 -> 16873
16867 -> 16875
16889 -> 15327
16906 -> 15419
16906 -> 16915
16906 -> 16917
16906 -> 16919
16917 -> 846
16917 -> 1726
16917 -> 15430
16917 -> 16746
16917 -> 16865
16917 -> 16936
16917 -> 16938
16917 -> 16946
16917 -> 16951
16917 -> 16956
16917 -> 16958
16917 -> 16960
16917 -> 16962
16917 -> 16964
16917 -> 16966
16917 -> 16968
16917 -> 16970
16917 -> 16972
16917 -> 16974
16917 -> 16980
16946 -> 16873
16946 -> 16875
16946 -> 17099
16951 -> 242
16956 -> 242
16956 -> 18282
16958 -> 15317
16958 -> 18360
16960 -> 18315
16962 -> 242
16962 -> 18289
16972 -> 15354
16974 -> 16858
16974 -> 17245
16974 -> 19505
16974 -> 19776
16974 -> 20056
16980 -> 242
16980 -> 20041
17008 -> 242
17008 -> 17012
17008 -> 17016
17012 -> 9751
17012 -> 16484
17012 -> 16742
17016 -> 16742
17016 -> 16803
17016 -> 17067
17018 -> 242
17018 -> 16746
17018 -> 17012
17018 -> 17016
17024 -> 16738
17024 -> 17018
17024 -> 17031
17031 -> 642
17031 -> 16406
17033 -> 17008
17038 -> 17018
17042 -> 17024
17048 -> 242
17054 -> 17048
17057 -> 16746
17057 -> 17012
17057 -> 17016
17067 -> 989
17067 -> 1726
17067 -> 9751
17067 -> 16406
17067 -> 16484
17076 -> 17079
17076 -> 17081
17079 -> 16946
17081 -> 16746
17081 -> 16951
17085 -> 16753
17087 -> 17081
17099 -> 242
17099 -> 658
17101 -> 16873
17101 -> 16875
17101 -> 17099
17105 -> 1726
17105 -> 16790
17108 -> 16738
17108 -> 17018
17108 -> 17112
17108 -> 17114
17112 -> 16406
17114 -> 16155
17114 -> 16157
17114 -> 16159
17114 -> 16406
17116 -> 17018
17116 -> 17112
17119 -> 1726
17119 -> 16744
17119 -> 16746
17119 -> 16755
17119 -> 16779
17123 -> 16484
17123 -> 16714
17123 -> 16803
17123 -> 17008
17123 -> 17112
17123 -> 17126
17126 -> 1726
17126 -> 16155
17126 -> 16157
17126 -> 16159
17126 -> 16406
17132 -> 17137
17132 -> 17139
17137 -> 15634
17139 -> 15320
17141 -> 17143
17143 -> 15320
17145 -> 1726
17145 -> 17148
17148 -> 17157
17150 -> 17153
17153 -> 16746
17157 -> 16746
17171 -> 15327
17175 -> 15354
17182 -> 15354
17182 -> 17190
17190 -> 831
17190 -> 833
17190 -> 835
17190 -> 846
17190 -> 3272
17190 -> 16155
17190 -> 16157
17190 -> 16159
17190 -> 17024
17190 -> 17087
17190 -> 17137
17190 -> 17145
17190 -> 17254
17190 -> 17257
17190 -> 17259
17190 -> 17268
17192 -> 15327
17192 -> 17201
17201 -> 15377
17201 -> 16406
17201 -> 16980
17201 -> 17018
17201 -> 17240
17201 -> 17245
17203 -> 17143
17206 -> 17171
17210 -> 17175
17214 -> 17192
17240 -> 3272
17240 -> 15406
17240 -> 15430
17240 -> 15438
17240 -> 15440
17240 -> 15476
17240 -> 16966
17240 -> 16968
17240 -> 17245
17240 -> 18502
17240 -> 18624
17240 -> 18630
17240 -> 19272
17240 -> 19300
17240 -> 19413
17240 -> 19816
17254 -> 17651
17257 -> 788
17257 -> 799
17257 -> 833
17257 -> 835
17257 -> 3456
17259 -> 799
17259 -> 833
17259 -> 835
17259 -> 3272
17259 -> 16155
17259 -> 16157
17259 -> 16159
17268 -> 15327
17268 -> 18564
17278 -> 15402
17278 -> 17171
17281 -> 15408
17281 -> 15410
17281 -> 15417
17281 -> 16742
17281 -> 16858
17281 -> 17286
17281 -> 17288
17281 -> 17292
17286 -> 242
17286 -> 15410
17286 -> 15417
17286 -> 16406
17288 -> 19388
17292 -> 19388
17299 -> 15419
17299 -> 16915
17299 -> 16919
17299 -> 17302
17302 -> 439
17302 -> 15410
17302 -> 15417
17302 -> 15430
17302 -> 16744
17302 -> 16746
17302 -> 16936
17302 -> 16938
17302 -> 16946
17302 -> 17288
17302 -> 17292
17302 -> 17313
17302 -> 17315
17317 -> 15408
17317 -> 17321
17321 -> 1726
17321 -> 15402
17321 -> 15406
17321 -> 15430
17321 -> 15438
17321 -> 15440
17321 -> 16759
17321 -> 17119
17321 -> 17157
17321 -> 17321
17321 -> 17327
17327 -> 15406
17327 -> 15419
17327 -> 15430
17327 -> 16915
17327 -> 16919
17327 -> 16938
17327 -> 17081
17327 -> 17333
17335 -> 17339
17335 -> 17344
17339 -> 1340
17339 -> 1353
17339 -> 1355
17339 -> 1363
17339 -> 1384
17339 -> 15406
17339 -> 15408
17339 -> 15419
17339 -> 18862
17339 -> 19274
17339 -> 19442
17339 -> 19447
17344 -> 242
17369 -> 16738
17369 -> 16744
17369 -> 17114
17372 -> 17108
17376 -> 16873
17376 -> 16875
17376 -> 16946
17376 -> 16951
17376 -> 17069
17376 -> 17081
17376 -> 17369
17376 -> 17385
17376 -> 17387
17385 -> 18412
17387 -> 1340
17387 -> 1353
17387 -> 1355
17387 -> 1363
17387 -> 1384
17387 -> 15406
17387 -> 15419
17387 -> 17245
17387 -> 18862
17387 -> 19447
17387 -> 19485
17387 -> 19501
17387 -> 19503
17387 -> 19505
17392 -> 17339
17392 -> 17398
17398 -> 242
17410 -> 16744
17413 -> 17116
17417 -> 16873
17417 -> 16875
17417 -> 17069
17417 -> 17081
17417 -> 17385
17417 -> 17387
17417 -> 17410
17448 -> 17452
17452 -> 242
17452 -> 1031
17452 -> 1033
17452 -> 3272
17452 -> 16155
17452 -> 16157
17452 -> 16159
17452 -> 16484
17458 -> 242
17458 -> 15990
17458 -> 17462
17458 -> 17464
17462 -> 1726
17462 -> 15990
17464 -> 989
17466 -> 242
17466 -> 658
17466 -> 16155
17466 -> 16157
17466 -> 16159
17466 -> 17031
17466 -> 17464
17466 -> 17472
17472 -> 9751
17472 -> 16484
17472 -> 17929
17474 -> 242
17474 -> 989
17474 -> 9751
17474 -> 16155
17474 -> 16157
17474 -> 16159
17474 -> 16484
17474 -> 16746
17474 -> 17031
17474 -> 17067
17478 -> 17484
17484 -> 242
17484 -> 16041
17484 -> 16043
17484 -> 16045
17484 -> 17452
17484 -> 17492
17492 -> 17540
17496 -> 16146
17502 -> 17504
17504 -> 989
17504 -> 16406
17508 -> 989
17508 -> 1052
17508 -> 1059
17510 -> 17513
17513 -> 1052
17513 -> 1059
17513 -> 1077
17513 -> 15881
17513 -> 16155
17513 -> 16157
17513 -> 16159
17513 -> 17114
17513 -> 17518
17518 -> 16155
17518 -> 16157
17518 -> 16159
17518 -> 16406
17534 -> 17492
17540 -> 16146
17544 -> 17547
17547 -> 17496
17547 -> 17540
17547 -> 17552
17552 -> 16146
17560 -> 17508
17560 -> 17552
17569 -> 5348
17599 -> 242
17622 -> 242
17641 -> 242
17642 -> 833
17642 -> 835
17642 -> 989
17642 -> 5154
17642 -> 5163
17642 -> 5165
17642 -> 5167
17642 -> 9403
17642 -> 13663
17642 -> 13711
17642 -> 13758
17642 -> 14379
17642 -> 15107
17642 -> 15115
17642 -> 15117
17642 -> 16155
17642 -> 16157
17642 -> 16159
17642 -> 16406
17642 -> 16744
17642 -> 17024
17642 -> 17079
17642 -> 17087
17642 -> 17651
17642 -> 17653
17642 -> 17658
17642 -> 17663
17642 -> 17665
17651 -> 17957
17653 -> 1726
17658 -> 833
17658 -> 835
17658 -> 989
17658 -> 5154
17658 -> 5163
17658 -> 5165
17658 -> 5167
17658 -> 9403
17658 -> 13663
17658 -> 13711
17658 -> 13758
17658 -> 15107
17658 -> 16873
17658 -> 16875
17658 -> 16951
17658 -> 18057
17658 -> 18059
17658 -> 18061
17663 -> 242
17665 -> 5163
17665 -> 5165
17665 -> 5167
17692 -> 242
17692 -> 1052
17692 -> 16159
17692 -> 16484
17692 -> 17698
17698 -> 1077
17701 -> 242
17701 -> 1031
17701 -> 1033
17701 -> 16406
17714 -> 17717
17717 -> 989
17717 -> 16155
17717 -> 16157
17717 -> 16159
17720 -> 17717
17720 -> 17724
17724 -> 989
17724 -> 16155
17724 -> 16157
17724 -> 16159
17731 -> 16155
17731 -> 16157
17731 -> 16159
17731 -> 17736
17736 -> 242
17754 -> 16406
17754 -> 17692
17771 -> 16714
17771 -> 16817
17771 -> 17776
17776 -> 15322
17776 -> 15434
17776 -> 16714
17776 -> 16771
17778 -> 17771
17784 -> 16748
17784 -> 16817
17784 -> 17630
17784 -> 17632
17784 -> 17634
17784 -> 17776
17793 -> 827
17793 -> 831
17793 -> 833
17793 -> 15273
17793 -> 15278
17793 -> 15391
17793 -> 15426
17793 -> 16779
17793 -> 17622
17802 -> 16771
17802 -> 16808
17802 -> 17807
17807 -> 19353
17817 -> 17137
17821 -> 15377
17821 -> 15393
17821 -> 15438
17821 -> 15440
17821 -> 15657
17821 -> 15659
17821 -> 16746
17821 -> 16755
17821 -> 16779
17821 -> 16803
17821 -> 16889
17821 -> 16936
17821 -> 16938
17821 -> 16956
17821 -> 16958
17821 -> 17054
17821 -> 17081
17821 -> 17083
17821 -> 17123
17821 -> 17137
17821 -> 17150
17821 -> 17245
17821 -> 17831
17821 -> 17833
17831 -> 15377
17831 -> 15393
17831 -> 15430
17831 -> 16964
17831 -> 16966
17831 -> 16968
17831 -> 17831
17831 -> 19300
17831 -> 19307
17831 -> 19427
17831 -> 19774
17831 -> 19816
17866 -> 242
17866 -> 313
17869 -> 242
17869 -> 1031
17869 -> 1033
17888 -> 242
17888 -> 678
17903 -> 15892
17911 -> 1223
17911 -> 1726
17914 -> 1059
17914 -> 16484
17918 -> 16744
17924 -> 16744
17929 -> 16406
17938 -> 443
17940 -> 439
17940 -> 17938
17943 -> 17938
17946 -> 1644
17946 -> 17938
17952 -> 1726
17957 -> 989
17961 -> 1223
17961 -> 1726
17967 -> 16746
17974 -> 17952
17982 -> 17961
17987 -> 17964
17992 -> 15793
17992 -> 16689
17994 -> 15793
17994 -> 16698
18001 -> 6537
18001 -> 15812
18005 -> 6537
18005 -> 15812
18010 -> 15812
18017 -> 6646
18017 -> 16698
18021 -> 15841
18021 -> 16155
18021 -> 16157
18021 -> 16159
18026 -> 6663
18026 -> 6667
18026 -> 6669
18026 -> 6671
18026 -> 18029
18029 -> 15851
18029 -> 16406
18057 -> 242
18059 -> 18905
18061 -> 5163
18061 -> 5165
18061 -> 5167
18069 -> 242
18076 -> 15231
18081 -> 242
18105 -> 18108
18108 -> 242
18120 -> 2874
18120 -> 5571
18120 -> 12082
18120 -> 18129
18120 -> 18131
18120 -> 18133
18131 -> 242
18131 -> 3272
18131 -> 18183
18139 -> 242
18141 -> 831
18141 -> 833
18141 -> 12331
18141 -> 16873
18141 -> 16875
18141 -> 18144
18141 -> 18149
18144 -> 831
18144 -> 846
18144 -> 18153
18149 -> 833
18149 -> 835
18149 -> 18158
18149 -> 18160
18158 -> 19046
18160 -> 642
18160 -> 16873
18160 -> 16875
18183 -> 642
18183 -> 16873
18183 -> 16875
18183 -> 18189
18183 -> 18191
18189 -> 16951
18191 -> 6384
18195 -> 18197
18197 -> 16956
18197 -> 18201
18201 -> 242
18203 -> 4413
18203 -> 16980
18203 -> 17240
18203 -> 18197
18203 -> 18206
18224 -> 18226
18226 -> 18105
18231 -> 18108
18235 -> 827
18235 -> 831
18235 -> 833
18235 -> 835
18235 -> 846
18235 -> 3884
18235 -> 12331
18235 -> 12348
18235 -> 18241
18235 -> 18249
18241 -> 242
18244 -> 16873
18244 -> 16875
18244 -> 18116
18244 -> 18191
18249 -> 831
18249 -> 833
18249 -> 835
18249 -> 1726
18249 -> 3871
18249 -> 15021
18249 -> 16956
18249 -> 18059
18249 -> 18116
18249 -> 18118
18249 -> 18254
18254 -> 18369
18282 -> 642
18282 -> 1077
18282 -> 16873
18282 -> 16875
18282 -> 18323
18282 -> 18325
18289 -> 642
18289 -> 1031
18289 -> 1033
18289 -> 16873
18289 -> 16875
18289 -> 18315
18289 -> 18323
18291 -> 242
18303 -> 16956
18308 -> 16962
18312 -> 242
18312 -> 18315
18315 -> 407
18317 -> 18312
18325 -> 429
18325 -> 434
18325 -> 439
18325 -> 443
18325 -> 989
18325 -> 1726
18330 -> 18323
18333 -> 18291
18336 -> 18339
18339 -> 642
18339 -> 15391
18339 -> 16873
18339 -> 16875
18341 -> 18344
18344 -> 642
18344 -> 15434
18344 -> 16951
18350 -> 642
18350 -> 1726
18350 -> 16951
18353 -> 18339
18353 -> 18341
18360 -> 15634
18362 -> 17139
18364 -> 642
18369 -> 658
18369 -> 16873
18369 -> 16875
18373 -> 642
18376 -> 642
18376 -> 15434
18376 -> 16951
18380 -> 1726
18380 -> 18254
18383 -> 1726
18383 -> 18254
18386 -> 642
18386 -> 1726
18389 -> 642
18389 -> 16873
18389 -> 16875
18393 -> 1031
18393 -> 1033
18393 -> 18315
18393 -> 18323
18398 -> 18323
18401 -> 18407
18401 -> 18412
18412 -> 242
18412 -> 642
18412 -> 1726
18412 -> 3272
18457 -> 658
18457 -> 16873
18457 -> 16875
18457 -> 16951
18460 -> 642
18460 -> 658
18460 -> 989
18460 -> 1077
18460 -> 18291
18463 -> 15381
18463 -> 15386
18463 -> 15428
18463 -> 15430
18463 -> 15436
18463 -> 18336
18463 -> 18341
18463 -> 18457
18487 -> 242
18487 -> 846
18495 -> 242
18495 -> 439
18495 -> 846
18495 -> 3272
18495 -> 15322
18495 -> 15434
18495 -> 16956
18495 -> 16970
18495 -> 16972
18495 -> 16980
18495 -> 17313
18495 -> 18339
18495 -> 18360
18495 -> 18502
18502 -> 17245
18502 -> 19505
18502 -> 20086
18505 -> 18495
18505 -> 18508
18508 -> 831
18508 -> 3272
18508 -> 14811
18508 -> 15178
18508 -> 15190
18508 -> 16980
18508 -> 18508
18508 -> 18513
18508 -> 18515
18508 -> 18520
18508 -> 18522
18522 -> 16858
18522 -> 17245
18522 -> 19505
18522 -> 19776
18522 -> 20064
18525 -> 18527
18527 -> 18527
18550 -> 18557
18550 -> 18559
18557 -> 242
18557 -> 15377
18557 -> 15438
18557 -> 15440
18557 -> 17245
18557 -> 18624
18557 -> 18630
18557 -> 19272
18559 -> 16951
18559 -> 16956
18564 -> 827
18564 -> 831
18564 -> 1726
18564 -> 15377
18564 -> 16956
18564 -> 18369
18564 -> 18595
18564 -> 18606
18564 -> 18608
18564 -> 18610
18564 -> 18612
18564 -> 18614
18564 -> 18616
18566 -> 17139
18569 -> 16889
18572 -> 16972
18575 -> 18550
18595 -> 242
18595 -> 846
18610 -> 242
18610 -> 18677
18610 -> 18681
18612 -> 831
18614 -> 242
18616 -> 831
18616 -> 833
18616 -> 835
18616 -> 846
18616 -> 1726
18616 -> 3884
18616 -> 15438
18616 -> 15440
18616 -> 15476
18616 -> 18369
18616 -> 18608
18616 -> 18616
18616 -> 18622
18616 -> 18624
18616 -> 18626
18616 -> 18628
18616 -> 18630
18616 -> 18632
18616 -> 18634
18616 -> 18645
18616 -> 18647
18616 -> 18649
18624 -> 18614
18624 -> 19413
18624 -> 19724
18624 -> 19726
18645 -> 18350
18645 -> 18595
18645 -> 18610
18645 -> 18612
18677 -> 18612
18677 -> 18626
18681 -> 18612
18681 -> 18626
18713 -> 15402
18713 -> 16889
18716 -> 15406
18716 -> 15408
18716 -> 15410
18716 -> 15417
18716 -> 15419
18716 -> 16865
18716 -> 16873
18716 -> 16875
18716 -> 16951
18725 -> 242
18725 -> 846
18735 -> 18761
18735 -> 18763
18735 -> 18765
18735 -> 18767
18735 -> 18769
18735 -> 18771
18735 -> 18773
18737 -> 15406
18737 -> 15430
18737 -> 18761
18737 -> 18763
18737 -> 18765
18737 -> 18767
18737 -> 18769
18737 -> 18771
18737 -> 18773
18739 -> 15402
18739 -> 18749
18739 -> 18757
18739 -> 18761
18739 -> 18767
18739 -> 18771
18739 -> 18773
18739 -> 18779
18747 -> 831
18747 -> 833
18747 -> 835
18747 -> 846
18747 -> 3871
18747 -> 18749
18747 -> 18761
18747 -> 18767
18747 -> 18790
18747 -> 18792
18753 -> 18783
18779 -> 18059
18792 -> 833
18792 -> 835
18792 -> 4069
18792 -> 6384
18792 -> 15021
18792 -> 16960
18792 -> 18201
18792 -> 18206
18792 -> 18749
18792 -> 18757
18809 -> 18201
18853 -> 15419
18853 -> 16915
18853 -> 16919
18853 -> 18862
18853 -> 18864
18864 -> 439
18864 -> 831
18864 -> 15273
18864 -> 15278
18864 -> 15391
18864 -> 15426
18864 -> 15430
18864 -> 16938
18864 -> 18333
18864 -> 18344
18864 -> 18809
18864 -> 18877
18877 -> 1726
18877 -> 15406
18877 -> 15430
18877 -> 15655
18902 -> 1225
18902 -> 16873
18902 -> 16875
18902 -> 16951
18902 -> 18749
18902 -> 18757
18902 -> 18905
18905 -> 989
18913 -> 15634
18913 -> 16956
18913 -> 18918
18918 -> 15322
18918 -> 15434
18918 -> 16956
18918 -> 18339
18920 -> 18913
18926 -> 15634
18926 -> 18206
18926 -> 18357
18926 -> 18749
18926 -> 18757
18926 -> 18918
18930 -> 827
18930 -> 831
18930 -> 833
18930 -> 15273
18930 -> 15278
18930 -> 15391
18930 -> 15426
18930 -> 15657
18930 -> 16938
18930 -> 18201
18930 -> 18344
18932 -> 15657
18932 -> 16938
18932 -> 17333
18932 -> 18339
18932 -> 18350
18940 -> 18360
18944 -> 1033
18944 -> 15331
18944 -> 15377
18944 -> 15381
18944 -> 15386
18944 -> 15393
18944 -> 15438
18944 -> 15440
18944 -> 15657
18944 -> 15659
18944 -> 16938
18944 -> 16960
18944 -> 17245
18944 -> 17831
18944 -> 17833
18944 -> 18317
18944 -> 18339
18944 -> 18350
18944 -> 18357
18944 -> 18360
18944 -> 18364
18972 -> 242
18972 -> 313
18975 -> 242
18984 -> 242
18992 -> 242
19006 -> 15905
19010 -> 1726
19012 -> 989
19016 -> 1223
19016 -> 1726
19018 -> 16873
19018 -> 16875
19018 -> 16951
19021 -> 16873
19021 -> 16875
19021 -> 16951
19027 -> 16873
19027 -> 16875
19027 -> 16951
19031 -> 9751
19031 -> 19012
19031 -> 19034
19034 -> 16951
19036 -> 642
19036 -> 1052
19036 -> 1059
19036 -> 1726
19036 -> 9751
19036 -> 19012
19036 -> 19040
19040 -> 642
19042 -> 16951
19046 -> 443
19048 -> 439
19048 -> 19046
19051 -> 1726
19058 -> 1223
19058 -> 1726
19072 -> 19058
19077 -> 19061
19084 -> 1644
19084 -> 19046
19086 -> 15793
19086 -> 19088
19088 -> 6642
19088 -> 19118
19090 -> 15793
19090 -> 19096
19096 -> 15812
19102 -> 6537
19102 -> 15812
19106 -> 6537
19106 -> 15812
19111 -> 15812
19118 -> 6646
19118 -> 19096
19122 -> 15841
19122 -> 16873
19122 -> 16875
19127 -> 6663
19127 -> 6667
19127 -> 6669
19127 -> 6671
19127 -> 19130
19130 -> 15851
19130 -> 16951
19235 -> 242
19238 -> 19242
19246 -> 846
19246 -> 15178
19246 -> 15190
19246 -> 15430
19246 -> 15438
19246 -> 15440
19246 -> 16964
19246 -> 16966
19246 -> 16968
19246 -> 16970
19246 -> 18624
19246 -> 19246
19246 -> 19290
19246 -> 19292
19246 -> 19300
19251 -> 242
19262 -> 15438
19262 -> 15476
19262 -> 18630
19300 -> 19726
19304 -> 19274
19304 -> 19307
19307 -> 15377
19307 -> 15393
19307 -> 19307
19307 -> 19427
19309 -> 19311
19311 -> 15406
19311 -> 15419
19311 -> 15438
19311 -> 15440
19311 -> 19311
19315 -> 19317
19317 -> 15406
19317 -> 15419
19317 -> 15438
19317 -> 15440
19317 -> 19317
19321 -> 16980
19321 -> 18520
19321 -> 19324
19324 -> 16858
19324 -> 17245
19324 -> 19505
19324 -> 19776
19324 -> 20081
19329 -> 15408
19329 -> 16858
19329 -> 19341
19329 -> 19343
19341 -> 242
19343 -> 6447
19343 -> 15419
19343 -> 15453
19345 -> 17807
19353 -> 15406
19353 -> 15419
19353 -> 15438
19353 -> 15440
19353 -> 19353
19353 -> 19362
19355 -> 19353
19362 -> 1726
19362 -> 15430
19362 -> 15655
19362 -> 19362
19370 -> 242
19374 -> 15408
19374 -> 16858
19374 -> 19382
19374 -> 19384
19382 -> 242
19394 -> 15410
19400 -> 19409
19400 -> 19411
19400 -> 19413
19400 -> 19415
19400 -> 19417
19409 -> 242
19411 -> 15406
19411 -> 15419
19411 -> 15430
19411 -> 15438
19411 -> 15440
19411 -> 16964
19411 -> 16966
19411 -> 16968
19411 -> 17833
19411 -> 19300
19411 -> 19411
19411 -> 19816
19419 -> 19422
19422 -> 15406
19422 -> 15419
19422 -> 15430
19422 -> 15438
19422 -> 15440
19422 -> 16964
19422 -> 16966
19422 -> 16968
19422 -> 19422
19422 -> 19427
19422 -> 19429
19442 -> 1351
19442 -> 15377
19442 -> 15393
19442 -> 15406
19442 -> 15419
19442 -> 15438
19442 -> 15440
19442 -> 16915
19442 -> 16919
19442 -> 17387
19442 -> 19442
19442 -> 19459
19442 -> 19465
19447 -> 831
19459 -> 242
19465 -> 242
19465 -> 846
19489 -> 19292
19489 -> 19485
19494 -> 17313
19496 -> 16974
19496 -> 16980
19496 -> 19485
19503 -> 1351
19503 -> 15377
19503 -> 15393
19503 -> 15406
19503 -> 15419
19503 -> 15438
19503 -> 15440
19503 -> 16915
19503 -> 16919
19503 -> 19459
19503 -> 19465
19503 -> 19503
19503 -> 19512
19514 -> 19300
19514 -> 19517
19521 -> 18520
19533 -> 19459
19556 -> 15406
19556 -> 15438
19556 -> 15440
19556 -> 15476
19556 -> 18630
19556 -> 19427
19556 -> 19447
19556 -> 19459
19556 -> 19465
19556 -> 19565
19556 -> 19567
19556 -> 19569
19556 -> 19571
19556 -> 19573
19556 -> 19575
19556 -> 19577
19556 -> 19579
19565 -> 242
19565 -> 846
19565 -> 19465
19565 -> 19899
19567 -> 19726
19571 -> 19726
19575 -> 19447
19625 -> 15406
19625 -> 15430
19625 -> 15655
19628 -> 1726
19628 -> 15126
19628 -> 15406
19628 -> 15430
19628 -> 15655
19628 -> 19631
19628 -> 19639
19628 -> 19641
19628 -> 19643
19639 -> 827
19639 -> 15419
19639 -> 16915
19639 -> 16919
19639 -> 19654
19641 -> 17333
19641 -> 19666
19643 -> 19603
19643 -> 19666
19643 -> 19672
19643 -> 19675
19654 -> 831
19654 -> 16938
19688 -> 15419
19688 -> 16915
19688 -> 16919
19688 -> 19242
19724 -> 15430
19724 -> 16964
19724 -> 16966
19724 -> 16968
19752 -> 19362
19758 -> 846
19758 -> 19768
19768 -> 831
19768 -> 15430
19768 -> 15655
19768 -> 19768
19774 -> 3873
19776 -> 19786
19786 -> 15430
19786 -> 17831
19786 -> 19413
19786 -> 19724
19786 -> 19774
19786 -> 19786
19786 -> 19793
19818 -> 19822
19818 -> 19827
19822 -> 15430
19822 -> 16964
19822 -> 16966
19822 -> 16968
19822 -> 19774
19822 -> 19808
19822 -> 19839
19822 -> 19841
19827 -> 242
19832 -> 6856
19839 -> 16964
19839 -> 16966
19839 -> 19808
19839 -> 19839
19841 -> 16966
19841 -> 16968
19841 -> 19808
19841 -> 19841
19844 -> 15377
19844 -> 15393
19844 -> 19427
19860 -> 5348
19899 -> 831
19899 -> 833
19899 -> 5575
19899 -> 15021
19899 -> 15406
19899 -> 15419
19899 -> 15430
19899 -> 15438
19899 -> 15440
19899 -> 16964
19899 -> 16966
19899 -> 16968
19899 -> 19300
19899 -> 19899
19899 -> 19905
19899 -> 19907
19905 -> 19429
19905 -> 19575
19907 -> 19429
19907 -> 19575
19982 -> 14811
19992 -> 5348
20041 -> 242
20056 -> 242
20064 -> 242
20066 -> 16858
20066 -> 17245
20066 -> 19505
20066 -> 19776
20066 -> 20073
20073 -> 242
20081 -> 242
20081 -> 20005
20086 -> 1340
20086 -> 1353
20086 -> 1355
20086 -> 1363
20086 -> 1384
20086 -> 15406
20086 -> 15419
20086 -> 18862
20086 -> 19447
20086 -> 20090
20090 -> 1351
20090 -> 15377
20090 -> 15393
20090 -> 15406
20090 -> 15419
20090 -> 15438
20090 -> 15440
20090 -> 16915
20090 -> 16919
20090 -> 19427
20090 -> 19459
20090 -> 19465
20090 -> 20090
20096 -> 15419
20096 -> 19822
20096 -> 20106
20106 -> 242
20109 -> 15419
20109 -> 19822
20109 -> 20106
20117 -> 15419
20117 -> 19822
20117 -> 20086
20117 -> 20106
20135 -> 15419
20135 -> 19822
20135 -> 20086
20142 -> 15377
20142 -> 17315
20142 -> 17333
20142 -> 19505
20142 -> 19844
20150 -> 18630
20162 -> 3873
20162 -> 15377
20162 -> 15419
20162 -> 15438
20162 -> 15440
20169 -> 5348
20237 -> 242
20240 -> 20246
20240 -> 20248
20246 -> 242
20248 -> 20246
20248 -> 20248
20248 -> 20257
20248 -> 20328
20248 -> 20330
20250 -> 20255
20250 -> 20257
20250 -> 20259
20250 -> 20261
20255 -> 20271
20255 -> 20275
20255 -> 20333
20255 -> 20335
20259 -> 20257
20261 -> 20271
20265 -> 20267
20267 -> 20267
20269 -> 20271
20273 -> 20275
20283 -> 20257
20293 -> 5348
20323 -> 20275
20328 -> 20339
20328 -> 20341
20330 -> 20339
20330 -> 20341
20333 -> 20339
20333 -> 20341
20335 -> 20339
20335 -> 20341
20382 -> 242
20382 -> 398
20382 -> 439
20382 -> 443
20382 -> 788
20382 -> 791
20382 -> 20390
20382 -> 20392
20382 -> 20394
20382 -> 20396
20382 -> 20398
20398 -> 20404
20404 -> 398
20404 -> 20390
20404 -> 20392
20404 -> 20417
20406 -> 791
20406 -> 20398
20409 -> 20406
20413 -> 4870
20470 -> 242
20470 -> 1638
20470 -> 6273
20470 -> 18315
20489 -> 18315
20489 -> 20483
20501 -> 15320
20504 -> 15327
20504 -> 20509
20509 -> 1638
20509 -> 6273
20509 -> 15377
20509 -> 15393
20509 -> 18315
20509 -> 20537
20509 -> 20542
20509 -> 20547
20511 -> 15327
20511 -> 20521
20521 -> 15406
20521 -> 15408
20521 -> 15419
20521 -> 20550
20521 -> 20552
20521 -> 20554
20523 -> 15354
20523 -> 20521
20537 -> 20749
20542 -> 242
20547 -> 1031
20547 -> 1033
20547 -> 16951
20547 -> 18315
20547 -> 20775
20550 -> 15406
20550 -> 20558
20550 -> 20560
20552 -> 15406
20552 -> 20564
20552 -> 20566
20554 -> 3272
20558 -> 15406
20558 -> 15476
20558 -> 20560
20558 -> 20585
20558 -> 20587
20560 -> 15406
20560 -> 20579
20560 -> 20585
20564 -> 15406
20564 -> 15476
20564 -> 20566
20564 -> 20579
20564 -> 20581
20566 -> 15406
20566 -> 20579
20566 -> 20585
20568 -> 15406
20568 -> 15408
20568 -> 15476
20568 -> 20550
20568 -> 20564
20568 -> 20570
20570 -> 15419
20570 -> 20560
20570 -> 20566
20574 -> 15419
20574 -> 20560
20574 -> 20566
20579 -> 15438
20579 -> 15440
20579 -> 20599
20581 -> 15476
20581 -> 20579
20585 -> 15438
20585 -> 15440
20585 -> 20599
20587 -> 15476
20587 -> 20585
20599 -> 15406
20599 -> 15430
20599 -> 20605
20607 -> 15406
20607 -> 15430
20607 -> 20610
20607 -> 20612
20614 -> 15402
20614 -> 20511
20620 -> 1638
20620 -> 15406
20620 -> 15408
20620 -> 15410
20620 -> 15417
20620 -> 15419
20620 -> 15430
20620 -> 20547
20620 -> 20612
20624 -> 443
20624 -> 15453
20624 -> 20547
20624 -> 20610
20633 -> 831
20633 -> 846
20633 -> 15402
20633 -> 20470
20644 -> 20649
20649 -> 242
20649 -> 15408
20649 -> 15419
20649 -> 20550
20649 -> 20568
20649 -> 20663
20663 -> 5575
20663 -> 20558
20663 -> 20564
20663 -> 20570
20663 -> 20574
20663 -> 20607
20670 -> 15552
20670 -> 20663
20672 -> 10998
20674 -> 20677
20674 -> 20679
20679 -> 831
20679 -> 846
20679 -> 18315
20679 -> 20479
20679 -> 20481
20679 -> 20688
20679 -> 20690
20688 -> 242
20690 -> 831
20690 -> 833
20690 -> 835
20690 -> 1726
20690 -> 3884
20690 -> 15021
20690 -> 15377
20690 -> 15402
20690 -> 15406
20690 -> 18315
20690 -> 20511
20690 -> 20692
20692 -> 5575
20692 -> 15402
20692 -> 15406
20692 -> 15438
20692 -> 15440
20692 -> 18624
20692 -> 18630
20692 -> 19362
20692 -> 20542
20692 -> 20547
20692 -> 20612
20739 -> 20610
20743 -> 20542
20749 -> 15634
20751 -> 20501
20775 -> 242
20785 -> 20787
20789 -> 443
20791 -> 20794
20794 -> 19036
20800 -> 20789
20804 -> 1644
20804 -> 20789
20809 -> 242
20816 -> 20821
20821 -> 10991
20826 -> 242
20849 -> 20749
20853 -> 15655
20853 -> 15657
20853 -> 15659
20853 -> 20612
20890 -> 242
20890 -> 20894
20894 -> 16803
20894 -> 17067
20894 -> 17472
20897 -> 242
20897 -> 17031
20897 -> 20894
20897 -> 20905
20907 -> 242
20916 -> 20907
20922 -> 20916
20927 -> 16753
20929 -> 16753
20929 -> 20907
20931 -> 20937
20931 -> 20939
20937 -> 20610
20937 -> 20951
20937 -> 20953
20939 -> 20547
20939 -> 20905
20939 -> 20945
20945 -> 1077
20945 -> 16746
20951 -> 1077
20951 -> 16155
20951 -> 16157
20951 -> 16790
20951 -> 17472
20951 -> 21251
20953 -> 1031
20953 -> 1033
20953 -> 16744
20963 -> 20470
20963 -> 20945
20966 -> 20501
20966 -> 20971
20971 -> 15634
20973 -> 20978
20978 -> 15320
20980 -> 20905
20980 -> 20983
20983 -> 16790
20987 -> 17967
20991 -> 21000
21000 -> 242
21008 -> 17114
21008 -> 20905
21008 -> 20951
21011 -> 17114
21011 -> 20907
21032 -> 242
21032 -> 21042
21032 -> 21044
21042 -> 21052
21042 -> 21065
21044 -> 21052
21044 -> 21065
21054 -> 20905
21054 -> 20945
21054 -> 20953
21054 -> 21057
21059 -> 21044
21059 -> 21046
21059 -> 21052
21059 -> 21065
21065 -> 831
21068 -> 831
21068 -> 18315
21068 -> 20479
21068 -> 20483
21068 -> 20905
21068 -> 20941
21068 -> 20945
21068 -> 20951
21068 -> 20953
21068 -> 20963
21068 -> 21057
21068 -> 21078
21068 -> 21080
21078 -> 831
21078 -> 20941
21078 -> 21032
21078 -> 21065
21080 -> 242
21080 -> 846
21111 -> 242
21111 -> 21122
21133 -> 846
21133 -> 1351
21133 -> 15419
21133 -> 16915
21133 -> 16919
21133 -> 21142
21142 -> 831
21142 -> 1351
21142 -> 1384
21142 -> 15657
21142 -> 16938
21142 -> 20479
21142 -> 20481
21142 -> 20483
21142 -> 20547
21142 -> 20633
21142 -> 20929
21142 -> 20937
21142 -> 21032
21142 -> 21065
21142 -> 21080
21153 -> 1384
21153 -> 6856
21153 -> 16790
21153 -> 19758
21153 -> 20905
21153 -> 21046
21153 -> 21048
21153 -> 21057
21153 -> 21161
21163 -> 11385
21163 -> 12331
21163 -> 21059
21163 -> 21153
21177 -> 242
21177 -> 846
21193 -> 831
21193 -> 833
21193 -> 835
21193 -> 5575
21193 -> 15419
21193 -> 16744
21193 -> 19844
21193 -> 21196
21193 -> 21201
21193 -> 21203
21193 -> 21205
21196 -> 15327
21201 -> 831
21201 -> 835
21201 -> 846
21201 -> 3884
21201 -> 14389
21201 -> 14762
21201 -> 14811
21201 -> 15178
21201 -> 15190
21201 -> 15402
21201 -> 15406
21201 -> 15408
21201 -> 16858
21201 -> 18515
21201 -> 21046
21201 -> 21048
21201 -> 21111
21201 -> 21163
21201 -> 21210
21203 -> 1077
21203 -> 16803
21203 -> 17967
21203 -> 20905
21203 -> 20961
21203 -> 21046
21203 -> 21048
21203 -> 21052
21203 -> 21057
21203 -> 21210
21205 -> 16744
21205 -> 17472
21205 -> 20961
21205 -> 21046
21205 -> 21048
21205 -> 21050
21205 -> 21052
21205 -> 21210
21217 -> 16740
21217 -> 20951
21247 -> 21251
21247 -> 21253
21251 -> 242
21253 -> 1031
21253 -> 1033
21253 -> 2206
21253 -> 16406
21272 -> 21274
21276 -> 443
21278 -> 16753
21278 -> 21251
21280 -> 21283
21283 -> 16790
21288 -> 21276
21292 -> 1644
21292 -> 21276
21297 -> 242
21304 -> 20787
21309 -> 242
21322 -> 15327
21322 -> 15377
21322 -> 15393
21322 -> 20890
21322 -> 20966
21328 -> 21335
21328 -> 21337
21335 -> 15327
21335 -> 21356
21337 -> 16803
21337 -> 17114
21337 -> 17452
21337 -> 20905
21337 -> 20951
21342 -> 15354
21356 -> 827
21356 -> 831
21356 -> 1726
21356 -> 15377
21356 -> 16790
21356 -> 18614
21356 -> 20897
21356 -> 20905
21356 -> 20980
21356 -> 21032
21356 -> 21057
21356 -> 21065
21356 -> 21080
21356 -> 21367
21356 -> 21371
21371 -> 833
21371 -> 835
21371 -> 846
21371 -> 3884
21371 -> 15438
21371 -> 15440
21371 -> 15476
21371 -> 18624
21371 -> 18630
21371 -> 21052
21371 -> 21068
21371 -> 21371
21378 -> 15402
21378 -> 21196
21381 -> 15402
21381 -> 15406
21381 -> 15408
21381 -> 15410
21381 -> 15417
21381 -> 15419
21381 -> 16858
21381 -> 21177
21381 -> 21215
21381 -> 21217
21381 -> 21247
21401 -> 831
21401 -> 1052
21401 -> 15107
21401 -> 15115
21401 -> 15117
21401 -> 15119
21401 -> 15169
21401 -> 15175
21401 -> 15402
21401 -> 15406
21401 -> 15408
21401 -> 15430
21401 -> 15438
21401 -> 15440
21401 -> 16484
21401 -> 17641
21401 -> 19309
21401 -> 19311
21401 -> 19315
21401 -> 19317
21401 -> 19329
21401 -> 19603
21401 -> 19605
21401 -> 20905
21401 -> 20951
21401 -> 20961
21401 -> 21048
21401 -> 21057
21401 -> 21201
21401 -> 21210
21401 -> 21278
21401 -> 21410
21401 -> 21429
21410 -> 15402
21410 -> 15408
21410 -> 16858
21410 -> 21177
21410 -> 21221
21429 -> 15402
21429 -> 15408
21429 -> 16858
21429 -> 16980
21429 -> 18502
21429 -> 21177
21429 -> 21221
21444 -> 20971
21448 -> 15657
21448 -> 15659
21448 -> 16790
21448 -> 16938
21448 -> 20679
21448 -> 20710
21448 -> 20712
21448 -> 20922
21448 -> 20941
21448 -> 20961
21448 -> 20963
21448 -> 20971
21562 -> 6537
21562 -> 15812
21564 -> 15812
21567 -> 6537
21567 -> 15812
21586 -> 6571
21705 -> 242
21708 -> 242
21711 -> 242
21711 -> 2628
21716 -> 1986
21716 -> 3863
21716 -> 3886
21726 -> 3863
21726 -> 3886
21733 -> 3898
21743 -> 3890
21759 -> 3892
21759 -> 9399
21759 -> 21753
21759 -> 21762
21759 -> 21764
21759 -> 21766
21759 -> 21769
21759 -> 21771
21762 -> 9413
21762 -> 11947
21762 -> 11958
21762 -> 21764
21762 -> 21766
21773 -> 3879
21773 -> 9399
21773 -> 21753
21773 -> 21764
21773 -> 21766
21773 -> 21769
21773 -> 21771
21773 -> 21776
21776 -> 9413
21776 -> 11947
21776 -> 11958
21776 -> 21764
21776 -> 21766
21778 -> 3892
21778 -> 21753
21778 -> 21764
21778 -> 21766
21778 -> 21769
21778 -> 21771
21781 -> 3869
21781 -> 21753
21781 -> 21764
21781 -> 21766
21781 -> 21769
21781 -> 21771
21784 -> 627
21784 -> 3869
21784 -> 3892
21784 -> 9399
21784 -> 11947
21784 -> 21753
21784 -> 21764
21784 -> 21766
21784 -> 21769
21784 -> 21771
21784 -> 21787
21787 -> 313
21787 -> 9413
21787 -> 21766
21789 -> 21792
21794 -> 827
21794 -> 846
21794 -> 1186
21794 -> 11956
21794 -> 16970
21794 -> 18751
21794 -> 21751
21794 -> 21757
21794 -> 21764
21794 -> 21766
21794 -> 21792
21794 -> 21797
21794 -> 21799
21794 -> 21803
21794 -> 21805
21794 -> 21810
21797 -> 21764
21797 -> 21766
21799 -> 627
21799 -> 1506
21799 -> 3898
21799 -> 3948
21799 -> 22572
21812 -> 3898
21812 -> 21764
21812 -> 21766
21812 -> 21771
21816 -> 21753
21816 -> 21769
21816 -> 21771
21816 -> 21822
21822 -> 3456
21822 -> 21899
21822 -> 21901
21824 -> 627
21824 -> 21753
21824 -> 21828
21824 -> 21830
21824 -> 21836
21828 -> 1986
21828 -> 2399
21828 -> 21899
21828 -> 21901
21836 -> 21842
21842 -> 242
21844 -> 21771
21849 -> 627
21849 -> 11958
21849 -> 21822
21849 -> 21856
21849 -> 21862
21856 -> 22058
21862 -> 21868
21868 -> 242
21889 -> 11958
21889 -> 21771
21889 -> 21828
21894 -> 313
21894 -> 1986
21894 -> 3886
21894 -> 21899
21894 -> 21901
21894 -> 21903
21899 -> 4153
21899 -> 21764
21901 -> 4153
21901 -> 21766
21905 -> 21753
21905 -> 21766
21905 -> 21769
21905 -> 21771
21905 -> 21899
21908 -> 9399
21908 -> 9413
21908 -> 11947
21908 -> 11958
21908 -> 21766
21908 -> 21899
21908 -> 21903
21912 -> 21753
21912 -> 21764
21912 -> 21769
21912 -> 21771
21912 -> 21901
21915 -> 9399
21915 -> 9413
21915 -> 11947
21915 -> 11958
21915 -> 21764
21915 -> 21901
21915 -> 21903
21919 -> 21932
21919 -> 21936
21932 -> 242
21932 -> 2874
21936 -> 3890
21936 -> 21766
21936 -> 21771
21936 -> 21899
21938 -> 11958
21938 -> 21766
21938 -> 21899
21938 -> 21903
21938 -> 21942
21938 -> 21944
21946 -> 21932
21946 -> 21949
21949 -> 3890
21949 -> 21764
21949 -> 21771
21949 -> 21901
21951 -> 11958
21951 -> 21764
21951 -> 21901
21951 -> 21903
21951 -> 21942
21951 -> 21944
21957 -> 11958
21957 -> 21766
21957 -> 21899
21957 -> 21903
21963 -> 11958
21963 -> 21764
21963 -> 21901
21963 -> 21903
21984 -> 627
21984 -> 21753
21984 -> 21764
21984 -> 21766
21984 -> 21986
21984 -> 21988
21986 -> 22036
21988 -> 21868
21992 -> 21769
22000 -> 627
22000 -> 3892
22000 -> 11956
22000 -> 21764
22000 -> 21766
22000 -> 21771
22002 -> 313
22002 -> 627
22002 -> 3869
22002 -> 3890
22002 -> 3892
22002 -> 21764
22002 -> 21766
22002 -> 21771
22005 -> 313
22005 -> 627
22005 -> 3869
22005 -> 3890
22005 -> 3892
22005 -> 21764
22005 -> 21766
22005 -> 21771
22005 -> 21932
22005 -> 21942
22005 -> 21944
22005 -> 22002
22005 -> 22009
22014 -> 313
22014 -> 627
22014 -> 3869
22014 -> 3890
22014 -> 3892
22014 -> 21764
22014 -> 21766
22014 -> 21771
22017 -> 313
22017 -> 627
22017 -> 3869
22017 -> 3890
22017 -> 3892
22017 -> 21764
22017 -> 21766
22017 -> 21771
22017 -> 21932
22017 -> 21942
22017 -> 21944
22017 -> 22009
22017 -> 22014
22021 -> 21764
22021 -> 21766
22021 -> 21771
22021 -> 21903
22021 -> 22030
22021 -> 22032
22021 -> 22034
22036 -> 21764
22036 -> 21766
22036 -> 21771
22036 -> 22045
22036 -> 22047
22036 -> 22049
22051 -> 21764
22051 -> 21766
22051 -> 21771
22051 -> 21822
22051 -> 21903
22051 -> 22030
22051 -> 22032
22051 -> 22034
22058 -> 21764
22058 -> 21766
22058 -> 21771
22058 -> 21822
22058 -> 22045
22058 -> 22047
22058 -> 22049
22065 -> 21764
22065 -> 21766
22065 -> 21771
22065 -> 21903
22065 -> 22030
22065 -> 22032
22065 -> 22034
22068 -> 21764
22068 -> 21766
22068 -> 21771
22068 -> 22045
22068 -> 22047
22068 -> 22049
22071 -> 21764
22071 -> 21766
22071 -> 21771
22071 -> 21822
22071 -> 21903
22071 -> 22030
22071 -> 22032
22071 -> 22034
22078 -> 21764
22078 -> 21766
22078 -> 21771
22078 -> 21822
22078 -> 22045
22078 -> 22047
22078 -> 22049
22085 -> 22021
22092 -> 22051
22107 -> 6576
22107 -> 6583
22107 -> 6605
22107 -> 6630
22107 -> 6632
22107 -> 7068
22107 -> 21764
22107 -> 21766
22107 -> 21771
22107 -> 22109
22107 -> 22111
22113 -> 3873
22113 -> 9399
22113 -> 9413
22113 -> 11947
22113 -> 21764
22113 -> 21766
22113 -> 21771
22119 -> 16515
22119 -> 21764
22119 -> 21766
22119 -> 21771
22153 -> 6646
22153 -> 26258
22155 -> 22156
22155 -> 22158
22161 -> 22163
22163 -> 242
22165 -> 1942
22165 -> 22163
22169 -> 9415
22169 -> 9419
22169 -> 11960
22169 -> 22172
22169 -> 22174
22169 -> 22176
22169 -> 22178
22180 -> 9415
22180 -> 9419
22180 -> 22172
22180 -> 22174
22180 -> 22176
22180 -> 22178
22180 -> 22183
22183 -> 9413
22183 -> 11947
22183 -> 11958
22185 -> 9415
22185 -> 22172
22185 -> 22174
22185 -> 22176
22185 -> 22178
22188 -> 9415
22188 -> 22172
22188 -> 22174
22188 -> 22176
22188 -> 22178
22193 -> 313
22193 -> 9413
22193 -> 11947
22195 -> 8961
22198 -> 846
22198 -> 4157
22198 -> 8961
22198 -> 11956
22198 -> 12007
22198 -> 16970
22198 -> 21803
22198 -> 21805
22198 -> 22172
22198 -> 22174
22198 -> 22202
22198 -> 22204
22202 -> 22172
22202 -> 22174
22206 -> 22172
22206 -> 22174
22206 -> 22178
22208 -> 22210
22208 -> 22215
22210 -> 22172
22210 -> 22174
22210 -> 22178
22210 -> 22448
22210 -> 22450
22210 -> 22452
22215 -> 242
22235 -> 1223
22235 -> 1726
22242 -> 22244
22242 -> 22246
22244 -> 22445
22246 -> 242
22265 -> 989
22267 -> 9415
22267 -> 22176
22267 -> 22178
22267 -> 22273
22273 -> 3456
22273 -> 22342
22273 -> 22344
22275 -> 22176
22275 -> 22279
22275 -> 22281
22275 -> 22286
22279 -> 1986
22279 -> 3886
22279 -> 22342
22279 -> 22344
22286 -> 22289
22289 -> 242
22291 -> 22178
22296 -> 11958
22296 -> 22273
22296 -> 22303
22296 -> 22308
22303 -> 22461
22308 -> 22311
22311 -> 242
22332 -> 11958
22332 -> 22178
22332 -> 22279
22337 -> 313
22337 -> 2874
22337 -> 3886
22337 -> 22342
22337 -> 22344
22337 -> 22346
22342 -> 4153
22342 -> 9413
22344 -> 4153
22344 -> 11947
22348 -> 9415
22348 -> 22174
22348 -> 22176
22348 -> 22178
22348 -> 22342
22351 -> 9413
22351 -> 9419
22351 -> 11947
22351 -> 11958
22351 -> 22174
22351 -> 22342
22351 -> 22346
22355 -> 9415
22355 -> 22172
22355 -> 22176
22355 -> 22178
22355 -> 22344
22358 -> 9413
22358 -> 9419
22358 -> 11947
22358 -> 11958
22358 -> 22172
22358 -> 22344
22358 -> 22346
22362 -> 11983
22362 -> 22365
22365 -> 22174
22365 -> 22178
22365 -> 22342
22367 -> 11949
22367 -> 11958
22367 -> 12821
22367 -> 22174
22367 -> 22342
22367 -> 22346
22371 -> 11983
22371 -> 22374
22374 -> 22172
22374 -> 22178
22374 -> 22344
22376 -> 11949
22376 -> 11958
22376 -> 12821
22376 -> 22172
22376 -> 22344
22376 -> 22346
22382 -> 11958
22382 -> 22174
22382 -> 22342
22382 -> 22346
22391 -> 22178
22391 -> 22346
22391 -> 22396
22396 -> 22342
22396 -> 22344
22398 -> 22178
22398 -> 22346
22398 -> 22396
22404 -> 22311
22407 -> 9415
22415 -> 11956
22415 -> 22172
22415 -> 22174
22415 -> 22178
22417 -> 313
22417 -> 22172
22417 -> 22174
22417 -> 22178
22420 -> 313
22420 -> 11949
22420 -> 11983
22420 -> 12821
22420 -> 22172
22420 -> 22174
22420 -> 22178
22420 -> 22417
22420 -> 22424
22426 -> 313
22426 -> 22172
22426 -> 22174
22426 -> 22178
22429 -> 313
22429 -> 11949
22429 -> 11983
22429 -> 12821
22429 -> 22172
22429 -> 22174
22429 -> 22178
22429 -> 22424
22429 -> 22426
22433 -> 22172
22433 -> 22174
22433 -> 22178
22433 -> 22346
22433 -> 22439
22433 -> 22441
22433 -> 22443
22445 -> 22172
22445 -> 22174
22445 -> 22178
22445 -> 22448
22445 -> 22450
22445 -> 22452
22454 -> 22172
22454 -> 22174
22454 -> 22178
22454 -> 22273
22454 -> 22346
22454 -> 22439
22454 -> 22441
22454 -> 22443
22461 -> 22172
22461 -> 22174
22461 -> 22178
22461 -> 22273
22461 -> 22448
22461 -> 22450
22461 -> 22452
22468 -> 22172
22468 -> 22174
22468 -> 22178
22468 -> 22346
22468 -> 22439
22468 -> 22441
22468 -> 22443
22473 -> 22172
22473 -> 22174
22473 -> 22178
22473 -> 22273
22473 -> 22346
22473 -> 22439
22473 -> 22441
22473 -> 22443
22480 -> 22172
22480 -> 22174
22480 -> 22178
22480 -> 22273
22480 -> 22448
22480 -> 22450
22480 -> 22452
22487 -> 22433
22494 -> 22454
22509 -> 4844
22509 -> 4846
22509 -> 4856
22509 -> 6630
22509 -> 6632
22509 -> 7068
22509 -> 22109
22509 -> 22511
22511 -> 6576
22511 -> 6583
22511 -> 6588
22511 -> 26307
22513 -> 9413
22513 -> 9419
22513 -> 11947
22513 -> 22172
22513 -> 22174
22513 -> 22178
22516 -> 1644
22516 -> 22172
22516 -> 22174
22516 -> 22178
22548 -> 21708
22552 -> 3898
22552 -> 21711
22559 -> 9441
22559 -> 21716
22566 -> 22616
22568 -> 21716
22568 -> 22572
22572 -> 313
22572 -> 2874
22572 -> 3886
22572 -> 21708
22572 -> 22566
22578 -> 21726
22578 -> 22581
22581 -> 3898
22581 -> 21708
22581 -> 21751
22587 -> 21751
22587 -> 22552
22595 -> 21751
22595 -> 22572
22595 -> 22597
22597 -> 315
22597 -> 3898
22597 -> 21751
22597 -> 22602
22597 -> 22604
22599 -> 3892
22599 -> 3898
22599 -> 21751
22599 -> 21762
22599 -> 22572
22599 -> 22602
22599 -> 22604
22606 -> 3879
22606 -> 3898
22606 -> 21751
22606 -> 21776
22606 -> 22572
22606 -> 22602
22606 -> 22604
22609 -> 627
22609 -> 3869
22609 -> 3892
22609 -> 3898
22609 -> 21751
22609 -> 21787
22609 -> 22572
22609 -> 22602
22609 -> 22604
22612 -> 22597
22616 -> 313
22616 -> 315
22616 -> 3886
22616 -> 3898
22616 -> 6856
22616 -> 21751
22616 -> 21894
22624 -> 21899
22624 -> 21901
22628 -> 21899
22628 -> 21901
22633 -> 3892
22633 -> 21899
22633 -> 21901
22638 -> 3869
22638 -> 21899
22638 -> 21901
22645 -> 313
22645 -> 627
22645 -> 3869
22645 -> 3890
22645 -> 3892
22645 -> 21751
22645 -> 22602
22645 -> 22604
22648 -> 313
22648 -> 627
22648 -> 3869
22648 -> 3890
22648 -> 3892
22648 -> 21751
22648 -> 22602
22648 -> 22604
22651 -> 22030
22651 -> 22032
22651 -> 22034
22651 -> 22602
22651 -> 22604
22654 -> 22045
22654 -> 22047
22654 -> 22049
22654 -> 22602
22654 -> 22604
22657 -> 21822
22657 -> 22030
22657 -> 22032
22657 -> 22034
22657 -> 22602
22657 -> 22604
22664 -> 21822
22664 -> 22045
22664 -> 22047
22664 -> 22049
22664 -> 22602
22664 -> 22604
22671 -> 22030
22671 -> 22032
22671 -> 22034
22671 -> 22602
22671 -> 22604
22674 -> 22045
22674 -> 22047
22674 -> 22049
22674 -> 22602
22674 -> 22604
22677 -> 21822
22677 -> 22030
22677 -> 22032
22677 -> 22034
22677 -> 22602
22677 -> 22604
22684 -> 21822
22684 -> 22045
22684 -> 22047
22684 -> 22049
22684 -> 22602
22684 -> 22604
22713 -> 22745
22720 -> 8955
22724 -> 13069
22724 -> 22726
22726 -> 315
22726 -> 22731
22726 -> 22733
22728 -> 11960
22728 -> 13069
22728 -> 22731
22728 -> 22733
22735 -> 13069
22735 -> 22183
22735 -> 22731
22735 -> 22733
22738 -> 13069
22738 -> 22193
22738 -> 22731
22738 -> 22733
22741 -> 22726
22745 -> 313
22745 -> 315
22745 -> 2874
22745 -> 3886
22745 -> 6856
22745 -> 22337
22751 -> 22396
22755 -> 22396
22760 -> 22396
22765 -> 22396
22772 -> 313
22772 -> 22731
22772 -> 22733
22775 -> 313
22775 -> 22731
22775 -> 22733
22778 -> 22439
22778 -> 22441
22778 -> 22443
22778 -> 22731
22778 -> 22733
22781 -> 22448
22781 -> 22450
22781 -> 22452
22781 -> 22731
22781 -> 22733
22784 -> 22273
22784 -> 22439
22784 -> 22441
22784 -> 22443
22784 -> 22731
22784 -> 22733
22791 -> 22273
22791 -> 22448
22791 -> 22450
22791 -> 22452
22791 -> 22731
22791 -> 22733
22798 -> 22439
22798 -> 22441
22798 -> 22443
22798 -> 22731
22798 -> 22733
22801 -> 22448
22801 -> 22450
22801 -> 22452
22801 -> 22731
22801 -> 22733
22804 -> 22273
22804 -> 22439
22804 -> 22441
22804 -> 22443
22804 -> 22731
22804 -> 22733
22811 -> 22273
22811 -> 22448
22811 -> 22450
22811 -> 22452
22811 -> 22731
22811 -> 22733
22833 -> 22836
22836 -> 242
22836 -> 3890
22843 -> 3863
22843 -> 3948
22843 -> 22836
22847 -> 242
22847 -> 2874
22847 -> 3863
22847 -> 3875
22854 -> 242
22854 -> 2874
22858 -> 242
22858 -> 2874
22858 -> 3863
22858 -> 3875
22866 -> 242
22866 -> 271
22866 -> 315
22866 -> 2874
22866 -> 3863
22866 -> 3890
22871 -> 242
22871 -> 271
22871 -> 315
22871 -> 2874
22871 -> 3890
22877 -> 242
22877 -> 2874
22877 -> 3890
22877 -> 21942
22877 -> 21944
22877 -> 22880
22882 -> 242
22882 -> 2874
22882 -> 22885
22887 -> 242
22887 -> 2874
22887 -> 22885
22891 -> 22895
22895 -> 242
22895 -> 315
22895 -> 2874
22895 -> 3890
22895 -> 22880
22895 -> 22900
22902 -> 22906
22906 -> 242
22906 -> 315
22906 -> 2874
22906 -> 3890
22906 -> 22880
22906 -> 22900
22911 -> 22915
22915 -> 242
22915 -> 315
22915 -> 2874
22915 -> 3890
22915 -> 22880
22915 -> 22900
22920 -> 242
22920 -> 315
22920 -> 2874
22920 -> 3863
22920 -> 3875
22920 -> 3890
22924 -> 242
22924 -> 315
22924 -> 2874
22924 -> 3875
22924 -> 3890
22930 -> 22887
22933 -> 3890
22933 -> 3892
22933 -> 21932
22933 -> 21944
22933 -> 22936
22933 -> 22938
22936 -> 3890
22936 -> 3892
22936 -> 21932
22936 -> 22942
22938 -> 21942
22938 -> 22942
22942 -> 313
22944 -> 3879
22944 -> 3890
22944 -> 21932
22944 -> 21944
22944 -> 22938
22944 -> 22947
22947 -> 3879
22947 -> 3890
22947 -> 21932
22947 -> 22942
22951 -> 3890
22951 -> 3892
22951 -> 21932
22954 -> 3892
22957 -> 3879
22957 -> 3890
22957 -> 21932
22960 -> 3879
22963 -> 3869
22963 -> 3890
22963 -> 21932
22966 -> 3869
22969 -> 2874
22969 -> 3890
22969 -> 5890
22969 -> 21932
22972 -> 2874
22972 -> 5890
22975 -> 1506
22975 -> 3890
22975 -> 5890
22975 -> 9751
22975 -> 21932
22978 -> 1506
22978 -> 5890
22978 -> 9751
22980 -> 3869
22980 -> 3890
22980 -> 21932
22980 -> 21944
22980 -> 22938
22980 -> 22983
22983 -> 3869
22983 -> 3890
22983 -> 21932
22983 -> 22942
22987 -> 3890
22987 -> 5890
22987 -> 9751
22987 -> 21932
22987 -> 21944
22987 -> 22938
22987 -> 22990
22990 -> 3890
22990 -> 5890
22990 -> 9751
22990 -> 21932
22990 -> 22942
22997 -> 627
22997 -> 3869
22997 -> 3892
22997 -> 21944
22997 -> 22938
22997 -> 23000
23000 -> 627
23000 -> 3869
23000 -> 3892
23000 -> 22942
23004 -> 5890
23004 -> 22997
23004 -> 23007
23004 -> 23010
23012 -> 5890
23012 -> 22963
23012 -> 23000
23016 -> 3869
23016 -> 21769
23016 -> 21942
23016 -> 21944
23016 -> 22552
23016 -> 23019
23019 -> 3869
23019 -> 21769
23019 -> 22552
23028 -> 22877
23028 -> 22891
23028 -> 23031
23031 -> 22891
23037 -> 315
23037 -> 3890
23037 -> 21932
23040 -> 315
23040 -> 4157
23040 -> 22836
23040 -> 23048
23048 -> 4153
23048 -> 23026
23050 -> 23048
23054 -> 21942
23054 -> 21944
23054 -> 23048
23054 -> 23058
23058 -> 315
23058 -> 23048
23063 -> 3948
23072 -> 23023
23072 -> 23026
23072 -> 23082
23072 -> 23084
23072 -> 23087
23089 -> 23023
23089 -> 23026
23089 -> 23082
23089 -> 23084
23089 -> 23087
23089 -> 23094
23094 -> 3456
23094 -> 4153
23094 -> 23026
23096 -> 23072
23100 -> 23089
23106 -> 23023
23106 -> 23026
23106 -> 23050
23106 -> 23115
23106 -> 23118
23106 -> 23120
23122 -> 23023
23122 -> 23026
23122 -> 23050
23122 -> 23094
23122 -> 23115
23122 -> 23118
23122 -> 23120
23127 -> 23106
23131 -> 23122
23137 -> 3873
23137 -> 21942
23137 -> 21944
23140 -> 16515
23155 -> 6642
23155 -> 26834
23159 -> 23161
23161 -> 242
23166 -> 954
23166 -> 23161
23175 -> 271
23175 -> 315
23175 -> 1986
23175 -> 23161
23180 -> 3095
23180 -> 23161
23183 -> 271
23183 -> 1986
23183 -> 3095
23183 -> 23161
23190 -> 23193
23193 -> 23161
23198 -> 315
23198 -> 23161
23202 -> 315
23202 -> 11949
23202 -> 12821
23202 -> 23161
23206 -> 315
23206 -> 11949
23206 -> 12821
23206 -> 23161
23210 -> 315
23210 -> 23161
23210 -> 23214
23216 -> 315
23216 -> 23161
23216 -> 23214
23220 -> 315
23220 -> 23161
23224 -> 23193
23226 -> 11945
23226 -> 11983
23226 -> 15178
23226 -> 15190
23226 -> 23229
23226 -> 23231
23226 -> 23239
23226 -> 23241
23226 -> 23243
23229 -> 313
23231 -> 11949
23231 -> 23229
23239 -> 11949
23239 -> 25864
23239 -> 26486
23243 -> 12821
23243 -> 23241
23245 -> 11945
23245 -> 11983
23245 -> 15178
23245 -> 15190
23245 -> 23229
23245 -> 23231
23245 -> 23239
23245 -> 23241
23245 -> 23243
23248 -> 23224
23248 -> 23251
23251 -> 1218
23268 -> 11945
23268 -> 11983
23268 -> 12821
23268 -> 23229
23268 -> 23231
23271 -> 11945
23271 -> 11983
23271 -> 12821
23271 -> 23229
23271 -> 23231
23277 -> 989
23279 -> 1726
23281 -> 1223
23281 -> 1726
23283 -> 989
23283 -> 12821
23283 -> 23229
23283 -> 23231
23286 -> 1726
23286 -> 12821
23286 -> 23229
23286 -> 23231
23289 -> 1223
23289 -> 1726
23289 -> 12821
23289 -> 23229
23289 -> 23231
23292 -> 9415
23292 -> 11949
23292 -> 12819
23292 -> 12821
23295 -> 4153
23295 -> 23214
23299 -> 23198
23299 -> 23202
23304 -> 23198
23307 -> 315
23307 -> 11983
23310 -> 315
23310 -> 4157
23310 -> 11945
23310 -> 23314
23314 -> 4153
23314 -> 11949
23316 -> 23314
23320 -> 4153
23324 -> 11949
23324 -> 12821
23324 -> 23314
23324 -> 23328
23328 -> 315
23328 -> 23314
23333 -> 954
23338 -> 23340
23340 -> 6576
23340 -> 6583
23340 -> 6588
23340 -> 26841
23347 -> 443
23349 -> 439
23349 -> 23347
23352 -> 11949
23352 -> 12821
23352 -> 23347
23352 -> 23355
23357 -> 703
23357 -> 23347
23359 -> 23224
23359 -> 23364
23364 -> 12821
23364 -> 23229
23364 -> 23231
23370 -> 23376
23370 -> 23378
23370 -> 23380
23382 -> 23376
23382 -> 23378
23382 -> 23380
23382 -> 23387
23387 -> 3456
23387 -> 4153
23387 -> 11949
23389 -> 23370
23393 -> 23382
23399 -> 23405
23399 -> 23407
23399 -> 23409
23411 -> 23387
23411 -> 23405
23411 -> 23407
23411 -> 23409
23416 -> 23399
23420 -> 23411
23440 -> 242
23440 -> 791
23440 -> 8967
23440 -> 9413
23440 -> 11947
23440 -> 23449
23440 -> 23451
23449 -> 989
23451 -> 989
23453 -> 23455
23455 -> 1986
23455 -> 9803
23455 -> 23765
23457 -> 23455
23459 -> 23455
23492 -> 21711
23492 -> 23503
23503 -> 791
23503 -> 3890
23503 -> 3898
23505 -> 23508
23505 -> 23510
23508 -> 313
23508 -> 3898
23508 -> 21711
23508 -> 21716
23508 -> 21751
23508 -> 23517
23508 -> 23519
23510 -> 313
23510 -> 315
23510 -> 791
23510 -> 3890
23510 -> 3898
23510 -> 21716
23537 -> 21751
23537 -> 23492
23547 -> 315
23547 -> 21751
23547 -> 23492
23549 -> 791
23549 -> 3892
23549 -> 9399
23549 -> 21751
23549 -> 21762
23549 -> 23492
23549 -> 23552
23552 -> 3892
23552 -> 21751
23552 -> 21762
23552 -> 23492
23556 -> 791
23556 -> 3879
23556 -> 9399
23556 -> 21751
23556 -> 21776
23556 -> 23492
23556 -> 23559
23559 -> 3879
23559 -> 21751
23559 -> 21776
23559 -> 23492
23563 -> 3892
23563 -> 21751
23563 -> 23492
23566 -> 3869
23566 -> 21751
23566 -> 23492
23569 -> 627
23569 -> 791
23569 -> 3869
23569 -> 3892
23569 -> 9399
23569 -> 11947
23569 -> 21751
23569 -> 21787
23569 -> 23492
23569 -> 23519
23569 -> 23572
23572 -> 627
23572 -> 791
23572 -> 3869
23572 -> 3892
23572 -> 21751
23572 -> 21787
23572 -> 23492
23572 -> 23519
23576 -> 315
23576 -> 791
23576 -> 3898
23576 -> 21751
23576 -> 23578
23576 -> 23580
23582 -> 21751
23582 -> 21822
23582 -> 23492
23582 -> 23517
23582 -> 23519
23582 -> 23588
23588 -> 315
23601 -> 313
23601 -> 315
23601 -> 788
23601 -> 791
23601 -> 2874
23601 -> 3886
23601 -> 21822
23601 -> 23517
23601 -> 23519
23606 -> 315
23606 -> 21751
23606 -> 21899
23606 -> 23492
23606 -> 23519
23609 -> 21908
23609 -> 23613
23613 -> 315
23613 -> 11958
23613 -> 21899
23613 -> 23519
23613 -> 23578
23613 -> 23580
23619 -> 21751
23619 -> 21901
23619 -> 23492
23619 -> 23517
23619 -> 23519
23622 -> 21915
23622 -> 23626
23626 -> 11958
23626 -> 21901
23626 -> 23517
23626 -> 23519
23626 -> 23578
23626 -> 23580
23632 -> 315
23632 -> 3890
23632 -> 21751
23632 -> 21899
23632 -> 21932
23632 -> 23519
23635 -> 21938
23635 -> 22009
23635 -> 23639
23639 -> 315
23639 -> 11958
23639 -> 21899
23639 -> 23519
23639 -> 23580
23642 -> 3890
23642 -> 21751
23642 -> 21901
23642 -> 21932
23642 -> 23517
23642 -> 23519
23645 -> 21951
23645 -> 22009
23645 -> 23649
23649 -> 11958
23649 -> 21901
23649 -> 23517
23649 -> 23519
23649 -> 23578
23652 -> 315
23652 -> 3890
23652 -> 21751
23652 -> 21899
23652 -> 23519
23658 -> 3890
23658 -> 21751
23658 -> 21901
23658 -> 23517
23658 -> 23519
23664 -> 21899
23664 -> 21901
23664 -> 23519
23668 -> 21899
23668 -> 21901
23668 -> 23519
23673 -> 3892
23673 -> 21899
23673 -> 21901
23673 -> 23519
23678 -> 3869
23678 -> 21899
23678 -> 21901
23678 -> 23519
23683 -> 791
23683 -> 21751
23683 -> 23492
23683 -> 23578
23683 -> 23580
23687 -> 313
23687 -> 627
23687 -> 791
23687 -> 3869
23687 -> 3890
23687 -> 3892
23687 -> 21751
23690 -> 313
23690 -> 627
23690 -> 791
23690 -> 3869
23690 -> 3890
23690 -> 3892
23690 -> 21751
23690 -> 23519
23693 -> 791
23693 -> 22030
23693 -> 22032
23693 -> 22034
23693 -> 23519
23696 -> 791
23696 -> 22045
23696 -> 22047
23696 -> 22049
23696 -> 23519
23699 -> 788
23699 -> 791
23699 -> 21822
23699 -> 22030
23699 -> 22032
23699 -> 22034
23699 -> 23519
23706 -> 788
23706 -> 791
23706 -> 21822
23706 -> 22045
23706 -> 22047
23706 -> 22049
23706 -> 23519
23713 -> 791
23713 -> 22030
23713 -> 22032
23713 -> 22034
23716 -> 791
23716 -> 22045
23716 -> 22047
23716 -> 22049
23719 -> 788
23719 -> 791
23719 -> 21822
23719 -> 22030
23719 -> 22032
23719 -> 22034
23719 -> 23519
23726 -> 788
23726 -> 791
23726 -> 21822
23726 -> 22045
23726 -> 22047
23726 -> 22049
23726 -> 23519
23753 -> 22165
23753 -> 23763
23763 -> 791
23765 -> 23768
23765 -> 23770
23768 -> 313
23768 -> 22165
23768 -> 23777
23768 -> 23779
23770 -> 313
23770 -> 315
23770 -> 791
23786 -> 23753
23793 -> 315
23793 -> 23753
23795 -> 791
23795 -> 9419
23795 -> 11960
23795 -> 23753
23795 -> 23798
23798 -> 11960
23798 -> 23753
23802 -> 791
23802 -> 9419
23802 -> 22183
23802 -> 23753
23802 -> 23805
23805 -> 22183
23805 -> 23753
23809 -> 23753
23812 -> 23753
23815 -> 791
23815 -> 9419
23815 -> 11947
23815 -> 22193
23815 -> 23753
23815 -> 23779
23815 -> 23818
23818 -> 791
23818 -> 22193
23818 -> 23753
23818 -> 23779
23822 -> 315
23822 -> 791
23822 -> 23824
23822 -> 23826
23828 -> 972
23828 -> 1223
23828 -> 1726
23828 -> 23777
23828 -> 23779
23830 -> 989
23832 -> 22273
23832 -> 23753
23832 -> 23777
23832 -> 23779
23832 -> 23838
23838 -> 315
23851 -> 313
23851 -> 315
23851 -> 788
23851 -> 791
23851 -> 2874
23851 -> 3886
23851 -> 22273
23851 -> 23777
23851 -> 23779
23856 -> 315
23856 -> 22342
23856 -> 23753
23856 -> 23779
23859 -> 22351
23859 -> 23863
23863 -> 315
23863 -> 11958
23863 -> 22342
23863 -> 23779
23863 -> 23824
23863 -> 23826
23869 -> 22344
23869 -> 23753
23869 -> 23777
23869 -> 23779
23872 -> 22358
23872 -> 23876
23876 -> 11958
23876 -> 22344
23876 -> 23777
23876 -> 23779
23876 -> 23824
23876 -> 23826
23882 -> 315
23882 -> 11983
23882 -> 22342
23882 -> 23779
23885 -> 22367
23885 -> 22424
23885 -> 23889
23889 -> 315
23889 -> 11958
23889 -> 22342
23889 -> 23779
23889 -> 23826
23892 -> 11983
23892 -> 22344
23892 -> 23777
23892 -> 23779
23895 -> 22376
23895 -> 22424
23895 -> 23899
23899 -> 11958
23899 -> 22344
23899 -> 23777
23899 -> 23779
23899 -> 23824
23902 -> 315
23902 -> 22342
23902 -> 23779
23908 -> 22344
23908 -> 23777
23908 -> 23779
23914 -> 22396
23914 -> 23779
23918 -> 22396
23918 -> 23779
23923 -> 22396
23923 -> 23779
23928 -> 22396
23928 -> 23779
23933 -> 791
23933 -> 23753
23933 -> 23824
23933 -> 23826
23937 -> 313
23937 -> 791
23940 -> 313
23940 -> 791
23940 -> 23779
23943 -> 791
23943 -> 22439
23943 -> 22441
23943 -> 22443
23943 -> 23779
23946 -> 791
23946 -> 22448
23946 -> 22450
23946 -> 22452
23946 -> 23779
23949 -> 788
23949 -> 791
23949 -> 22273
23949 -> 22439
23949 -> 22441
23949 -> 22443
23949 -> 23779
23956 -> 788
23956 -> 791
23956 -> 22273
23956 -> 22448
23956 -> 22450
23956 -> 22452
23956 -> 23779
23963 -> 791
23963 -> 22439
23963 -> 22441
23963 -> 22443
23966 -> 791
23966 -> 22448
23966 -> 22450
23966 -> 22452
23969 -> 788
23969 -> 791
23969 -> 22273
23969 -> 22439
23969 -> 22441
23969 -> 22443
23969 -> 23779
23976 -> 788
23976 -> 791
23976 -> 22273
23976 -> 22448
23976 -> 22450
23976 -> 22452
23976 -> 23779
24012 -> 3272
24014 -> 8963
24014 -> 24016
24016 -> 23455
24025 -> 242
24035 -> 313
24035 -> 9822
24035 -> 11949
24035 -> 11983
24038 -> 313
24038 -> 8967
24038 -> 9413
24038 -> 9803
24038 -> 11947
24041 -> 12007
24041 -> 24038
24057 -> 24062
24062 -> 25017
24066 -> 24074
24074 -> 25023
24078 -> 4284
24078 -> 4295
24078 -> 10873
24078 -> 11370
24078 -> 11970
24078 -> 24090
24078 -> 24092
24078 -> 24094
24078 -> 24096
24078 -> 24098
24078 -> 24100
24078 -> 24102
24078 -> 24110
24078 -> 24112
24078 -> 24114
24078 -> 24116
24078 -> 24118
24078 -> 24120
24078 -> 24126
24078 -> 24128
24078 -> 24130
24090 -> 313
24090 -> 25026
24090 -> 25031
24090 -> 25033
24090 -> 25035
24094 -> 2878
24096 -> 26591
24098 -> 2849
24102 -> 11970
24102 -> 24128
24110 -> 24206
24112 -> 2840
24114 -> 52446
24116 -> 52455
24118 -> 52452
24120 -> 3272
24128 -> 11949
24128 -> 12629
24128 -> 12821
24128 -> 26373
24130 -> 52449
24206 -> 25064
24212 -> 24206
24221 -> 10989
24272 -> 2874
24272 -> 22161
24277 -> 313
24277 -> 13030
24281 -> 12308
24283 -> 11960
24283 -> 24272
24283 -> 24286
24288 -> 22183
24288 -> 24272
24288 -> 24286
24291 -> 22193
24291 -> 24272
24291 -> 24286
24294 -> 9413
24294 -> 9419
24294 -> 11947
24294 -> 13069
24294 -> 22193
24294 -> 24291
24298 -> 24286
24302 -> 22396
24306 -> 22342
24306 -> 24311
24311 -> 271
24311 -> 1638
24311 -> 1726
24313 -> 22342
24313 -> 24311
24318 -> 22342
24326 -> 24272
24326 -> 24291
24326 -> 24300
24330 -> 24326
24334 -> 9822
24334 -> 22424
24334 -> 24330
24334 -> 24337
24337 -> 1986
24337 -> 11983
24342 -> 24344
24344 -> 24272
24344 -> 24348
24344 -> 24350
24348 -> 6384
24350 -> 3272
24386 -> 25295
24388 -> 24493
24388 -> 24495
24388 -> 24497
24390 -> 989
24390 -> 1726
24390 -> 4242
24390 -> 11014
24392 -> 8963
24392 -> 27760
24398 -> 989
24398 -> 1726
24398 -> 6384
24398 -> 8967
24398 -> 24504
24398 -> 24506
24400 -> 788
24400 -> 791
24400 -> 1223
24400 -> 1726
24400 -> 3458
24400 -> 4242
24400 -> 5969
24400 -> 6003
24400 -> 6384
24400 -> 8967
24400 -> 9751
24400 -> 18191
24400 -> 24506
24400 -> 24508
24400 -> 24516
24402 -> 9808
24406 -> 242
24406 -> 24390
24412 -> 24406
24418 -> 12819
24418 -> 24422
24424 -> 9415
24424 -> 18191
24424 -> 24427
24427 -> 9415
24427 -> 12819
24432 -> 12819
24432 -> 24435
24437 -> 6384
24459 -> 242
24475 -> 313
24475 -> 11949
24475 -> 11983
24475 -> 12640
24475 -> 22424
24475 -> 24350
24475 -> 24478
24478 -> 1223
24478 -> 6384
24478 -> 24485
24480 -> 313
24480 -> 9413
24480 -> 9419
24480 -> 11947
24480 -> 13069
24480 -> 22424
24480 -> 23295
24480 -> 24350
24480 -> 24478
24485 -> 989
24489 -> 22424
24489 -> 23455
24489 -> 24350
24489 -> 24478
24493 -> 242
24493 -> 8967
24493 -> 9413
24493 -> 11947
24493 -> 11954
24493 -> 11956
24493 -> 27757
24504 -> 242
24504 -> 8967
24504 -> 9413
24504 -> 11947
24504 -> 11954
24504 -> 11956
24504 -> 24985
24504 -> 24995
24504 -> 25000
24504 -> 26969
24506 -> 23455
24508 -> 5962
24508 -> 6021
24516 -> 23455
24557 -> 242
24557 -> 627
24557 -> 3869
24557 -> 3873
24557 -> 3879
24557 -> 5890
24557 -> 9413
24557 -> 11947
24557 -> 11954
24557 -> 11956
24557 -> 24561
24557 -> 24564
24572 -> 1506
24572 -> 21769
24572 -> 22552
24574 -> 21769
24574 -> 22552
24576 -> 1506
24576 -> 21769
24576 -> 22552
24580 -> 627
24580 -> 1506
24580 -> 3869
24580 -> 3879
24582 -> 24593
24593 -> 242
24622 -> 313
24622 -> 3869
24622 -> 3879
24622 -> 3890
24622 -> 5890
24622 -> 21932
24622 -> 21942
24622 -> 21944
24622 -> 24350
24622 -> 24625
24625 -> 313
24625 -> 3869
24625 -> 3879
24625 -> 3890
24625 -> 5890
24625 -> 22858
24625 -> 23023
24625 -> 23026
24625 -> 24350
24630 -> 313
24630 -> 3869
24630 -> 3879
24630 -> 3898
24630 -> 5890
24630 -> 9399
24630 -> 9413
24630 -> 11947
24630 -> 22572
24630 -> 24350
24633 -> 1506
24633 -> 21769
24633 -> 22552
24633 -> 24630
24985 -> 242
24985 -> 8967
24985 -> 9413
24985 -> 11947
24985 -> 11954
24985 -> 11956
24985 -> 24993
24993 -> 989
24993 -> 1726
24993 -> 3458
24995 -> 23455
24997 -> 8963
24997 -> 24995
25000 -> 23455
25009 -> 3272
25017 -> 242
25017 -> 25021
25021 -> 242
25021 -> 2804
25021 -> 2806
25021 -> 52476
25023 -> 242
25023 -> 2874
25026 -> 313
25026 -> 2874
25026 -> 11949
25026 -> 25031
25026 -> 25033
25026 -> 25035
25035 -> 4981
25038 -> 2874
25038 -> 11945
25038 -> 25033
25038 -> 25042
25038 -> 25044
25042 -> 15178
25042 -> 15190
25042 -> 23239
25042 -> 26470
25046 -> 2874
25046 -> 11970
25046 -> 25044
25064 -> 52436
25070 -> 10989
25080 -> 11983
25080 -> 22163
25085 -> 11945
25085 -> 12821
25085 -> 22178
25085 -> 23316
25085 -> 23333
25085 -> 24100
25085 -> 25031
25085 -> 25033
25085 -> 25035
25085 -> 25080
25093 -> 23214
25095 -> 23214
25097 -> 9822
25097 -> 11983
25097 -> 23336
25097 -> 25100
25100 -> 28343
25103 -> 2374
25103 -> 23248
25103 -> 25109
25109 -> 22163
25112 -> 9822
25112 -> 11983
25112 -> 25100
25115 -> 11949
25117 -> 11949
25136 -> 12725
25150 -> 9415
25150 -> 12819
25152 -> 9415
25152 -> 12819
25154 -> 9415
25154 -> 12819
25164 -> 242
25182 -> 313
25182 -> 11949
25182 -> 11983
25182 -> 12821
25182 -> 24350
25185 -> 313
25185 -> 9413
25185 -> 9419
25185 -> 11947
25185 -> 13069
25185 -> 24350
25188 -> 12007
25188 -> 25185
25202 -> 11051
25205 -> 11054
25208 -> 11051
25210 -> 11054
25216 -> 6642
25216 -> 22153
25220 -> 242
25225 -> 22552
25225 -> 23492
25236 -> 1986
25236 -> 22559
25236 -> 23505
25258 -> 3863
25258 -> 21769
25258 -> 25225
25268 -> 1986
25268 -> 3863
25268 -> 3875
25268 -> 21932
25275 -> 1986
25275 -> 9415
25275 -> 12819
25278 -> 1986
25278 -> 3863
25278 -> 3886
25278 -> 21769
25278 -> 25225
25285 -> 1986
25285 -> 9415
25285 -> 12819
25288 -> 1986
25288 -> 3863
25288 -> 3886
25288 -> 21769
25288 -> 25225
25295 -> 1223
25295 -> 1726
25295 -> 9413
25295 -> 9419
25295 -> 11947
25295 -> 11956
25295 -> 24012
25300 -> 25295
25339 -> 24815
25339 -> 25348
25339 -> 25351
25348 -> 21868
25351 -> 13069
25369 -> 14062
25375 -> 24815
25375 -> 25381
25375 -> 25383
25381 -> 21868
25383 -> 13069
25401 -> 5154
25407 -> 11445
25407 -> 11949
25407 -> 12821
25407 -> 25411
25413 -> 6632
25413 -> 11451
25413 -> 11983
25413 -> 25418
25413 -> 25423
25413 -> 25425
25413 -> 25427
25413 -> 25432
25413 -> 25434
25439 -> 9413
25439 -> 9419
25439 -> 11445
25439 -> 11947
25439 -> 25411
25443 -> 6632
25443 -> 11451
25443 -> 13069
25443 -> 25418
25443 -> 25423
25443 -> 25425
25443 -> 25427
25443 -> 25432
25443 -> 25434
25448 -> 313
25448 -> 1726
25448 -> 9413
25448 -> 9419
25448 -> 9751
25448 -> 11947
25448 -> 11949
25448 -> 11956
25448 -> 12629
25448 -> 12821
25452 -> 313
25452 -> 1726
25452 -> 9413
25452 -> 9419
25452 -> 9751
25452 -> 11947
25452 -> 11949
25452 -> 11956
25452 -> 12629
25452 -> 12821
25456 -> 8955
25456 -> 8959
25456 -> 8961
25456 -> 8967
25456 -> 9413
25456 -> 9811
25456 -> 11947
25456 -> 11956
25456 -> 12009
25456 -> 12753
25456 -> 12758
25456 -> 24137
25456 -> 24350
25456 -> 25460
25456 -> 25463
25465 -> 25468
25468 -> 2874
25468 -> 9413
25468 -> 9811
25468 -> 11947
25468 -> 11954
25468 -> 11956
25468 -> 12618
25468 -> 12623
25468 -> 24344
25503 -> 3272
25559 -> 271
25559 -> 22165
25559 -> 25566
25566 -> 25703
25568 -> 22161
25568 -> 25573
25573 -> 242
25573 -> 315
25575 -> 25568
25578 -> 25559
25585 -> 11960
25585 -> 25568
25585 -> 25588
25585 -> 25590
25585 -> 25592
25585 -> 25594
25585 -> 25596
25585 -> 25601
25585 -> 25603
25588 -> 15552
25588 -> 53182
25590 -> 15552
25590 -> 53182
25592 -> 22342
25592 -> 22344
25592 -> 25622
25592 -> 25628
25592 -> 25630
25594 -> 22342
25594 -> 22344
25594 -> 25622
25594 -> 25626
25596 -> 15552
25596 -> 53182
25601 -> 53121
25605 -> 22180
25605 -> 25608
25608 -> 11960
25608 -> 25568
25608 -> 25588
25608 -> 25590
25608 -> 25592
25608 -> 25594
25608 -> 25596
25608 -> 25601
25608 -> 25603
25613 -> 9419
25613 -> 11947
25613 -> 22193
25613 -> 23753
25613 -> 23923
25613 -> 25588
25613 -> 25590
25613 -> 25596
25613 -> 25601
25613 -> 25603
25613 -> 25616
25616 -> 22193
25616 -> 25559
25616 -> 25583
25616 -> 25588
25616 -> 25590
25616 -> 25596
25616 -> 25601
25616 -> 25603
25616 -> 25622
25616 -> 25624
25616 -> 25626
25616 -> 25628
25616 -> 25630
25624 -> 53108
25624 -> 53110
25624 -> 53113
25624 -> 53115
25626 -> 53108
25626 -> 53110
25626 -> 53113
25626 -> 53115
25628 -> 53108
25628 -> 53110
25628 -> 53113
25628 -> 53115
25628 -> 53146
25630 -> 53125
25630 -> 53136
25630 -> 53158
25630 -> 53160
25641 -> 22342
25641 -> 22344
25641 -> 25622
25641 -> 25626
25641 -> 25628
25641 -> 25630
25646 -> 22342
25646 -> 22344
25646 -> 25622
25646 -> 25626
25646 -> 25628
25646 -> 25630
25669 -> 25671
25671 -> 25566
25671 -> 25680
25674 -> 25671
25680 -> 23161
25685 -> 25573
25685 -> 25680
25685 -> 25691
25693 -> 25697
25697 -> 25680
25697 -> 25703
25703 -> 242
25703 -> 53086
25705 -> 25708
25708 -> 25566
25708 -> 25630
25708 -> 25680
25708 -> 25713
25713 -> 1726
25715 -> 25718
25718 -> 3095
25718 -> 25566
25718 -> 25630
25718 -> 25680
25718 -> 25713
25723 -> 25573
25723 -> 25680
25723 -> 25691
25723 -> 25726
25728 -> 11949
25728 -> 12821
25728 -> 25566
25728 -> 25630
25728 -> 25680
25728 -> 25713
25734 -> 11949
25734 -> 11989
25734 -> 25737
25734 -> 25739
25737 -> 313
25737 -> 11949
25739 -> 25588
25739 -> 25590
25739 -> 25596
25739 -> 25601
25739 -> 25603
25739 -> 25624
25739 -> 25626
25739 -> 25691
25739 -> 25737
25739 -> 25743
25739 -> 25745
25739 -> 25747
25745 -> 25723
25747 -> 23314
25747 -> 25624
25747 -> 25628
25747 -> 25630
25747 -> 25713
25749 -> 25588
25749 -> 25590
25749 -> 25596
25749 -> 25601
25749 -> 25603
25749 -> 25685
25749 -> 25691
25749 -> 25747
25753 -> 11949
25753 -> 12821
25753 -> 25685
25753 -> 25747
25753 -> 25749
25757 -> 25685
25757 -> 25747
25762 -> 4295
25765 -> 11949
25765 -> 12821
25765 -> 25691
25765 -> 25723
25765 -> 25737
25765 -> 25747
25765 -> 25768
25768 -> 23314
25768 -> 25626
25770 -> 11949
25770 -> 12821
25770 -> 25588
25770 -> 25590
25770 -> 25596
25770 -> 25601
25770 -> 25603
25770 -> 25723
25770 -> 25737
25770 -> 25747
25773 -> 4157
25773 -> 23314
25773 -> 25588
25773 -> 25590
25773 -> 25596
25773 -> 25601
25773 -> 25603
25773 -> 25674
25773 -> 25747
25779 -> 989
25779 -> 25588
25779 -> 25590
25779 -> 25596
25779 -> 25601
25779 -> 25603
25779 -> 25624
25779 -> 25691
25779 -> 25726
25779 -> 25737
25779 -> 25768
25782 -> 11949
25782 -> 25737
25782 -> 25779
25782 -> 25786
25786 -> 989
25786 -> 12821
25786 -> 15178
25786 -> 15190
25786 -> 23239
25786 -> 23241
25786 -> 23243
25786 -> 26373
25790 -> 1726
25790 -> 25588
25790 -> 25590
25790 -> 25596
25790 -> 25601
25790 -> 25603
25790 -> 25624
25790 -> 25691
25790 -> 25726
25790 -> 25737
25790 -> 25768
25793 -> 11949
25793 -> 25737
25793 -> 25790
25793 -> 25797
25797 -> 1726
25797 -> 12821
25797 -> 15178
25797 -> 15190
25797 -> 23239
25797 -> 23241
25797 -> 23243
25797 -> 26373
25799 -> 1726
25799 -> 25588
25799 -> 25590
25799 -> 25596
25799 -> 25601
25799 -> 25603
25799 -> 25624
25799 -> 25691
25799 -> 25726
25799 -> 25737
25799 -> 25768
25802 -> 11949
25802 -> 25737
25802 -> 25799
25802 -> 25806
25806 -> 1223
25806 -> 1726
25806 -> 12821
25806 -> 15178
25806 -> 15190
25806 -> 23239
25806 -> 23241
25806 -> 23243
25806 -> 26373
25808 -> 439
25808 -> 443
25808 -> 25588
25808 -> 25596
25808 -> 25601
25808 -> 25603
25810 -> 443
25810 -> 25588
25810 -> 25596
25810 -> 25601
25810 -> 25603
25812 -> 25745
25812 -> 25815
25815 -> 25747
25815 -> 25768
25822 -> 11949
25822 -> 12821
25822 -> 23314
25822 -> 25747
25826 -> 25747
25829 -> 25588
25829 -> 25590
25829 -> 25596
25829 -> 25601
25829 -> 25603
25829 -> 25624
25829 -> 25626
25829 -> 25691
25829 -> 25726
25829 -> 25737
25829 -> 25745
25829 -> 25747
25832 -> 4282
25832 -> 11949
25832 -> 25737
25832 -> 25829
25836 -> 25745
25836 -> 25838
25838 -> 4284
25838 -> 9751
25838 -> 25588
25838 -> 25590
25838 -> 25596
25838 -> 25601
25838 -> 25603
25838 -> 25630
25838 -> 25713
25841 -> 25588
25841 -> 25590
25841 -> 25596
25841 -> 25601
25841 -> 25603
25843 -> 398
25843 -> 25588
25843 -> 25596
25843 -> 25601
25843 -> 25603
25845 -> 398
25845 -> 25588
25845 -> 25590
25845 -> 25596
25845 -> 25601
25845 -> 25603
25845 -> 25726
25845 -> 25768
25848 -> 25691
25848 -> 25743
25850 -> 25855
25855 -> 242
25855 -> 25601
25855 -> 25861
25861 -> 25864
25864 -> 242
25864 -> 26498
25867 -> 25596
25869 -> 25590
25869 -> 25630
25872 -> 25590
25885 -> 25603
25887 -> 25588
25889 -> 25891
25902 -> 2874
25902 -> 11970
25902 -> 25908
25910 -> 2874
25910 -> 11945
25910 -> 25033
25910 -> 25042
25910 -> 25908
25914 -> 2874
25914 -> 11970
25914 -> 25908
25925 -> 2874
25925 -> 11945
25925 -> 25033
25925 -> 25908
25935 -> 25908
25955 -> 12623
25968 -> 791
25968 -> 25972
25972 -> 989
25977 -> 791
25977 -> 23455
25979 -> 8963
25979 -> 25981
25981 -> 791
25981 -> 23455
25984 -> 791
25984 -> 23455
25990 -> 242
26006 -> 1726
26008 -> 313
26008 -> 791
26008 -> 9822
26008 -> 11949
26008 -> 11983
26008 -> 24350
26008 -> 26006
26012 -> 313
26012 -> 791
26012 -> 972
26012 -> 9413
26012 -> 11947
26012 -> 23763
26012 -> 23768
26012 -> 24350
26012 -> 26006
26012 -> 26015
26017 -> 12007
26017 -> 26012
26025 -> 10998
26248 -> 6537
26248 -> 26250
26250 -> 242
26250 -> 26284
26258 -> 26250
26261 -> 6537
26261 -> 26250
26286 -> 6571
26307 -> 6597
26307 -> 6599
26307 -> 6601
26307 -> 6605
26307 -> 9413
26307 -> 9419
26307 -> 11947
26313 -> 6663
26313 -> 6667
26313 -> 6669
26313 -> 6671
26313 -> 26316
26316 -> 831
26316 -> 833
26316 -> 835
26316 -> 846
26316 -> 2968
26316 -> 3884
26316 -> 4866
26316 -> 6667
26316 -> 6676
26316 -> 6678
26316 -> 6680
26316 -> 6689
26316 -> 21581
26316 -> 23455
26353 -> 12629
26353 -> 12821
26373 -> 11949
26373 -> 25737
26388 -> 11970
26388 -> 26438
26390 -> 11970
26390 -> 26393
26393 -> 1761
26393 -> 2612
26393 -> 26397
26397 -> 1218
26397 -> 15178
26397 -> 15190
26397 -> 23239
26397 -> 23243
26397 -> 26470
26406 -> 4284
26406 -> 4295
26406 -> 9751
26418 -> 1726
26418 -> 15178
26418 -> 15190
26418 -> 23239
26418 -> 23243
26420 -> 1223
26420 -> 1726
26420 -> 15178
26420 -> 15190
26420 -> 23239
26420 -> 23243
26426 -> 15178
26426 -> 15190
26426 -> 23239
26426 -> 23241
26426 -> 23243
26428 -> 12821
26428 -> 26426
26431 -> 15178
26431 -> 15190
26431 -> 23239
26431 -> 23241
26431 -> 23243
26433 -> 12821
26433 -> 26431
26438 -> 2238
26438 -> 2612
26438 -> 26397
26445 -> 11970
26445 -> 26448
26448 -> 26393
26452 -> 11970
26452 -> 26455
26455 -> 1889
26455 -> 2612
26455 -> 26397
26462 -> 8955
26462 -> 9415
26462 -> 11949
26462 -> 12821
26462 -> 25559
26465 -> 4295
26465 -> 9751
26465 -> 26388
26470 -> 12629
26470 -> 23241
26473 -> 4284
26473 -> 9751
26473 -> 26452
26476 -> 4284
26476 -> 9751
26476 -> 26455
26478 -> 26483
26483 -> 242
26483 -> 11949
26483 -> 23243
26483 -> 25864
26483 -> 26579
26486 -> 242
26496 -> 15552
26496 -> 26498
26501 -> 10989
26503 -> 11970
26503 -> 26397
26516 -> 11949
26516 -> 12821
26516 -> 23376
26516 -> 23378
26516 -> 23380
26519 -> 11949
26519 -> 12821
26519 -> 23376
26519 -> 23378
26519 -> 23380
26519 -> 23387
26524 -> 26516
26528 -> 26519
26534 -> 11949
26534 -> 12629
26534 -> 12821
26534 -> 23405
26534 -> 23407
26534 -> 23409
26537 -> 11949
26537 -> 12629
26537 -> 12821
26537 -> 23387
26537 -> 23405
26537 -> 23407
26537 -> 23409
26542 -> 26534
26546 -> 26537
26563 -> 10989
26566 -> 10989
26579 -> 23241
26579 -> 23243
26579 -> 26498
26583 -> 23241
26585 -> 15552
26585 -> 23241
26585 -> 26498
26585 -> 26579
26587 -> 10989
26591 -> 23161
26594 -> 10989
26597 -> 26503
26601 -> 23239
26601 -> 26603
26601 -> 26611
26603 -> 242
26611 -> 25864
26613 -> 15178
26615 -> 15190
26615 -> 23241
26615 -> 26498
26618 -> 10989
26620 -> 26478
26620 -> 26611
26620 -> 26623
26623 -> 242
26628 -> 15178
26630 -> 15190
26630 -> 23241
26630 -> 26498
26633 -> 10989
26635 -> 11970
26637 -> 11989
26640 -> 4282
26643 -> 26390
26647 -> 10989
26650 -> 26445
26654 -> 10989
26657 -> 26388
26660 -> 10989
26663 -> 26452
26666 -> 10989
26669 -> 26412
26673 -> 26409
26677 -> 4295
26680 -> 26406
26684 -> 4284
26686 -> 26418
26689 -> 26420
26692 -> 25786
26695 -> 25797
26698 -> 25806
26701 -> 26473
26704 -> 10989
26706 -> 26462
26710 -> 12821
26713 -> 10989
26717 -> 10989
26721 -> 11949
26723 -> 26357
26727 -> 26360
26731 -> 26363
26736 -> 10989
26740 -> 10989
26743 -> 9822
26745 -> 23355
26747 -> 26371
26750 -> 24102
26755 -> 10989
26761 -> 12821
26761 -> 23241
26763 -> 10989
26796 -> 6537
26796 -> 26798
26798 -> 242
26798 -> 21581
26803 -> 26798
26806 -> 6537
26806 -> 26798
26823 -> 6571
26834 -> 6646
26834 -> 26803
26841 -> 6597
26841 -> 6599
26841 -> 6601
26841 -> 6605
26841 -> 11949
26841 -> 12821
26847 -> 6663
26847 -> 6667
26847 -> 6669
26847 -> 6671
26847 -> 26850
26850 -> 831
26850 -> 833
26850 -> 835
26850 -> 846
26850 -> 2968
26850 -> 3884
26850 -> 6667
26850 -> 6676
26850 -> 6678
26850 -> 6680
26850 -> 6689
26850 -> 11983
26870 -> 26873
26873 -> 242
26873 -> 989
26873 -> 8967
26873 -> 9413
26873 -> 9415
26873 -> 9820
26873 -> 12819
26890 -> 26893
26893 -> 12623
26898 -> 25968
26902 -> 25972
26906 -> 9415
26906 -> 12819
26909 -> 791
26909 -> 9413
26909 -> 11947
26909 -> 25460
26909 -> 25977
26909 -> 26055
26914 -> 12618
26914 -> 26906
26914 -> 26919
26919 -> 242
26932 -> 24137
26934 -> 11987
26934 -> 12718
26937 -> 8961
26937 -> 11998
26940 -> 9413
26940 -> 12007
26940 -> 26937
26969 -> 989
26969 -> 1726
26969 -> 11014
26969 -> 26976
26969 -> 26981
26969 -> 26983
26969 -> 26987
26969 -> 26990
26969 -> 26992
26972 -> 8963
26972 -> 24516
26976 -> 788
26976 -> 1726
26981 -> 242
26983 -> 1726
26987 -> 989
26987 -> 1726
26990 -> 1726
26992 -> 791
26992 -> 989
26992 -> 1726
26992 -> 6384
27036 -> 3272
27077 -> 8963
27077 -> 27075
27081 -> 24427
27088 -> 8963
27088 -> 27086
27092 -> 6273
27092 -> 8961
27092 -> 8963
27092 -> 13069
27092 -> 26201
27092 -> 27088
27092 -> 27098
27098 -> 22311
27118 -> 242
27118 -> 8961
27118 -> 8967
27118 -> 13069
27135 -> 11987
27138 -> 8961
27162 -> 21708
27162 -> 27168
27168 -> 627
27168 -> 53229
27170 -> 21711
27170 -> 27168
27175 -> 21711
27175 -> 21751
27175 -> 27183
27175 -> 27185
27175 -> 27187
27187 -> 242
27187 -> 315
27187 -> 53248
27189 -> 9399
27189 -> 9413
27189 -> 11947
27189 -> 21711
27189 -> 21751
27189 -> 24561
27189 -> 27168
27189 -> 27192
27192 -> 627
27192 -> 3873
27192 -> 21751
27192 -> 21899
27192 -> 21901
27192 -> 27199
27192 -> 27203
27192 -> 27205
27194 -> 627
27194 -> 3873
27194 -> 3892
27194 -> 21751
27194 -> 21899
27194 -> 21901
27194 -> 27199
27194 -> 27201
27194 -> 27203
27194 -> 27205
27201 -> 53266
27201 -> 53268
27201 -> 53271
27201 -> 53273
27203 -> 53266
27203 -> 53268
27203 -> 53271
27203 -> 53273
27203 -> 53305
27205 -> 53283
27205 -> 53294
27205 -> 53317
27205 -> 53319
27207 -> 27175
27210 -> 21751
27210 -> 27170
27216 -> 21899
27216 -> 21901
27216 -> 27199
27216 -> 27201
27221 -> 627
27221 -> 3869
27221 -> 3873
27221 -> 21751
27221 -> 21899
27221 -> 21901
27221 -> 27199
27221 -> 27201
27221 -> 27203
27221 -> 27205
27246 -> 27249
27249 -> 242
27249 -> 27168
27257 -> 242
27257 -> 27187
27257 -> 27266
27268 -> 242
27268 -> 27273
27273 -> 627
27273 -> 53229
27275 -> 242
27275 -> 2874
27275 -> 27168
27275 -> 27205
27280 -> 242
27280 -> 27187
27280 -> 27266
27280 -> 27283
27286 -> 3892
27286 -> 27201
27286 -> 27266
27286 -> 27283
27286 -> 27289
27286 -> 27291
27286 -> 27296
27286 -> 27298
27286 -> 27300
27286 -> 27302
27286 -> 27304
27286 -> 27306
27286 -> 27308
27289 -> 313
27289 -> 27266
27291 -> 27280
27296 -> 53279
27298 -> 15552
27298 -> 53182
27300 -> 15552
27300 -> 53182
27302 -> 15552
27302 -> 53182
27304 -> 53266
27304 -> 53268
27304 -> 53271
27304 -> 53273
27306 -> 2874
27306 -> 27205
27306 -> 27344
27310 -> 27257
27310 -> 27266
27310 -> 27296
27310 -> 27298
27310 -> 27300
27310 -> 27302
27310 -> 27306
27310 -> 27308
27314 -> 21942
27314 -> 21944
27314 -> 24926
27314 -> 27257
27314 -> 27310
27322 -> 2874
27322 -> 24926
27322 -> 27257
27327 -> 627
27327 -> 3869
27327 -> 3892
27327 -> 21942
27327 -> 21944
27327 -> 27289
27327 -> 27296
27327 -> 27298
27327 -> 27300
27327 -> 27302
27327 -> 27308
27330 -> 5890
27330 -> 21942
27330 -> 21944
27330 -> 27280
27330 -> 27289
27330 -> 27296
27330 -> 27298
27330 -> 27300
27330 -> 27302
27330 -> 27306
27330 -> 27308
27333 -> 3869
27333 -> 21942
27333 -> 21944
27333 -> 27280
27333 -> 27289
27333 -> 27296
27333 -> 27298
27333 -> 27300
27333 -> 27302
27333 -> 27306
27333 -> 27308
27336 -> 27338
27338 -> 3890
27338 -> 27296
27338 -> 27298
27338 -> 27300
27338 -> 27302
27338 -> 27308
27341 -> 27201
27341 -> 27344
27344 -> 2206
27344 -> 27266
27348 -> 4157
27348 -> 27249
27348 -> 27296
27348 -> 27298
27348 -> 27300
27348 -> 27302
27348 -> 27306
27348 -> 27308
27348 -> 27344
27352 -> 24883
27352 -> 27291
27356 -> 3892
27356 -> 27306
27356 -> 27341
27360 -> 24900
27360 -> 27291
27364 -> 5890
27364 -> 27205
27364 -> 27296
27364 -> 27298
27364 -> 27300
27364 -> 27302
27364 -> 27308
27367 -> 24905
27367 -> 27291
27370 -> 1506
27370 -> 5890
27370 -> 27306
27370 -> 27341
27372 -> 24894
27372 -> 27291
27376 -> 3869
27376 -> 27205
27376 -> 27296
27376 -> 27298
27376 -> 27300
27376 -> 27302
27376 -> 27308
27379 -> 24889
27379 -> 27291
27383 -> 627
27383 -> 3879
27383 -> 27356
27387 -> 3869
27387 -> 27170
27387 -> 27192
27387 -> 27266
27387 -> 27296
27387 -> 27298
27387 -> 27300
27387 -> 27302
27387 -> 27308
27390 -> 3869
27390 -> 21769
27390 -> 21942
27390 -> 21944
27390 -> 27170
27390 -> 27296
27390 -> 27298
27390 -> 27300
27390 -> 27302
27390 -> 27308
27390 -> 27387
27394 -> 5890
27394 -> 21942
27394 -> 23007
27394 -> 23010
27394 -> 27289
27394 -> 27327
27398 -> 2874
27398 -> 27306
27404 -> 21942
27404 -> 21944
27404 -> 27306
27404 -> 27344
27408 -> 627
27408 -> 3879
27408 -> 27201
27408 -> 27266
27408 -> 27283
27408 -> 27289
27408 -> 27291
27408 -> 27296
27408 -> 27298
27408 -> 27300
27408 -> 27302
27408 -> 27304
27408 -> 27306
27408 -> 27308
27411 -> 627
27411 -> 3879
27411 -> 21942
27411 -> 21944
27411 -> 27201
27411 -> 27280
27411 -> 27289
27411 -> 27304
27411 -> 27306
27411 -> 27408
27418 -> 3456
27418 -> 4153
27418 -> 27266
27424 -> 3892
27424 -> 21942
27424 -> 21944
27424 -> 27249
27424 -> 27266
27424 -> 27286
27424 -> 27289
27424 -> 27306
27424 -> 27341
27428 -> 23082
27428 -> 23084
27428 -> 23087
27428 -> 27266
27428 -> 27341
27431 -> 23082
27431 -> 23084
27431 -> 23087
27431 -> 27266
27431 -> 27341
27431 -> 27418
27437 -> 27428
27441 -> 27431
27447 -> 23115
27447 -> 23118
27447 -> 23120
27447 -> 27266
27447 -> 27306
27447 -> 27341
27450 -> 23115
27450 -> 23118
27450 -> 23120
27450 -> 27266
27450 -> 27306
27450 -> 27341
27450 -> 27418
27455 -> 27447
27459 -> 27450
27465 -> 16515
27465 -> 27296
27465 -> 27298
27465 -> 27302
27465 -> 27308
27467 -> 3873
27467 -> 27283
27467 -> 27296
27467 -> 27298
27467 -> 27300
27467 -> 27302
27467 -> 27308
27467 -> 27341
27543 -> 991
27543 -> 1190
27546 -> 242
27546 -> 11945
27546 -> 11949
27546 -> 24100
27565 -> 1726
27565 -> 4295
27565 -> 10873
27565 -> 11082
27565 -> 11370
27565 -> 25503
27582 -> 10873
27582 -> 11370
27582 -> 24120
27588 -> 11949
27588 -> 12629
27588 -> 12821
27593 -> 11949
27593 -> 12629
27593 -> 12821
27600 -> 989
27600 -> 11949
27600 -> 12629
27600 -> 12821
27600 -> 24126
27612 -> 989
27612 -> 1726
27612 -> 4295
27612 -> 11945
27612 -> 11970
27612 -> 24100
27612 -> 25031
27612 -> 25042
27612 -> 26388
27612 -> 27565
27612 -> 27582
27612 -> 27588
27612 -> 27628
27628 -> 989
27628 -> 1225
27628 -> 1726
27628 -> 25009
27628 -> 27036
27630 -> 989
27630 -> 1223
27630 -> 1225
27630 -> 4295
27630 -> 11949
27630 -> 12629
27630 -> 12821
27630 -> 24100
27630 -> 26388
27630 -> 27582
27630 -> 27588
27630 -> 27593
27630 -> 27628
27658 -> 24062
27665 -> 24074
27672 -> 2874
27672 -> 11945
27672 -> 25033
27672 -> 27677
27677 -> 24090
27677 -> 24092
27677 -> 24094
27677 -> 24098
27677 -> 24112
27677 -> 24114
27677 -> 24116
27677 -> 24118
27677 -> 24130
27677 -> 24212
27677 -> 27546
27677 -> 27600
27677 -> 27612
27677 -> 27630
27677 -> 27641
27677 -> 27643
27677 -> 27645
27677 -> 27647
27679 -> 2874
27679 -> 11945
27679 -> 25033
27679 -> 27677
27686 -> 2874
27686 -> 11970
27686 -> 27677
27692 -> 2874
27692 -> 11945
27692 -> 25033
27692 -> 25042
27692 -> 27677
27696 -> 2874
27696 -> 11945
27696 -> 25033
27696 -> 27677
27702 -> 2874
27702 -> 11970
27702 -> 27677
27707 -> 27677
27731 -> 27677
27757 -> 972
27757 -> 989
27760 -> 23455
27763 -> 23455
27801 -> 27804
27804 -> 242
27804 -> 846
27827 -> 831
27842 -> 242
27860 -> 27833
27860 -> 27864
27886 -> 5348
27895 -> 27899
27895 -> 27904
27899 -> 1186
27899 -> 27842
27904 -> 242
27917 -> 831
27917 -> 833
27917 -> 846
27917 -> 1340
27917 -> 1351
27917 -> 1384
27917 -> 2874
27917 -> 27804
27917 -> 27932
27917 -> 27934
27932 -> 831
27932 -> 846
27932 -> 27860
27934 -> 833
27934 -> 835
27934 -> 1351
27934 -> 1384
27934 -> 12331
27934 -> 27827
27934 -> 27932
27934 -> 27945
27945 -> 831
27945 -> 14567
27945 -> 27960
27970 -> 242
27974 -> 242
27979 -> 4875
27984 -> 4870
27986 -> 27988
27999 -> 27904
27999 -> 28001
28001 -> 242
28016 -> 27833
28016 -> 27864
28020 -> 833
28020 -> 835
28020 -> 3884
28020 -> 27807
28020 -> 27830
28020 -> 27833
28020 -> 27970
28039 -> 28001
28042 -> 3884
28042 -> 27830
28042 -> 28016
28042 -> 28020
28042 -> 28049
28042 -> 28051
28042 -> 28054
28049 -> 45258
28049 -> 46018
28051 -> 46026
28084 -> 27904
28084 -> 28088
28088 -> 28095
28088 -> 28098
28095 -> 1183
28095 -> 27842
28098 -> 42940
28125 -> 10787
28125 -> 23455
28131 -> 956
28131 -> 10787
28131 -> 27807
28131 -> 27860
28133 -> 831
28133 -> 835
28133 -> 846
28133 -> 1183
28133 -> 2874
28133 -> 12082
28133 -> 12331
28133 -> 14389
28133 -> 27801
28133 -> 27833
28133 -> 27970
28133 -> 28139
28133 -> 28142
28133 -> 28144
28133 -> 28146
28133 -> 28148
28139 -> 833
28139 -> 8012
28139 -> 8534
28142 -> 315
28142 -> 833
28144 -> 827
28144 -> 831
28144 -> 956
28144 -> 8994
28144 -> 12142
28144 -> 27801
28144 -> 27807
28144 -> 27833
28144 -> 27970
28146 -> 833
28146 -> 835
28146 -> 956
28146 -> 1726
28146 -> 27807
28146 -> 27827
28146 -> 27860
28148 -> 833
28148 -> 1223
28148 -> 1726
28166 -> 5348
28187 -> 28190
28190 -> 27904
28190 -> 28195
28195 -> 28098
28195 -> 28201
28201 -> 28208
28208 -> 27842
28229 -> 831
28229 -> 846
28229 -> 1183
28229 -> 2874
28229 -> 3884
28229 -> 10777
28229 -> 12082
28229 -> 27801
28229 -> 27807
28229 -> 27830
28229 -> 27833
28229 -> 28235
28229 -> 28237
28229 -> 28239
28229 -> 28241
28229 -> 28244
28229 -> 28248
28235 -> 831
28235 -> 833
28235 -> 835
28235 -> 846
28235 -> 8012
28235 -> 10464
28235 -> 12331
28235 -> 14389
28235 -> 27801
28235 -> 27860
28237 -> 835
28237 -> 27827
28237 -> 28254
28239 -> 833
28239 -> 3884
28239 -> 10464
28239 -> 10777
28239 -> 15021
28239 -> 27807
28239 -> 27830
28239 -> 27860
28239 -> 28049
28239 -> 28051
28239 -> 28054
28241 -> 833
28241 -> 10464
28241 -> 10777
28241 -> 15021
28241 -> 27830
28244 -> 833
28244 -> 835
28244 -> 10777
28244 -> 15021
28244 -> 27807
28244 -> 27830
28244 -> 27860
28248 -> 12082
28248 -> 27833
28248 -> 27970
28254 -> 27807
28254 -> 27860
28293 -> 27858
28293 -> 28039
28293 -> 28297
28297 -> 27842
28297 -> 27858
28319 -> 28006
28319 -> 28012
28319 -> 28229
28336 -> 242
28339 -> 1726
28339 -> 28343
28343 -> 52638
28347 -> 242
28350 -> 28354
28354 -> 1223
28354 -> 1726
28354 -> 28343
28362 -> 242
28365 -> 1726
28365 -> 28343
28372 -> 28376
28376 -> 989
28376 -> 28343
28380 -> 242
28383 -> 28387
28387 -> 1726
28387 -> 28343
28405 -> 242
28407 -> 1843
28407 -> 10483
28407 -> 28414
28407 -> 28418
28414 -> 28439
28418 -> 28428
28420 -> 1843
28420 -> 10478
28420 -> 28414
28420 -> 28418
28428 -> 242
28433 -> 1218
28439 -> 242
28442 -> 10277
28442 -> 28401
28448 -> 242
28450 -> 27864
28450 -> 28461
28461 -> 785
28463 -> 2945
28463 -> 27864
28463 -> 28461
28472 -> 831
28472 -> 833
28472 -> 835
28472 -> 846
28472 -> 12348
28472 -> 27864
28472 -> 28461
28472 -> 28486
28472 -> 28490
28486 -> 242
28492 -> 27864
28492 -> 28461
28492 -> 28499
28492 -> 28501
28492 -> 28506
28492 -> 28508
28492 -> 28513
28508 -> 2206
28508 -> 28684
28513 -> 28715
28515 -> 1340
28515 -> 28450
28515 -> 28499
28515 -> 28501
28515 -> 28506
28515 -> 28508
28515 -> 28524
28515 -> 28526
28528 -> 2399
28528 -> 27864
28528 -> 28450
28528 -> 28461
28533 -> 2399
28533 -> 2947
28533 -> 2949
28533 -> 28463
28533 -> 28513
28533 -> 28539
28596 -> 242
28599 -> 28603
28605 -> 242
28605 -> 10787
28605 -> 28603
28605 -> 28612
28605 -> 28619
28605 -> 28621
28605 -> 28623
28605 -> 28626
28623 -> 14877
28629 -> 242
28629 -> 28626
28633 -> 1353
28633 -> 1355
28633 -> 27960
28633 -> 28612
28633 -> 28629
28633 -> 28636
28633 -> 28638
28633 -> 28643
28638 -> 28461
28638 -> 28603
28638 -> 28636
28638 -> 28669
28638 -> 28781
28648 -> 19290
28648 -> 28653
28655 -> 846
28655 -> 12348
28655 -> 14774
28655 -> 28653
28664 -> 313
28664 -> 28612
28664 -> 28619
28664 -> 28667
28664 -> 28669
28667 -> 28721
28669 -> 242
28669 -> 28778
28671 -> 28513
28671 -> 28603
28671 -> 28674
28671 -> 28676
28674 -> 28603
28674 -> 28621
28674 -> 28684
28674 -> 28686
28674 -> 28688
28674 -> 28696
28680 -> 28603
28680 -> 28621
28680 -> 28623
28680 -> 28684
28680 -> 28686
28680 -> 28688
28684 -> 28621
28684 -> 28686
28684 -> 28688
28696 -> 28701
28705 -> 28708
28708 -> 831
28708 -> 846
28708 -> 14565
28708 -> 28603
28708 -> 28619
28708 -> 28621
28708 -> 28684
28708 -> 28701
28715 -> 831
28715 -> 846
28715 -> 28603
28715 -> 28621
28715 -> 28684
28715 -> 28701
28723 -> 10904
28726 -> 12082
28726 -> 18133
28726 -> 28513
28726 -> 28603
28726 -> 28636
28726 -> 28653
28726 -> 28731
28731 -> 242
28753 -> 28605
28789 -> 313
28789 -> 785
28789 -> 793
28789 -> 28793
28789 -> 28795
28793 -> 313
28793 -> 3458
28797 -> 28636
28799 -> 28636
28804 -> 10904
28807 -> 785
28807 -> 28812
28812 -> 242
28826 -> 28669
28844 -> 242
28844 -> 1183
28844 -> 28629
28844 -> 28664
28844 -> 28853
28853 -> 28680
28853 -> 28684
28855 -> 242
28855 -> 1183
28855 -> 28401
28855 -> 28629
28855 -> 28664
28855 -> 28853
28865 -> 2206
28865 -> 28461
28865 -> 28684
28870 -> 10904
28873 -> 28865
28873 -> 28879
28879 -> 242
28893 -> 28844
28921 -> 242
28929 -> 15178
28929 -> 15190
28929 -> 28931
28931 -> 1934
28931 -> 1958
28931 -> 28619
28931 -> 28708
28931 -> 28795
28931 -> 28963
28931 -> 28965
28931 -> 28967
28931 -> 28972
28931 -> 28974
28931 -> 28976
28931 -> 28979
28951 -> 242
28965 -> 28450
28965 -> 28983
28976 -> 28983
28981 -> 28636
28983 -> 28461
28983 -> 28789
28983 -> 28988
28988 -> 9822
28988 -> 11983
28988 -> 11989
28988 -> 23245
28988 -> 23262
29011 -> 242
29013 -> 2206
29013 -> 29018
29013 -> 29026
29018 -> 242
29026 -> 242
29026 -> 271
29026 -> 958
29026 -> 1942
29028 -> 29031
29031 -> 998
29034 -> 2206
29034 -> 29039
29034 -> 29047
29039 -> 242
29047 -> 242
29047 -> 271
29047 -> 1942
29047 -> 2115
29047 -> 2129
29049 -> 29052
29052 -> 2129
29060 -> 242
29062 -> 29026
29062 -> 29067
29067 -> 242
29072 -> 411
29072 -> 29031
29076 -> 29047
29076 -> 29081
29081 -> 242
29086 -> 411
29086 -> 29052
29132 -> 5348
29169 -> 5348
29187 -> 5348
29198 -> 242
29198 -> 1183
29198 -> 28629
29198 -> 28664
29198 -> 29211
29211 -> 831
29211 -> 846
29211 -> 5575
29211 -> 12142
29211 -> 28680
29211 -> 28684
29213 -> 242
29213 -> 1183
29213 -> 28401
29213 -> 28629
29213 -> 28664
29213 -> 29211
29221 -> 242
29228 -> 28633
29228 -> 29221
29232 -> 28648
29241 -> 28508
29241 -> 29247
29247 -> 5575
29269 -> 10904
29272 -> 28461
29272 -> 28508
29272 -> 29277
29277 -> 242
29299 -> 29198
29322 -> 242
29328 -> 28450
29328 -> 28499
29328 -> 28501
29328 -> 29335
29328 -> 29340
29328 -> 29342
29328 -> 29344
29335 -> 242
29335 -> 1351
29335 -> 1384
29335 -> 10787
29335 -> 28499
29335 -> 28501
29335 -> 28508
29335 -> 28603
29335 -> 29360
29340 -> 1384
29340 -> 28603
29360 -> 242
29388 -> 242
29392 -> 27864
29392 -> 28450
29392 -> 28461
29392 -> 28499
29392 -> 28501
29392 -> 29335
29392 -> 29340
29392 -> 29342
29392 -> 29344
29404 -> 242
29411 -> 1183
29411 -> 28472
29411 -> 28499
29411 -> 28501
29411 -> 28506
29411 -> 29335
29411 -> 29340
29411 -> 29342
29411 -> 29344
29422 -> 242
29428 -> 2947
29428 -> 2949
29428 -> 28463
29428 -> 28499
29428 -> 28501
29428 -> 28506
29428 -> 28513
29428 -> 28539
29428 -> 29335
29428 -> 29340
29428 -> 29342
29428 -> 29344
29440 -> 242
29446 -> 29449
29446 -> 29451
29449 -> 27864
29449 -> 28461
29449 -> 28499
29449 -> 28501
29449 -> 28508
29449 -> 29241
29451 -> 27864
29451 -> 28461
29451 -> 28499
29451 -> 28501
29451 -> 28506
29451 -> 28508
29451 -> 28513
29563 -> 242
29563 -> 846
29563 -> 2804
29563 -> 2806
29585 -> 28972
29588 -> 29590
29592 -> 29594
29596 -> 627
29596 -> 5829
29596 -> 5871
29596 -> 29608
29608 -> 627
29608 -> 5871
29608 -> 28972
29608 -> 29621
29621 -> 242
29621 -> 5877
29623 -> 827
29623 -> 831
29623 -> 12082
29623 -> 29590
29623 -> 29634
29636 -> 29594
29642 -> 2804
29645 -> 2836
29647 -> 2840
29649 -> 2878
29649 -> 29634
29649 -> 29657
29649 -> 29659
29649 -> 29661
29649 -> 29663
29649 -> 29665
29649 -> 29667
29657 -> 835
29657 -> 30815
29657 -> 30842
29657 -> 30907
29657 -> 30909
29659 -> 2849
29659 -> 29679
29661 -> 30845
29679 -> 835
29679 -> 3863
29679 -> 3890
29679 -> 30815
29679 -> 30819
29679 -> 30825
29679 -> 30842
29679 -> 30914
29679 -> 30916
29683 -> 1190
29683 -> 3879
29683 -> 5875
29683 -> 5877
29683 -> 14877
29683 -> 15190
29683 -> 18515
29683 -> 19230
29683 -> 29659
29683 -> 29693
29683 -> 29695
29683 -> 29697
29683 -> 29699
29683 -> 29713
29683 -> 29720
29683 -> 29722
29683 -> 29727
29683 -> 29729
29683 -> 29731
29683 -> 29733
29683 -> 29736
29683 -> 29738
29683 -> 29747
29683 -> 29749
29683 -> 29751
29683 -> 29753
29683 -> 29755
29683 -> 29757
29697 -> 1223
29697 -> 1726
29697 -> 3869
29697 -> 5653
29697 -> 5658
29697 -> 5871
29697 -> 5875
29697 -> 29753
29697 -> 30110
29697 -> 30147
29697 -> 30519
29713 -> 242
29716 -> 5875
29716 -> 12346
29716 -> 29720
29720 -> 627
29720 -> 3863
29720 -> 5871
29722 -> 403
29722 -> 788
29722 -> 1726
29722 -> 3865
29722 -> 3879
29722 -> 3892
29722 -> 5174
29722 -> 5662
29722 -> 5862
29722 -> 5875
29722 -> 5877
29722 -> 29753
29722 -> 30121
29722 -> 30137
29722 -> 30147
29722 -> 30519
29722 -> 30596
29729 -> 3879
29729 -> 5890
29729 -> 29753
29729 -> 34825
29731 -> 34810
29733 -> 3879
29733 -> 5875
29733 -> 5877
29733 -> 29753
29733 -> 30519
29733 -> 30522
29747 -> 3879
29747 -> 5875
29747 -> 5877
29747 -> 29753
29747 -> 30526
29749 -> 3863
29749 -> 3890
29749 -> 29753
29749 -> 30815
29749 -> 30819
29749 -> 30825
29749 -> 30827
29749 -> 30829
29755 -> 313
29755 -> 3863
29755 -> 3898
29755 -> 29661
29755 -> 30815
29755 -> 30819
29755 -> 30842
29755 -> 30845
29759 -> 1190
29759 -> 1223
29759 -> 1726
29759 -> 3456
29759 -> 3879
29759 -> 5875
29759 -> 5877
29759 -> 29753
29823 -> 242
29823 -> 846
29823 -> 2804
29823 -> 2806
29839 -> 29823
29844 -> 28972
29847 -> 29590
29849 -> 29594
29851 -> 5717
29851 -> 29860
29860 -> 28972
29860 -> 29870
29870 -> 242
29870 -> 1726
29872 -> 827
29872 -> 831
29872 -> 12082
29872 -> 29590
29872 -> 29883
29885 -> 29594
29891 -> 2804
29894 -> 2836
29896 -> 2840
29898 -> 2878
29898 -> 29883
29898 -> 29903
29898 -> 29906
29898 -> 29908
29898 -> 29910
29917 -> 2811
29921 -> 313
29921 -> 315
29921 -> 29931
29921 -> 29933
29921 -> 29935
29921 -> 29937
29921 -> 29939
29921 -> 29941
29921 -> 29943
29933 -> 242
29933 -> 846
29933 -> 29931
29933 -> 30249
29937 -> 313
29937 -> 315
29948 -> 2849
29948 -> 29953
29953 -> 30003
29953 -> 30259
29953 -> 30743
29953 -> 30747
29957 -> 315
29957 -> 1638
29957 -> 14877
29957 -> 15190
29957 -> 18515
29957 -> 19230
29957 -> 29727
29957 -> 29757
29957 -> 29948
29957 -> 29966
29957 -> 29968
29957 -> 29970
29957 -> 29972
29957 -> 29983
29957 -> 29990
29957 -> 29992
29957 -> 29997
29957 -> 29999
29957 -> 30001
29957 -> 30003
29957 -> 30005
29957 -> 30007
29957 -> 30009
29957 -> 30014
29957 -> 30016
29957 -> 30019
29957 -> 30021
29957 -> 30024
29970 -> 1223
29970 -> 1726
29970 -> 5600
29970 -> 5602
29970 -> 30191
29970 -> 30220
29970 -> 30342
29970 -> 30461
29983 -> 242
29986 -> 12346
29986 -> 29990
29992 -> 403
29992 -> 443
29992 -> 788
29992 -> 1218
29992 -> 1726
29992 -> 5598
29992 -> 5600
29992 -> 5602
29992 -> 5606
29992 -> 5683
29992 -> 6125
29992 -> 6218
29992 -> 30189
29992 -> 30206
29992 -> 30220
29992 -> 30342
29992 -> 30461
29992 -> 30470
29992 -> 30490
30003 -> 313
30003 -> 315
30007 -> 30259
30007 -> 34922
30009 -> 30259
30009 -> 34922
30014 -> 833
30014 -> 835
30016 -> 1726
30016 -> 30342
30016 -> 30356
30024 -> 1726
30024 -> 30364
30027 -> 1190
30027 -> 1223
30027 -> 1726
30027 -> 3456
30027 -> 29943
30041 -> 242
30041 -> 846
30041 -> 28972
30049 -> 242
30049 -> 846
30049 -> 30052
30056 -> 6619
30059 -> 30056
30059 -> 30066
30066 -> 3272
30092 -> 242
30092 -> 846
30102 -> 831
30102 -> 833
30102 -> 835
30102 -> 3272
30102 -> 3879
30102 -> 5875
30102 -> 5877
30102 -> 15969
30102 -> 29753
30102 -> 30110
30102 -> 30112
30102 -> 30114
30102 -> 30116
30102 -> 30118
30102 -> 30121
30102 -> 30123
30112 -> 313
30129 -> 12142
30129 -> 29753
30133 -> 831
30133 -> 833
30133 -> 29753
30133 -> 30110
30133 -> 30121
30133 -> 30137
30142 -> 411
30142 -> 788
30142 -> 791
30142 -> 833
30142 -> 835
30142 -> 3865
30142 -> 3869
30142 -> 3879
30142 -> 3892
30142 -> 5875
30142 -> 5877
30142 -> 5890
30142 -> 15969
30142 -> 16139
30142 -> 29753
30142 -> 30110
30142 -> 30121
30142 -> 30145
30142 -> 30147
30145 -> 3879
30145 -> 5875
30145 -> 29753
30145 -> 30110
30145 -> 30121
30172 -> 242
30172 -> 846
30182 -> 313
30182 -> 831
30182 -> 833
30182 -> 835
30182 -> 1726
30182 -> 3272
30182 -> 30187
30182 -> 30189
30182 -> 30191
30182 -> 30193
30182 -> 30195
30187 -> 835
30187 -> 30223
30197 -> 12142
30202 -> 831
30202 -> 833
30202 -> 30189
30202 -> 30191
30202 -> 30195
30202 -> 30206
30211 -> 835
30211 -> 30213
30215 -> 411
30215 -> 788
30215 -> 791
30215 -> 833
30215 -> 835
30215 -> 1726
30215 -> 30189
30215 -> 30191
30215 -> 30218
30215 -> 30220
30218 -> 30189
30218 -> 30191
30225 -> 835
30225 -> 30227
30229 -> 835
30229 -> 30232
30234 -> 835
30234 -> 30237
30249 -> 242
30259 -> 313
30259 -> 315
30284 -> 5348
30320 -> 242
30329 -> 954
30329 -> 3948
30329 -> 29906
30338 -> 315
30338 -> 30342
30338 -> 30344
30338 -> 30346
30348 -> 30356
30348 -> 30358
30360 -> 30364
30371 -> 5348
30461 -> 30003
30461 -> 30005
30461 -> 30014
30461 -> 30223
30461 -> 30232
30461 -> 30465
30465 -> 833
30465 -> 835
30465 -> 3884
30465 -> 30255
30465 -> 30257
30470 -> 242
30473 -> 30220
30473 -> 30342
30473 -> 30461
30473 -> 30479
30479 -> 10971
30596 -> 242
30599 -> 30147
30599 -> 30519
30618 -> 5348
30626 -> 5575
30645 -> 5575
30663 -> 5348
30753 -> 831
30753 -> 833
30753 -> 835
30753 -> 846
30753 -> 3884
30753 -> 29931
30753 -> 30255
30753 -> 30257
30753 -> 30759
30759 -> 242
30759 -> 30249
30759 -> 30795
30772 -> 313
30772 -> 315
30772 -> 835
30776 -> 835
30779 -> 835
30782 -> 313
30782 -> 30259
30782 -> 30465
30785 -> 30003
30785 -> 30465
30803 -> 242
30803 -> 315
30803 -> 30815
30825 -> 313
30825 -> 315
30825 -> 30850
30831 -> 3863
30831 -> 3890
30831 -> 29753
30831 -> 30815
30831 -> 30819
30831 -> 30825
30831 -> 30834
30831 -> 30836
30842 -> 313
30842 -> 315
30842 -> 3863
30842 -> 3890
30842 -> 30850
30845 -> 3863
30845 -> 30934
30845 -> 30943
30850 -> 3272
30884 -> 242
30884 -> 846
30884 -> 30803
30884 -> 30894
30897 -> 831
30897 -> 833
30897 -> 30803
30897 -> 30900
30930 -> 30934
30934 -> 242
30934 -> 3863
30934 -> 30943
30943 -> 3898
31012 -> 242
31012 -> 31017
31024 -> 315
31024 -> 31029
31145 -> 31150
31145 -> 31155
31150 -> 242
31150 -> 846
31150 -> 29931
31150 -> 31167
31155 -> 242
31155 -> 313
31155 -> 29931
31167 -> 242
31175 -> 30731
31175 -> 30753
31175 -> 30772
31175 -> 31184
31175 -> 31190
31184 -> 3272
31190 -> 242
31193 -> 831
31199 -> 6619
31199 -> 30066
31199 -> 31203
31199 -> 31205
31207 -> 315
31207 -> 30772
31207 -> 31210
31210 -> 313
31210 -> 31227
31212 -> 315
31212 -> 6619
31212 -> 30066
31212 -> 30772
31212 -> 31203
31212 -> 31210
31216 -> 315
31216 -> 30776
31220 -> 315
31220 -> 6619
31220 -> 30776
31220 -> 31203
31232 -> 831
31232 -> 833
31232 -> 835
31232 -> 972
31232 -> 31203
31232 -> 31242
31232 -> 31244
31232 -> 31246
31232 -> 31248
31242 -> 242
31242 -> 1340
31242 -> 1351
31242 -> 31203
31242 -> 31246
31242 -> 34673
31258 -> 29931
31260 -> 30743
31265 -> 29931
31265 -> 30743
31311 -> 956
31311 -> 3456
31311 -> 31321
31311 -> 31329
31311 -> 31335
31311 -> 31337
31311 -> 31339
31321 -> 29563
31321 -> 32338
31321 -> 32340
31329 -> 32645
31329 -> 32958
31341 -> 956
31341 -> 31335
31341 -> 31337
31341 -> 31339
31341 -> 31351
31341 -> 31353
31351 -> 29563
31351 -> 32340
31351 -> 32349
31353 -> 32663
31353 -> 32958
31360 -> 6856
31360 -> 29671
31360 -> 29751
31360 -> 31053
31360 -> 31061
31360 -> 31078
31360 -> 31089
31360 -> 31091
31360 -> 31371
31360 -> 31378
31371 -> 242
31371 -> 3890
31371 -> 3898
31371 -> 29581
31378 -> 1942
31378 -> 52381
31378 -> 52411
31406 -> 3869
31406 -> 5890
31406 -> 22614
31406 -> 29766
31406 -> 29769
31414 -> 627
31414 -> 3863
31414 -> 5871
31414 -> 15969
31414 -> 31417
31414 -> 31419
31414 -> 31421
31417 -> 3879
31417 -> 5875
31419 -> 3879
31419 -> 5875
31445 -> 3869
31445 -> 3879
31445 -> 3890
31445 -> 5862
31445 -> 29581
31445 -> 29749
31445 -> 29753
31445 -> 29766
31445 -> 29769
31445 -> 29771
31445 -> 30110
31445 -> 30121
31445 -> 30831
31445 -> 31382
31445 -> 31453
31453 -> 31463
31488 -> 956
31488 -> 3456
31488 -> 31497
31488 -> 31503
31488 -> 31507
31488 -> 31509
31488 -> 31511
31497 -> 29823
31497 -> 31858
31497 -> 32409
31503 -> 32797
31503 -> 33108
31513 -> 956
31513 -> 31507
31513 -> 31509
31513 -> 31511
31513 -> 31522
31513 -> 31524
31522 -> 29823
31522 -> 31858
31522 -> 32417
31524 -> 32814
31524 -> 33108
31531 -> 6856
31531 -> 29915
31531 -> 29919
31531 -> 29939
31531 -> 31100
31531 -> 31378
31531 -> 31536
31531 -> 31538
31531 -> 31540
31531 -> 31545
31531 -> 31551
31531 -> 31565
31545 -> 242
31551 -> 242
31554 -> 29915
31554 -> 30465
31556 -> 29915
31556 -> 29953
31590 -> 956
31590 -> 1223
31590 -> 1225
31617 -> 29915
31617 -> 30003
31617 -> 30005
31617 -> 30014
31617 -> 30189
31617 -> 30191
31617 -> 30220
31617 -> 30223
31617 -> 30227
31617 -> 30232
31617 -> 30237
31617 -> 31567
31617 -> 31624
31624 -> 31463
31705 -> 31713
31713 -> 31311
31713 -> 31886
31716 -> 31724
31724 -> 31341
31724 -> 31886
31726 -> 627
31726 -> 3865
31726 -> 3869
31726 -> 3879
31726 -> 3892
31726 -> 5862
31726 -> 5871
31726 -> 5877
31726 -> 5890
31726 -> 9399
31726 -> 9413
31726 -> 15939
31726 -> 15969
31726 -> 29581
31746 -> 315
31746 -> 627
31746 -> 3869
31746 -> 3879
31746 -> 3890
31746 -> 3892
31746 -> 5871
31746 -> 5875
31746 -> 16139
31746 -> 29581
31746 -> 29649
31746 -> 29659
31746 -> 29683
31746 -> 29749
31746 -> 29751
31746 -> 29753
31746 -> 29764
31746 -> 29766
31746 -> 29769
31746 -> 29771
31746 -> 29774
31746 -> 29776
31746 -> 29779
31746 -> 30827
31746 -> 31360
31746 -> 31406
31746 -> 31414
31746 -> 31726
31746 -> 31751
31746 -> 31756
31746 -> 31759
31746 -> 31761
31746 -> 31766
31746 -> 31773
31751 -> 313
31751 -> 29759
31751 -> 30114
31756 -> 627
31756 -> 3863
31756 -> 3865
31756 -> 3869
31756 -> 3879
31756 -> 3890
31756 -> 3892
31756 -> 3948
31756 -> 5890
31756 -> 22614
31756 -> 29661
31756 -> 29753
31756 -> 30827
31756 -> 31994
31759 -> 31915
31761 -> 31921
31766 -> 3456
31766 -> 3879
31766 -> 3892
31766 -> 5875
31766 -> 5877
31766 -> 5880
31773 -> 31947
31788 -> 31795
31795 -> 31488
31795 -> 32014
31798 -> 31805
31805 -> 31513
31805 -> 32014
31807 -> 989
31807 -> 1726
31807 -> 9413
31807 -> 9419
31823 -> 315
31823 -> 29898
31823 -> 29912
31823 -> 29915
31823 -> 29935
31823 -> 29943
31823 -> 29948
31823 -> 29957
31823 -> 30003
31823 -> 30005
31823 -> 30007
31823 -> 30009
31823 -> 30014
31823 -> 30782
31823 -> 30785
31823 -> 31531
31823 -> 31590
31823 -> 31807
31823 -> 31827
31823 -> 31834
31823 -> 31836
31823 -> 31840
31823 -> 31842
31823 -> 31844
31823 -> 31846
31823 -> 31848
31823 -> 31850
31823 -> 31854
31823 -> 31858
31827 -> 313
31827 -> 30005
31827 -> 30027
31827 -> 30257
31834 -> 33924
31836 -> 34517
31840 -> 30001
31840 -> 34913
31842 -> 30001
31844 -> 22743
31848 -> 32039
31850 -> 32045
31854 -> 1726
31854 -> 3456
31858 -> 989
31886 -> 1340
31886 -> 1351
31886 -> 1384
31886 -> 32208
31903 -> 31911
31911 -> 3865
31911 -> 3869
31911 -> 3879
31911 -> 3898
31911 -> 5890
31911 -> 9399
31911 -> 9413
31911 -> 11947
31911 -> 15937
31911 -> 22552
31911 -> 22568
31911 -> 22602
31911 -> 22604
31911 -> 22628
31911 -> 24527
31911 -> 24557
31911 -> 24582
31915 -> 22609
31921 -> 3869
31921 -> 3879
31921 -> 3892
31921 -> 22614
31947 -> 22568
31947 -> 22612
31947 -> 31960
31960 -> 242
31968 -> 31947
31976 -> 31756
32014 -> 1351
32014 -> 1384
32014 -> 32272
32029 -> 32035
32035 -> 8955
32035 -> 9413
32035 -> 9419
32035 -> 11947
32035 -> 11998
32035 -> 12618
32035 -> 13069
32035 -> 22731
32035 -> 22733
32035 -> 22755
32035 -> 25955
32039 -> 22738
32045 -> 22743
32051 -> 31713
32063 -> 31724
32071 -> 315
32071 -> 627
32071 -> 3869
32071 -> 3879
32071 -> 3890
32071 -> 3892
32071 -> 5871
32071 -> 5875
32071 -> 16139
32071 -> 21986
32071 -> 29581
32071 -> 29649
32071 -> 29659
32071 -> 29661
32071 -> 29683
32071 -> 29749
32071 -> 29751
32071 -> 29753
32071 -> 29764
32071 -> 29766
32071 -> 29769
32071 -> 29771
32071 -> 29774
32071 -> 29776
32071 -> 29779
32071 -> 30827
32071 -> 31360
32071 -> 31406
32071 -> 31414
32071 -> 31751
32071 -> 31756
32071 -> 31759
32071 -> 31761
32071 -> 31766
32071 -> 31773
32071 -> 32080
32080 -> 242
32102 -> 627
32102 -> 3948
32102 -> 29581
32110 -> 3879
32110 -> 3892
32115 -> 627
32115 -> 3869
32115 -> 3879
32115 -> 3892
32115 -> 5862
32115 -> 5871
32115 -> 5877
32115 -> 5890
32115 -> 15939
32115 -> 15969
32115 -> 29581
32115 -> 31419
32121 -> 31795
32129 -> 31805
32136 -> 315
32136 -> 22244
32136 -> 29898
32136 -> 29912
32136 -> 29915
32136 -> 29935
32136 -> 29943
32136 -> 29948
32136 -> 29957
32136 -> 30001
32136 -> 30003
32136 -> 30005
32136 -> 30007
32136 -> 30009
32136 -> 30014
32136 -> 30782
32136 -> 30785
32136 -> 31531
32136 -> 31590
32136 -> 31827
32136 -> 31834
32136 -> 31836
32136 -> 31840
32136 -> 31842
32136 -> 31844
32136 -> 31846
32136 -> 31848
32136 -> 31850
32136 -> 31854
32136 -> 31858
32136 -> 32143
32143 -> 242
32162 -> 954
32175 -> 989
32175 -> 1223
32175 -> 1726
32208 -> 242
32208 -> 627
32208 -> 1506
32208 -> 3890
32208 -> 3948
32208 -> 22559
32208 -> 22568
32208 -> 22858
32208 -> 22900
32208 -> 24521
32208 -> 24527
32208 -> 24557
32208 -> 24564
32208 -> 24582
32208 -> 32213
32213 -> 627
32213 -> 3865
32213 -> 3898
32213 -> 5871
32213 -> 22568
32272 -> 242
32272 -> 3948
32272 -> 5154
32272 -> 22568
32272 -> 22858
32272 -> 22900
32272 -> 24521
32272 -> 24527
32272 -> 24557
32272 -> 24564
32272 -> 24582
32272 -> 25375
32272 -> 32275
32275 -> 5092
32275 -> 22568
32338 -> 627
32338 -> 1506
32338 -> 1726
32338 -> 5871
32338 -> 5880
32338 -> 29581
32340 -> 3869
32340 -> 15939
32340 -> 29766
32340 -> 29771
32349 -> 627
32349 -> 1506
32349 -> 1726
32349 -> 5871
32349 -> 5880
32349 -> 29581
32364 -> 1506
32364 -> 3879
32364 -> 5875
32364 -> 5880
32364 -> 29581
32371 -> 627
32371 -> 3865
32371 -> 3869
32371 -> 3879
32371 -> 3890
32371 -> 3892
32371 -> 5871
32371 -> 5875
32371 -> 5877
32371 -> 5880
32371 -> 5890
32371 -> 15937
32371 -> 15939
32371 -> 15969
32371 -> 29581
32371 -> 29659
32371 -> 29749
32371 -> 29753
32371 -> 30831
32371 -> 31417
32371 -> 31419
32371 -> 31421
32409 -> 1726
32417 -> 1726
32439 -> 956
32439 -> 989
32439 -> 1223
32439 -> 1225
32439 -> 1726
32439 -> 29948
32439 -> 32449
32439 -> 32451
32475 -> 32479
32479 -> 5877
32479 -> 29563
32479 -> 33375
32479 -> 33378
32479 -> 33381
32481 -> 1506
32481 -> 3890
32481 -> 15969
32481 -> 29581
32484 -> 627
32484 -> 1506
32484 -> 3890
32484 -> 3898
32484 -> 29581
32484 -> 32487
32487 -> 627
32487 -> 5862
32487 -> 5871
32487 -> 29581
32489 -> 3890
32489 -> 29581
32489 -> 32487
32491 -> 29581
32491 -> 32504
32504 -> 32527
32527 -> 3898
32527 -> 31960
32529 -> 32504
32539 -> 1506
32539 -> 3863
32539 -> 3865
32539 -> 3869
32539 -> 3879
32539 -> 5862
32539 -> 5871
32539 -> 5875
32539 -> 5880
32539 -> 16139
32539 -> 29661
32539 -> 29693
32539 -> 32546
32539 -> 32548
32539 -> 32550
32546 -> 30827
32546 -> 34457
32546 -> 34459
32548 -> 3890
32548 -> 34457
32550 -> 30827
32550 -> 34457
32550 -> 34463
32565 -> 32568
32565 -> 32576
32568 -> 1726
32568 -> 29823
32576 -> 32587
32587 -> 33924
32589 -> 32593
32593 -> 33947
32595 -> 32589
32638 -> 32645
32638 -> 32649
32645 -> 627
32645 -> 1506
32645 -> 5862
32645 -> 5871
32645 -> 31321
32645 -> 33375
32645 -> 33378
32645 -> 33381
32645 -> 33384
32645 -> 33386
32645 -> 33388
32645 -> 33390
32649 -> 1506
32649 -> 3865
32649 -> 5862
32649 -> 29581
32656 -> 32649
32656 -> 32663
32663 -> 627
32663 -> 1506
32663 -> 5862
32663 -> 5871
32663 -> 31351
32663 -> 33375
32663 -> 33378
32663 -> 33381
32663 -> 33384
32663 -> 33386
32663 -> 33388
32663 -> 33390
32665 -> 1506
32665 -> 3890
32665 -> 29581
32665 -> 32649
32668 -> 627
32668 -> 3890
32668 -> 3898
32668 -> 29581
32668 -> 32649
32671 -> 627
32671 -> 3890
32671 -> 29581
32671 -> 32649
32673 -> 29581
32673 -> 32686
32686 -> 1506
32686 -> 5862
32686 -> 15969
32686 -> 32527
32690 -> 627
32690 -> 3869
32690 -> 3892
32690 -> 5862
32690 -> 5871
32690 -> 5877
32690 -> 5890
32690 -> 15939
32690 -> 15969
32690 -> 29581
32690 -> 31419
32748 -> 32686
32758 -> 627
32758 -> 1506
32758 -> 3863
32758 -> 3865
32758 -> 3869
32758 -> 3879
32758 -> 3892
32758 -> 5871
32758 -> 5875
32758 -> 5880
32758 -> 16139
32758 -> 29661
32758 -> 29693
32758 -> 32546
32758 -> 32548
32758 -> 32550
32791 -> 32797
32791 -> 32806
32797 -> 31497
32797 -> 33483
32797 -> 33485
32797 -> 33487
32797 -> 33489
32806 -> 32587
32808 -> 32806
32808 -> 32814
32814 -> 31522
32814 -> 33483
32814 -> 33485
32814 -> 33487
32814 -> 33489
32818 -> 989
32818 -> 1223
32818 -> 1726
32875 -> 32593
32879 -> 32875
32882 -> 32890
32890 -> 34517
32892 -> 31842
32958 -> 1506
32958 -> 5862
32958 -> 15969
32958 -> 29581
32981 -> 1506
32981 -> 3865
32981 -> 3890
32981 -> 5862
32981 -> 5871
32981 -> 15939
32981 -> 29581
32981 -> 32649
32981 -> 32958
32984 -> 627
32984 -> 1506
32984 -> 3865
32984 -> 3890
32984 -> 3898
32984 -> 5862
32984 -> 5871
32984 -> 15939
32984 -> 15969
32984 -> 29581
32984 -> 32649
32984 -> 32958
32987 -> 627
32987 -> 3890
32987 -> 29581
32987 -> 32649
32987 -> 32958
32989 -> 29581
32989 -> 33002
33002 -> 627
33002 -> 3865
33002 -> 3898
33002 -> 5871
33002 -> 5880
33002 -> 16139
33002 -> 32527
33002 -> 33030
33006 -> 627
33006 -> 1506
33006 -> 3863
33006 -> 3865
33006 -> 3869
33006 -> 3892
33006 -> 5871
33006 -> 5875
33006 -> 5877
33006 -> 5890
33006 -> 15939
33006 -> 15969
33006 -> 31419
33030 -> 627
33030 -> 5862
33030 -> 5871
33032 -> 33002
33046 -> 1506
33046 -> 3863
33046 -> 3865
33046 -> 3869
33046 -> 3879
33046 -> 3890
33046 -> 3892
33046 -> 5871
33046 -> 5875
33046 -> 5880
33046 -> 16139
33046 -> 29661
33046 -> 29693
33046 -> 32546
33046 -> 32548
33046 -> 32550
33108 -> 32587
33117 -> 989
33117 -> 1223
33117 -> 1726
33250 -> 315
33250 -> 32593
33254 -> 33250
33257 -> 32890
33265 -> 31842
33268 -> 33272
33272 -> 34935
33275 -> 29948
33275 -> 29966
33312 -> 10923
33312 -> 25434
33312 -> 33272
33312 -> 33318
33312 -> 33321
33312 -> 33323
33312 -> 33325
33325 -> 33321
33325 -> 33323
33325 -> 33969
33327 -> 33333
33327 -> 33335
33327 -> 33337
33337 -> 30001
33337 -> 33333
33337 -> 33335
33337 -> 33974
33419 -> 315
33419 -> 627
33419 -> 3869
33419 -> 3879
33419 -> 3890
33419 -> 3892
33419 -> 3898
33419 -> 5871
33419 -> 5875
33419 -> 5877
33419 -> 15969
33419 -> 16139
33419 -> 29581
33419 -> 29649
33419 -> 29659
33419 -> 29661
33419 -> 29683
33419 -> 29749
33419 -> 29751
33419 -> 29753
33419 -> 29766
33419 -> 29769
33419 -> 29771
33419 -> 29774
33419 -> 29776
33419 -> 29779
33419 -> 30831
33419 -> 31417
33419 -> 31419
33419 -> 31751
33419 -> 31766
33419 -> 32340
33419 -> 32371
33419 -> 33384
33419 -> 33406
33419 -> 33425
33419 -> 33429
33508 -> 315
33508 -> 956
33508 -> 1223
33508 -> 1225
33508 -> 1726
33508 -> 29898
33508 -> 29912
33508 -> 29935
33508 -> 29943
33508 -> 29948
33508 -> 29957
33508 -> 30005
33508 -> 30014
33508 -> 30782
33508 -> 30785
33508 -> 31827
33508 -> 31842
33508 -> 31854
33508 -> 31858
33508 -> 32439
33508 -> 32890
33508 -> 33483
33508 -> 33512
33508 -> 33514
33508 -> 33517
33512 -> 33272
33512 -> 34897
33514 -> 31846
33536 -> 32479
33543 -> 3890
33543 -> 29581
33546 -> 3898
33546 -> 29581
33549 -> 1506
33549 -> 3890
33549 -> 29581
33551 -> 29581
33551 -> 33564
33564 -> 32527
33581 -> 33564
33591 -> 1506
33591 -> 3863
33591 -> 5875
33591 -> 5880
33591 -> 29661
33591 -> 29693
33591 -> 32546
33591 -> 32548
33591 -> 32550
33606 -> 32568
33606 -> 33615
33615 -> 32587
33623 -> 32593
33627 -> 33623
33630 -> 315
33645 -> 32479
33652 -> 1506
33652 -> 3890
33652 -> 29581
33652 -> 32487
33655 -> 627
33655 -> 3890
33655 -> 3898
33655 -> 5871
33655 -> 15939
33655 -> 15969
33655 -> 16139
33655 -> 29581
33655 -> 32487
33658 -> 627
33658 -> 3890
33658 -> 5862
33658 -> 5871
33658 -> 15939
33658 -> 16139
33658 -> 29581
33658 -> 32487
33660 -> 29581
33660 -> 33673
33673 -> 627
33673 -> 1506
33673 -> 3879
33673 -> 3892
33673 -> 5871
33673 -> 15939
33673 -> 32527
33696 -> 33673
33706 -> 1506
33706 -> 3863
33706 -> 3865
33706 -> 3869
33706 -> 3879
33706 -> 3892
33706 -> 5862
33706 -> 5871
33706 -> 5875
33706 -> 16139
33706 -> 29661
33706 -> 29693
33706 -> 32546
33706 -> 32548
33706 -> 32550
33721 -> 32568
33721 -> 33730
33730 -> 32587
33742 -> 32593
33746 -> 33742
33795 -> 31497
33795 -> 33802
33795 -> 33804
33795 -> 33806
33795 -> 33808
33806 -> 33841
33810 -> 31522
33810 -> 33802
33810 -> 33804
33810 -> 33806
33810 -> 33808
33843 -> 29844
33843 -> 33841
33847 -> 29860
33847 -> 33841
33865 -> 1223
33865 -> 1726
33870 -> 315
33870 -> 1223
33870 -> 29948
33887 -> 315
33887 -> 407
33887 -> 788
33887 -> 791
33887 -> 956
33887 -> 974
33887 -> 989
33887 -> 1024
33887 -> 1223
33887 -> 1225
33887 -> 1726
33887 -> 29898
33887 -> 29912
33887 -> 29935
33887 -> 29943
33887 -> 29948
33887 -> 29957
33887 -> 30005
33887 -> 30014
33887 -> 30782
33887 -> 30785
33887 -> 31827
33887 -> 31842
33887 -> 31846
33887 -> 31854
33887 -> 31858
33887 -> 32439
33887 -> 32451
33887 -> 33865
33887 -> 33870
33887 -> 33881
33887 -> 33895
33887 -> 33899
33887 -> 33901
33895 -> 33930
33895 -> 33942
33899 -> 33930
33901 -> 989
33920 -> 33924
33920 -> 33930
33924 -> 242
33924 -> 34876
33930 -> 315
33930 -> 989
33942 -> 242
33942 -> 34876
33944 -> 315
33944 -> 33930
33944 -> 33947
33947 -> 242
33947 -> 34876
33954 -> 33944
33962 -> 315
33966 -> 33321
33966 -> 33323
33966 -> 33969
33969 -> 10923
33969 -> 25434
33969 -> 33272
33969 -> 33318
33969 -> 33321
33969 -> 33323
33969 -> 34946
33969 -> 34948
33969 -> 34950
33971 -> 30001
33971 -> 33333
33971 -> 33335
33971 -> 33930
33971 -> 33974
33974 -> 33333
33974 -> 33335
33974 -> 34876
33974 -> 34954
33974 -> 34956
33974 -> 34958
33986 -> 627
33986 -> 3890
33986 -> 32645
33986 -> 32649
33995 -> 627
33995 -> 3890
33995 -> 32649
33995 -> 32663
34002 -> 1506
34002 -> 3890
34002 -> 29581
34002 -> 32649
34004 -> 627
34004 -> 3890
34004 -> 3898
34004 -> 29581
34004 -> 32649
34007 -> 627
34007 -> 3890
34007 -> 29581
34007 -> 32649
34009 -> 29581
34009 -> 34022
34022 -> 32527
34026 -> 627
34026 -> 3869
34026 -> 3892
34026 -> 5862
34026 -> 5871
34026 -> 5877
34026 -> 5890
34026 -> 15939
34026 -> 15969
34026 -> 29581
34026 -> 31419
34047 -> 34022
34057 -> 627
34057 -> 3863
34057 -> 3865
34057 -> 3869
34057 -> 5871
34057 -> 5875
34057 -> 5890
34057 -> 15969
34057 -> 16139
34057 -> 29661
34057 -> 29693
34057 -> 32546
34057 -> 32548
34057 -> 32550
34076 -> 32797
34076 -> 34089
34089 -> 32587
34091 -> 32814
34091 -> 34089
34099 -> 989
34099 -> 1223
34099 -> 1726
34112 -> 32593
34116 -> 34112
34125 -> 32479
34132 -> 627
34132 -> 1506
34132 -> 3890
34132 -> 5862
34132 -> 5871
34132 -> 15939
34132 -> 16139
34132 -> 29581
34132 -> 32487
34135 -> 627
34135 -> 1506
34135 -> 3865
34135 -> 3890
34135 -> 3898
34135 -> 5862
34135 -> 5871
34135 -> 15939
34135 -> 29581
34135 -> 32487
34138 -> 627
34138 -> 3890
34138 -> 29581
34138 -> 32487
34140 -> 29581
34140 -> 34153
34153 -> 627
34153 -> 3865
34153 -> 5871
34153 -> 15939
34153 -> 32527
34212 -> 34153
34222 -> 627
34222 -> 3863
34222 -> 3865
34222 -> 3869
34222 -> 3892
34222 -> 5862
34222 -> 5871
34222 -> 5875
34222 -> 15969
34222 -> 29661
34222 -> 29693
34222 -> 32546
34222 -> 32548
34222 -> 32550
34240 -> 32568
34240 -> 34249
34249 -> 32587
34259 -> 32593
34263 -> 34259
34273 -> 32479
34280 -> 1506
34280 -> 3890
34280 -> 15969
34280 -> 29581
34283 -> 3898
34283 -> 29581
34283 -> 32487
34286 -> 627
34286 -> 1506
34286 -> 3890
34286 -> 29581
34288 -> 29581
34288 -> 34301
34301 -> 32527
34318 -> 34301
34328 -> 1506
34328 -> 3863
34328 -> 3865
34328 -> 3869
34328 -> 3879
34328 -> 5871
34328 -> 5875
34328 -> 5880
34328 -> 29661
34328 -> 29693
34328 -> 32546
34328 -> 32548
34328 -> 32550
34343 -> 32568
34343 -> 34352
34352 -> 32587
34360 -> 32593
34364 -> 34360
34403 -> 315
34403 -> 3869
34403 -> 3879
34403 -> 3890
34403 -> 3892
34403 -> 3898
34403 -> 5875
34403 -> 5880
34403 -> 29581
34403 -> 29649
34403 -> 29659
34403 -> 29661
34403 -> 29683
34403 -> 29749
34403 -> 29751
34403 -> 29753
34403 -> 29759
34403 -> 29766
34403 -> 29769
34403 -> 29771
34403 -> 29774
34403 -> 29776
34403 -> 29779
34403 -> 30831
34403 -> 34396
34409 -> 3869
34409 -> 3879
34409 -> 3892
34409 -> 3898
34409 -> 29581
34409 -> 30914
34436 -> 34444
34457 -> 3869
34457 -> 3892
34493 -> 315
34493 -> 29898
34493 -> 29912
34493 -> 29935
34493 -> 29943
34493 -> 29948
34493 -> 29957
34493 -> 30005
34493 -> 30014
34493 -> 30027
34493 -> 30782
34493 -> 30785
34493 -> 31842
34493 -> 32890
34493 -> 33512
34493 -> 33514
34497 -> 30743
34517 -> 34876
34528 -> 32479
34535 -> 1506
34535 -> 3890
34535 -> 3892
34535 -> 29581
34535 -> 32487
34538 -> 1506
34538 -> 3890
34538 -> 3898
34538 -> 5880
34538 -> 29581
34538 -> 32487
34541 -> 3890
34541 -> 29581
34541 -> 32487
34543 -> 29581
34543 -> 34556
34556 -> 32527
34573 -> 34556
34583 -> 3865
34583 -> 3869
34583 -> 3879
34583 -> 3892
34583 -> 5862
34583 -> 5871
34583 -> 5875
34583 -> 15969
34583 -> 16139
34583 -> 29661
34583 -> 29693
34583 -> 32546
34583 -> 32548
34583 -> 32550
34598 -> 32568
34598 -> 34607
34607 -> 32587
34615 -> 32593
34619 -> 34615
34694 -> 242
34698 -> 29931
34700 -> 30743
34705 -> 846
34710 -> 30066
34710 -> 34707
34746 -> 34678
34749 -> 31246
34752 -> 972
34752 -> 1384
34752 -> 29931
34752 -> 30743
34752 -> 31246
34752 -> 34683
34752 -> 34686
34876 -> 30257
34922 -> 34918
34927 -> 30259
34927 -> 34922
34931 -> 30259
34931 -> 34922
34962 -> 242
34982 -> 242
35049 -> 35053
35053 -> 242
35053 -> 1726
35059 -> 35053
35064 -> 35053
35081 -> 34989
35086 -> 407
35086 -> 627
35086 -> 1638
35086 -> 3863
35086 -> 5871
35086 -> 5875
35086 -> 29753
35086 -> 30110
35086 -> 30121
35086 -> 30137
35086 -> 30147
35086 -> 35092
35086 -> 35094
35086 -> 35096
35092 -> 5875
35092 -> 29753
35092 -> 30121
35094 -> 5875
35094 -> 29753
35094 -> 34996
35094 -> 35103
35133 -> 13069
35133 -> 22743
35133 -> 33947
35141 -> 35133
35157 -> 30007
35159 -> 954
35159 -> 974
35159 -> 22743
35163 -> 33323
35163 -> 33969
35163 -> 34946
35163 -> 34948
35166 -> 30001
35166 -> 33335
35166 -> 33974
35166 -> 34954
35166 -> 34956
35216 -> 35220
35220 -> 242
35220 -> 1726
35222 -> 35220
35227 -> 35220
35246 -> 35108
35252 -> 407
35252 -> 1638
35252 -> 30189
35252 -> 30191
35252 -> 30220
35252 -> 30223
35252 -> 30227
35252 -> 35096
35252 -> 35256
35252 -> 35258
35252 -> 35260
35256 -> 30189
35258 -> 35103
35258 -> 35113
35260 -> 315
35260 -> 30220
35260 -> 30223
35260 -> 30227
35286 -> 5348
35302 -> 5348
35378 -> 242
35423 -> 35425
35425 -> 242
35425 -> 1986
35428 -> 35425
35437 -> 242
35438 -> 2863
35442 -> 242
35443 -> 11283
35481 -> 1942
35481 -> 35486
35481 -> 35488
35486 -> 35545
35499 -> 35503
35503 -> 35549
35505 -> 2863
35505 -> 10787
35505 -> 12174
35505 -> 12193
35505 -> 35496
35505 -> 35503
35505 -> 35509
35505 -> 35511
35505 -> 35513
35505 -> 35515
35505 -> 35517
35505 -> 35519
35505 -> 35521
35505 -> 35523
35511 -> 35608
35523 -> 12806
35545 -> 35588
35549 -> 35554
35549 -> 35618
35549 -> 35620
35551 -> 35554
35551 -> 35557
35551 -> 35563
35551 -> 35566
35551 -> 35568
35554 -> 35631
35554 -> 35633
35554 -> 35638
35568 -> 271
35568 -> 313
35568 -> 1183
35588 -> 242
35588 -> 35425
35588 -> 35599
35588 -> 35605
35599 -> 242
35605 -> 242
35611 -> 35608
35613 -> 12806
35622 -> 35618
35622 -> 35620
35625 -> 12800
35627 -> 12800
35641 -> 2863
35645 -> 11283
35691 -> 4242
35691 -> 35696
35696 -> 242
35705 -> 242
35705 -> 11983
35712 -> 242
35712 -> 4282
35725 -> 26563
35731 -> 11082
35731 -> 26566
35731 -> 35733
35731 -> 35735
35738 -> 25407
35738 -> 35741
35744 -> 25413
35744 -> 35747
35763 -> 242
35763 -> 14877
35768 -> 242
35768 -> 14565
35774 -> 35776
35786 -> 4242
35786 -> 35790
35790 -> 242
35801 -> 11983
35801 -> 35804
35804 -> 4295
35808 -> 26563
35813 -> 11082
35813 -> 26566
35813 -> 35735
35815 -> 25407
35815 -> 35741
35818 -> 25413
35818 -> 35747
35832 -> 35834
35834 -> 35486
35842 -> 29590
35845 -> 35851
35851 -> 35503
35853 -> 35774
35853 -> 35856
35853 -> 35864
35856 -> 35551
35856 -> 36817
35870 -> 6856
35876 -> 242
35888 -> 5348
35909 -> 5348
35947 -> 35949
35949 -> 35832
35954 -> 35949
35957 -> 35949
35971 -> 35845
35975 -> 35853
35980 -> 35986
35980 -> 35989
35980 -> 35991
35980 -> 35993
35986 -> 22751
35989 -> 18191
35989 -> 35986
35989 -> 35991
35989 -> 35998
35993 -> 22733
35998 -> 22731
36000 -> 831
36000 -> 833
36000 -> 835
36000 -> 846
36000 -> 1638
36000 -> 1726
36000 -> 12142
36000 -> 12346
36000 -> 14447
36000 -> 18191
36000 -> 35986
36000 -> 35991
36000 -> 35993
36000 -> 35998
36000 -> 36004
36000 -> 36006
36000 -> 36008
36000 -> 36010
36006 -> 35991
36012 -> 35627
36012 -> 35980
36012 -> 36000
36012 -> 36021
36012 -> 36023
36021 -> 6856
36023 -> 35986
36023 -> 35998
36023 -> 36010
36023 -> 36196
36023 -> 36198
36025 -> 6384
36025 -> 35870
36025 -> 35986
36025 -> 36004
36025 -> 36012
36025 -> 36031
36025 -> 36033
36031 -> 18191
36031 -> 35991
36031 -> 36033
36031 -> 36187
36033 -> 35993
36036 -> 18191
36036 -> 35836
36036 -> 35839
36036 -> 35842
36036 -> 35870
36036 -> 36012
36036 -> 36025
36036 -> 36031
36036 -> 36038
36036 -> 36040
36036 -> 36044
36036 -> 36048
36036 -> 36050
36036 -> 36052
36040 -> 242
36040 -> 11949
36040 -> 35797
36040 -> 36108
36040 -> 36116
36040 -> 36120
36040 -> 36124
36040 -> 36126
36040 -> 36128
36048 -> 9803
36048 -> 14567
36048 -> 14569
36048 -> 14877
36048 -> 15021
36048 -> 18191
36048 -> 35986
36048 -> 35991
36048 -> 35993
36048 -> 35998
36048 -> 36004
36048 -> 36006
36048 -> 36008
36048 -> 36124
36048 -> 36179
36048 -> 36181
36050 -> 14563
36050 -> 14567
36050 -> 14877
36050 -> 28619
36050 -> 35801
36050 -> 35986
36050 -> 36008
36050 -> 36033
36050 -> 36132
36050 -> 36190
36052 -> 8525
36089 -> 36040
36108 -> 827
36108 -> 831
36108 -> 12082
36108 -> 36153
36116 -> 35721
36120 -> 833
36120 -> 835
36120 -> 4282
36120 -> 8955
36120 -> 9822
36120 -> 22362
36120 -> 22367
36120 -> 22743
36120 -> 22755
36120 -> 26388
36120 -> 35719
36120 -> 35721
36120 -> 35723
36120 -> 35797
36120 -> 35799
36120 -> 35991
36120 -> 36006
36120 -> 36126
36120 -> 36139
36120 -> 36142
36124 -> 799
36124 -> 35993
36124 -> 35998
36124 -> 36171
36126 -> 35991
36128 -> 831
36128 -> 35991
36128 -> 36004
36128 -> 36132
36128 -> 36135
36132 -> 11949
36132 -> 35797
36139 -> 315
36139 -> 35991
36142 -> 9822
36153 -> 26388
36153 -> 35696
36153 -> 35719
36153 -> 35721
36153 -> 35723
36153 -> 35915
36171 -> 1638
36171 -> 35986
36171 -> 35998
36187 -> 22743
36190 -> 36880
36196 -> 35993
36196 -> 36187
36198 -> 35993
36198 -> 36187
36213 -> 22755
36228 -> 22741
36231 -> 22513
36231 -> 35808
36231 -> 36235
36238 -> 11082
36238 -> 22516
36238 -> 35735
36238 -> 35813
36238 -> 36240
36238 -> 36242
36238 -> 36245
36248 -> 25439
36248 -> 35741
36252 -> 25443
36252 -> 35747
36257 -> 242
36263 -> 36050
36265 -> 36031
36279 -> 12174
36284 -> 242
36284 -> 1942
36289 -> 36284
36311 -> 5348
36348 -> 5348
36361 -> 242
36367 -> 36374
36367 -> 36379
36374 -> 36407
36374 -> 36412
36379 -> 242
36381 -> 36379
36381 -> 36386
36386 -> 5600
36386 -> 5602
36386 -> 36374
36388 -> 36374
36388 -> 36379
36407 -> 35834
36412 -> 242
36412 -> 36574
36412 -> 36581
36414 -> 36417
36417 -> 35851
36419 -> 5575
36419 -> 12804
36419 -> 35488
36419 -> 35517
36419 -> 35613
36419 -> 35627
36419 -> 36044
36419 -> 36190
36419 -> 36421
36419 -> 36424
36419 -> 36426
36419 -> 36429
36419 -> 36431
36421 -> 2704
36426 -> 2673
36426 -> 35625
36431 -> 12174
36431 -> 36044
36431 -> 36590
36431 -> 36596
36431 -> 36599
36431 -> 36604
36431 -> 36609
36431 -> 36611
36431 -> 36613
36431 -> 36615
36435 -> 36438
36435 -> 36440
36438 -> 35856
36438 -> 36512
36440 -> 10991
36440 -> 35513
36440 -> 35515
36524 -> 242
36532 -> 242
36532 -> 313
36537 -> 242
36537 -> 313
36537 -> 9838
36537 -> 11947
36542 -> 313
36542 -> 2704
36542 -> 9848
36574 -> 1183
36574 -> 1942
36574 -> 38428
36581 -> 35378
36590 -> 242
36593 -> 36426
36596 -> 1726
36596 -> 2878
36596 -> 38386
36599 -> 35549
36604 -> 242
36609 -> 242
36609 -> 271
36609 -> 2206
36632 -> 35481
36639 -> 837
36639 -> 12348
36639 -> 36643
36643 -> 36654
36645 -> 831
36648 -> 12142
36654 -> 242
36657 -> 8527
36657 -> 12346
36657 -> 36044
36673 -> 242
36673 -> 313
36673 -> 439
36673 -> 1183
36673 -> 2874
36673 -> 36683
36673 -> 36688
36673 -> 36693
36673 -> 36698
36683 -> 242
36688 -> 242
36693 -> 242
36698 -> 242
36698 -> 2170
36698 -> 2280
36700 -> 36703
36705 -> 36708
36710 -> 2673
36710 -> 36700
36732 -> 998
36735 -> 958
36744 -> 998
36747 -> 958
36764 -> 1218
36767 -> 1218
36782 -> 242
36782 -> 313
36782 -> 1183
36782 -> 2874
36794 -> 989
36794 -> 2673
36841 -> 36844
36844 -> 36849
36844 -> 36851
36849 -> 242
36849 -> 315
36849 -> 1986
36849 -> 3875
36849 -> 11771
36858 -> 242
36858 -> 313
36858 -> 2628
36858 -> 3272
36871 -> 313
36871 -> 36190
36874 -> 443
36874 -> 2673
36874 -> 8527
36874 -> 12438
36874 -> 36878
36874 -> 36880
36878 -> 8525
36880 -> 2945
36882 -> 36886
36888 -> 315
36890 -> 2206
36893 -> 2206
36897 -> 313
36980 -> 36983
36983 -> 35834
36994 -> 4242
36994 -> 22424
36994 -> 35513
36994 -> 35515
36994 -> 35517
36994 -> 36044
36994 -> 36190
36994 -> 36996
36994 -> 37000
36996 -> 1183
36996 -> 1225
36996 -> 4153
36996 -> 8955
36996 -> 11945
36996 -> 35517
36996 -> 37005
37000 -> 1223
37000 -> 1225
37000 -> 23214
37000 -> 23295
37000 -> 23316
37000 -> 37005
37000 -> 37011
37011 -> 788
37011 -> 989
37011 -> 1223
37011 -> 1225
37011 -> 1726
37011 -> 6856
37011 -> 11945
37011 -> 22751
37011 -> 22755
37011 -> 23214
37011 -> 23295
37011 -> 23316
37011 -> 23336
37011 -> 35523
37011 -> 36426
37011 -> 37005
37011 -> 37019
37011 -> 37024
37011 -> 37029
37011 -> 37041
37011 -> 37047
37019 -> 989
37019 -> 1223
37019 -> 1225
37019 -> 22731
37019 -> 22751
37019 -> 22755
37019 -> 23214
37019 -> 23295
37019 -> 23316
37019 -> 23336
37019 -> 35523
37019 -> 36426
37019 -> 37005
37029 -> 989
37029 -> 1223
37029 -> 1225
37029 -> 6856
37029 -> 12821
37029 -> 22420
37029 -> 22751
37029 -> 23214
37029 -> 23295
37029 -> 23316
37029 -> 26412
37029 -> 37005
37029 -> 37024
37041 -> 989
37041 -> 1223
37041 -> 1225
37041 -> 1726
37041 -> 11945
37041 -> 22751
37041 -> 23214
37041 -> 23295
37041 -> 23316
37041 -> 37005
37047 -> 989
37047 -> 1223
37047 -> 1726
37047 -> 11945
37047 -> 22751
37047 -> 22755
37047 -> 23214
37047 -> 23295
37047 -> 23316
37047 -> 37005
37086 -> 37089
37086 -> 37095
37086 -> 37097
37086 -> 37099
37110 -> 37086
37110 -> 37111
37218 -> 35834
37251 -> 242
37251 -> 1186
37261 -> 242
37261 -> 1942
37267 -> 35851
37270 -> 831
37270 -> 998
37270 -> 1223
37270 -> 1225
37270 -> 1726
37270 -> 8959
37270 -> 8961
37270 -> 8963
37270 -> 8965
37270 -> 12804
37270 -> 26088
37270 -> 26114
37270 -> 26117
37270 -> 35488
37270 -> 35517
37270 -> 35627
37270 -> 36044
37270 -> 36190
37270 -> 37273
37270 -> 37278
37270 -> 37281
37270 -> 37287
37270 -> 37293
37270 -> 37296
37270 -> 37299
37270 -> 37306
37270 -> 37309
37270 -> 37313
37270 -> 37315
37270 -> 37317
37270 -> 37319
37270 -> 37321
37270 -> 37323
37270 -> 37327
37270 -> 37329
37270 -> 37331
37270 -> 37337
37270 -> 37339
37270 -> 37345
37270 -> 37347
37270 -> 37351
37270 -> 37353
37278 -> 242
37281 -> 958
37281 -> 989
37281 -> 1223
37281 -> 1225
37281 -> 1942
37281 -> 8959
37281 -> 8961
37281 -> 8963
37281 -> 9419
37281 -> 13069
37281 -> 25285
37281 -> 26040
37281 -> 26055
37281 -> 37299
37281 -> 37306
37281 -> 37351
37281 -> 37372
37281 -> 37374
37281 -> 37383
37281 -> 37387
37281 -> 37390
37281 -> 37392
37281 -> 37395
37287 -> 36426
37287 -> 37337
37287 -> 37463
37287 -> 37474
37296 -> 9133
37296 -> 13069
37299 -> 8955
37306 -> 9413
37306 -> 9419
37306 -> 11947
37306 -> 13069
37309 -> 35513
37309 -> 35515
37313 -> 9133
37315 -> 9413
37315 -> 9415
37315 -> 9419
37319 -> 8987
37319 -> 37435
37321 -> 9413
37321 -> 9419
37321 -> 13069
37323 -> 315
37323 -> 791
37327 -> 974
37327 -> 989
37327 -> 8959
37327 -> 8961
37327 -> 8965
37327 -> 12009
37327 -> 26055
37329 -> 956
37329 -> 8959
37329 -> 8961
37329 -> 8963
37329 -> 8965
37329 -> 9419
37329 -> 12009
37329 -> 26107
37329 -> 37306
37329 -> 37319
37329 -> 37321
37329 -> 37323
37329 -> 37339
37329 -> 37383
37329 -> 37392
37329 -> 37395
37329 -> 37410
37329 -> 37412
37329 -> 37415
37329 -> 37417
37329 -> 37419
37331 -> 8959
37331 -> 8961
37331 -> 8965
37331 -> 37306
37331 -> 37339
37331 -> 37383
37331 -> 37387
37331 -> 37395
37337 -> 35513
37337 -> 35515
37339 -> 989
37339 -> 9413
37339 -> 9419
37339 -> 11947
37339 -> 13069
37351 -> 9413
37351 -> 9419
37351 -> 11947
37353 -> 9413
37353 -> 9419
37353 -> 11947
37355 -> 35856
37355 -> 37255
37355 -> 37265
37355 -> 37365
37365 -> 313
37365 -> 2206
37365 -> 35513
37365 -> 35515
37365 -> 35517
37372 -> 958
37372 -> 9413
37372 -> 9419
37372 -> 11947
37372 -> 13069
37374 -> 13069
37383 -> 9413
37383 -> 9419
37383 -> 11947
37383 -> 13069
37387 -> 13069
37390 -> 954
37390 -> 13069
37392 -> 9413
37392 -> 9419
37392 -> 11947
37392 -> 13069
37395 -> 9413
37395 -> 9419
37395 -> 11947
37395 -> 13069
37412 -> 9413
37412 -> 9419
37412 -> 11947
37412 -> 13069
37415 -> 9413
37415 -> 9419
37415 -> 11947
37415 -> 13069
37419 -> 8959
37419 -> 8963
37419 -> 8965
37419 -> 9415
37419 -> 9419
37419 -> 9808
37419 -> 24418
37419 -> 24424
37419 -> 37306
37419 -> 37339
37419 -> 37351
37419 -> 37353
37419 -> 37387
37419 -> 37390
37419 -> 37392
37419 -> 37395
37419 -> 37423
37423 -> 9413
37423 -> 9419
37423 -> 11947
37423 -> 13069
37435 -> 242
37452 -> 12346
37455 -> 12346
37458 -> 398
37463 -> 242
37474 -> 1726
37558 -> 37561
37561 -> 37566
37566 -> 36844
37570 -> 37566
37582 -> 37585
37585 -> 36849
37591 -> 37594
37594 -> 36858
37601 -> 36886
37601 -> 36888
37601 -> 36897
37601 -> 37606
37606 -> 36862
37606 -> 36864
37606 -> 36874
37606 -> 36878
37606 -> 36880
37606 -> 36890
37606 -> 36893
37637 -> 37640
37640 -> 37645
37645 -> 36844
37662 -> 37645
37669 -> 37672
37672 -> 36849
37680 -> 37683
37683 -> 36858
37691 -> 2673
37691 -> 36052
37691 -> 36862
37691 -> 36874
37691 -> 36878
37691 -> 36880
37691 -> 36882
37691 -> 36886
37691 -> 36890
37691 -> 36893
37706 -> 989
37706 -> 37711
37711 -> 1183
37711 -> 1942
37711 -> 35834
37711 -> 36412
37723 -> 37706
37728 -> 37711
37734 -> 1726
37734 -> 2404
37734 -> 12804
37734 -> 35488
37734 -> 35517
37734 -> 35613
37734 -> 35627
37734 -> 36044
37734 -> 36190
37734 -> 36426
37734 -> 36429
37734 -> 36431
37734 -> 37736
37734 -> 37738
37734 -> 37740
37736 -> 10991
37736 -> 35513
37736 -> 35515
37751 -> 35834
37754 -> 37751
37754 -> 37762
37762 -> 35378
37764 -> 35851
37767 -> 12804
37767 -> 35488
37767 -> 35517
37767 -> 35613
37767 -> 35627
37767 -> 36044
37767 -> 36864
37767 -> 36867
37767 -> 36871
37767 -> 36874
37767 -> 36888
37767 -> 36890
37767 -> 37769
37767 -> 37771
37767 -> 37777
37769 -> 1986
37769 -> 10991
37769 -> 35513
37769 -> 35515
37771 -> 242
37774 -> 36426
37777 -> 242
37780 -> 8527
37780 -> 12346
37787 -> 35856
37794 -> 242
37802 -> 242
37832 -> 37835
37835 -> 38030
37837 -> 8961
37837 -> 23455
37837 -> 37841
37841 -> 2738
37843 -> 989
37843 -> 4242
37843 -> 11987
37843 -> 12640
37843 -> 37846
37846 -> 9838
37848 -> 989
37848 -> 37850
37848 -> 37852
37856 -> 9838
37861 -> 8961
37861 -> 8963
37861 -> 8967
37861 -> 9811
37861 -> 12618
37861 -> 12623
37861 -> 37837
37866 -> 989
37866 -> 37861
37871 -> 37874
37874 -> 12169
37876 -> 313
37876 -> 37879
37881 -> 37884
37881 -> 37886
37881 -> 37888
37884 -> 38039
37884 -> 38041
37886 -> 989
37886 -> 9413
37886 -> 9415
37886 -> 9419
37886 -> 9808
37886 -> 13030
37886 -> 13032
37888 -> 9838
37897 -> 4492
37905 -> 1986
37905 -> 5575
37905 -> 9419
37905 -> 9822
37905 -> 10777
37905 -> 11983
37905 -> 12618
37905 -> 12718
37905 -> 12720
37905 -> 12804
37905 -> 23765
37905 -> 25136
37905 -> 25955
37905 -> 26107
37905 -> 35488
37905 -> 35517
37905 -> 35613
37905 -> 35627
37905 -> 37837
37905 -> 37843
37905 -> 37846
37905 -> 37858
37905 -> 37876
37905 -> 37879
37905 -> 37907
37905 -> 37909
37905 -> 37912
37907 -> 10991
37907 -> 35513
37907 -> 35515
37909 -> 2704
37909 -> 35625
37912 -> 13026
37952 -> 37954
37954 -> 37832
37956 -> 37959
37959 -> 37832
37973 -> 37954
37984 -> 791
37984 -> 989
37984 -> 1223
37984 -> 1225
37984 -> 1726
37984 -> 9848
37984 -> 10777
37984 -> 12804
37984 -> 35488
37984 -> 35517
37984 -> 35613
37984 -> 35627
37984 -> 37837
37984 -> 37843
37984 -> 37856
37984 -> 37858
37984 -> 37876
37984 -> 37879
37984 -> 37909
37984 -> 37912
37984 -> 37986
37984 -> 37996
37984 -> 37999
37984 -> 38002
37986 -> 10991
37986 -> 35513
37986 -> 35515
37996 -> 439
37996 -> 443
37996 -> 989
37996 -> 8959
37996 -> 8967
37996 -> 10777
38002 -> 989
38002 -> 1223
38002 -> 1225
38002 -> 1726
38002 -> 38013
38013 -> 972
38013 -> 989
38013 -> 1726
38030 -> 35486
38039 -> 35551
38039 -> 37888
38039 -> 38049
38039 -> 38137
38039 -> 38139
38073 -> 35481
38079 -> 837
38079 -> 12348
38079 -> 38083
38083 -> 11983
38083 -> 38094
38085 -> 831
38088 -> 12142
38094 -> 242
38101 -> 12346
38101 -> 38105
38105 -> 4282
38105 -> 4295
38105 -> 11983
38105 -> 11987
38105 -> 38108
38108 -> 8527
38139 -> 313
38139 -> 11947
38155 -> 242
38155 -> 9413
38155 -> 9838
38155 -> 11947
38155 -> 11956
38182 -> 8525
38182 -> 8527
38182 -> 38187
38187 -> 242
38201 -> 36880
38213 -> 8525
38216 -> 8527
38219 -> 8525
38219 -> 38216
38219 -> 38224
38224 -> 242
38239 -> 13026
38246 -> 242
38254 -> 954
38254 -> 38246
38270 -> 35378
38277 -> 1942
38277 -> 35378
38282 -> 1223
38282 -> 1726
38282 -> 8525
38282 -> 35384
38282 -> 35386
38307 -> 1942
38307 -> 35378
38312 -> 1223
38312 -> 1726
38312 -> 8527
38312 -> 35384
38312 -> 35386
38330 -> 1942
38330 -> 35378
38335 -> 1223
38335 -> 1726
38335 -> 35384
38335 -> 35386
38335 -> 38108
38372 -> 38374
38374 -> 242
38374 -> 1942
38374 -> 2804
38374 -> 2806
38386 -> 1218
38386 -> 2849
38386 -> 2863
38386 -> 2865
38396 -> 2836
38398 -> 2840
38428 -> 35545
38433 -> 36574
38437 -> 1726
38437 -> 3458
38437 -> 12804
38437 -> 35488
38437 -> 35613
38437 -> 35627
38437 -> 38439
38437 -> 38441
38437 -> 38443
38437 -> 38445
38437 -> 38447
38437 -> 38449
38437 -> 38452
38447 -> 1218
38447 -> 35625
38449 -> 242
38452 -> 37738
38477 -> 1942
38477 -> 35488
38477 -> 38428
38488 -> 6856
38492 -> 36599
38496 -> 8012
38496 -> 10787
38496 -> 12174
38496 -> 35511
38496 -> 35523
38496 -> 36599
38496 -> 36609
38496 -> 38439
38496 -> 38441
38496 -> 38443
38496 -> 38445
38496 -> 38500
38500 -> 12438
38500 -> 38507
38507 -> 242
38510 -> 12346
38510 -> 37738
38528 -> 36609
38551 -> 1942
38551 -> 35378
38556 -> 1223
38556 -> 1726
38556 -> 35384
38556 -> 35386
38556 -> 37738
38589 -> 35554
38589 -> 38532
38589 -> 38534
38589 -> 38536
38589 -> 38567
38669 -> 242
38675 -> 242
38717 -> 242
38717 -> 1942
38717 -> 1986
38725 -> 6856
38734 -> 38739
38741 -> 35519
38741 -> 38750
38741 -> 38752
38741 -> 38754
38754 -> 12438
38754 -> 38761
38761 -> 242
38764 -> 8527
38764 -> 12346
38825 -> 242
38825 -> 1942
38825 -> 1986
38833 -> 6856
38842 -> 38739
38847 -> 35519
38847 -> 38752
38847 -> 38854
38847 -> 38856
38856 -> 12438
38856 -> 38864
38864 -> 242
38867 -> 12346
38867 -> 38871
38871 -> 38874
38874 -> 8527
38914 -> 38717
38934 -> 38825
38972 -> 38975
38975 -> 38980
38975 -> 38982
38980 -> 242
38980 -> 315
38980 -> 1986
38980 -> 3875
38980 -> 11771
38988 -> 242
38988 -> 313
38988 -> 2628
38988 -> 3272
39000 -> 313
39000 -> 39003
39003 -> 39011
39005 -> 443
39005 -> 2673
39005 -> 8527
39005 -> 12438
39005 -> 39009
39005 -> 39011
39009 -> 8525
39011 -> 2945
39013 -> 36886
39017 -> 315
39019 -> 2206
39022 -> 2206
39026 -> 313
39048 -> 39050
39048 -> 39055
39050 -> 242
39055 -> 38669
39060 -> 35608
39063 -> 12806
39067 -> 2673
39067 -> 2863
39067 -> 2865
39067 -> 12800
39071 -> 39080
39071 -> 39085
39080 -> 35618
39080 -> 35631
39080 -> 39106
39080 -> 39108
39080 -> 39110
39085 -> 242
39087 -> 39080
39094 -> 39080
39094 -> 39085
39106 -> 39115
39106 -> 39121
39106 -> 39124
39108 -> 271
39108 -> 313
39108 -> 1183
39147 -> 39048
39150 -> 39050
39153 -> 39080
39153 -> 39085
39159 -> 39080
39159 -> 39085
39159 -> 39167
39167 -> 242
39192 -> 39194
39192 -> 39199
39194 -> 242
39199 -> 38669
39204 -> 35608
39207 -> 12806
39211 -> 2704
39211 -> 2863
39211 -> 2865
39211 -> 12800
39215 -> 39222
39222 -> 313
39222 -> 1986
39222 -> 39085
39222 -> 39229
39222 -> 39240
39222 -> 39245
39224 -> 39229
39229 -> 35618
39229 -> 35631
39229 -> 39251
39229 -> 39253
39229 -> 39255
39229 -> 39257
39240 -> 242
39245 -> 242
39245 -> 12308
39251 -> 39115
39251 -> 39279
39251 -> 39281
39253 -> 313
39253 -> 11947
39255 -> 9419
39262 -> 9838
39281 -> 9838
39367 -> 39370
39370 -> 39150
39382 -> 4242
39382 -> 22424
39382 -> 39003
39382 -> 39126
39382 -> 39128
39382 -> 39130
39382 -> 39132
39382 -> 39386
39382 -> 39392
39386 -> 1183
39386 -> 1225
39386 -> 4153
39386 -> 8955
39386 -> 11945
39386 -> 39128
39386 -> 39397
39392 -> 1223
39392 -> 1225
39392 -> 23214
39392 -> 23295
39392 -> 23316
39392 -> 39397
39392 -> 39403
39403 -> 788
39403 -> 989
39403 -> 1223
39403 -> 1225
39403 -> 1726
39403 -> 6856
39403 -> 11945
39403 -> 22751
39403 -> 22755
39403 -> 23214
39403 -> 23295
39403 -> 23316
39403 -> 23336
39403 -> 39063
39403 -> 39067
39403 -> 39397
39403 -> 39411
39403 -> 39417
39403 -> 39422
39403 -> 39434
39403 -> 39440
39411 -> 989
39411 -> 1223
39411 -> 1225
39411 -> 22731
39411 -> 22751
39411 -> 22755
39411 -> 23214
39411 -> 23295
39411 -> 23316
39411 -> 23336
39411 -> 39063
39411 -> 39067
39411 -> 39397
39422 -> 989
39422 -> 1223
39422 -> 1225
39422 -> 6856
39422 -> 12821
39422 -> 22420
39422 -> 22751
39422 -> 23214
39422 -> 23295
39422 -> 23316
39422 -> 26412
39422 -> 39397
39422 -> 39417
39434 -> 989
39434 -> 1223
39434 -> 1225
39434 -> 1726
39434 -> 11945
39434 -> 22751
39434 -> 23214
39434 -> 23295
39434 -> 23316
39434 -> 39397
39440 -> 989
39440 -> 1223
39440 -> 1726
39440 -> 11945
39440 -> 22751
39440 -> 22755
39440 -> 23214
39440 -> 23295
39440 -> 23316
39440 -> 39397
39476 -> 37089
39476 -> 37095
39476 -> 37097
39476 -> 37099
39488 -> 37111
39488 -> 39476
39605 -> 39607
39607 -> 39611
39611 -> 39150
39619 -> 39623
39623 -> 39055
39623 -> 39611
39655 -> 39150
39681 -> 242
39681 -> 1186
39691 -> 242
39691 -> 1942
39697 -> 39080
39697 -> 39703
39703 -> 39685
39703 -> 39695
39705 -> 831
39705 -> 998
39705 -> 1223
39705 -> 1225
39705 -> 1726
39705 -> 8959
39705 -> 8961
39705 -> 8963
39705 -> 8965
39705 -> 26088
39705 -> 26114
39705 -> 26117
39705 -> 37273
39705 -> 37323
39705 -> 38898
39705 -> 39003
39705 -> 39065
39705 -> 39126
39705 -> 39128
39705 -> 39707
39705 -> 39713
39705 -> 39716
39705 -> 39719
39705 -> 39721
39705 -> 39724
39705 -> 39726
39705 -> 39731
39705 -> 39734
39705 -> 39736
39705 -> 39738
39705 -> 39740
39705 -> 39742
39705 -> 39746
39705 -> 39748
39705 -> 39750
39705 -> 39756
39705 -> 39760
39705 -> 39766
39705 -> 39768
39705 -> 39772
39705 -> 39774
39705 -> 39776
39707 -> 313
39707 -> 1186
39707 -> 2206
39707 -> 39128
39707 -> 39130
39707 -> 39132
39713 -> 242
39716 -> 958
39716 -> 989
39716 -> 1223
39716 -> 1225
39716 -> 8959
39716 -> 8961
39716 -> 8963
39716 -> 9419
39716 -> 13069
39716 -> 25285
39716 -> 26040
39716 -> 26055
39716 -> 39726
39716 -> 39731
39716 -> 39772
39716 -> 39790
39716 -> 39792
39716 -> 39800
39716 -> 39804
39716 -> 39807
39716 -> 39809
39716 -> 39812
39719 -> 39067
39719 -> 39756
39719 -> 39883
39724 -> 9133
39724 -> 13069
39726 -> 8955
39731 -> 9413
39731 -> 9419
39731 -> 11947
39731 -> 13069
39734 -> 39130
39734 -> 39132
39736 -> 9133
39738 -> 9413
39738 -> 9415
39738 -> 9419
39740 -> 8987
39740 -> 39850
39742 -> 9413
39742 -> 9419
39742 -> 13069
39746 -> 974
39746 -> 989
39746 -> 8959
39746 -> 8961
39746 -> 8965
39746 -> 12009
39746 -> 26055
39748 -> 956
39748 -> 8959
39748 -> 8961
39748 -> 8963
39748 -> 8965
39748 -> 9419
39748 -> 12009
39748 -> 26107
39748 -> 37323
39748 -> 39731
39748 -> 39740
39748 -> 39742
39748 -> 39760
39748 -> 39800
39748 -> 39809
39748 -> 39812
39748 -> 39827
39748 -> 39829
39748 -> 39831
39748 -> 39833
39748 -> 39835
39750 -> 8959
39750 -> 8961
39750 -> 8965
39750 -> 39731
39750 -> 39760
39750 -> 39800
39750 -> 39804
39750 -> 39812
39756 -> 39130
39756 -> 39132
39760 -> 989
39760 -> 9413
39760 -> 9419
39760 -> 11947
39760 -> 13069
39772 -> 9413
39772 -> 9419
39772 -> 11947
39774 -> 9413
39774 -> 9419
39774 -> 11947
39790 -> 958
39790 -> 9413
39790 -> 9419
39790 -> 11947
39790 -> 13069
39792 -> 13069
39800 -> 9413
39800 -> 9419
39800 -> 11947
39800 -> 13069
39804 -> 13069
39807 -> 954
39807 -> 13069
39809 -> 9413
39809 -> 9419
39809 -> 11947
39809 -> 13069
39812 -> 9413
39812 -> 9419
39812 -> 11947
39812 -> 13069
39829 -> 9413
39829 -> 9419
39829 -> 11947
39829 -> 13069
39831 -> 9413
39831 -> 9419
39831 -> 11947
39831 -> 13069
39835 -> 8959
39835 -> 8963
39835 -> 8965
39835 -> 9415
39835 -> 9419
39835 -> 9808
39835 -> 24418
39835 -> 24424
39835 -> 39731
39835 -> 39760
39835 -> 39772
39835 -> 39774
39835 -> 39804
39835 -> 39807
39835 -> 39809
39835 -> 39812
39835 -> 39839
39839 -> 9413
39839 -> 9419
39839 -> 11947
39839 -> 13069
39850 -> 242
39865 -> 12346
39868 -> 12346
39871 -> 398
39883 -> 1726
39968 -> 39971
39971 -> 39976
39976 -> 38975
39980 -> 39976
39992 -> 39995
39995 -> 38980
40001 -> 40004
40004 -> 38988
40011 -> 36886
40011 -> 39017
40011 -> 39026
40011 -> 40016
40016 -> 38991
40016 -> 38993
40016 -> 39005
40016 -> 39009
40016 -> 39011
40016 -> 39019
40016 -> 39022
40039 -> 242
40039 -> 313
40039 -> 439
40039 -> 1183
40039 -> 2874
40039 -> 40049
40039 -> 40054
40039 -> 40059
40039 -> 40064
40049 -> 242
40054 -> 242
40059 -> 242
40064 -> 242
40064 -> 2170
40064 -> 2280
40066 -> 40069
40071 -> 40074
40076 -> 2673
40076 -> 40066
40099 -> 998
40102 -> 958
40111 -> 998
40114 -> 958
40127 -> 1218
40130 -> 1218
40145 -> 242
40145 -> 313
40145 -> 1183
40145 -> 2874
40157 -> 989
40157 -> 2673
40178 -> 40181
40181 -> 40186
40186 -> 38975
40203 -> 40186
40210 -> 40213
40213 -> 38980
40221 -> 40224
40224 -> 38988
40232 -> 2673
40232 -> 36886
40232 -> 38991
40232 -> 39005
40232 -> 39009
40232 -> 39011
40232 -> 39013
40232 -> 39019
40232 -> 39022
40232 -> 40237
40237 -> 8525
40255 -> 989
40255 -> 40260
40260 -> 1183
40260 -> 1942
40260 -> 39050
40260 -> 40272
40272 -> 40318
40272 -> 40325
40274 -> 40255
40279 -> 40260
40285 -> 1726
40285 -> 2404
40285 -> 38898
40285 -> 39003
40285 -> 39065
40285 -> 39067
40285 -> 39126
40285 -> 39128
40285 -> 40290
40285 -> 40292
40285 -> 40294
40285 -> 40296
40290 -> 39126
40290 -> 40330
40290 -> 40336
40290 -> 40339
40290 -> 40341
40290 -> 40343
40290 -> 40345
40318 -> 1183
40318 -> 1942
40318 -> 41894
40325 -> 38675
40330 -> 242
40333 -> 39067
40336 -> 1726
40336 -> 35618
40336 -> 41996
40339 -> 1986
40339 -> 35618
40339 -> 35631
40339 -> 41926
40351 -> 39055
40351 -> 40353
40353 -> 39050
40357 -> 40353
40357 -> 40361
40361 -> 38675
40363 -> 40366
40368 -> 39080
40368 -> 40366
40377 -> 1986
40377 -> 38898
40377 -> 38993
40377 -> 38996
40377 -> 39000
40377 -> 39005
40377 -> 39017
40377 -> 39019
40377 -> 39065
40377 -> 39126
40377 -> 39128
40377 -> 40379
40377 -> 40385
40379 -> 242
40382 -> 39067
40385 -> 242
40388 -> 8527
40388 -> 12346
40419 -> 242
40419 -> 846
40428 -> 242
40428 -> 846
40431 -> 40435
40435 -> 831
40435 -> 40441
40441 -> 242
40443 -> 831
40446 -> 833
40446 -> 837
40449 -> 12142
40451 -> 40458
40458 -> 833
40458 -> 38854
40458 -> 40464
40458 -> 40466
40458 -> 40471
40458 -> 40476
40458 -> 40478
40471 -> 242
40476 -> 242
40478 -> 8525
40486 -> 40488
40488 -> 242
40491 -> 833
40491 -> 4782
40491 -> 40494
40496 -> 833
40496 -> 4778
40496 -> 40494
40505 -> 833
40505 -> 4778
40505 -> 40494
40508 -> 258
40508 -> 264
40508 -> 336
40508 -> 350
40508 -> 833
40508 -> 4778
40508 -> 40494
40516 -> 40419
40520 -> 40451
40520 -> 40523
40523 -> 1970
40526 -> 1971
40530 -> 1980
40535 -> 40446
40535 -> 40520
40535 -> 40537
40535 -> 40542
40542 -> 242
40542 -> 1183
40542 -> 6204
40542 -> 40555
40542 -> 40557
40555 -> 12438
40555 -> 40568
40557 -> 958
40557 -> 989
40557 -> 40464
40557 -> 40494
40557 -> 40577
40557 -> 40579
40568 -> 242
40571 -> 12346
40571 -> 40464
40571 -> 40466
40571 -> 40494
40577 -> 40464
40579 -> 11771
40579 -> 40464
40579 -> 40494
40579 -> 40588
40588 -> 2206
40588 -> 11771
40588 -> 40464
40588 -> 40595
40608 -> 40419
40611 -> 2023
40611 -> 40451
40614 -> 40446
40614 -> 40611
40614 -> 40617
40614 -> 40622
40622 -> 242
40622 -> 3456
40622 -> 40633
40622 -> 40635
40622 -> 40640
40633 -> 40494
40635 -> 989
40635 -> 6856
40635 -> 11771
40635 -> 40464
40635 -> 40494
40640 -> 1031
40640 -> 1033
40640 -> 1077
40640 -> 40464
40640 -> 40494
40656 -> 40419
40661 -> 40419
40664 -> 4879
40664 -> 40451
40666 -> 4879
40666 -> 40458
40670 -> 4879
40670 -> 40451
40710 -> 39050
40713 -> 2704
40717 -> 39085
40717 -> 40723
40723 -> 1272
40723 -> 39080
40760 -> 39192
40763 -> 39194
40769 -> 8959
40769 -> 8967
40769 -> 40771
40771 -> 264
40771 -> 313
40771 -> 338
40771 -> 1297
40771 -> 8961
40771 -> 23455
40771 -> 39265
40780 -> 4242
40780 -> 9822
40780 -> 11987
40780 -> 39211
40780 -> 40784
40780 -> 40787
40784 -> 313
40784 -> 39265
40787 -> 989
40787 -> 4242
40787 -> 11987
40787 -> 12640
40787 -> 39262
40793 -> 989
40793 -> 40795
40799 -> 9838
40804 -> 40806
40806 -> 40811
40811 -> 8961
40811 -> 8963
40811 -> 8967
40811 -> 9811
40811 -> 12618
40811 -> 12623
40811 -> 40771
40816 -> 989
40816 -> 3456
40816 -> 40795
40816 -> 40811
40820 -> 989
40820 -> 40811
40824 -> 2726
40824 -> 39085
40824 -> 39240
40824 -> 39245
40824 -> 40831
40831 -> 2707
40831 -> 39229
40834 -> 39085
40834 -> 39240
40834 -> 39245
40834 -> 40831
40846 -> 2726
40846 -> 39255
40846 -> 39259
40846 -> 39262
40846 -> 39265
40846 -> 39268
40846 -> 40848
40848 -> 989
40848 -> 9413
40848 -> 9415
40848 -> 9419
40848 -> 9808
40848 -> 13030
40848 -> 13032
40865 -> 39048
40867 -> 39050
40870 -> 2704
40874 -> 161
40874 -> 39094
40881 -> 2662
40881 -> 40874
40896 -> 5348
40911 -> 40913
40913 -> 39199
40913 -> 40918
40915 -> 40918
40918 -> 40763
40927 -> 1986
40927 -> 5575
40927 -> 9419
40927 -> 9822
40927 -> 10777
40927 -> 11983
40927 -> 12618
40927 -> 12718
40927 -> 12720
40927 -> 23765
40927 -> 25136
40927 -> 25955
40927 -> 26107
40927 -> 38898
40927 -> 39209
40927 -> 39211
40927 -> 39259
40927 -> 39262
40927 -> 39265
40927 -> 40771
40927 -> 40784
40927 -> 40787
40927 -> 40930
40927 -> 40932
40930 -> 41724
40932 -> 8525
40966 -> 40968
40968 -> 40763
40970 -> 40973
40973 -> 40763
40987 -> 40968
40998 -> 791
40998 -> 989
40998 -> 1223
40998 -> 1225
40998 -> 1726
40998 -> 9848
40998 -> 10777
40998 -> 38898
40998 -> 39209
40998 -> 39211
40998 -> 39259
40998 -> 39265
40998 -> 40771
40998 -> 40784
40998 -> 40787
40998 -> 40799
40998 -> 40801
40998 -> 40930
40998 -> 40932
40998 -> 41008
40998 -> 41011
40998 -> 41015
41008 -> 439
41008 -> 443
41008 -> 989
41008 -> 8959
41008 -> 8967
41008 -> 10777
41015 -> 989
41015 -> 1223
41015 -> 1225
41015 -> 1726
41015 -> 41025
41025 -> 972
41025 -> 989
41025 -> 1726
41053 -> 39055
41053 -> 41056
41056 -> 5775
41056 -> 41061
41056 -> 41066
41061 -> 40867
41066 -> 242
41068 -> 41061
41068 -> 41066
41086 -> 5598
41086 -> 5615
41086 -> 38898
41086 -> 39003
41086 -> 39060
41086 -> 39065
41086 -> 39067
41086 -> 39126
41086 -> 39128
41086 -> 40870
41086 -> 41090
41086 -> 41096
41086 -> 41098
41096 -> 242
41098 -> 1218
41098 -> 1223
41098 -> 6856
41118 -> 40870
41129 -> 5348
41154 -> 242
41162 -> 242
41162 -> 313
41167 -> 242
41167 -> 313
41167 -> 9838
41167 -> 11947
41172 -> 313
41172 -> 2704
41172 -> 9848
41215 -> 242
41215 -> 41217
41229 -> 29590
41240 -> 4056
41242 -> 41248
41263 -> 4242
41263 -> 41268
41268 -> 242
41277 -> 242
41277 -> 11983
41284 -> 242
41284 -> 4282
41297 -> 26563
41300 -> 11082
41300 -> 26566
41300 -> 35733
41300 -> 35735
41302 -> 25407
41302 -> 35741
41305 -> 25413
41305 -> 35747
41315 -> 4242
41315 -> 41319
41319 -> 242
41330 -> 4295
41330 -> 11983
41333 -> 4295
41336 -> 26563
41339 -> 11082
41339 -> 26566
41339 -> 35735
41341 -> 25407
41341 -> 35741
41344 -> 25413
41344 -> 35747
41365 -> 6856
41379 -> 5348
41406 -> 41408
41408 -> 41215
41418 -> 41424
41418 -> 41426
41418 -> 41428
41424 -> 9419
41428 -> 11947
41430 -> 831
41430 -> 833
41430 -> 835
41430 -> 846
41430 -> 1638
41430 -> 12346
41430 -> 14447
41430 -> 41235
41430 -> 41237
41430 -> 41424
41430 -> 41426
41430 -> 41428
41430 -> 41434
41430 -> 41436
41430 -> 41438
41430 -> 41440
41430 -> 41442
41434 -> 1638
41436 -> 9413
41440 -> 41426
41442 -> 1638
41442 -> 41424
41442 -> 41436
41446 -> 41240
41446 -> 41418
41446 -> 41424
41446 -> 41430
41446 -> 41436
41446 -> 41455
41446 -> 41457
41446 -> 41459
41455 -> 6856
41457 -> 9415
41457 -> 9419
41457 -> 41428
41459 -> 1726
41459 -> 9415
41459 -> 9419
41459 -> 41428
41461 -> 6384
41461 -> 41365
41461 -> 41424
41461 -> 41438
41461 -> 41446
41461 -> 41467
41461 -> 41469
41467 -> 9419
41467 -> 18191
41467 -> 41426
41467 -> 41428
41469 -> 41428
41472 -> 41220
41472 -> 41223
41472 -> 41226
41472 -> 41229
41472 -> 41446
41472 -> 41461
41472 -> 41467
41472 -> 41474
41472 -> 41481
41472 -> 41483
41474 -> 242
41474 -> 11949
41474 -> 41326
41474 -> 41534
41474 -> 41542
41474 -> 41546
41474 -> 41549
41481 -> 9419
41481 -> 9803
41481 -> 14567
41481 -> 14569
41481 -> 14877
41481 -> 15021
41481 -> 18191
41481 -> 36179
41481 -> 36181
41481 -> 41426
41481 -> 41428
41481 -> 41436
41481 -> 41438
41481 -> 41440
41481 -> 41442
41483 -> 14563
41483 -> 14567
41483 -> 14877
41483 -> 28619
41483 -> 39003
41483 -> 41330
41483 -> 41424
41483 -> 41442
41483 -> 41469
41483 -> 41553
41517 -> 41474
41534 -> 827
41534 -> 831
41534 -> 12082
41534 -> 41575
41542 -> 41293
41546 -> 833
41546 -> 835
41546 -> 4282
41546 -> 8955
41546 -> 9822
41546 -> 22362
41546 -> 22367
41546 -> 22743
41546 -> 22755
41546 -> 26388
41546 -> 41291
41546 -> 41293
41546 -> 41295
41546 -> 41326
41546 -> 41328
41546 -> 41426
41546 -> 41440
41546 -> 41560
41546 -> 41563
41546 -> 41565
41549 -> 831
41549 -> 41426
41549 -> 41438
41549 -> 41553
41549 -> 41556
41553 -> 11949
41553 -> 41326
41560 -> 315
41560 -> 41426
41563 -> 41426
41565 -> 9822
41575 -> 26388
41575 -> 41268
41575 -> 41291
41575 -> 41293
41575 -> 41295
41575 -> 41385
41607 -> 9415
41620 -> 8967
41622 -> 3873
41622 -> 36235
41622 -> 41336
41626 -> 11082
41626 -> 16515
41626 -> 35735
41626 -> 36240
41626 -> 36242
41626 -> 36245
41626 -> 41339
41629 -> 25439
41629 -> 35741
41632 -> 25443
41632 -> 35747
41647 -> 38717
41661 -> 38825
41675 -> 38717
41697 -> 8525
41697 -> 8527
41697 -> 41702
41702 -> 242
41716 -> 39011
41724 -> 2945
41732 -> 8527
41735 -> 8525
41735 -> 41732
41735 -> 41740
41740 -> 242
41755 -> 41724
41781 -> 38669
41786 -> 38675
41791 -> 1942
41791 -> 38675
41796 -> 1223
41796 -> 1726
41796 -> 8525
41796 -> 38679
41796 -> 38681
41819 -> 1942
41819 -> 38675
41824 -> 1223
41824 -> 1726
41824 -> 8527
41824 -> 38679
41824 -> 38681
41840 -> 38675
41844 -> 1942
41844 -> 38675
41849 -> 1223
41849 -> 1726
41849 -> 38679
41849 -> 38681
41849 -> 38874
41894 -> 242
41898 -> 35608
41901 -> 12806
41915 -> 1218
41915 -> 2863
41915 -> 2865
41915 -> 12800
41928 -> 40339
41982 -> 41984
41984 -> 242
41984 -> 1942
41984 -> 35631
41996 -> 1218
41996 -> 2863
41996 -> 2865
41996 -> 12800
42006 -> 35608
42008 -> 12806
42041 -> 40318
42045 -> 1726
42045 -> 3458
42045 -> 38898
42045 -> 41903
42045 -> 41906
42045 -> 41909
42045 -> 41912
42045 -> 41915
42045 -> 41935
42045 -> 42053
42045 -> 42056
42053 -> 242
42056 -> 40292
42070 -> 38669
42077 -> 1942
42077 -> 38675
42082 -> 1223
42082 -> 1726
42082 -> 38679
42082 -> 38681
42082 -> 40292
42110 -> 242
42110 -> 1942
42110 -> 1986
42118 -> 38739
42126 -> 6856
42129 -> 42136
42136 -> 8012
42136 -> 38752
42136 -> 41953
42136 -> 42146
42146 -> 12438
42146 -> 42153
42153 -> 242
42156 -> 12346
42156 -> 40292
42184 -> 242
42184 -> 9413
42184 -> 9838
42184 -> 11947
42184 -> 11956
42196 -> 242
42198 -> 831
42198 -> 846
42198 -> 42201
42198 -> 42203
42198 -> 42205
42201 -> 831
42203 -> 13627
42203 -> 13790
42203 -> 42216
42203 -> 42255
42205 -> 791
42205 -> 6865
42205 -> 42211
42211 -> 791
42211 -> 6865
42211 -> 42216
42220 -> 242
42222 -> 42203
42227 -> 3272
42227 -> 42222
42231 -> 3272
42231 -> 42234
42234 -> 827
42234 -> 989
42234 -> 42201
42234 -> 42245
42240 -> 242
42245 -> 831
42295 -> 242
42300 -> 42303
42305 -> 42303
42310 -> 42314
42314 -> 42317
42319 -> 1942
42319 -> 42317
42322 -> 42317
42326 -> 42317
42328 -> 42317
42331 -> 443
42331 -> 958
42331 -> 989
42331 -> 42317
42354 -> 42360
42360 -> 42375
42360 -> 42384
42362 -> 42360
42375 -> 242
42384 -> 315
42384 -> 791
42384 -> 42398
42384 -> 42400
42384 -> 42402
42384 -> 42404
42386 -> 42360
42393 -> 42384
42398 -> 42384
42430 -> 42427
42433 -> 42427
42435 -> 42427
42437 -> 443
42437 -> 958
42437 -> 989
42437 -> 1031
42437 -> 1033
42437 -> 42433
42440 -> 42427
42442 -> 1942
42442 -> 42427
42445 -> 42427
42447 -> 1942
42447 -> 42427
42451 -> 42454
42454 -> 42427
42456 -> 2206
42456 -> 42454
42478 -> 242
42478 -> 313
42478 -> 9413
42478 -> 26873
42478 -> 26880
42478 -> 26882
42492 -> 242
42492 -> 9413
42492 -> 26873
42492 -> 26880
42492 -> 26882
42503 -> 9419
42503 -> 11947
42503 -> 42505
42542 -> 42544
42544 -> 42549
42544 -> 42551
42549 -> 846
42549 -> 1942
42549 -> 8076
42549 -> 42576
42551 -> 242
42553 -> 42549
42553 -> 42557
42557 -> 242
42559 -> 42553
42563 -> 42549
42563 -> 42567
42569 -> 42563
42576 -> 43305
42584 -> 5575
42584 -> 42593
42584 -> 42595
42584 -> 42597
42593 -> 2874
42593 -> 42650
42597 -> 835
42597 -> 3871
42597 -> 3884
42597 -> 12142
42597 -> 42629
42597 -> 42651
42597 -> 42673
42597 -> 42688
42597 -> 42691
42600 -> 2874
42600 -> 3875
42600 -> 42595
42600 -> 42597
42600 -> 42609
42600 -> 42615
42600 -> 42620
42600 -> 42622
42600 -> 42627
42600 -> 42629
42600 -> 42633
42627 -> 42650
42635 -> 2874
42635 -> 42595
42635 -> 42597
42635 -> 42609
42635 -> 42615
42635 -> 42620
42635 -> 42627
42635 -> 42633
42635 -> 42647
42650 -> 242
42661 -> 835
42661 -> 42633
42661 -> 42663
42661 -> 42665
42661 -> 42667
42661 -> 42669
42665 -> 403
42665 -> 788
42665 -> 791
42667 -> 45871
42667 -> 46026
42671 -> 42633
42671 -> 42663
42671 -> 42667
42671 -> 42669
42671 -> 42673
42673 -> 242
42681 -> 42667
42681 -> 42673
42683 -> 835
42683 -> 42665
42683 -> 42667
42688 -> 45875
42691 -> 45875
42698 -> 6856
42698 -> 8118
42712 -> 315
42716 -> 42719
42719 -> 8004
42719 -> 42576
42725 -> 835
42725 -> 8131
42725 -> 42665
42725 -> 42728
42725 -> 42730
42725 -> 42732
42728 -> 8453
42728 -> 9955
42728 -> 42576
42728 -> 42629
42728 -> 42756
42728 -> 42760
42728 -> 42787
42732 -> 835
42732 -> 10258
42732 -> 42710
42732 -> 42728
42734 -> 8088
42734 -> 8097
42734 -> 42665
42734 -> 42710
42734 -> 42730
42734 -> 42732
42734 -> 42737
42734 -> 42739
42739 -> 835
42739 -> 42665
42739 -> 42728
42744 -> 835
42744 -> 2206
42744 -> 8088
42744 -> 10262
42744 -> 42710
42744 -> 42728
42744 -> 42730
42744 -> 42732
42744 -> 42737
42744 -> 42747
42744 -> 42749
42744 -> 42751
42754 -> 42756
42756 -> 45875
42758 -> 42760
42760 -> 45875
42770 -> 42719
42787 -> 989
42787 -> 42629
42787 -> 42760
42793 -> 242
42797 -> 9133
42813 -> 42816
42816 -> 242
42816 -> 313
42816 -> 2206
42816 -> 2874
42828 -> 42830
42837 -> 42828
42879 -> 42375
42879 -> 42400
42879 -> 42402
42879 -> 42881
42881 -> 42889
42883 -> 42375
42883 -> 42881
42886 -> 42375
42886 -> 42889
42889 -> 315
42889 -> 791
42889 -> 42400
42889 -> 42402
42889 -> 42881
42889 -> 42899
42891 -> 42889
42899 -> 42404
42899 -> 42905
42899 -> 42926
42899 -> 42928
42901 -> 42905
42905 -> 42913
42913 -> 42919
42942 -> 42940
42942 -> 42945
42945 -> 42949
42951 -> 42949
42951 -> 42954
42969 -> 42375
42969 -> 42400
42969 -> 42402
42969 -> 42973
42973 -> 42983
42975 -> 42375
42975 -> 42978
42978 -> 42404
42980 -> 42375
42980 -> 42983
42983 -> 788
42983 -> 42400
42983 -> 42402
42983 -> 42404
42983 -> 42973
42983 -> 42978
42985 -> 42375
42985 -> 42973
43008 -> 42940
43011 -> 42940
43014 -> 43011
43020 -> 43022
43024 -> 43027
43029 -> 8012
43031 -> 43033
43035 -> 9133
43037 -> 10462
43039 -> 10464
43042 -> 43044
43046 -> 43049
43051 -> 43054
43056 -> 8004
43126 -> 2628
43126 -> 2632
43126 -> 4844
43126 -> 4846
43126 -> 4856
43126 -> 4864
43126 -> 4866
43126 -> 8600
43126 -> 42576
43126 -> 43027
43126 -> 43130
43132 -> 10436
43132 -> 10460
43132 -> 42576
43139 -> 6273
43139 -> 10464
43139 -> 42576
43139 -> 43044
43139 -> 43143
43143 -> 1942
43143 -> 43027
43148 -> 1140
43148 -> 2628
43148 -> 2632
43148 -> 4844
43148 -> 4846
43148 -> 4856
43148 -> 4864
43148 -> 4866
43148 -> 8600
43148 -> 43027
43148 -> 43130
43148 -> 43151
43148 -> 43156
43148 -> 43161
43148 -> 43163
43148 -> 43165
43151 -> 8004
43151 -> 42400
43151 -> 42402
43151 -> 43300
43151 -> 43314
43167 -> 10436
43167 -> 10460
43167 -> 43151
43171 -> 6273
43171 -> 10464
43171 -> 43044
43171 -> 43143
43171 -> 43151
43175 -> 10186
43175 -> 10239
43175 -> 42576
43181 -> 2628
43181 -> 9133
43181 -> 42576
43185 -> 8757
43185 -> 8787
43185 -> 42576
43188 -> 9070
43188 -> 9131
43188 -> 42576
43193 -> 8009
43193 -> 9257
43193 -> 42576
43200 -> 8009
43200 -> 10114
43200 -> 42576
43206 -> 8118
43206 -> 10323
43206 -> 42576
43211 -> 8118
43211 -> 10558
43211 -> 42576
43217 -> 10643
43217 -> 10695
43217 -> 42576
43224 -> 8160
43224 -> 8225
43224 -> 42576
43231 -> 8009
43231 -> 8266
43231 -> 42576
43237 -> 8118
43237 -> 8329
43237 -> 42576
43243 -> 8118
43243 -> 8397
43243 -> 42576
43248 -> 8118
43248 -> 8833
43248 -> 42576
43254 -> 43258
43258 -> 439
43258 -> 443
43258 -> 6273
43258 -> 8012
43258 -> 8531
43258 -> 11166
43258 -> 42576
43265 -> 2628
43265 -> 6273
43265 -> 37323
43265 -> 42576
43265 -> 43271
43265 -> 43273
43271 -> 52856
43273 -> 52839
43275 -> 2628
43275 -> 6273
43275 -> 12082
43275 -> 43265
43275 -> 43280
43285 -> 8004
43285 -> 42400
43285 -> 43151
43287 -> 8004
43287 -> 43151
43290 -> 8004
43290 -> 42400
43290 -> 42402
43290 -> 42576
43292 -> 43300
43292 -> 43302
43300 -> 43490
43305 -> 42400
43305 -> 42402
43305 -> 43308
43308 -> 42386
43321 -> 242
43321 -> 42551
43324 -> 242
43324 -> 42557
43328 -> 43126
43332 -> 43132
43337 -> 43139
43342 -> 43148
43346 -> 43167
43351 -> 43171
43356 -> 43175
43360 -> 43181
43365 -> 43185
43369 -> 43254
43374 -> 43258
43379 -> 43224
43384 -> 43231
43389 -> 43237
43394 -> 43243
43398 -> 43248
43403 -> 43188
43408 -> 43193
43414 -> 43200
43419 -> 43206
43423 -> 43211
43428 -> 43217
43435 -> 43285
43438 -> 43287
43442 -> 43290
43445 -> 43292
43450 -> 43265
43454 -> 43275
43459 -> 10262
43459 -> 43369
43463 -> 9345
43463 -> 43369
43486 -> 242
43490 -> 242
43493 -> 42949
43496 -> 42949
43496 -> 42954
43499 -> 42949
43502 -> 43505
43507 -> 43509
43511 -> 1942
43511 -> 43514
43516 -> 43518
43520 -> 43522
43524 -> 43526
43528 -> 43530
43532 -> 43534
43561 -> 242
43561 -> 2206
43561 -> 5575
43561 -> 6632
43561 -> 43565
43561 -> 43571
43561 -> 43573
43571 -> 10952
43571 -> 42609
43571 -> 42615
43571 -> 42620
43571 -> 42633
43571 -> 42669
43571 -> 43585
43571 -> 43587
43571 -> 43589
43571 -> 43591
43575 -> 242
43575 -> 1942
43575 -> 2206
43575 -> 43571
43602 -> 43598
43602 -> 43605
43620 -> 242
43620 -> 1045
43620 -> 1986
43620 -> 4153
43629 -> 956
43629 -> 958
43629 -> 989
43629 -> 1031
43629 -> 1033
43629 -> 1045
43629 -> 1726
43629 -> 8012
43635 -> 242
43639 -> 43049
43642 -> 43054
43645 -> 8004
43648 -> 43027
43651 -> 10462
43653 -> 10464
43656 -> 43044
43658 -> 43022
43660 -> 43033
43662 -> 8012
43664 -> 9133
43674 -> 242
43674 -> 313
43682 -> 242
43682 -> 954
43686 -> 42505
43694 -> 242
43698 -> 8012
43706 -> 242
43747 -> 242
43747 -> 42551
43751 -> 242
43751 -> 42567
43754 -> 242
43754 -> 42557
43757 -> 6856
43757 -> 43760
43757 -> 43763
43757 -> 43766
43757 -> 43769
43757 -> 43772
43760 -> 833
43760 -> 6856
43760 -> 42698
43760 -> 42708
43763 -> 6856
43763 -> 42663
43763 -> 42669
43763 -> 43820
43763 -> 43825
43766 -> 43254
43769 -> 43185
43772 -> 43181
43778 -> 43757
43782 -> 43757
43785 -> 43787
43787 -> 42553
43787 -> 42576
43787 -> 42600
43787 -> 42701
43787 -> 43794
43787 -> 43798
43807 -> 43813
43820 -> 42615
43820 -> 42622
43820 -> 42633
43820 -> 43823
43825 -> 42633
43837 -> 42719
43865 -> 42354
43872 -> 42362
43876 -> 42360
43879 -> 42386
43898 -> 42354
43904 -> 42362
43907 -> 42360
43910 -> 42386
43932 -> 42362
43935 -> 42360
43955 -> 42354
43961 -> 42362
43964 -> 42360
43967 -> 42386
43985 -> 42354
43991 -> 42362
43994 -> 42360
43997 -> 42386
44015 -> 42354
44021 -> 42362
44024 -> 42360
44027 -> 42386
44216 -> 242
44220 -> 44223
44223 -> 1726
44223 -> 3272
44223 -> 10777
44223 -> 44231
44231 -> 791
44231 -> 956
44231 -> 989
44231 -> 1031
44231 -> 1033
44231 -> 1223
44231 -> 1726
44231 -> 8914
44231 -> 9906
44231 -> 44242
44242 -> 242
44242 -> 8914
44246 -> 8914
44272 -> 242
44278 -> 443
44278 -> 958
44278 -> 998
44278 -> 1017
44278 -> 8857
44278 -> 44278
44278 -> 44302
44278 -> 44315
44281 -> 44278
44287 -> 44278
44302 -> 44305
44305 -> 242
44315 -> 439
44315 -> 443
44315 -> 1726
44315 -> 6384
44315 -> 10777
44315 -> 11014
44315 -> 51209
44315 -> 51213
44317 -> 8857
44323 -> 958
44323 -> 1017
44323 -> 2206
44323 -> 44327
44327 -> 271
44327 -> 1017
44327 -> 1183
44327 -> 44509
44329 -> 958
44329 -> 1017
44329 -> 1183
44329 -> 44333
44333 -> 1183
44333 -> 2206
44339 -> 1183
44339 -> 1223
44339 -> 1225
44339 -> 44333
44354 -> 242
44358 -> 439
44358 -> 443
44358 -> 958
44358 -> 998
44358 -> 1726
44358 -> 4056
44358 -> 8188
44358 -> 10222
44461 -> 242
44475 -> 10222
44484 -> 44305
44495 -> 439
44495 -> 443
44495 -> 958
44495 -> 44495
44502 -> 439
44502 -> 443
44502 -> 44502
44509 -> 271
44509 -> 1183
44582 -> 242
44582 -> 846
44590 -> 831
44629 -> 5348
44638 -> 242
44638 -> 1186
44648 -> 831
44648 -> 833
44648 -> 846
44648 -> 1340
44648 -> 1351
44648 -> 1384
44648 -> 2874
44648 -> 44582
44648 -> 44674
44648 -> 44677
44674 -> 831
44674 -> 846
44674 -> 44604
44677 -> 833
44677 -> 835
44677 -> 1351
44677 -> 1384
44677 -> 12331
44677 -> 44590
44677 -> 44674
44677 -> 44688
44688 -> 831
44688 -> 14567
44688 -> 27960
44714 -> 242
44718 -> 12082
44718 -> 44714
44718 -> 44724
44727 -> 28376
44727 -> 44724
44730 -> 4875
44734 -> 4870
44736 -> 27988
44749 -> 242
44755 -> 44753
44755 -> 44758
44758 -> 989
44758 -> 52590
44761 -> 12082
44761 -> 44749
44761 -> 44753
44768 -> 44771
44773 -> 7180
44775 -> 44777
44788 -> 5348
44805 -> 44808
44808 -> 242
44816 -> 3884
44816 -> 28049
44816 -> 28051
44816 -> 28054
44816 -> 44593
44816 -> 44595
44816 -> 44604
44816 -> 44825
44825 -> 831
44825 -> 846
44825 -> 1183
44825 -> 2874
44825 -> 3884
44825 -> 10777
44825 -> 12082
44825 -> 44582
44825 -> 44593
44825 -> 44595
44825 -> 44610
44825 -> 44833
44825 -> 44835
44825 -> 44837
44825 -> 44839
44825 -> 44842
44833 -> 831
44833 -> 833
44833 -> 835
44833 -> 846
44833 -> 12331
44833 -> 14389
44833 -> 43514
44833 -> 43530
44833 -> 44582
44833 -> 44604
44835 -> 835
44835 -> 44590
44835 -> 44853
44837 -> 833
44837 -> 3884
44837 -> 10777
44837 -> 15021
44837 -> 28049
44837 -> 28051
44837 -> 28054
44837 -> 43514
44837 -> 44593
44837 -> 44595
44837 -> 44604
44839 -> 833
44839 -> 10777
44839 -> 15021
44839 -> 43514
44839 -> 44593
44842 -> 833
44842 -> 835
44842 -> 10777
44842 -> 15021
44842 -> 44593
44842 -> 44595
44842 -> 44604
44853 -> 44595
44853 -> 44604
44892 -> 242
44896 -> 23765
44896 -> 44900
44900 -> 242
44900 -> 9413
44900 -> 44908
44900 -> 44910
44908 -> 3272
44908 -> 9413
44908 -> 11947
44910 -> 9415
44910 -> 11947
44910 -> 23753
44910 -> 26114
44910 -> 44921
44910 -> 44923
44910 -> 44925
44912 -> 44900
44921 -> 45258
44921 -> 46018
44923 -> 3272
44923 -> 44945
44923 -> 44947
44925 -> 6204
44925 -> 46238
44927 -> 44910
44930 -> 23765
44930 -> 44910
44934 -> 44930
44945 -> 45258
44945 -> 45767
44947 -> 6204
44947 -> 45263
44949 -> 44923
44960 -> 242
44963 -> 23455
44963 -> 44966
44966 -> 242
44966 -> 44970
44970 -> 9415
44970 -> 11947
44970 -> 23753
44970 -> 26114
44970 -> 44976
44976 -> 313
44976 -> 791
44976 -> 989
44976 -> 2945
44976 -> 2947
44976 -> 2949
44976 -> 9025
44976 -> 12438
44976 -> 44984
44976 -> 44990
44976 -> 44997
44978 -> 23765
44978 -> 44970
44990 -> 242
44993 -> 2947
44993 -> 2949
44993 -> 9025
45007 -> 242
45011 -> 23765
45011 -> 45014
45014 -> 242
45014 -> 9413
45014 -> 45018
45018 -> 9415
45018 -> 11947
45018 -> 23753
45018 -> 26114
45018 -> 45041
45018 -> 45043
45020 -> 242
45020 -> 6204
45020 -> 8996
45020 -> 44916
45020 -> 45025
45025 -> 989
45025 -> 9415
45025 -> 9419
45025 -> 11947
45025 -> 23753
45027 -> 242
45027 -> 45025
45033 -> 989
45033 -> 9419
45033 -> 11947
45033 -> 23765
45035 -> 989
45035 -> 1726
45035 -> 9419
45035 -> 10314
45035 -> 10345
45035 -> 11947
45035 -> 23765
45041 -> 3272
45041 -> 9413
45041 -> 11947
45043 -> 313
45043 -> 3272
45043 -> 45054
45043 -> 45057
45043 -> 45059
45045 -> 23765
45045 -> 45018
45054 -> 49998
45059 -> 989
45059 -> 50043
45059 -> 50068
45078 -> 45080
45078 -> 45085
45080 -> 242
45085 -> 242
45092 -> 45085
45092 -> 45095
45095 -> 242
45095 -> 45014
45095 -> 45100
45100 -> 9413
45100 -> 9838
45100 -> 11947
45100 -> 14565
45100 -> 14569
45100 -> 23753
45100 -> 26114
45100 -> 26117
45100 -> 28619
45100 -> 29757
45100 -> 45121
45100 -> 45123
45100 -> 45125
45100 -> 45127
45102 -> 45031
45107 -> 45007
45107 -> 45018
45107 -> 45100
45111 -> 23765
45111 -> 45107
45115 -> 313
45115 -> 3272
45115 -> 14565
45115 -> 28619
45115 -> 45007
45115 -> 45043
45115 -> 45121
45115 -> 45123
45115 -> 45125
45115 -> 45127
45123 -> 443
45123 -> 831
45123 -> 846
45125 -> 14567
45125 -> 14569
45125 -> 29757
45148 -> 45150
45150 -> 242
45170 -> 3456
45179 -> 45182
45182 -> 44892
45182 -> 45190
45190 -> 45150
45190 -> 45194
45194 -> 45196
45200 -> 45196
45209 -> 45170
45209 -> 45200
45215 -> 313
45215 -> 45159
45215 -> 45200
45219 -> 313
45219 -> 45163
45219 -> 45200
45225 -> 23455
45225 -> 45227
45227 -> 45170
45227 -> 45200
45230 -> 10989
45258 -> 45259
45259 -> 242
45263 -> 45269
45263 -> 45271
45263 -> 45273
45263 -> 45275
45269 -> 45344
45273 -> 45269
45273 -> 45281
45284 -> 6204
45284 -> 45273
45292 -> 45275
45292 -> 45297
45292 -> 45299
45292 -> 45301
45297 -> 1638
45299 -> 53435
45303 -> 1644
45303 -> 45275
45303 -> 45301
45319 -> 315
45319 -> 4157
45319 -> 6204
45319 -> 6273
45326 -> 45328
45328 -> 45269
45328 -> 45332
45344 -> 2632
45344 -> 4157
45344 -> 6204
45344 -> 6273
45346 -> 45344
45352 -> 45358
45358 -> 439
45358 -> 443
45358 -> 2632
45358 -> 3272
45358 -> 6204
45358 -> 11082
45358 -> 28343
45358 -> 45344
45360 -> 45358
45375 -> 42673
45375 -> 45377
45377 -> 45381
45377 -> 45383
45381 -> 242
45381 -> 42673
45383 -> 242
45383 -> 45442
45390 -> 42691
45392 -> 42756
45394 -> 42688
45396 -> 42629
45398 -> 42787
45400 -> 45402
45402 -> 45875
45404 -> 42760
45406 -> 45408
45408 -> 45875
45410 -> 45412
45412 -> 45875
45414 -> 45416
45416 -> 45875
45418 -> 45420
45420 -> 46031
45422 -> 45390
45422 -> 45392
45422 -> 45394
45422 -> 45396
45422 -> 45400
45422 -> 45404
45422 -> 45427
45427 -> 242
45435 -> 45440
45435 -> 45442
45440 -> 42673
45442 -> 2874
45442 -> 45860
45442 -> 45862
45442 -> 45900
45442 -> 45965
45442 -> 45971
45442 -> 46033
45442 -> 46199
45442 -> 46311
45442 -> 46615
45442 -> 46699
45442 -> 47508
45442 -> 47550
45442 -> 47584
45442 -> 47722
45442 -> 47732
45444 -> 443
45444 -> 15178
45444 -> 15190
45444 -> 19290
45444 -> 43794
45444 -> 45427
45444 -> 45453
45444 -> 45455
45444 -> 45457
45444 -> 45459
45444 -> 45461
45471 -> 42667
45474 -> 45477
45477 -> 42629
45477 -> 42688
45477 -> 42691
45477 -> 42756
45477 -> 42760
45477 -> 45297
45477 -> 45299
45477 -> 45402
45477 -> 45412
45477 -> 45416
45479 -> 45481
45481 -> 1644
45481 -> 42629
45481 -> 42688
45481 -> 42691
45481 -> 42756
45481 -> 42760
45481 -> 45402
45481 -> 45412
45481 -> 45416
45540 -> 242
45542 -> 242
45542 -> 45545
45545 -> 3272
45545 -> 45610
45545 -> 45626
45547 -> 242
45547 -> 45551
45551 -> 53610
45553 -> 242
45553 -> 45558
45558 -> 2874
45558 -> 45735
45558 -> 45737
45560 -> 8743
45560 -> 45564
45560 -> 45566
45564 -> 45610
45566 -> 53665
45566 -> 53671
45566 -> 53673
45568 -> 6856
45568 -> 45570
45570 -> 53692
45572 -> 45575
45575 -> 6856
45577 -> 45579
45579 -> 45674
45582 -> 45579
45585 -> 45579
45588 -> 44921
45588 -> 45579
45590 -> 989
45590 -> 45564
45590 -> 45585
45593 -> 989
45593 -> 45564
45593 -> 45595
45595 -> 45579
45597 -> 45579
45600 -> 45579
45603 -> 45579
45606 -> 45579
45612 -> 45579
45617 -> 45619
45626 -> 53692
45628 -> 8746
45630 -> 4181
45630 -> 45628
45633 -> 45636
45636 -> 53712
45638 -> 6630
45638 -> 6632
45638 -> 6856
45638 -> 10915
45638 -> 11082
45638 -> 45579
45638 -> 45642
45638 -> 45644
45638 -> 45646
45638 -> 45659
45642 -> 4153
45661 -> 4844
45661 -> 4846
45661 -> 4856
45661 -> 6828
45661 -> 45564
45661 -> 45577
45661 -> 45590
45661 -> 45597
45661 -> 45600
45661 -> 45603
45661 -> 45606
45661 -> 45638
45661 -> 45663
45674 -> 52557
45704 -> 3272
45704 -> 6630
45704 -> 6632
45704 -> 11082
45704 -> 45644
45704 -> 45646
45704 -> 45659
45704 -> 45707
45729 -> 45540
45729 -> 45558
45735 -> 53600
45735 -> 53661
45767 -> 45258
45774 -> 45258
45774 -> 45779
45779 -> 2874
45779 -> 45311
45779 -> 45317
45790 -> 45767
45790 -> 45779
45807 -> 45809
45809 -> 46018
45812 -> 45809
45812 -> 45817
45817 -> 2874
45817 -> 45842
45819 -> 45826
45826 -> 46026
45832 -> 45834
45834 -> 46029
45836 -> 45807
45836 -> 45817
45842 -> 2874
45842 -> 46036
45849 -> 45258
45849 -> 45855
45855 -> 45258
45857 -> 45258
45857 -> 45860
45860 -> 2874
45860 -> 45311
45860 -> 45317
45860 -> 45900
45862 -> 45258
45865 -> 45849
45865 -> 45860
45868 -> 45871
45873 -> 998
45873 -> 45301
45873 -> 45875
45877 -> 45879
45881 -> 998
45881 -> 45886
45888 -> 45301
45890 -> 45893
45893 -> 6856
45893 -> 45888
45912 -> 45258
45912 -> 45807
45916 -> 45258
45919 -> 45258
45919 -> 45922
45922 -> 2874
45922 -> 45311
45922 -> 45317
45922 -> 45836
45924 -> 45819
45928 -> 45788
45928 -> 45830
45932 -> 45832
45935 -> 45788
45937 -> 956
45937 -> 989
45937 -> 28049
45937 -> 28054
45937 -> 45269
45937 -> 45273
45945 -> 45912
45945 -> 45922
45965 -> 45258
45968 -> 45258
45968 -> 45971
45971 -> 2874
45971 -> 45311
45971 -> 45317
45971 -> 45790
45973 -> 45781
45977 -> 45784
45982 -> 45788
45984 -> 45269
45984 -> 45989
45984 -> 45991
45989 -> 45258
45991 -> 45346
45993 -> 45352
45993 -> 45989
45993 -> 45991
45993 -> 46000
46000 -> 45360
46002 -> 45993
46007 -> 44945
46007 -> 45971
46018 -> 45767
46020 -> 45774
46026 -> 45781
46029 -> 45784
46033 -> 46018
46033 -> 46036
46036 -> 2874
46036 -> 45779
46060 -> 45259
46062 -> 45259
46066 -> 45259
46070 -> 45259
46074 -> 45259
46074 -> 46079
46079 -> 2874
46079 -> 45311
46079 -> 45317
46081 -> 46060
46081 -> 46079
46087 -> 44945
46087 -> 45984
46087 -> 46093
46093 -> 45269
46093 -> 46115
46095 -> 44945
46095 -> 44947
46095 -> 46093
46099 -> 46093
46103 -> 46093
46135 -> 5348
46151 -> 45258
46151 -> 45809
46155 -> 45258
46158 -> 45258
46158 -> 46161
46161 -> 2874
46161 -> 45311
46161 -> 45317
46161 -> 46183
46161 -> 46185
46163 -> 45826
46166 -> 989
46166 -> 45788
46168 -> 45788
46170 -> 45834
46172 -> 989
46172 -> 44945
46172 -> 45269
46172 -> 45984
46177 -> 46151
46177 -> 46161
46183 -> 45842
46183 -> 46018
46185 -> 45809
46185 -> 45842
46193 -> 28049
46193 -> 45258
46196 -> 45258
46196 -> 46199
46199 -> 45258
46201 -> 45258
46201 -> 46206
46206 -> 2874
46206 -> 45311
46206 -> 45317
46206 -> 46269
46208 -> 44921
46208 -> 45258
46211 -> 45258
46211 -> 46215
46215 -> 45258
46217 -> 28051
46220 -> 46222
46222 -> 45788
46224 -> 989
46224 -> 28054
46226 -> 46228
46228 -> 46029
46230 -> 989
46230 -> 44925
46233 -> 989
46233 -> 46238
46238 -> 44945
46238 -> 45269
46238 -> 45984
46238 -> 46228
46238 -> 46246
46240 -> 989
46240 -> 46246
46246 -> 45269
46248 -> 989
46248 -> 46252
46252 -> 46246
46254 -> 46256
46258 -> 46261
46263 -> 46193
46263 -> 46206
46269 -> 28049
46269 -> 46311
46308 -> 45258
46308 -> 46311
46311 -> 2874
46311 -> 45311
46311 -> 45317
46311 -> 46033
46324 -> 44945
46324 -> 45352
46324 -> 45993
46324 -> 46228
46324 -> 46330
46330 -> 45352
46332 -> 46324
46351 -> 46330
46376 -> 242
46384 -> 313
46387 -> 9415
46387 -> 12819
46391 -> 954
46393 -> 4870
46395 -> 4875
46407 -> 242
46407 -> 44945
46411 -> 313
46411 -> 45973
46415 -> 45980
46418 -> 45982
46421 -> 46423
46425 -> 46430
46460 -> 242
46460 -> 44945
46460 -> 45849
46460 -> 45855
46460 -> 45989
46460 -> 46376
46460 -> 46472
46460 -> 46474
46460 -> 46476
46472 -> 45258
46474 -> 45258
46476 -> 45258
46480 -> 45871
46480 -> 46384
46480 -> 46483
46483 -> 313
46491 -> 45875
46494 -> 46491
46497 -> 46491
46499 -> 46491
46501 -> 46491
46503 -> 954
46503 -> 989
46503 -> 9419
46503 -> 46387
46503 -> 46489
46507 -> 46387
46509 -> 46491
46511 -> 46491
46513 -> 46491
46515 -> 4844
46515 -> 4846
46515 -> 4856
46515 -> 14801
46515 -> 46489
46515 -> 46497
46515 -> 46499
46515 -> 46501
46515 -> 46503
46515 -> 46507
46515 -> 46509
46515 -> 46511
46515 -> 46513
46515 -> 46517
46515 -> 46519
46519 -> 4846
46519 -> 6828
46535 -> 45879
46535 -> 46391
46538 -> 3873
46538 -> 45299
46538 -> 46489
46538 -> 46494
46538 -> 46497
46538 -> 46499
46538 -> 46501
46538 -> 46507
46538 -> 46509
46538 -> 46511
46538 -> 46513
46538 -> 46543
46543 -> 45297
46546 -> 703
46546 -> 1644
46546 -> 16515
46546 -> 46489
46546 -> 46494
46546 -> 46497
46546 -> 46499
46546 -> 46501
46546 -> 46507
46546 -> 46509
46546 -> 46511
46546 -> 46513
46548 -> 315
46548 -> 46483
46548 -> 46553
46553 -> 6856
46557 -> 46548
46563 -> 46548
46568 -> 46548
46573 -> 46548
46578 -> 46548
46583 -> 46548
46588 -> 46548
46612 -> 45258
46612 -> 46615
46615 -> 2874
46615 -> 45311
46615 -> 45317
46617 -> 443
46626 -> 443
46626 -> 45269
46631 -> 46476
46631 -> 46615
46642 -> 46644
46644 -> 46668
46644 -> 46744
46644 -> 46749
46647 -> 46652
46652 -> 315
46652 -> 2874
46652 -> 45259
46652 -> 45317
46652 -> 45642
46652 -> 46674
46652 -> 46676
46652 -> 46681
46652 -> 46756
46654 -> 46668
46668 -> 2874
46668 -> 45259
46668 -> 45642
46670 -> 46654
46670 -> 46674
46670 -> 46676
46678 -> 46654
46678 -> 46676
46678 -> 46681
46683 -> 46654
46683 -> 46674
46683 -> 46681
46696 -> 45258
46696 -> 46699
46699 -> 2874
46699 -> 45311
46699 -> 45317
46701 -> 443
46710 -> 443
46710 -> 45269
46715 -> 46474
46715 -> 46699
46738 -> 46644
46744 -> 242
46744 -> 2874
46749 -> 242
46756 -> 799
46756 -> 45311
46768 -> 799
46768 -> 45319
46774 -> 45317
46774 -> 46777
46777 -> 45269
46777 -> 46782
46782 -> 4153
46782 -> 45269
46782 -> 46795
46782 -> 46797
46782 -> 46799
46784 -> 46782
46795 -> 45317
46795 -> 46822
46795 -> 46828
46795 -> 46830
46795 -> 46832
46797 -> 799
46797 -> 45317
46799 -> 2874
46799 -> 4153
46799 -> 46920
46799 -> 46998
46801 -> 46749
46801 -> 46806
46806 -> 46840
46812 -> 46652
46814 -> 10989
46822 -> 45297
46822 -> 46830
46828 -> 315
46828 -> 45297
46828 -> 46830
46828 -> 46840
46828 -> 46858
46828 -> 46860
46828 -> 46862
46828 -> 46864
46828 -> 46866
46828 -> 46868
46830 -> 46840
46830 -> 46842
46832 -> 443
46832 -> 8531
46840 -> 45344
46842 -> 315
46842 -> 791
46873 -> 46668
46877 -> 46668
46881 -> 46886
46888 -> 46668
46899 -> 5348
46920 -> 407
46920 -> 47008
47008 -> 791
47008 -> 52538
47008 -> 52540
47008 -> 52543
47016 -> 46799
47062 -> 4153
47062 -> 45258
47067 -> 47062
47071 -> 443
47071 -> 4870
47071 -> 16515
47071 -> 47073
47073 -> 12346
47073 -> 47109
47073 -> 47111
47077 -> 3873
47077 -> 47082
47084 -> 831
47084 -> 833
47084 -> 835
47084 -> 14608
47084 -> 47090
47084 -> 47092
47090 -> 47143
47094 -> 14408
47094 -> 14801
47094 -> 47096
47100 -> 12142
47100 -> 14774
47100 -> 47062
47100 -> 47102
47106 -> 12142
47109 -> 833
47109 -> 835
47109 -> 3884
47109 -> 47114
47111 -> 835
47111 -> 3884
47111 -> 47114
47133 -> 242
47133 -> 2874
47133 -> 47137
47133 -> 47139
47133 -> 47141
47139 -> 2874
47141 -> 2874
47143 -> 47133
47143 -> 47148
47148 -> 833
47148 -> 835
47148 -> 10819
47148 -> 14608
47148 -> 47153
47148 -> 47155
47153 -> 242
47155 -> 47153
47157 -> 47159
47161 -> 47166
47168 -> 47171
47168 -> 47173
47168 -> 47175
47168 -> 47177
47168 -> 47179
47171 -> 47182
47173 -> 47202
47175 -> 47205
47177 -> 47190
47179 -> 47182
47182 -> 2206
47190 -> 2206
47190 -> 47196
47196 -> 1218
47196 -> 4722
47196 -> 4756
47196 -> 47202
47196 -> 47268
47196 -> 47273
47207 -> 35747
47207 -> 47137
47207 -> 47139
47207 -> 47141
47212 -> 47133
47212 -> 47153
47212 -> 47214
47214 -> 47155
47216 -> 14408
47216 -> 47218
47218 -> 14408
47218 -> 47290
47279 -> 12346
47282 -> 4870
47284 -> 4114
47284 -> 35747
47290 -> 53496
47297 -> 827
47301 -> 16970
47301 -> 18755
47307 -> 12082
47307 -> 18755
47307 -> 47313
47399 -> 989
47403 -> 45297
47403 -> 45299
47403 -> 47389
47403 -> 47391
47403 -> 47393
47403 -> 47395
47403 -> 47397
47403 -> 47401
47412 -> 1644
47412 -> 47389
47412 -> 47391
47412 -> 47393
47412 -> 47395
47412 -> 47397
47412 -> 47401
47414 -> 6576
47414 -> 6583
47414 -> 6605
47414 -> 47389
47414 -> 47391
47414 -> 47393
47414 -> 47395
47414 -> 47397
47414 -> 47399
47414 -> 47401
47414 -> 47416
47414 -> 47418
47451 -> 45258
47455 -> 45258
47455 -> 47460
47460 -> 2874
47460 -> 45311
47460 -> 45317
47471 -> 45346
47477 -> 956
47477 -> 45360
47484 -> 47477
47489 -> 47451
47489 -> 47460
47505 -> 45258
47505 -> 47508
47508 -> 2874
47508 -> 45311
47508 -> 45317
47528 -> 46000
47532 -> 45989
47532 -> 47508
47547 -> 45258
47547 -> 47550
47550 -> 2874
47550 -> 45311
47550 -> 45317
47552 -> 958
47561 -> 958
47561 -> 45346
47566 -> 45855
47566 -> 47550
47581 -> 45258
47581 -> 47584
47584 -> 2874
47584 -> 45311
47584 -> 45317
47595 -> 45346
47600 -> 46472
47600 -> 47584
47656 -> 42629
47656 -> 42688
47656 -> 42691
47656 -> 42756
47656 -> 42760
47656 -> 45402
47656 -> 45427
47674 -> 989
47674 -> 42629
47674 -> 45416
47677 -> 28054
47677 -> 46199
47677 -> 46261
47685 -> 4844
47685 -> 4846
47685 -> 4856
47685 -> 6828
47685 -> 42629
47685 -> 42688
47685 -> 42691
47685 -> 42756
47685 -> 42760
47685 -> 42787
47685 -> 45402
47685 -> 45408
47685 -> 45412
47685 -> 45416
47685 -> 45420
47685 -> 45663
47685 -> 47677
47688 -> 45879
47688 -> 46029
47696 -> 47699
47699 -> 6856
47703 -> 47699
47708 -> 47699
47713 -> 47699
47718 -> 45890
47718 -> 47699
47724 -> 47699
47729 -> 47699
47734 -> 47699
47738 -> 42673
47738 -> 45442
47751 -> 47753
47753 -> 45542
47758 -> 45540
47758 -> 47763
47763 -> 2874
47763 -> 45558
47765 -> 45560
47769 -> 45579
47772 -> 45617
47775 -> 45633
47779 -> 45564
47781 -> 45590
47783 -> 45593
47786 -> 45628
47788 -> 45621
47791 -> 45545
47794 -> 45661
47797 -> 47751
47797 -> 47763
47807 -> 46460
47812 -> 46480
47816 -> 46487
47819 -> 46489
47821 -> 46494
47823 -> 46497
47825 -> 46499
47827 -> 46501
47829 -> 46503
47831 -> 46507
47833 -> 46509
47835 -> 46511
47837 -> 46513
47839 -> 46515
47842 -> 46535
47845 -> 46538
47849 -> 46546
47852 -> 46555
47855 -> 46557
47859 -> 46561
47862 -> 46563
47866 -> 46566
47869 -> 46568
47873 -> 46571
47876 -> 46573
47880 -> 46576
47883 -> 46578
47887 -> 46581
47890 -> 46583
47894 -> 46586
47897 -> 46588
47905 -> 42673
47907 -> 42673
47907 -> 47912
47912 -> 2874
47912 -> 45442
47914 -> 47656
47917 -> 42667
47920 -> 42629
47922 -> 45402
47924 -> 45416
47926 -> 42756
47928 -> 42787
47930 -> 47674
47933 -> 42760
47935 -> 47677
47937 -> 42691
47939 -> 42688
47941 -> 45412
47943 -> 47685
47946 -> 47688
47949 -> 45477
47952 -> 45481
47954 -> 47693
47957 -> 47696
47961 -> 47701
47964 -> 47703
47968 -> 47706
47971 -> 47708
47975 -> 47711
47978 -> 47713
47982 -> 47716
47985 -> 47718
47989 -> 47722
47991 -> 47724
47995 -> 47727
47998 -> 47729
48002 -> 47732
48004 -> 47734
48008 -> 47905
48008 -> 47912
48052 -> 242
48052 -> 48058
48060 -> 242
48060 -> 48066
48071 -> 4844
48071 -> 4846
48071 -> 4852
48071 -> 4856
48071 -> 15178
48071 -> 15190
48071 -> 29727
48071 -> 45663
48071 -> 47096
48071 -> 48073
48071 -> 48078
48071 -> 48080
48071 -> 48082
48071 -> 48084
48071 -> 48086
48082 -> 1384
48082 -> 48108
48082 -> 48110
48082 -> 48151
48084 -> 48082
48084 -> 48141
48086 -> 48141
48086 -> 48175
48088 -> 48091
48091 -> 1351
48091 -> 1384
48091 -> 3272
48091 -> 6630
48091 -> 6632
48091 -> 13588
48091 -> 48108
48091 -> 48110
48093 -> 13588
48093 -> 48088
48097 -> 13588
48097 -> 48088
48100 -> 48088
48100 -> 48103
48113 -> 13588
48113 -> 48091
48117 -> 13588
48117 -> 48091
48121 -> 48091
48121 -> 48103
48125 -> 48127
48129 -> 29727
48129 -> 48078
48131 -> 29727
48131 -> 48139
48141 -> 15178
48141 -> 15190
48141 -> 19290
48141 -> 48110
48141 -> 48147
48151 -> 13588
48151 -> 48082
48153 -> 13588
48153 -> 48082
48158 -> 48082
48158 -> 48103
48161 -> 14569
48161 -> 48078
48166 -> 13588
48166 -> 48084
48169 -> 13588
48169 -> 48084
48172 -> 48084
48172 -> 48103
48175 -> 1384
48175 -> 15178
48175 -> 15190
48175 -> 36886
48175 -> 48082
48175 -> 48108
48175 -> 48110
48175 -> 48129
48175 -> 48141
48175 -> 48179
48175 -> 48184
48175 -> 48189
48175 -> 48191
48175 -> 48193
48179 -> 13588
48179 -> 48175
48189 -> 242
48196 -> 13588
48196 -> 48175
48202 -> 48103
48202 -> 48175
48208 -> 13588
48208 -> 48086
48211 -> 13588
48211 -> 48086
48214 -> 48086
48214 -> 48103
48217 -> 831
48217 -> 846
48217 -> 1353
48217 -> 1355
48217 -> 48110
48217 -> 48139
48217 -> 48147
48225 -> 1353
48225 -> 1355
48225 -> 13645
48225 -> 15178
48225 -> 15190
48225 -> 48091
48225 -> 48110
48225 -> 48131
48232 -> 13645
48232 -> 48225
48246 -> 20257
48253 -> 16515
48255 -> 3873
48278 -> 5348
48291 -> 242
48292 -> 48299
48299 -> 1186
48299 -> 1986
48299 -> 2206
48299 -> 3272
48299 -> 8022
48299 -> 8266
48299 -> 8281
48299 -> 8290
48314 -> 242
48316 -> 313
48316 -> 1726
48316 -> 48320
48316 -> 48322
48320 -> 1942
48322 -> 1186
48324 -> 8399
48324 -> 8425
48324 -> 48316
48331 -> 4153
48331 -> 48324
48338 -> 48341
48341 -> 313
48341 -> 48371
48341 -> 48373
48343 -> 8388
48343 -> 8425
48343 -> 48338
48343 -> 48341
48348 -> 4153
48348 -> 48343
48353 -> 313
48353 -> 989
48353 -> 3875
48353 -> 11771
48353 -> 48322
48358 -> 8399
48358 -> 8425
48358 -> 48353
48363 -> 4153
48363 -> 48358
48371 -> 2874
48371 -> 4981
48373 -> 1186
48377 -> 242
48378 -> 313
48378 -> 958
48378 -> 1726
48378 -> 48320
48378 -> 48322
48382 -> 8399
48382 -> 8425
48382 -> 48378
48387 -> 8399
48387 -> 8425
48387 -> 48378
48391 -> 4153
48391 -> 48382
48397 -> 958
48400 -> 958
48403 -> 313
48403 -> 3875
48403 -> 11771
48403 -> 48322
48403 -> 48397
48403 -> 48400
48409 -> 989
48409 -> 48403
48416 -> 8399
48416 -> 8425
48416 -> 48403
48420 -> 4153
48420 -> 48416
48442 -> 242
48442 -> 8165
48445 -> 242
48448 -> 48453
48448 -> 48455
48453 -> 48529
48453 -> 48531
48453 -> 48533
48453 -> 48535
48455 -> 315
48455 -> 1223
48455 -> 4181
48455 -> 8088
48455 -> 48460
48460 -> 6204
48460 -> 10819
48462 -> 2404
48462 -> 48468
48462 -> 48470
48462 -> 48472
48462 -> 48474
48462 -> 48476
48468 -> 28619
48468 -> 28974
48470 -> 5575
48470 -> 10483
48470 -> 42942
48470 -> 48468
48470 -> 48610
48470 -> 48612
48470 -> 48615
48472 -> 10131
48472 -> 48565
48472 -> 48576
48474 -> 48486
48476 -> 989
48476 -> 48560
48478 -> 48462
48486 -> 2404
48486 -> 4181
48486 -> 12346
48486 -> 48460
48491 -> 48448
48496 -> 4153
48496 -> 48491
48502 -> 315
48502 -> 8121
48502 -> 8663
48502 -> 48486
48511 -> 48502
48517 -> 48453
48521 -> 48453
48531 -> 9184
48531 -> 9397
48531 -> 9399
48531 -> 9401
48531 -> 9403
48531 -> 9405
48531 -> 9407
48531 -> 48540
48533 -> 9184
48533 -> 9417
48533 -> 9419
48533 -> 48545
48535 -> 989
48535 -> 998
48535 -> 1726
48535 -> 11283
48540 -> 271
48540 -> 5163
48540 -> 5165
48540 -> 5167
48540 -> 9184
48540 -> 9401
48540 -> 9403
48540 -> 9426
48540 -> 9429
48540 -> 9433
48540 -> 9435
48540 -> 9441
48540 -> 9445
48545 -> 271
48545 -> 974
48545 -> 9184
48545 -> 12346
48545 -> 23455
48560 -> 998
48560 -> 11283
48565 -> 403
48565 -> 407
48576 -> 48626
48585 -> 10464
48585 -> 48590
48592 -> 48565
48592 -> 48599
48599 -> 788
48599 -> 791
48599 -> 48585
48610 -> 15178
48610 -> 15190
48610 -> 36179
48610 -> 52893
48610 -> 52895
48610 -> 52900
48612 -> 315
48615 -> 10277
48626 -> 13683
48646 -> 242
48646 -> 48649
48649 -> 242
48649 -> 42551
48655 -> 242
48655 -> 48649
48662 -> 1986
48662 -> 2399
48666 -> 315
48670 -> 1223
48670 -> 48662
48670 -> 48666
48670 -> 48676
48676 -> 831
48676 -> 833
48676 -> 846
48676 -> 5575
48676 -> 8531
48676 -> 8987
48676 -> 12346
48676 -> 49446
48676 -> 49448
48676 -> 49450
48676 -> 49452
48676 -> 49454
48676 -> 49456
48676 -> 49458
48676 -> 49460
48678 -> 989
48678 -> 9957
48678 -> 9984
48684 -> 48662
48684 -> 48670
48684 -> 48678
48692 -> 242
48694 -> 48703
48703 -> 827
48703 -> 2874
48703 -> 12082
48703 -> 28972
48703 -> 42667
48703 -> 42673
48703 -> 48723
48707 -> 8835
48707 -> 8859
48707 -> 48703
48716 -> 8835
48716 -> 8859
48716 -> 48723
48723 -> 2874
48723 -> 4981
48723 -> 12082
48723 -> 42629
48723 -> 45402
48723 -> 45416
48723 -> 48737
48727 -> 4153
48727 -> 48707
48737 -> 242
48770 -> 242
48772 -> 48777
48777 -> 49052
48777 -> 49074
48777 -> 49076
48777 -> 49086
48780 -> 48784
48784 -> 43794
48784 -> 45453
48784 -> 45461
48784 -> 49081
48784 -> 49086
48786 -> 48791
48791 -> 48797
48791 -> 49069
48793 -> 48797
48797 -> 49052
48797 -> 49074
48797 -> 49076
48797 -> 49121
48799 -> 48803
48803 -> 43794
48803 -> 45453
48803 -> 45461
48803 -> 49081
48803 -> 49121
48805 -> 48809
48809 -> 49052
48809 -> 49054
48809 -> 49056
48809 -> 49058
48811 -> 48816
48816 -> 48822
48816 -> 49069
48818 -> 48822
48822 -> 49054
48822 -> 49058
48822 -> 49063
48824 -> 48828
48828 -> 49052
48828 -> 49056
48828 -> 49074
48828 -> 49076
48830 -> 48834
48834 -> 43794
48834 -> 45453
48834 -> 45461
48834 -> 49056
48834 -> 49081
48836 -> 48840
48840 -> 49052
48840 -> 49074
48840 -> 49076
48840 -> 49091
48842 -> 48846
48846 -> 43794
48846 -> 45453
48846 -> 45461
48846 -> 49081
48846 -> 49091
48848 -> 48853
48853 -> 48859
48853 -> 49069
48855 -> 48859
48859 -> 49052
48859 -> 49063
48859 -> 49074
48859 -> 49076
48861 -> 48866
48866 -> 48872
48866 -> 49069
48868 -> 48872
48872 -> 43794
48872 -> 45453
48872 -> 45461
48872 -> 49063
48872 -> 49081
48874 -> 48879
48879 -> 48885
48879 -> 49069
48881 -> 48885
48885 -> 49052
48885 -> 49074
48885 -> 49076
48885 -> 49116
48887 -> 48892
48892 -> 48898
48892 -> 49069
48894 -> 48898
48898 -> 43794
48898 -> 45453
48898 -> 45461
48898 -> 49081
48898 -> 49116
48900 -> 48316
48905 -> 48338
48908 -> 48331
48914 -> 48324
48918 -> 48348
48923 -> 48343
48926 -> 48353
48930 -> 48358
48934 -> 48363
48940 -> 48694
48945 -> 48707
48948 -> 48727
48953 -> 48378
48958 -> 48382
48962 -> 48387
48967 -> 48391
48973 -> 48403
48977 -> 48409
48984 -> 48416
48988 -> 48420
48994 -> 48455
48999 -> 48491
49003 -> 48448
49008 -> 48496
49014 -> 48474
49018 -> 48478
49023 -> 48462
49028 -> 48472
49034 -> 48476
49039 -> 48592
49048 -> 242
49052 -> 1986
49052 -> 3456
49054 -> 50264
49056 -> 989
49058 -> 313
49058 -> 1183
49063 -> 1726
49063 -> 10325
49063 -> 10345
49063 -> 49056
49069 -> 4153
49074 -> 48018
49076 -> 44925
49081 -> 1986
49081 -> 3456
49081 -> 45453
49086 -> 989
49091 -> 989
49116 -> 1726
49116 -> 10325
49116 -> 10345
49116 -> 49091
49116 -> 49141
49121 -> 1726
49121 -> 10325
49121 -> 10345
49121 -> 49086
49200 -> 242
49200 -> 48649
49203 -> 242
49203 -> 48649
49207 -> 313
49207 -> 1986
49207 -> 2399
49215 -> 1726
49215 -> 1986
49215 -> 2399
49218 -> 1223
49218 -> 48676
49218 -> 49207
49218 -> 49211
49218 -> 49215
49229 -> 989
49229 -> 9957
49229 -> 9984
49233 -> 271
49233 -> 49207
49233 -> 49218
49233 -> 49225
49233 -> 49229
49256 -> 242
49257 -> 974
49257 -> 989
49257 -> 9941
49257 -> 9988
49257 -> 49265
49257 -> 49269
49265 -> 2628
49265 -> 4153
49265 -> 4157
49265 -> 6273
49269 -> 242
49269 -> 49297
49279 -> 242
49280 -> 8090
49280 -> 8822
49280 -> 49265
49280 -> 49269
49297 -> 3272
49335 -> 242
49337 -> 49272
49344 -> 49272
49350 -> 49272
49356 -> 49272
49368 -> 242
49369 -> 989
49369 -> 9941
49369 -> 9988
49369 -> 49265
49369 -> 49269
49375 -> 242
49376 -> 974
49376 -> 989
49376 -> 9941
49376 -> 9988
49376 -> 49265
49376 -> 49269
49392 -> 5348
49419 -> 242
49419 -> 42551
49422 -> 242
49428 -> 242
49428 -> 42557
49433 -> 242
49433 -> 42557
49446 -> 242
49448 -> 443
49448 -> 49446
49448 -> 49454
49448 -> 49456
49450 -> 315
49450 -> 443
49450 -> 49446
49450 -> 49454
49450 -> 49456
49450 -> 49464
49452 -> 443
49452 -> 846
49452 -> 2632
49452 -> 16970
49452 -> 49456
49458 -> 415
49458 -> 833
49458 -> 835
49458 -> 5575
49458 -> 14811
49458 -> 15178
49458 -> 15190
49458 -> 43139
49458 -> 49474
49460 -> 833
49460 -> 8600
49460 -> 14811
49460 -> 15178
49460 -> 15190
49464 -> 443
49464 -> 49456
49474 -> 14811
49474 -> 15178
49474 -> 15190
49507 -> 12346
49520 -> 5348
49547 -> 242
49566 -> 313
49566 -> 1986
49566 -> 4242
49566 -> 9803
49566 -> 10819
49571 -> 1986
49571 -> 2399
49571 -> 4242
49574 -> 313
49574 -> 315
49574 -> 1986
49574 -> 2399
49574 -> 13069
49577 -> 313
49577 -> 1986
49577 -> 2399
49577 -> 3272
49582 -> 313
49582 -> 11956
49586 -> 9822
49586 -> 49588
49590 -> 4282
49590 -> 9822
49590 -> 11987
49590 -> 49588
49592 -> 8967
49592 -> 49594
49596 -> 989
49596 -> 49592
49596 -> 49599
49599 -> 4295
49599 -> 9413
49599 -> 11947
49599 -> 49614
49601 -> 49603
49603 -> 9822
49603 -> 28049
49603 -> 44925
49605 -> 49599
49607 -> 989
49607 -> 49605
49614 -> 4282
49614 -> 11987
49614 -> 49588
49621 -> 49547
49627 -> 49571
49627 -> 49574
49627 -> 49577
49627 -> 49582
49627 -> 49636
49636 -> 9803
49642 -> 9811
49642 -> 12720
49642 -> 25136
49644 -> 8961
49644 -> 8963
49644 -> 9811
49644 -> 11987
49644 -> 12720
49644 -> 25136
49644 -> 49554
49644 -> 49557
49644 -> 49642
49649 -> 8961
49649 -> 8963
49649 -> 9811
49649 -> 12720
49649 -> 25136
49649 -> 49554
49649 -> 49642
49651 -> 4295
49651 -> 9413
49651 -> 11947
49651 -> 11987
49651 -> 49554
49651 -> 49614
49651 -> 49642
49696 -> 49698
49698 -> 242
49698 -> 49707
49707 -> 3272
49724 -> 49698
49732 -> 315
49732 -> 8914
49732 -> 49707
49732 -> 49737
49737 -> 1726
49737 -> 49750
49739 -> 49707
49739 -> 49732
49750 -> 1726
49757 -> 954
49757 -> 48590
49760 -> 989
49760 -> 1726
49762 -> 989
49762 -> 49707
49762 -> 49750
49762 -> 49760
49767 -> 954
49767 -> 989
49767 -> 1726
49767 -> 49737
49771 -> 954
49771 -> 49774
49774 -> 954
49779 -> 954
49779 -> 989
49782 -> 989
49782 -> 1726
49782 -> 49769
49787 -> 49782
49792 -> 315
49792 -> 989
49792 -> 49750
49795 -> 49797
49797 -> 37323
49799 -> 49804
49804 -> 49707
49804 -> 49760
49804 -> 49762
49804 -> 49767
49804 -> 49769
49804 -> 49771
49804 -> 49811
49811 -> 242
49811 -> 954
49811 -> 2404
49813 -> 49707
49813 -> 49760
49813 -> 49762
49813 -> 49767
49813 -> 49769
49813 -> 49771
49813 -> 49787
49813 -> 49811
49813 -> 49816
49843 -> 49845
49845 -> 49547
49850 -> 49571
49850 -> 49577
49850 -> 49854
49854 -> 12623
49854 -> 49554
49854 -> 49574
49856 -> 12623
49856 -> 49554
49856 -> 49566
49863 -> 8955
49863 -> 8961
49863 -> 8963
49863 -> 11947
49863 -> 22743
49863 -> 25977
49863 -> 25979
49866 -> 9822
49866 -> 44947
49866 -> 46018
49866 -> 49557
49866 -> 49560
49866 -> 49869
49869 -> 48018
49871 -> 4295
49871 -> 49614
49873 -> 49866
49873 -> 49871
49877 -> 9413
49877 -> 11947
49877 -> 49554
49877 -> 49560
49877 -> 49866
49877 -> 49871
49877 -> 49873
49882 -> 12618
49882 -> 12718
49882 -> 49557
49884 -> 8961
49884 -> 8963
49884 -> 9811
49884 -> 11947
49884 -> 12720
49884 -> 25136
49884 -> 25460
49884 -> 25977
49884 -> 49554
49913 -> 242
49938 -> 2206
49941 -> 2404
49943 -> 443
49943 -> 989
49943 -> 2206
49943 -> 49946
49948 -> 443
49948 -> 989
49948 -> 49946
49950 -> 2206
49950 -> 49946
49998 -> 242
50021 -> 45057
50021 -> 49707
50024 -> 45057
50024 -> 49707
50028 -> 45057
50028 -> 49707
50032 -> 50017
50040 -> 50043
50040 -> 50045
50043 -> 1726
50047 -> 50043
50047 -> 50045
50052 -> 1223
50060 -> 50043
50060 -> 50062
50064 -> 50052
50068 -> 50052
50068 -> 50054
50072 -> 989
50072 -> 50064
50075 -> 989
50075 -> 50064
50077 -> 50079
50079 -> 4153
50079 -> 8090
50079 -> 10314
50079 -> 50075
50084 -> 1726
50084 -> 10314
50084 -> 10345
50084 -> 50043
50084 -> 50075
50091 -> 443
50091 -> 1726
50091 -> 3886
50091 -> 49811
50091 -> 50043
50091 -> 50047
50091 -> 50052
50091 -> 50064
50095 -> 443
50095 -> 1223
50095 -> 2206
50095 -> 3272
50095 -> 49707
50095 -> 49811
50095 -> 50091
50143 -> 242
50145 -> 48018
50150 -> 45886
50158 -> 45886
50163 -> 48018
50167 -> 45886
50172 -> 48018
50176 -> 45886
50184 -> 45886
50189 -> 44947
50193 -> 45881
50202 -> 46238
50207 -> 46246
50213 -> 46252
50217 -> 44921
50217 -> 44925
50220 -> 44921
50220 -> 46238
50225 -> 44921
50225 -> 46246
50231 -> 44921
50231 -> 46252
50235 -> 48018
50239 -> 45886
50244 -> 48018
50248 -> 45886
50253 -> 46777
50258 -> 46782
50264 -> 313
50264 -> 3886
50276 -> 45540
50276 -> 45560
50276 -> 45577
50276 -> 45590
50279 -> 6204
50279 -> 50282
50282 -> 443
50282 -> 833
50282 -> 3095
50282 -> 11082
50282 -> 48052
50282 -> 48088
50282 -> 48217
50284 -> 2632
50284 -> 4157
50284 -> 6204
50284 -> 50282
50315 -> 5348
50331 -> 5348
50347 -> 5348
50365 -> 242
50369 -> 989
50369 -> 50379
50369 -> 50381
50381 -> 1031
50381 -> 1033
50381 -> 2632
50381 -> 3272
50381 -> 5969
50381 -> 6003
50381 -> 50394
50381 -> 50400
50381 -> 50403
50383 -> 2622
50383 -> 50369
50400 -> 242
50403 -> 8914
50403 -> 50429
50403 -> 50443
50421 -> 989
50421 -> 10787
50429 -> 313
50429 -> 2632
50429 -> 3272
50429 -> 50394
50429 -> 50417
50429 -> 50421
50443 -> 313
50443 -> 5962
50445 -> 2622
50445 -> 50403
50452 -> 50429
50452 -> 50443
50452 -> 50456
50456 -> 5969
50456 -> 6003
50458 -> 50465
50458 -> 50467
50458 -> 50469
50458 -> 50471
50458 -> 50473
50465 -> 50467
50465 -> 50502
50465 -> 50504
50467 -> 242
50471 -> 315
50471 -> 50452
50471 -> 50469
50471 -> 50471
50471 -> 50480
50471 -> 50483
50480 -> 313
50483 -> 313
50504 -> 315
50504 -> 50480
50504 -> 50483
50510 -> 242
50513 -> 50379
50513 -> 50517
50517 -> 2632
50517 -> 3272
50517 -> 50394
50519 -> 2622
50519 -> 50513
50527 -> 50530
50530 -> 2632
50530 -> 3272
50530 -> 50394
50543 -> 242
50547 -> 989
50547 -> 50379
50547 -> 50552
50552 -> 1033
50552 -> 2632
50552 -> 3272
50552 -> 5969
50552 -> 6003
50552 -> 11082
50552 -> 50394
50552 -> 50400
50552 -> 50403
50554 -> 2622
50554 -> 50547
50581 -> 5348
50592 -> 242
50597 -> 5962
50597 -> 5969
50597 -> 6003
50605 -> 2632
50605 -> 3272
50605 -> 50608
50650 -> 242
50656 -> 50660
50660 -> 9751
50662 -> 5146
50666 -> 10131
50670 -> 10136
50674 -> 1132
50677 -> 50680
50680 -> 407
50680 -> 998
50680 -> 4157
50680 -> 10247
50682 -> 10247
50689 -> 791
50689 -> 42216
50689 -> 50694
50689 -> 50696
50698 -> 9751
50698 -> 13683
50703 -> 6865
50703 -> 9751
50703 -> 14053
50703 -> 14100
50708 -> 9751
50708 -> 13683
50708 -> 50698
50708 -> 50712
50712 -> 10840
50712 -> 50712
50727 -> 9751
50727 -> 50660
50731 -> 4157
50731 -> 10789
50731 -> 10852
50731 -> 14100
50737 -> 4157
50741 -> 4157
50741 -> 10789
50741 -> 10852
50741 -> 50712
50745 -> 4157
50749 -> 4157
50749 -> 13827
50761 -> 50765
50765 -> 271
50765 -> 785
50765 -> 793
50765 -> 1132
50765 -> 1186
50765 -> 5146
50765 -> 9751
50765 -> 50731
50800 -> 242
50804 -> 242
50804 -> 13735
50807 -> 242
50807 -> 50811
50813 -> 242
50813 -> 50818
50820 -> 242
50820 -> 50824
50826 -> 242
50826 -> 50829
50831 -> 242
50831 -> 50836
50838 -> 242
50838 -> 50844
50846 -> 242
50846 -> 50850
50852 -> 242
50852 -> 50855
50857 -> 242
50857 -> 50861
50863 -> 242
50863 -> 50866
50868 -> 242
50868 -> 3138
50872 -> 242
50872 -> 50875
50877 -> 242
50877 -> 50881
50883 -> 242
50883 -> 50886
50888 -> 242
50888 -> 3123
50904 -> 50800
50904 -> 50908
50910 -> 50800
50910 -> 50913
50915 -> 50800
50915 -> 50917
50919 -> 9751
50919 -> 50800
50919 -> 50922
50924 -> 9751
50924 -> 50800
50924 -> 50922
50926 -> 3156
50926 -> 50800
50929 -> 3156
50929 -> 50800
50929 -> 50866
50932 -> 3152
50935 -> 9405
50939 -> 50942
50944 -> 50946
50948 -> 50953
50959 -> 242
50980 -> 242
50987 -> 242
50990 -> 46840
51013 -> 5348
51020 -> 51024
51024 -> 242
51024 -> 51031
51031 -> 4157
51031 -> 6273
51040 -> 5575
51040 -> 43271
51040 -> 51048
51040 -> 51053
51048 -> 242
51053 -> 242
51055 -> 51063
51063 -> 242
51083 -> 315
51083 -> 15552
51085 -> 10998
51098 -> 15552
51100 -> 10998
51114 -> 313
51114 -> 49797
51114 -> 49816
51114 -> 51118
51118 -> 2206
51118 -> 50731
51132 -> 242
51155 -> 51020
51155 -> 51040
51169 -> 242
51182 -> 4844
51182 -> 4850
51182 -> 4852
51182 -> 4856
51182 -> 4864
51182 -> 4866
51182 -> 6667
51182 -> 6680
51182 -> 6828
51182 -> 11082
51182 -> 51187
51217 -> 44315
51221 -> 44315
51225 -> 44315
51260 -> 51262
51262 -> 13643
51273 -> 51279
51281 -> 51262
51284 -> 51262
51287 -> 51262
51289 -> 51262
51292 -> 51262
51295 -> 51262
51298 -> 51262
51313 -> 12346
51317 -> 398
51321 -> 398
51323 -> 4860
51325 -> 439
51328 -> 443
51332 -> 51262
51335 -> 51262
51338 -> 51262
51341 -> 51262
51344 -> 387
51344 -> 51262
51347 -> 387
51347 -> 51262
51350 -> 1726
51350 -> 51262
51352 -> 403
51352 -> 51262
51354 -> 407
51354 -> 51262
51356 -> 411
51356 -> 51262
51358 -> 415
51360 -> 419
51360 -> 51262
51362 -> 6447
51362 -> 51262
51365 -> 6447
51365 -> 51262
51368 -> 434
51368 -> 51262
51371 -> 18325
51371 -> 51262
51374 -> 989
51374 -> 51262
51376 -> 991
51376 -> 51262
51378 -> 956
51378 -> 51262
51381 -> 956
51381 -> 51262
51384 -> 974
51384 -> 51262
51387 -> 956
51387 -> 51262
51390 -> 998
51390 -> 51262
51392 -> 1005
51392 -> 51262
51394 -> 958
51394 -> 51262
51396 -> 1017
51396 -> 51262
51398 -> 1024
51398 -> 51262
51400 -> 1031
51400 -> 51262
51402 -> 1033
51402 -> 51262
51404 -> 1045
51404 -> 51262
51406 -> 1052
51406 -> 51262
51408 -> 1059
51408 -> 51262
51410 -> 1066
51410 -> 51262
51412 -> 1077
51412 -> 51262
51415 -> 1084
51415 -> 51262
51417 -> 1086
51417 -> 51262
51419 -> 1098
51419 -> 51262
51421 -> 1105
51421 -> 51262
51423 -> 1112
51423 -> 51262
51425 -> 1119
51425 -> 51262
51427 -> 313
51427 -> 625
51427 -> 51262
51432 -> 313
51432 -> 625
51432 -> 51262
51436 -> 642
51436 -> 51262
51442 -> 642
51442 -> 51262
51448 -> 658
51448 -> 51262
51456 -> 658
51456 -> 51262
51464 -> 678
51464 -> 51262
51474 -> 678
51474 -> 51262
51490 -> 242
51511 -> 242
51514 -> 2968
51514 -> 3272
51514 -> 6204
51514 -> 14801
51514 -> 42663
51651 -> 242
51653 -> 7330
51653 -> 51657
51667 -> 51667
51671 -> 51667
51702 -> 51705
51705 -> 439
51705 -> 443
51705 -> 7330
51705 -> 51657
51707 -> 51710
51710 -> 443
51710 -> 51914
51710 -> 51927
51710 -> 51930
51714 -> 51705
51717 -> 51710
51746 -> 51657
51762 -> 958
51772 -> 51780
51772 -> 51785
51772 -> 51789
51780 -> 443
51780 -> 1726
51780 -> 6447
51780 -> 51785
51780 -> 51807
51780 -> 51811
51780 -> 51817
51785 -> 242
51785 -> 7330
51785 -> 51657
51789 -> 443
51789 -> 51785
51789 -> 51807
51789 -> 51817
51807 -> 51657
51807 -> 51811
51811 -> 242
51817 -> 51785
51817 -> 51807
51834 -> 51828
51834 -> 51831
51845 -> 51834
51850 -> 51828
51850 -> 51831
51855 -> 51657
51867 -> 242
51883 -> 6447
51911 -> 51914
51911 -> 51917
51924 -> 51911
51924 -> 51914
51924 -> 51927
51924 -> 51930
51935 -> 51914
51935 -> 51927
51935 -> 51930
51935 -> 51939
51959 -> 407
51968 -> 51917
51982 -> 51917
51997 -> 9751
52000 -> 9751
52003 -> 9751
52006 -> 9751
52009 -> 9751
52012 -> 9751
52016 -> 9751
52020 -> 9751
52024 -> 9751
52028 -> 9751
52033 -> 9751
52037 -> 9751
52041 -> 9751
52045 -> 9751
52049 -> 9751
52056 -> 51917
52064 -> 52072
52064 -> 52076
52072 -> 52210
52072 -> 52212
52072 -> 52217
52072 -> 52219
52076 -> 52210
52076 -> 52212
52076 -> 52215
52076 -> 52217
52076 -> 52219
52082 -> 242
52085 -> 52087
52085 -> 52089
52085 -> 52091
52085 -> 52093
52087 -> 52165
52087 -> 52178
52087 -> 52193
52089 -> 52178
52097 -> 242
52100 -> 52101
52100 -> 52103
52100 -> 52105
52101 -> 52089
52101 -> 52158
52101 -> 52160
52101 -> 52165
52109 -> 242
52111 -> 7330
52111 -> 52112
52111 -> 52114
52112 -> 52089
52112 -> 52158
52112 -> 52160
52112 -> 52165
52112 -> 52178
52143 -> 242
52145 -> 52089
52145 -> 52154
52145 -> 52156
52145 -> 52158
52145 -> 52160
52154 -> 52089
52154 -> 52158
52154 -> 52160
52154 -> 52165
52156 -> 52089
52156 -> 52158
52156 -> 52160
52156 -> 52165
52158 -> 52178
52160 -> 52178
52193 -> 52158
52193 -> 52165
52212 -> 313
52219 -> 4860
52244 -> 242
52263 -> 52265
52265 -> 35425
52265 -> 52269
52269 -> 242
52272 -> 4056
52287 -> 12800
52299 -> 52263
52305 -> 2836
52305 -> 2840
52305 -> 35631
52305 -> 52287
52308 -> 2804
52308 -> 35631
52311 -> 2878
52311 -> 35618
52313 -> 2849
52313 -> 12800
52316 -> 242
52318 -> 52325
52325 -> 52331
52331 -> 242
52355 -> 2804
52355 -> 2806
52355 -> 2878
52355 -> 52357
52357 -> 11771
52357 -> 52384
52367 -> 4056
52384 -> 242
52384 -> 1986
52404 -> 52384
52409 -> 52411
52419 -> 52411
52421 -> 2849
52423 -> 10989
52480 -> 52484
52480 -> 52486
52484 -> 242
52484 -> 2804
52484 -> 2806
52484 -> 52404
52484 -> 52476
52486 -> 242
52489 -> 52291
52496 -> 28972
52512 -> 2836
52515 -> 52518
52528 -> 242
52528 -> 46749
52551 -> 242
52569 -> 28343
52576 -> 28343
52586 -> 6865
52586 -> 52590
52590 -> 52647
52604 -> 788
52604 -> 6865
52604 -> 52590
52612 -> 5348
52620 -> 5575
52620 -> 20257
52633 -> 2983
52638 -> 313
52647 -> 313
52661 -> 2983
52688 -> 242
52701 -> 313
52701 -> 827
52701 -> 831
52701 -> 835
52701 -> 1986
52701 -> 12348
52701 -> 52688
52701 -> 52694
52701 -> 52696
52701 -> 52719
52701 -> 52727
52719 -> 242
52722 -> 12346
52722 -> 52694
52727 -> 242
52730 -> 12346
52730 -> 52694
52773 -> 52778
52778 -> 53435
52780 -> 45299
52814 -> 788
52814 -> 2399
52814 -> 2874
52825 -> 5348
52834 -> 8165
52834 -> 52839
52839 -> 5575
52839 -> 10436
52839 -> 10460
52851 -> 8165
52851 -> 43273
52871 -> 45358
52906 -> 242
52936 -> 9751
52942 -> 9751
52951 -> 9751
52957 -> 439
52957 -> 443
52957 -> 11166
52995 -> 242
53003 -> 15552
53003 -> 52999
53009 -> 49797
53014 -> 10998
53016 -> 242
53016 -> 1942
53016 -> 49797
53020 -> 52995
53027 -> 2206
53030 -> 313
53030 -> 2206
53035 -> 49797
53037 -> 4844
53037 -> 4846
53037 -> 4856
53037 -> 7864
53037 -> 53030
53075 -> 25703
53080 -> 25703
53086 -> 403
53086 -> 53100
53086 -> 53102
53102 -> 53100
53121 -> 242
53121 -> 25588
53125 -> 53128
53128 -> 53108
53128 -> 53113
53128 -> 53115
53128 -> 53136
53160 -> 53128
53187 -> 35747
53229 -> 242
53229 -> 53244
53229 -> 53248
53232 -> 53229
53244 -> 403
53244 -> 53100
53244 -> 53260
53248 -> 8562
53248 -> 11783
53260 -> 53100
53279 -> 242
53279 -> 27298
53283 -> 53286
53286 -> 53266
53286 -> 53271
53286 -> 53273
53286 -> 53294
53319 -> 53248
53319 -> 53286
53341 -> 35747
53362 -> 2945
53362 -> 8525
53362 -> 8527
53372 -> 3873
53378 -> 16515
53380 -> 8525
53380 -> 8527
53382 -> 2945
53420 -> 7330
53422 -> 242
53435 -> 6865
53435 -> 51917
53435 -> 51939
53440 -> 51911
53440 -> 53435
53445 -> 45299
53445 -> 51911
53457 -> 53435
53476 -> 1726
53476 -> 45297
53488 -> 1638
53496 -> 439
53496 -> 4860
53496 -> 9405
53496 -> 50886
53496 -> 53502
53505 -> 53509
53509 -> 974
53509 -> 52056
53509 -> 53516
53516 -> 403
53516 -> 407
53516 -> 3272
53516 -> 10840
53516 -> 51705
53547 -> 242
53551 -> 10464
53551 -> 46840
53592 -> 5348
53600 -> 8741
53605 -> 53620
53610 -> 242
53610 -> 2628
53610 -> 53648
53610 -> 53656
53613 -> 53605
53620 -> 53610
53622 -> 53620
53631 -> 53610
53631 -> 53639
53639 -> 3272
53639 -> 53750
53648 -> 1183
53648 -> 10789
53648 -> 10873
53656 -> 315
53658 -> 242
53658 -> 2874
53658 -> 53661
53661 -> 315
53661 -> 2874
53665 -> 315
53665 -> 403
53665 -> 415
53673 -> 315
53678 -> 53648
53692 -> 3272
53692 -> 53671
53692 -> 53673
53702 -> 315
53705 -> 53707
53717 -> 5575
53731 -> 53678
53731 -> 53715
53739 -> 53702
53739 -> 53712
53744 -> 53648
53744 -> 53707
53757 -> 3272
53757 -> 53702
53769 -> 4875
53772 -> 4870
53772 -> 7180
53772 -> 11082
53772 -> 35733
53772 -> 35735
53785 -> 242
53785 -> 1340
53785 -> 51511
53793 -> 1640
53796 -> 53799
53801 -> 1384
53804 -> 1351
53808 -> 53811
53813 -> 48127
53815 -> 11385
53820 -> 53825
53827 -> 6632
53827 -> 53041
53827 -> 53801
53832 -> 1353
53832 -> 1355
53832 -> 1363
53832 -> 1379
53832 -> 1384
53832 -> 3873
53840 -> 16515
53840 -> 53825
}
